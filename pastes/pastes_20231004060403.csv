id,title,username,language,date,content
s97RmPcL,DSA vector 2,Sharad_104,C++,Wednesday 4th of October 2023 12:12:06 AM CDT,"#include <bits/stdc++.h>
using namespace std;

// program 2
void f(vector<int>::iterator it1, vector<int>::iterator it2) {
    while (it1 != it2) {
        cout << *(it1) << "" "";
        it1++;
    }
    cout << ""\n"";
}

// program 4
void fr(vector<int>::reverse_iterator it1, vector<int>::reverse_iterator it2) {
    while (it1 != it2) {
        cout << *(it1) << "" "";
        it1++;
    }
    cout << ""\n"";
}

// program 6
void f1(vector<int> &v) { // & refers to the original one
    sort(v.begin(), v.end());
}

void f2(vector<int> &v) {
    reverse(v.begin(), v.end());
}

int main() {
    // program 1
    vector<vector<int>> v{{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};

    for (int i = 0; i < v.size(); i++) {
        for (int j = 0; j < v[i].size(); j++) {  // Fixed the comma to a semicolon
            cout << v[i][j] << "" "";
        }
        cout << ""\n"";
    }

    for (vector<int> v1 : v) {
        for (auto e : v1)  // Fixed the variable name from v to v1
            cout << e << "" "";
        cout << ""\n"";
    }

    // program 3 (dependent on program 2)
    /* int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        vector <int> v;

        for(int i = 0; i<n;i++){
            int x;
            cin>>x;
            v.push_back(x);
        }
         // f(v.begin(),v.end()); forward iteration
         fr(v.rbegin(),v.rend()); // reverse iteration
    } */

    // program 5 (dependent on program 6)
    int t;
    cin >> t;
    vector<int> v;
    while (t--) {
        f1(v); // sort
        for (auto e : v)
            cout << e << "" "";
        cout << ""\n"";

        f2(v); // reverse
        for (auto e : v)
            cout << e << "" "";
        cout << ""\n"";
    }

    return 0;
}
"
rNBp4Ay9,snowybot good,coinwalk,JavaScript,Tuesday 3rd of October 2023 11:45:14 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/240).toFixed(8));
var blert = nudle;
var taget = (smmly*2000);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<sinch)&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=sinch)&&(nemo<=sunch)) { 
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*4)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>=(mighty+(nudle*240))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
qhrv3RE4,N-Queen Problem,jayati,C++,Tuesday 3rd of October 2023 11:45:10 PM CDT,"//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
public:
    vector<vector<int>> ans;
    bool isSafe(vector<vector<int>> &board,int r,int c,int n)
    {
        for(int i=0;i<r;i++)
        {
            if(board[i][c]==1)
            {
                return false;
            }
        }
        for(int i=r-1,j=c-1;i>=0 && j>=0;i--,j--)
        {
            if(board[i][j]==1)
            {
                return false;
            }
        }
        for(int i=r-1,j=c+1;i>=0 && j<n;i--,j++)
        {
            if(board[i][j]==1)
            {
                return false;
            }
        }
        return true;
    }
    void helper(vector<vector<int>> &board,int n,int r)
    {
        if(r==n)
        {
            vector<int> temp;
            for(int i=0;i<n;i++)
            {
                for(int j=0;j<n;j++)
                {
                    if(board[i][j]==1)
                    {
                        temp.push_back(j+1);
                    }
                }
            }
            ans.push_back(temp);
            return;
        }
        for(int i=0;i<n;i++)
        {
            if(isSafe(board,r,i,n))
            {
                board[r][i]=1;
                helper(board,n,r+1);
                board[r][i]=0;
            }
        }
    }
    vector<vector<int>> nQueen(int n) {
        // code here
        vector<vector<int>> board(n,vector<int>(n,0));
        helper(board,n,0);
        return ans;
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        
        Solution ob;
        vector<vector<int>> ans = ob.nQueen(n);
        if(ans.size() == 0)
            cout<<-1<<""\n"";
        else {
            for(int i = 0;i < ans.size();i++){
                cout<<""["";
                for(int u: ans[i])
                    cout<<u<<"" "";
                cout<<""] "";
            }
            cout<<endl;
        }
    }
    return 0;
}
// } Driver Code Ends"
2Ghj81jc,snowybot good,coinwalk,JavaScript,Tuesday 3rd of October 2023 10:53:14 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/240).toFixed(8));
var blert = nudle;
var taget = (smmly*7);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<sinch)&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=sinch)&&(nemo<=sunch)) { 
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>=(mighty+(nudle*240))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
vNusJcR7,fbtc,coinwalk,JavaScript,Tuesday 3rd of October 2023 10:52:51 PM CDT,"var smmly = parseFloat(document.getElementById('balance').innerHTML);
var nudle = Number((0.00000001).toFixed(8));
var blert = nudle;
var taget = 1.0;
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var lol = true;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var junky = smmly;
var bear = true;
var distj = ((blert*1).toFixed(8));
var zuggbe = ((blert*1).toFixed(8));
var nemo = parseFloat(document.getElementById('balance').innerHTML);
 
 
function get(){
nemo = document.getElementById('balance').innerHTML;
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<sinch)&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=sinch)&&(nemo<=sunch)) { 
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>=(mighty+(nudle*240))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
zuggbe = ((blert*1).toFixed(8));
if ((nemo==junky)&&(bear)){
document.getElementById('double_your_btc_win_chance').value = 47.50;
document.getElementById('double_your_btc_payout_multiplier').value = 2.00;
parseFloat(document.getElementById('double_your_btc_stake').value = zuggbe);
parseFloat(document.getElementById('win_amount').innerHTML = zuggbe);
document.getElementById('double_your_btc_bet_lo_button').click();
bear = false;
}
if ((nemo!=junky)&&(!bear)){
junky = parseFloat(nemo);
bear = true;
}
if (nemo>=taget) {
return;
}
setTimeout(() => get(), 1);
}
get();"
kPdspznX,AHP insumos - Pablo Balian - Scam - Spam - Estafador [10-1/2023],bombaires,HTML,Tuesday 3rd of October 2023 10:12:35 PM CDT,"AHP insumos - Pablo Balian - Spam - Estafa 

http://cutt.us/sl6nW mas info y formulario, pega este enlace en tu navegador

   ahpinsumos.com.ar
   Real names - Los nombres reales: Pablo Ariel Balian - Patricio Giorno - Sebastian Redondo - Andrea Paola C.
   CUIT (Pablo Ariel Balian): 20-25855667-5
   DNI (Pablo Ariel Balian): 25855667
   DUNS (Pablo Ariel Balian): 972344909
   Date of birth - Fecha de nacimiento [mm/dd/yyyy] (Pablo Ariel Balian): 4/9/1977
   Physical address - Dirección real (Pablo Ariel Balian): General José
   Maria Paz 1477 - 1602 Florida Pay Pablo Ariel Balian a visit!
   Avenida General San Martín 2002 - B1602BWS Florida  Pay Pablo Ariel a visit
   Mariano Acha 4939 - C1430DWU Saavedra (Pablo Ariel Balian private)
   Phone - Teléfono: +54 (0)11 5258-0201
   +54 (0)11 5368-2100
   +54 (0)11 4797-3647
   +54 (0)11 4718-1554
   +54 (0)11 4795-4030
   +54 (0)11 5185-9391 (mobile)
   +54 (0)11 3312-5705 (mobile)
   +54 (0)11 6095-1149 (mobile)
   The computer name using for spamming are LuffiPC or Pablo-PC2.
   info@ahpinsumos.com.ar
   ventas@ahpinsumos.com.ar
   ahp@fibertel.com.ar
   ahpinsumos@fibertel.com.ar
   Andrea Paola C. ahpandrea@gmail.com
   ahpinsumospablo@fibertel.com.ar
   comunidadahp@gmail.com
   ahp1477@yahoo.com.ar
   venta@ahpinsumos.com.ar (?) Is this correct?
   ahpinsumos@gmail.com
   aghepa@hotmail.com
   novedades@ahpinsumos.com.ar (?) Is this correct?
   boletin@ahpinsumos.com.ar (?) Is this correct?"
wnPB5cej,lista1-atv4-v1,AAugustoMenezes,Dart,Tuesday 3rd of October 2023 10:08:19 PM CDT,"void main() {
  Endereco enderecoCliente =
      Endereco(cep: '14500-999', cidade: 'Algum lugar');
 
  Cliente c1 = Cliente('Augusto Menezes', endereco: enderecoCliente);
 
  Cliente c2 = Cliente('Maria da Silva');
 
  print(criaEtiqueta(c1));
  print(criaEtiqueta(c2));
}

class Cliente {
  String nome;
  Endereco? endereco = null;

  Cliente(this.nome, {Endereco? endereco}) : endereco = endereco ?? null;
}

class Endereco {
  String cep;
  String cidade;

  Endereco({required this.cep, required this.cidade});
}

criaEtiqueta(Cliente cliente) {
  if (cliente.endereco?.cep != null) {
    return '$cliente.nome  - CEP $cliente.endereco.cep';
  } else {
    return '$cliente.nome  -  CEP não informado';
  }
}
"
reUgYPcf,lista1-atv4-v2,AAugustoMenezes,Dart,Tuesday 3rd of October 2023 10:03:46 PM CDT,"class Cliente {
  String nome;
  Endereco? endereco;

  Cliente(this.nome, {Endereco? endereco}) : endereco = endereco ?? null;
}

class Endereco {
  String cep;
  String cidade;

  Endereco({required this.cep, required this.cidade});
}

criaEtiqueta(Cliente cliente) {
  String nome = cliente.nome;
  String cep = cliente.endereco?.cep ?? 'não informado';

  return '$nome - CEP $cep';
}

void main() {
  
  Endereco enderecoCliente = Endereco(cep: '43700-000', cidade: 'Simões Filho');
  Cliente cliente1 = Cliente('Augusto Menezes', endereco: enderecoCliente);

  Cliente cliente2 = Cliente('Joana Almeida');

  print(criaEtiqueta(cliente1));
  print(criaEtiqueta(cliente2));
}"
HnVC4kBQ,Mad,Unknown_No_1,PHP,Tuesday 3rd of October 2023 09:50:54 PM CDT,MadGamerTG
GGcevEeq,Error handler springboot,RobertoMessaBrasil,Java,Tuesday 3rd of October 2023 09:32:21 PM CDT,"package com.aaa;
public class BasicException extends Exception {}

package com.aaa.bbb;
public class MyException extends BasicException {}

@ExceptionHandler(value = BasicException.class)
@ResponseStatus(value = HttpStatus.BAD_REQUEST)
public String handleException(BasicException ex) {
    return ex.getMessage()
    // ira mandar para o cliente com.aaa.bbb.MyException
}
"
ZBw74wZG,Error handler springboot,RobertoMessaBrasil,Java,Tuesday 3rd of October 2023 09:31:28 PM CDT,"package com.aaa;
public class BasicException extends Exception {}

package com.aaa.bbb;
public class MyException extends BasicException {}

@ExceptionHandler(value = BasicException.class)
@ResponseStatus(value = HttpStatus.BAD_REQUEST)
public String handleException(BasicException ex) {
    return ex.getMessage()
}
"
PApS0hqP,Untitled,tomdodd4598,Java,Tuesday 3rd of October 2023 08:35:49 PM CDT,"public class InventoryStackList extends NonNullList<ItemStack> {
	
	public InventoryStackList() {
		super();
	}
	
	public InventoryStackList(List<ItemStack> other) {
		super(other, null);
	}
	
	@Override
	public List<ItemStack> subList(int fromIndex, int toIndex) {
		return new SubList<>(this, fromIndex, toIndex);
	}
	
	class SubList<E> extends NonNullList<E> {
		
		private final AbstractList<E> internal;
		private final int offset;
		private int size;
		
		SubList(AbstractList<E> list, int fromIndex, int toIndex) {
			if (fromIndex < 0) {
				throw new IndexOutOfBoundsException(""fromIndex = "" + fromIndex);
			}
			if (toIndex > list.size()) {
				throw new IndexOutOfBoundsException(""toIndex = "" + toIndex);
			}
			if (fromIndex > toIndex) {
				throw new IllegalArgumentException(""fromIndex("" + fromIndex + "") > toIndex("" + toIndex + "")"");
			}
			internal = list;
			offset = fromIndex;
			size = toIndex - fromIndex;
			// this.modCount = internal.modCount;
		}
		
		@Override
		public E set(int index, E element) {
			rangeCheck(index);
			checkForComodification();
			return internal.set(index + offset, element);
		}
		
		@Override
		public E get(int index) {
			rangeCheck(index);
			checkForComodification();
			return internal.get(index + offset);
		}
		
		@Override
		public int size() {
			checkForComodification();
			return size;
		}
		
		@Override
		public void add(int index, E element) {
			rangeCheckForAdd(index);
			checkForComodification();
			internal.add(index + offset, element);
			// this.modCount = internal.modCount;
			++size;
		}
		
		@Override
		public E remove(int index) {
			rangeCheck(index);
			checkForComodification();
			E result = internal.remove(index + offset);
			// this.modCount = internal.modCount;
			--size;
			return result;
		}
		
		private Method removeRangeMethod = null;
		
		@Override
		protected void removeRange(int fromIndex, int toIndex) {
			checkForComodification();
			if (removeRangeMethod == null) {
				try {
					removeRangeMethod = NonNullList.class.getMethod(""removeRange"", int.class, int.class);
				}
				catch (NoSuchMethodException | SecurityException e) {
					throw new UnsupportedOperationException();
				}
			}
			try {
				removeRangeMethod.invoke(internal, fromIndex + offset, toIndex + offset);
			}
			catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {
				throw new UnsupportedOperationException();
			}
			// this.modCount = internal.modCount;
			size -= (toIndex - fromIndex);
		}
		
		@Override
		public boolean addAll(Collection<? extends E> c) {
			return addAll(size, c);
		}
		
		@Override
		public boolean addAll(int index, Collection<? extends E> c) {
			rangeCheckForAdd(index);
			int cSize = c.size();
			if (cSize == 0) {
				return false;
			}
			
			checkForComodification();
			internal.addAll(offset + index, c);
			// this.modCount = internal.modCount;
			size += cSize;
			return true;
		}
		
		@Override
		public Iterator<E> iterator() {
			return listIterator();
		}
		
		@Override
		public ListIterator<E> listIterator(final int index) {
			checkForComodification();
			rangeCheckForAdd(index);
			
			return new ListIterator<E>() {
				
				private final ListIterator<E> internalIter = internal.listIterator(index + offset);
				
				@Override
				public boolean hasNext() {
					return nextIndex() < size;
				}
				
				@Override
				public E next() {
					if (hasNext()) {
						return internalIter.next();
					}
					else {
						throw new NoSuchElementException();
					}
				}
				
				@Override
				public boolean hasPrevious() {
					return previousIndex() >= 0;
				}
				
				@Override
				public E previous() {
					if (hasPrevious()) {
						return internalIter.previous();
					}
					else {
						throw new NoSuchElementException();
					}
				}
				
				@Override
				public int nextIndex() {
					return internalIter.nextIndex() - offset;
				}
				
				@Override
				public int previousIndex() {
					return internalIter.previousIndex() - offset;
				}
				
				@Override
				public void remove() {
					internalIter.remove();
					// SubList.this.modCount = internal.modCount;
					--size;
				}
				
				@Override
				public void set(E e) {
					internalIter.set(e);
				}
				
				@Override
				public void add(E e) {
					internalIter.add(e);
					// SubList.this.modCount = internal.modCount;
					++size;
				}
			};
		}
		
		@Override
		public List<E> subList(int fromIndex, int toIndex) {
			return new SubList<>(this, fromIndex, toIndex);
		}
		
		private void rangeCheck(int index) {
			if (index < 0 || index >= size) {
				throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
			}
		}
		
		private void rangeCheckForAdd(int index) {
			if (index < 0 || index > size) {
				throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
			}
		}
		
		private String outOfBoundsMsg(int index) {
			return ""Index: "" + index + "", Size: "" + size;
		}
		
		private void checkForComodification() {
			/*if (this.modCount != internal.modCount) {
				throw new ConcurrentModificationException();
			}*/
		}
	}
}
"
5Ug8Tzvp,CS2 Config,RUSS14ND0G,Bash,Tuesday 3rd of October 2023 08:20:49 PM CDT,"//CLEAR
 
	unbindall
 
//MOUSE 
 
	sensitivity ""3.63""
	zoom_sensitivity_ratio ""0.818933027098955175""
	
	bind ""MOUSE_X"" ""yaw""
	bind ""MOUSE_Y"" ""pitch""
 
 	bind ""MOUSE1"" ""+attack""
	bind ""MOUSE2"" ""+attack2""
	bind ""MOUSE3"" ""player_ping""
	bind mwheeldown ""+jump""
	bind mwheelup ""+jump""
 
	bind ""MOUSE5"" ""exec jumpthrow""
 


	bind ""MOUSE4"" ""+voicerecord""
	voice_loopback 1
 
 
 
//ALIASES
 
    //SILENCE IN DM
	alias dm  ""ignorerad; ignoremsg; voice_modenable 0""
 
    //EASY DISCONNECT
	alias dc  ""disconnect""
 
    //showscores
	bind ""tab"" ""+showscores""
	
	//jumpthrow
	// alias jumpthrow ""+jump; -attack; -attack2 ;-jump""
 

//KEYBOARD
 
    //DIRECTIONAL
 
    bind ""w"" ""+forward""
    bind ""s"" ""+back""
    bind ""a"" ""+left""
    bind ""d"" ""+right""
    bind ""ctrl"" ""+duck;""
    bind ""shift"" ""+sprint""
	bind ""SPACE"" ""+jump""
 
    //INTERACT/SELECT
 
    bind ""r"" ""+reload""
    bind ""e"" ""+use;""
    bind ""g"" ""drop;""
    bind ""q"" ""lastinv""
	bind ""0"" ""slot0""
    bind ""1"" ""slot1""
    bind ""2"" ""slot2""
    bind ""3"" ""slot3""
    bind ""4"" ""slot4""
    bind ""5"" ""slot5""
	bind ""5"" ""slot5""
	bind ""6"" ""slot6""
	bind ""7"" ""slot7""
	bind ""8"" ""slot8""
	bind ""9"" ""slot9""
    bind ""f"" ""+lookatweapon""
	bind ""i"" ""toggle show_loadout_toggle""
	bind ""b"" ""buymenu""
	bind ""m"" ""teammenu""
    bind ""u"" ""say_team""
	bind ""t"" ""+spray_menu""
	bind ""y"" ""messagemode""
	bind x ""toggle voice_modenable""
	bind z ""use weapon_knife; use weapon_c4; drop; slot1""
	bind c ""use slot12""
	bind k ""toggle cl_drawhud;toggle cl_draw_only_deathnotices""
 
 
	//SPECIAL SHIT
 
	bind ""DEL"" ""dm;+name""
	bind ""INS"" ""dc""
	bind ""F3"" ""autobuy""
	bind ""F4"" ""rebuy""
	bind ""F9"" ""toggleconsole""
	bind ""F10"" cs_quit_prompt
 
    //BUY
	bind KP_1 ""buy smokegrenade""
	bind KP_2 ""buy hegrenade""
	bind KP_3 ""buy flashbang""
	bind KP_0 ""buy molotov; buy incgrenade""
	bind KP_DEL ""buy decoy""
	bind KP_7 ""buy vesthelm""
	bind KP_8 ""buy defuser""
	bind KP_9 ""buy vest""
	bind KP_4 ""buy m4a4; buy ak47""
	bind KP_5 ""buy awp""
	bind ""kp_minus"" ""buy awp; buy p250""
	bind KP_6 ""buy galilar; buy famas""
	bind ""kp_plus"" ""buy mac10; buy mp9""
	bind ""kp_enter"" ""buy p90""
	bind ""kp_multiply"" ""buy m4a1; buy g3sg1""
	bind ""/"" ""buy ssg08""
	bind ""uparrow"" ""buy deagle; buy revolver""
	bind ""downarrow"" ""buy p250""
	bind ""leftarrow"" ""buy tec9; buy fiveseven""
	bind ""rightarrow"" ""buy elite""

//VOLUME
 
	snd_tensecondwarning_volume "".03""
	snd_menumusic_volume ""0""
	snd_roundend_volume ""0.02""
	snd_roundstart_volume ""0""
	snd_deathcamera_volume ""0""
	snd_mapobjective_volume ""0""
	snd_roundstart_volume 0
	snd_roundend_volume 0
	snd_deathcamera_volume 0

//HUD
 
	cl_use_opens_buy_menu 0
	cl_showloadout 1
	sv_steamgroup 1
	cl_color 3
	cl_hud_color ""0""
	cl_hud_radar_scale ""1.3""
	hud_scaling ""0.900000""
	hud_showtargetid ""1""
	cl_radar_always_centered ""1""
	cl_radar_icon_scale_min ""1.000000""
	cl_radar_rotate ""1""
	cl_radar_scale ""1.000000""
	cl_radar_square_with_scoreboard ""1"" 
 
 

 
 
//VIEWMODEL
 
	viewmodel_fov ""68""
	viewmodel_offset_x ""2.5""
	viewmodel_offset_y ""2""
	viewmodel_offset_z ""-2""
	viewmodel_presetpos ""0""

 
//EXTRA
 
	fps_max 500
	joystick false
	mm_dedicated_search_maxping 45
	host_writeconfig
 
 

//-novid -nojoy -exec autoexec -high -tickrate 128 +mat_queue_mode 2 -threads 8


clear
 
echo ""config loaded"""
EV97thnN,Maximum subset XOR,jayati,C++,Tuesday 3rd of October 2023 08:15:11 PM CDT,"//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// Function to return maximum XOR subset in set[]

class Solution
{
    public:
    int maxSubsetXOR(int arr[], int N)
    {
        //Your code here
        int mx=*max_element(arr,arr+N);
        int msb=31;
        for(int i=31;i>=0;i--)
        {
            int ibit= (mx >> i)&1;
            if(ibit==1)
            {
                msb=i;
                break;
            }
        }
        int curr=0;
        for(int i=msb;i>=0;i--)
        {
            int mxindex=0;
            int mxele=INT_MIN;
            for(int j=curr;j<N;j++)
            {
                int setbit=(arr[j]>>i) &1;
                if(setbit!=0 && arr[j]>mxele)
                {
                    mxele= arr[j];
                    mxindex=j;
                }
            }
            if(mxele == INT_MIN)
            {
                continue;
            }
            swap(arr[curr],arr[mxindex]);
            for(int k=0;k<N;k++)
            {
                if(k==curr)
                {
                    continue;
                }
                if((arr[k]>>i) &1==1)
                {
                    arr[k]=arr[k]^arr[curr];
                }
            }
            curr++;
        }
        int ans=0;
        for(int i=0;i<N;i++)
        {
            ans=ans^arr[i];
        }
        
        return ans;
    }
};

//{ Driver Code Starts.
int main()
{

    int t,n,a[100004],k;
    scanf(""%d"",&t);
    while(t--)
    {
        //cin>>n;
       scanf(""%d"",&n);
        for(int i=0;i<n;i++)
        {
            scanf(""%d"",&a[i]);
        }
        Solution obj;
        printf(""%d\n"",obj.maxSubsetXOR(a,n));
       // cout<<bin(a,0,n-1,k)<<endl;
    }
}
// } Driver Code Ends"
D64XVUwj,Untitled,tifaout,JSON,Tuesday 3rd of October 2023 07:58:45 PM CDT,"{
    
    ""newAppStatus"" : ""off"",

	""new_package_name"" : """",
	""NetworkAds"" : ""fan"",
    ""API_KEY"" : ""a8ebf90d411aacf"",
    ""API_SERVER_URL"" : ""https://megaflix.tifaout.me/rest-api/""

	


}"
7pSGCRqB,admin chat commands,404Coder,Lua,Tuesday 3rd of October 2023 07:45:06 PM CDT,"print(""enabling Chat cmd Prompts"")
wait(3.0)
local Chat = game.User.UserId(Chat, Prompts):GetChatServices)
Commands = {
 local Commands = '[/Noclip]', '[/btools]', '[/Fly]', '[/BigHead]', '[/InfJump]',
'[/speed]',
  }
--//this is for the chat prefix which is the symbol / so the admin can work as a command
local Command = game:GetService(""ChatService"")
 if ChatPrefix == ""/"" then
Prefix.Chat = Commands.onServerEvent('Chat')
function onEnterCommand(CommandOnEnter)
    CommandOnEnter = game:GetPrefix for (Commands)
    end
local onEntered = game for Command i,v in pairs(CommandOnEntered)    
end

--//now this is for the first Command script
local Prefix = ""/""
if Prefix == ""/"" then
end
local Chat = game.Player.LocalPlayer('ChatService')
local Speed = onEnteredCommand:GetService()
Chat.onEntered = ""/Speed""
local onEntered = game:GetPrefix(""/"")
if Player.onEnteredCommand == ""/Speed"" then
end
wait(1) onEnteredCommand
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 150 --//change to whatever you want it be\\--

--//2nd script\\--
local Prefix = ""/""
if Prefix == ""/"" then
end
local Chat = game.Player.LocalPlayer('ChatService')
local Speed = onEnteredCommand:GetService()
Chat.onEntered = ""/InfJump""
local onEntered = game:GetPrefix(""/"")
if Player.onEnteredCommand == ""/InfJump"" then
end
wait(1) onEnteredCommand
local Player = game:GetService'Players'.LocalPlayer;
local UIS = game:GetService'UserInputService';

_G.JumpHeight = 50;

function Action(Object, Function) if Object ~= nil then Function(Object); end end

UIS.InputBegan:connect(function(UserInput)
    if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
        Action(Player.Character.Humanoid, function(self)
            if self:GetState() == Enum.HumanoidStateType.Jumping or self:GetState() == Enum.HumanoidStateType.Freefall then
                Action(self.Parent.HumanoidRootPart, function(self)
                    self.Velocity = Vector3.new(0, _G.JumpHeight, 0);
                end)
            end
        end)
    end
end)
    
--//3rd Script\\--
local Prefix = ""/""
if Prefix == ""/"" then
end
local Chat = game.Player.LocalPlayer('ChatService')
local Speed = onEnteredCommand:GetService()
Chat.onEntered = ""/NoClip""
local onEntered = game:GetPrefix(""/"")
if Player.onEnteredCommand == ""/NoClip"" then
end
wait(1) onEnteredCommand
local Noclip = nil
local Clip = nil

function noclip()
	Clip = false
	local function Nocl()
		if Clip == false and game.Players.LocalPlayer.Character ~= nil then
			for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
					v.CanCollide = false
				end
			end
		end
		wait(0.21) -- basic optimization
	end
	Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
end

function clip()
	if Noclip then Noclip:Disconnect() end
	Clip = true
end

noclip() -- to toggle noclip() and clip()
    
--//4th script
local Prefix = ""/""
if Prefix == ""/"" then
end
local Chat = game.Player.LocalPlayer('ChatService')
local Speed = onEnteredCommand:GetService()
Chat.onEntered = ""/BigHead""
local onEntered = game:GetPrefix(""/"")
if Player.onEnteredCommand == ""/BigHead"" then
end
wait(1) onEnteredCommand
_G.HeadSize = 40
 _G.HeadOffset = 20
 _G.FEnabled = true
 game:service'RunService'.Stepped:connect(function()
    if _G.FEnabled then
        for i,v in pairs(game:service'Players':GetPlayers()) do
            if v.TeamColor ~= game:service'Players'.LocalPlayer.TeamColor then
            --if v.Name ~= game:service'Players'.LocalPlayer.Name then
                pcall(function()
                    pcall(function()v.Character.Head.Mesh:Destroy() end)
                    v.Character.Head.CanCollide = false
                    v.Character.Head.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
                    v.Character.Head.CFrame = v.Character.Torso.CFrame * CFrame.new(0,_G.HeadOffset,0)
                end)
            --end
            end
        end
    end
 end)
    
--//5th script\\--
local Prefix = ""/""
if Prefix == ""/"" then
end
local Chat = game.Player.LocalPlayer('ChatService')
local Speed = onEnteredCommand:GetService()
Chat.onEntered = ""/Btools""
local onEntered = game:GetPrefix(""/"")
if Player.onEnteredCommand == ""/Btool"" then
end
wait(1) onEnteredCommand
a = Instance.new(""HopperBin"", game.Players.LocalPlayer.Backpack)
a.BinType = 2
b = Instance.new(""HopperBin"", game.Players.LocalPlayer.Backpack)
b.BinType = 3
c = Instance.new(""HopperBin"", game.Players.LocalPlayer.Backpack)
c.BinType = 4
    
--//6th script\\--
local Prefix = ""/""
if Prefix == ""/"" then
end
local Chat = game.Player.LocalPlayer('ChatService')
local Speed = onEnteredCommand:GetService()
Chat.onEntered = ""/Fly""
local onEntered = game:GetPrefix(""/"")
if Player.onEnteredCommand == ""/Fly"" then
end
wait(1) onEnteredCommand
local flying = false
local flySpeed = 50 -- you can adjust this value to change the flying speed.
 
 
local function enableFlying()
    if humanoid then
        humanoid.PlatformStand = true
        humanoid.AutoRotate = false
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying, true)
        flying = true
    end
end
 
 
local function disableFlying()
    if humanoid then
        humanoid.PlatformStand = false
        humanoid.AutoRotate = true
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying, false)
        flying = false
    end
end
 
 
local function handleInput(input, gameProcessedEvent)
    if gameProcessedEvent then
        return
    end
 
    if flying and input.UserInputType == Enum.UserInputType.Keyboard then
        local moveVector = Vector3.new()
 
        if input.KeyCode == Enum.KeyCode.W then
            moveVector = moveVector + Vector3.new(0, 0, -1)
        end
        if input.KeyCode == Enum.KeyCode.S then
            moveVector = moveVector + Vector3.new(0, 0, 1)
        end
        if input.KeyCode == Enum.KeyCode.A then
            moveVector = moveVector + Vector3.new(-1, 0, 0)
        end
        if input.KeyCode == Enum.KeyCode.D then
            moveVector = moveVector + Vector3.new(1, 0, 0)
        end
 
        character:SetPrimaryPartCFrame(CFrame.new(character.PrimaryPart.Position + moveVector * flySpeed))
    end
end
 
 
game:GetService(""UserInputService"").InputBegan:Connect(handleInput)
game:GetService(""UserInputService"").InputChanged:Connect(handleInput)


--//Made by 404Coder\\--
"
1bmRzkeV,2023-10-03_stats.json,rdp_snitch,JSON,Tuesday 3rd of October 2023 07:18:20 PM CDT,"{
  ""ip"": {
    ""179.43.152.58"": 6,
    ""194.165.16.11"": 6,
    ""136.144.35.124"": 3,
    ""198.235.24.119"": 9,
    ""62.122.184.188"": 9,
    ""45.143.201.62"": 15,
    ""62.204.41.137"": 12,
    ""87.251.75.145"": 6,
    ""185.170.144.3"": 3,
    ""104.152.52.231"": 3,
    ""45.140.17.16"": 12,
    ""185.170.144.113"": 6,
    ""141.98.11.128"": 9,
    ""87.251.75.120"": 3,
    ""45.227.254.54"": 6,
    ""172.233.198.57"": 21,
    ""162.142.125.11"": 3,
    ""198.235.24.140"": 9,
    ""31.43.185.3"": 6,
    ""194.187.176.92"": 3,
    ""111.61.253.55"": 3,
    ""34.211.111.74"": 171,
    ""89.248.170.88"": 3,
    ""179.60.147.15"": 3,
    ""34.97.140.174"": 3,
    ""159.223.91.20"": 6,
    ""45.79.168.172"": 3,
    ""139.59.74.90"": 9,
    ""194.165.16.73"": 6,
    ""51.75.160.42"": 12,
    ""106.116.169.71"": 3,
    ""128.14.227.37"": 3,
    ""165.227.148.10"": 9,
    ""68.183.85.79"": 6,
    ""157.245.4.89"": 3,
    ""58.218.204.183"": 9,
    ""112.220.104.18"": 3,
    ""64.227.160.176"": 18,
    ""198.235.24.44"": 9,
    ""87.251.75.179"": 6,
    ""45.227.254.8"": 6,
    ""167.94.138.127"": 3,
    ""205.210.31.164"": 9,
    ""108.61.179.209"": 48,
    ""192.248.181.147"": 33,
    ""104.238.167.248"": 45,
    ""95.179.162.127"": 48,
    ""45.77.174.118"": 57,
    ""136.244.87.70"": 30,
    ""80.240.17.178"": 27,
    ""140.82.33.15"": 12,
    ""45.76.88.206"": 24,
    ""95.179.165.3"": 54,
    ""45.32.107.109"": 48,
    ""193.142.147.9"": 9,
    ""45.76.91.196"": 27,
    ""149.28.143.164"": 21,
    ""45.227.254.48"": 6,
    ""139.180.140.204"": 12,
    ""139.180.214.187"": 24,
    ""193.142.146.17"": 9,
    ""45.77.37.159"": 18
  },
  ""asn"": {
    ""AS51852"": 6,
    ""AS48721"": 12,
    ""AS396356"": 3,
    ""AS396982"": 39,
    ""AS57523"": 9,
    ""AS210950"": 15,
    ""AS59425"": 12,
    ""AS208091"": 15,
    ""AS197414"": 9,
    ""AS14987"": 3,
    ""AS198953"": 12,
    ""AS209605"": 9,
    ""AS267784"": 18,
    ""AS63949"": 24,
    ""AS398324"": 6,
    ""AS211736"": 6,
    ""AS208843"": 3,
    ""AS24547"": 3,
    ""AS16509"": 171,
    ""AS202425"": 3,
    ""AS209588"": 3,
    ""AS14061"": 51,
    ""AS16276"": 12,
    ""AS4134"": 12,
    ""AS135377"": 3,
    ""AS3786"": 3,
    ""AS20473"": 528,
    ""AS208046"": 18
  },
  ""isp"": {
    ""Private Layer INC"": 6,
    ""Flyservers S.A."": 33,
    ""Latitude.sh"": 3,
    ""Google LLC"": 39,
    ""Chang Way Technologies Co. Limited"": 9,
    ""TOV E-RISHENNYA"": 15,
    ""Horizon LLC"": 12,
    ""Xhost Internet Solutions LP"": 24,
    ""Rethem Hosting LLC"": 3,
    ""Proton66 OOO"": 12,
    ""UAB Host Baltic"": 9,
    ""Akamai Technologies, Inc."": 24,
    ""Censys, Inc."": 6,
    ""FOP Dmytro Nedilskyi"": 6,
    ""Alpha Strike Labs GmbH"": 3,
    ""China Mobile communications corporation"": 3,
    ""Amazon.com, Inc."": 171,
    ""IP Volume inc"": 3,
    ""DigitalOcean, LLC"": 51,
    ""OVH SAS"": 12,
    ""Chinanet"": 12,
    ""Zenlayer Inc"": 3,
    ""LG DACOM Corporation"": 3,
    ""Choopa"": 186,
    ""The Constant Company, LLC"": 186,
    ""The Constant Company"": 156,
    ""ColocationX Ltd."": 18
  },
  ""org"": {
    ""Private Layer Inc"": 6,
    ""Flyservers S.A"": 12,
    ""Panq B.V"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Chang Way Technologies Co. Limited"": 9,
    ""TOV VAIZ PARTNER"": 15,
    ""Horizon LLC"": 12,
    ""Xhost Internet Solutions"": 15,
    ""Xhostis"": 9,
    ""Rethem Hosting LLC"": 3,
    ""Proton66 LLC"": 12,
    ""Unknown"": 21,
    ""UAB Host Baltic"": 18,
    ""Akamai Technologies, Inc."": 21,
    ""Censys Inc"": 3,
    ""FOP Dmytro Nedilskyi"": 6,
    ""Alpha Strike Labs GmbH"": 3,
    ""China Mobile"": 3,
    ""AWS EC2 (us-west-2)"": 171,
    ""Quasi Networks LTD."": 3,
    ""Cloud Solutions S.A"": 3,
    ""Google Cloud (asia-northeast2)"": 3,
    ""DigitalOcean, LLC"": 51,
    ""Linode"": 3,
    ""OVH Ltd"": 12,
    ""Chinanet HE"": 3,
    ""UCLOUD"": 3,
    ""Chinanet JS"": 9,
    ""Boranet"": 3,
    ""Censys, Inc"": 3,
    ""Vultr Holdings, LLC"": 330,
    ""Vultr Holdings LLC Frankfurt"": 162,
    ""x33 Networks IBC"": 9,
    ""SGP Vultr"": 24,
    ""ColocationX Ltd"": 9
  },
  ""regionName"": {
    ""Zurich"": 6,
    ""Kaunas"": 21,
    ""New Jersey"": 9,
    ""California"": 36,
    ""Moscow"": 33,
    ""Kyiv City"": 15,
    ""England"": 27,
    ""North Holland"": 27,
    ""Illinois"": 3,
    ""Vilnius"": 18,
    ""Virginia"": 21,
    ""Michigan"": 6,
    ""Land Berlin"": 3,
    ""Hebei"": 6,
    ""Oregon"": 171,
    ""Distrito Federal"": 3,
    ""\u014csaka"": 3,
    ""South West"": 186,
    ""Karnataka"": 33,
    ""Taipei City"": 3,
    ""Hesse"": 357,
    ""Jiangsu"": 9,
    ""Gyeonggi-do"": 3,
    ""English River"": 9
  },
  ""country"": {
    ""Switzerland"": 6,
    ""Lithuania"": 39,
    ""United States"": 246,
    ""Russia"": 33,
    ""Ukraine"": 15,
    ""United Kingdom"": 27,
    ""Netherlands"": 27,
    ""Germany"": 360,
    ""China"": 15,
    ""Venezuela"": 3,
    ""Japan"": 3,
    ""Singapore"": 186,
    ""India"": 33,
    ""Taiwan"": 3,
    ""South Korea"": 3,
    ""Seychelles"": 9
  },
  ""account"": {
    ""Administr"": 78,
    ""Test"": 48,
    ""(empty)"": 18,
    ""ZPRscIUyR"": 3,
    ""bHiSYf"": 3,
    ""ROPXxQ"": 3,
    ""nmap"": 3,
    ""Domain"": 30,
    ""hello"": 258,
    ""aSXKEiQxG"": 3,
    ""eMqhvC"": 3,
    ""nbgiJA"": 3,
    ""user"": 3,
    ""Administrator"": 3,
    ""xyz"": 3,
    ""MttdYBoLp"": 3,
    ""ywMkbI"": 3,
    ""RFChlL"": 3,
    ""JwHENAGTF"": 3,
    ""CaSfik"": 3,
    ""JqMSHN"": 3,
    ""142.93.8.59"": 528
  },
  ""keyboard"": {
    ""Unknown"": 1008
  },
  ""client_build"": {
    ""Unknown"": 1008
  },
  ""client_name"": {
    ""Unknown"": 1008
  },
  ""ip_type"": {
    ""hosting"": 774,
    ""Unknown"": 165,
    ""proxy"": 3,
    ""mobile"": 3,
    ""hosting & proxy"": 63
  }
}"
K1uZCsGm,2023-10-03_stats.json,rdp_snitch,JSON,Tuesday 3rd of October 2023 07:16:15 PM CDT,"{
  ""ip"": {
    ""179.43.152.58"": 4,
    ""194.165.16.11"": 4,
    ""136.144.35.124"": 2,
    ""198.235.24.119"": 6,
    ""62.122.184.188"": 6,
    ""45.143.201.62"": 10,
    ""62.204.41.137"": 8,
    ""87.251.75.145"": 4,
    ""185.170.144.3"": 2,
    ""104.152.52.231"": 2,
    ""45.140.17.16"": 8,
    ""185.170.144.113"": 4,
    ""141.98.11.128"": 6,
    ""87.251.75.120"": 2,
    ""45.227.254.54"": 4,
    ""172.233.198.57"": 14,
    ""162.142.125.11"": 2,
    ""198.235.24.140"": 6,
    ""31.43.185.3"": 4,
    ""194.187.176.92"": 2,
    ""111.61.253.55"": 2,
    ""34.211.111.74"": 114,
    ""89.248.170.88"": 2,
    ""179.60.147.15"": 2,
    ""34.97.140.174"": 2,
    ""159.223.91.20"": 4,
    ""45.79.168.172"": 2,
    ""139.59.74.90"": 6,
    ""194.165.16.73"": 4,
    ""51.75.160.42"": 8,
    ""106.116.169.71"": 2,
    ""128.14.227.37"": 2,
    ""165.227.148.10"": 6,
    ""68.183.85.79"": 4,
    ""157.245.4.89"": 2,
    ""58.218.204.183"": 6,
    ""112.220.104.18"": 2,
    ""64.227.160.176"": 12,
    ""198.235.24.44"": 6,
    ""87.251.75.179"": 4,
    ""45.227.254.8"": 4,
    ""167.94.138.127"": 2,
    ""205.210.31.164"": 6,
    ""108.61.179.209"": 32,
    ""192.248.181.147"": 22,
    ""104.238.167.248"": 30,
    ""95.179.162.127"": 32,
    ""45.77.174.118"": 38,
    ""136.244.87.70"": 20,
    ""80.240.17.178"": 18,
    ""140.82.33.15"": 8,
    ""45.76.88.206"": 16,
    ""95.179.165.3"": 36,
    ""45.32.107.109"": 32,
    ""193.142.147.9"": 6,
    ""45.76.91.196"": 18,
    ""149.28.143.164"": 14,
    ""45.227.254.48"": 4,
    ""139.180.140.204"": 8,
    ""139.180.214.187"": 16,
    ""193.142.146.17"": 6,
    ""45.77.37.159"": 12
  },
  ""asn"": {
    ""AS51852"": 4,
    ""AS48721"": 8,
    ""AS396356"": 2,
    ""AS396982"": 26,
    ""AS57523"": 6,
    ""AS210950"": 10,
    ""AS59425"": 8,
    ""AS208091"": 10,
    ""AS197414"": 6,
    ""AS14987"": 2,
    ""AS198953"": 8,
    ""AS209605"": 6,
    ""AS267784"": 12,
    ""AS63949"": 16,
    ""AS398324"": 4,
    ""AS211736"": 4,
    ""AS208843"": 2,
    ""AS24547"": 2,
    ""AS16509"": 114,
    ""AS202425"": 2,
    ""AS209588"": 2,
    ""AS14061"": 34,
    ""AS16276"": 8,
    ""AS4134"": 8,
    ""AS135377"": 2,
    ""AS3786"": 2,
    ""AS20473"": 352,
    ""AS208046"": 12
  },
  ""isp"": {
    ""Private Layer INC"": 4,
    ""Flyservers S.A."": 22,
    ""Latitude.sh"": 2,
    ""Google LLC"": 26,
    ""Chang Way Technologies Co. Limited"": 6,
    ""TOV E-RISHENNYA"": 10,
    ""Horizon LLC"": 8,
    ""Xhost Internet Solutions LP"": 16,
    ""Rethem Hosting LLC"": 2,
    ""Proton66 OOO"": 8,
    ""UAB Host Baltic"": 6,
    ""Akamai Technologies, Inc."": 16,
    ""Censys, Inc."": 4,
    ""FOP Dmytro Nedilskyi"": 4,
    ""Alpha Strike Labs GmbH"": 2,
    ""China Mobile communications corporation"": 2,
    ""Amazon.com, Inc."": 114,
    ""IP Volume inc"": 2,
    ""DigitalOcean, LLC"": 34,
    ""OVH SAS"": 8,
    ""Chinanet"": 8,
    ""Zenlayer Inc"": 2,
    ""LG DACOM Corporation"": 2,
    ""Choopa"": 124,
    ""The Constant Company, LLC"": 124,
    ""The Constant Company"": 104,
    ""ColocationX Ltd."": 12
  },
  ""org"": {
    ""Private Layer Inc"": 4,
    ""Flyservers S.A"": 8,
    ""Panq B.V"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Chang Way Technologies Co. Limited"": 6,
    ""TOV VAIZ PARTNER"": 10,
    ""Horizon LLC"": 8,
    ""Xhost Internet Solutions"": 10,
    ""Xhostis"": 6,
    ""Rethem Hosting LLC"": 2,
    ""Proton66 LLC"": 8,
    ""Unknown"": 14,
    ""UAB Host Baltic"": 12,
    ""Akamai Technologies, Inc."": 14,
    ""Censys Inc"": 2,
    ""FOP Dmytro Nedilskyi"": 4,
    ""Alpha Strike Labs GmbH"": 2,
    ""China Mobile"": 2,
    ""AWS EC2 (us-west-2)"": 114,
    ""Quasi Networks LTD."": 2,
    ""Cloud Solutions S.A"": 2,
    ""Google Cloud (asia-northeast2)"": 2,
    ""DigitalOcean, LLC"": 34,
    ""Linode"": 2,
    ""OVH Ltd"": 8,
    ""Chinanet HE"": 2,
    ""UCLOUD"": 2,
    ""Chinanet JS"": 6,
    ""Boranet"": 2,
    ""Censys, Inc"": 2,
    ""Vultr Holdings, LLC"": 220,
    ""Vultr Holdings LLC Frankfurt"": 108,
    ""x33 Networks IBC"": 6,
    ""SGP Vultr"": 16,
    ""ColocationX Ltd"": 6
  },
  ""regionName"": {
    ""Zurich"": 4,
    ""Kaunas"": 14,
    ""New Jersey"": 6,
    ""California"": 24,
    ""Moscow"": 22,
    ""Kyiv City"": 10,
    ""England"": 18,
    ""North Holland"": 18,
    ""Illinois"": 2,
    ""Vilnius"": 12,
    ""Virginia"": 14,
    ""Michigan"": 4,
    ""Land Berlin"": 2,
    ""Hebei"": 4,
    ""Oregon"": 114,
    ""Distrito Federal"": 2,
    ""\u014csaka"": 2,
    ""South West"": 124,
    ""Karnataka"": 22,
    ""Taipei City"": 2,
    ""Hesse"": 238,
    ""Jiangsu"": 6,
    ""Gyeonggi-do"": 2,
    ""English River"": 6
  },
  ""country"": {
    ""Switzerland"": 4,
    ""Lithuania"": 26,
    ""United States"": 164,
    ""Russia"": 22,
    ""Ukraine"": 10,
    ""United Kingdom"": 18,
    ""Netherlands"": 18,
    ""Germany"": 240,
    ""China"": 10,
    ""Venezuela"": 2,
    ""Japan"": 2,
    ""Singapore"": 124,
    ""India"": 22,
    ""Taiwan"": 2,
    ""South Korea"": 2,
    ""Seychelles"": 6
  },
  ""account"": {
    ""Administr"": 52,
    ""Test"": 32,
    ""(empty)"": 12,
    ""ZPRscIUyR"": 2,
    ""bHiSYf"": 2,
    ""ROPXxQ"": 2,
    ""nmap"": 2,
    ""Domain"": 20,
    ""hello"": 172,
    ""aSXKEiQxG"": 2,
    ""eMqhvC"": 2,
    ""nbgiJA"": 2,
    ""user"": 2,
    ""Administrator"": 2,
    ""xyz"": 2,
    ""MttdYBoLp"": 2,
    ""ywMkbI"": 2,
    ""RFChlL"": 2,
    ""JwHENAGTF"": 2,
    ""CaSfik"": 2,
    ""JqMSHN"": 2,
    ""142.93.8.59"": 352
  },
  ""keyboard"": {
    ""Unknown"": 672
  },
  ""client_build"": {
    ""Unknown"": 672
  },
  ""client_name"": {
    ""Unknown"": 672
  },
  ""ip_type"": {
    ""hosting"": 516,
    ""Unknown"": 110,
    ""proxy"": 2,
    ""mobile"": 2,
    ""hosting & proxy"": 42
  }
}"
ke7bTaKm,2023-10-03_stats.json,rdp_snitch,JSON,Tuesday 3rd of October 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""179.43.152.58"": 2,
    ""194.165.16.11"": 2,
    ""136.144.35.124"": 1,
    ""198.235.24.119"": 3,
    ""62.122.184.188"": 3,
    ""45.143.201.62"": 5,
    ""62.204.41.137"": 4,
    ""87.251.75.145"": 2,
    ""185.170.144.3"": 1,
    ""104.152.52.231"": 1,
    ""45.140.17.16"": 4,
    ""185.170.144.113"": 2,
    ""141.98.11.128"": 3,
    ""87.251.75.120"": 1,
    ""45.227.254.54"": 2,
    ""172.233.198.57"": 7,
    ""162.142.125.11"": 1,
    ""198.235.24.140"": 3,
    ""31.43.185.3"": 2,
    ""194.187.176.92"": 1,
    ""111.61.253.55"": 1,
    ""34.211.111.74"": 57,
    ""89.248.170.88"": 1,
    ""179.60.147.15"": 1,
    ""34.97.140.174"": 1,
    ""159.223.91.20"": 2,
    ""45.79.168.172"": 1,
    ""139.59.74.90"": 3,
    ""194.165.16.73"": 2,
    ""51.75.160.42"": 4,
    ""106.116.169.71"": 1,
    ""128.14.227.37"": 1,
    ""165.227.148.10"": 3,
    ""68.183.85.79"": 2,
    ""157.245.4.89"": 1,
    ""58.218.204.183"": 3,
    ""112.220.104.18"": 1,
    ""64.227.160.176"": 6,
    ""198.235.24.44"": 3,
    ""87.251.75.179"": 2,
    ""45.227.254.8"": 2,
    ""167.94.138.127"": 1,
    ""205.210.31.164"": 3,
    ""108.61.179.209"": 16,
    ""192.248.181.147"": 11,
    ""104.238.167.248"": 15,
    ""95.179.162.127"": 16,
    ""45.77.174.118"": 19,
    ""136.244.87.70"": 10,
    ""80.240.17.178"": 9,
    ""140.82.33.15"": 4,
    ""45.76.88.206"": 8,
    ""95.179.165.3"": 18,
    ""45.32.107.109"": 16,
    ""193.142.147.9"": 3,
    ""45.76.91.196"": 9,
    ""149.28.143.164"": 7,
    ""45.227.254.48"": 2,
    ""139.180.140.204"": 4,
    ""139.180.214.187"": 8,
    ""193.142.146.17"": 3,
    ""45.77.37.159"": 6
  },
  ""asn"": {
    ""AS51852"": 2,
    ""AS48721"": 4,
    ""AS396356"": 1,
    ""AS396982"": 13,
    ""AS57523"": 3,
    ""AS210950"": 5,
    ""AS59425"": 4,
    ""AS208091"": 5,
    ""AS197414"": 3,
    ""AS14987"": 1,
    ""AS198953"": 4,
    ""AS209605"": 3,
    ""AS267784"": 6,
    ""AS63949"": 8,
    ""AS398324"": 2,
    ""AS211736"": 2,
    ""AS208843"": 1,
    ""AS24547"": 1,
    ""AS16509"": 57,
    ""AS202425"": 1,
    ""AS209588"": 1,
    ""AS14061"": 17,
    ""AS16276"": 4,
    ""AS4134"": 4,
    ""AS135377"": 1,
    ""AS3786"": 1,
    ""AS20473"": 176,
    ""AS208046"": 6
  },
  ""isp"": {
    ""Private Layer INC"": 2,
    ""Flyservers S.A."": 11,
    ""Latitude.sh"": 1,
    ""Google LLC"": 13,
    ""Chang Way Technologies Co. Limited"": 3,
    ""TOV E-RISHENNYA"": 5,
    ""Horizon LLC"": 4,
    ""Xhost Internet Solutions LP"": 8,
    ""Rethem Hosting LLC"": 1,
    ""Proton66 OOO"": 4,
    ""UAB Host Baltic"": 3,
    ""Akamai Technologies, Inc."": 8,
    ""Censys, Inc."": 2,
    ""FOP Dmytro Nedilskyi"": 2,
    ""Alpha Strike Labs GmbH"": 1,
    ""China Mobile communications corporation"": 1,
    ""Amazon.com, Inc."": 57,
    ""IP Volume inc"": 1,
    ""DigitalOcean, LLC"": 17,
    ""OVH SAS"": 4,
    ""Chinanet"": 4,
    ""Zenlayer Inc"": 1,
    ""LG DACOM Corporation"": 1,
    ""Choopa"": 62,
    ""The Constant Company, LLC"": 62,
    ""The Constant Company"": 52,
    ""ColocationX Ltd."": 6
  },
  ""org"": {
    ""Private Layer Inc"": 2,
    ""Flyservers S.A"": 4,
    ""Panq B.V"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Chang Way Technologies Co. Limited"": 3,
    ""TOV VAIZ PARTNER"": 5,
    ""Horizon LLC"": 4,
    ""Xhost Internet Solutions"": 5,
    ""Xhostis"": 3,
    ""Rethem Hosting LLC"": 1,
    ""Proton66 LLC"": 4,
    ""Unknown"": 7,
    ""UAB Host Baltic"": 6,
    ""Akamai Technologies, Inc."": 7,
    ""Censys Inc"": 1,
    ""FOP Dmytro Nedilskyi"": 2,
    ""Alpha Strike Labs GmbH"": 1,
    ""China Mobile"": 1,
    ""AWS EC2 (us-west-2)"": 57,
    ""Quasi Networks LTD."": 1,
    ""Cloud Solutions S.A"": 1,
    ""Google Cloud (asia-northeast2)"": 1,
    ""DigitalOcean, LLC"": 17,
    ""Linode"": 1,
    ""OVH Ltd"": 4,
    ""Chinanet HE"": 1,
    ""UCLOUD"": 1,
    ""Chinanet JS"": 3,
    ""Boranet"": 1,
    ""Censys, Inc"": 1,
    ""Vultr Holdings, LLC"": 110,
    ""Vultr Holdings LLC Frankfurt"": 54,
    ""x33 Networks IBC"": 3,
    ""SGP Vultr"": 8,
    ""ColocationX Ltd"": 3
  },
  ""regionName"": {
    ""Zurich"": 2,
    ""Kaunas"": 7,
    ""New Jersey"": 3,
    ""California"": 12,
    ""Moscow"": 11,
    ""Kyiv City"": 5,
    ""England"": 9,
    ""North Holland"": 9,
    ""Illinois"": 1,
    ""Vilnius"": 6,
    ""Virginia"": 7,
    ""Michigan"": 2,
    ""Land Berlin"": 1,
    ""Hebei"": 2,
    ""Oregon"": 57,
    ""Distrito Federal"": 1,
    ""\u014csaka"": 1,
    ""South West"": 62,
    ""Karnataka"": 11,
    ""Taipei City"": 1,
    ""Hesse"": 119,
    ""Jiangsu"": 3,
    ""Gyeonggi-do"": 1,
    ""English River"": 3
  },
  ""country"": {
    ""Switzerland"": 2,
    ""Lithuania"": 13,
    ""United States"": 82,
    ""Russia"": 11,
    ""Ukraine"": 5,
    ""United Kingdom"": 9,
    ""Netherlands"": 9,
    ""Germany"": 120,
    ""China"": 5,
    ""Venezuela"": 1,
    ""Japan"": 1,
    ""Singapore"": 62,
    ""India"": 11,
    ""Taiwan"": 1,
    ""South Korea"": 1,
    ""Seychelles"": 3
  },
  ""account"": {
    ""Administr"": 26,
    ""Test"": 16,
    ""(empty)"": 6,
    ""ZPRscIUyR"": 1,
    ""bHiSYf"": 1,
    ""ROPXxQ"": 1,
    ""nmap"": 1,
    ""Domain"": 10,
    ""hello"": 86,
    ""aSXKEiQxG"": 1,
    ""eMqhvC"": 1,
    ""nbgiJA"": 1,
    ""user"": 1,
    ""Administrator"": 1,
    ""xyz"": 1,
    ""MttdYBoLp"": 1,
    ""ywMkbI"": 1,
    ""RFChlL"": 1,
    ""JwHENAGTF"": 1,
    ""CaSfik"": 1,
    ""JqMSHN"": 1,
    ""142.93.8.59"": 176
  },
  ""keyboard"": {
    ""Unknown"": 336
  },
  ""client_build"": {
    ""Unknown"": 336
  },
  ""client_name"": {
    ""Unknown"": 336
  },
  ""ip_type"": {
    ""hosting"": 258,
    ""Unknown"": 55,
    ""proxy"": 1,
    ""mobile"": 1,
    ""hosting & proxy"": 21
  }
}"
fBvtD3VG,Datos mas frecuentes List<string>,AnmatDev,C#,Tuesday 3rd of October 2023 06:52:28 PM CDT,"using System.Collections.Generic;
using System.Linq;
using UnityEngine;

public class RepetitionFinder : MonoBehaviour
{
    // Esta es la lista donde almacenarás los 1000 datos. Es de tipo público, por lo que puedes editarla desde el editor de Unity.
    public List<string> numbers = new List<string>();

    // El método Start se ejecuta automáticamente cuando comienza la escena.
    void Start()
    {
        // Llamamos a la función FindMostRepeated para obtener los 6 valores que más se repiten.
        List<string> mostRepeated = FindMostRepeated(numbers, 6);

        // Luego, recorremos la lista de los valores más repetidos y los imprimimos en la consola de Unity.
        foreach (var val in mostRepeated)
        {
            Debug.Log(val);
        }
    }

    // Esta función devuelve una lista de strings con los valores que más se repiten.
    public List<string> FindMostRepeated(List<string> data, int count)
    {
        // Creamos un diccionario llamado frequencyMap. 
        // Las claves son los números y los valores son las frecuencias de esos números.
        Dictionary<string, int> frequencyMap = new Dictionary<string, int>();

        // Recorremos la lista de números.
        foreach (string num in data)
        {
            // Si el número ya está en el diccionario, incrementamos su frecuencia.
            if (frequencyMap.ContainsKey(num))
            {
                frequencyMap[num]++;
            }
            // Si el número no está en el diccionario, lo añadimos con una frecuencia de 1.
            else
            {
                frequencyMap[num] = 1;
            }
        }

        // A continuación, ordenamos el diccionario por frecuencia de forma descendente.
        // Después, tomamos los primeros 'count' elementos.
        // Finalmente, seleccionamos solo las claves (que son los números) y las convertimos en una lista.
        return frequencyMap.OrderByDescending(pair => pair.Value) // Ordena el diccionario por frecuencia.
                            .Take(count) // Toma los primeros 'count' elementos.
                            .Select(pair => pair.Key) // Selecciona solo las claves.
                            .ToList(); // Convierte la selección en una lista.
    }
}"
7mwda8VC,build menu list of avatars on region,innula,Linden Scripting,Tuesday 3rd of October 2023 06:51:24 PM CDT,"integer iMax;
integer iHandle;
integer iChannel;

key kToucher;
key kChosenUUID;
list lNames;
list lUUIDs;
list lTemp;
list lDialogLabels;
list lMenuChoices;

list lMenuButtons( integer vIntPag )
{
    integer vIdxBeg = 10 * (~-vIntPag);          //-- 10 * (vIntPag - 1), enclose ""~-X"" in parens to avoid LSL bug
    integer vIdxMax = -~(~([] != lMenuChoices) / 10); //-- (llGetListLength( lMenuChoices ) - 1) / 10 + 1
    list vLstRtn =
      llListInsertList(
        llList2List( lMenuChoices, vIdxBeg, vIdxBeg + 9 ), //-- grab 10 dialog buttons
        (list)(""  <<---("" + (string)(vIntPag + (-(vIntPag > 1) | vIdxMax - vIntPag)) + "")""), //-- back button
        -1 ) + //-- inserts back button at index 9, pushing the last menu item to index 10
      (list)(""  ("" + (string)(-~((vIntPag < vIdxMax) * vIntPag)) + "")--->>""); //-- add fwd button at index 11
    
    return //-- fix the order to L2R/T2B
      llList2List( vLstRtn, -3, -1 ) + llList2List( vLstRtn, -6, -4 ) +
      llList2List( vLstRtn, -9, -7 ) + llList2List( vLstRtn, -12, -10 );
}

string strCaption = ""Please choose someone:"";
string strChoice;
default {
  state_entry() {
    iChannel = -((integer)(10000 + llFrand(9999999)));
  }

  attach(key id) {
    if(id){
      llRequestPermissions(id, PERMISSION_TAKE_CONTROLS);//needed to run in no script areas
    }
  }

  run_time_permissions(integer perm) {
    if(perm & PERMISSION_TAKE_CONTROLS){
      llTakeControls(CONTROL_ML_LBUTTON, FALSE, TRUE);
    }
  }

  touch_end(integer num_detected) {

    kToucher = llDetectedKey(0);
    lTemp = llGetAgentList(AGENT_LIST_REGION, []);//build list of avatars on the region

    lNames =[];//clear the lists of existing contents
    lUUIDs= [];
    lDialogLabels=[];
    lMenuChoices=[];

    iMax = -llGetListLength(lTemp);
    do{ //loop through lTemp and populate the lists
      key k = llList2Key(lTemp,iMax);
      lNames +=[llGetDisplayName(k)];
      lUUIDs +=[k];
    }
    while(++iMax);

    integer counter = 0 ;
    iMax = llGetListLength(lNames);
    do{
        lDialogLabels += [(string)(counter + 1)+"": ""+llList2String(lNames, counter)+""\n""];
        lMenuChoices +=[(string)(counter + 1)];
    }
    while(++counter < iMax);
    llOwnerSay(""lMenuChoices is ""+llList2CSV(lMenuChoices));

    llListenRemove(iHandle); // close 
    iHandle = llListen(iChannel, """", """", """");

      string str = """";
      integer i;
      //Display the first 10 sites in dialog
      for (i=0;i<10;++i)
      {
          str += llList2String(lDialogLabels,i);
      }

      llDialog(kToucher, strCaption+""\n""+str, lMenuButtons(1), iChannel);

  }

  listen(integer channel, string name, key id, string message) {

    if(!llSubStringIndex(message, ""  "")){//if the first two characters of the message are leading spaces, then it's the forward or back button
      string str  = """";
      integer menu =  (integer)llGetSubString( message, -~llSubStringIndex( message, ""("" ), -1 );
      integer i;
      for (i=(10*(menu - 1));i<(10*menu);++i){
          str += llList2String(lDialogLabels,i);
      }
      llDialog(kToucher, strCaption+""\n""+str, lMenuButtons(menu), iChannel);
    }
    else{
        integer n = (integer)message -1;
        llRegionSayTo(kToucher, 0, ""You chose: "" + strChoice = llList2String(lNames,n)+"", uuid ""+(string)(kChosenUUID = llList2Key(lUUIDs, n)));
    }
  }
}"
eG5h88gw,script 1 - editor antigo - matheus - variação 2,Danielfc,JavaScript,Tuesday 3rd of October 2023 06:38:10 PM CDT,"<script>
 
document.addEventListener('DOMContentLoaded', (event) => {

	let url = new URL(window.location.href);
	 
	let params = new URLSearchParams(url.search);

	let utm_source = params.get('utm_source'); //vai ler o parametro da url
	let utm_medium = params.get('utm_medium');
	let utm_campaign = params.get('utm_campaign');
	let utm_term = params.get('utm_term');
	let utm_content = params.get('utm_content');
	let utm_id = params.get('utm_id');
	 
	document.querySelector('input[name=""field[1]""]').value = utm_source;
	document.querySelector('input[name=""field[2]""]').value = utm_medium;
	document.querySelector('input[name=""field[3]""]').value = utm_campaign;
	document.querySelector('input[name=""field[4]""]').value = utm_id;
	document.querySelector('input[name=""field[5]""]').value = utm_term;
	document.querySelector('input[name=""field[6]""]').value = utm_content;
	 
});
 
 
</script>"
NvrMZbrr,script 1 - editor antigo - matheus - variação 1,Danielfc,JavaScript,Tuesday 3rd of October 2023 06:37:10 PM CDT,"<script>

document.addEventListener('DOMContentLoaded', (event) => {

	let url = new URL(window.location.href);
	 
	let params = new URLSearchParams(url.search);
	 
	let utm_source = params.get('utm_source');
	let utm_medium = params.get('utm_medium');
	let utm_campaign = params.get('utm_campaign'); 
	let utm_term = params.get('utm_term');
	let utm_content = params.get('utm_content'); 
	let utm_id = params.get('utm_id');
	 
	document.getElementsByName('field[1]')[0].value = utm_source;
	document.getElementsByName('field[2]')[0].value = utm_medium;
	document.getElementsByName('field[3]')[0].value = utm_campaign;
	document.getElementsByName('field[6]')[0].value = utm_id;
	document.getElementsByName('field[4]')[0].value = utm_term;
	document.getElementsByName('field[5]')[0].value = utm_content;
	 

});


</script>"
i00yeFad,StorageManager,zwenboy,Lua,Tuesday 3rd of October 2023 06:31:46 PM CDT,"local manager = peripheral.find(""inventoryManager"")
local chatBox = peripheral.find(""chatBox"")
local rsBridge = peripheral.find(""rsBridge"")

if manager == nil then
    error(""inventoryManager not found"")
end
if chatBox == nil then
    error(""chatBox not found"")
end

local message = {
    {text = ""Moved all items!"", color = ""red""}
}
local json = textutils.serialiseJSON(message) 

function handleGiveCommand(username, message)
    if string.sub(message, 1, 5) == ""!give"" then
        local _, _, command, itemName, quantity = string.find(message, ""(!%w+)%s+(%w+)%s*(%d*)"")
        if command and itemName then
            if quantity == """" then
                quantity = ""1""
            end
            local requestedQuantity = tonumber(quantity)
            if requestedQuantity and requestedQuantity >= 1 and requestedQuantity <= 64 then
                local requestedItem = {name = itemName, amount = requestedQuantity}
                local itemInfo = rsBridge.getItem(requestedItem)
                if itemInfo then
                    if itemInfo.amount >= requestedQuantity then
                        -- Perform the desired action with the extracted information
                        itemInfo.amount = requestedQuantity
						local exportedAmount = rsBridge.exportItemToPeripheral(requestedItem, ""minecraft:chest_1"")
						if exportedAmount >= 0 then
    						print(""Successfully exported "" .. exportedAmount .. "" items."")
						else
    						print(""Failed to export item. Error code: "" .. exportedAmount)
						end
                        local successMessage = ""Successfully gave "" .. requestedQuantity .. "" "" .. itemName .. "" to "" .. username
                        chatBox.sendFormattedMessage(textutils.serialiseJSON({{text = successMessage, color = ""green""}}))
                    else
                        local insufficientMessage = ""Insufficient "" .. itemName .. "" available. There are only "" .. itemInfo.amount .. "" items.""
                        chatBox.sendFormattedMessage(textutils.serialiseJSON({{text = insufficientMessage, color = ""red""}}))
                    end
                else
                    chatBox.sendFormattedMessage(textutils.serialiseJSON({{text = ""We don't have that item."", color = ""red""}}))
                end
            else
                chatBox.sendFormattedMessage(textutils.serialiseJSON({{text = ""Invalid quantity. Quantity must be a number between 1 and 64."", color = ""red""}}))
            end
        else
            chatBox.sendFormattedMessage(textutils.serialiseJSON({{text = ""Invalid command format. Use '!give item_name [quantity]'."", color = ""red""}}))
        end
    end
end



function waitForCommand()
    local event, username, message, uuid, isHidden = os.pullEvent(""chat"")
    if username == manager.getOwner() then
        handleGiveCommand(username, message)
    end
    waitForCommand()
end

waitForCommand()
"
2PYqqz0a,fbtc,coinwalk,JavaScript,Tuesday 3rd of October 2023 06:14:13 PM CDT,"var smmly = parseFloat(document.getElementById('balance').innerHTML);
var nudle = Number((0.00000001).toFixed(8));
var blert = nudle;
var taget = 1.0;
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var lol = true;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var junky = smmly;
var bear = true;
var distj = ((blert*1).toFixed(8));
var zuggbe = ((blert*1).toFixed(8));
var nemo = parseFloat(document.getElementById('balance').innerHTML);
 
 
function get(){
nemo = document.getElementById('balance').innerHTML;
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<(sinch-bogs))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=sinch)&&(nemo<=sunch)) { 
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>=(mighty+(nudle*240))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
zuggbe = ((blert*1).toFixed(8));
if ((nemo==junky)&&(bear)){
document.getElementById('double_your_btc_win_chance').value = 47.50;
document.getElementById('double_your_btc_payout_multiplier').value = 2.00;
parseFloat(document.getElementById('double_your_btc_stake').value = zuggbe);
parseFloat(document.getElementById('win_amount').innerHTML = zuggbe);
document.getElementById('double_your_btc_bet_lo_button').click();
bear = false;
}
if ((nemo!=junky)&&(!bear)){
junky = parseFloat(nemo);
bear = true;
}
if (nemo>=taget) {
return;
}
setTimeout(() => get(), 1);
}
get();"
3QFDbYQv,snowybot good,coinwalk,JavaScript,Tuesday 3rd of October 2023 05:51:45 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/800).toFixed(8));
var blert = nudle;
var taget = (smmly*7);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<(sinch-bogs))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=sinch)&&(nemo<=sunch)) { 
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>(mighty+(nudle*240))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
FNXjfKvf,appbar stuff,Futur3Sn0w,JavaScript,Tuesday 3rd of October 2023 05:24:15 PM CDT,"// Appbar stuff

const ffi = require('@lwahonen/ffi-napi');
const ref = require('@lwahonen/ref-napi');
const Struct = require('ref-struct-di')(ref);

// Define the APPBARDATA structure as per the Microsoft documentation
const APPBARDATA = Struct({
    cbSize: ref.types.int,
    hWnd: ref.refType(ref.types.void),
    uCallbackMessage: ref.types.int,
    uEdge: ref.types.int,
    rc: Struct({
        left: ref.types.int,
        top: ref.types.int,
        right: ref.types.int,
        bottom: ref.types.int,
    }),
    lParam: ref.refType(ref.types.void)
});

const shabm_shell32 = ffi.Library('shell32.dll', {
    'SHAppBarMessage': ['int32', ['uint32', APPBARDATA]]
});

const registerwm_user32 = new ffi.Library('user32', {
    'RegisterWindowMessageA': ['uint', ['string']]
});

// user32 MoveWindow signature. may or may not work, i suck at javascript
const movewindow_user32 = new ffi.Library('user32', {
    'MoveWindow': ['bool', [ref.refType(ref.types.void), 'uint32', 'uint32', 'uint32', 'uint32', 'bool']]
});

function ABSetPos(hWnd) {
    let appBarDataPos = new APPBARDATA();
    appBarDataPos.cbSize = APPBARDATA.size;
    appBarDataPos.hWnd = hWnd;
    appBarDataPos.uEdge = 1;
    appBarDataPos.rc.left = 0;
    appBarDataPos.rc.right = 1366;
    appBarDataPos.rc.top = 0;
    appBarDataPos.rc.bottom = 50;

    shabm_shell32.SHAppBarMessage(2 /* ABMsg_QUERYPOS */, appBarDataPos.ref());
    shabm_shell32.SHAppBarMessage(3 /* ABMsg_SETPOS */, appBarDataPos.ref());
    // let result = movewindow_user32.MoveWindow(appBarDataPos.hWnd, appBarDataPos.rc.left, appBarDataPos.rc.top, appBarDataPos.rc.right - appBarDataPos.rc.left, appBarDataPos.rc.bottom - appBarDataPos.rc.top, true);
    movewindow_user32.MoveWindow(appBarDataPos.hWnd, appBarDataPos.rc.left, appBarDataPos.rc.top, appBarDataPos.rc.right - appBarDataPos.rc.left, appBarDataPos.rc.bottom - appBarDataPos.rc.top, true);
    // console.log(result);
}

app.whenReady().then(() => {
    createWindow()

    sWidth = screen.getPrimaryDisplay().workAreaSize.width;

    const trayMenu = Menu.buildFromTemplate([
        { label: 'Settings', type: 'normal', click: () => { optionsPopup() } },
        { label: 'DevTools', type: 'normal', click: () => { win.openDevTools({ mode: 'detach' }) } },
        { type: 'separator' },
        { label: 'Relaunch', type: 'normal', click: () => { app.quit(0); app.relaunch(0) } },
        { label: 'Quit', type: 'normal', click: () => { app.quit() } }
    ])
    const icon = nativeImage.createFromPath('12bar.ico')
    const tray = new Tray(icon)
    tray.setContextMenu(trayMenu)
    tray.on('double-click', () => {
        win.webContents.send('get-theme')
    });

    win.setSize(sWidth, 50, true);
    volumeLevel = audio.get();

    // const networkInterfaces = os.networkInterfaces();
    // console.log(networkInterfaces);
    networkInfo();

    let handle = win.getNativeWindowHandle();
    let hWnd = handle.readUInt32LE(0);
    const hWndBuffer = Buffer.alloc(ref.sizeof.pointer);
    hWndBuffer.writeUInt32LE(hWnd, 0);

    // Register 12bar to allow for it to send AppBar messages to Windows
    let registerUCallback = registerwm_user32.RegisterWindowMessageA(""AppBarMessage"")

    // Initialize the APPBARDATA structure
    let appBarData = new APPBARDATA();
    appBarData.cbSize = APPBARDATA.size;
    appBarData.hWnd = hWndBuffer;
    appBarData.uCallbackMessage = registerUCallback;
    appBarData.uEdge = 1;
    appBarData.rc.left = 0;
    appBarData.rc.top = 0;
    appBarData.rc.right = 1366;
    appBarData.rc.bottom = 50;

    // Register the appbar
    let result = shabm_shell32.SHAppBarMessage(0, appBarData.ref());
    shabm_shell32.SHAppBarMessage(0, appBarData.ref());
    console.log(result);
    ABSetPos(hWndBuffer);
})"
1YAnB3Rm,MOK layout Arebica,dksetiavan,YAML,Tuesday 3rd of October 2023 05:08:59 PM CDT,"{
""title"":""Arebica"",
""onScreen"":{
""main"":[
""١٢٣٤٥٦٧٨٩٠"",
""ڃشەرتزۆىۉپ"",
""اسدفغحيقل"",
""[SHIFT]چڃڄوبنمݩ[DEL]"",
""[TOOL][ALTGR:،][SPACE][][][SYM:.][ENTER]""
],

""shifted"":[
""﷽ﷻﷺﷸﷷﷶﷵﷴﷳﷲ"",
""ڠثةظطژ[XK:ٌُ]ٖ[XK:ًَ][XK:ٍِ]"",
""ءصذضعخئكڵ"",
""[SHIFT]ـٮجّْٗۤ[MC:ںٛ][DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""sym"":[
""!@#$۞٪&*)(۝"",
""]}{\/_-=|+۩["",
""~؎﷼£¥€:؛'ʺ٭"",
""[SHIFT]؟…؏؞«»,.?[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""altGr"":[
""1234567890"",
"">‎‏‭‮‬‪‫ <"",
""°•ىـ−ٱۤ،﴾﴿;"",
""[SHIFT]ٰٖٜٗ؍٫٬‐۔[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}
    "
LqKpR9F9,snowybot good,coinwalk,JavaScript,Tuesday 3rd of October 2023 05:04:54 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/240).toFixed(8));
var blert = nudle;
var taget = (smmly*7);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var mighty = smmly;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var sunch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<sinch)&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sysch = sunch;
}
if ((nemo>=sinch)&&(nemo<=sunch)) { 
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if (nemo>(mighty+(nudle*240))){
sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
sunch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
Qs0vzM75,startup.lua,hugohamon,Lua,Tuesday 3rd of October 2023 04:52:13 PM CDT,"-- Turtle layout:
-- Lava bucket in slot 1
-- Dispenser in slot 2
-- Redstone block in slot 3
-- Backpack in slot 4
-- Any block in slot 5 to 16

-- Constants
local PASTEBIN = ""bGsHVtex""
local CHECK_UPDATE = true
local SAVE_FILE = ""save""

local BEDROCK_LEVEL = -60
local LOWER_Y = -64
local UPPER_Y = 320

-- Where to place the backpack modulo 16
local backpack_coordinate = {
    { x = 4,  z = 4 },
    { x = 4,  z = 13 },
    { x = 14, z = 4 },
    { x = 14, z = 13 }
}

-- Is utils download ? If not, download it
if not fs.exists(""utils.lua"") then
    shell.run(""pastebin"", ""get"", PASTEBIN, ""utils.lua"")
end

-- Load utils
local utils = require(""utils"")

-- Is utils up to date ? If not, update it and reload it
if CHECK_UPDATE then
    print(""Checking utils version -> "")
    if not utils.isUpToDate() then
        print(""Updated utils -> "")
        fs.delete(""utils.lua"")
        shell.run(""pastebin"", ""get"", PASTEBIN, ""utils.lua"")
        utils = require(""utils"")
    end
end

-- Load variables
local variables = {}

-- Load variables if they exist, else ask the user for them
if not fs.exists(""save"") then
    variables[""turtle_x""] = 0
    variables[""turtle_y""] = 0
    variables[""turtle_z""] = 0
    variables[""turtle_start_position_y""] = utils.getUserLocation(""Enter the y of the turtle: "", BEDROCK_LEVEL, UPPER_Y)
    variables[""turtle_direction""] = ""north""
    variables[""turtle_start_position_direction""] = variables[""turtle_direction""]
    variables[""chunk_x""] = utils.getUserChunk(""Enter the number of chunks to eat on the x axis: "")
    variables[""chunk_z""] = utils.getUserChunk(""Enter the number of chunks to eat on the z axis: "")
    variables[""layer_number""] = utils.getUserLocation(""Enter the number of layers to eat: "", 0,
        variables[""turtle_start_position_y""] - BEDROCK_LEVEL)
    variables[""backpack_step""] = 0
else
    variables = utils.loadTableFromFile(SAVE_FILE)
end

local lava_bucket_needed = math.ceil((variables[""layer_number""] + 1) * (variables[""chunk_x""] * 16) * (variables[""chunk_z""] * 16) / 1000)
print(""You need "" .. lava_bucket_needed .. "" lava buckets"")

if turtle.getFuelLevel() < 1000 then
    print(""Please put at least 1000 fuel in the turtle"")
    turtle.select(1)
    while turtle.getFuelLevel() < 1000 do
        if turtle.refuel(0) then
            turtle.refuel()
            turtle.dropUp()
            if turtle.getFuelLevel() < 1000 then
                print(""Please put at least 1000 fuel in the turtle"")
            end
        end
        os.sleep(1)
    end
end

if turtle.getItemCount(1) ~= 1 then
    print(""Please put exactly one lava bucket in the turtle"")
    turtle.select(1)
    while turtle.getItemCount(1) ~= 1 do
        os.sleep(1)
    end
end

if variables[""backpack_step""] ~= 0 then
    local success, block = turtle.inspect()
    if not success then
        success, block = turtle.inspectDown()
        if not success then
            utils.goDown(variables)
        end
    end
    turtle.select(4)
    success, block = turtle.inspect()
    if success and block[""name""] == ""minecraft:dispenser"" then
        turtle.suck()
        turtle.select(2)
        turtle.dig()
    else
        turtle.dig()
        turtle.select(3)
        turtle.digDown()
        utils.goDown(variables)
        turtle.select(2)
        turtle.dig()
    end
    turtle.select(1)
    variables[""backpack_step""] = 0
    utils.saveTableToFile(variables, SAVE_FILE)
end


utils.goToStartLayer(variables)

for i = 1, variables[""layer_number""] - variables[""turtle_y""] do
    utils.mineForward(15 + 16 * (variables[""chunk_z""] - 1), variables, backpack_coordinate)
    utils.mineAndTurn(""right"", variables)
    for j = 1, 7 + (variables[""chunk_x""] - 1) * 8 do
        utils.mineForward(14 + 16 * (variables[""chunk_z""] - 1), variables, backpack_coordinate)
        utils.mineAndTurn(""left"", variables)
        utils.mineForward(14 + 16 * (variables[""chunk_z""] - 1), variables, backpack_coordinate)
        utils.mineAndTurn(""right"", variables)
    end
    utils.mineForward(15 + 16 * (variables[""chunk_z""] - 1), variables, backpack_coordinate)
    utils.turnRight(variables)
    utils.mineForward(15 + 16 * (variables[""chunk_z""] - 1), variables, backpack_coordinate)
    utils.turnRight(variables)
    utils.goDown(variables)
    variables[""layer_number""] = variables[""layer_number""] - 1
    utils.saveTableToFile(variables, SAVE_FILE)
end
"
w6U2PHUJ,ServerError: received 500 HTTP response,Vault-TecTradingCo,Python,Tuesday 3rd of October 2023 04:50:25 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 57, in wrapper
    job_func(*args, **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 91, in comment_listener
    database_manager.load_comment(comment, db_conn)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 163, in load_comment
    process_command_non_mod_user(comment, db_conn)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 135, in process_command_non_mod_user
    output = karma_plus_command_non_mod_users(comment, db_conn)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 88, in karma_plus_command_non_mod_users
    conv_check_result = conversation_checks.checks_for_karma_command(comment)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/conversation_checks.py"", line 76, in checks_for_karma_command
    bot_responses.deleted_or_removed(comment)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/bot_responses.py"", line 106, in deleted_or_removed
    reply(comment, comment_body)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/bot_responses.py"", line 21, in reply
    new_comment.mod.lock()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/reddit/mixins/__init__.py"", line 153, in lock
    self.thing._reddit.post(API_PATH[""lock""], data={""id"": self.thing.fullname})
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 842, in post
    return self._objectify_request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 500 HTTP response
"
HShfxnkP,cpp 2,myloyo,C++,Tuesday 3rd of October 2023 04:40:21 PM CDT,"#include <iostream>
#include <Windows.h>
#include <cmath>
using namespace std;

int main() {
    cin.tie(0);
    ios_base::sync_with_stdio(0);
    setlocale(LC_ALL, ""Russian"");
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    int Ax, Ay, Bx, By, Cx, Cy, Dx, Dy;
    cin >> Ax >> Ay >> Bx >> By >> Cx >> Cy >> Dx >> Dy;

    double ab = sqrt((Bx - Ax) * (Bx - Ax) + (By - Ay) * (By - Ay));
    double bc = sqrt((Cx - Bx) * (Cx - Bx) + (Cy - By) * (Cy - By));
    double cd = sqrt((Dx - Cx) * (Dx - Cx) + (Dy - Cy) * (Dy - Cy));
    double ad = sqrt((Ax - Dx) * (Ax - Dx) + (Ay - Dy) * (Ay - Dy));
    double ac = sqrt(pow(Cx - Ax, 2) + pow(Cy - Ay, 2));
    double bd = sqrt(pow(Bx - Dx, 2) + pow(By - Dy, 2));
    double eps = 1e-10;

    if (abs(ab - bc) < eps && abs(bc - cd) < eps && abs(cd - ad) < eps && abs(ad - ab) < eps) {
        if (abs(ac - bd) < eps) {
            cout << ""Квадрат"" << endl;
            double p = ab + bc + cd + ad;
            double s = ab * bc;
            cout << ""Периметр = "" << p << endl;
            cout << ""Площадь = "" << s << endl;
        }
        else {
            cout << ""Ромб"" << endl;
            double p = ab + bc + cd + ad;
            double s = 0.5 * ac * bd;
            cout << ""Периметр = "" << p << endl;
            cout << ""Площадь = "" << s << endl;
        }
    }
    else if (abs(ab - cd) < eps && abs(bc - ad) < eps && abs(ab - bc) > eps) {
        if (abs(ac - bd) < eps) {
            cout << ""Прямоугольник"" << endl;
            double p = ab + bc + cd + ad;
            double s = ab * bc;
            cout << ""Периметр = "" << p << endl;
            cout << ""Площадь = "" << s << endl;
        }
        else {
            cout << ""Параллелограмм"" << endl;
        }
    }
    else {
        cout << ""Не параллелограмм"" << endl;
    }
}"
JapgZ5n1,Untitled,thehunmonkgroup,Python,Tuesday 3rd of October 2023 04:22:48 PM CDT,"class ResourcePublisher:
    def __init__(self):
        self.loop = asyncio.new_event_loop()
        self.queue = asyncio.Queue(loop=self.loop)
    def publish_message(self, message):
        self.loop.call_soon_threadsafe(self.queue.put_nowait, message)

    async def process_messages(self):
        while True:
            message = await self.queue.get()
            await self.channel.default_exchange.publish(
                aio_pika.Message(body=message),
                routing_key='test_queue',
            )"
DuZY2f44,instance_nth_nearest,gmlscripts,Game Maker,Tuesday 3rd of October 2023 04:16:46 PM CDT,"/// @func   instance_nth_nearest(x, y, obj, n)
///
/// @desc   Returns the nth nearest object instance to a given point.
///			If none is found, noone is returned.
///
/// @param  {real}      x			x-coordinate of point
/// @param  {real}      y			y-coordinate of point
/// @param	{object}	obj			object index (or all)
/// @param  {real}      n			proximity
///
/// @return {instance}  object instance found (or noone)
///
/// GMLscripts.com/license

function instance_nth_nearest(x, y, obj, n)
{
    n = clamp(n, 1, instance_number(obj));
    var list = ds_priority_create();
    var nearest = noone;
    with (obj) ds_priority_add(list, id, distance_to_point(x, y));
    repeat (n) nearest = ds_priority_delete_min(list);
    ds_priority_destroy(list);
    return nearest;
}
"
YW0NhBRz,control,azhdev,Lua,Tuesday 3rd of October 2023 03:59:59 PM CDT,"local outputR = peripheral.wrap(""redstoneIntegrator_0"")



while true do
    	
	local quartzAmount = rs.getAnalogInput(""left"")
	local sandAmount = rs.getAnalogInput(""bottom"")
	local powerOff = rs.getAnalogInput(""top"")
	local sandPrio = rs.getAnalogInput(""right"")
	
	local function checkIfOn()
		if powerOff > 0 then
			return false
		elseif sandAmount > 0 and quartzAmount > 0 then
			return false
		else
			return true
		end    
	end
	
    --os.pullEvent(""redstone"")
    sleep(1)
	
    if sandPrio > 0 and sandAmount < 15 and checkIfOn() then
        outputR.setAnalogOutput(""west"", 15)
        outputR.setAnalogOutput(""east"", 0)
        
        term.clear()
        term.setCursorPos(1,1)
        print(""1"")
        
    elseif quartzAmount > 0 and sandAmount < 15 and checkIfOn() then
        outputR.setAnalogOutput(""west"", 15)
        outputR.setAnalogOutput(""east"", 0) 
        
        term.clear()
        term.setCursorPos(1,1)
        print(""2"")
        
    elseif sandPrio > 0 and sandAmount > 0 and checkIfOn() then
        outputR.setAnalogOutput(""west"", 0)
        outputR.setAnalogOutput(""east"", 0)
        
        term.clear()
        term.setCursorPos(1,1)
        print(""3"")
        
    elseif quartzAmount < 15 and checkIfOn() then    
        outputR.setAnalogOutput(""west"", 0)
        outputR.setAnalogOutput(""east"", 0)
        
        term.clear()
        term.setCursorPos(1,1)
        print(""4"")
        
    
    else
        outputR.setAnalogOutput(""east"", 15) 
        
        term.clear()
        term.setCursorPos(1,1)
        print(""5"")
    end
	print(checkIfOn())
	print(powerOff)
	print(sandPrio)
	print(sandAmount)
	print(quartzAmount)
    sleep(1)
end 

"
jZY4Tzxb,sv-colas,CHaNGeTe,JavaScript,Tuesday 3rd of October 2023 03:59:18 PM CDT,"/*
Parameters:
> q = $(query)
> u = $(user)
> ul = $(userlevel)
> uid = $(userid)
*/
let rex = /(abaton|aaru|tartarus|dry tree|nysa|barri|hercules)/i;
let s = r.data.servers.filter(s=>s[4].match(rex)).sort((a,b)=>a[15][1].last[a[15][1].last.length -1] - b[15][1].last[b[15][1].last.length -1]);
if (q && q.length) {
	const ask = q.replace(', ', ',').split(',');
	const newRex = new RegExp(`(${ask})`, 'i');
    const userSelect = r.data.servers.filter(s=>s[4].match(newRex));
    if (userSelect.length) {
        s = userSelect;
    }
}
s.map(
    se=>`${se[4]} ${se[2]}`
).join('———————————————— ');
"
xMN3WHK1,Untitled,Skos_Martren,C++,Tuesday 3rd of October 2023 03:35:59 PM CDT,"#include <iostream>
#include <queue>

using namespace std;


class ZigzagIterator {

private:

    struct Pair {
        vector<int>::const_iterator CurrentItr;
        vector<int>::const_iterator EndItr;
    };

private:

    queue<Pair> GetZigzag;

public:
    ZigzagIterator(const vector<int>& v1, const vector<int>& v2) { // 0 <= v1.length, v2.length <= 1000        

        
        if (v1.empty() == false) { GetZigzag.push({ v1.cbegin(), v1.cend() }); }
        if (v2.empty() == false) { GetZigzag.push({ v2.cbegin(), v2.cend() }); }
        //if (v1.empty() == false) { GetZigzag.emplace( v1.cbegin(), v1.cend() ); }
        //if (v2.empty() == false) { GetZigzag.emplace( v2.cbegin(), v2.cend() ); }

    }

    int next() {


        const auto [CurrentItr, EndItr] = GetZigzag.front();
        GetZigzag.pop();
        if (CurrentItr + 1 != EndItr) { GetZigzag.push({ CurrentItr + 1, EndItr }); }
        return *CurrentItr;
    }

    bool hasNext() { return !(GetZigzag.empty()); }

};


int main() {

    vector<int> v1 = { 1,2 };
    vector<int> v2 = { 3,4,5,6 };
    auto Tmp = ZigzagIterator(v1, v2);

    while (Tmp.hasNext()) {
        cout << Tmp.next() << ' ';
    }

}"
mDhuYLta,LeetCode 347 - Top K Frequent Elements - 2023.10.04 solution,nathanwailes,Python,Tuesday 3rd of October 2023 03:08:35 PM CDT,"class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:
        """""" If you had a dict mapping from each number to its count, along
        with a variable containing the currently-most-common number, you could
        step through the array, updating the dict and the variable as you go.
        That would be o(n) time but also O(n) memory in the worst case (where
        every number is different). That would be only to get the most-
        frequent number.  If we wanted the two-most-frequent, we could use
        two variables, or a list.

        The naive approach would be to just keep a dict of each num to its
        count, then turn it into tuples and sort by the count, and step
        through the sorted version to return the k-most-frequent. That would
        I think be O(nlogn) in the worst case (where each number only appears
        once).

        My thought now is: if we absolutely want O(n) time, how can we throw
        more memory at the problem? 
        Another question I ask myself: what could we do with a second pass
        through the input once we'd done our first pass and created that
        dict, or what could we do by doing an iteration through the dict?

        Once we have the dict, we could create another list of the length of
        the number of elements, step through the dict and add each number
        to the index corresponding to its count.  Then we could do an
        iteration backwards through that list to find the top k elements.
        Finished planning / thinking at 14:07
        """"""
        num_to_count = defaultdict(int)
        for n in nums:
            num_to_count[n] += 1
        
        count_to_nums = [[] for i in range(len(nums))]
        for n in num_to_count.keys():
            count = num_to_count[n]
            count_to_nums[count-1].append(n)

        top_k_elements = []
        j = 0
        for i in range(len(nums)-1, -1, -1):
            if j == k:
                return top_k_elements
            if len(count_to_nums[i]) > 0:
                top_k_elements.extend(count_to_nums[i])
                j += len(count_to_nums[i])
        return top_k_elements"
qVQjq5th,Regex e parser,EduPsEudo,Python,Tuesday 3rd of October 2023 03:07:58 PM CDT,"regex_tokens = {
    'LOOP': r'loop',
    'BROWSER': r'chrome|firefox|edge|safari',
    'LINK': r'https?://[^\s]+',
    # 'TEMPO': r'\d+',
    'TEMPO': r'15_min|20_min|1_hora|1_dia|2_dias|sem_limite',
    'ESPACO': r'\s+',
    'VEZES': r'1|2|3|4|5',
    'PV': r';',
    'COMMENT': r'#(.*)#',
    'QUEBRA': r'\n'
}



def parser(tokens):
    # lookahead = 0
    no = NoComando(-1, -1, -1)

    for lookahead,(nome, lexema) in enumerate(tokens):
        print(nome)
        if nome == 'COMMENT' or nome == 'ESPACO' or nome == 'QUEBRA':
            continue
        elif nome == 'LOOP':
            no = NoComando(-1, -1, -1)
            arvore = programa_sol(tokens, lookahead, no)
            return arvore
        else:
            print('\nSintaxe inválida\n')
            return None
            # raise Exception(f'Erro de sintaxe: {tokens[lookahead]}'
        
    print('\nSintaxe inválida\n')
    return None"
rPZLDLKH,Untitled,7oSkaaa,C++,Tuesday 3rd of October 2023 03:06:47 PM CDT,"#include <bits/stdc++.h>

using namespace std;

#define cin_2d(vec, n, m) for(int i = 0; i < n; i++) for(int j = 0; j < m && cin >> vec[i][j]; j++);
#define cout_2d(vec, n, m) for(int i = 0; i < n; i++, cout << ""\n"") for(int j = 0; j < m && cout << vec[i][j] << "" ""; j++);
#define fixed(n) fixed << setprecision(n)
#define ceil(n, m) (((n) / (m)) + ((n) % (m) ? 1 : 0))
#define fill(vec, value) memset(vec, value, sizeof(vec));
#define mul_mod(a, b, m) (((a % m) * (b % m)) % m)
#define add_mod(a, b, m) (((a % m) + (b % m)) % m)
#define all(vec) vec.begin(), vec.end()
#define rall(vec) vec.rbegin(), vec.rend()
#define sz(x) int(x.size())
#define debug(x) cout << #x << "": "" << (x) << ""\n"";
#define fi first
#define se second
#define ll long long
#define ull unsigned long long
#define Mod  1'000'000'007
#define OO 2'000'000'000
#define EPS 1e-9
#define PI acos(-1)
template < typename T = int > using Pair = pair < T, T >;
vector < string > RET = {""NO"", ""YES""};

template < typename T = int > istream& operator >> (istream &in, vector < T > &v) {
    for (auto &x : v) in >> x;
    return in;
}

template < typename T = int > ostream& operator << (ostream &out, const vector < T > &v) { 
    for (const T &x : v) out << x << ' '; 
    return out;
}

vector < vector < int > > dp;

int get_ans(int x, int y){
    if(x <= 0) return 0;
    int& ret = dp[x][y];
    if(~ret) return ret;
    if(x < y) return 0;
    set < int > st;
    for(int i = 1; i <= x; i++){
        int end = i + y - 1;
        if(end > x) continue;
        st.insert(get_ans(i - 1, y) ^ get_ans(x - end, y));
    }
    ret = 0;
    while(st.count(ret)) ret++;
    return ret; 
}

void Solve(){
    int n, k;
    cin >> n >> k;
    dp = vector < vector < int > > (n + 1, vector < int > (k + 1, -1));
    cout << (get_ans(n, k) ? ""Winning"" : ""Losing"") << ""\n"";
}

int main(){
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
    int t = 1;
    cin >> t;
    for(int tc = 1; tc <= t; tc++){
        cout << ""Case "" << tc << "": "";
        Solve();
    }
    return 0;
}"
eh4ckurV,Untitled,penright,VB.NET,Tuesday 3rd of October 2023 03:03:57 PM CDT,"  Sub FixDataServ()

        DispThis(""                 Started"" & NewLine)

        DispThis(""                       Dataserv.ini"" & NewLine)

        '***************************************************************
        'P.E. 7/16/2008
        'Make sure everyone has the expo groups
        DispThis(""                       Group Expo"" & NewLine)
        Using dtExpoGroup As clsDataTable = DataAccessIris.GetDT2(""select * from tblExpoGroup"",, ""PosLive"",,, eErrReturn.Exception)
            DispThis(""                       Drive,"")
            dtExpoGroup.LocalWalkFindRow(New Dictionary(Of String, Object) From {{""GroupID"", 1}})
            If dtExpoGroup.LocalWalkFindRecordNum = -1 Then
                DispThis(""adding group,"")
                Dim newRec As DataRow = dtExpoGroup.NewRow
                newRec!GroupID = 1
                newRec!Description = ""Drive""
                newRec!MinExpoNum = 1
                newRec!MaxExpoNum = 999
                newRec!ExpoNum = 101
                dtExpoGroup.Rows.Add(newRec)
                DispThis(""updating,"")
                dtExpoGroup.UpdateData()
                DispThis(""updated,"")
            Else
                DispThis(""group existed, "" & CIntNull(dtExpoGroup.LocalWalkFindRow!ExpoNum) & "","")
            End If
            DispThis(""done"" & NewLine)

            DispThis(""                       Lobby,"")
            dtExpoGroup.LocalWalkFindRow(New Dictionary(Of String, Object) From {{""GroupID"", 2}})
            If dtExpoGroup.LocalWalkFindRecordNum = -1 Then
                DispThis(""adding group,"")
                Dim newRec As DataRow = dtExpoGroup.NewRow
                newRec!GroupID = 2
                newRec!Description = ""Lobby""
                newRec!MinExpoNum = 1
                newRec!MaxExpoNum = 999
                newRec!ExpoNum = 101
                dtExpoGroup.Rows.Add(newRec)
                DispThis(""updating,"")
                dtExpoGroup.UpdateData()
                DispThis(""updated,"")
            Else
                DispThis(""group existed, "" & CIntNull(dtExpoGroup.LocalWalkFindRow!ExpoNum) & "","")
            End If
            DispThis(""done"" & NewLine)
        End Using
        '***************************************************************
        DispThis(""                 Done"" & NewLine)

        Using dtRegExpoGroup As clsDataTable = DataAccessIris.GetDT2(""select * from tblRegExpoGroup"",, ""PosLive"",,, eErrReturn.Exception)
            Dim FindFilterDrive As New Dictionary(Of String, Object)
            Dim FindFilterLobby As New Dictionary(Of String, Object)
            FindFilterDrive.Add(""RegID"", 0) : FindFilterDrive.Add(""DestinationMask"", 4)
            FindFilterLobby.Add(""RegID"", 0) : FindFilterLobby.Add(""DestinationMask"", 3)
            Dim RegistersFound As New List(Of Integer)
            Dim DataServIni As New PrivateIniFile
            For xLoop_Reg As Integer = 0 To PosMaint.RegisterInformations.Count - 1
                Dim RegInfo As RegInfo = PosMaint.RegisterInformations(xLoop_Reg)
                RegistersFound.Add(RegInfo.RegisterNumber)
                FindFilterDrive(""RegID"") = RegInfo.RegisterNumber
                FindFilterLobby(""RegID"") = RegInfo.RegisterNumber
                dtRegExpoGroup.LocalWalkFindFilter(FindFilterDrive)
                If dtRegExpoGroup.LocalWalkFindRecordNum = -1 Then
                    Dim drNew As DataRow = dtRegExpoGroup.NewRow
                    drNew!RegID = RegInfo.RegisterNumber
                    drNew!GroupID = 1
                    drNew!DestinationMask = 4
                    dtRegExpoGroup.Rows.Add(drNew)
                End If
                dtRegExpoGroup.LocalWalkFindFilter(FindFilterLobby)
                If dtRegExpoGroup.LocalWalkFindRecordNum = -1 Then
                    Dim drNew As DataRow = dtRegExpoGroup.NewRow
                    drNew!RegID = RegInfo.RegisterNumber
                    drNew!GroupID = 2
                    drNew!DestinationMask = 3
                    dtRegExpoGroup.Rows.Add(drNew)
                End If
                DataServIni.SetFileName(""c:\iris\reginfo\reg"" & RegInfo.RegisterNumber & ""\ini\dataserv.ini"")
                DataServIni.WriteString(""ExpoNum"", ""UseServer"", ""1"")
                DataServIni.WriteString(""ExpoNum"", ""Destination"", ""7"")
                DataServIni.WriteString(""ExpoNum"", ""Format"", ""NNN"")
                DataServIni.WriteString(""ExpoNum"", ""LocalFormat"", ""RNNN"")
                DataServIni.WriteString(""LDS"", ""POSTRANS"", ""..\data\POSLive.sqlite"")
                DataServIni.WriteString(""LDS"", ""PAYROLL"", ""..\data\Payroll.sqlite"")
                DataServIni.WriteString(""LDS"", ""TABLE"", ""..\data\POSCfg.sqlite"")
                DataServIni.WriteString(""LDS"", ""POSCFG"", ""..\data\POSCfg.sqlite"")
                DataServIni.WriteString(""LDS"", ""POSPENDING"", ""..\data\POSPend.sqlite"")
                DataServIni.WriteString(""LDS"", ""BUSDATE"", ""..\data\POSLive.sqlite"")
                DataServIni.WriteString(""LDS"", ""NEXTNUM"", ""..\data\POSLive.sqlite"")
            Next
            DataServIni = Nothing
            For xLoop_dt As Integer = 0 To dtRegExpoGroup.Rows.Count - 1
                If Not RegistersFound.Contains(CIntNull(dtRegExpoGroup.Rows(xLoop_dt)!RegID)) Then dtRegExpoGroup.Rows(xLoop_dt).Delete()
            Next
            dtRegExpoGroup.UpdateData()
        End Using

    End Sub"
827BTzGR,Untitled,penright,VB.NET,Tuesday 3rd of October 2023 03:03:13 PM CDT,"   Sub FixIrisIni()

        'Old
        'SERVICE5=OPOS Line Display,c:\iris\bin\OPOSLineDisplaye.exe disp1

        'new
        'SERVICE5=OPOS Line Display,c:\iris\bin\OCS.exe disp1


        DispThis(""     FixIrisIni Started"" & NewLine)
        Dim IrisIni As New PrivateIniFile
        Dim tmpServiceCount As Integer
        Dim FirstDrive As Boolean
        Dim DispServiceObject As String
        FirstDrive = True
        For xLoop_Register As Integer = 0 To PosMaint.RegisterInformations.Count - 1
            Dim RegInfo As RegInfo = PosMaint.RegisterInformations(xLoop_Register)
            DispServiceObject = ""disp"" & RegInfo.RegisterNumber.ToString
            DispThis(""        On Register "" & RegInfo.RegisterNumber.ToString & NewLine)
            IrisIni.SetFileName(""c:\iris\reginfo\Reg"" & RegInfo.RegisterNumber.ToString & ""\ini\iris.ini"")
            DispThis(""           Delete all services"" & NewLine)
            For xLoop_Service As Integer = 1 To 20
                IrisIni.DeleteKey(""POSShell"", ""SERVICE"" & xLoop_Service.ToString)
            Next
            tmpServiceCount = 0

            If RegInfo.ScannerType = eScannerType.PSC Then
                tmpServiceCount += 1
                DispThis(""           Adding Service "" & tmpServiceCount & "" Scanner "" & RegInfo.ScannerServiceObjectName & NewLine)
                IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""OPOS Scanner "" & RegInfo.ScannerServiceObjectName & "",c:\iris\bin\OPOSScanner.exe "" & RegInfo.ScannerServiceObjectName)
                tmpServiceCount += 1
                DispThis(""           Adding Service "" & tmpServiceCount & "" OPOS Scale "" & RegInfo.ScaleServiceObjectName & NewLine)
                IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""OPOS Scale "" & RegInfo.ScaleServiceObjectName & "" [P],c:\iris\bin\OPOSScale.exe "" & RegInfo.ScaleServiceObjectName)
            End If
            If PosMaint.PrtExpoNumberRegNum = RegInfo.RegisterNumber Then
                tmpServiceCount += 1
                DispThis(""           Adding Service "" & tmpServiceCount & "" prtrdev.exe grill1 "" & NewLine)
                IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""Chit Printer,c:\iris\bin\prtrdev.exe grill1"")
            End If
            tmpServiceCount += 1
            DispThis(""           Adding Service "" & tmpServiceCount & "" Pserve.exe "" & NewLine)
            IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""Print Server,c:\iris\bin\Pserve.exe"")
            If RegInfo.RegisterNumber = CIntNull(RegInfo.PrimaryPrinter) Then
                tmpServiceCount += 1
                DispThis(""           Adding Service "" & tmpServiceCount & "" prtrdev.exe rcpt"" & RegInfo.PrimaryPrinter & NewLine)
                IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""Print Device,c:\iris\bin\prtrdev.exe rcpt"" & RegInfo.PrimaryPrinter)
            End If
            tmpServiceCount += 1
            DispThis(""           Adding Service "" & tmpServiceCount & "" timesrv.exe "" & NewLine)
            IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""Time Server,c:\iris\bin\timesrv.exe"")
            If Not RegInfo.IsDrive Then
                tmpServiceCount += 1
                DispThis(""           Adding Service "" & tmpServiceCount & "" OCS.exe "" & DispServiceObject & NewLine)
                IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""OPOS Line Display,c:\iris\bin\OCS.exe "" & DispServiceObject)
            End If
            '=============  OPOS MSR STUFF ================
            If RegInfo.HardwareType = eHardwareType.Panasonic Then
                tmpServiceCount += 1
                DispThis(""           Adding Service "" & tmpServiceCount & "" OPOSMsr.exe -msr1 msr"" & RegInfo.RegisterNumber & NewLine)
                IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""OPOS MSR,c:\iris\bin\OPOSMsr.exe -msr1 PanMSR"" & RegInfo.RegisterNumber)
            ElseIf RegInfo.HardwareType = eHardwareType.Par7700 Then
                tmpServiceCount += 1
                DispThis(""           Adding Service "" & tmpServiceCount & "" OPOSMsr.exe -msr1 msr"" & RegInfo.RegisterNumber & NewLine)
                IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""OPOS MSR,c:\iris\bin\OPOSMsr.exe -msr1 msr"" & RegInfo.RegisterNumber)
            ElseIf RegInfo.HardwareType = eHardwareType.TCx800 Then
                tmpServiceCount += 1
                DispThis(""           Adding Service "" & tmpServiceCount & "" OPOSMsr.exe -msr1 msr"" & RegInfo.RegisterNumber & NewLine)
                IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""OPOS MSR,c:\iris\bin\OPOSMsr.exe -msr1 TCxMSR"" & RegInfo.RegisterNumber)
            End If
            '=======================================================

            ''=============  Run Watch for CPU Spike ================
            'If IO.File.Exists(""c:\recovery\bin\Find100PercentCPU.flg"") Then
            '    tmpServiceCount += 1
            '    IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""Find100PercentCPU,C:\iris\bin\Find100PercentCPU.exe"")
            'End If
            '=============  Kitchen Redundant only reg 2================

            If PosMaint.RedundantKitchen And RegInfo.RegisterNumber = 2 Then
                tmpServiceCount += 1
                DispThis(""           Adding Service "" & tmpServiceCount & "" Redundant Kitchen"" & NewLine)
                IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""Redundant Kitchen,C:\iris\bin\Kitchen.exe"")
            End If
            '============================================

            '************************************************************
            'Paul E. 7/12/2018
            'The outside display (OCB) for Dual lane 1 will use the current POSMaintGUI ""Out Side Dispaly Reg"" register number
            'Dual Lane 2 will be the configured Dual Lane 2 register
            If (RegInfo.DefaultConcept = eDefaultConcept.SplitScreen OrElse RegInfo.DefaultConcept = eDefaultConcept.DualLane1) Then
                If PosMaint.OutSideDisplay1 = eOutSideDisplayType.SicomDigitalDisplay Or PosMaint.OutSideDisplay1 = eOutSideDisplayType.SicomOCU Then
                    tmpServiceCount += 1
                    DispThis(""           Adding Service "" & tmpServiceCount & "" OCS.exe OCBDisp1"" & NewLine)
                    IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""Sicom OCU 1,c:\iris\bin\OCS.exe OCBDisp1"")
                ElseIf PosMaint.OutSideDisplay1 = eOutSideDisplayType.AccuviewNG Then
                    tmpServiceCount += 1
                    DispThis(""           Adding Service "" & tmpServiceCount & "" tddisp.exe OCBDisp1"" & NewLine)
                    IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""Out Side Display,c:\iris\bin\tddisp.exe OCBDisp1"")
                End If
            End If
            If RegInfo.DefaultConcept = eDefaultConcept.DualLane2 Then
                If PosMaint.OutSideDisplay2 = eOutSideDisplayType.SicomDigitalDisplay Or PosMaint.OutSideDisplay2 = eOutSideDisplayType.SicomOCU Then
                    tmpServiceCount += 1
                    DispThis(""           Adding Service "" & tmpServiceCount & "" OCS.exe OCBDisp2"" & NewLine)
                    IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""Sicom OCU 2,c:\iris\bin\OCS.exe OCBDisp2"")
                ElseIf PosMaint.OutSideDisplay2 = eOutSideDisplayType.AccuviewNG Then
                    tmpServiceCount += 1
                    DispThis(""           Adding Service "" & tmpServiceCount & "" tddisp.exe OCBDisp2"" & NewLine)
                    IrisIni.WriteString(""POSShell"", ""SERVICE"" & tmpServiceCount.ToString, ""Out Side Display,c:\iris\bin\tddisp.exe OCBDisp2"")
                End If
            End If
            '************************************************************
            DispThis(""           Service Count of "" & tmpServiceCount & NewLine)
            IrisIni.WriteInteger(""POSShell"", ""SERVICE_COUNT"", tmpServiceCount)
            Sleep(10)
            DispThis(""        Finish Register "" & xLoop_Register & NewLine)
        Next
        IrisIni = Nothing
        DispThis(""     FixIrisIni Finish"" & NewLine)

    End Sub
"
iVVr15JF,Untitled,penright,VB.NET,Tuesday 3rd of October 2023 03:02:18 PM CDT,"    Sub UpdatetblRegTimeConcepts(ByVal ConceptID As Integer,
                                 ByVal Description As String,
                                 ByVal RegID As Integer,
                                 ByVal PeriodID As Integer,
                                 ByVal JobCodeSecurity As Integer)
        DataAccessIris.ExecCommand(""Insert into tblRegTimeConcepts (ConceptID,Description,"" +
                                 ""RegID,PeriodID,JobCodeSecurity) "" +
                                 "" Values "" +
                                 ""("" + ConceptID.ToString + "","" +
                                 ""'"" + Description + ""',"" +
                                 RegID.ToString + "","" +
                                 PeriodID.ToString + "","" +
                                 JobCodeSecurity.ToString + "")"")
    End Sub"
FayUmzVK,Untitled,penright,VB.NET,Tuesday 3rd of October 2023 03:01:03 PM CDT,"   Sub FixSCBBreakfastCombo()
        Dim lstSQL_1 As New List(Of String)
        Dim lstSQL_2 As New List(Of String)
        Using dtAttachments As clsDataTable = DataAccessIris.GetDT2(""Select * from tbl_ItemCatLinks Where CatID = 6023"")
            For i As Integer = 0 To dtAttachments.RowCount - 1
                lstSQL_1.Add(""Delete from tbl_ItemAttachments where ItemNum = "" & CStrNull(dtAttachments.Rows(i)!ItemNum))
                lstSQL_2.Add(""INSERT tbl_ItemAttachments(ItemNum, SeqNum, InsMarker, IsModifier, IsItem, ID, MinChoices, MaxChoices,"" &
                           ""PromptSoundFile, ReplacePrice, PriceAdjust, DeductItemPrice, NoNegativePrice, AllowQTY, Destination)"" &
                           ""Values("" & CStrNull(dtAttachments.Rows(i)!ItemNum) & "",0,0,0,1,5651,1,1,0,0.00,0,-1,0,0,0)"") 'Add Hash-browns
                If PosMaint.SpecialityCoffeeStore Then
                    lstSQL_2.Add(""INSERT tbl_ItemAttachments(ItemNum, SeqNum, InsMarker, IsModifier, IsItem, ID, MinChoices, MaxChoices, "" &
                               ""PromptSoundFile, ReplacePrice, PriceAdjust, DeductItemPrice, NoNegativePrice, AllowQTY, Destination)"" &
                               ""Values("" & CStrNull(dtAttachments.Rows(i)!ItemNum) & "",1,0,0,0,2000,1,1,0,0.00,0,-1,0,0,0)"") 'Special Coffee Menu
                    'PE 3/7/2022
                    'Added In you face upsize
                    lstSQL_2.Add(""INSERT tbl_ItemAttachments(ItemNum, SeqNum, InsMarker, IsModifier, IsItem, ID, MinChoices, MaxChoices, "" &
                               ""PromptSoundFile, ReplacePrice, PriceAdjust, DeductItemPrice, NoNegativePrice, AllowQTY, Destination)"" &
                               ""Values("" & CStrNull(dtAttachments.Rows(i)!ItemNum) & "",2,0,0,0,395,0,0,0,0.00,0,-1,0,0,0)"") 'Menu for up sized
                Else
                    lstSQL_2.Add(""INSERT tbl_ItemAttachments(ItemNum, SeqNum, InsMarker, IsModifier, IsItem, ID, MinChoices, MaxChoices,"" &
                               ""PromptSoundFile, ReplacePrice, PriceAdjust, DeductItemPrice, NoNegativePrice, AllowQTY, Destination)"" &
                               ""Values("" & CStrNull(dtAttachments.Rows(i)!ItemNum) & "",1,0,0,1,3509,1,1,0,0.00,0,-1,0,0,0)"") 'Small Coffee Item
                    'PE 3/7/2022
                    'Added In you face up size
                    lstSQL_2.Add(""INSERT tbl_ItemAttachments(ItemNum, SeqNum, InsMarker, IsModifier, IsItem, ID, MinChoices, MaxChoices, "" &
                               ""PromptSoundFile, ReplacePrice, PriceAdjust, DeductItemPrice, NoNegativePrice, AllowQTY, Destination)"" &
                               ""Values("" & CStrNull(dtAttachments.Rows(i)!ItemNum) & "",2,0,0,0,395,0,0,0,0.00,0,-1,0,0,0)"") 'Menu For up sized
                End If
            Next
        End Using
        'DataAccessIris.ExecCommand(""DELETE FROM TBL_ITEMATTACHMENTS WHERE ID = 3509"" & vbNewLine & _
        '               ""DELETE FROM TBL_ITEMATTACHMENTS WHERE ID = 5651"" & vbNewLine & _
        '               ""DELETE FROM TBL_ITEMATTACHMENTS WHERE ID = 2000"")
        ''run the list
        If lstSQL_1.Count > 0 Then DataAccessIris.ExecCommand(Join(lstSQL_1.ToArray, vbNewLine))
        If lstSQL_2.Count > 0 Then DataAccessIris.ExecCommand(Join(lstSQL_2.ToArray, vbNewLine))

    End Sub"
RrJVeRaG,Untitled,penright,VB.NET,Tuesday 3rd of October 2023 02:59:56 PM CDT,"    Sub FixPosCfg()
        'Dim rsTimePeriods As New clsDataTable
        Dim store As Integer
        Dim TaxId(9) As Double
        Dim tmpStoreNumber As String
        Dim tmpDriveRegCount As Integer
        Dim tmpPhone As String
        tmpStoreNumber = PosMaint.StoreNumber.ToString.PadLeft(3, ""0""c)
        store = CIntNull(tmpStoreNumber)
        TaxId(1) = PosMaint.TaxFtn / 100
        TaxId(2) = 0
        TaxId(3) = PosMaint.TaxFoodPackage / 100
        TaxId(4) = PosMaint.TaxNonFoodPackage / 100
        TaxId(5) = 0
        TaxId(6) = 0

        '***************************************************************************
        'Ready to update SQL's poscfg
        '***************************************************************************
        DispThis(""Updating Tax Tables, "")
        Using dt As clsDataTable = DataAccessIris.GetDT2(""Select * from tblTax"", , , , , eErrReturn.Exception)
            For xLoop As Integer = 0 To dt.RowCount - 1
                DispThis(CIntNull(dt.Rows(xLoop)!TableID).ToString & "", "")
                dt.Rows(xLoop)!AmtOrPerc = TaxId(CIntNull(dt.Rows(xLoop)!TableID))
            Next
            DispThis(""update data table, "")
            dt.UpdateData()
        End Using
        DispThis(""Done"" & NewLine)


        DispThis(""Updating Tax Category 3 (TX taxable), "")
        Using dt As clsDataTable = DataAccessIris.GetDT2(""Select * from tbl_ItemTaxCategories order by TaxCatNum"", , , , , eErrReturn.Exception)
            Dim drTmp As DataRow = dt.LocalWalkFindRow(New Dictionary(Of String, Object) From {{""TaxCatNum"", 3}})
            If drTmp IsNot Nothing Then
                If PosMaint.State.ToUpper = ""TX"" Then
                    DispThis(""TX Store, "")
                    drTmp!EatInMask = ""NNNYNNNNNN""
                    drTmp!EatOutMask = ""NNNYNNNNNN""
                ElseIf Now >= #1/1/2018# AndAlso PosMaint.State.ToUpper = ""AR"" Then
                    DispThis(""AR Store, "")
                    drTmp!EatInMask = ""NNNYNNNNNN""
                    drTmp!EatOutMask = ""NNNYNNNNNN""
                Else
                    DispThis(""NON-TX Store, "")
                    drTmp!EatInMask = ""NNYNNNNNNN""
                    drTmp!EatOutMask = ""NNYNNNNNNN""
                End If
                DispThis(""update data table, "")
                dt.UpdateData()
            Else
            End If
        End Using
        DispThis(""Done"" & NewLine)

        DispThis(""Updating Tax Category 5 (TX taxable), "")
        Using dt As clsDataTable = DataAccessIris.GetDT2(""Select * from tbl_ItemTaxCategories order by TaxCatNum"", , , , , eErrReturn.Exception)
            Dim drTmp As DataRow = dt.LocalWalkFindRow(New Dictionary(Of String, Object) From {{""TaxCatNum"", 5}})
            If drTmp IsNot Nothing Then
                If PosMaint.State.ToUpper = ""TX"" Then
                    DispThis(""TX Store, "")
                    drTmp!EatInMask = ""NNNYNNNNNN""
                    drTmp!EatOutMask = ""NNNYNNNNNN""
                ElseIf Now >= #1/1/2018# AndAlso PosMaint.State.ToUpper = ""AR"" Then
                    DispThis(""AR Store, "")
                    drTmp!EatInMask = ""NNYNNNNNNN""
                    drTmp!EatOutMask = ""NNYNNNNNNN""
                Else
                    DispThis(""NON-TX Store, "")
                    drTmp!EatInMask = ""NNYNNNNNNN""
                    drTmp!EatOutMask = ""NNYNNNNNNN""
                End If
                DispThis(""update data table, "")
                dt.UpdateData()
            Else
            End If
        End Using
        DispThis(""Done"" & NewLine)


        DispThis(""      Updating Store Info"" & NewLine)
        If Len(PosMaint.Phone_Number) > 9 Then
            tmpPhone = ""("" + Mid(PosMaint.Phone_Number, 1, 3) + "") "" + Mid(PosMaint.Phone_Number, 4, 3) + ""-"" + Mid(PosMaint.Phone_Number, 7)
        Else
            tmpPhone = PosMaint.Phone_Number
        End If
        DataAccessIris.ExecCommand(""update tblStoreInfo Set "" +
                 ""StoreNum="" + tmpStoreNumber + "","" +
                 ""StoreName='Braums #"" + tmpStoreNumber + ""',"" +
                 ""Address1='"" + PosMaint.Address + ""',"" +
                 ""City='"" + PosMaint.City + ""',"" +
                 ""StateCode='"" + PosMaint.State + ""',"" +
                 ""Zip='"" + PosMaint.Zip + ""',"" +
                 ""Phone='"" + tmpPhone + ""'"" +
                 ""where CompanyID=0"")
        DispThis(""      Emergency Food Stamp?"" & NewLine)
        If PosMaint.EmergencyFoodStampActive Then
            DispThis(""      Emergency Food Stamp (YES)"" & NewLine)
            DataAccessIris.ExecCommand(""update tbl_ItemMaster Set "" +
                     ""AllowFoodStamps='1'"")
            DataAccessIris.ExecCommand(""update tbl_ItemMaster Set "" +
                     ""AllowFoodStampsToGo='1'"")
        End If

        ''***************************************************************************************************************
        'PE 8/31/2020 Use the new EOD_Time aux field 
        '    Also added register eod table (tblTimedRegisterEvents)
        '      Event Type 1 is the EOD for registers
        'Dim EODTime As Date = CDateNull(""12/30/1889 "" & PosMaint.EOD_Time)
        Dim EODTime As Date = CDateNull(""12/30/1899 "" & PosMaint.EOD_Time)
        Dim RegisterMinutesOffset As Integer = 10
        DispThis(""      Updating EOD times for Backoffice, "")
        Using dt As clsDataTable = DataAccessIris.GetDT2(""Select * from tblStoreHours"", , , , True)
            For xLoop As Integer = 0 To dt.RowCount - 1
                dt.Rows(xLoop)!EODTime = EODTime
            Next
            dt.UpdateData()
        End Using
        'DispThis(""Update with query,"")
        'DataAccessIris.ExecCommand(""Update tblStoreHours Set EODTime ='"" & PosMaint.EOD_Time & ""'"")
        DispThis(""done."" & NewLine)
        DispThis(""      Updating EOD times for Registers, "")
        Using dt As clsDataTable = DataAccessIris.GetDT2(""Select * from tblTimedRegisterEvents where EventType=1"", , , , True)
            Dim AddRegisters As New List(Of Integer)
            Dim RemoveRegister As New List(Of Integer)
            Dim RegisterList As List(Of Integer) = PosMaint.RegisterNumberList.ToList
            'Lets loop through register numbers and see if any need to be added.
            For xLoop As Integer = 0 To RegisterList.Count - 1
                dt.LocalWalkFindFilter(New Dictionary(Of String, Object) From {{""RegisterNum"", RegisterList(xLoop)}})
                If dt.LocalWalkFindRecordNum < 0 Then AddRegisters.Add(RegisterList(xLoop))
            Next
            'Let loop through the data table and see if we need to remove
            For xLoop As Integer = 0 To dt.RowCount - 1
                If CIntNull(dt.Rows(xLoop)!RegisterNum) <> 0 AndAlso Not RegisterList.Contains(CIntNull(dt.Rows(xLoop)!RegisterNum)) Then
                    If Not RemoveRegister.Contains(CIntNull(dt.Rows(xLoop)!RegisterNum)) Then RemoveRegister.Add(CIntNull(dt.Rows(xLoop)!RegisterNum))
                End If
            Next
            'Now add the needed registers
            For xLoop As Integer = 0 To AddRegisters.Count - 1
                For dayLoop As Integer = 1 To 7
                    Dim nr As DataRow = dt.NewRow
                    nr!RegisterNum = AddRegisters(xLoop)
                    nr!DOWNum = dayLoop
                    nr!EventType = 1
                    nr!UseNextDay = 0
                    nr!EventTime = EODTime.AddMinutes(RegisterMinutesOffset)
                    nr!UseNextDay = 0
                    nr!ElapseWeeks = 1
                    nr!PostEODScript = ""c:\iris\scripts\systemMaint.vbs /purgeonlogon""
                    nr!PostEODEvent = 20000
                    nr!Manual = 0
                    dt.Rows.Add(nr)
                Next
            Next
            'And remove the no longer needed registers
            For xLoop As Integer = 0 To RemoveRegister.Count - 1
                dt.DefaultView.RowFilter = ""RegisterNum="" & RemoveRegister(xLoop)
                For recordLoop As Integer = dt.DefaultView.Count - 1 To 0 Step -1
                    dt.DefaultView.Item(recordLoop).Delete()
                Next
            Next
            dt.UpdateData()
            For xLoop As Integer = 0 To dt.RowCount - 1
                dt.Rows(xLoop)!EventTime = EODTime.AddMinutes(RegisterMinutesOffset)
            Next
            dt.UpdateData()
        End Using
        'DispThis(""Update with query,"")
        'DataAccessIris.ExecCommand(""Update tblTimedRegisterEvents Set EventTime ='"" & PosMaint.EOD_Time & ""'  where EventType=1"")
        DispThis(""done."" & NewLine)


        '***************************************************************************************************************



        DispThis(""      Updating tblcfgsettings"" & NewLine)
        Using dt As clsDataTable = DataAccessIris.GetDT2(""Select * from tblCfgSetting"", , , , True)
            dt.DefaultView.RowFilter = ""SettingID=621""
            If dt.DefaultView.Count > 0 Then
                DispThis(""      Updating Send Grill "" & (PosMaint.PrtExpoNumberPriName.ToUpper <> ""NONE"").ToString & NewLine)
                dt.DefaultView.Item(0)!SettingVal = (PosMaint.PrtExpoNumberPriName.ToUpper <> ""NONE"")
            End If
            dt.DefaultView.RowFilter = ""SettingID=25""
            If dt.DefaultView.Count > 0 Then
                DispThis(""      Updating Send Events ("" & PosMaint.SendToEventAdapter.ToString & "")"" & NewLine)
                dt.DefaultView.Item(0)!SettingVal = PosMaint.SendToEventAdapter
            End If
            dt.DefaultView.RowFilter = ""SettingID=221""
            If dt.DefaultView.Count > 0 Then
                DispThis(""      Updating Ask Tax ID Number"" & NewLine)
                dt.DefaultView.Item(0)!SettingVal = (CIntNull(StoreNumber) > 400 Or
                                                         PosMaint.State.ToUpper = ""OK"")
            End If
            dt.DefaultView.RowFilter = ""SettingID=229""
            If dt.DefaultView.Count > 0 Then
                DispThis(""      Updating Ask Tax Reason"" & NewLine)
                dt.DefaultView.Item(0)!SettingVal = (CIntNull(StoreNumber) > 400 Or
                                                          PosMaint.State.ToUpper = ""OK"")
            End If

            'This is a test for Robert to enforce closed drawers
            'P.E. 2/8/2023
            DispThis(""      Updating Force Drawer Close on open tickets, "")
            If IO.File.Exists(""c:\ForceDrawerClose.flg"") Then
                dt.DefaultView.RowFilter = ""SettingID=568""
                If dt.DefaultView.Count > 0 Then
                    DispThis("", 568, Yes, "" & NewLine)
                    dt.DefaultView.Item(0)!SettingVal = 1
                End If
                DispThis(""setting button on screen"")
                DataAccessIris.ExecCommand(""update tbl_MenuBtns set StartX=9,StartY=347 where MenuID=50331650 and BtnValue=23"")
            Else
                dt.DefaultView.RowFilter = ""SettingID=568""
                If dt.DefaultView.Count > 0 Then
                    DispThis("", 568, No"" & NewLine)
                    dt.DefaultView.Item(0)!SettingVal = 0
                End If
                DispThis(""setting button off screen"")
                DataAccessIris.ExecCommand(""update tbl_MenuBtns set StartX=542,StartY=42 where MenuID=50331650 and BtnValue=23"")
            End If
            DispThis(NewLine)


            'Took this out because it is being enforced everywhere and its no longer needed.
            'EDIT: PCromie 11/2/2021
            'DispThis(""      Updating Schedule Enforce "")
            'If IO.File.Exists(""c:\EnforceSchedule.flg"") Then
            '    dt.DefaultView.RowFilter = ""SettingID=542""
            '    If dt.DefaultView.Count > 0 Then
            '        DispThis("", 542, Yes"" & NewLine)
            '        dt.DefaultView.Item(0)!SettingVal = 1
            '    End If
            'Else
            '    dt.DefaultView.RowFilter = ""SettingID=542""
            '    If dt.DefaultView.Count > 0 Then
            '        DispThis("", 542, No"" & NewLine)
            '        dt.DefaultView.Item(0)!SettingVal = 0
            '    End If
            'End If
            'DispThis(NewLine)

            DispThis(""      Updating Dual Lane "")
            If PosMaint.IsDualLane Then
                dt.DefaultView.RowFilter = ""SettingID=670""
                If dt.DefaultView.Count > 0 Then
                    DispThis("", 670, Yes"" & NewLine)
                    dt.DefaultView.Item(0)!SettingVal = 1
                End If
                'Starting on 4.0.9 we are setting 671 
                '  (Presists lane chose).
                dt.DefaultView.RowFilter = ""SettingID=671""
                If dt.DefaultView.Count > 0 Then
                    DispThis("", 671, Yes"" & NewLine)
                    dt.DefaultView.Item(0)!SettingVal = 0
                End If
            Else
                dt.DefaultView.RowFilter = ""SettingID=670""
                If dt.DefaultView.Count > 0 Then
                    DispThis("", 670, No"" & NewLine)
                    dt.DefaultView.Item(0)!SettingVal = 0
                End If
                dt.DefaultView.RowFilter = ""SettingID=671""
                If dt.DefaultView.Count > 0 Then
                    DispThis("", 671, No"" & NewLine)
                    dt.DefaultView.Item(0)!SettingVal = 0
                End If
            End If
            DispThis(NewLine)




            'dt.DefaultView.RowFilter = ""SettingID=925""
            'If dt.DefaultView.Count > 0 Then
            '    DispThis(""      Updating Message Center Prompt at Clock in = "" & PosMaint.IsBrMessage.ToString & NewLine)
            '    If CBoolNull(dt.DefaultView.Item(0)!SettingVal) <> PosMaint.IsBrMessage Then dt.DefaultView.Item(0)!SettingVal = PosMaint.IsBrMessage
            'End If
            'dt.DefaultView.RowFilter = ""SettingID=927""
            'If dt.DefaultView.Count > 0 Then
            '    DispThis(""      Updating Manual Log on to Message Center from POS = "" & PosMaint.IsBrMessage.ToString & NewLine)
            '    If CBoolNull(dt.DefaultView.Item(0)!SettingVal) <> PosMaint.IsBrMessage Then dt.DefaultView.Item(0)!SettingVal = PosMaint.IsBrMessage
            'End If
            dt.UpdateData()
        End Using

        DispThis(""      Updating Reg Time Periods"" & NewLine)
        Using dt As clsDataTable = DataAccessIris.GetDT2(""Select * from tblTimePeriods order by PeriodID"", , , , True)
            For xLoop As Integer = 0 To dt.RowCount - 1
                Select Case CIntNull(dt.Rows(xLoop)(""PeriodID""))
                    Case 1
                        dt.Rows(xLoop)(""Description"") = ""Breakfast""
                        dt.Rows(xLoop)(""Sunday"") = #12/30/1899 4:00:00 AM#
                        dt.Rows(xLoop)(""Monday"") = #12/30/1899 4:00:00 AM#
                        dt.Rows(xLoop)(""Tuesday"") = #12/30/1899 4:00:00 AM#
                        dt.Rows(xLoop)(""Wednesday"") = #12/30/1899 4:00:00 AM#
                        dt.Rows(xLoop)(""Thursday"") = #12/30/1899 4:00:00 AM#
                        dt.Rows(xLoop)(""Friday"") = #12/30/1899 4:00:00 AM#
                        dt.Rows(xLoop)(""Saturday"") = #12/30/1899 4:00:00 AM#
                    Case 2
                        dt.Rows(xLoop)(""Description"") = ""Lunch/Dinner""
                        dt.Rows(xLoop)(""Sunday"") = #12/30/1899 11:00:00 AM#
                        dt.Rows(xLoop)(""Monday"") = #12/30/1899 10:30:00 AM#
                        dt.Rows(xLoop)(""Tuesday"") = #12/30/1899 10:30:00 AM#
                        dt.Rows(xLoop)(""Wednesday"") = #12/30/1899 10:30:00 AM#
                        dt.Rows(xLoop)(""Thursday"") = #12/30/1899 10:30:00 AM#
                        dt.Rows(xLoop)(""Friday"") = #12/30/1899 10:30:00 AM#
                        dt.Rows(xLoop)(""Saturday"") = #12/30/1899 10:30:00 AM#
                    Case 3 '.AddDays(693593) is for sql fix of a different min date
                        dt.Rows(xLoop)(""Description"") = ""Drive Breakfast Down Time""
                        dt.Rows(xLoop)(""Sunday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.BreakFast, Windows.Forms.Day.Sunday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Monday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.BreakFast, Windows.Forms.Day.Monday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Tuesday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.BreakFast, Windows.Forms.Day.Tuesday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Wednesday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.BreakFast, Windows.Forms.Day.Wednesday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Thursday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.BreakFast, Windows.Forms.Day.Thursday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Friday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.BreakFast, Windows.Forms.Day.Friday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Saturday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.BreakFast, Windows.Forms.Day.Saturday, eTimePeriodAction.DownTime)
                    Case 4 '.AddDays(693593) is for sql fix of a different min date
                        dt.Rows(xLoop)(""Description"") = ""Drive Breakfast Up Time""
                        dt.Rows(xLoop)(""Sunday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.BreakFast, Windows.Forms.Day.Sunday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Monday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.BreakFast, Windows.Forms.Day.Monday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Tuesday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.BreakFast, Windows.Forms.Day.Tuesday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Wednesday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.BreakFast, Windows.Forms.Day.Wednesday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Thursday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.BreakFast, Windows.Forms.Day.Thursday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Friday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.BreakFast, Windows.Forms.Day.Friday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Saturday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.BreakFast, Windows.Forms.Day.Saturday, eTimePeriodAction.UpTime)
                    Case 5 '.AddDays(693593) is for sql fix of a different min date
                        dt.Rows(xLoop)(""Description"") = ""Drive Lunch Down Time""
                        dt.Rows(xLoop)(""Sunday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Lunch, Windows.Forms.Day.Sunday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Monday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Lunch, Windows.Forms.Day.Monday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Tuesday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Lunch, Windows.Forms.Day.Tuesday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Wednesday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Lunch, Windows.Forms.Day.Wednesday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Thursday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Lunch, Windows.Forms.Day.Thursday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Friday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Lunch, Windows.Forms.Day.Friday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Saturday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Lunch, Windows.Forms.Day.Saturday, eTimePeriodAction.DownTime)
                    Case 6 '.AddDays(693593) is for sql fix of a different min date
                        dt.Rows(xLoop)(""Description"") = ""Drive Lunch Up Time""
                        dt.Rows(xLoop)(""Sunday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Lunch, Windows.Forms.Day.Sunday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Monday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Lunch, Windows.Forms.Day.Monday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Tuesday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Lunch, Windows.Forms.Day.Tuesday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Wednesday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Lunch, Windows.Forms.Day.Wednesday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Thursday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Lunch, Windows.Forms.Day.Thursday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Friday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Lunch, Windows.Forms.Day.Friday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Saturday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Lunch, Windows.Forms.Day.Saturday, eTimePeriodAction.UpTime)
                    Case 7 '.AddDays(693593) is for sql fix of a different min date
                        dt.Rows(xLoop)(""Description"") = ""Drive Dinner Down Time""
                        dt.Rows(xLoop)(""Sunday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Dinner, Windows.Forms.Day.Sunday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Monday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Dinner, Windows.Forms.Day.Monday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Tuesday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Dinner, Windows.Forms.Day.Tuesday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Wednesday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Dinner, Windows.Forms.Day.Wednesday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Thursday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Dinner, Windows.Forms.Day.Thursday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Friday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Dinner, Windows.Forms.Day.Friday, eTimePeriodAction.DownTime)
                        dt.Rows(xLoop)(""Saturday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Dinner, Windows.Forms.Day.Saturday, eTimePeriodAction.DownTime)
                    Case 8 '.AddDays(693593) is for sql fix of a different min date
                        dt.Rows(xLoop)(""Description"") = ""Drive Dinner Up Time""
                        dt.Rows(xLoop)(""Sunday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Dinner, Windows.Forms.Day.Sunday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Monday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Dinner, Windows.Forms.Day.Monday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Tuesday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Dinner, Windows.Forms.Day.Tuesday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Wednesday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Dinner, Windows.Forms.Day.Wednesday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Thursday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Dinner, Windows.Forms.Day.Thursday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Friday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Dinner, Windows.Forms.Day.Friday, eTimePeriodAction.UpTime)
                        dt.Rows(xLoop)(""Saturday"") = PosMaint.DriveTenderBlockReg(eTimePeriod.Dinner, Windows.Forms.Day.Saturday, eTimePeriodAction.UpTime)
                End Select
            Next
            dt.UpdateData()
        End Using
        DispThis(""      Updating Reg Mode DefSetting"" & NewLine)
        'RegModeID	SettingID	SettingVal	SettingValEx
        '51	        511	        1	 *Controls the sign in Function
        '51	        512	        0	 *Controls the Clock in\Out Function
        '51	        519	        1	 *Controls the Order Entry Timeout Function
        '51	        548	        0	 *Controls the Intermediate Screen Function


        Dim cmdparmRegModDeSetting(3) As Common.DbParameter
        cmdparmRegModDeSetting(0) = DataAccessIris.DBParameter
        cmdparmRegModDeSetting(1) = DataAccessIris.DBParameter
        cmdparmRegModDeSetting(2) = DataAccessIris.DBParameter
        cmdparmRegModDeSetting(3) = DataAccessIris.DBParameter
        cmdparmRegModDeSetting(0).ParameterName = ""@RegModeID""
        cmdparmRegModDeSetting(1).ParameterName = ""@SettingID""
        cmdparmRegModDeSetting(2).ParameterName = ""@SettingVal""
        cmdparmRegModDeSetting(3).ParameterName = ""@SettingValEx""
        Dim strSQL As String = ""update tblCFGRegModeDefSetting Set "" &
                                        ""SettingVal = @SettingVal, "" &
                                        ""SettingValEx = @SettingValEx "" &
                                     ""Where "" &
                                        ""RegModeID = @RegModeID and "" &
                                        ""SettingID = @SettingID ""

        cmdparmRegModDeSetting(0).Value = 51 'Fresh Market
        If PosMaint.RegisterAutoLogOutTimeFreshMarket > 0 Then
            cmdparmRegModDeSetting(1).Value = 511
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 512
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 519
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 548
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
        Else
            cmdparmRegModDeSetting(1).Value = 511
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 512
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 519
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 548
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
        End If

        cmdparmRegModDeSetting(0).Value = 61 'Fountain
        If PosMaint.RegisterAutoLogOutTimeFountain > 0 Then
            cmdparmRegModDeSetting(1).Value = 511
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 512
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 519
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 548
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
        Else
            cmdparmRegModDeSetting(1).Value = 511
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 512
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 519
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 548
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
        End If

        cmdparmRegModDeSetting(0).Value = 71 'Lobby
        If PosMaint.RegisterAutoLogOutTimeLobby > 0 Then
            cmdparmRegModDeSetting(1).Value = 511
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 512
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 519
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 548
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
        Else
            cmdparmRegModDeSetting(1).Value = 511
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 512
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 519
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 548
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
        End If

        cmdparmRegModDeSetting(0).Value = 11 'Drive All
        If PosMaint.RegisterAutoLogOutTimeDrive > 0 Then
            cmdparmRegModDeSetting(1).Value = 511
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 512
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 519
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 548
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
        Else
            cmdparmRegModDeSetting(1).Value = 511
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 512
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 519
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 548
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
        End If

        cmdparmRegModDeSetting(0).Value = 13 'Drive Split Screen / Exp
        If PosMaint.RegisterAutoLogOutTimeDrive > 0 Then
            cmdparmRegModDeSetting(1).Value = 511
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 519
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
        Else
            cmdparmRegModDeSetting(1).Value = 511
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 519
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
        End If
        '************************************************************************************************************************
        'Added 7/23/2018 by Pcromie
        'at Klucas Request
        'Paul E. 6/30/2020
        'Setting ID 323 (Qty Seat Toggle/Bag Total) and 1101 (Hide Bag On Guest Check)
        '    Before Dual lane vs Single lane were different configurations. Drew wanted the Single lanes
        '      to work like the Dual lanes, so for now even though we test if dual lane, they are the same.
        '      Use to be 323=0 and 1101=1 in dual lane. Flip them for single lane.
        '    Once this has been in the field, they can be removed and just maintained via the SyncV3.
        cmdparmRegModDeSetting(0).Value = 3 'Dual Lane Split Check Cashier
        If PosMaint.IsDualLane Then
            cmdparmRegModDeSetting(1).Value = 323
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 1101
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
        Else
            cmdparmRegModDeSetting(1).Value = 323
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 1101
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
        End If

        cmdparmRegModDeSetting(0).Value = 2 'Dual Lane Split Check OrderTaker
        If PosMaint.IsDualLane Then
            cmdparmRegModDeSetting(1).Value = 323
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 1101
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
        Else
            cmdparmRegModDeSetting(1).Value = 323
            cmdparmRegModDeSetting(2).Value = 0
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
            cmdparmRegModDeSetting(1).Value = 1101
            cmdparmRegModDeSetting(2).Value = 1
            cmdparmRegModDeSetting(3).Value = DBNull.Value
            DataAccessIris.ExecCommand(strSQL, cmdparmRegModDeSetting)
        End If
        '************************************************************************************************************************


        DispThis(""      Updating Concepts"" & NewLine)
        DispThis(""        Set Group Order (YES)"" & NewLine)
        DataAccessIris.ExecCommand(""Update tblConcept Set OrderEntryToolBarID = '67108896' where conceptID =12 or conceptID =15"")

        DispThis(""      Updating tblConcepts Tender Screen, "")
        DispThis(""HeartSIP, "")
        DataAccessIris.ExecCommand(""Update tblConcept Set TenderFunctionsID = 50331660, TenderToolBarID = 67108870 Where ConceptID in (21,22)"")
        DataAccessIris.ExecCommand(""Update tblConcept Set TenderFunctionsID = 50331660, TenderToolBarID = 67108870 Where ConceptID = 13"")
        DataAccessIris.ExecCommand(""Update tblConcept Set TenderFunctionsID = 50331660, TenderToolBarID = 67108870 Where ConceptID in (12,15)"")
        DataAccessIris.ExecCommand(""Update tblConcept Set TenderFunctionsID = 50331660, TenderToolBarID = 67108886 Where ConceptID in (18,19,20,25,26,27,28,30,31,32,33,35,36)"")

        DispThis(""      Updating tblConcepts Dual Lane, "")
        If PosMaint.IsDualLane Then
            DispThis(""Dual Lane, "")
            DataAccessIris.ExecCommand(""Update tblConcept Set TenderToolBarID = 67108868 Where ConceptID in (27,28)"")
        Else
            DispThis(""Single Lane, "")
            DataAccessIris.ExecCommand(""Update tblConcept Set TenderToolBarID = 67108886 Where ConceptID in (27,28)"")
        End If

        DispThis(""Done."" & NewLine)

        DispThis(""      Updating tbl_MenuBtns Gift Card Screen, "")
        DispThis(""HeartSIP, "")
        DataAccessIris.ExecCommand(""Update tbl_MenuBtns Set BtnValue = 316 Where BtnValue = 40 and BtnType = 4 and Style = 1124"")
        DispThis(""Done."" & NewLine)

        'Added 3/28/2016 by PCromie
        DispThis(""Fixing Manual Entered Credit Cards..."")
        Using PTConfig As clsDataTable = DataAccessIris.GetDT2(""Select * from tbl_PayTypeConfig where ConfigID = 5066"", , , , , eErrReturn.Exception)
            For xloop As Integer = 0 To PTConfig.Rows.Count - 1
                'loop through each row and set the values to 1 if it is portico
                PTConfig.Rows(xloop)!Amt = 0
            Next
            PTConfig.UpdateData()
        End Using
        DispThis("" Done"" & NewLine)

        DispThis(""Requires Encryption for Credit Cards..."")
        Using PTConfig As clsDataTable = DataAccessIris.GetDT2(""Select * from tbl_PayTypeConfig where ConfigID = 5125"", , , , , eErrReturn.Exception)
            For xloop As Integer = 0 To PTConfig.Rows.Count - 1
                'loop through each row and set the values to 1 if it is portico
                PTConfig.Rows(xloop)!Amt = 1
            Next
            PTConfig.UpdateData()
        End Using
        DispThis("" Done"" & NewLine)


        '***************************************************************************************************************************************
        'PE 09/20/2023
        'Implement new drive via concepts, aux setting 'Quick'
        DispThis(""      Updating Reg Time Concepts"" & NewLine)
        tmpDriveRegCount = 0
        DataAccessIris.ExecCommand(""Delete from tblRegTimeConcepts"")
        Using dt As clsDataTable = DataAccessIris.GetDT2(""Select * from tblRegTimeConcepts"", , , , True)
            For xLoop As Integer = 0 To PosMaint.RegisterInformations.Count - 1
                Dim RegInfo As PosMaint10.RegInfo = PosMaint.RegisterInformations(xLoop)
                Select Case RegInfo.DefaultConcept
                    Case eDefaultConcept.FreshMarket
                        UpdatetblRegTimeConcepts(21, ""Package Breakfast"", RegInfo.RegisterNumber, 1, 0)
                        UpdatetblRegTimeConcepts(22, ""Package Lunch"", RegInfo.RegisterNumber, 2, 0)
                    Case eDefaultConcept.Fountain
                        UpdatetblRegTimeConcepts(13, ""Fountain Breakfast"", RegInfo.RegisterNumber, 1, 0)
                        UpdatetblRegTimeConcepts(13, ""Fountain Lunch"", RegInfo.RegisterNumber, 2, 0)
                    Case eDefaultConcept.Lobby
                        UpdatetblRegTimeConcepts(12, ""Lobby Breakfast"", RegInfo.RegisterNumber, 1, 0)
                        UpdatetblRegTimeConcepts(15, ""Lobby Lunch"", RegInfo.RegisterNumber, 2, 0)
                    Case eDefaultConcept.SplitScreen
                        If PosMaint.DriveStyle.ToUpper = ""QUICK"" Then
                            UpdatetblRegTimeConcepts(1000, ""Drive Expo Breakfast (Order Only/No Cash Dawer)"", RegInfo.RegisterNumber, 1, 0)
                            UpdatetblRegTimeConcepts(1001, ""Drive Expo Lunch (Order Only/No Cash Dawer)"", RegInfo.RegisterNumber, 2, 0)
                        Else
                            UpdatetblRegTimeConcepts(18, ""Drive Expo Breakfast (800X600)"", RegInfo.RegisterNumber, 1, 0)
                            UpdatetblRegTimeConcepts(19, ""Drive Expo Lunch (800X600)"", RegInfo.RegisterNumber, 2, 0)
                        End If
                    Case eDefaultConcept.Tender
                        If PosMaint.DriveStyle.ToUpper = ""QUICK"" Then
                            If PosMaint.IsDualLane Then
                                UpdatetblRegTimeConcepts(2100, ""Drive Breakfast Tender 2 Lane"", RegInfo.RegisterNumber, 1, 0)
                                UpdatetblRegTimeConcepts(2102, ""Drive Lunch Tender 2 Lane"", RegInfo.RegisterNumber, 2, 0)
                            Else
                                UpdatetblRegTimeConcepts(2100, ""Drive Breakfast Tender 1 Lane"", RegInfo.RegisterNumber, 1, 0)
                                UpdatetblRegTimeConcepts(2102, ""Drive Lunch Tender 1 Lane"", RegInfo.RegisterNumber, 2, 0)
                            End If
                        Else
                            UpdatetblRegTimeConcepts(27, ""Drive Breakfast Tender"", RegInfo.RegisterNumber, 1, 0)
                            UpdatetblRegTimeConcepts(28, ""Drive Lunch Tender"", RegInfo.RegisterNumber, 2, 0)
                        End If
                    Case eDefaultConcept.RegisterDown
                        UpdatetblRegTimeConcepts(29, ""Drive Breakfast Tender Down"", RegInfo.RegisterNumber, 1, 0)
                        UpdatetblRegTimeConcepts(29, ""Drive Breakfast Tender Down"", RegInfo.RegisterNumber, 2, 0)
                    Case eDefaultConcept.TenderBlockReg
                        If PosMaint.DriveStyle.ToUpper = ""QUICK"" Then
                            If PosMaint.IsDualLane Then
                                UpdatetblRegTimeConcepts(2100, ""Drive Breakfast Tender Block 2 Lane"", RegInfo.RegisterNumber, 1, 0)
                                UpdatetblRegTimeConcepts(2201, ""Drive Breakfast Tender Block 2 Lane"", RegInfo.RegisterNumber, 2, 0)
                            Else
                                UpdatetblRegTimeConcepts(2000, ""Drive Breakfast Tender Block 1 Lane"", RegInfo.RegisterNumber, 1, 0)
                                UpdatetblRegTimeConcepts(2201, ""Drive Breakfast Tender Block 1 Lane"", RegInfo.RegisterNumber, 2, 0)
                            End If
                        Else
                            If PosMaint.IsDualLane Then
                                UpdatetblRegTimeConcepts(37, ""Drive Breakfast Tender"", RegInfo.RegisterNumber, 1, 0)
                                UpdatetblRegTimeConcepts(38, ""Drive Lunch Tender"", RegInfo.RegisterNumber, 2, 0)
                                UpdatetblRegTimeConcepts(39, ""Drive Breakfast Tender Down"", RegInfo.RegisterNumber, 3, 0)
                                UpdatetblRegTimeConcepts(37, ""Drive Breakfast Tender Up"", RegInfo.RegisterNumber, 4, 0)
                                UpdatetblRegTimeConcepts(39, ""Drive Lunch Tender Down"", RegInfo.RegisterNumber, 5, 0)
                                UpdatetblRegTimeConcepts(38, ""Drive Lunch Tender Up"", RegInfo.RegisterNumber, 6, 0)
                                UpdatetblRegTimeConcepts(39, ""Drive Dinner Tender Down"", RegInfo.RegisterNumber, 7, 0)
                                UpdatetblRegTimeConcepts(38, ""Drive Dinner Tender Up"", RegInfo.RegisterNumber, 8, 0)
                            Else
                                UpdatetblRegTimeConcepts(27, ""Drive Breakfast Tender"", RegInfo.RegisterNumber, 1, 0)
                                'PE 6/7/2022
                                'Concept 27 is Breakfast, 28 is Lunch, and 29 is Down
                                'So for Fast Drive Style the default for period 2 is 29 (Down)
                                If PosMaint.DriveStyle.ToUpper = ""FAST"" Then
                                    UpdatetblRegTimeConcepts(29, ""Down Style Fast Tender"", RegInfo.RegisterNumber, 2, 0)
                                Else
                                    UpdatetblRegTimeConcepts(28, ""Drive Lunch Tender"", RegInfo.RegisterNumber, 2, 0)
                                End If
                                UpdatetblRegTimeConcepts(29, ""Drive Breakfast Tender Down"", RegInfo.RegisterNumber, 3, 0)
                                UpdatetblRegTimeConcepts(27, ""Drive Breakfast Tender Up"", RegInfo.RegisterNumber, 4, 0)
                                UpdatetblRegTimeConcepts(29, ""Drive Lunch Tender Down"", RegInfo.RegisterNumber, 5, 0)
                                UpdatetblRegTimeConcepts(28, ""Drive Lunch Tender Up"", RegInfo.RegisterNumber, 6, 0)
                                UpdatetblRegTimeConcepts(29, ""Drive Dinner Tender Down"", RegInfo.RegisterNumber, 7, 0)
                                UpdatetblRegTimeConcepts(28, ""Drive Dinner Tender Up"", RegInfo.RegisterNumber, 8, 0)
                            End If
                        End If
                    Case eDefaultConcept.DualLane1
                        If PosMaint.DriveStyle.ToUpper = ""QUICK"" Then
                            UpdatetblRegTimeConcepts(1020, ""DL Drive Order Taker Breakfast Lane 1"", RegInfo.RegisterNumber, 1, 0)
                            UpdatetblRegTimeConcepts(1021, ""DL Drive Order Taker Lunch     Lane 1"", RegInfo.RegisterNumber, 2, 0)
                        Else
                            UpdatetblRegTimeConcepts(30, ""Drive Order Taker Breakfast Lane 1"", RegInfo.RegisterNumber, 1, 0)
                            UpdatetblRegTimeConcepts(31, ""Drive Order Taker Lunch     Lane 1"", RegInfo.RegisterNumber, 2, 0)
                        End If
                    Case eDefaultConcept.DualLane2
                        If PosMaint.DriveStyle.ToUpper = ""QUICK"" Then
                            UpdatetblRegTimeConcepts(1030, ""DL Drive Order Taker Breakfast Lane 2"", RegInfo.RegisterNumber, 1, 0)
                            UpdatetblRegTimeConcepts(1031, ""DL Drive Order Taker Lunch     Lane 2"", RegInfo.RegisterNumber, 2, 0)
                        Else
                            'PE 6/6/2022
                            'If drive style is fast then set cashier mode for breakfast
                            If PosMaint.DriveStyle.ToUpper = ""FAST"" Then
                                UpdatetblRegTimeConcepts(52, ""Drive Order Taker Breakfast Lane 2 (Fast) Cashier"", RegInfo.RegisterNumber, 1, 0)
                                UpdatetblRegTimeConcepts(53, ""Drive Order Taker Lunch     Lane 2 (Fast)"", RegInfo.RegisterNumber, 2, 0)
                            Else
                                UpdatetblRegTimeConcepts(32, ""Drive Order Taker Breakfast Lane 2"", RegInfo.RegisterNumber, 1, 0)
                                UpdatetblRegTimeConcepts(33, ""Drive Order Taker Lunch     Lane 2"", RegInfo.RegisterNumber, 2, 0)
                            End If
                        End If
                End Select
                Sleep(10)
            Next
            dt.UpdateData()
            '***************************************************************************************************************************************
        End Using
        DispThis(""      Updating Spec Coffee Breakfast Combo"" & NewLine)
        FixSCBBreakfastCombo()
    End Sub
"
JswtWXTE,Untitled,penright,VB.NET,Tuesday 3rd of October 2023 02:57:31 PM CDT,"    Sub FixSelCheck()
        'As we move more to using the concept ID, this sections will not be needed.


        Dim SelCheckIni As New PrivateIniFile

        For xLoop As Integer = 0 To PosMaint.RegisterInformations.Count - 1
            Dim RegInfo As RegInfo = PosMaint.RegisterInformations(xLoop)
            SelCheckIni.SetFileName(""c:\iris\reginfo\Reg"" & RegInfo.RegisterNumber & ""\ini\selcheck.ini"")
            SelCheckIni.DeleteKey(""SCR_CASHIER"", ""Default"")
            'PE 5/12/2022
            'Removed new check key for cashier 4.0.10
            'PE 6/6/2022
            'Redid this section to hand the Fast drive style and Dual Lane Difference

            DispThis(""   "" & RegInfo.RegisterNumber.ToString & "" is being updated"" & NewLine)
            For xLoop_btn As Integer = 0 To 99
                SelCheckIni.DeleteKey(""SCR_CASHIER"", ""BTN"" & xLoop_btn.ToString)
            Next
            'DispThis(""Dual lane not adding new_check key"" & NewLine)
            If (RegInfo.DefaultConcept = eDefaultConcept.Tender OrElse
                   RegInfo.DefaultConcept = eDefaultConcept.TenderBlockReg OrElse
                   RegInfo.DefaultConcept = eDefaultConcept.RegisterDown OrElse
                   RegInfo.DefaultConcept = eDefaultConcept.DualLane2) Then
                Dim intOnButton As Integer = 1
                SelCheckIni.WriteString(""SCR_CASHIER"", ""BTN"" + intOnButton.ToString, ""RETURN"") : intOnButton += 1
                SelCheckIni.WriteString(""SCR_CASHIER"", ""BTN"" + intOnButton.ToString, ""PAGE_UP"") : intOnButton += 1
                SelCheckIni.WriteString(""SCR_CASHIER"", ""BTN"" + intOnButton.ToString, ""PAGE_DOWN"") : intOnButton += 1
                If PosMaint.DriveStyle.ToUpper = ""FAST"" Then
                    If RegInfo.DefaultConcept = eDefaultConcept.TenderBlockReg OrElse
                        RegInfo.DefaultConcept = eDefaultConcept.DualLane2 Then
                        SelCheckIni.WriteString(""SCR_CASHIER"", ""BTN"" + intOnButton.ToString, ""NEW_CHECK"") : intOnButton += 1
                    End If
                Else
                    SelCheckIni.WriteString(""SCR_CASHIER"", ""BTN"" + intOnButton.ToString, ""NEW_CHECK"") : intOnButton += 1
                End If
                SelCheckIni.WriteString(""SCR_CASHIER"", ""BTN"" + intOnButton.ToString, ""POS_FUNCTIONS"") : intOnButton += 1
                SelCheckIni.WriteString(""SCR_CASHIER"", ""Default"", ""Close_check"")
                SelCheckIni.WriteInteger(""SCR_CASHIER"", ""Count"", (intOnButton - 1).ToString)
            End If

        Next
        SelCheckIni = Nothing
    End Sub
"
dTs5ss2G,Untitled,penright,VB.NET,Tuesday 3rd of October 2023 02:55:12 PM CDT,"   Sub FixAppIni()
        Dim AppIni As New PrivateIniFile(""c:\iris\ini\appini.ini"")

        AppIni.WriteString(""Pos"", ""RegNum"", CStrNull(99))
        AppIni.DeleteKey(""Pos"", ""CfgConcept"")
        AppIni.DeleteSection(""KITCHEN_SCHEMES"")
        AppIni.DeleteSection(""Printer_SCHEMES"")
        AppIni.WriteString(""Printer_SCHEMES"", ""1"", ""Default"")
        If PosMaint.IsHVMonitors Then
            AppIni.WriteString(""KITCHEN_SCHEMES"", ""1"", ""Low Volume"")
            AppIni.WriteString(""KITCHEN_SCHEMES"", ""2"", ""High Volume"")
            If PosMaint.MonitorsDefinedList.Contains(""Grill3"") Then
                AppIni.WriteString(""KITCHEN_SCHEMES"", ""3"", ""OverDrive"")
            End If
            'AppIni.WriteString(""KITCHEN_SCHEMES"", ""3"", ""Backup"")
        Else
            AppIni.WriteString(""KITCHEN_SCHEMES"", ""1"", ""Default"")
        End If
        For xLoop As Integer = 0 To PosMaint.RegisterInformations.Count - 1
            Dim RegInfo As RegInfo = PosMaint.RegisterInformations(xLoop)
            AppIni.SetFileName(""c:\iris\reginfo\Reg"" & RegInfo.RegisterNumber & ""\ini\appini.ini"")
            AppIni.DeleteSection(""KITCHEN_SCHEMES"")
            AppIni.DeleteSection(""Printer_SCHEMES"")
            AppIni.WriteString(""Printer_SCHEMES"", ""1"", ""Default"")
            If PosMaint.IsHVMonitors Then
                AppIni.WriteString(""KITCHEN_SCHEMES"", ""1"", ""Low Volume"")
                AppIni.WriteString(""KITCHEN_SCHEMES"", ""2"", ""High Volume"")
                If PosMaint.HasGrill3Monitor Then
                    AppIni.WriteString(""KITCHEN_SCHEMES"", ""3"", ""Overdrive"")
                End If
                'AppIni.WriteString(""KITCHEN_SCHEMES"", ""3"", ""Backup"")
            Else
                AppIni.WriteString(""KITCHEN_SCHEMES"", ""1"", ""Default"")
            End If
            AppIni.WriteInteger(""Pos"", ""RegNum"", RegInfo.RegisterNumber)
            AppIni.WriteString(""Pos"", ""BRRegType"", RegInfo.DefaultConcept.ToString)
            If RegInfo.DefaultConcept = eDefaultConcept.Fountain Then
                AppIni.WriteString(""Pos"", ""QuickOrder"", ""1"")
            Else
                AppIni.WriteString(""Pos"", ""QuickOrder"", ""0"")
            End If
        Next
        AppIni = Nothing
    End Sub
"
3G56cHWv,Untitled,penright,VB.NET,Tuesday 3rd of October 2023 02:54:08 PM CDT,"   Sub FixOrderentIni()
        DispThis(""     FixOrderentIni Started"" & NewLine)
        Dim OrderentIni As New PrivateIniFile

        For xLoop_Register As Integer = 0 To PosMaint.RegisterInformations.Count - 1
            Dim RegInfo As RegInfo = PosMaint.RegisterInformations(xLoop_Register)
            OrderentIni.DeleteSection(""To_Go"")
            If RegInfo.DefaultConcept = eDefaultConcept.FreshMarket Then
                OrderentIni.WriteInteger(""To_Go"", ""Menu1"", 5)
                OrderentIni.WriteInteger(""To_Go"", ""Menu2"", 6)
                OrderentIni.WriteInteger(""To_Go"", ""Menu3"", 1)
                OrderentIni.WriteInteger(""To_Go"", ""Menu4"", 2)
                OrderentIni.WriteInteger(""To_Go"", ""Menu5"", 2017)
                OrderentIni.WriteInteger(""To_Go"", ""Menu6"", 9)
            End If
        Next
        OrderentIni = Nothing
        DispThis(""     FixOrderentIni Finished"" & NewLine)
    End Sub"
VNDGhLBr,Untitled,penright,VB.NET,Tuesday 3rd of October 2023 02:53:02 PM CDT,"   Sub FixSockets()
        'Dim BaseAddrServer As String
        Dim tmpSection As String
        Dim tmpPort As String
        Dim FirstDrive As Boolean
        DeleteIfExists(""c:\iris\ini\sockets.ini"")
        Dim SocketsIni As New PrivateIniFile(""c:\iris\ini\sockets.ini"")
        '***********************************************************************************************************
        ' 2/27/2015 Paul E. 
        ' Starting using the 10.77 IP's instade of the WAN, to do this I have to seperate the server from registers
        '       hence two BaseAddr (BaseAddrServer, BaseAddrRegister)
        'Dim BaseAddr = PosMaint.IPNetworkNumber + "".7""
        Dim BaseAddrServer = ""10.77.77.""
        Dim BaseAddrRegister = ""10.77.79.""
        '2/27/2015 For some reason Kitchen does not like the 10.77 so for now I am patching the address back to the 
        '    WAN IP. 
        '6/17/2010 With the store of registers number 10 or grater, we can no long just append the register number as part of the
        '    IP. So now we need to add the register number to 70
        BaseAddrServer = PosMaint.StoreIP + "".""
        BaseAddrRegister = PosMaint.StoreIP + "".""
        '***********************************************************************************************************
        tmpSection = ""POSKIT"" : tmpPort = ""7500""
        SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
        SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrServer & ""70"")
        tmpSection = ""TIMESRVR"" : tmpPort = ""7600""
        SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
        SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrServer & ""70"")
        tmpSection = ""EXTSVC"" : tmpPort = ""24192""
        SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
        SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrServer & ""70"")
        SocketsIni.WriteString(tmpSection, ""LogFile"", ""c:\iris\log\extsvc.log"")
        SocketsIni.WriteString(tmpSection, ""SocketTimeOut"", ""5000"")

        tmpSection = ""POSPRTFRM"" : tmpPort = ""7501""
        SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
        SocketsIni.WriteString(tmpSection, ""Addr"", ""127.0.0.1"")
        FirstDrive = True
        For xLoop As Integer = 0 To PosMaint.RegisterInformations.Count - 1
            Dim RegInfo As RegInfo = PosMaint.RegisterInformations(xLoop)
            tmpSection = ""rcpt"" + RegInfo.RegisterNumber.ToString : tmpPort = ""7600""
            SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
            SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrRegister & (70 + RegInfo.RegisterNumber).ToString)
            '================== Cash Drawer ===============================
            tmpSection = ""CDRW"" + RegInfo.RegisterNumber.ToString : tmpPort = ""7601""
            SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
            SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrRegister & (70 + RegInfo.RegisterNumber).ToString)
            '================== End Cash Drawer ===========================
            '================== Display ===============================
            tmpSection = ""disp"" + RegInfo.RegisterNumber.ToString : tmpPort = ""7602""
            SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
            SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrRegister & (70 + RegInfo.RegisterNumber).ToString)
            '================== End Display ===========================

            If RegInfo.HardwareType = eHardwareType.Panasonic Then
                tmpSection = ""PanMSR"" + RegInfo.RegisterNumber.ToString : tmpPort = ""7603""
                SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
                SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrRegister & (70 + RegInfo.RegisterNumber).ToString)
            ElseIf RegInfo.HardwareType = eHardwareType.TCx800 Then
                tmpSection = ""TCxMSR"" + RegInfo.RegisterNumber.ToString : tmpPort = ""7603""
                SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
                SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrRegister & (70 + RegInfo.RegisterNumber).ToString)
            End If

            If RegInfo.RegisterNumber = PosMaint.PrtExpoNumberRegNum Then
                tmpSection = ""grill1"" : tmpPort = ""7608""
                SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
                SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrRegister & (70 + RegInfo.RegisterNumber).ToString)
            End If
            If (PosMaint.OutSideDisplay1 = eOutSideDisplayType.AccuviewNG OrElse PosMaint.OutSideDisplay1 = eOutSideDisplayType.SicomDigitalDisplay OrElse PosMaint.OutSideDisplay1 = eOutSideDisplayType.SicomOCU) AndAlso
               (RegInfo.DefaultConcept = eDefaultConcept.SplitScreen OrElse RegInfo.DefaultConcept = eDefaultConcept.DualLane1) Then
                tmpSection = ""OCBDisp1"" : tmpPort = ""7614""
                SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
                SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrRegister & (70 + RegInfo.RegisterNumber).ToString)
                'If PosMaint.OutSideDisplay1 = eOutSideDisplayType.SicomOCU Then
                '    SocketsIni.WriteString(tmpSection, ""cmdPort"", ""7117"")
                'End If
            End If
            If (PosMaint.OutSideDisplay2 = eOutSideDisplayType.AccuviewNG OrElse PosMaint.OutSideDisplay1 = eOutSideDisplayType.SicomOCU) AndAlso
               (RegInfo.DefaultConcept = eDefaultConcept.DualLane2) Then
                tmpSection = ""OCBDisp2"" : tmpPort = ""7614""
                SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
                SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrRegister & (70 + RegInfo.RegisterNumber).ToString)
                'If PosMaint.OutSideDisplay2 = eOutSideDisplayType.SicomOCU Then
                '    SocketsIni.WriteString(tmpSection, ""cmdPort"", ""7117"")
                'End If
            End If
            If RegInfo.ScannerType <> eScannerType.None Then
                tmpSection = RegInfo.ScannerServiceObjectName : tmpPort = ""7610""
                SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
                SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrRegister & (70 + RegInfo.RegisterNumber).ToString)
            End If
            If RegInfo.ScaleType <> eScaleType.None Then
                tmpSection = RegInfo.ScaleServiceObjectName : tmpPort = ""7611""
                SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
                SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrRegister & (70 + RegInfo.RegisterNumber).ToString)
            End If
        Next

        If PosMaint.RedundantKitchen Then
            tmpSection = ""SECONDARYKIT1"" : tmpPort = ""7500""
            SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
            SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrRegister & ""72"")
        Else
            SocketsIni.DeleteSection(""SECONDARYKIT1"")
        End If

        'Try and disable SysLoger
        SocketsIni.WriteString(""SysLogServer"", ""Disable"", ""1"")

        'Set the Cam Manager Port and Address
        If PosMaint.IsDualLane Then
            tmpSection = ""CamManager"" : tmpPort = ""9659""
            SocketsIni.WriteString(tmpSection, ""Port"", tmpPort)
            SocketsIni.WriteString(tmpSection, ""Addr"", BaseAddrServer & ""70"")
        End If
        SocketsIni = Nothing
        CopyINIToRegInfo(""Sockets.ini"")
    End Sub
"
uPvxqGJS,Untitled,penright,VB.NET,Tuesday 3rd of October 2023 02:51:57 PM CDT,"    Sub FixEODs()
        Dim EODIni As New PrivateIniFile(""c:\iris\ini\eod.ini"")
        EODIni.DeleteSection(""DataPath"")
        For xLoop As Integer = 0 To PosMaint.RegisterInformations.Count - 1
            Dim RegInfo As RegInfo = PosMaint.RegisterInformations(xLoop)
            EODIni.WriteString(""DataPath"", ""Reg"" & RegInfo.RegisterNumber.ToString, ""\\10.77.79."" & (70 + RegInfo.RegisterNumber).ToString & ""\c\iris\data"")
            EODIni.WriteInteger(""DataPath"", ""Reg"" & xLoop + 1 & ""Num"", RegInfo.RegisterNumber)
        Next
        EODIni.WriteInteger(""Network"", ""NumberOfRegister"", PosMaint.RegisterInformations.Count)
        EODIni = Nothing
        CopyINIToRegInfo(""eod.ini"")
    End Sub"
