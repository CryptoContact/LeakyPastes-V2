id,title,username,language,date,content
d12RnH9B,üí≤ G2A.com Free Gift Card Guide 06 June 2024 üí≤,x2w,GetText,Wednesday 5th of June 2024 07:15:52 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
06 June 2024"
XeageNwh,2024-06-05_stats.json,rdp_snitch,JSON,Wednesday 5th of June 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""64.124.50.139"": 3,
    ""194.165.16.76"": 2,
    ""194.165.16.37"": 2,
    ""164.92.104.215"": 1,
    ""147.185.132.255"": 3,
    ""159.223.34.114"": 1,
    ""91.238.181.71"": 2,
    ""187.157.89.218"": 2,
    ""195.181.174.229"": 1,
    ""94.232.46.148"": 3,
    ""205.210.31.111"": 3,
    ""135.125.165.169"": 2,
    ""213.109.202.237"": 6,
    ""118.193.56.184"": 1,
    ""220.124.211.90"": 1,
    ""211.203.66.173"": 2,
    ""152.32.130.155"": 1,
    ""185.132.36.80"": 1,
    ""103.112.138.106"": 1,
    ""172.232.97.48"": 1,
    ""185.234.216.92"": 1,
    ""147.185.132.13"": 3,
    ""80.66.76.134"": 1,
    ""194.165.16.10"": 2,
    ""45.227.254.55"": 2,
    ""46.243.78.82"": 30,
    ""185.242.226.23"": 1,
    ""185.170.144.3"": 1,
    ""206.168.34.44"": 1,
    ""45.227.254.54"": 2,
    ""102.129.138.236"": 1,
    ""116.182.20.8"": 1,
    ""185.122.204.169"": 1,
    ""198.235.24.167"": 3
  },
  ""asn"": {
    ""AS6461"": 3,
    ""AS48721"": 6,
    ""AS14061"": 2,
    ""AS396982"": 12,
    ""AS49434"": 2,
    ""AS8151"": 2,
    ""AS60068"": 1,
    ""AS212482"": 3,
    ""AS16276"": 2,
    ""AS208312"": 6,
    ""AS135377"": 2,
    ""AS4766"": 1,
    ""AS9318"": 2,
    ""AS8560"": 1,
    ""AS141892"": 1,
    ""AS63949"": 1,
    ""AS57523"": 2,
    ""AS208091"": 1,
    ""AS267784"": 4,
    ""AS44486"": 30,
    ""AS202425"": 1,
    ""AS197414"": 1,
    ""AS398324"": 1,
    ""AS147176"": 1,
    ""AS137539"": 1
  },
  ""isp"": {
    ""Zayo Bandwidth"": 3,
    ""Flyservers S.A."": 10,
    ""DigitalOcean, LLC"": 2,
    ""Google LLC"": 12,
    ""Datacenter location PAR1 France"": 2,
    ""Uninet S.A. de C.V."": 2,
    ""DataCamp Limited"": 1,
    ""Xhost Internet Solutions LP"": 5,
    ""OVH SAS"": 2,
    ""Red Byte LLC"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Korea Telecom"": 1,
    ""SK Broadband Co Ltd"": 2,
    ""IONOS SE"": 1,
    ""PMNET"": 1,
    ""Akamai Technologies, Inc."": 1,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Oliver Horscht is trading as \""SYNLINQ\"""": 30,
    ""IP Volume inc"": 1,
    ""Censys, Inc."": 1,
    ""Digital Energy Technologies"": 1,
    ""China Unicom CHINA169 Network"": 1
  },
  ""org"": {
    ""Microsoft Corporation"": 3,
    ""Flyservers S.A"": 6,
    ""DigitalOcean, LLC"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""Uninet S.A. de C.V."": 2,
    ""CDN77 - Frankfurt POP"": 1,
    ""Dmitriy Panchenko"": 3,
    ""Ali Mehmet"": 2,
    ""Chang Way Technologies Co. Limited"": 7,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Kornet"": 1,
    ""SK Broadband Co Ltd"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Fasthosts Internet Limited"": 1,
    ""Unknown"": 3,
    ""Akamai Technologies, Inc."": 1,
    ""Xhost Internet Solutions"": 1,
    ""UAB Host Baltic"": 4,
    ""Mo's Operations GmbH"": 30,
    ""AI Spera"": 1,
    ""Xhostis"": 1,
    ""Censys Inc"": 1,
    ""Starcrecium Limited"": 1
  },
  ""regionName"": {
    ""Washington"": 3,
    ""Kaunas"": 6,
    ""California"": 13,
    ""Central Singapore"": 1,
    ""\u00cele-de-France"": 2,
    ""Mexico City"": 2,
    ""Hesse"": 33,
    ""Perm Krai"": 3,
    ""Moscow"": 8,
    ""Bangkok"": 2,
    ""Jeju-do"": 1,
    ""Busan"": 2,
    ""Kowloon"": 1,
    ""England"": 1,
    ""Banten"": 1,
    ""Tamil Nadu"": 1,
    ""North Holland"": 3,
    ""Vilnius"": 4,
    ""Illinois"": 1,
    ""Beijing"": 1
  },
  ""country"": {
    ""United States"": 17,
    ""Lithuania"": 10,
    ""Singapore"": 1,
    ""France"": 2,
    ""Mexico"": 2,
    ""Germany"": 33,
    ""Russia"": 11,
    ""Thailand"": 2,
    ""South Korea"": 3,
    ""Hong Kong"": 1,
    ""United Kingdom"": 1,
    ""Indonesia"": 1,
    ""India"": 1,
    ""The Netherlands"": 3,
    ""China"": 1
  },
  ""account"": {
    ""Test"": 21,
    ""hello"": 38,
    ""ckGyPwREZ"": 1,
    ""trCIUU"": 1,
    ""BwUIxV"": 1,
    ""(empty)"": 4,
    ""Domain"": 7,
    ""aueCfCvFp"": 1,
    ""FcVrrK"": 1,
    ""fAGKsF"": 1,
    ""Administrator"": 2,
    ""Administr"": 4,
    ""daBiwqudf"": 1,
    ""rVOYIh"": 1,
    ""uEdiEP"": 1,
    ""nmap"": 1,
    ""plQuygeny"": 1,
    ""mUiaCI"": 1,
    ""ZGtRQE"": 1
  },
  ""keyboard"": {
    ""Unknown"": 89
  },
  ""client_build"": {
    ""Unknown"": 89
  },
  ""client_name"": {
    ""Unknown"": 89
  },
  ""ip_type"": {
    ""Unknown"": 55,
    ""hosting"": 21,
    ""hosting & proxy"": 2,
    ""proxy"": 11
  }
}"
Pcp7W8Tp,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,Bufayez,JavaScript,Wednesday 5th of June 2024 07:14:24 PM CDT,"G2A.com free voucher & games guide.
Any item for free on G2A.com including Steam gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4 2024"
KjnES98z,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,buch,JavaScript,Wednesday 5th of June 2024 07:08:23 PM CDT,"G2A.com free gift card & games guide.
Any voucher for free on G2A.com including Xbox gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4 2024"
C51r2vSS,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,Alfonso1119,JavaScript,Wednesday 5th of June 2024 07:02:20 PM CDT,"G2A.com free gift card & gaming guide.
Any voucher for free on G2A.com including Playstation gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4nd 2024"
7HFv4pei,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,Garoam,JavaScript,Wednesday 5th of June 2024 06:56:20 PM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Xbox gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4nd 2024"
gR4T9PPV,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,atakan1983,JavaScript,Wednesday 5th of June 2024 06:50:18 PM CDT,"G2A.com complimentary gift card & games guide.
Any gift card for free on G2A.com including Amazon gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4 2024"
TjQtPvzy,dig,DorianH935,Lua,Wednesday 5th of June 2024 06:44:10 PM CDT,"-- Function to dig forward and move
function digForward()
    while turtle.detect() do
        turtle.dig()
    end
    turtle.forward()
end

-- Function to dig down
function digDown()
    while turtle.detectDown() do
        turtle.digDown()
    end
    turtle.down()
end

-- Function to return the turtle to the starting point
function returnToSurface(height)
    for i = 1, height do
        turtle.up()
    end
end

-- Function to dig a layer
function digLayer(width)
    for i = 1, width do
        for j = 1, width - 1 do
            digForward()
        end
        if i < width then
            if i % 2 == 1 then
                turtle.turnRight()
                digForward()
                turtle.turnRight()
            else
                turtle.turnLeft()
                digForward()
                turtle.turnLeft()
            end
        end
    end
    if width % 2 == 1 then
        turtle.turnRight()
        for i = 1, width - 1 do
            turtle.forward()
        end
        turtle.turnRight()
    else
        turtle.turnLeft()
        for i = 1, width - 1 do
            turtle.forward()
        end
        turtle.turnLeft()
    end
end

-- Main function
function digSquareHole(width, depth)
    for level = 1, depth do
        digLayer(width)
        if level < depth then
            digDown()
        end
    end
    returnToSurface(depth)
end

-- User input
print(""Enter the width of the hole:"")
local width = tonumber(read())
print(""Enter the depth of the hole:"")
local depth = tonumber(read())

-- Execute the digging program
digSquareHole(width, depth)
"
h6FjbZJU,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,ColtM4A2,JavaScript,Wednesday 5th of June 2024 06:44:08 PM CDT,"G2A.com free voucher & gaming guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4nd 2024"
cKMDNRpz,PicRenamer.py,Yesideez,Python,Wednesday 5th of June 2024 06:42:27 PM CDT,"# $VER: picrenamer.py v1.00 (05-Jun-2024) by Zeb/Slipstream

from sys import argv
from glob import glob
from pathlib import Path
from PIL import Image
from os import rename

#default values
strDirName="".""
blnCommit=False
strAdd=""""

def checkSlash(str):
  l=len(str)-1
  if str[l]==""/"":
    return True
  else:
    return False

intCount=0

#parse the arguments on the command line
intArgC=len(argv)
if intArgC>1: #if no arguments use default values set at the top
  for i in range(1,intArgC):
    if argv[i]==""-d"": #check for a directory name
      strDirName=argv[i+1]
      i+=1
    if argv[i]==""commit"": #check for commit
      blnCommit=True
    if argv[i]==""-s"": #check for a string to add
      strAdd=argv[i+1]
      i+=1

if not checkSlash(strDirName):
  strDirName=strDirName+""/""
print(f""Dir Name: {strDirName}"")
lstFiles=glob(strDirName+""*.[j|J][p|P][g|G]"")
lstFiles.sort()

for i in lstFiles:
  im=Image.open(i)
  tmp=im.getexif()
  dt=tmp[306].split("" "") #extract the date time into a list
  tm=dt[1].split("":"")    #extract the date into a list
  dt=dt[0].split("":"")    #extract the time into a list
  strAfter=f""{strDirName}{dt[0]}-{dt[1]}-{dt[2]} {tm[0]}-{tm[1]}-{tm[2]}""
  if len(strAdd)>0:
    strAfter=strAfter+"" ""+strAdd
  strAfter=strAfter+"".jpg""
  file=Path(strAfter)
  if blnCommit:
    if file.exists():
      print(f""ERR: File '{strAfter}' exists ({i})"")
    else:
      #print(f""Rename '{i}' to '{strAfter}'"")
      rename(i,strAfter)
      intCount+=1
  else:
    print(f"">'{i}' to '{strAfter}'"")

if blnCommit:
  print(f""Files: {intCount}/{len(lstFiles)}"")
else:
  print(f""Files: {len(lstFiles)} (nothing has been changed)"")"
fwbZzkPC,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,Skarface-MKL,JavaScript,Wednesday 5th of June 2024 06:38:05 PM CDT,"G2A.com complimentary gift card & games guide.
Any voucher for free on G2A.com including Xbox gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
4nd of June 2024"
NL20AbgZ,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,thepplayz,JavaScript,Wednesday 5th of June 2024 06:32:05 PM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Steam gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4 2024"
qDg7yF17,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,sirmikey,JavaScript,Wednesday 5th of June 2024 06:26:02 PM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Steam gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4nd 2024"
RFNvLTBe,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,PetrikDev,JavaScript,Wednesday 5th of June 2024 06:13:54 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4nd 2024"
pkK0kvf3,ü§ë G2A.com Free Gift Card Guide Jun 2024 FIX ü§ë,jusst2k4,GetText,Wednesday 5th of June 2024 06:09:12 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_831009.pdf

Working as of:
06 June 2024"
CXuim3dP,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,x3kiN,JavaScript,Wednesday 5th of June 2024 06:07:55 PM CDT,"G2A.com complimentary gift card & games guide.
Any gift card for free on G2A.com including Playstation gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
4nd of June 2024"
pYBq91bi,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,kjihu25,JavaScript,Wednesday 5th of June 2024 05:55:54 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4 2024"
VzYCyMuP,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,Bufayez,JavaScript,Wednesday 5th of June 2024 05:49:54 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any voucher for free on G2A.com including Playstation gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4nd 2024"
W77z7umq,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,buch,JavaScript,Wednesday 5th of June 2024 05:43:53 PM CDT,"G2A.com complimentary voucher & games guide.
Any voucher for free on G2A.com including Playstation gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4 2024"
7rTcW3ce,"""MPU6050 Initialization"" rev_02",pleasedontcode,Arduino,Wednesday 5th of June 2024 05:38:37 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""MPU6050 Initialization""
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-06-05 22:36:04

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Create a motion tracking application using the */
	/* MPU6050 sensor. Configure I2C communication on */
	/* pins A4 (SDA) and A5 (SCL), and use pin D2 as an */
	/* interrupt to capture motion events. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <MPU6050.h>  // https://github.com/electroniccats/mpu6050

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t sensor_MPU6050_Interrupt_PIN_D2 = 2;

/***** DEFINITION OF I2C PINS *****/
const uint8_t sensor_MPU6050_I2C_PIN_SDA_A4 = A4;
const uint8_t sensor_MPU6050_I2C_PIN_SCL_A5 = A5;
const uint8_t sensor_MPU6050_I2C_SLAVE_ADDRESS = 104;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
MPU6050 mpu(sensor_MPU6050_I2C_SLAVE_ADDRESS);  // Initialize MPU6050 with the I2C address

/****** GLOBAL VARIABLES *****/
bool dmpReady = false;  // set true if DMP init was successful
uint8_t mpuIntStatus;   // holds actual interrupt status byte from MPU
uint8_t devStatus;      // return status after each device operation (0 = success, !0 = error)
uint16_t packetSize;    // expected DMP packet size (default is 42 bytes)
uint16_t fifoCount;     // count of all bytes currently in FIFO
uint8_t fifoBuffer[64]; // FIFO storage buffer

// orientation/motion vars
Quaternion q;           // [w, x, y, z]         quaternion container
VectorFloat gravity;    // [x, y, z]            gravity vector
float ypr[3];           // [yaw, pitch, roll]   yaw/pitch/roll container and gravity vector

volatile bool mpuInterrupt = false;  // indicates whether MPU interrupt pin has gone high

void dmpDataReady() {
    mpuInterrupt = true;
}

void setup(void) {
    // put your setup code here, to run once:
    pinMode(sensor_MPU6050_Interrupt_PIN_D2, INPUT);

    Wire.begin();
    Wire.setClock(400000);  // 400kHz I2C clock. Comment this line if having compilation difficulties

    Serial.begin(115200);
    while (!Serial);  // wait for Leonardo enumeration, others continue immediately

    // initialize device
    Serial.println(F(""Initializing I2C devices...""));
    mpu.initialize();

    // verify connection
    Serial.println(F(""Testing device connections...""));
    Serial.println(mpu.testConnection() ? F(""MPU6050 connection successful"") : F(""MPU6050 connection failed""));

    // wait for ready
    Serial.println(F(""\nSend any character to begin DMP programming and demo: ""));
    while (!Serial.available());
    while (Serial.available() && Serial.read());  // empty buffer

    // load and configure the DMP
    Serial.println(F(""Initializing DMP...""));
    devStatus = mpu.dmpInitialize();

    // supply your own gyro offsets here, scaled for min sensitivity
    mpu.setXGyroOffset(220);
    mpu.setYGyroOffset(76);
    mpu.setZGyroOffset(-85);
    mpu.setZAccelOffset(1788);  // 1688 factory default for my test chip

    // make sure it worked (returns 0 if so)
    if (devStatus == 0) {
        // turn on the DMP, now that it's ready
        Serial.println(F(""Enabling DMP...""));
        mpu.setDMPEnabled(true);

        // enable Arduino interrupt detection
        Serial.print(F(""Enabling interrupt detection (Arduino external interrupt ""));
        Serial.print(digitalPinToInterrupt(sensor_MPU6050_Interrupt_PIN_D2));
        Serial.println(F("")...""));
        attachInterrupt(digitalPinToInterrupt(sensor_MPU6050_Interrupt_PIN_D2), dmpDataReady, RISING);
        mpuIntStatus = mpu.getIntStatus();

        // set our DMP ready flag
        Serial.println(F(""DMP ready! Waiting for first interrupt...""));
        dmpReady = true;

        // get expected DMP packet size for later comparison
        packetSize = mpu.dmpGetFIFOPacketSize();
    } else {
        // ERROR!
        // 1 = initial memory load failed
        // 2 = DMP configuration updates failed
        // (if it's going to break, usually the code will be 1)
        Serial.print(F(""DMP Initialization failed (code ""));
        Serial.print(devStatus);
        Serial.println(F("")""));
    }
}

void loop(void) {
    // put your main code here, to run repeatedly:
    if (!dmpReady) return;

    // wait for MPU interrupt or extra packet(s) available
    while (!mpuInterrupt && fifoCount < packetSize) {
        // other program behavior stuff here
        // .
        // .
        // .
        // if you are really paranoid you can frequently test in between other
        // stuff to see if mpuInterrupt is true, and if so, ""break;"" from the
        // while() loop to immediately process the MPU data
        // .
        // .
        // .
    }

    // reset interrupt flag and get INT_STATUS byte
    mpuInterrupt = false;
    mpuIntStatus = mpu.getIntStatus();

    // get current FIFO count
    fifoCount = mpu.getFIFOCount();

    // check for overflow (this should never happen unless our code is too inefficient)
    if ((mpuIntStatus & 0x10) || fifoCount == 1024) {
        // reset so we can continue cleanly
        mpu.resetFIFO();
        Serial.println(F(""FIFO overflow!""));

    // otherwise, check for DMP data ready interrupt (this should happen frequently)
    } else if (mpuIntStatus & 0x02) {
        // wait for correct available data length, should be a VERY short wait
        while (fifoCount < packetSize) fifoCount = mpu.getFIFOCount();

        // read a packet from FIFO
        mpu.getFIFOBytes(fifoBuffer, packetSize);

        // track FIFO count here in case there is > 1 packet available
        // (this lets us immediately read more without waiting for an interrupt)
        fifoCount -= packetSize;

        mpu.dmpGetQuaternion(&q, fifoBuffer);
        mpu.dmpGetGravity(&gravity, &q);
        mpu.dmpGetYawPitchRoll(ypr, &q, &gravity);
        Serial.print(""ypr\t"");
        Serial.print(ypr[0] * 180/M_PI);
        Serial.print(""\t"");
        Serial.print(ypr[1] * 180/M_PI);
        Serial.print(""\t"");
        Serial.println(ypr[2] * 180/M_PI);
    }
}

/* END CODE */"
HpddR3Jn,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,Alfonso1119,JavaScript,Wednesday 5th of June 2024 05:37:52 PM CDT,"G2A.com free voucher & gaming guide.
Any item for free on G2A.com including Steam gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4nd 2024"
3nfCtEPx,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,Garoam,JavaScript,Wednesday 5th of June 2024 05:31:51 PM CDT,"G2A.com free voucher & games guide.
Any voucher for free on G2A.com including Playstation gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4nd 2024"
02XEUmtZ,"""Gyroscope Initialization"" rev_03",pleasedontcode,Arduino,Wednesday 5th of June 2024 05:26:31 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Gyroscope Initialization""
	- Source Code NOT compiled for: Arduino Nano ESP32
	- Source Code created on: 2024-06-05 22:24:38

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* read gyroscope at maximum rate and show on serial. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <MPU6050.h>  //https://github.com/electroniccats/mpu6050

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t sensor_MPU6050_Interrupt_PIN_D2 = 2;

/***** DEFINITION OF I2C PINS *****/
const uint8_t sensor_MPU6050_I2C_PIN_SDA_A4 = A4;
const uint8_t sensor_MPU6050_I2C_PIN_SCL_A5 = A5;
const uint8_t sensor_MPU6050_I2C_SLAVE_ADDRESS = 0x68;  // MPU6050 I2C address

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
MPU6050 accelgyro(sensor_MPU6050_I2C_SLAVE_ADDRESS);  // Initialize MPU6050 object with I2C address

void setup(void)
{
    // Initialize I2C communication
    Wire.begin(sensor_MPU6050_I2C_PIN_SDA_A4, sensor_MPU6050_I2C_PIN_SCL_A5);
    
    // Initialize serial communication
    Serial.begin(38400);
    Serial.println(""Initializing I2C devices..."");
    
    // Initialize MPU6050
    accelgyro.initialize();
    
    // Test connection
    Serial.println(accelgyro.testConnection() ? ""MPU6050 connection successful"" : ""MPU6050 connection failed"");
    
    // Set interrupt pin as input
    pinMode(sensor_MPU6050_Interrupt_PIN_D2, INPUT);
}

void loop(void)
{
    // Variables to hold gyroscope data
    int16_t gx, gy, gz;
    
    // Read gyroscope data
    accelgyro.getRotation(&gx, &gy, &gz);

    // Print gyroscope data to serial monitor
    Serial.print(""Gyroscope X: ""); Serial.print(gx);
    Serial.print("" | Gyroscope Y: ""); Serial.print(gy);
    Serial.print("" | Gyroscope Z: ""); Serial.println(gz);
}
"
VVxcVNdQ,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,atakan1983,JavaScript,Wednesday 5th of June 2024 05:25:49 PM CDT,"G2A.com free gift card & games guide.
Any item for free on G2A.com including Xbox gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4nd 2024"
nRRGs2FR,A CLI Bash multimedia downloader/player!,HasteBin0,Bash,Wednesday 5th of June 2024 05:22:18 PM CDT,"#!/usr/bin/env bash

help() {
  cat << EOF
Usage: ./ytd.sh [URL] [Format] [Folder] [Purge]

This script downloads a video from the provided URL using yt-dlp, plays it using mpv, and optionally deletes the downloaded files.

Arguments:
  URL      The URL of the video to download. If not provided as an argument, you will be prompted to enter it.
  Format   The format number to download. If not provided as an argument, you will be prompted to select from available formats.
  Folder   The directory where the video will be downloaded. If not provided as an argument, you will be prompted to specify it.
  Purge    A yes/no (default yes) on whether to purge the downloaded media's directory, delete the 'ytdv' subdirectory.

Behavior:
1. Prompt the user for the URL if it is not provided as an argument.
2. Use yt-dlp to fetch and display the list of available formats for the provided URL.
3. Prompt the user to select a format number if it is not provided as an argument.
4. Prompt the user for the download directory if it is not provided as an argument.
5. Create a subdirectory named 'ytdv' within the specified download directory and change into it.
6. Download the selected format using yt-dlp.
7. Play the downloaded files using mpv.
8. Prompt the user to remove the downloaded files after playback. If the user confirms, delete the 'ytdv' subdirectory.

Exit Codes:
  0  Script executed successfully.
  1  Failed to fetch formats for the provided URL.
  2  The selected format is unavailable for the provided URL.
  3  Invalid input for removing downloaded files (expected Y or N).
EOF
}

# Check if the first argument is a help flag and display help message if so
if [[ ""$1"" == ""--help"" || ""$1"" == ""-h"" || ""$1"" == ""-?"" ]]; then
  help
  exit 0
fi

# Function to prompt the user and read input if not provided as an argument
prompt_user() {
  local prompt_message=$1
  local input_variable_name=$2
  local default_value=$3
  local input_value

  if [[ -n ""${!input_variable_name}"" ]]; then
    input_value=""${!input_variable_name}""
  else
    read -p ""$prompt_message"" input_value
    input_value=${input_value:-$default_value}
  fi

  eval ""$input_variable_name='$input_value'""
}

# Get the URL from the argument or prompt the user
prompt_user ""URL?: "" lnk ""$1""

# Get the list of available formats
/usr/bin/yt-dlp -F ""$lnk""
if [[ ""$?"" -ne 0 ]]; then
  echo ""Failed to fetch formats for the URL: $lnk""
  exit 1
fi

# Prompt the user for the format
prompt_user ""Format #: "" fmt ""$2""

# Prompt the user for the download directory
prompt_user ""Folder: "" dr ""$3""

# Create the directory and change into it
mkdir -p ""$dr/ytdv"" && cd ""$dr/ytdv""

# Download the selected format
/usr/bin/yt-dlp -f ""$fmt"" ""$lnk""
if [[ ""$?"" -ne 0 ]]; then
  echo ""Format $fmt unavailable for \""$lnk\"".""
  exit 2
fi

# Play the downloaded files with mpv
/usr/bin/mpv ./*

# Prompt the user to remove the downloaded files
prompt_user ""Remove downloaded files [Y/n]? "" rfm ""$4""
rfm=${rfm:-Y}

case ""$rfm"" in
  [Yy]*)
    cd ""$dr""
    rm -rf ./ytdv
    ;;
  [Nn]*)
    ;;
  *)
    echo ""ERROR: Invalid input, expected Y or N, but got $rfm!""
    exit 3
    ;;
esac

"
CPADVBDf,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,ColtM4A2,JavaScript,Wednesday 5th of June 2024 05:19:37 PM CDT,"G2A.com free gift card & gaming guide.
Any voucher for free on G2A.com including Playstation gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4nd 2024"
hEgNakYm,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,Skarface-MKL,JavaScript,Wednesday 5th of June 2024 05:13:38 PM CDT,"G2A.com free gift card & games guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4nd 2024"
uyTKVpXW,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,thepplayz,JavaScript,Wednesday 5th of June 2024 05:07:38 PM CDT,"G2A.com free voucher & gaming guide.
Any gift card for free on G2A.com including Xbox gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4nd 2024"
QkkHhpPj,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,sirmikey,JavaScript,Wednesday 5th of June 2024 05:01:37 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any voucher for free on G2A.com including Playstation gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
4nd of June 2024"
bBqJRMTL,MPU6050 Orientation rev_02,pleasedontcode,Arduino,Wednesday 5th of June 2024 04:59:06 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: MPU6050 Orientation
	- Source Code NOT compiled for: Arduino Nano ESP32
	- Source Code created on: 2024-06-05 21:55:33

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* read gyroscope at maximum rate and show on serial. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <MPU6050.h>  // https://github.com/electroniccats/mpu6050

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void dmpDataReady(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t sensor_MPU6050_Interrupt_PIN_D2 = 2;

/***** DEFINITION OF I2C PINS *****/
const uint8_t sensor_MPU6050_I2C_PIN_SDA_A4 = A4;
const uint8_t sensor_MPU6050_I2C_PIN_SCL_A5 = A5;
const uint8_t sensor_MPU6050_I2C_SLAVE_ADDRESS = 104;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
MPU6050 mpu(sensor_MPU6050_I2C_SLAVE_ADDRESS);

/****** VARIABLES ******/
bool dmpReady = false;  // set true if DMP init was successful
uint8_t mpuIntStatus;   // holds actual interrupt status byte from MPU
uint8_t devStatus;      // return status after each device operation (0 = success, !0 = error)
uint16_t packetSize;    // expected DMP packet size (default is 42 bytes)
uint16_t fifoCount;     // count of all bytes currently in FIFO
uint8_t fifoBuffer[64]; // FIFO storage buffer

// orientation/motion vars
Quaternion q;           // [w, x, y, z]         quaternion container
VectorInt16 aa;         // [x, y, z]            accel sensor measurements
VectorInt16 aaReal;     // [x, y, z]            gravity-free accel sensor measurements
VectorInt16 aaWorld;    // [x, y, z]            world-frame accel sensor measurements
VectorFloat gravity;    // [x, y, z]            gravity vector
float ypr[3];           // [yaw, pitch, roll]   yaw/pitch/roll container and gravity vector

volatile bool mpuInterrupt = false;     // indicates whether MPU interrupt pin has gone high

void dmpDataReady() {
    mpuInterrupt = true;
}

void setup(void)
{
    // put your setup code here, to run once:
    Wire.begin(sensor_MPU6050_I2C_PIN_SDA_A4, sensor_MPU6050_I2C_PIN_SCL_A5);
    Wire.setClock(400000); // 400kHz I2C clock. Comment this line if having compilation difficulties

    Serial.begin(115200);
    while (!Serial); // wait for Leonardo enumeration, others continue immediately

    Serial.println(F(""Initializing I2C devices...""));
    mpu.initialize();
    pinMode(sensor_MPU6050_Interrupt_PIN_D2, INPUT);

    // verify connection
    Serial.println(mpu.testConnection() ? F(""MPU6050 connection successful"") : F(""MPU6050 connection failed""));

    // load and configure the DMP
    Serial.println(F(""Initializing DMP...""));
    devStatus = mpu.dmpInitialize();

    // supply your own gyro offsets here, scaled for min sensitivity
    mpu.setXGyroOffset(220);
    mpu.setYGyroOffset(76);
    mpu.setZGyroOffset(-85);
    mpu.setZAccelOffset(1788); // 1688 factory default for my test chip

    // make sure it worked (returns 0 if so)
    if (devStatus == 0) {
        // turn on the DMP, now that it's ready
        Serial.println(F(""Enabling DMP...""));
        mpu.setDMPEnabled(true);

        // enable Arduino interrupt detection
        attachInterrupt(digitalPinToInterrupt(sensor_MPU6050_Interrupt_PIN_D2), dmpDataReady, RISING);
        mpuIntStatus = mpu.getIntStatus();

        // set our DMP Ready flag so the main loop() function knows it's okay to use it
        Serial.println(F(""DMP ready! Waiting for first interrupt...""));
        dmpReady = true;

        // get expected DMP packet size for later comparison
        packetSize = mpu.dmpGetFIFOPacketSize();
    } else {
        // ERROR!
        // 1 = initial memory load failed
        // 2 = DMP configuration updates failed
        // (if it's going to break, usually the code will be 1)
        Serial.print(F(""DMP Initialization failed (code ""));
        Serial.print(devStatus);
        Serial.println(F("")""));
    }
}

void loop(void)
{
    // put your main code here, to run repeatedly:
    if (!dmpReady) return;

    // wait for MPU interrupt or extra packet(s) available
    while (!mpuInterrupt && fifoCount < packetSize) {
        // other program behavior stuff here
        // .
        // .
        // .
        // if you are really paranoid you can frequently test in between other
        // stuff to see if mpuInterrupt is true, and if so, ""break;"" from the
        // while() loop to immediately process the MPU data
        // .
        // .
        // .
    }

    // reset interrupt flag and get INT_STATUS byte
    mpuInterrupt = false;
    mpuIntStatus = mpu.getIntStatus();

    // get current FIFO count
    fifoCount = mpu.getFIFOCount();

    // check for overflow (this should never happen unless our code is too inefficient)
    if ((mpuIntStatus & 0x10) || fifoCount == 1024) {
        // reset so we can continue cleanly
        mpu.resetFIFO();
        Serial.println(F(""FIFO overflow!""));

    // otherwise, check for DMP data ready interrupt (this should happen frequently)
    } else if (mpuIntStatus & 0x02) {
        // wait for correct available data length, should be a VERY short wait
        while (fifoCount < packetSize) fifoCount = mpu.getFIFOCount();

        // read a packet from FIFO
        mpu.getFIFOBytes(fifoBuffer, packetSize);

        // track FIFO count here in case there is > 1 packet available
        // (this lets us immediately read more without waiting for an interrupt)
        fifoCount -= packetSize;

        // display Euler angles in degrees
        mpu.dmpGetQuaternion(&q, fifoBuffer);
        mpu.dmpGetGravity(&gravity, &q);
        mpu.dmpGetYawPitchRoll(ypr, &q, &gravity);
        Serial.print(""ypr\t"");
        Serial.print(ypr[0] * 180/M_PI);
        Serial.print(""\t"");
        Serial.print(ypr[1] * 180/M_PI);
        Serial.print(""\t"");
        Serial.println(ypr[2] * 180/M_PI);

        // read raw gyroscope measurements at the maximum rate
        VectorInt16 gyroscope;
        mpu.getRotation(&gyroscope);
        Serial.print(""Gyroscope\t"");
        Serial.print(""X: "");
        Serial.print(gyroscope.x);
        Serial.print(""\tY: "");
        Serial.print(gyroscope.y);
        Serial.print(""\tZ: "");
        Serial.println(gyroscope.z);
    }
}
"
RSwxWgnH,Untitled,copysiper,PostgreSQL,Wednesday 5th of June 2024 04:55:36 PM CDT,"SELECT 'GLE' AS ""Indicator"",
       (SELECT lifeexpectancy FROM country WHERE governmentform = 'Federal Republic' ORDER BY lifeexpectancy DESC LIMIT 1) AS ""Federal republic"",
       (SELECT lifeexpectancy FROM country WHERE governmentform = 'Republic' ORDER BY lifeexpectancy DESC LIMIT 1) AS ""Republic"",
       (SELECT lifeexpectancy FROM country WHERE lifeexpectancy IS NOT NULL AND governmentform != 'Republic' AND governmentform != 'Federal Republic' ORDER BY lifeexpectancy DESC LIMIT 1) AS ""Other""
UNION SELECT 'LLE' AS ""Indicator"",
       (SELECT lifeexpectancy FROM country WHERE governmentform = 'Federal Republic' ORDER BY lifeexpectancy LIMIT 1),
       (SELECT lifeexpectancy FROM country WHERE governmentform = 'Republic' ORDER BY lifeexpectancy LIMIT 1),
       (SELECT lifeexpectancy FROM country WHERE lifeexpectancy IS NOT NULL AND governmentform != 'Republic' AND governmentform != 'Federal Republic' ORDER BY lifeexpectancy LIMIT 1)
ORDER BY ""Indicator""
LIMIT 2;"
hXQtjxwL,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,sayid83,JavaScript,Wednesday 5th of June 2024 04:55:31 PM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Steam gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
4nd of June 2024"
BZQMqQkN,AUDIO FADE IN/OUT,1xptolevitico69,HTML,Wednesday 5th of June 2024 04:53:19 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
   <head>
      <meta charset=""UTF-8"" />
      <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"" />
      <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
      <style>
         @import url(""https://fonts.googleapis.com/css2?family=Bruno+Ace+SC"");

         body {
            margin: 0;
         }

         * {
            box-sizing: border-box;
         }

         .top {
            width: 100%;
            height: 100vh;
            border: 0;
            outline: 0;
            background-color: white;
         }

         .top a {
            display: block;
            color: red;
            margin: 0 5px;
            text-decoration: none;
            font-family: bruno ace sc;
            font-weight: 900;
            font-size: 25px;
         }

         .top input {
            font-family: bruno ace sc;
            display: inline-block;
         }

         h1 {
            font-family: bruno ace sc;
            margin: 30px 0;
         }

         .search {
            outline: 0;
            height: 30px;
            font-size: 16px;
            width: 150px;
            text-align: center;
            border: 0;
            color: red;
            background-color: red;
            color: white;
            border-radius: 5px;
         }

         @media (orientation: portrait) {
            .top input {
               display: block;
               margin: 2px auto;
            }

            h1 {
               font-size: 20px;
            }
         }

         @media (orientation: landscape) and (max-width: 640px) {
            h1 {
               font-size: 20px;
            }

            .avatar {
               margin: auto;
            }
         }
      </style>
   </head>

   <body>
      <audio id=""audio"" loop src=""https://1xpto.netlify.app/local/items/audio.mp3""></audio>

      <button class=""top"">
         <a href=""https://1xpto.netlify.app/"">Home</a>
         <a href=""https://www.facebook.com/ManuelJSAndrade/"">Facebook</a>

         <h1>AUDIO FADE IN/OUT</h1>

         <input class=""search"" onclick=""Style()"" type=""button"" value=""Src Code"" />
         <input class=""search"" onclick=""web()"" type=""button"" value=""HTML"" />
      </button>

      <script>
         function Style() {
            audio.play();
            foo = window.open("" https://1xpto.netlify.app/local/articles/audio%20fade%20in-out/local/index.txt"");
         }

         function web() {
            audio.pause();
            window.open(""https://1xpto.netlify.app/local/articles/audio%20fade%20in-out/local/ "", ""_self"");
            foo.close();
         }
      </script>
   </body>
</html>"
v6fc64eJ,picrenamer.py,Yesideez,Python,Wednesday 5th of June 2024 04:53:03 PM CDT,"# File  : picrenamer.py
# Author: Zeb/Slipstream
# Date  : 5-Jun-2024

from sys import argv
from glob import glob
from pathlib import Path
from PIL import Image
#from PIL.ExifTags import TAGS
from os import rename

blnCommit=False #Check for the parameter to make the changes
if len(argv)>1 and argv[1]==""commit"":
  blnCommit=True

intCount=0
lstFiles=glob(""*.[j|J][p|P][g|G]"")
lstFiles.sort()

for i in lstFiles:
  im=Image.open(i)
  tmp=im.getexif()
  dt=tmp[306].split("" "") #extract the date time into a list
  tm=dt[1].split("":"")    #extract the date into a list
  dt=dt[0].split("":"")    #extract the time into a list
  strAfter=f""{dt[0]}-{dt[1]}-{dt[2]} {tm[0]}-{tm[1]}-{tm[2]}.jpg""
  file=Path(strAfter)
  if blnCommit:
    if file.exists():
      print(f""ERR: File '{strAfter}' exists"")
    else:
      #print(f""Rename '{i}' to '{strAfter}'"")
      rename(i,strAfter)
      intCount+=1
  else:
    print(f"" '{i}' to '{strAfter}'"")

if blnCommit:
  print(f""Files: {intCount}/{len(lstFiles)}"")
else:
  print(f""Files: {len(lstFiles)} (nothing has been changed)"")
"
TsEpTYqL,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,PetrikDev,JavaScript,Wednesday 5th of June 2024 04:49:30 PM CDT,"G2A.com free gift card & gaming guide.
Any gift card for free on G2A.com including Xbox gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
4nd of June 2024"
e0gEZKFu,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,x3kiN,JavaScript,Wednesday 5th of June 2024 04:43:29 PM CDT,"G2A.com free gift card & gaming guide.
Any gift card for free on G2A.com including Xbox gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4 2024"
dgVrcaMp,unattend-upgrade config,kjetilk,Python,Wednesday 5th of June 2024 04:38:31 PM CDT,"// Unattended-Upgrade::Origins-Pattern controls which packages are
// upgraded.
//
// Lines below have the format format is ""keyword=value,..."".  A
// package will be upgraded only if the values in its metadata match
// all the supplied keywords in a line.  (In other words, omitted
// keywords are wild cards.) The keywords originate from the Release
// file, but several aliases are accepted.  The accepted keywords are:
//   a,archive,suite (eg, ""stable"")
//   c,component     (eg, ""main"", ""contrib"", ""non-free"")
//   l,label         (eg, ""Debian"", ""Debian-Security"")
//   o,origin        (eg, ""Debian"", ""Unofficial Multimedia Packages"")
//   n,codename      (eg, ""jessie"", ""jessie-updates"")
//     site          (eg, ""http.debian.net"")
// The available values on the system are printed by the command
// ""apt-cache policy"", and can be debugged by running
// ""unattended-upgrades -d"" and looking at the log file.
//
// Within lines unattended-upgrades allows 2 macros whose values are
// derived from /etc/debian_version:
//   ${distro_id}            Installed origin.
//   ${distro_codename}      Installed codename (eg, ""buster"")
Unattended-Upgrade::Origins-Pattern {
        // Codename based matching:
        // This will follow the migration of a release through different
        // archives (e.g. from testing to stable and later oldstable).
        // Software will be the latest available for the named release,
        // but the Debian release itself will not be automatically upgraded.
//      ""origin=Debian,codename=${distro_codename}-updates"";
//      ""origin=Debian,codename=${distro_codename}-proposed-updates"";
//      ""origin=Debian,codename=${distro_codename},label=Debian"";
        ""origin=Debian,codename=${distro_codename},label=Debian-Security"";

        // Archive or Suite based matching:
        // Note that this will silently match a different release after
        // migration to the specified archive (e.g. testing becomes the
        // new stable).
//      ""o=Debian,a=stable"";
//      ""o=Debian,a=stable-updates"";
//      ""o=Debian,a=proposed-updates"";
//      ""o=Debian Backports,a=${distro_codename}-backports,l=Debian Backports"";
};

// Python regular expressions, matching packages to exclude from upgrading
Unattended-Upgrade::Package-Blacklist {
    // The following matches all packages starting with linux-
//  ""linux-"";

    // Use $ to explicitely define the end of a package name. Without
    // the $, ""libc6"" would match all of them.
//  ""libc6$"";
//  ""libc6-dev$"";
//  ""libc6-i686$"";

    // Special characters need escaping
//  ""libstdc\+\+6$"";

    // The following matches packages like xen-system-amd64, xen-utils-4.1,
    // xenstore-utils and libxenstore3.0
//  ""(lib)?xen(store)?"";

    // For more information about Python regular expressions, see
    // https://docs.python.org/3/howto/regex.html
};

// This option allows you to control if on a unclean dpkg exit
// unattended-upgrades will automatically run 
//   dpkg --force-confold --configure -a
// The default is true, to ensure updates keep getting installed
//Unattended-Upgrade::AutoFixInterruptedDpkg ""true"";

// Split the upgrade into the smallest possible chunks so that
// they can be interrupted with SIGTERM. This makes the upgrade
// a bit slower but it has the benefit that shutdown while a upgrade
// is running is possible (with a small delay)
//Unattended-Upgrade::MinimalSteps ""true"";

// Install all updates when the machine is shutting down
// instead of doing it in the background while the machine is running.
// This will (obviously) make shutdown slower.
// Unattended-upgrades increases logind's InhibitDelayMaxSec to 30s.
// This allows more time for unattended-upgrades to shut down gracefully
// or even install a few packages in InstallOnShutdown mode, but is still a
// big step back from the 30 minutes allowed for InstallOnShutdown previously.
// Users enabling InstallOnShutdown mode are advised to increase
// InhibitDelayMaxSec even further, possibly to 30 minutes.
//Unattended-Upgrade::InstallOnShutdown ""false"";

// Send email to this address for problems or packages upgrades
// If empty or unset then no email is sent, make sure that you
// have a working mail setup on your system. A package that provides
// 'mailx' must be installed. E.g. ""user@example.com""
Unattended-Upgrade::Mail ""root"";

// Set this value to ""true"" to get emails only on errors. Default
// is to always send a mail if Unattended-Upgrade::Mail is set
Unattended-Upgrade::MailOnlyOnError ""true"";

// Remove unused automatically installed kernel-related packages
// (kernel images, kernel headers and kernel version locked tools).
//Unattended-Upgrade::Remove-Unused-Kernel-Packages ""true"";

// Do automatic removal of newly unused dependencies after the upgrade
Unattended-Upgrade::Remove-New-Unused-Dependencies ""false"";

// Do automatic removal of unused packages after the upgrade
// (equivalent to apt-get autoremove)
Unattended-Upgrade::Remove-Unused-Dependencies ""false"";

// Automatically reboot *WITHOUT CONFIRMATION* if
//  the file /var/run/reboot-required is found after the upgrade
Unattended-Upgrade::Automatic-Reboot ""false"";

// Automatically reboot even if there are users currently logged in
// when Unattended-Upgrade::Automatic-Reboot is set to true
//Unattended-Upgrade::Automatic-Reboot-WithUsers ""true"";

// If automatic reboot is enabled and needed, reboot at the specific
// time instead of immediately
//  Default: ""now""
//Unattended-Upgrade::Automatic-Reboot-Time ""02:00"";

// Use apt bandwidth limit feature, this example limits the download
// speed to 70kb/sec
//Acquire::http::Dl-Limit ""70"";

// Enable logging to syslog. Default is False
// Unattended-Upgrade::SyslogEnable ""false"";

// Specify syslog facility. Default is daemon
// Unattended-Upgrade::SyslogFacility ""daemon"";

// Download and install upgrades only on AC power
// (i.e. skip or gracefully stop updates on battery)
// Unattended-Upgrade::OnlyOnACPower ""true"";

// Download and install upgrades only on non-metered connection
// (i.e. skip or gracefully stop updates on a metered connection)
// Unattended-Upgrade::Skip-Updates-On-Metered-Connections ""true"";

// Verbose logging
// Unattended-Upgrade::Verbose ""false"";

// Print debugging information both in unattended-upgrades and
// in unattended-upgrade-shutdown
// Unattended-Upgrade::Debug ""false"";
"
xntaKubx,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,kjihu25,JavaScript,Wednesday 5th of June 2024 04:31:27 PM CDT,"G2A.com complimentary gift card & games guide.
Any voucher for free on G2A.com including Playstation gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4 2024"
nyjquw0v,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,buch,JavaScript,Wednesday 5th of June 2024 04:19:26 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4 2024"
7HLwy3yB,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,Alfonso1119,JavaScript,Wednesday 5th of June 2024 04:13:26 PM CDT,"G2A.com complimentary gift card & games guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
4nd of June 2024"
KE3kdhqz,killer,vip-fran,Lua,Wednesday 5th of June 2024 04:11:26 PM CDT,"if gg.getTargetInfo().processName ~= 'com.dts.freefireth' then gg.alert('‚ùåSelecione El Proceso De Free Fire‚ùå','üîôSalirüîô') os.exit(print('‚ù§Ô∏èSubscr√≠bete A Fran‚Ä¢Hacker‚Ñ¢‚ù§Ô∏è')) end
if gg.getTargetInfo().versionCode ~= '2019117295' then gg.alert('‚ö†Ô∏èSu Versi√≥n Es De 64 Bits‚ö†Ô∏è\n\n‚ùåScript No Compatible Con Esta Versi√≥n‚ùå \n\nüê¢Tienes Que Instalar La Versi√≥n De 32 Bitsüê¢','üîôSalirüîô') os.exit(print('‚ù§Ô∏èSubscr√≠bete A Fran‚Ä¢Hacker‚Ñ¢‚ù§Ô∏è')) end
gg.setVisible(false)
gg.alert('üî•Script Actualizado / Script Updated üî•','‚ù§Ô∏è Abrir / Open ‚ù§Ô∏è')
gg.alert('üî•Script Descaradoüî•','‚ù§Ô∏èHappy Game‚ù§Ô∏è') memFrom, memTo, lib, num, lim, results, src, ok = 0, -1, nil, 0, 32, {}, nil, false function name(n) if lib ~= n then lib = n ranges = gg.getRangesList(lib) if #ranges == 0 then os.exit() else memFrom = ranges[1].start memTo = ranges[#ranges]['end'] end end end function hex2tbl(hex) ret = {} hex:gsub('%S%S', function (ch) ret[#ret + 1] = ch return '' end) return ret end function original(orig) tbl = hex2tbl(orig) len = #tbl if len == 0 then return end used = len if len > lim then used = lim end s = '' for i = 1, used do if i ~= 1 then s = s..';' end v = tbl[i] if v == '??' or v == '**' then v = '0~~0' end s = s..v..'r' end s = s..'::'..used gg.searchNumber(s, 1, false, gg.SIGN_EQUAL, memFrom, memTo) if len > used then for i = used + 1, len do v = tbl[i] if v == '??' or v == '**' then v = 256 else v = ('0x'..v) + 0 if v > 127 then v = v - 256 end end tbl[i] = v end end found = gg.getResultCount(); results = {} count = 0 checked = 0 while true do if checked >= found then break end all = gg.getResults(8) total = #all start = checked if checked + used > total then break end for i, v in ipairs(all) do v.address = v.address + of end gg.loadResults(all) while start < total do good = true of = all[1 + start].address - 1 if used < len then get = {} for i = lim + 1, len do get[i - lim] = {address = of + i, flags = 1, value = 0} end get = gg.getValues(get) for i = lim + 1, len do ch = tbl[i] if ch ~= 256 and get[i - lim].value ~= ch then good = false break end end end if good then count = count + 1 results[count] = of checked = checked + used else del = {} for i = 1, used do del[i] = all[i + start] end gg.removeResults(del) end start = start + used end end end function replaced(repl) num = num + 1 tbl = hex2tbl(repl) if src ~= nil then source = hex2tbl(src) for i, v in ipairs(tbl) do if v ~= '??' and v ~= '**' and v == source[i] then tbl[i] = '**' end end src = nil end cnt = #tbl set = {} s = 0 for _, addr in ipairs(results) do for i, v in ipairs(tbl) do if v ~= '??' and v ~= '**' then s = s + 1 set[s] = { ['address'] = addr + i,  ['value'] = v..'r', ['flags'] = 1,} end end end if s ~= 0 then gg.setValues(set) end ok = true end
function edit(offset,hex) r=gg.getRangesList(""libil2cpp.so"")[1].start local h={} h[1]={} h[1].address=r+offset h[1].flags=0x20 h[1].value=hex gg.setValues(h) end function unity(offset,hex) r=gg.getRangesList(""libunity.so"")[1].start local h={} h[1]={} h[1].address=r+offset h[1].flags=0x20 h[1].value=hex gg.setValues(h) end gg.setVisible(true)
function script()
a = gg.multiChoice({
'‚ñ´Ô∏èClose Script‚ñ´Ô∏è',
'üî•Pro Killer (Pre-Login) (No Net)ü§ï'
})
if a == nil then else
if a [1] then gg.setVisible(true) os.exit(print('‚ù§Ô∏èSubscr√≠bete A Fran‚Ä¢Hacker‚Ñ¢‚ù§Ô∏è')) end
if a [2] then descarado() end
end end
function descarado()
--gpn hand
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('h CD 1F F4 BC 00 00 80 3F 85 7B F6 3E', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h CD 1F F4 BC 00 00 96 43 85 7B F6 3E', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 0E 34 B9 3D 00 00 80 3F 13 13 17 3E', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h 0E 34 B9 3D 00 00 96 43 13 13 17 3E', gg.TYPE_BYTE)
gg.clearResults()

--speed joystick
edit(0x115a1f4,'h 01 00 A0 E3 1E FF 2F E1')
edit(0x5136808,'h 01 00 A0 E3 1E FF 2F E1')

--wallshot
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('0.00001;-1.30928164e25;-3.69511377e20::9', gg.TYPE_FLOAT)
gg.refineNumber('0.00001', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('1', gg.TYPE_FLOAT)
gg.clearResults()

--cielo negro
unity(0x3022dc,'h 00 00 80 BF 00 00 51 E3')

--cuerpos blancos
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('-444579820;2;2;130::21', gg.TYPE_DWORD)
gg.refineNumber('2', gg.TYPE_DWORD)
gg.getResults(gg.getResultsCount())
gg.editAll('0', gg.TYPE_DWORD)
gg.clearResults()

--piedras
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber('-8388395.5;-8388393.5;-8388387.5::65', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('-1', gg.TYPE_FLOAT)
gg.clearResults()

--c√°mara hacker
gg.setRanges(gg.REGION_CODE_APP)
name('libil2cpp.so')
of = 0x10a5aa0
original('7F 45 4C 46 01 01 01 00')
replaced('01 00 A0 E3 1E FF 2F E1')
gg.clearResults()

end

while true do if gg.isVisible() then gg.setVisible(false) script() end end"
32fqRprX,Untitled,cosenza987,C++,Wednesday 5th of June 2024 04:09:08 PM CDT,"//–°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ, –ì–µ—Ä–æ—è–º —Å–ª–∞–≤–∞

#include <bits/stdc++.h>

using namespace std;

const int N = 5e5 + 7, M = (1 << 20) + 1;

using vll = __int128_t;

long long binexp(long long a, long long n, int mod) {
    long long res = 1;
    while(n) {
        if(n & 1) {
            res = (res * a) % mod;
        }
        n >>= 1;
        a = (a * a) % mod;
    }
    return res;
}

namespace ntt {
    long long w[M], k, nrev;
    inline void init(int n, int root, int mod) {
        w[0] = 1;
        k = binexp(root, (mod - 1) / n, mod);
        nrev = binexp(n, mod - 2, mod);
        for(int i = 1; i <= n; i++) {
            w[i] = (w[i - 1] * k) % mod;
        }
    }
    inline void ntt(vector<long long> &a, int n, int mod, bool inv = false) {
        a.resize(n);
        for(int i = 0, j = 0; i < n; i++) {
            if(i > j) swap(a[i], a[j]);
            for(int l = n / 2; (j ^= l) < l; l >>= 1);
        }
        for(int i = 2; i <= n; i <<= 1) {
            for(int j = 0; j < n; j += i) {
                for(int l = 0; l < i / 2; l++) {
                    int x = j + l, y = j + l + (i / 2), z = (n / i) * l;
                    long long tmp = (a[y] * w[(inv ? (n - z) : z)]) % mod;
                    a[y] = (a[x] - tmp + mod) % mod;
                    a[x] = (a[j + l] + tmp) % mod;
                }
            }
        }
        if(inv) {
            for(int i = 0; i < n; i++) {
                a[i] = (a[i] * nrev) % mod;
            }
        }
    }
    vector<long long> multiply(vector<long long>& a, vector<long long>& b, int n, int root = 3, int mod = 998244353) {
        init(n, root, mod);
        ntt(a, n, mod);
        ntt(b, n, mod);
        vector<long long> ans(n);
        for(int i = 0; i < n; i++) {
            ans[i] = (a[i] * b[i]) % mod;
        }
        ntt(ans, n, mod, true);
        return ans;
    }
    vector<long long> multiply_crt2(vector<long long> &a, vector<long long> &b, long long mod) {
        vector<long long> primes = {1004535809, 998244353, 985661441};
        vector<long long> x[2], y[2], z[2];
        int n = a.size() + b.size() - 1;
        while(n & (n - 1)) n++;
        a.resize(n);
        b.resize(n);
        for(int p = 0; p < 2; p++) {
            x[p].resize(n);
            y[p].resize(n);
            for(int i = 0; i < n; i++) {
                x[p][i] = a[i] % primes[p];
                y[p][i] = b[i] % primes[p];
            }
        }
        for(int p = 0; p < 2; p++) {
            z[p] = multiply(x[p], y[p], n, 3, primes[p]);
        }
        vector<long long> ans(n);
        long long r01 = binexp(primes[0], primes[1] - 2, primes[1]);
        for(int i = 0; i < n; i++) {
            vll l = z[0][i], r = z[1][i];
            vll cur = ((r + primes[1] - l % primes[1]) % primes[1]) * r01 % primes[1];
            ans[i] = (l + (cur * primes[0]) % mod + mod) % mod;
        }
        return ans;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    int n, m;
    cin >> n >> m;
    vector<long long> a(N), b(N), _a(N), _b(N);
    while(n--) {
        int x, y;
        cin >> x >> y;
        a[x] = y;
        _a[x] = 1;
    }
    while(m--) {
        int x, y;
        cin >> x >> y;
        b[x] = y;
        _b[x] = 1;
    }
    long long same = 0;
    for(int i = 0; i < N; i++) {
        if(_a[i] and _b[i]) {
            same += a[i] + b[i];
            a[i] = b[i] = 0;
        }
    }
    auto l = ntt::multiply_crt2(a, _b, (1ll << 61) - 1);
    auto r = ntt::multiply_crt2(b, _a, (1ll << 61) - 1);
    long long mx = 0;
    for(int i = 0; i < (int)min(l.size(), r.size()); i += 2) {
        mx = max(mx, (l[i] + r[i]));
    }
    cout << same + mx << ""\n"";
    return 0;
}"
kMJ7sqVj,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,Garoam,JavaScript,Wednesday 5th of June 2024 04:07:24 PM CDT,"G2A.com free gift card & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
4nd of June 2024"
F24ntU37,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,atakan1983,JavaScript,Wednesday 5th of June 2024 04:01:23 PM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Playstation gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
4nd of June 2024"
mQtu6h4p,Unnamed Radar Startup,E-Kemp,Lua,Wednesday 5th of June 2024 03:58:35 PM CDT,"shell.run(""rm radar.lua"")

shell.run(""pastebin get eBU10CKG radar.lua"")

shell.run(""radar"")"
eBU10CKG,Unnamed Radar,E-Kemp,Lua,Wednesday 5th of June 2024 03:57:31 PM CDT,"radar = peripheral.wrap(""top"")
modem = peripheral.wrap(""back"")
drive = peripheral.wrap(""bottom"")

-- read drive for geolocation
locationLabel = drive.getDiskLabel()

-- check every second
  -- if there is a player present, transmit location
while true do
  players = radar.getPlayers()
  if next(players) then
    res = { location = locationLabel, players = {} }
    for k, v in pairs(players) do
      table.insert(res.players, v.name)
    end
    -- make table
    modem.transmit(6969, 6970, res)
    print(textutils.serialise(res))
  end
  os.sleep(1)
end"
4kZJVzPR,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,ColtM4A2,JavaScript,Wednesday 5th of June 2024 03:54:57 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Xbox gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4 2024"
naW512Vx,ü§ëG2A.com Free Gift Card Guide June 2024 Fixü§ë,Skarface-MKL,JavaScript,Wednesday 5th of June 2024 03:48:56 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Amazon gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4 2024"
q2zGDqct,ü§ëG2A.com Free Gift Card Guide June 2024 FixüéÅ,thepplayz,JavaScript,Wednesday 5th of June 2024 03:42:56 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Playstation gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?654

Working as of:
June 4 2024"
ypY3Aju2,Untitled,johnwiese,Dart,Wednesday 5th of June 2024 03:42:30 PM CDT,"class _LevelOneState extends State<LevelOnePage> {
  late Timer time;
  int tick = 0;
  @override
  void initState() {
    super.initState();
    time = Timer.periodic(const Duration(seconds: 1), updateTick);
  }

  void updateTick(Timer timer) {
    setState(() {
      tick++;
      if (tick == 15) {
        time.cancel();
        Navigator.of(context)
            .push(MaterialPageRoute(builder: (BuildContext context) {
          return const StartPage();
        }));
      }
    });
  }

  List<String> numberPad = [
    '7',
    '8',
    '9',
    'C',
    '4',
    '5',
    '6',
    'DEL',
    '1',
    '2',
    '3',
    '=',
    '0',
  ];
  // Question
  int numberA = 1;
  int numberB = 1;
  // Answer
  String userAnswer = '';
  // On Button Tapped
  void buttonTapped(String button) {
    setState(
      () {
        if (button == '=') {
          //Check if user is correct
          // TODO: YOU NEED TO HAVE A SYMBOL THAT IS BEING USED SOMEPLACE, DOESN""T LOOK LIKE YOU HAVE ONE, JUST A METHOD TO GET ONE
          checkResult( '+', numberA, numberB, double.parse(userAnswer));
        } else if (button == 'C') {
          // CLears answer input
          userAnswer = '';
        } else if (button == 'DEL') {
          // Deletes the last user input
          if (userAnswer.isNotEmpty) {
            userAnswer = userAnswer.substring(0, userAnswer.length - 1);
          }
          // Caps at 3 Numbers
        } else if (userAnswer.length < 3) {
          userAnswer += button;
        }
      },
    );
  }

  bool isAnswerCorrect(String op, int numberA, int numberB, double answer) {
    switch (op) {
      case '+': 
        return answer == numberA + numberB;     
      case '-': 
        return answer == numberA - numberB;
      case '/': 
        return answer == numberA / numberB;
      case '*': 
        return answer == numberA * numberB;
      default:
        return false; 
    }    
  }

  //check if user is right
  void checkResult(String op, int numberA, int numberB, double answer) {
   if(isAnswerCorrect(op, numberA, numberB, answer)) {
      // If correct
      showDialog(
        context: context,
        builder: (context) {
          return  ResultMessage(
            message: 'Correct  ',
            onTap: goToNextQuestion,
            icon: Icons.arrow_forward,
          );
        },
      );
    } else{
      // ignore: avoid_print
      showDialog(
        context: context,
        builder: (context) {
          return  ResultMessage(
              message: 'Sorry Try Again',
              onTap: goBackToQuestion,
              icon: Icons.rotate_left);
        },
      );
    }
}

// Create Random Number
  var randomNumber = Random();
  // Create Random Symbol
  String createRandomSymbol() {
    var symbols = ['+', '-', '*', '/'];
    symbols.shuffle();
    return symbols.first;
  }

  // GoToNextQuestion
  void goToNextQuestion() {
    //Dimiss
    Navigator.of(context).pop();
    //Value Reset
    setState(() {
      userAnswer = '';
    });
    //New Question
    numberA = randomNumber.nextInt(12);
    numberB = randomNumber.nextInt(12);
  }

  //goBackToQuestion
  void goBackToQuestion() {
    Navigator.of(context).pop();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.lightGreenAccent,
      body: Column(
        children: <Widget>[
          Expanded(
            child: Container(
              child: Column(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: <Widget>[
                    Container(
                      padding: const EdgeInsets.all(
                        25,
                      ),
                      alignment: Alignment.centerRight,
                      child: Text(tick.toString(),
                          textAlign: TextAlign.right, style: basicTextStyle),
                    ),
                  ]),
            ),
          ),
          Container(
            padding: const EdgeInsets.all(15),
            alignment: Alignment.bottomCenter,
            child:
                //Question
                Text(
              // ignore: prefer_interpolation_to_compose_strings
              numberA.toString() + ' + ' + numberB.toString() + ' = ',
              style: const TextStyle(fontSize: 32, color: Colors.purpleAccent),
            ),
          ),
          Container(
            height: 55,
            width: 110,
            decoration: BoxDecoration(
              color: Colors.deepPurpleAccent,
              borderRadius: BorderRadius.circular(4),
            ),
            child: Center(
              child: Text(userAnswer, style: basicTextStyle),
            ),
          ),
          Expanded(
            flex: 3,
            child: Container(
              child: GridView.builder(
                itemCount: numberPad.length,
                physics: const NeverScrollableScrollPhysics(),
                gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                    crossAxisCount: 4),
                itemBuilder: (BuildContext context, int index) {
                  return MyButton(
                    child: numberPad[index],
                    onTap: () => buttonTapped(numberPad[index]),
                  );
                },
              ),
            ),
          ),
        ],
      ),
    );
  }
}"
