id,title,username,language,date,content
NPrtPVhC,Untitled,Tkap1,C,Wednesday 8th of May 2024 01:04:44 PM CDT,"
// usage
{
	char* str = ""athano azen"";
	char entity_a[128];
	char entity_b[128];
	char* curr = str;
	curr = parse_identifier(curr, entity_a);
	if(!curr) {
		// DIDNT FIND AN IDENTIFIER AKA ENTITY NAME IN THIS CASE
		return;
	}
	curr = parse_identifier(curr, entity_b);
	if(!curr) {
		// FOUND ONE NAME BUT NOT TWO
		return;
	}
	// entity_a is ""athano""
	// entity_b is ""azen""
}

char* parse_identifier(char* source, char* fill_me_up_big_boy)
{
	// skip spaces
	while(*source == ' ') {
		source += 1;
	}

	char* result = null;
	if(!begins_identifier(source[0])) { return result; }
	int i = 1;
	while(true) {
		if(!continues_identifier(source[i])) {
			memcpy(fill_me_up_big_boy, source, i);
			fill_me_up_big_boy[i] = 0;
			result = &source[i];
			break;
		}
		i += 1;
	}
	return result;
}




/////////
bool is_number(char c)
{
	return c >= '0' && c <= '9';
}

bool is_alpha(char c)
{
	return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')	;
}

bool is_alphanum(char c)
{
	return is_alpha(c) || is_number(c);	
}

bool begins_identifier(char c)
{
	return is_alphanum(c) || c == '_'
}

bool continues_identifier(char c)
{
	return begins_identifier(c) || is_number(c);
}"
Ak2Msbpj,practice hsc 1,splash365,C++,Wednesday 8th of May 2024 01:01:01 PM CDT,"#include <stdio.h>

int main()
{
    int n;
    printf(""Enter a number: "");
    scanf(""%d"", &n);
    
    for(int i = 1; i <= n; i++)
    {
        for(int j = 1; j<=i; j++)
        {
            printf(""%d"", j);
        }
        printf(""\n"");
        
    }
    
    return 0;
}



/*
Enter a number: 4
1
12
123
1234
*/

---------------------------------------------------

/**

Find if a number is prime (without function)

**/

#include <stdio.h>

int main()
{
    int n;
    printf(""Enter a number: "");
    scanf(""%d"", &n);
    
    int flag = 1;
    for(int i = 2; i < n; i++)
    {
        if(n % i == 0)
        {
            printf(""%d is not prime\n"", n);
            flag = 0;
            break;
        }
    }
    if(flag == 1) 
    {
        printf(""%d is a prime\n"", n);
    }
    
    return 0;
}



/*

Enter a number: 20
20 is not prime

*/

---------------------------------------------------

/**

Find if a number is prime (with function)

**/

int isPrime(int n)
{
    for(int i = 2; i < n; i++)
    {
        if(n % i == 0)
        {
            return 0;
        }
    }
    return 1;
}


#include <stdio.h>

int main()
{
    int n;
    printf(""Enter a number: "");
    scanf(""%d"", &n);
    
    if(isPrime(n))
    {
        printf(""%d is a prime\n"", n);
    }
    else
    {
        printf(""%d is not a prime\n"", n);
    }
    
    return 0;
}



/*

Enter a number: 5
5 is a prime

*/

---------------------------------------------------

/**

print primes from 2 to N (with function)

**/

int isPrime(int n)
{
    for(int i = 2; i < n; i++)
    {
        if(n % i == 0)
        {
            return 0;
        }
    }
    return 1;
}


#include <stdio.h>

int main()
{
    int n;
    printf(""Enter n: "");
    scanf(""%d"", &n);
    
    for(int i = 2; i<=n; i++)
    {
        if(isPrime(i))
        {
            printf(""%d "", i);
        }
    }
    
    return 0;
}



/*

Enter a number: 5
5 is a prime

*/

---------------------------------------------------

/**

print primes from 2 to N (without function)

**/

************* H W *************


---------------------------------------------------

/**

find GCD

**/



#include <stdio.h>

int main()
{
    int a, b;
    printf(""Enter two numbers: "");
    scanf(""%d %d"", &a, &b);
    
    int min, gcd;
    
    if(a <= b) min = a;
    else min = b;
    
    for(int i = 1; i<=min; i++)
    {
        if(a % i == 0 && b % i == 0)
        {
            gcd = i;
        }
    }
    
    printf(""GCD: %d\n"", gcd);
    
    int lcm = (a * b) / gcd;
    
    printf(""LCM: %d\n"", lcm);
    
    return 0;
}



/*

Multiples:
3 = 3, 6, 9, 12, ...


Divisors:
30 = 1 . 30
   = 2 . 15
   = 5 . 6


   
GCD Greatest Common Divisors

30 20

30 = 1, 2, 5, 6, 10, 15, 30
20 = 1, 2, 5, 10, 20

Choto number er divisor boro number er o divisor kina => true: common divisor


*/"
pX7KgLU4,EasyButton Control rev_06,pleasedontcode,Arduino,Wednesday 8th of May 2024 12:47:44 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: EasyButton Control
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-08 17:46:39

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* The project must control a timer that starts when */
	/* the infrared sensor is in a low active state and */
	/* stops when the sensor returns to a low active */
	/* state. The timer must be displayed on the LCD */
	/* screen. */
/****** SYSTEM REQUIREMENT 2 *****/
	/* The timer state should be handled using a state */
	/* machine. Furthermore, an explicit function called */
	/* 'resetTimer' needs to be implemented to reset the */
	/* counter and state of the state machine. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <LiquidCrystal_I2C.h>    // https://github.com/marcoschwartz/LiquidCrystal_I2C
#include <EasyButton.h>    // https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void resetTimer(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t sensorInfrared_PushButton_PIN_D2 = 2;

/***** DEFINITION OF I2C PINS *****/
const uint8_t display_LCD1602I2C_I2C_PIN_SDA_A4 = A4;
const uint8_t display_LCD1602I2C_I2C_PIN_SCL_A5 = A5;
const uint8_t display_LCD1602I2C_I2C_SLAVE_ADDRESS = 39;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
LiquidCrystal_I2C lcd(display_LCD1602I2C_I2C_SLAVE_ADDRESS, 20, 4); // Initialize LiquidCrystal_I2C object
EasyButton button(sensorInfrared_PushButton_PIN_D2); // Initialize EasyButton object

void onPressedForDuration()
{
  // Code to be executed when the button is pressed for the given duration.
}

void setup(void)
{
    // put your setup code here, to run once:
    pinMode(sensorInfrared_PushButton_PIN_D2, INPUT_PULLUP);

    lcd.init(); // Initialize the LCD
    lcd.backlight(); // Turn on the backlight

    // Initialize the button
    button.begin();
    // Add the callback function to be called when the button is pressed for at least the given time
    button.onPressedFor(2000, onPressedForDuration);
}

void loop(void)
{
    // put your main code here, to run repeatedly:
    button.read(); // Continuously read the status of the button
}

void resetTimer(void)
{
    // Function to reset the timer and state machine
}

/* END CODE */"
CqgPGt09,OMEGENE,hayzun2,C++,Wednesday 8th of May 2024 12:34:24 PM CDT,"OMEGENE discord doawnload link
https://discord.gg/qUjGkkCp7a"
530Q5aN1,ü§ë G2A.com Free Gift Card Guide May 2024 FIX üéÅ,ssss50w,GetText,Wednesday 8th of May 2024 12:31:49 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
08 May 2024"
KFqkhWKm,esp32_lab_2,S11as,C++,Wednesday 8th of May 2024 12:21:36 PM CDT,"#include <Arduino.h>
#include <vector>
#include <string>
#include ""BluetoothSerial.h""

// https://randomnerdtutorials.com/esp32-bluetooth-classic-arduino-ide/

class Actor {
public:
    int actPin;
    Actor(int pin): actPin (pin) {}
    virtual void act() {}
};

class Clicker {
private:
    int clickerPin;
    std::vector<Actor*> actors;
    bool enabled;
public:
    Clicker(int pin) {
        this->clickerPin = pin;
        this->enabled = true;
    }
    
    bool isClicked() {
        return digitalRead(clickerPin) == LOW;
    }
    
    void addActor(Actor* newActor) { 
        this->actors.push_back(newActor);
    }

    void watchClicks() {
        Serial.println(""watching clicks""); 
        if (this->isClicked()) {
            for (Actor* actor: this->actors) { 
                actor->act();
            }
        }
    }

    void enable() {
        this->enabled = true;
    }

    void disable() {
        this->enabled = false;
    }
};

class SoundDevice: public Actor {
public:
    SoundDevice(int pin): Actor (pin) { }

    void playSound(int del) {
        digitalWrite(this->actPin, HIGH);
        delay(del);
        digitalWrite(this->actPin, LOW);
    }

    void playLoudSound(int del) {
        int arr[10] = {25, 50, 25, 50, 25, 50, 25, 50, 25, 50};
        for (int i = 0; i<10; i++) {
            analogWrite(this->actPin, arr[i]);
            delay((int)(del/2));
            analogWrite(this->actPin, 1);
            delay( (int)(del/2));
        }
    }

    void act() override {
        Serial.println(""sound device acting""); 
        playSound(150);
    }
};


class MessageController {
private:
    BluetoothSerial serial;
    Clicker* clicker;
    SoundDevice* soundDevice;
    std::string message;
public:
    MessageController(BluetoothSerial s, 
                        Clicker* clicker, 
                        SoundDevice* soundDevice): 
                        clicker(clicker), soundDevice(soundDevice) { 
        message = """";
        this->serial = s;
        this->serial.begin(""ESP32Kirill"");
    }

    void parseCommand() {
        if (this->serial.available()){
            char incomingChar = this->serial.read();
            if (incomingChar != '\n'){
                this->message += String(incomingChar);
            } else {
                this->message = """";
            }
            Serial.write(""Got char: "");
            Serial.write(incomingChar);
        }

        if (message ==""buzz"") {
            this->soundDevice->playSound(150);
        }
        else if (message ==""clicker_on"") {
            digitalWrite(ledPin, LOW);
        }
    }
}

uint64_t count = 0;
Clicker* clicker;
SoundDevice* soundDevice;
BluetoothSerial SerialBT;
MessageController* messageController;

void setup() {
    Serial.begin(115200);
    int clickerPin = 4;
    int soundPin = 13;
    int soundLen = 300;
    pinMode(clickerPin, INPUT);
    pinMode(soundPin, OUTPUT);

    clicker = new Clicker(clickerPin);
    soundDevice = new SoundDevice(soundPin);

    clicker->addActor(soundDevice);

    messageController = new MessageController(
        SerialBT,
        clicker,
        soundDevice,
    );
    Serial.println(""Setup finished"");
}

void loop() {
    messageController->parseCommand();
    clicker->watchClicks();

    delay(100)
}"
wrmNJMYG,safdawfaf,gadungw71,PHP,Wednesday 8th of May 2024 12:20:12 PM CDT,"‚Ä¢	https://www.imdb.com/list/ls545165122/
‚Ä¢	https://www.imdb.com/list/ls545165670/
‚Ä¢	https://www.imdb.com/list/ls545167717/
‚Ä¢	https://www.imdb.com/list/ls545167167/
‚Ä¢	https://www.imdb.com/list/ls545167348/
‚Ä¢	https://www.imdb.com/list/ls545167262/
‚Ä¢	https://www.imdb.com/list/ls545120732/
‚Ä¢	https://www.artstation.com/artwork/aoz2xL
‚Ä¢	https://www.artstation.com/watchfaceoff7onewish9/profile
‚Ä¢	https://www.artstation.com/artwork/Nyd9xd
‚Ä¢	https://www.artstation.com/watchtwilightofthewarriors7/profile
‚Ä¢	https://www.letsdobookmark.com/story/https-www-imdb-com-list-ls545165122
‚Ä¢	https://www.letsdobookmark.com/story/https-www-imdb-com-list-ls545165670
‚Ä¢	https://www.letsdobookmark.com/story/https-www-imdb-com-list-ls545167717
‚Ä¢	https://www.letsdobookmark.com/story/https-www-imdb-com-list-ls545167167
‚Ä¢	https://www.letsdobookmark.com/story/https-www-imdb-com-list-ls545167348
‚Ä¢	https://letsdobookmark.com/story/https-www-imdb-com-list-ls545167262-2
‚Ä¢	https://www.letsdobookmark.com/story/https-www-imdb-com-list-ls545120732
‚Ä¢	https://www.letsdobookmark.com/story/https-www-artstation-com-watchfaceoff7onewish9-profile
‚Ä¢	https://www.letsdobookmark.com/story/https-www-artstation-com-watchtwilightofthewarriors7-profile
‚Ä¢	https://www.kooapp.com/koo/guest_3NFOM8/35ac0811-ea98-48f4-af3a-82c7d5d83c69
‚Ä¢	https://open.firstory.me/user/clvy1b3wb000501up1mhuajaq
‚Ä¢	https://open.firstory.me/story/clvy1d8ub01yh01us1lc91emj
‚Ä¢	https://wandering.flarum.cloud/d/60479-dfgdrgdrh
‚Ä¢	https://hiuderyy.hashnode.dev/dsfsefgegesgseg
‚Ä¢	https://www.bankier.pl/forum/temat_dsfefdsfs,66214785.html
‚Ä¢	https://medium.com/@rarawwwuu27/%E4%B9%9D%E9%BE%99%E5%9F%8E%E5%AF%A8%E4%B9%8B%E5%9B%B4%E5%9F%8E-%E5%AE%8C%E6%95%B4%E7%89%88%E6%9C%AC-hd-1080p-d81c8c3c8075
‚Ä¢	https://www.onfeetnation.com/profiles/blogs/sadawfawfg
‚Ä¢	https://forum.mush.com.br/topic/215038/awerfsebsetnet
‚Ä¢	https://hackmd.io/@rerewilli6/ByTO0QFzR
‚Ä¢	https://demo.hedgedoc.org/s/R5Oe7g-Uc
‚Ä¢	https://rentry.co/7ewexoc2
‚Ä¢	https://paste.ee/p/crJRv
‚Ä¢	https://yamcode.com/asfawgf-65
‚Ä¢	https://lifeisfeudal.com/Discussions/question/dfsefesgesgesg
‚Ä¢	https://start.me/w/yO5yNX
‚Ä¢	https://plaza.rakuten.co.jp/aryasantosso/diary/202405090000/
‚Ä¢	https://telegra.ph/SDAFSE-05-08
‚Ä¢	https://muckrack.com/wsadawf-wfegf/bio
‚Ä¢	https://profile.hatena.ne.jp/rarawwwuu27/
‚Ä¢	https://www.bitsdujour.com/profiles/Cxggdw
‚Ä¢	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/749676/Default.aspx
‚Ä¢	https://www.fitlynk.com/1715188675F198357
"
RPE9c8tA,ü§ë G2A.com Free Gift Card Guide May 2024 FIX ü§ë,jusst2k4,GetText,Wednesday 8th of May 2024 12:12:37 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_313988.pdf

Working as of:
08 May 2024"
jffAp972,Image Upload Code,onlinejudge95,JavaScript,Wednesday 8th of May 2024 12:09:57 PM CDT,"import { useEffect, useState } from ""react"";
import { useStepperContext } from ""../StepperContext"";
import styles from ""./styles.module.css"";
import { useUser } from ""@/Store/userContext"";
import { Form } from ""react-bootstrap"";
import ""react-toastify/dist/ReactToastify.css"";
import { ToastContainer, toast } from ""react-toastify"";
import useRefreshToken from ""@/Components/Hooks/useRefreshToken"";

export default function ProfilePhoto({ details }) {
  const [data, setData] = useState({});
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const { userToken, userType } = useUser();
  const { coachData, setCoachData } = useStepperContext();
  const [file, setFile] = useState();
  const [image, setImage] = useState();
  const { refreshUserToken } = useRefreshToken();
  const [flag, setFlag] = useState(0);
  const [newEvent, setNewEvent] = useState(null);
  const [uriData, setUriData] = useState(null);

  function handleChange(e) {
    setFile(e.target.files[0]);
    setImage(URL.createObjectURL(e.target.files[0]));
  }

  const handleSubmit = async (event) => {
    event.preventDefault();
    const formData = new FormData();
    formData.append(""profilePhoto"", file);
    setLoading(true);
  
    try {
      if (
        file.type !== ""image/jpeg"" &&
        file.type !== ""image/png""
      ) {
        throw new Error(""This file extension type is not supported"");
      }
  
      const preSignedResponse = await fetch(
        `${process.env.NEXT_PUBLIC_UPLOAD_SERVICE_URL}/url/photo`,
        {
          method: ""POST"",
          headers: {
            ""Content-Type"": ""application/json"",
          },
          body: JSON.stringify({
            UserType: ""coach"",
            UserId: details.id,
            FileName: file.name,
          }),
        }
      );
      const preSignedUrl = await preSignedResponse.json();
      setUriData(preSignedUrl.S3Uri);
  
      const response = await fetch(preSignedUrl.URL, {
        headers: {
          ""Content-Type"": file.type,
        },
        method: preSignedUrl.Method,
        body: formData,
      });
      
      if (response.ok && response.headers.get(""content-length"") === ""0"") {
        var result = {};
      } else {
        var result = await response.json();
      }
  
      if (!response.ok) {
        if (response.status === 401) {
          await refreshUserToken();
          setFlag(1);
          setNewEvent(event);
        } else {
          console.log(result);
          throw new Error(`${result.detail}`);
        }
      } else {
        setData(result);
        toast.success(""Photo saved successfully"", {
          position: ""top-center"",
          autoClose: 5000,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: ""light"",
        });
      }
    } catch (error) {
      console.error(error);
      toast.error(error.message || ""Error Occurred, Try Again in Sometime"", {
        position: ""top-center"",
        autoClose: 5000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: ""light"",
      });
    } finally {
      setLoading(false);
    }
  };
  
  

  useEffect(() => {
    if (flag === 1) {
      handleSubmit(newEvent);
    }
  }, [flag]);

  useEffect(() => {
    setCoachData({
      ...coachData,
      profile_photo: uriData,
      image: image,
    });
  }, [uriData]);


  return (
    <Form className={styles.stepperBox}>
      <Form.Group style={{ paddingLeft: ""8px"" }}>
        <Form.Label className={styles.label}>
          Add Image{"" ""}
          <div style={{ color: ""red"", textTransform: ""none"" }}>
            (Supported Extensions: .png and .jpg)
          </div>
        </Form.Label>
        <div className={styles.photo}>
          <Form.Control
            className={styles.value}
            type=""file""
            onChange={handleChange}
          />
          <button
            type=""button""
            onClick={handleSubmit}
            className={styles.nextButton}
            disabled={loading}
          >
            {loading ? ""Saving..."" : ""Save""}
          </button>
        </div>
      </Form.Group>
      <ToastContainer />
    </Form>
  );
}"
VTFgQbW9,BubleSorting FASM,dllbridge,ASM (NASM),Wednesday 8th of May 2024 12:04:15 PM CDT,"format PE console
entry start

include 'win32a.inc'

section '.data' data readable writeable
    array dd 5, 2, 9, 3, 1  ; –ø—Ä–∏–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    array_size equ ($ - array) / 4

section '.code' code readable executable
  start:
    mov ecx, array_size

    outer_loop:
      mov edx, 0
      mov ebx, ecx
      dec ebx

      inner_loop:
        mov eax, [array + edx * 4]
        cmp eax, [array + edx * 4 + 4]
        jbe not_swap

        mov eax, [array + edx * 4]
        mov ebx, [array + edx * 4 + 4]
        mov [array + edx * 4], ebx
        mov [array + edx * 4 + 4], eax

        not_swap:
          inc edx
          loop inner_loop

      loop outer_loop

    mov ecx, array_size

    print_loop:
      mov eax, [array + ecx * 4 - 4]
      print eax
      dec ecx
      jnz print_loop

    call [ExitProcess]

section '.idata' import data readable writeable
  library kernel32, 'kernel32.dll',\
          user32, 'user32.dll'

  import kernel32,\
         ExitProcess, 'ExitProcess'

  import user32,\
         wsprintf, 'wsprintfA'

section '.text' code readable executable
  proc print
    enter
      invoke wsprintf, buffer, '%d', [ebp + 8]
      invoke StdOut, buffer
    return
  endp

section '.bss' data readable writeable
  buffer rb 16

section '.reloc' fixups data discardable
"
63TqhkE5,Untitled,vinraghav2,PowerShell,Wednesday 8th of May 2024 11:45:45 AM CDT,"sudo journalctl --since='-2min' --no-pager
-- Logs begin at Thu 2023-03-16 12:51:46 IST, end at Wed 2024-05-08 22:08:09 IST. --
May 08 22:06:10 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 985.
May 08 22:06:10 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:10 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:10 anjug-vostro-15-3568 systemd[10724]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:10 anjug-vostro-15-3568 systemd[10724]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:10 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:10 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:15 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 986.
May 08 22:06:15 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:15 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:15 anjug-vostro-15-3568 systemd[10725]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:15 anjug-vostro-15-3568 systemd[10725]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:15 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:15 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:21 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 987.
May 08 22:06:21 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:21 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:21 anjug-vostro-15-3568 systemd[10726]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:21 anjug-vostro-15-3568 systemd[10726]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:21 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:21 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:26 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 988.
May 08 22:06:26 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:26 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:26 anjug-vostro-15-3568 systemd[10727]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:26 anjug-vostro-15-3568 systemd[10727]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:26 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:26 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:31 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 989.
May 08 22:06:31 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:31 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:31 anjug-vostro-15-3568 systemd[10728]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:31 anjug-vostro-15-3568 systemd[10728]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:31 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:31 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:36 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 990.
May 08 22:06:36 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:36 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:36 anjug-vostro-15-3568 systemd[10729]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:36 anjug-vostro-15-3568 systemd[10729]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:36 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:36 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:42 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 991.
May 08 22:06:42 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:42 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:42 anjug-vostro-15-3568 systemd[10730]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:42 anjug-vostro-15-3568 systemd[10730]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:42 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:42 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:43 anjug-vostro-15-3568 systemd[1516]: Started Application launched by gnome-shell.
May 08 22:06:43 anjug-vostro-15-3568 dbus-daemon[1528]: [session uid=1000 pid=1528] Activating via systemd: service name='org.gnome.Terminal' unit='gnome-terminal-server.service' requested by ':1.175' (uid=1000 pid=10735 comm=""/usr/bin/gnome-terminal.real --window "" label=""unconfined"")
May 08 22:06:43 anjug-vostro-15-3568 systemd[1516]: Created slice apps.slice.
May 08 22:06:43 anjug-vostro-15-3568 systemd[1516]: Created slice apps-org.gnome.Terminal.slice.
May 08 22:06:43 anjug-vostro-15-3568 systemd[1516]: Starting GNOME Terminal Server...
May 08 22:06:44 anjug-vostro-15-3568 dbus-daemon[1528]: [session uid=1000 pid=1528] Successfully activated service 'org.gnome.Terminal'
May 08 22:06:44 anjug-vostro-15-3568 systemd[1516]: Started GNOME Terminal Server.
May 08 22:06:44 anjug-vostro-15-3568 systemd[1516]: Started VTE child process 10746 launched by gnome-terminal-server process 10738.
May 08 22:06:44 anjug-vostro-15-3568 systemd[1516]: gnome-launched-org.gnome.Terminal.desktop-10732.scope: Succeeded.
May 08 22:06:47 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 992.
May 08 22:06:47 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:47 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:47 anjug-vostro-15-3568 systemd[10750]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:47 anjug-vostro-15-3568 systemd[10750]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:47 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:47 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:51 anjug-vostro-15-3568 sudo[10751]:    anjug : TTY=pts/0 ; PWD=/home/anjug ; USER=root ; COMMAND=/usr/bin/lsusb -tv
May 08 22:06:51 anjug-vostro-15-3568 sudo[10751]: pam_unix(sudo:session): session opened for user root by (uid=0)
May 08 22:06:51 anjug-vostro-15-3568 sudo[10751]: pam_unix(sudo:session): session closed for user root
May 08 22:06:52 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 993.
May 08 22:06:52 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:52 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:52 anjug-vostro-15-3568 systemd[10754]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:52 anjug-vostro-15-3568 systemd[10754]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:52 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:52 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:06:57 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 994.
May 08 22:06:57 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:06:57 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:06:57 anjug-vostro-15-3568 systemd[10755]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:06:57 anjug-vostro-15-3568 systemd[10755]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:06:57 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:06:57 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:03 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 995.
May 08 22:07:03 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:03 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:03 anjug-vostro-15-3568 systemd[10756]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:03 anjug-vostro-15-3568 systemd[10756]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:03 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:03 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:05 anjug-vostro-15-3568 gnome-shell[1764]: ../clutter/clutter/clutter-actor.c:10558: The clutter_actor_set_allocation() function can only be called from within the implementation of the ClutterActor::allocate() virtual function.
May 08 22:07:08 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 996.
May 08 22:07:08 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:08 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:08 anjug-vostro-15-3568 systemd[10760]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:08 anjug-vostro-15-3568 systemd[10760]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:08 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:08 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:08 anjug-vostro-15-3568 ModemManager[933]: <info>  [sleep-monitor] system is about to suspend
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.3073] manager: sleep: sleep requested (sleeping: no  enabled: yes)
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.3074] device (enp2s0): state change: unavailable -> unmanaged (reason 'sleeping', sys-iface-state: 'managed')
May 08 22:07:08 anjug-vostro-15-3568 gnome-shell[9837]: [9830:9861:0508/220708.310701:ERROR:connection_factory_impl.cc(472)] ConnectionHandler failed with net error: -2
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.3208] device (p2p-dev-wlp1s0): state change: disconnected -> unmanaged (reason 'sleeping', sys-iface-state: 'managed')
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.3220] manager: NetworkManager state is now ASLEEP
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.3226] device (wlp1s0): state change: activated -> deactivating (reason 'sleeping', sys-iface-state: 'managed')
May 08 22:07:08 anjug-vostro-15-3568 whoopsie[1066]: [22:07:08] offline
May 08 22:07:08 anjug-vostro-15-3568 dbus-daemon[758]: [system] Activating via systemd: service name='org.freedesktop.nm_dispatcher' unit='dbus-org.freedesktop.nm-dispatcher.service' requested by ':1.12' (uid=0 pid=759 comm=""/usr/sbin/NetworkManager --no-daemon "" label=""unconfined"")
May 08 22:07:08 anjug-vostro-15-3568 systemd[1]: Starting Network Manager Script Dispatcher Service...
May 08 22:07:08 anjug-vostro-15-3568 dbus-daemon[758]: [system] Successfully activated service 'org.freedesktop.nm_dispatcher'
May 08 22:07:08 anjug-vostro-15-3568 systemd[1]: Started Network Manager Script Dispatcher Service.
May 08 22:07:08 anjug-vostro-15-3568 kernel: wlp1s0: deauthenticating from 50:2b:73:7e:61:a8 by local choice (Reason: 3=DEAUTH_LEAVING)
May 08 22:07:08 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: CTRL-EVENT-DISCONNECTED bssid=50:2b:73:7e:61:a8 reason=3 locally_generated=1
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <warn>  [1715186228.4771] sup-iface[0x5575c566bae0,wlp1s0]: connection disconnected (reason -3)
May 08 22:07:08 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: CTRL-EVENT-REGDOM-CHANGE init=CORE type=WORLD
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.4782] device (wlp1s0): state change: deactivating -> disconnected (reason 'sleeping', sys-iface-state: 'managed')
May 08 22:07:08 anjug-vostro-15-3568 avahi-daemon[754]: Withdrawing address record for fe80::3afe:fb21:70f1:4f2d on wlp1s0.
May 08 22:07:08 anjug-vostro-15-3568 avahi-daemon[754]: Leaving mDNS multicast group on interface wlp1s0.IPv6 with address fe80::3afe:fb21:70f1:4f2d.
May 08 22:07:08 anjug-vostro-15-3568 avahi-daemon[754]: Interface wlp1s0.IPv6 no longer relevant for mDNS.
May 08 22:07:08 anjug-vostro-15-3568 whoopsie[1066]: [22:07:08] Cannot reach: https://daisy.ubuntu.com
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.5115] dhcp4 (wlp1s0): canceled DHCP transaction
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.5116] dhcp4 (wlp1s0): state changed bound -> done
May 08 22:07:08 anjug-vostro-15-3568 avahi-daemon[754]: Withdrawing address record for 192.168.0.103 on wlp1s0.
May 08 22:07:08 anjug-vostro-15-3568 avahi-daemon[754]: Leaving mDNS multicast group on interface wlp1s0.IPv4 with address 192.168.0.103.
May 08 22:07:08 anjug-vostro-15-3568 avahi-daemon[754]: Interface wlp1s0.IPv4 no longer relevant for mDNS.
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.5312] device (wlp1s0): supplicant interface state: completed -> disconnected
May 08 22:07:08 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186228.5328] device (wlp1s0): state change: disconnected -> unmanaged (reason 'sleeping', sys-iface-state: 'managed')
May 08 22:07:08 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: CTRL-EVENT-SCAN-FAILED ret=-100
May 08 22:07:08 anjug-vostro-15-3568 nm-dispatcher[10784]: run-parts: failed to stat component /etc/network/if-post-down.d/avahi-daemon: No such file or directory
May 08 22:07:08 anjug-vostro-15-3568 wpa_supplicant[784]: nl80211: deinit ifname=p2p-dev-wlp1s0 disabled_11b_rates=0
May 08 22:07:08 anjug-vostro-15-3568 gnome-shell[1764]: cr_parser_new_from_buf: assertion 'a_buf && a_len' failed
May 08 22:07:08 anjug-vostro-15-3568 gnome-shell[1764]: cr_declaration_parse_list_from_buf: assertion 'parser' failed
May 08 22:07:08 anjug-vostro-15-3568 gnome-shell[1764]: cr_parser_new_from_buf: assertion 'a_buf && a_len' failed
May 08 22:07:08 anjug-vostro-15-3568 gnome-shell[1764]: cr_declaration_parse_list_from_buf: assertion 'parser' failed
May 08 22:07:08 anjug-vostro-15-3568 gnome-shell[1764]: An active wireless connection, in infrastructure mode, involves no access point?
May 08 22:07:08 anjug-vostro-15-3568 wpa_supplicant[784]: nl80211: deinit ifname=wlp1s0 disabled_11b_rates=0
May 08 22:07:09 anjug-vostro-15-3568 gnome-shell[1764]: g_dbus_connection_emit_signal: assertion 'G_IS_DBUS_CONNECTION (connection)' failed
May 08 22:07:09 anjug-vostro-15-3568 gnome-shell[1764]: cr_parser_new_from_buf: assertion 'a_buf && a_len' failed
May 08 22:07:09 anjug-vostro-15-3568 gnome-shell[1764]: cr_declaration_parse_list_from_buf: assertion 'parser' failed
May 08 22:07:13 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 997.
May 08 22:07:13 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:13 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:13 anjug-vostro-15-3568 systemd[10795]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:13 anjug-vostro-15-3568 systemd[10795]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:13 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:13 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:14 anjug-vostro-15-3568 dbus-daemon[758]: [system] Activating via systemd: service name='net.reactivated.Fprint' unit='fprintd.service' requested by ':1.82' (uid=1000 pid=1764 comm=""/usr/bin/gnome-shell "" label=""unconfined"")
May 08 22:07:14 anjug-vostro-15-3568 systemd[1]: Starting Fingerprint Authentication Daemon...
May 08 22:07:15 anjug-vostro-15-3568 dbus-daemon[758]: [system] Successfully activated service 'net.reactivated.Fprint'
May 08 22:07:15 anjug-vostro-15-3568 systemd[1]: Started Fingerprint Authentication Daemon.
May 08 22:07:17 anjug-vostro-15-3568 gnome-shell[1764]: ../clutter/clutter/clutter-actor.c:10558: The clutter_actor_set_allocation() function can only be called from within the implementation of the ClutterActor::allocate() virtual function.
May 08 22:07:18 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 998.
May 08 22:07:18 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:18 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:18 anjug-vostro-15-3568 systemd[10807]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:18 anjug-vostro-15-3568 systemd[10807]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:18 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:18 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:18 anjug-vostro-15-3568 systemd[1]: NetworkManager-dispatcher.service: Succeeded.
May 08 22:07:19 anjug-vostro-15-3568 gnome-shell[1764]: Ignored exception from dbus method: Gio.IOErrorEnum: GDBus.Error:org.freedesktop.login1.OperationInProgress: There's already a shutdown or sleep operation in progress
May 08 22:07:23 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 999.
May 08 22:07:23 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:23 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:23 anjug-vostro-15-3568 systemd[10808]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:23 anjug-vostro-15-3568 systemd[10808]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:23 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:23 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:29 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 1000.
May 08 22:07:29 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:29 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:29 anjug-vostro-15-3568 systemd[10809]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:29 anjug-vostro-15-3568 systemd[10809]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:29 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:29 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:34 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 1001.
May 08 22:07:34 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:34 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:34 anjug-vostro-15-3568 systemd[10810]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:34 anjug-vostro-15-3568 systemd[10810]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:34 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:34 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:35 anjug-vostro-15-3568 gdm-password][10802]: gkr-pam: unlocked login keyring
May 08 22:07:36 anjug-vostro-15-3568 gnome-shell[1764]: cr_parser_new_from_buf: assertion 'a_buf && a_len' failed
May 08 22:07:36 anjug-vostro-15-3568 gnome-shell[1764]: cr_declaration_parse_list_from_buf: assertion 'parser' failed
May 08 22:07:36 anjug-vostro-15-3568 dbus-daemon[1528]: [session uid=1000 pid=1528] Activating service name='org.freedesktop.FileManager1' requested by ':1.38' (uid=1000 pid=1764 comm=""/usr/bin/gnome-shell "" label=""unconfined"")
May 08 22:07:36 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186256.0572] agent-manager: agent[b6f72d29c8bf2209,:1.82/org.gnome.Shell.NetworkAgent/1000]: agent registered
May 08 22:07:36 anjug-vostro-15-3568 gnome-shell[1764]: cr_parser_new_from_buf: assertion 'a_buf && a_len' failed
May 08 22:07:36 anjug-vostro-15-3568 gnome-shell[1764]: cr_declaration_parse_list_from_buf: assertion 'parser' failed
May 08 22:07:36 anjug-vostro-15-3568 dbus-daemon[1528]: [session uid=1000 pid=1528] Activating service name='org.gnome.Nautilus' requested by ':1.38' (uid=1000 pid=1764 comm=""/usr/bin/gnome-shell "" label=""unconfined"")
May 08 22:07:36 anjug-vostro-15-3568 gnome-shell[1764]: cr_parser_new_from_buf: assertion 'a_buf && a_len' failed
May 08 22:07:36 anjug-vostro-15-3568 gnome-shell[1764]: cr_declaration_parse_list_from_buf: assertion 'parser' failed
May 08 22:07:36 anjug-vostro-15-3568 dbus-daemon[1528]: [session uid=1000 pid=1528] Successfully activated service 'org.gnome.Nautilus'
May 08 22:07:36 anjug-vostro-15-3568 dbus-daemon[1528]: [session uid=1000 pid=1528] Successfully activated service 'org.freedesktop.FileManager1'
May 08 22:07:36 anjug-vostro-15-3568 org.gnome.Nautilus[10820]: Failed to register: Unable to acquire bus name 'org.gnome.Nautilus'
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: cr_parser_new_from_buf: assertion 'a_buf && a_len' failed
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: cr_declaration_parse_list_from_buf: assertion 'parser' failed
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 37 with keysym 37 (keycode 10).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 31 with keysym 31 (keycode a).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 32 with keysym 32 (keycode b).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 33 with keysym 33 (keycode c).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 38 with keysym 38 (keycode 11).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 34 with keysym 34 (keycode d).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 35 with keysym 35 (keycode e).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 39 with keysym 39 (keycode 12).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: Window manager warning: Overwriting existing binding of keysym 36 with keysym 36 (keycode f).
May 08 22:07:37 anjug-vostro-15-3568 gnome-shell[1764]: JS ERROR: Error getting systemd inhibitor: Gio.IOErrorEnum: GDBus.Error:org.freedesktop.login1.OperationInProgress: The operation inhibition has been requested for is already running
                                                        inhibit/<@resource:///org/gnome/shell/misc/loginManager.js:187:55
May 08 22:07:37 anjug-vostro-15-3568 systemd[1]: Reached target Sleep.
May 08 22:07:37 anjug-vostro-15-3568 systemd[1]: Starting Record successful boot for GRUB...
May 08 22:07:37 anjug-vostro-15-3568 systemd[1]: Starting Suspend...
May 08 22:07:37 anjug-vostro-15-3568 systemd-sleep[10842]: Suspending system...
May 08 22:07:37 anjug-vostro-15-3568 kernel: PM: suspend entry (deep)
May 08 22:07:37 anjug-vostro-15-3568 systemd[1]: grub-common.service: Succeeded.
May 08 22:07:37 anjug-vostro-15-3568 systemd[1]: Finished Record successful boot for GRUB.
May 08 22:07:37 anjug-vostro-15-3568 systemd[1]: Starting GRUB failed boot detection...
May 08 22:07:38 anjug-vostro-15-3568 systemd[1]: grub-initrd-fallback.service: Succeeded.
May 08 22:07:38 anjug-vostro-15-3568 systemd[1]: Finished GRUB failed boot detection.
May 08 22:07:48 anjug-vostro-15-3568 kernel: Filesystems sync: 1.115 seconds
May 08 22:07:48 anjug-vostro-15-3568 kernel: Freezing user space processes ... (elapsed 0.193 seconds) done.
May 08 22:07:48 anjug-vostro-15-3568 kernel: OOM killer disabled.
May 08 22:07:48 anjug-vostro-15-3568 kernel: Freezing remaining freezable tasks ... (elapsed 0.001 seconds) done.
May 08 22:07:48 anjug-vostro-15-3568 kernel: printk: Suspending console(s) (use no_console_suspend to debug)
May 08 22:07:48 anjug-vostro-15-3568 kernel: sd 0:0:0:0: [sda] Synchronizing SCSI cache
May 08 22:07:48 anjug-vostro-15-3568 kernel: sd 0:0:0:0: [sda] Stopping disk
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: EC: interrupt blocked
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: PM: Preparing to enter system sleep state S3
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: EC: event blocked
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: EC: EC stopped
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: PM: Saving platform NVS memory
May 08 22:07:48 anjug-vostro-15-3568 kernel: Disabling non-boot CPUs ...
May 08 22:07:48 anjug-vostro-15-3568 kernel: smpboot: CPU 1 is now offline
May 08 22:07:48 anjug-vostro-15-3568 kernel: smpboot: CPU 2 is now offline
May 08 22:07:48 anjug-vostro-15-3568 kernel: smpboot: CPU 3 is now offline
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: PM: Low-level resume complete
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: EC: EC started
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: PM: Restoring platform NVS memory
May 08 22:07:48 anjug-vostro-15-3568 kernel: Enabling non-boot CPUs ...
May 08 22:07:48 anjug-vostro-15-3568 kernel: x86: Booting SMP configuration:
May 08 22:07:48 anjug-vostro-15-3568 kernel: smpboot: Booting Node 0 Processor 1 APIC 0x2
May 08 22:07:48 anjug-vostro-15-3568 kernel: CPU1 is up
May 08 22:07:48 anjug-vostro-15-3568 kernel: smpboot: Booting Node 0 Processor 2 APIC 0x1
May 08 22:07:48 anjug-vostro-15-3568 kernel: CPU2 is up
May 08 22:07:48 anjug-vostro-15-3568 kernel: smpboot: Booting Node 0 Processor 3 APIC 0x3
May 08 22:07:48 anjug-vostro-15-3568 kernel: CPU3 is up
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: PM: Waking up from system sleep state S3
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: EC: interrupt unblocked
May 08 22:07:48 anjug-vostro-15-3568 kernel: ACPI: EC: event unblocked
May 08 22:07:48 anjug-vostro-15-3568 kernel: sd 0:0:0:0: [sda] Starting disk
May 08 22:07:48 anjug-vostro-15-3568 kernel: i915 0000:00:02.0: [drm] [ENCODER:94:DDI A/PHY A] is disabled/in DSI mode with an ungated DDI clock, gate it
May 08 22:07:48 anjug-vostro-15-3568 kernel: i915 0000:00:02.0: [drm] [ENCODER:102:DDI B/PHY B] is disabled/in DSI mode with an ungated DDI clock, gate it
May 08 22:07:48 anjug-vostro-15-3568 kernel: i915 0000:00:02.0: [drm] [ENCODER:110:DDI C/PHY C] is disabled/in DSI mode with an ungated DDI clock, gate it
May 08 22:07:48 anjug-vostro-15-3568 kernel: usb 1-5: reset high-speed USB device number 2 using xhci_hcd
May 08 22:07:48 anjug-vostro-15-3568 kernel: ata2: SATA link up 1.5 Gbps (SStatus 113 SControl 300)
May 08 22:07:48 anjug-vostro-15-3568 kernel: ata2.00: ACPI cmd f5/00:00:00:00:00:00(SECURITY FREEZE LOCK) filtered out
May 08 22:07:48 anjug-vostro-15-3568 kernel: ata2.00: ACPI cmd b1/c1:00:00:00:00:00(DEVICE CONFIGURATION OVERLAY) filtered out
May 08 22:07:48 anjug-vostro-15-3568 kernel: ata2.00: ACPI cmd f5/00:00:00:00:00:00(SECURITY FREEZE LOCK) filtered out
May 08 22:07:48 anjug-vostro-15-3568 kernel: ata2.00: ACPI cmd b1/c1:00:00:00:00:00(DEVICE CONFIGURATION OVERLAY) filtered out
May 08 22:07:48 anjug-vostro-15-3568 kernel: ata2.00: configured for UDMA/133
May 08 22:07:48 anjug-vostro-15-3568 kernel: usb 1-3: reset full-speed USB device number 8 using xhci_hcd
May 08 22:07:48 anjug-vostro-15-3568 kernel: usb 1-8: reset full-speed USB device number 4 using xhci_hcd
May 08 22:07:48 anjug-vostro-15-3568 kernel: usb 1-1: reset low-speed USB device number 7 using xhci_hcd
May 08 22:07:48 anjug-vostro-15-3568 kernel: usb 1-6: reset high-speed USB device number 3 using xhci_hcd
May 08 22:07:48 anjug-vostro-15-3568 kernel: OOM killer enabled.
May 08 22:07:48 anjug-vostro-15-3568 kernel: Restarting tasks ... done.
May 08 22:07:48 anjug-vostro-15-3568 bluetoothd[755]: Endpoint unregistered: sender=:1.76 path=/MediaEndpoint/A2DPSink/sbc
May 08 22:07:48 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 1002.
May 08 22:07:48 anjug-vostro-15-3568 bluetoothd[755]: Endpoint unregistered: sender=:1.76 path=/MediaEndpoint/A2DPSource/sbc
May 08 22:07:48 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:49 anjug-vostro-15-3568 kernel: PM: suspend exit
May 08 22:07:49 anjug-vostro-15-3568 kernel: Bluetooth: hci0: using rampatch file: qca/rampatch_usb_00000302.bin
May 08 22:07:49 anjug-vostro-15-3568 kernel: Bluetooth: hci0: QCA: patch rome 0x302 build 0x3e8, firmware rome 0x302 build 0x111
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1: SATA link up 6.0 Gbps (SStatus 133 SControl 300)
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1.00: ACPI cmd f5/00:00:00:00:00:00(SECURITY FREEZE LOCK) filtered out
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1.00: ACPI cmd b1/c1:00:00:00:00:00(DEVICE CONFIGURATION OVERLAY) filtered out
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1.00: ACPI cmd 00/00:00:00:00:00:a0(NOP) rejected by device (Stat=0x51 Err=0x04)
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1.00: ACPI cmd f5/00:00:00:00:00:00(SECURITY FREEZE LOCK) filtered out
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1.00: ACPI cmd b1/c1:00:00:00:00:00(DEVICE CONFIGURATION OVERLAY) filtered out
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1.00: ACPI cmd 00/00:00:00:00:00:a0(NOP) rejected by device (Stat=0x51 Err=0x04)
May 08 22:07:49 anjug-vostro-15-3568 kernel: ata1.00: configured for UDMA/100
May 08 22:07:48 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:48 anjug-vostro-15-3568 systemd[10871]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:48 anjug-vostro-15-3568 systemd[10871]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:48 anjug-vostro-15-3568 systemd[1]: Starting Load/Save RF Kill Switch Status...
May 08 22:07:48 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:48 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:48 anjug-vostro-15-3568 systemd-sleep[10842]: System resumed.
May 08 22:07:48 anjug-vostro-15-3568 systemd[1]: Started Load/Save RF Kill Switch Status.
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-6
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-3
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-8
May 08 22:07:49 anjug-vostro-15-3568 systemd[1516]: Stopped target Bluetooth.
May 08 22:07:49 anjug-vostro-15-3568 systemd[1]: Stopped target Bluetooth.
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-6
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-3
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-1
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-8
May 08 22:07:49 anjug-vostro-15-3568 upowerd[1250]: treating change event as add on /sys/devices/pci0000:00/0000:00:14.0/usb1/1-1
May 08 22:07:49 anjug-vostro-15-3568 systemd[1516]: Reached target Bluetooth.
May 08 22:07:49 anjug-vostro-15-3568 systemd[1]: Reached target Bluetooth.
May 08 22:07:49 anjug-vostro-15-3568 systemd-sleep[10908]: /dev/sda:
May 08 22:07:49 anjug-vostro-15-3568 systemd-sleep[10908]:  setting Advanced Power Management level to 0xfe (254)
May 08 22:07:49 anjug-vostro-15-3568 systemd-sleep[10908]:  APM_level        = 254
May 08 22:07:49 anjug-vostro-15-3568 kernel: Bluetooth: hci0: using NVM file: qca/nvm_usb_00000302.bin
May 08 22:07:49 anjug-vostro-15-3568 systemd[1]: systemd-suspend.service: Succeeded.
May 08 22:07:49 anjug-vostro-15-3568 systemd[1]: Finished Suspend.
May 08 22:07:49 anjug-vostro-15-3568 systemd[1]: Stopped target Sleep.
May 08 22:07:49 anjug-vostro-15-3568 systemd[1]: Reached target Suspend.
May 08 22:07:49 anjug-vostro-15-3568 systemd[1]: Stopped target Suspend.
May 08 22:07:49 anjug-vostro-15-3568 systemd-logind[780]: Operation 'sleep' finished.
May 08 22:07:49 anjug-vostro-15-3568 ModemManager[933]: <info>  [sleep-monitor] system is resuming
May 08 22:07:49 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186269.9593] manager: sleep: wake requested (sleeping: yes  enabled: yes)
May 08 22:07:49 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186269.9597] device (enp2s0): state change: unmanaged -> unavailable (reason 'managed', sys-iface-state: 'managed')
May 08 22:07:49 anjug-vostro-15-3568 kernel: Generic FE-GE Realtek PHY r8169-0-200:00: attached PHY driver (mii_bus:phy_addr=r8169-0-200:00, irq=MAC)
May 08 22:07:50 anjug-vostro-15-3568 kernel: r8169 0000:02:00.0 enp2s0: Link is Down
May 08 22:07:50 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186270.1733] device (wlp1s0): state change: unmanaged -> unavailable (reason 'managed', sys-iface-state: 'managed')
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Multiple Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0:   device [8086:9d14] error status/mask=00000081/00002000
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0:    [ 0] RxErr                 
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0:    [ 7] BadDLLP               
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Multiple Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: can't find device of ID00e0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Multiple Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0:   device [8086:9d14] error status/mask=00000041/00002000
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0:    [ 0] RxErr                 
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0:    [ 6] BadTLP                
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Multiple Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: can't find device of ID00e0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: can't find device of ID00e0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Multiple Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: can't find device of ID00e0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Multiple Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: can't find device of ID00e0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: Multiple Corrected error received: 0000:00:1c.0
May 08 22:07:50 anjug-vostro-15-3568 kernel: pcieport 0000:00:1c.0: AER: can't find device of ID00e0
May 08 22:07:50 anjug-vostro-15-3568 bluetoothd[755]: Failed to set mode: Blocked through rfkill (0x12)
May 08 22:07:50 anjug-vostro-15-3568 bluetoothd[755]: Endpoint registered: sender=:1.76 path=/MediaEndpoint/A2DPSink/sbc
May 08 22:07:50 anjug-vostro-15-3568 bluetoothd[755]: Endpoint registered: sender=:1.76 path=/MediaEndpoint/A2DPSource/sbc
May 08 22:07:50 anjug-vostro-15-3568 bluetoothd[755]: Failed to set mode: Blocked through rfkill (0x12)
May 08 22:07:50 anjug-vostro-15-3568 gnome-shell[1764]: Error setting property 'Powered' on interface org.bluez.Adapter1: GDBus.Error:org.bluez.Error.Blocked: Blocked through rfkill (g-io-error-quark, 36)
May 08 22:07:50 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186270.4582] device (p2p-dev-wlp1s0): state change: unmanaged -> unavailable (reason 'managed', sys-iface-state: 'managed')
May 08 22:07:50 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186270.4609] manager: NetworkManager state is now DISCONNECTED
May 08 22:07:50 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186270.5785] sup-iface[0x5575c566bbd0,wlp1s0]: supports 5 scan SSIDs
May 08 22:07:50 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186270.5809] device (wlp1s0): supplicant interface state: starting -> ready
May 08 22:07:50 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186270.5811] device (p2p-dev-wlp1s0): state change: unavailable -> disconnected (reason 'supplicant-available', sys-iface-state: 'managed')
May 08 22:07:50 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186270.5824] device (wlp1s0): state change: unavailable -> disconnected (reason 'supplicant-available', sys-iface-state: 'managed')
May 08 22:07:52 anjug-vostro-15-3568 systemd[1]: fprintd.service: Succeeded.
May 08 22:07:52 anjug-vostro-15-3568 ModemManager[933]: <info>  [base-manager] couldn't check support for device '/sys/devices/pci0000:00/0000:00:1c.0/0000:01:00.0': not supported by any plugin
May 08 22:07:52 anjug-vostro-15-3568 ModemManager[933]: <info>  [base-manager] couldn't check support for device '/sys/devices/pci0000:00/0000:00:1c.5/0000:02:00.0': not supported by any plugin
May 08 22:07:54 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 1003.
May 08 22:07:54 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:54 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:54 anjug-vostro-15-3568 systemd[10965]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:54 anjug-vostro-15-3568 systemd[10965]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:54 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:54 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:07:54 anjug-vostro-15-3568 systemd[1]: systemd-rfkill.service: Succeeded.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4661] policy: auto-activating connection 'Tenda_7E61A8 1' (4d8ea307-be8f-44f6-9f35-f6c9418709ed)
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4679] device (wlp1s0): Activation: starting connection 'Tenda_7E61A8 1' (4d8ea307-be8f-44f6-9f35-f6c9418709ed)
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4683] device (wlp1s0): state change: disconnected -> prepare (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4699] manager: NetworkManager state is now CONNECTING
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4715] device (wlp1s0): state change: prepare -> config (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4738] device (wlp1s0): Activation: (wifi) access point 'Tenda_7E61A8 1' has security, but secrets are required.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4739] device (wlp1s0): state change: config -> need-auth (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4850] device (wlp1s0): state change: need-auth -> prepare (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4868] device (wlp1s0): state change: prepare -> config (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4881] device (wlp1s0): Activation: (wifi) connection 'Tenda_7E61A8 1' has security, and secrets exist.  No new secrets needed.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4882] Config: added 'ssid' value 'Tenda_7E61A8'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4883] Config: added 'scan_ssid' value '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4884] Config: added 'bgscan' value 'simple:30:-70:86400'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4884] Config: added 'key_mgmt' value 'WPA-PSK WPA-PSK-SHA256 FT-PSK'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4885] Config: added 'auth_alg' value 'OPEN'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.4885] Config: added 'psk' value '<hidden>'
May 08 22:07:55 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: SME: Trying to authenticate with 50:2b:73:7e:61:a8 (SSID='Tenda_7E61A8' freq=2437 MHz)
May 08 22:07:55 anjug-vostro-15-3568 kernel: wlp1s0: authenticate with 50:2b:73:7e:61:a8
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.5822] device (wlp1s0): supplicant interface state: ready -> authenticating
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.5823] device (p2p-dev-wlp1s0): supplicant management interface state: ready -> authenticating
May 08 22:07:55 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: Trying to associate with 50:2b:73:7e:61:a8 (SSID='Tenda_7E61A8' freq=2437 MHz)
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.5843] device (wlp1s0): supplicant interface state: authenticating -> associating
May 08 22:07:55 anjug-vostro-15-3568 kernel: wlp1s0: send auth to 50:2b:73:7e:61:a8 (try 1/3)
May 08 22:07:55 anjug-vostro-15-3568 kernel: wlp1s0: authenticated
May 08 22:07:55 anjug-vostro-15-3568 kernel: wlp1s0: associate with 50:2b:73:7e:61:a8 (try 1/3)
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.5844] device (p2p-dev-wlp1s0): supplicant management interface state: authenticating -> associating
May 08 22:07:55 anjug-vostro-15-3568 kernel: wlp1s0: RX AssocResp from 50:2b:73:7e:61:a8 (capab=0x411 status=0 aid=1)
May 08 22:07:55 anjug-vostro-15-3568 kernel: wlp1s0: associated
May 08 22:07:55 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: Associated with 50:2b:73:7e:61:a8
May 08 22:07:55 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: CTRL-EVENT-SUBNET-STATUS-UPDATE status=0
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.6112] device (wlp1s0): supplicant interface state: associating -> 4-way handshake
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.6114] device (p2p-dev-wlp1s0): supplicant management interface state: associating -> 4-way handshake
May 08 22:07:55 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: WPA: Key negotiation completed with 50:2b:73:7e:61:a8 [PTK=CCMP GTK=CCMP]
May 08 22:07:55 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: CTRL-EVENT-CONNECTED - Connection to 50:2b:73:7e:61:a8 completed [id=0 id_str=]
May 08 22:07:55 anjug-vostro-15-3568 kernel: IPv6: ADDRCONF(NETDEV_CHANGE): wlp1s0: link becomes ready
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.6474] device (wlp1s0): supplicant interface state: 4-way handshake -> completed
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.6475] device (wlp1s0): Activation: (wifi) Stage 2 of 5 (Device Configure) successful. Connected to wireless network ""Tenda_7E61A8""
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.6476] device (p2p-dev-wlp1s0): supplicant management interface state: 4-way handshake -> completed
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.6485] device (wlp1s0): state change: config -> ip-config (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.6501] dhcp4 (wlp1s0): activation: beginning transaction (timeout in 45 seconds)
May 08 22:07:55 anjug-vostro-15-3568 avahi-daemon[754]: Joining mDNS multicast group on interface wlp1s0.IPv6 with address fe80::3afe:fb21:70f1:4f2d.
May 08 22:07:55 anjug-vostro-15-3568 avahi-daemon[754]: New relevant interface wlp1s0.IPv6 for mDNS.
May 08 22:07:55 anjug-vostro-15-3568 avahi-daemon[754]: Registering new address record for fe80::3afe:fb21:70f1:4f2d on wlp1s0.*.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7287] dhcp4 (wlp1s0): option dhcp_lease_time      => '86400'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7288] dhcp4 (wlp1s0): option domain_name_servers  => '192.168.0.1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7289] dhcp4 (wlp1s0): option expiry               => '1715272675'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7289] dhcp4 (wlp1s0): option ip_address           => '192.168.0.103'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7289] dhcp4 (wlp1s0): option requested_broadcast_address => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7290] dhcp4 (wlp1s0): option requested_domain_name => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7290] dhcp4 (wlp1s0): option requested_domain_name_servers => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7290] dhcp4 (wlp1s0): option requested_domain_search => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7291] dhcp4 (wlp1s0): option requested_host_name  => '1'
May 08 22:07:55 anjug-vostro-15-3568 avahi-daemon[754]: Joining mDNS multicast group on interface wlp1s0.IPv4 with address 192.168.0.103.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7291] dhcp4 (wlp1s0): option requested_interface_mtu => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7291] dhcp4 (wlp1s0): option requested_ms_classless_static_routes => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7292] dhcp4 (wlp1s0): option requested_nis_domain => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7292] dhcp4 (wlp1s0): option requested_nis_servers => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7293] dhcp4 (wlp1s0): option requested_ntp_servers => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7293] dhcp4 (wlp1s0): option requested_rfc3442_classless_static_routes => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7294] dhcp4 (wlp1s0): option requested_root_path  => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7294] dhcp4 (wlp1s0): option requested_routers    => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7294] dhcp4 (wlp1s0): option requested_static_routes => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7295] dhcp4 (wlp1s0): option requested_subnet_mask => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7295] dhcp4 (wlp1s0): option requested_time_offset => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7295] dhcp4 (wlp1s0): option requested_wpad       => '1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7296] dhcp4 (wlp1s0): option routers              => '192.168.0.1'
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7296] dhcp4 (wlp1s0): option subnet_mask          => '255.255.255.0'
May 08 22:07:55 anjug-vostro-15-3568 avahi-daemon[754]: New relevant interface wlp1s0.IPv4 for mDNS.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7296] dhcp4 (wlp1s0): state changed unknown -> bound
May 08 22:07:55 anjug-vostro-15-3568 avahi-daemon[754]: Registering new address record for 192.168.0.103 on wlp1s0.IPv4.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.7457] device (wlp1s0): state change: ip-config -> ip-check (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 whoopsie[1066]: [22:07:55] Cannot reach: https://daisy.ubuntu.com
May 08 22:07:55 anjug-vostro-15-3568 dbus-daemon[758]: [system] Activating via systemd: service name='org.freedesktop.nm_dispatcher' unit='dbus-org.freedesktop.nm-dispatcher.service' requested by ':1.12' (uid=0 pid=759 comm=""/usr/sbin/NetworkManager --no-daemon "" label=""unconfined"")
May 08 22:07:55 anjug-vostro-15-3568 systemd[1]: Starting Network Manager Script Dispatcher Service...
May 08 22:07:55 anjug-vostro-15-3568 dbus-daemon[758]: [system] Successfully activated service 'org.freedesktop.nm_dispatcher'
May 08 22:07:55 anjug-vostro-15-3568 systemd[1]: Started Network Manager Script Dispatcher Service.
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.8085] device (wlp1s0): state change: ip-check -> secondaries (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.8098] device (wlp1s0): state change: secondaries -> activated (reason 'none', sys-iface-state: 'managed')
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.8119] manager: NetworkManager state is now CONNECTED_LOCAL
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.8187] manager: NetworkManager state is now CONNECTED_SITE
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.8193] policy: set 'Tenda_7E61A8 1' (wlp1s0) as default for IPv4 routing and DNS
May 08 22:07:55 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186275.8233] device (wlp1s0): Activation: successful, device activated.
May 08 22:07:55 anjug-vostro-15-3568 wpa_supplicant[784]: wlp1s0: CTRL-EVENT-SIGNAL-CHANGE above=1 signal=-38 noise=-115 txrate=1000
May 08 22:07:56 anjug-vostro-15-3568 NetworkManager[759]: <info>  [1715186276.2960] manager: NetworkManager state is now CONNECTED_GLOBAL
May 08 22:07:56 anjug-vostro-15-3568 whoopsie[1066]: [22:07:56] The default IPv4 route is: /org/freedesktop/NetworkManager/ActiveConnection/4
May 08 22:07:56 anjug-vostro-15-3568 whoopsie[1066]: [22:07:56] Not a paid data plan: /org/freedesktop/NetworkManager/ActiveConnection/4
May 08 22:07:56 anjug-vostro-15-3568 whoopsie[1066]: [22:07:56] Found usable connection: /org/freedesktop/NetworkManager/ActiveConnection/4
May 08 22:07:58 anjug-vostro-15-3568 whoopsie[1066]: [22:07:58] online
May 08 22:07:59 anjug-vostro-15-3568 systemd-resolved[707]: Using degraded feature set (UDP) for DNS server 192.168.0.1.
May 08 22:07:59 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 1004.
May 08 22:07:59 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:07:59 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:07:59 anjug-vostro-15-3568 systemd[11020]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:07:59 anjug-vostro-15-3568 systemd[11020]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:07:59 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:07:59 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:08:04 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 1005.
May 08 22:08:04 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:08:04 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:08:04 anjug-vostro-15-3568 systemd[11024]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:08:04 anjug-vostro-15-3568 systemd[11024]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:08:04 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:08:04 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'.
May 08 22:08:06 anjug-vostro-15-3568 sudo[11025]:    anjug : TTY=pts/0 ; PWD=/home/anjug ; USER=root ; COMMAND=/usr/bin/journalctl --since=-2min --no-pager
May 08 22:08:06 anjug-vostro-15-3568 sudo[11025]: pam_unix(sudo:session): session opened for user root by (uid=0)
May 08 22:08:06 anjug-vostro-15-3568 systemd[1]: NetworkManager-dispatcher.service: Succeeded.
May 08 22:08:09 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Scheduled restart job, restart counter is at 1006.
May 08 22:08:09 anjug-vostro-15-3568 systemd[1]: Stopped ExpressVPN Daemon.
May 08 22:08:09 anjug-vostro-15-3568 systemd[1]: Started ExpressVPN Daemon.
May 08 22:08:09 anjug-vostro-15-3568 systemd[11027]: expressvpn.service: Failed to execute command: No such file or directory
May 08 22:08:09 anjug-vostro-15-3568 systemd[11027]: expressvpn.service: Failed at step EXEC spawning /usr/sbin/expressvpnd: No such file or directory
May 08 22:08:09 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Main process exited, code=exited, status=203/EXEC
May 08 22:08:09 anjug-vostro-15-3568 systemd[1]: expressvpn.service: Failed with result 'exit-code'."
b8cFNbtZ,√óÕú√óDIG PANDIT ONLINE ‰∫ó,DIGPANDIT,Lua,Wednesday 8th of May 2024 11:41:33 AM CDT,"--if gg.getFile():match('[*/]+$') == '√óÕú√óDIG PANDIT ONLINE ‰∫ó.lua' then
-----else print(' \n\n \n \n. \n √óÕú√ó\n.                       .‚ùåüÜÇüÖ≤üÜÅüÖ∏üÖøüÜÉ üÜÅüÖ¥üÖΩüÖ∞üÖºüÖ¥ üÖ≥üÖ¥üÜÉüÖ¥üÖ≤üÜÉüÖ¥üÖ≥‚ùå\n\n')
---return 

if gg.getTargetPackage() == ""com.MadOut.BIG""
  then 
  gg.toast(""‚úÖ done"")
  else print(""use in madout2 only "") os.exit()
  end
  
gg.setVisible (false)
L={'‚ñ£', '‚ñ°', '‚ñ°', '‚ñ°', '‚ñ°'} -- LOADING TABLE BY DIG
LD = 0
for i=0, 6, 1 do
	if gg.isVisible(true) and i ~= 6 then
		gg.setVisible(false)
	end
	gg.sleep(700)
	gg.toast('‚û°Ô∏è '..L[1]..L[2]..L[3]..L[4]..L[5]..' '..LD..'/120%')
	LD = LD + 20
	table.remove(L)
	table.insert(L, 2, ""‚ñ£"")
	if i == 6 then

		gg.sleep(100)
		gg.toast('WEL COME ')
	end
end

golo = os.date(""%d"")

----------==============******=====
X= os.date(""%H:%M:%S %p ‚åöÔ∏è \n%A, %d %B %Y\n"")


 
local Menu = gg.prompt({""üí°Your name ""},nil,{""text""})
	if not Menu then return end
 

if Menu[1] then 

gg.alert(''..X..'\n\n..ùê°ùêûùê•ùê•ùê® üëâ'..Menu[1]..'üëà wrong password \nplease ùê¨ùêÆùêõùê¨ùêúùê´ùê¢ùêõùêû ùê¶ùê≤ ùêúùê°ùêöùêßùêßùêöùê• \n DIGpandit gaming ùêöùêßùêù ùê¨ùêÆùê©ùê©ùê®ùê´ùê≠ me\n for best hacks. ‚Äçüíª') 
 else 

		gg.alert(''..X..'\n\n..ùê°ùêûùê•ùê•ùê® üëâ'..Menu[1]..'üëà please ùê¨ùêÆùêõùê¨ùêúùê´ùê¢ùêõùêû ùê¶ùê≤ ùêúùê°ùêöùêßùêßùêöùê• \n DIGpandit gaming ùêöùêßùêù ùê¨ùêÆùê©ùê©ùê®ùê´ùê≠ me\n for best hacks')
 end 


while(nil)do;local i={}if(i.i)then;i.i=(i.i(i))end;end

if gg.getTargetPackage() == ""com.MadOut.BIG""
  then 
  gg.toast(""wait"")
  else print(""use in madout2 only "") os.exit()
  end
  



gg.alert('\n‚ñà‚ïë‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ  ‚ñÑ\n‚ñà‚ïë‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚îÄ‚ñÑ‚îÄ‚ñà‚ñÑ‚ñÑ‚ñà‚ïë‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÑ‚îÄ‚ñà  ‚ñà\n‚ñà‚ïë‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÑ‚îÄ‚îÄ‚ñà‚ïë‚ñà‚ïë‚ñà‚ïë‚ñÑ‚ñÑ‚îÄ‚îÄ‚ñÑ ‚ñà‚ïë‚ñà ‚ñà‚ñÑ‚ñà\n‚ñà‚ïë‚îÄ‚îÄ‚ñà‚ïë‚îÄ‚ñà‚ïë‚ñà‚ïë‚ñà‚ïë‚îÄ‚ñÄ ‚ñà‚ïë‚îÄ‚ñà‚ïë‚ñà‚ïë‚ñà‚ïë‚Äã\n‚ñà‚ïë‚ñÑ‚ïë‚ñà‚ïë‚îÄ‚ñà‚ïë‚îÄ‚ñÄ‚îÄ‚îÄ ‚îÄ‚îÄ‚ñà‚ïë‚ñÑ‚ñà‚ïë‚îÄ‚ñÄ‚ñÄ\n‚ñÄ‚ñÄ‚ñÄ‚îÄ‚îÄ‚ñÄ‚ñÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚îÄ‚ñÄ‚îÄ‚ñà‚ïë\n‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÑ‚îÄ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÑ‚ñÄ‚ñÄ‚ñÑ ‚ñÄ‚ñÑ‚ñÑ‚ñÄ\n‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÄ\n‚îÄ‚îÄ‚îÄ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ‚ñÄ‚ñÑ‚ñÄ\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÄ‚ñà‚ñÄ               ‚ûÆ‚îÉ'..Menu[1]..'‚îÉ‚ù§Ô∏è‚Äçüî•')


print(""üëëüíª‚úàS·¥Ñ Ä…™·¥ò·¥õ ùê¶ùêöùê§ùêûùêù ùêÅùê≤‚û£ ùêÉùêàùêÜ ùê©ùêöùêßùêùùê¢ùê≠üíªüëë"")
print(""üëë üíªùêüùê´ùê¢ùêûùêßùêù‚û£üÖÅüÑ∫ üÑ≥üÑ¥üÖÖüÑ∏üÑªüíªüëë"")
print(""üëëüíª ùêüùê´ùê¢ùêûùêßùêù‚û¢üÑ∞üÖÖüÑ∏ üÖÇüÑ∏üÑΩüÑ∂üÑ∑üíªüëë"")
print(""üëëüíªüÖÉüÑ∑üÑ∞üÑΩüÑ∫üÖÇ üÑµüÑæüÖÅ üÖÇüÖÑüÑøüÑøüÑæüÖÅüÖÉ üíªüëë"")
print(""üëëüíªùê¶ùêûùêûùê≠ ùêüùê®ùê´ ùê¨ùêúùê´ùê¢ùê©ùê≠ùêÉùêÑùêíùêàùêÜùêçùêàùêçùêÜ üíªüëë Ô∏è"")
print(""üëëüíªÔ∏è üÖÖüÑ∏üÑø üíªüëë"")
print(""üëëüíªüÖÇüÑ∞üÑøüÑæüÖÅüÖÉ üÑºüÑ¥ üÑæüÑΩ üÖàüÑæüÖÑüÖÉüÖÑüÑ±üÑ¥‚Äçüíª"")
print('üëëüíªBYE BYE '..Menu[1]..'üíªüëë')
print('üëëüíªBYE BYE '..Menu[1]..'üíªüëë')

--íâ≠ íåê




DiGPandiT= 1
on = ""[‚ùå]""
off = ""[‚úî]""
--------1--------
m16 = on


-----------------------------------------------------------------------------------------------------------------------------------------DIGpandiT-------


function HOME()
       pers  = gg.multiChoice({
          ""‚îÉGUN MENU‚úà  ‚îÉ""..m16, 
          ""üéÉ‚ÄîÕûÕüÕûÕüñ£òüÑ¥üÖáüÑ∏üÖÉ‚ÄîÕûÕüÕûÕüñ£òüéÉ ""
  }, nil, ' '..X..'\n ùê°ùêûùê•ùê•ùê®üëâ'..Menu[1]..'üëà\n ùê¢ùê≠ùê¨ üÑºüÑ∞üÑ∏üÑΩ üÑºüÑ¥üÑΩüÖÑ')
if pers == nil then else 
if pers[1] == true then 
if m16 == on then
  m161(on)
  m16 = off
 else
  m162(off)
  m16 = on
 end
 end
 

if pers[6] == true then
EXIT() 
end
end
PANDIT = -1
end


function EXIT()
gg[""skipRestoreState""]()
 
      gg[""setVisible""](true)
 
      gg.clearResults()
 
      gg.clearList()
 
      os[""exit""]()
 

end----------------------------------------------------------------------------------------------------------------
--------------------------------

while true do
  if gg.isVisible(true) then
    PANDIT = 1
    gg.setVisible(false)
  end
  gg.clearResults()
  if PANDIT == 1 then
    HOME()
 end
end"
vb7CXsxy,to je nejlepsi minimax good s T,max2201111,Python,Wednesday 8th of May 2024 11:41:24 AM CDT,"import chess
import time

def ten_moves_rule(board):
    """"""Custom rule to evaluate a draw condition based on the last ten moves, considering no captures or pawn moves.""""""
    history = list(board.move_stack)
    if len(history) < 10:
        return False

    for move in history[-10:]:
        if board.is_capture(move):
            return False
        if board.piece_type_at(move.from_square) == chess.PAWN:
            return False
    return True

def evaluate_board(board, depth):
    """"""Evaluate the board state for minimax decision-making.""""""
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 1
    elif board.is_insufficient_material():
        return 2
    elif ten_moves_rule(board):
        return 3
    return 4  # Default heuristic if none of the above conditions are met

# def minimax(board, depth, alpha, beta, maximizing_player, depth2, printed_depths, position_count, memo, start_time, last_print_time,T):
#     current_time = time.time()
#     if current_time - last_print_time[0] >= 1:
#         elapsed_hours, remainder = divmod(current_time - start_time, 3600)
#         elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
#         print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
#         last_print_time[0] = current_time

#     position_count[0] += 1
#     if position_count[0] % 1000000 == 0:
#         print(f""\nProzkoumano {position_count[0]} pozic."")

#     key = (board.fen(), maximizing_player, depth, alpha, beta)
#     if key in memo:
#         return memo[key]

#     if depth == 0 or board.is_game_over() or T:
#         eval = evaluate_board(board, depth2)
#         memo[key] = ([], eval)
#         T = True
#         return [], eval

#     best_eval = float('-inf') if maximizing_player else float('inf')
#     best_sequence = []

#     for move in board.legal_moves:
#         move_san = board.san(move)
#         board.push(move)
#         sequence, eval = minimax(board, depth - 1, alpha, beta, not maximizing_player, depth2 + 1, printed_depths, position_count, memo, start_time, last_print_time, T)
#         board.pop()
        
#         if (maximizing_player and eval > best_eval) or (not maximizing_player and eval < best_eval):
#             best_eval = eval
#             best_sequence = [(move, move_san)] + sequence

#         if maximizing_player:
#             alpha = max(alpha, eval)
#         else:
#             beta = min(beta, eval)

#         if beta <= alpha:
#             break

#     memo[key] = (best_sequence, best_eval)
#     if depth2 not in printed_depths:
#         printed_depths.add(depth2)
#         print(f""\nHloubka {depth2} prozkoum√°na, ƒças: {time.time() - start_time:.2f}s"")
#     return best_sequence, best_eval

# def minimax(board, depth, alpha, beta, maximizing_player, depth2, printed_depths, position_count, memo, start_time, last_print_time, T):
#     current_time = time.time()
#     if current_time - last_print_time[0] >= 1:
#         elapsed_hours, remainder = divmod(current_time - start_time, 3600)
#         elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
#         print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
#         last_print_time[0] = current_time

#     position_count[0] += 1
#     if position_count[0] % 1000000 == 0:
#         print(f""\nProzkoumano {position_count[0]} pozic."")

#     key = (board.fen(), maximizing_player, depth, alpha, beta)
#     if key in memo:
#         return memo[key][0], memo[key][1], T

#     if depth == 0 or board.is_game_over():
#         eval = evaluate_board(board, depth2)
#         memo[key] = ([], eval)
#         if abs(eval) == 1000 - depth2:  # Specificky kontroluje, zda je hodnocen√≠ rovno 1000 nebo -1000 s p≈ôihl√©dnut√≠m k hloubce
#             return [], eval, True
#         return [], eval, T

#     best_eval = float('-inf') if maximizing_player else float('inf')
#     best_sequence = []

#     for move in board.legal_moves:
#         board.push(move)
#         sequence, eval, T = minimax(board, depth - 1, alpha, beta, not maximizing_player, depth2 + 1, printed_depths, position_count, memo, start_time, last_print_time, T)
#         board.pop()

#         if T:  # Pokud bylo T nastaveno na True v nƒõjak√© z rekurz√≠, p≈ôedƒçasnƒõ ukonƒçit v≈°echny dal≈°√≠
#             return [], eval, True

#         if (maximizing_player and eval > best_eval) or (not maximizing_player and eval < best_eval):
#             best_eval = eval
#             best_sequence = [(move, board.san(move))] + sequence

#         if maximizing_player:
#             alpha = max(alpha, eval)
#         else:
#             beta = min(beta, eval)

#         if beta <= alpha:
#             break

#     memo[key] = (best_sequence, best_eval)
#     if depth2 not in printed_depths:
#         printed_depths.add(depth2)
#         print(f""\nHloubka {depth2} prozkoum√°na, ƒças: {time.time() - start_time:.2f}s"")
#     return best_sequence, best_eval, T

# def minimax(board, depth, alpha, beta, maximizing_player, depth2, printed_depths, position_count, memo, start_time, last_print_time, T):
#     current_time = time.time()
#     if current_time - last_print_time[0] >= 1:
#         elapsed_hours, remainder = divmod(current_time - start_time, 3600)
#         elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
#         print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
#         last_print_time[0] = current_time

#     position_count[0] += 1
#     if position_count[0] % 1000000 == 0:
#         print(f""\nProzkoumano {position_count[0]} pozic."")

#     key = (board.fen(), maximizing_player, depth, alpha, beta)
#     if key in memo:
#         return memo[key][0], memo[key][1], T

#     if depth == 0 or board.is_game_over():
#         eval = evaluate_board(board, depth2)
#         memo[key] = ([], eval)
#         return [], eval, T

#     best_eval = float('-inf') if maximizing_player else float('inf')
#     best_sequence = []

#     for move in board.legal_moves:
#         board.push(move)
#         sequence, eval, T = minimax(board, depth - 1, alpha, beta, not maximizing_player, depth2 + 1, printed_depths, position_count, memo, start_time, last_print_time, T)
#         board.pop()

#         if (maximizing_player and eval > best_eval) or (not maximizing_player and eval < best_eval):
#             best_eval = eval
#             best_sequence = [(move, board.san(move))] + sequence  # Ujistƒõte se, ≈æe sekvence je spr√°vnƒõ aktualizov√°na

#         if maximizing_player:
#             alpha = max(alpha, eval)
#         else:
#             beta = min(beta, eval)

#         if beta <= alpha:
#             break

#     memo[key] = (best_sequence, best_eval)
#     if depth2 not in printed_depths:
#         printed_depths.add(depth2)
#         print(f""\nHloubka {depth2} prozkoum√°na, ƒças: {time.time() - start_time:.2f}s"")
#     return best_sequence, best_eval, T

def minimax(board, depth, alpha, beta, maximizing_player, depth2, printed_depths, position_count, memo, start_time, last_print_time, T):
    current_time = time.time()
    if current_time - last_print_time[0] >= 1:
        elapsed_hours, remainder = divmod(current_time - start_time, 3600)
        elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
        print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
        last_print_time[0] = current_time

    position_count[0] += 1
    if position_count[0] % 1000000 == 0:
        print(f""\nProzkoumano {position_count[0]} pozic."")

    key = (board.fen(), maximizing_player, depth, alpha, beta)
    if key in memo:
        return memo[key][0], memo[key][1], T

    if depth == 0 or board.is_game_over():
        eval = evaluate_board(board, depth2)
        memo[key] = ([], eval)
        T = T or abs(eval) >= 1000  # Nastavit T na True, pokud dos√°hneme kritick√© eval hodnoty
        return [], eval, T

    best_eval = float('-inf') if maximizing_player else float('inf')
    best_sequence = []

    for move in board.legal_moves:
        board.push(move)
        sequence, eval, returned_T = minimax(board, depth - 1, alpha, beta, not maximizing_player, depth2 + 1, printed_depths, position_count, memo, start_time, last_print_time, T)
        board.pop()
        
        # Nastaven√≠ T na True, pokud nƒõkter√° z rekurz√≠ vr√°t√≠ True
        if returned_T:
            T = True

        if (maximizing_player and eval > best_eval) or (not maximizing_player and eval < best_eval):
            best_eval = eval
            best_sequence = [(move, board.san(move))] + sequence

        # P≈ôedƒçasn√© ukonƒçen√≠ prohled√°v√°n√≠, pokud T je True
        if T:
            memo[key] = (best_sequence, best_eval)
            return best_sequence, best_eval, T

        if maximizing_player:
            alpha = max(alpha, eval)
        else:
            beta = min(beta, eval)

        if beta <= alpha:
            break

    memo[key] = (best_sequence, best_eval)
    if depth2 not in printed_depths:
        printed_depths.add(depth2)
        print(f""\nHloubka {depth2} prozkoum√°na, ƒças: {time.time() - start_time:.2f}s"")
    return best_sequence, best_eval, T


start_time = time.time()
position_count = [0]
memo = {}
last_print_time = [start_time]
printed_depths = set()
start_fen = ""7k/8/3Q4/5K2/8/8/8/8 w - - 0 1""

#start_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""


board = chess.Board(start_fen)

print(""Poƒç√°teƒçn√≠ ≈°achovnice:"")
print(board)
print(""Poƒç√°teƒçn√≠ FEN:"", board.fen(), ""\n"")

sequence, final_score, T = minimax(board, 19, float('-inf'), float('inf'), True, 0, printed_depths, position_count, memo, start_time, last_print_time,T=False)
print(""\n\nOptimal move sequence:"")
for move, san in sequence:
    print(""Move:"", san)
    board.push(move)
    print(""Board:\n"", board)
    print(""FEN:"", board.fen())
    print(""Evaluation:"", evaluate_board(board, 0), ""\n"")
print(""Final evaluation score:"", final_score)
"
kpKxZp0J,Untitled,geminilabs,PHP,Wednesday 8th of May 2024 11:40:58 AM CDT,"add_action('setup_theme', function () {
	if (!function_exists('glsr')) {
		return;
	}
	$hook = 'woocommerce_single_product_summary';
	$method = 'renderTitleRating';
	$controller = 'GeminiLabs\SiteReviews\Integrations\WooCommerce\Controllers\ProductController';
	$callback = glsr('Compatibility')->findCallback($hook, $method, $controller) ?? [];
	if (empty($callback['function'])) {
		return;
	}
	remove_action('woocommerce_single_product_summary', $callback['function'], 10);
	add_action('woocommerce_single_product_summary', $callback['function'], 6); // change priority to 6
});"
M4FDD5Um,6502 Math Macros,mhughson,6502 ACME Cross Assembler,Wednesday 8th of May 2024 11:32:12 AM CDT,"; params:   addr_l - address of low byte of 16 bit value
;           addr_h - address of high byte of 16 bit value
;           val - literal to add
;           x reg - assumes x is index into addresses
; note:     stomps A register 
.macro add16x8const    addr_l, addr_h, val
    clc
    lda addr_l,x
    adc val
    sta addr_l,x
    bcc :+
        inc addr_h,x
    :
.endmacro

; params:   addr_left_l/h - address of low/high byte that is being changing
;           addr_right_l/h - address of the low/high byte being added to l-value.
;           x reg - assumes x is index into addresses
; note:     stomps A register
.macro add16x16    addr_left_l, addr_left_h, addr_right_l, addr_right_h
    ; low byte
    clc
    lda addr_left_l,x
    adc addr_right_l,x
    sta addr_left_l,x
    ; high byte
    lda addr_left_h,x
    adc addr_right_h,x
    sta addr_left_h,x
.endmacro

; params:   addr_left_l/h/hh - address of low/high/xtrahigh byte that is being changing
;           addr_right_l/h - address of the low/high byte being added to l-value.
;           x reg - assumes x is index into addresses
; note:     stomps A register
.macro add24x16    addr_left_l, addr_left_h, addr_left_hh, addr_right_l, addr_right_h
    ; low byte
    clc
    lda addr_left_l,x
    adc addr_right_l,x
    sta addr_left_l,x
    ; high byte
    lda addr_left_h,x
    adc addr_right_h,x
    sta addr_left_h,x
    ; extra high byte
    bcc :+
        inc addr_left_hh,x
    :
.endmacro

; Adds an signed 16 bit number to an unsigned 24 bit number 
; params:   addr_left_l/h/hh - address of low/high/xtrahigh byte that is being changing
;           addr_right_l/h - address of the low/high byte being added to l-value.
;           x reg - assumes x is index into addresses
; note:     stomps A register
.macro add24xs16 addr_left_l, addr_left_h, addr_left_hh, addr_right_l, addr_right_h
    clc
    lda addr_right_l,x
    adc addr_left_l,x
    sta addr_left_l,x
    lda addr_right_h,x
    bpl :+
        dec addr_left_hh,x  ; adjust if r-value is negative
    :
    adc addr_left_h,x
    sta addr_left_h,x
    bcc :+
        inc addr_left_hh,x  ; adjust hh if carry
    :
.endmacro"
yDGKht6W,6502 Particle System,mhughson,6502 TASM/64TASS,Wednesday 8th of May 2024 11:26:01 AM CDT,".include ""macro_math.s""

.export _reset_all_particles, _update_particles, _spawn_particle
.export _spawn_brick_smash_particle_system, _spawn_coin_particle_system

; ca65 helper routines
.import decsp3, shlax4, shrax4, shlaxy

; variables defined in C but needed in this code.
.import _cam

; CONSTANTS

NUM_PARTICLES = 16
PART_GRAVITY_DEFAULT = 56 ;((255*22)/100)
INDEX_NONE = $ff
COIN_VEL = ((4 << 8) + 128) ; based on C version

PART_TYPE_NONE = 0
PART_TYPE_ROCK = 1
PART_TYPE_COIN = 2

; NOTE: this doesn't need to be saved, but that's where the spare memory is.
.segment ""XRAM""

part_x_scr:         .res NUM_PARTICLES
part_x_pix:         .res NUM_PARTICLES
part_x_sub:         .res NUM_PARTICLES
part_x_vel_pix:     .res NUM_PARTICLES
part_x_vel_sub:     .res NUM_PARTICLES
part_y_pix:         .res NUM_PARTICLES
part_y_sub:         .res NUM_PARTICLES
part_y_vel_pix:     .res NUM_PARTICLES
part_y_vel_sub:     .res NUM_PARTICLES
part_tile:          .res NUM_PARTICLES
part_counter:       .res NUM_PARTICLES
part_type:          .res NUM_PARTICLES
part_state:         .res NUM_PARTICLES
part_x_reg_temp:    .res 1

; routine params

in_part_x_h:    .res 1
_in_part_x_h = in_part_x_h ; alias with a _
.export _in_part_x_h

in_part_x_l:    .res 1
_in_part_x_l = in_part_x_l
.export _in_part_x_l

in_part_y_h:    .res 1
_in_part_y_h = in_part_y_h
.export _in_part_y_h

.segment ""BANK3""

;;-----------------------------------------------------------------------

.proc _reset_all_particles

    ldx #(NUM_PARTICLES-1)
    lda #0

loop:
    jsr _clear_particle
    dex
    bpl loop

    rts

.endproc

;;-----------------------------------------------------------------------

.proc _update_particles

    ldx #(NUM_PARTICLES-1)

loop:

    ; is the particle alive?
    lda part_state, x
    bne :+
        jmp next_particle
:

    ;
    ; move
    ;

    ; add x velocity to x position
    add24xs16    part_x_sub, part_x_pix, part_x_scr, part_x_vel_sub, part_x_vel_pix

    ; y velocity
    add16x8const    part_y_vel_sub, part_y_vel_pix, #PART_GRAVITY_DEFAULT

    ; add y velocity to y position
    add16x16    part_y_sub, part_y_pix, part_y_vel_sub, part_y_vel_pix

    ; custom update
    lda part_type,x

    ; ROCK
    cmp #PART_TYPE_ROCK
    bne :+
        ; custom rock logic
        clc
        lda part_counter,x
        cmp #30
        bne end_custom_update
        ; change tile half way
        inc part_tile,x
        jmp end_custom_update

    ; COIN
:   cmp #PART_TYPE_COIN
    bne :+
        ; custom coin logic
        ; 0xf0 + ((tick_count >> 2) % 4)
        lda part_counter,x
        lsr
        lsr 
        and #%00000011 ; %4
        clc
        adc #$f0
        sta part_tile,x
        jmp end_custom_update
:

end_custom_update:

    ; did the particle fall off the bottom?
    lda part_y_pix,x
    clc
    cmp #208
    bcc :+
        ; off the bottom
        lda #0
        sta part_state,x
        jmp next_particle
:

    dec part_counter,x
    bne :+
        ; counter has expired. Disable particle.
        lda #0
        sta part_state,x
        jmp next_particle        
:

    ;
    ; draw
    ;

    jsr _clip_and_draw_particle

next_particle:
    dex
    bmi :+
        jmp loop
:

    rts

.endproc ; _update_particles

;;-----------------------------------------------------------------------

; params:   x - particle index
;
.proc _clear_particle

    lda #0
    sta part_x_scr, x
    sta part_x_pix, x
    sta part_x_sub, x
    sta part_x_vel_pix, x
    sta part_x_vel_sub, x
    sta part_y_pix, x
    sta part_y_sub, x
    sta part_y_vel_pix, x
    sta part_y_vel_sub, x
    sta part_tile, x
    sta part_counter, x
    sta part_type, x
    sta part_state, x
    rts

.endproc ; _clear_partcile

;;-----------------------------------------------------------------------

; params:   x reg - offset into particles
; output:   x reg - the index of the next free particle.
.proc _find_next_free_particle

loop:

    ; is the particle alive?
    lda part_state, x
    bne next_particle

    ; particle is alive, so just return with X pointing 
    ; to this index
    rts

next_particle:
    dex
    bpl loop
    
    ; if we reach this point X will be $ff, which is INDEX_NONE
    rts

.endproc ;_find_next_free_particle

;;-----------------------------------------------------------------------

brick_smash_y_vel_pix:
    .byte $fc, $fc, $fe, $fe ; -4, -4, -2, -2

; both are 128, but one is negative and the other is positive.
brick_smash_x_vel_h:
    .byte $ff, 0, $ff, 0 ; -128, 128, -128, 128

brick_smash_x_offset:
    .byte 0, 8, 0, 8
brick_smash_y_offset:
    .byte 0, 0, 8, 8

; params:   in_part_x_l - x position in pixels
;           in_part_x_h - x position in sreen pages
;           in_part_y_h - y position in pixels
.proc _spawn_brick_smash_particle_system

    ldx #(NUM_PARTICLES-1)

.repeat 4, I
    jsr _find_next_free_particle
    cpx #INDEX_NONE
    bne :+
        rts
:   jsr _clear_particle

    ; bring the particle to life
    lda #1
    sta part_state, x

    clc
    lda in_part_x_l
    adc brick_smash_x_offset+I
    sta part_x_pix, x
    lda in_part_x_h
    sta part_x_scr, x
    clc
    lda in_part_y_h
    adc brick_smash_y_offset+I
    sta part_y_pix, x

    ; always 128 sub pixel, but the pix value will
    ; determine if it is negative or positive.
    lda #128
    sta part_x_vel_sub,x
    lda brick_smash_x_vel_h+I
    sta part_x_vel_pix,x

    lda brick_smash_y_vel_pix+I
    sta part_y_vel_pix,x

    lda #$e0
    sta part_tile,x

    ; live for about 1 second
    lda #60
    sta part_counter,x

    lda #PART_TYPE_ROCK
    sta part_type,x
.endrepeat

    rts

.endproc ;_spawn_brick_smash_particle_system

;;-----------------------------------------------------------------------

; params:   in_part_x_l - x position in pixels
;           in_part_x_h - x position in sreen pages
;           in_part_y_h - y position in pixels
.proc _spawn_coin_particle_system

    ldx #(NUM_PARTICLES-1)

    jsr _find_next_free_particle
    cpx #INDEX_NONE
    bne :+
        rts
:   jsr _clear_particle

    ; bring the particle to life
    lda #1
    sta part_state, x

    lda in_part_x_l
    sta part_x_pix, x
    lda in_part_x_h
    sta part_x_scr, x
    lda in_part_y_h
    sta part_y_pix, x

    lda #<(-COIN_VEL)
    sta part_y_vel_sub,x
    lda #>(-COIN_VEL)
    sta part_y_vel_pix,x

    lda #$f0
    sta part_tile,x

    ; live for about 1/2 second
    lda #32
    sta part_counter,x

    lda #PART_TYPE_COIN
    sta part_type,x

    rts

.endproc ;_spawn_coin_particle_system

;;-----------------------------------------------------------------------

;unused
.proc _spawn_particle

    ldx #(NUM_PARTICLES-1)

loop:

    ; is the particle alive?
    lda part_state, x
    bne next_particle

    ; particle is alive

    ; start with a blank slate so that we only need to update
    ; the values that change.
    jsr _clear_particle

    ; bring the particle to life
    lda #1
    sta part_state, x

    lda #128
    sta part_x_pix, x
    sta part_y_pix, x

    lda #128
    sta part_x_vel_pix,x

    jmp done

next_particle:
    dex
    bpl loop


done:
    rts

.endproc ;_spawn_particle

;;-----------------------------------------------------------------------

; params:   x - particle index
;
.proc _clip_and_draw_particle

    stx part_x_reg_temp

    ; offscreen left clipping
    lda part_x_scr,x
    cmp _cam+1
    beq :+ ; equal, continue check
        bcc remove ; a < cam
        jmp test_right_clip
:   lda part_x_pix,x
    cmp _cam
    bcc remove ; a < cam

test_right_clip:
    ; offscreen right clipping
    lda _cam+1
    clc
    adc #1
    cmp part_x_scr,x
    beq :+ ; equal, continue check
        bcc done ; cam < obj
        jmp @draw_sprite
:   lda part_x_pix,x
    cmp _cam
    bcs done

@draw_sprite:
    ; oam_spr(64, 64, 0, 0);
    jsr decsp3

    ; camera shift
    sec
    lda part_x_pix,x
    sbc _cam ; pos_x low
    ldy #$02 ; number of stack params
    sta (sp),y
    lda part_y_pix,x ; param 2 - y
    sec
    sbc #1 ; pixel offset    
    dey
    sta (sp),y
    lda part_tile,x ; param 3 - chr
    dey
    sta (sp),y
    lda #02 ; 03 param 4 goes into a reg - attr
; stomp x
    jsr _oam_spr

    ; restore the x reg
    ldx part_x_reg_temp

done:
    rts

remove:
    lda #0
    sta part_state, x
    rts

.endproc ; _clip_and_draw_particle "
Phs8TH2i,Untitled,vatman,C++,Wednesday 8th of May 2024 11:23:02 AM CDT,"#include <cmath>
#include <iostream>

void method_vr() {
  double w = 1.2; // 0<w<2
  int N_max = 10000;
  int S = 0;
  double eps = 0.0001;
  double eps_max = 0;
  double eps_cur = 0;
  int n;
  std::cout << ""input n"" << '\n';
  std::cin >> n;
  double a[n][n];
  double x[n];
  double b[n];
  std::cout << ""input a[n][n]"" << '\n';
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
      std::cin >> a[i][j];
    }
  }
  std::cout << ""input b[n]"" << '\n';
  for (int j = 0; j < n; ++j) {
    std::cin >> b[j];
  }
  std::cout << ""input x[n]"" << '\n';
  for (int j = 0; j < n; ++j) {
    std::cin >> x[j];
  }
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
      std::cout << a[i][j] << ' ';
    }
    std::cout << b[i] << '\n';
  }

  double x_old;
  double x_new;
  bool f = false;
  while (!f) {
    for (int i = 0; i < n; ++i) {
      x_old = x[i];
      x_new = (1 - w) * a[i][i] * x[i] + w * b[i];
      for (int j = 0; j < n; ++j) {
        if (j != i) {
          x_new -= w * a[i][j] * x[j];
        }
      }
      x_new /= a[i][i];
      eps_cur = fabs(x_old - x_new);
      if (i == 1) {
        eps_max = eps_cur;
      } else if (eps_cur > eps_max) {
        eps_max = eps_cur;
      }
      x[i] = x_new;
    }
    S += 1;
    if ((eps_max <= eps) || (S >= N_max)) {
      f = true;
      std::cout << ""eps_max: "" << eps_max << '\n';
    }
  }
  for (int i = 0; i < n; ++i) {
    std::cout << S << ':' << x[i] << ' ';
  }
  std::cout << '\n';
  std::cout << ""count of steps: "" << S << '\n';
}

int main() {
  method_vr();
  return 0;
}
"
9aA4N7nB,Untitled,vatman,C++,Wednesday 8th of May 2024 11:18:45 AM CDT,"#include <cmath>
#include <iostream>

void method_vr() {
  double w = 1.2; // 0<w<2
  int N_max = 10000;
  int S = 0;
  double eps = 0.0001;
  double eps_max = 0;
  double eps_cur = 0;
  int n;
  std::cout << ""input n"" << '\n';
  std::cin >> n;
  double a[n][n];
  double x[n + 2];
  x[0] = 0;
  x[n + 1] = 0;
  double b[n];
  std::cout << ""input a[n][n]"" << '\n';
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
      std::cin >> a[i][j];
    }
  }
  std::cout << ""input b[n]"" << '\n';
  for (int j = 0; j < n; ++j) {
    std::cin >> b[j];
  }
  std::cout << ""input x[n]"" << '\n';
  for (int j = 1; j < n + 1; ++j) {
    std::cin >> x[j];
  }
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
      std::cout << a[i][j] << ' ';
    }
    std::cout << b[i] << '\n';
  }

  double x_old;
  double x_new;
  bool f = false;
  while (!f) {
    for (int i = 1; i < n + 1; ++i) {
      x_old = x[i];
      x_new = (1 - w) * a[i - 1][i - 1] * x[i] + w * b[i - 1];
      for (int j = 1; j < n + 1; ++j) {
        if (j != i) {
          x_new -= w * a[i - 1][j - 1] * x[j];
        }
      }
      x_new /= a[i - 1][i - 1];
      eps_cur = fabs(x_old - x_new);
      if (i == 1) {
        eps_max = eps_cur;
      } else if (eps_cur > eps_max) {
        eps_max = eps_cur;
      }
      x[i] = x_new;
    }
    S += 1;
    if ((eps_max <= eps) || (S >= N_max)) {
      f = true;
      std::cout << ""eps_max: "" << eps_max << '\n';
    }
  }
  for (int i = 1; i < n + 1; ++i) {
    std::cout << S << ':' << x[i] << ' ';
  }
  std::cout << '\n';
  std::cout << ""count of steps: "" << S << '\n';
}

int main() {
  method_vr();
  return 0;
}
"
bUerxheE,–ø–∏—Ç–æ–Ω –º–∞—Å—Å–∏–≤—ã,nq1s788,Python,Wednesday 8th of May 2024 10:21:24 AM CDT,"#–¥–∞–Ω–æ —á–∏—Å–ª–æ n –∏ –¥–∞–Ω–æ n —á–∏—Å–µ–ª, –Ω–∞–π—Ç–∏ –∏—Ö —Å—É–º–º—É
n = int(input())
#a = []
#for i in range(n): –¥–∞–Ω –º–∞—Å—Å–∏–≤ –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö
#    x = int(input())
#    a.append(x)
a = list(map(int, input().split())) #–¥–∞–Ω –º–∞—Å—Å–∏–≤ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
print(sum(a))"
chF5eGW3,All Keys Combined by Chizoba667 [no duplicated],chizoba667,JSON,Wednesday 8th of May 2024 10:12:36 AM CDT,"A11042DD66EC6C67
AB19BC885A29
240FAD647AB9ED2D
505B5A8EB20A
17C548CBC3A6
E3429281EFC1
4C44DB1D0C3A
C1D8B91D65AA
EDF90C1A4E0C7057
7E7D8F5D58E7A948
83A05B477535
C015A21E0146
5B926E3751EB
9A7911ECC275
E6FBE030F774B72D
04361330B35C
FD8705E721B0
1E34B127AF9C
A2A566B839BDC7DC
863FCB959373
EB44DDC408CE
83D86835B48B
F774B72DBC2FA15B
3FA7217EC575
3367BFAA91DB
3C888A88C59D
505249565442
A15000000000
2634573C1798D026
005078565703
19FC84A3784B
6F6674776172
000000000002
336E34CC2177
2ECDA9A5EA96
2C3EE5E98804
529FC9493DBA2A52
38B67589E47D
DD66EC6C67F210E7
16173C05F181493D
964E8E5338BD
3830E3E9A967E142
B8A1F613CF3D
BEA20C972E70
C620318EF179
6033A1C0E431
4B39E3923D0D
686A736A356E
C8AACD7CF3D1
1B398C000D9719A1
381B0A70E135
8B6A95C7D2E2
ED0EC56EEFDD
756EF55E2507
904735F00F9E
F24BBB044C94
0E84963355B437FE
B32464412EE3
CB2ECC3D9C22
303132333435363738393a3b3c3d3e3f
EEC0626B01A1
2FCA8492F386
9DC282D46217
FED791829013
0863D32B98A4793D
515B00B7D428DAA6
52AADA374811
A3C089828CBDB3E6
87DDD5A188EE
96D5213C5DDB
E8B008239600
ED646C83A4F3
D10329D366C8
404142434445464748494a4b4c4d4e4f
4A24470C19C5
675A32413770
53B09DB89111
5469616E
6B3B7AF45777
B04D71906C60
8C0863D32B98A479
B46824B972E9
021200C20307
8E0C68FDAEFFD620
CA56EB045188
2DE675C83B4CCC65
AC37E76385F5
6C5E10B86CDE
FABADA11
69D92108C8B5
EE4CC572B40E
82D17B44C0122963
65BEFA5C256F544B
A091485B4B5D
F3FF240FAD647AB9
B45171C5A67D
B6010B1D8BC24B16
8A036920AC0C
E0000000
2602FFFFFFFF
1A9A970CC370
2A524556D8E2050B
A6C5529FC9493DBA
22BDACF5A33F
ae7478ccaee7
C229CE5123D5
03E0094CEDFE
CBD2568BC7C6
8394B57153D6
51E97FFF51E9
8AD5517B4B18
EF61A3D48E2A
FCC8B2F9456B8D58
CD36017CABABB46D
793B5BB5A4528B0B
6E77B8EB6444
340E40F81CD8
76BABC3D54B25C01
62FF943EB069
5145C34DBA19
932B9CB730EF
369A4663ACD2
584F66326877
6B857B568C10
2172D827D3E2
999999999999
C1E6F8AFC9EC
60012E9BA3FA
64A2EE93B12B
BB1924266B36
7708D5CAD58B
AE516A187825
9ABCCD2AE7C7
776974687573
D6261A9A4B3F
4FE39D01515B00B7
74BF7363F354
24BB421C7973
A0000F000345
2A94CBCD7A6E
62953A89B137
65972038CC25
2170E9D0D448
DE4F5AA9A7F3
CC8904B0C6E2677D
000390014D41
897034143D016080
D31E6CA194384AC9
353038383134
2EEE063290C1
E8D53410B736
36D268442846
1CD38D77090B
43412D627400
0966C3B28E04
70284824B26C
6A124174096CD12A
4D06DBCA167E
6F95887A4FD3
A00000043D79
727A80DD5296
A21680C27773
51B4AE31B246
AAAAAAFFFFFF
D4C818A5455E
C3BA2438A981
6E0DD4136B0A
E60F8387F0B9
EA9B1695DD91
1FC749FE231E5EB6
90965DEBC8B9
a0a1a2a3b0b1b2b3c0c1c2c3d0d1d2d3
CAB92B865BAD
59936949B4C15B3F
593DD8FE167A
98A4793D9C2F537F
4DBAC8ECE167
654BACB21C3B
17505586EF02
E9447637E40D
D0A4131FB290
B03000000000
D06577009ADCD2EB
4195EE7238CC
D2550925679B
23C317B8D6DA
759403A563D8
3C633B3474DD
67F210E78530CB94
BE5B3ED935AC
9DAC62A346B7
303645E47667
42E9B54E51AB
9E5271763D3D
abbf6d116eaf
C106FCFCC8B2F945
E3905BA54194
116C31526819
C0C4CA21B876
487339FA02E0
2C7E983588A3
6C273F431564
99DBA4CD36017CAB
19F1FFE02563
4A4755BC4A2A
8A8D88151A00
052B16064085
46F94E6F5D912E1C
3060206F5B0A
08090A0B
43B3E895B281
622E5E0812D7
AABBCCDD
AB101546634E
B256B79DFE12DE53
E6655B6425DC
C76BF71A2509
5E1A4EE98748
C11F4597EFB5
42F7A186BF87
B66AC040203A
2E45C23DC541
209481EC6256
B290401B0CAD
A15BB30725F2C492
660C2A524556D8E2
FBA88F109B32
67150CB11E95
871B8C085997
D3DF184370502B16
4B609876BBA3
8C29F8320617
74133B1E2DED
DBD9799E15B1
3F7A5C2DBD81
7E5E05866ED6
736B602A93D9
B2F9456B8D58976C
98E8C543688E
D431C8C73BDC
30FB20D0EFEF
ED296C79266C
6B1CC539A1B2
186D8C4B93F9
3A471B2192BF
A1D92F808CAF
6175241B035A
E87267A508DB
1E6ED46CE258
6515B38077D6
1B75E7B007DB
643232ADB2D5
D58023BA2BDC
F272EDF90C1A4E0C
2812EB6A427C
1B30A7825B23
16551D52FD20
34CC7E36C8C4
E11930DA7E5F3F43
C7B6702AC17B
677DBD2854B8403F
A98DEB0733C9
2EAE64105790EB34
82C32634573C1798
1AE29C8CD672
4CB212D72D57
6577009ADCD2EB1F
495C6639575B
8CE0A0D8B6BF2B03
1706B1BE25C7
B4B3FFEDBE0A
587C34557B36
80CED5362B2C
83378A077357
D86243C1380E
925A5521D48D
110BB6D5539D
3EEB33434C1A
22C2176E1CD6
3C4A12E7A107
9984C1A3229E
B14775DEA2E2
9AFC42372AF1
EB34FCAFA9ED3807
24CAD4153036
47E9D4D4BE35
1999A3554A55
A82607B01C0D
00008627C10A
009ADCD2EB1FB841
688BD5B7B4E9
8530CB941FBD5993
590BD659CDD2
732C9BE4DDBA
2562E49EDD4B30EA
6696C4332D46
0B31815E6A7C
B002D1BDC29B
017CABABB46DFB93
31BEC3D9E510
F8493407799D
0123456789ABCDEF # SAGEM
BC2FA15BB30725F2
5C9B1A8E31CD
712E6CAA74A4
5A4740D952EC
6404798F9F6C38A8
E49A2A1092A12148
74AA58008A31
DD68DE9CDA5A
F1A97341A9FC
0123456789AB
2C3FEAAE99FC
CA119C79A197
A27D3804C259
BA5B895DA162
9DCDB136110C
A513FF1232E9
BC7BEE6B71C4
F1EA5EED
DB37160CBB4B
A787C822020C
7087B191CAC74903
E39D01515B00B7D4
4761E34CB054
FFFFFFAAAAAA
EDE2747DA6C3
88DD4B7C5991
37E602347133
D7E8A5089E7A
DCCE477E785E
709BA7D4F920
7EDADA19EB57
1B8189BD966B
2DC9153F449B9226
3D9C2F537FA5DF1F
1717E34A7A8A
E64A986A5D94
BC66E9270049
6887A122AA62
C9D449AD9970
4051A85E7F2D
050908080008
0E620691B9FE
EAB5FE1B0EC69A1D
33333333333333333333333333333333
6B638C1C950D
3B99486097C6
414C41524F4E
C3CD74758DE2
B5A4528B0B361EDE
2E07D3DF18437050
ABA208516740
C46A048C88DD
850984712F1A
D23C1CB1216E
77322DD2E184
EE487A4C806E
9D59641E40A5
223C3427108A
3B4C51ACC53D
A0D8B6BF2B031638
090A0B0C
A9B43414F585
810518578380
4CFF128FA3EF
050B1F1D65FB5D78
27D1635ED1B3
98CD5AA2A4DB
6685D0BE19E0
B75176C82A8B
777777777777
A50647482562E49E
37FC71221B46
DBA4CD36017CABAB
C5A430FF6A121127
597E98000ED4
7091621EA016
759D2130312B
F244E13FB60E8496
4387ADE263DB
66933A9E7982
D65561530174
EC6C67F210E78530
1E8516585792
21A5B6481B7D
9A694755A978
807F40B07650F272
30FFB6B056F5
A9C1A0FDAA48B601
807466CCBAB5
25094DF6F148
605F5E5D5C5B
34002AAEE45D
A7E3B3459240
BA7BBD9683B1
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
BAD293A45C8A
C9826AF02794
FF58BA1B4478
5902E4DCC95D
15141312111009080706050403020100
CD2E9EE62F77
8A906B4B3211
9EB7C8A6D4E3
0011223344556677
03EA4053C6ED
8AD8B41EC218
6CD12AF4C6B00155
7F60AEF68136
4EA7B0BED74B
1BDA0D87A575
47C23398EA52
E75E07A010D1
4C961F23E6BE
A199132A4043
3E84D2612E2A
173C05F181493D66
BCFE01BCFE01
ECD4C42EA3D1
DEDD7688BC38
835D33B48113
62C531C6E29C
385EFA542907
60C742D8D9C0
83F3CB98C258
2F87F74090D1
76984E62CCE4
B05000000000
D3F7D3F7D3F7
E81512343BAD
474249437569
CCCCCCCCCCCC
7D46C149DAD9
E8C4B4A4E482
5A99578CAA13
9288F574929EB85B
09A14A80754E
C953797CCE61
58C35C8BC9AB
8FA1D601D0A2
3E0913A96E74
66718BD91332
7DF3807F40B07650
3E23271C1C15
A86C2595A1C3
DDE7304E78B6
C07EE1E10B56
79674F96C771
EA4C494C9353
4E3D548E1267
EA61AC8B4969
3FB60E84963355B4
2B7DF3807F40B076
2066B2F27017
3BC741376E71
28133B46730A
6D0B6A2A0003
A5142D626200
4A4D5E3A9011
1B3ED409B14E6C24
0647482562E49EDD
9F97C182585B
1A3A76ED470A
157B10D84C6B
ED65A9B6469C
A0478CC39091
B7B9D7E523B8
3343B72BAA71
B39AE17435DC
82DA4B93DB1C
51798AEAAE9E
754AD5773746
EEE11930DA7E5F3F
6C94E1CED026
BD2854B8403F7087
3372C9C5D4AE
678B98AA2E86
E127434AB3B7
434CE764DE91
1417E5671417
066B2F230172
26D641E834DC
4D1A263BA48B
ECBBFA57C6AD
1D12BBB575B1
2AE7BDB10CB4
555555555555
540A5B789761
0000000000000000                                    #NXP Default DES
1B14CAC3D0C2
63E6AAAB4433
0BEC525E3463
649B302A97C5
14D446E33363
74096CD12AF4C6B0
99C487AB85EC
7BCB4774EC8F
052B99EC186E
AE8587108640
0832E4783600
9C45237377BE
00383D96411D
013889343891
231E5EB656B3500C
C06CE7D57A0D
87B191CAC7490304
B66060201705
5F31F6FCD3A0
C27D999912EA
5A6ED7966868
A9C37CE71D23
2C60E904539C
772219470B38
54C649075B57
E8EFE808F3FD6E9C
377EC8A78B8D
461744C8EABD
400BC9BE8976
76E450094393
E96246531342
B099335628DF
A3A26EF4C6B0
035C70558D7B
4D3A99C351DD
1E352F9E19E5
0340643D5E27
9026977EB8A6
A2CB60E815A0
BF09D9125CD1E8EF
14A353C60820
B6C6558E58CA
691DE69079350928
318BD98C1CEF
AC88B26AC1D0
AE4B497A2527
BEDB604CC9D1
00460740D722
BABC3D54B25C0158
E6849FCC324B
81BFBE8CACBA
64AE7BEA1784
5046F94E6F5D912E
415A54454B4D
F7042EAE64105790
D428DAA6C5529FC9
70D901648CB9
0B0C0D0E
133DC845505E
01A0C008A5B9
436A46587552
0DE8A36CBBCC
33A444334869
2C9F3D45BA13
3862B259DC71
96A301BCE267
4ACEC1205D75
ED2DC9153F449B92
E7CB93E68155
7B56B2B38725
1EE38419EF39
8F9B229047AC
A4793D9C2F537FA5
30EAB0F02B77CC90
528C9DFFE28C
5F146716E373
0CBE6CC4851B3ED4
3C05F181493D660C
B06000000000
131157FBB126
EB276C9AB68D
E705087DECBB
D66AE9282140
E1EA6BAA03D9
D0D1D2D3D4D5
F750C0095199
4124864B0D40
123F8888F322
7F61A83DB6554C16
95327A0A3600
5D293AFC8D7E
D35B2B75CC52
CC2C02300D34
C16EBAE928B2
B7D428DAA6C5529F
04E16965C142
8E958D8B8C52
444444444444
9F131D8C2057
B385EFA64290
3A6DE2081CDD
4D6F62692E45
7B4DFC6D6525
A314B97C1A6A
AD105D52DB36
77DB71037644
191390328752
82F435DEDF01
60B8411D876E
693143F10368
75E454785C6C
AA0857C641A3
B410B958C3B8
EB5588EAE5E8
26643965B16E
8270D538D5E8
0AAABA420191
A10000000000
A44590A779A5
8AD966CA3B4D
EC29806D9738
155F91829013
C0BEEFEC850B
730956C72BC2
D20289CD9E6E
09DB8EE5458C
6130DFA578A0
ACAEB3456AD9
199404281998
9CB290282F7D
248EA5E91987
C934FE34D934
F101622750B7
C96BD1CE607F
363119000001
E45230E7A9E8
3da5dfa54604
296FC317A513
09429512046E
52A230B1C50E
61E57B490A55
F9DCEBA0
D1F71E05AD9D
ABBB521319E6
9B83E2AFFAB4A6A2
CDABDCA23986
9FFDA233B496
76E5DA67A1EC
082B68A67491
2E79209B9519
EC211D12C98D
293D275EC3AF9C7F
21B91A26133A
D88A12EB3622
D8A3690B0115
1ECE3D04A020
411053C05273
157B03405B38
8AB823BDC2AE
B9485A9648C6
6B8D58976CE582C3
C0AA2BBD27CD
2332BB9A2452
55D2E4AC0446
E35173494A81
77CC90AA19C73D08
C10F92A4E57E
A666347B3B4B
62711F1A83E9
96382E1C8E12
C2A701656B8B
549945110B6C
B00000000000
673551D0A99E
77B40902B6D9
9EDD416A7912
AFFAB4A6A2A566B8
0725F2C49288F574
BB2C0007D022
C0E0E092C8B4
BE7C4F6C7A9A
714C5C886E97
EED56840AEBA
F2FA4E3F0F640479
B14E6C24F217AFC1
0E83A374B513
0CE06C96DB4C
A64598A77478
4D48414C5648
71D8BA423D55
90237BAE13DEBBD8
7D8F5D58E7A9482D
1774DB1A8CA1
7DD399D4E897
7549E90353A2
0117BAE4D8D9
8384148AE52D
00000002
6D4C5B3658D2
45FEE09C1D06
32AC3B90AC13
70172066B2F3
C7034BC581A6
79350928E49A2A10
4E94C7962769
DE1FCBEC764B
8CAE5D688443
4684316440D6
500AE915F50A
922E7955CC67
B5FE1B0EC69A1DC5
E65111EB1E40
60100DD0E023
92EE4DC87191
A00016000028
1FB235AC1388
3DB004172BE7
FAB4A6A2A566B839
B0463E703098
431D799E0C89
D669B3AE1E11
05865124E5CA
6472616E7265
6CC4851B3ED409B1
48A01159A1E9
4C2E9455D296
44444444444444444444444444444444
FEA1295774F9
9014E1430AEB
B14080E570D1
912E33563E1B
E2677DBD2854B840
540D5E6355CC
13359D5AE9A5
0CE7CD2CC72B
09D9125CD1E8EFE8
4812AEC4B01A
39AD2963D3D1
27073B57132B
9ADCD2EB1FB841DC
8C90C70CFF4A
3DBA2A52E3C64870
ABCDEF123456
8E5D33A6ED51
AA734D2F40E0
CE5AA0C8B5A8
376D6C446746
A253602B9445
4D769DA515D3
A52B8929D665
4015D16B5C1C
B509D631967C
EACC5B7C62C491C1
91FF18E63887
31A16DAC864D
1CD1AE73CA8C
C1D72A47755A
70984C14D3DB
7600E889ADF9
833FBD3CFE51
BD9E6EB7B524
722BFCC5375F
370aee95cd69
FC0B50AF8700
2EB24B573DCD
47482562E49EDD4B
AABBCCDDEEFF
5BB5A4528B0B361E
06124317A9A6
49BC3B29536A1241
5B8CE0A0D8B6BF2B
3CB9E31D6022
3864FCBA5937
009A4C4C6C49
3B4CCC65BEFA5C25
1426EC62BB6C
640524d2a39b
E94836269887
2EF720F2AF76
6E5582237608
3F3A534B7B7B
81DE6062B9D7
4D13683C7960
676D682C4336
BEEB4A159B37
2E8C61C8D31E6CA1
E808F3FD6E9C01B7
5E41DD5D1154
7EE2A624851A
A309E3AEBDB9
543B01B27A95
A00000000064
DC33D5ABE827F982
31415926
B6803136F5AF
2900AAC52BC3
F238D78FF48F
8E7B29460F12
9E59929C8C0863D3
06966B31A285
D7BD3AE48E93
A5DF1FC709457A4F
C342F825B01B
D18296CD9E6E
15FC4C7613FE
D94E36427E20
A566B839BDC7DC33
25892216C620
6291B3860FC8
EAB0F02B77CC90AA
A7AE4A5A33DC
493DBA2A52E3C648
E0E21213C611
6520446F7665
6DDE6E871C64
20267CB20256
4708111C8604
992B152E834A
4370502B16173C05
9C28A60F7249
D4CD56DB8AEB
B59F6E0B0CB42542
2E12426D8847
6338A371C0ED
49C2B5296EF4
34DC25B4D0CE
C56D005E258E
5BDC1391B289
239D50BF09D9125C
7C87013A648A
668920AEE063
233D7B324CEE
50B77DA96DE2
C41514DEFC07
BA2A52E3C6487061
4AB725ED89B5
854501E98239
0BE5FAC8B06A
231173B68E46
54AF91829013
A37A30004AC9
FFFFFF545846
9C4E19AB64B1
C8E173DB04CC
573C1798D0269B83
54D06577009ADCD2
71D91E0795BEBA8A
C3B1BB7E7492
39605B3C8917
16A27AF45407
D982B4846A96
F982DE18EF875849
87654321
419513740558
948EE7CFC9DB
3E680AF244E13FB6
BC8B21AD8802
B6323F550F54
B8403F7087B191CA
97300764797A
B56CA847A7C3
BDF837787A71
76E3B23696BC
AD4EA84D7185
11428B5BCE0F
A05000000000
DDDAA35A9749
DBA0A2DCA8E0
0B1F1D65FB5D7852
29EB3CA1C0DE
7789E646A556
8F79C4FD8A01
CF691DE690793509
7C82EF592001
A3F97428DD01
1A4E0C70579D5058
52B0D3F6116E
BEFA5C256F544BA4
1A2C8D855336
5A7A52D5E20D
58976CE582C32634
0965e3193497
18C3AC2A7E90
DC242193D7E3
D5ABE7180600
4AD1E273EAF1
76078A25C088
1352C68F7A56
52D20D6E3E35
97271231A83F
17BC8EED9A0C
8005BD088847
2CA4A4D68B8E
E6293BDA5EDC
FE2A42E85CA8
337237F254D5
319E8895EAB5
F792C4C76A5C
7C418B493454
AD11006B0601
83BAB5ACAD62
973186B345BB
BCB7A7006400
DD6E0587A821
44DD5A385AAF
0F3A4D48757B
43BA819F199AF82D
A643F952EA57
26107E7006A0
41F262D3AB66
69A32F1C2F19
525335E4CD34
989D127BD496
C6EF3720
114D6BE9440C
A5BCBA6BE592
5058C908068D67C0
D726C4979654
505209016A1F
0CCE39820AAE
194D4E1DE89D
3C383889362A
1B20A6E1D06B
4636195CDA2D
D58660D1ACDE
61D030C0D7A8
2ABA9519F574
4F9F59C9C875
877641436923
CDC21E1E1EC7
21EDF95E7433
8D43D81E37B4
810D24CB13CC
3B1D3AAC866E
1F0128447C00
4388A3C089828CBD
2491457885A7
D0CE7EB0D379
2b7e151628aed2a6abf7158809cf4f3c
C6D375B99972
8CA939DC6DE4
0CB425428EF25C10
93EB64ACF43D
0159C9125AA2
0800F9917CB0
12E50BE60524
27D5B8D2642E
A56C2DF9A26D
0cf1a2aa1f8d
EACDA4DBE420
93D985D55712
C2CBB2ACD38D
2089B5D68B27
9B39A60D3841
E2AFFAB4A6A2A566
E886AE7D1BE0
2E25AD1D6D8D
1665FE2AE945
DF08E576BABC3D54
11AC8C8F3AF2
16124677BBC5
CB75C1BAE669
674C7BB59A16
20B6691C64B1
281DD9E6C98E
484A57696F4A
92CC8904B0C6E267
7A38E3511A38
67546972BC69
68F9A1F0B424
52264716EFDE
12121212
4A2B29111213
562E6EF73DB6
18025130661E
B5157C2736C901F3
F253C30568C4
04B0C6E2677DBD28
28D042242A83
39CF885474DD
9996A233442A
40E7B8D60242
1234ABCD
A89903B6ADDB
32FDA9EC04064B0C
66141DDE8320
11428B5BCE07
84B24DBB9A67
413BED2AE45B
FE2ACD5C793B5BB5
C8454C154CB5
2E4169A5C79D
B08000000000
8A1869848D1A
2D2A97DD45E3
000D9719A190237B
1841CC4E3E79
C38D19A9C8D1
90000000
7C7A86CC727C
82C5ADED4B81
580C377283C7
558DB8891A90
F4C6B0015532FDA9
A47AD3895C63
42A959953C45
0D258FE90296
9937553A965E
9EB85B8CE0A0D8B6
5E594208EF02
5D0762D13401
937144459949
E3AD9E9BA5D4
85A066D39785
DE18EF875849BC3B
D1DC0E1CC09E
018861488381
EE3029556CEB
022FE48B3072
07CEE75D
24ED3625E8225BA9
874EB25C8721
0102030405060708090a0b0c0d0e0f10
6476FA0746E7
C14601C6B411
83588E140165
B637E46AD674
C648706101BBEAB5
37284428A250
E80C5E3E8227
5A7D87876EA8
5790EB34FCAFA9ED
9A2132B5B625
17758856B182
04109ED8EA79
954275CDD7E0
508357498162
812B02C34A64
88F574929EB85B8C
4CE00134DE1E
27DD422E07D3DF18
CE99FBC8BD26
AA4D051954AC
586B470A43B3
6AB676B4DB9D
8637BB3BA795
912CD8E04437
86EE9C410811
A297CEB7D34B
E46210ED98AB
929CC86B1B26
97E9D0C89DA8
79B798D66B01
A42158CC74B5
AADE86B1F9C1
70D1CF2C6843
536A124174096CD1
11EEE11930DA7E5F
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
867C1DA11042DD66
cccccccccccccccccccccccccccccccc
D21762B2DE3B
34D3C568B348
1B1717043D2B
9CE96BADE4D8
E49DD6062901
9A1DC5A430FF6A12
2910989B6880
AFBECD121004
ADA093B06831
67BF3880C811
A00001000030
9917BDA7B4D7
2D302827C9B4
A00003000084
05F5EC05133C
72B393D6E8A9
9226B12E8C61C8D3
9A05EBE41D7D
9386E2A48280
65626F726369
495657C78147
F574929EB85B8CE0
DEB2BEE8858A
5B41CEBC2213
505249565441
6EEC05EB651C
EB1FB841DCDF08E5
CE2797E73070
A9F3F289B70C
EEEEEEEEEEEE
98314DC363C5
AC58C25A1559
C6AD00254562
A479A91EED49
BDB5DC09C522
F0E1D2C3B4A59687 # Kd from PicoPass 2k documentation
4AC919F18237CC1E
F9456B8D58976CE5
F662248E7E89
55667788
4C1617AA1B7DA8EA
14C9BBB5361B
044CE1872BC3
F57F410E18FF
AFC984A3576E
914f57280ce3
79702553797025537970255379702553                    #TI TRF7970A sloa213
A0A1A2A8A4A5
A514B797B373
524556D8E2050B1F
6C78928E1317
B51083D5C2BD
3A8498924010
FFFFFFFF
217F45867C1DA110
3ED409B14E6C24F2
2C03252C10E7
64B8632B54D4
9AB22BBDDD87
34240649314A
9AD8150BE648
F4CE4AF888AE
B8178A34E2DC
B1BB0DB95C67
840160379EEE
80D2CC78E10B
B7709ED7CE60
793D9C2F537FA5DF
3E7DD7953DDD
937A4FFF3011
43400A093A7E
5C9D20250D74
50524F58
46D78E850A7E
F90C1A4E0C70579D
157308368E8E
4B787B273A50
000000000000000000000000000000000000000000000000    #NXP Default 3K3DES
9D4C35AE1A08
6B02733BB6EC
3FB59F6E0B0CB425
85FED980EA5A
4143532D494E
0854BF31111E
C238E449F725B1510EAA699550CABA16  # J2A040
A5B4C3D2
93B4BD1CB47C
1234B5BE8E78
EA3BDAA4E498
107A6AB6B305
45635EF66EF3
7DBD2854B8403F70
B7A26320A491
1E5EB656B3500C10
1332117E8756
403F7087B191CAC7
BA8A3E680AF244E1
D4FE03CE5B07
5B3FAE7F61A83DB6
5E6ABB51EC75
78279397A68E
76BAAA710D25
013940233313
FC9418BF788B
70502B16173C05F1
ECC58C5D34CA
32560224418D
B09000000000
7C491D518242
B6554C1617AA1B7D
DA7E5F3F43BA819F
32589E221D10
71CAEEA3B771
5EB8F884C8D1
49E93C110AA1
9F9D8EEDDCCE
1927A45A83D3
50240A68D1D8
C8D31E6CA194384A
77777777777777777777777777777777
FDAA48B6010B1D8B
505249564142
43AB19EF5C31
2FEAE851C199
D14E615E0545
83E3549CE42D
81B20C274C3F
6032C47B7676
CC726DD08765
45867C1DA11042DD
3DB6554C1617AA1B
26B85DCA4321
B2FE3B2875A6
8C5819E780A4
9716D5241E28
9210BBA2AB26
000000000000
68C9E8AA5C3E
A00025000030
D213B093B79A
72C83B1D098A
81950D0517AC
0B1960681E79
C22D8E2B1E37
CC5075E42BA1
95BEBA8A3E680AF2
53C11F90822A
6F30126EE7E4
67E8B986B2A7
63FCA9492F38
401C81A72C56
349BEAC5210E
4D9763C083D9
02096124DA70
434F4D4D4F41
B437FE2ACD5C793B
424C0FFBF657
ABFEDC124578
0A7632943926
9F42971E8322
D76DE12943B4
DB01A99DD94C
A00003000057
DA7DD0044DA2
AC40BF3FB59F6E0B
DC7697E37A9B
6A0E215D1EEB
56741B108D22
D2ECE8B9395E
2A52E3C648706101
936949B4C15B3FAE
81D9529AE223
7542A9B65EB4
44556677
160F4B7AB806
3E65E4FB65B3
DEAC67E2D7C1
A026642D13AD
F678905568C3
25AE69DED1B4
6251CE7E547A
91CAC7490304A15C
00DD300F4F10
A0B0C0D0E0F0
2012053082AD
E8B5A0BDD993
002E626E2820
B13000000000
D7D49700BBCC
CA277AC09859
CD333295BBE2
84FD7F7A12B6
B11000000000
5544564E6E67
4ECCA6236400
653A87594079
C15B3FAE7F61A83D
B627A3CB13F8
F3C1F1DB1D83
FEA6B332F04A
435330666666
961C0DB4A7ED
5726991C8C28
00000FFE2488
A6E9885AA49D
62B7C7C9B0D0
2011092119F1
D0A7A2787570
6A0B123D7595
64105790EB34FCAF
5849BC3B29536A12
10041004
455249524345
58AC17BF3629
B6550EAC573A
566441C5C28C
4B92DF1BF25D
50A11381502C
0E8F64340BA4
04C297B91308
6B8BD9860763
F7BA51A9434E
44E858C82975
537FA5DF1FC70945
206CE78E0C6C
279060E3DEE9
2D8856109732
2612C6DE84CA
C198163ABECE
1096A7830C82
C04660B76831
F3864FCCA693
B0788BE3BAA4
CB9A1F2D7368
D8A274B2E026
BA729428E808
3444DDE6D7E5
1114A47CC39A
FFFFFFFFFFFF
42AA0B29626E
F1B9F5669CC8
CD5C793B5BB5A452
5C313F4539CD
42DD66EC6C67F210
BE9CE00EE4DD
05DC4016B500
B09172DDBE43
8ED4A17717D9
1322285230B8
84A50647482562E4
563C6B96D59D
04B717BD92EB
0C669993C776
32C6768847F5
A3D30CC8EB97
04798F9F6C38A891
35123500C1EA
D3EAFB5DF46D
4D79C95DAD2D
6F4B6D644178
494446555455
11112222
A00000000000
07B7C106FCFCC8B2
3E3554AF0E12
65B6C3200736
0FAD647AB9ED2DC9
2817C6E02F97
E2F14D0A0E28
C9639352EEC8
8EA8EC3F2320
287A74A9D174E863
430E67734C18
B9ED2DC9153F449B
778899AA
6D98AB9CCC71
AB4E7045E97D
816875D55ED1
9226D4D1236A
B2C054D06577009A
121127DD422E07D3
075D1A4DD323
9BECDF3D9273
DCB75AEC61A0
A05DBD98E0FC
14EB6286AC57
823C239D50BF09D9
3B784087DB2D
880C09CFA23C
105790EB34FCAFA9
7B3B589A5525
8B63AB712753
B4B103E693ED
7453A687B5F0
4E232A8C2E30
B570E5EA1DA3
911FC749FE231E5E
01515B00B7D428DA
1ACC3189578C
A3FAA6DAFF67
0B0172066B2F
4C60F4B15BA8
0E368FB140C1
5044068C5183
973A28C983A3
D2D72CB60F59
1BB6A9CE71E2
C4C6CAE4784C
E43D54DC3511
285C6604C5B4
CC5B7C62C491C11B
BBD4C4699719
56B79DFE12DE5398
005307DB7853
52750A0E592A
8470AAD30447
70564650584F
5EA088C824C9
6888C514DEAD
762E0E021E38
15A45083D24E
DADAD4C57BE271B7
BD96355CBE36
2FC1F32F51B1
F26E21EDCEE2
9DA728164176
B41D18E3B980
649D2ABBBD20
265C03B50877
B02000000000
FCAFA9ED3807B7C1
5B00B7D428DAA6C5
C3F19EC592A2
9F4AD875BB30
89B638BD909E
C03BC03AD437
DD0DE3BA08A6
BC6AB08B03CC
0602721E8F06
69B9CE233517
3A4BBA8ADAF0
6CA178E036DA
40EAD80721CE
A5524645CD91
1782BEDBD347
037AC43CBD9D
9C01B7D4EEBDACBC
E53EAEFE478F
0CDE3E716B32
9951A273DEE7
CCCE24102003
A170D9B59F95
EDC317193709
B39C699CD208
9764FEC3154A
D1B91D224946
0263DE1278F3
49FE231E5EB656B3
EA1B88DF0A76
06106E187106
4B30EAB0F02B77CC
710732200D34
7579B671051A
4B791BEA7BCC
E675C83B4CCC65BE
894D8E2DCDEE
8642D9310B46
F80A65A87FFA
0686A9E6D6E0
A7905680A254
760ED0AB626E
AB30CB2CB354
A1D0844C2C63
E2230B8E84C9
C071D91E0795BEBA
2616192EEB22
C90D996C3A2D
53691569B669
A60CBE6CC4851B3E
A2ABB693CE34
F0F0172066B2
DE53985046F94E6F
8CBDB3E6FBE030F7
199404281970
0F6404798F9F6C38
068D67C071D91E07
918048032247
0C5D782CB183
DAE1888DCC0B
324a82200018
C0AD1B72921A
35C3D2CAEE88
ffffffffffffffffffffffffffffffff
2A2C13CC242A
460661C93045
DEB06ED4AF8E
9AD97423190D
FFF011223358
D4B2D140CB2D
3E84144A770E
E1097C69DA4A
8765B17968A2
764CD061F1E6
FC00018778F7
4143414F5250
CFC738403AB0
F97371271A84
26973EA74321
B20B83CB145C
A9A4045DCE77
310D51E539CA
067DB45454A9
ABE827F982DE18EF
6B00420BE41C
9224B6555E30
C2740E1665A8
925A070E9096
B84D52971107
8247C78188C5
56D455A8BBEA
CB1CE185575C
84B723B2A237
783859EB51A6
5B6CE0B3AD0A
A9482DE675C83B4C
D75971531042
AA48B6010B1D8BC2
E7D6064C5860
735175696421
E8794FB14C63
72B458D60363
C40964215509
31ad7ebd2f282168 # From HID multiclassSE reader
2158E314C3DF
C7CD131E9B60
7A4FE39D01515B00
E9AE90885C39
3A09594C8587
0759955331EE
B07650F272EDF90C
878A091B74B7
CAE8572C2657
05597810D63D
45C414CDC347
7A0455D0A7EC
2C7813A721C3
B0C6E2677DBD2854
9128A4EF4C05
05D1FC14DC31
E5519E1CC92B
44E13FB60E849633
C83B4CCC65BEFA5C
6153ADD80A15
36306A9CA571
2AF4C6B0015532FD
C56D052D5533
D16E6B668254
24CE79506842
9A179148B824
B250E9590215
3112B738D8862CCD34302EB299AAB456                    # Gallagher AES (https://pastebin.com/GkbGLz8r)
19721972
66A3B064CC4B
01FA3FC68349
A57DBD287491
3111A3A303EB
86228C3742A4
3D0811EEE11930DA
4D3248735131
C5BE33E6B1E2
45AE5DDA9830
DDDAE53AA711
28E49A2A1092A121
988ACDECDFB0
A1B5577ED36E
1B1A054566D9
6303CDCBB233
01B7D4EEBDACBC28
30BD652BED24
04524659496E
8BC24B16B256B79D
29EA97BC4A6B
DD4B30EAB0F02B77
10F2BBAA4D1C
CB18774EA550
D4FE03CE5B0F
F0FE56621A42
26B744C673DB
2A4A55052A51
01BBEAB5FE1B0EC6
CCC1EA3E27B8
80000000
5EB656B3500C1092
1268C7D104E1
79B9148761B3
53985046F94E6F5D
9CABF398358405AE2F0E2B3D31C99A8A              # Default key
AAC6E3205D48
50d4c54fcdf5
4D02A3D7CE48
90E56E616DDD
506DB955F161
0793533A5087
328A034B93DB
12AB4C37BB8B
2CC55B46705B
CD7FFFF81C4A
5A12F83326E7
18F34C92A56E
F4CB751B031A
A805534D84E9
33754E0D1687
E859EBC22318
22ECE9316461
7B90C2BA9B23
EAAC88E5DC99
A09000000000
19A190237BAE13DE
74B72DBC2FA15BB3
434F4D4D4F42
2ACD5C793B5BB5A4
EEEEEEEE
62742819AD7C
925B158F796F
17C6299D5A37
CD11359C7A90
D01AFEEB890A
5B70E0B11758
A9F953DEF0A3
587329CE3EBE
973BDDBE7434
066F5AF3CCEE
79C69F7EC7C0
39070618BB17
4CD3B228EBB4
82E344329D34
09457A4FE39D0151
77383BAA4D90
4A6B36C5BCCC
CBA6AE869AD5
D5C172325DD3
0B1D8BC24B16B256
E902395C1744
A04000000000
4342794AD7BB
B28BE0D819ED
C0F5009A
EFF603E1EFE9
41016C0CB8DE
AE3D65A3DAD4
831207CA6E8A
1AF66F83F5BE
06FCFCC8B2F9456B
888EBD3DB945
B70B1957FE71
4E0C70579D5058C9
61C4E56629A3
BD7CA11B9551
237A4D0D9119
E6BADC631036
FF94F86B09A6
E241E8AFCBAF
96706C8D6ECC
D85E51344EB6
A94133013401
A9F95891F0A4
4119340759A2
8E55316D3B3D
B69D40D1A439
769AE4646931
6E3D7366E78C
BCBC6637499B
18A97BD26818
8B9999AE9703
CC559969D0CC
324F5DF65310
476242304C53
8CD2C872187A
583C936DCB4B
FEEDBEEF
7c9fb8474242
10101010
974838AE17A0
52AE9A909674
A16EE9666D5A
8CC1133D7D5B
74498C1D4B3D
021209197591
0F1C63013DBA
43982124C310
C73D0811EEE11930
425245414B4D454946594F5543414E21 # Sample Key (BREAKMEIFYOUCAN!)
50BF09D9125CD1E8
D9FF8BEE7550
CE58AE1C51E9
1153C319B4F8
AA5B6C7D88B4
3A09911D860C
48276645A4EA
12341234
8A39D09508C9
16901CB400BC
AE817239CAB5
200A6A3AA65D
7F45867C1DA11042
e43b7f185460
88482A12C2C6
91142568B22F
B25C0158F2FA4E3F
43814087A7B5
6B6579737472
217250fb7014
b79e5b175227
AE7C3AE5334A
06A34E5E6639
B1CCDB7999B9
04DC35277635
74CC3D85CD0E
2DADE48942C5
6700F10FEC09
F22A78E29880
A1EB280E3901
70579D5058C90806
D0489010A72C
D66D91829013
BD06E96EB7D7
18E887D625B4
851B3ED409B14E6C
1FBD59936949B4C1
763958704B78
F94E6F5D912E1CB2
29ACACC2828E
2D716C9C467B
B5F454568271
E98DC3B561B5
DCD2EB1FB841DCDF
0AF7DB99AEE4
738D7833E7DE
A1AB3A08712C
A00003000028
F7FA2F629BB1
AAAAAAAAAAAA
7CD52B5B8E77
6493D06D5710
7EC45CCEC35A
2F537FA5DF1FC709
913385FFB752
E1EA831EA514
196E279BE9A9
B15000000000
827ED62B31A7
0F01CEFF2742
F4ED24C2B998
A00000000008
0A44A754B592
D39BB83F5297
09E6CB76C080
7B173A4E4976
B8457ACC5F5D
DD422E07D3DF1843
D99425130C1A
6D3CBD12BC6D
3B4497052B42
6D83563EB521
7854794A
C27F5C1A9C2B
25D967D4DD35
33445566
EC1A55BB58EB
5C793B5BB5A4528B
5EC39B022F2B
CEE02D97E5BD
C477B966D328
2A6D9205E7CA
C9CCA6D095A3
A7ABBC77CC9E
8B0B361EDE24ED36
81CC25EBBB6A
0000000B
568C9083F71C
6FC73888D011
46D012CA3BEC
002DE0301481
FB0B20DF1F34
4A6352684677
535F47D35E39
0000FFFFFFFF
2A079CC2AD37
0f0e0d0c0b0a09080706050403020100
D61707FFDFB1
277FEF3880C0
3E3A546650EA
85675B200017
2e032ad6850d
A71E80EA35E1
2077C980EB2E
2625E408276B
FB93B584A5064748
9860DC044565
E65792427D4C
36017CABABB46DFB
5D8C3A5C5761
6DEA848B6195
99999999999999999999999999999999
63AA2A5B076C
B6303CD5B2C6
576A798C9904
E33E807EC3BA
7910A31ECD19
C003962B3462
E53354B71B10
A83DB6554C1617AA
B5244E79B0C8
F9861526130F
C54474936B59
51044EFB5AAB
7A74A9D174E8639E
7DCA66BACA13
064B0CCF691DE690
682D401ABB09
62CED42A6D87
136BDB246CAC
87291F3861FC
0C4233587119
F25C100DF7042EAE
0B733C13E2C9
28D70900734C
C27924128A00
749934CC8ED3
4243414F5250
284BA0A0A29C
7B304F2A12A6
31C7610DE3B0
A00002000088
55710879E113
C98147E69033
444E4752
3C6D9C4A90FA
D10008074A6F
49B4C15B3FAE7F61
68D30288910A
C7490304A15C28B8
502B16173C05F181
25352912CD8D
CC6B3B3CD263
C23E999B6298
C089828CBDB3E6FB
83A0184757C0
63539BB89DEE
7DA8EACC5B7C62C4
17B561AA82B4
147D93848C70
100f0e0d0c0b0a090807060504030201
11428B5BCE06
FBE030F774B72DBC
533CB6C723F6
612A447A2149
F18237CC1E67823C
91CB7802A559
4895CA7DE65E2025
EB0A8FF88ADE
5CD5E98A2864
17DA5C873BC5
7D4CA630E229
BD213E28C568
A22647F422AE
BCD10AAABA42
4A4C474F524D
5313E9079489
6DB17C16B35B
019761AA8082
398C000D9719A190
30AAD6A711EF
BC74CA2C2B06
BE8286DA7D12
EDBA3C943EA8
05D73B9F
94673AE73823
78EA6EB04463
567032E13B54
2FA15BB30725F2C4
26B12E8C61C8D31E
17E9C4C416EB
D82E6938C58C
AD38C17DE7D2
184370502B16173C
A194384AC919F182
ED3A7EFBFF56
4C67059B0006
740AB5126199
7221E016597B
C4033B3BB1D7
224A308017D1
A2F63A485632
C9739233861F
616B820EAD01
A54056E87CBB
919B1D357E91
01F3FF240FAD647A
2338B4913111
43C7600DEE6B
65A3D5823819
3B29536A12417409
5E810C48C8D8
4E3F0F6404798F9F
7DC935E220A0
B27ADDFB64B0
B42C4DFD7A90
F4396E468114
E41E6199318F
F64FBF085098
6879B1CA44A3
44444444
18EF875849BC3B29
29C35FA068FB
3DED9D496478
10F3BEBC01DF
6245E47352E6
88DDC24E1671
1C5179C4A8A1
8EE9D9C03A0D
C9E893C4090B
D0B8C06C02E4
03F9067646AE
6828B52B6507
FB5D78527086A60C
4AF9D7ADEBE4
807119F81418
799E4E270953
4DE6CB63A920
43454952534E
578A9ADA41E3
22334455
28035CA5B300
5EC7938F140A
4CEB27151C49
718BDA352E28
CADED0C50AC4
B27CCAB30DBD
2910AFE15C99
0F1A81C95071
99858A49C119
864CA2A6BE93
0A4600FF00FF
680E95F3C287
9140EC087241
BA7384AB949E
5BB30725F2C49288
112233445566
4DD9D9B637C4
D3B595E9DD63
6B65797374726B72
07121B8C633A
929E1556110E
A04671256EE2
72066B2F2B01
0C208AD4E4B3
B68175BCA864
C3EE19B61C89
D73438698EEA
ED2CE17A590C
BF1F4424AF76
D174E8639E59929C
7D412100532B
CA309D2CBC41
CB1999D19E10
25D60050BF6E
CEE3632EEFF5
CA80E51FA52B
C197AE6D6990
3807B7C106FCFCC8
E1DD284379D4
3C84B55A5E54
6686FADE5566
25F2C49288F57492
A08000000000
9E46407C9024
8442CC9AA777
66B839BDC7DC33D5
681EA28BA6CD
7D0A1C277C05
DEADC0DE
2548A443DF28
6E978A7B16C6
1131A81D9507
02A46AC9233A
16B25A453093
4970714D53D9
9C8C0863D32B98A4
E2A9E88BFE16
4314D9D03B95
C3C169251B8A70FB
6A7B3A7B6735
793D98517D33
E34C5B12BABA
EBA964C07075
D23A31A4AAB9
3B5BB5A4528B0B36
F2C49288F574929E
67823C239D50BF09
0B3B8C2833BC
8D58976CE582C326
56A7930913C3
63783393E20D
C7E35D6294BA
1feda39d38ec
5A150653E624
0860318A3A89
B9DF35A0814C
0CB6CC83AC45
6C9EC046C1A4
14EE72B27223
3312C094BD20
1639134699C7
DEB550958AD9
B160677E7035
141940E9B71B
28877A609EC0DD2B
00434343
D49E2826664F
386676C44A13
9D01515B00B7D428
3A42F33AF429
66666666
5DE8717BB640
3FAE7F61A83DB655
A31E72DCC826
D8545199A949
76A616C3D42C
DB22BB7D6818
7C09DC408C47
2CB1A90071C8
158B51947A8E
CE63DE29E069
704E1B85BED8
65FB5D78527086A6
E51B4C22C8BC
A4693D21013B
4E617468616E2E4C6920546564647920
44F0B5FBE344
D6A91C14AC47
58CD5C3673CB
A0000000
776C9B03BE71
1300EC8C7E80
AE98BA1E6F2C
C428C4550A75
0D3385CEA152
19F18237CC1E6782
BA8224EA7A80
BDC7DC33D5ABE827
00000000000000000000000000000000                    #NXP Default 3DES/AES
230E26964171
53864975068A
BE19C75D6B7E
50000000
B19D3D57176A
E907470D31CC
A9B018868CC1
b0b1b2b3b4b5b6b7b8b9babbbcbdbebf
C2B7EC7D4EB1
321958042333
91C2376005A1
070D486BC555
7259FA0197C6
DE1E7D5F6DF1
577C31903867
79604362370E
61C8D31E6CA19438
4D8B8B95FDEE
1637D8ACA71E
A9391782A846
358A6A398211
738385948494
623055724556
7bc9ebb8274b
84044BAB78A7
C9153F449B9226B1
DAA6C5529FC9493D
960C98566E52
E43562C624B0
356D46474348
18c628493f7f
1D89D900968A
605F5E5D5C5B5A59605F5E5D5C5B5A59
4DCB89C7B2E6
B5D7E1135821
ED22B7115435
0928E49A2A1092A1
C5C272694A1E
3C239D50BF09D912
B4204546A74E
6CE582C32634573C
B9C874AE63D0
35E7DE9899EE
DE1B4DA681B9
343C556CEE59
C225479C7064
6F5D912E1CB2C054
666666666666
8C99807368A5
36C901F3FF240FAD
AECC93678543
CC65BEFA5C256F54
A85198481331
7C62C491C11B398C
3B4986981212
B328014DDD6A
10AC40BF3FB59F6E
17820DAA47B2
3A1E82E2CDB7
DB6819558A25
2735FC181807
2EC6450A47C7
D9A37831DCE5
1DE69079350928E4
5AF445D2B87A
65DEDABD1B34
B0452769A83C
AC70CA327A04
604AC8D87C7E
43B04995D234
1DB710648A65
D3B1C7EA5C53
76AE99D9A294
8B2A5E0332A1
AB8953D3560C
3BC4A3099B0D
B506567A2B84
D4C67846791C
D9E091829013
0C70579D5058C908
63F17A449AF0
74E8639E59929C8C
B71D5B22B1C2
2584287A0174
5697519A8F02
5ED616273468
0A7328887DC2
BCBD2B8BE4B3
a0a1a2a3a4a5a6a7
7E30778792D2
321A695BD266
A0FDAA48B6010B1D
7C335FB121B5
216024C49EDF
B2554CC8AD6E
DCDF08E576BABC3D
9D090AE1A15E
CA92DD257E21
3B86A20C16EA
B85EDFB5157C2736
E4450EC1010C
2ABD68BDC5A3
47454D5850524553534F53414D504C45  # Gemalto
D09893B4EE04
DEB7D7E4C62B
0D9719A190237BAE
88A3C089828CBDB3
373E5827E0B8
BA227EE91818
02BED876BD48
27182818
D660CE9E3080
CE0456AB0DCE
69B5357A617A
22C1BAE1AACD
D0DDDF2933EC
510A8C52AAC4
FCFCC8B2F9456B8D
E3C648706101BBEA
703140FD6D86
51284C3686A6
B7009204D512
B127C6F41436
0670AEB833CE
34635A313344
190819842023
2B7F3253FAC5
1EE60A4A8D22
A74332F74994
A34DEA01690E
842146108088
712BC18422CB
7E680A48C383
AB6EE0761ACA
CD64E567ABCD
AFA9ED3807B7C106
D9125CD1E8EFE808
BBD810AC40BF3FB5
00ADA2CD516D
B0A2AAF3A1BA
A190237BAE13DEBB
2148D0773590ADFA
A6BAE1A1520D
8D67C071D91E0795
AAFB06045877
CB574C6D3B19
DB32A6811327
257377227B34
428EF25C100DF704
0158F2FA4E3F0F64
105743704432
0C68FDAEFFD62043
3A9D49E8BEB2
70E3AD3F2D29
64CBADC7A313
087C0CDA3B46
857464D3AAD1
644672BD4AFE
D3F3B958B8A3
4BF6DE347FB6
171B15888483
77009ADCD2EB1FB8
22C8BCD10AAA
9607AE17AD09
643FB6DE2217
5DB52676BE07
4D414C414741
3625E8225BA9C1A0
7578BF2C66A9
979686C51AB6
042CDEE5D0BA
644ABCC3DD12
74C27A96CB3A
BB320A757099
4E32336C6E38
C1E51C63B8F5
C7C0ADB3284F
33305B0365AA
4098653289D3
2A47CDD3A322
0795BEBA8A3E680A
0E175033BD77
5C36456EA1E5
C6C866AA421E
518229589A81
B3630C9F11C8
1D28C58BBE8A
B7D4EEBDACBC287A
4245921D73CA
A4CDFF3B1848
4C6B69723461
2C71E22A32FE
8619557091AA
3D89120EB993
3B0172066B2F
A783A8774651
A424C686CA39
B188BA649EA1
51119DAE5216
4B59316C10E0
3E173F64C01C
CA4BAA390BC4
675557ECC92E
B04000000000
47AD81972D5B
7531E3E2A41C
09938D05DA78
527086A60CBE6CC4
00000000
167A1BE102E0
B725F9CBF183
255A9E590BCC
6088A566CC60
91D28E2B126D
3D923EB73534
D27058C6E2C7
70CCC3A2D7C0
F7A39753D018
AB16584C972A
3B7E4FD575AD
A7765C952DDF
97D1101F18B0
4AA715A0BBB4
A1E0103A1879
66B03ACA6EE9
EC71B679D3AA
4A832584637D
8DA62EC0C524
6C38A8911FC749FE
A588C918E327
5532FDA9EC04064B
16DDCB6B3F24
4261A795D5A7
A2B019B46CB9
237BAE13DEBBD810
5047DC2975BE
19C73D0811EEE119
C9493DBA2A52E3C6
0058A4884CA5
A81E6D3C8E11
50415353
C5132C8980BC
A3196E77B072
6B0B7B967871
B468D1991AF9
8AB21B524C5C
DDDDDDDD
8DFACF11E778
B4C36C79DA8D
87513C960770
26940B21FF5D
33256E443128
37BD90A68613
B5ADEFCA46C4
BC4580B7F20B
AB91BDA25F00
425A73484166
82DE18EF875849BC
62D0C424ED8E
C0411C28857D
75A0E10D8C84
E8428C8B0740
47D410D1C7C4
616D75A4A022
072B300309C9
9D56D83658AC
C9BE49675FE4
C9CE81D47EDB
457A4FE39D01515B
94B6A644DFF6
225BA9C1A0FDAA48
71A8D54D82B3
16373A44D5D7
39C0E2ED99B5
30C520D6A2B9
03163830E3E9A967
116A92C793D6
A00000000058
58E7A9482DE675C8
100DF7042EAE6410
0C1092CC8904B0C6
C0067E095049
A73F5DC1D333
A1B1C1D1E1F1
9B832A9881FF
AA6C835C9124
9B4ADDDEB749
68C00A810D41
01234567
08506533E741
DE2D83E2DCCC
00BAC32761D8
79A00573947A
BBC1256810A4
99C636334433
73E5B9D9D3A4
6E05B5C44A54
9C616585E26D
0710E7818AB8
E42868808B70
CB911A1A1929
7FA5DF1FC709457A
4F4553746B41
B1EBB537CC0D
4EC9AB4B5519
DD7B1A7C6A82
F210E78530CB941F
9AC43B5A06D8
05060708
4B0B20107CCB
9F27D36C4230
18AB07270506
444D37149B20
BEE8B345B949
3BB36BC22CE4
6CA491A8C7B8
01010101
05DB68DB9364
8237CC1E67823C23
FA1FBB3F0F1F
AE9EB8CAB2C3
1A9872D00EC9
199AF82DD18E0C68
7C469FE86855
2020666666668888 # iCL tags
16151413121110090807060504030201
40000000
A57186BDD2B9
BB1684CC155D
FFFFAE82366C
E2A5DC8E066F
7A09CC1DB70A
1092CC8904B0C6E2
CC1E67823C239D50
AC45AD2D620D
419A13811554
46CAAD12C524
3973ABFD8B66
4F9661ED2E70
045E5588845C
B584A50647482562
00000001
4F75030AD12B
44A04DAA30CB
315AD0D6E6D2
593367486137
CA0D9CCC4C38
aee297cb2fd6
410B9B40B872
A03000000000
4B16B256B79DFE12
632931BE8EC7
2BA9621E0A36
99E2A19C9673
AF0878C81151
8163A5DDE1CD
5CE0EB9C01B6
1D30972E6485
8A6BC2E3811B
C1EB7337A035
8FE644038790
B793ADA6DB0C
67B1B3A4E497
5083664D8C09
11428B5BCE0A
39BDC7DC33D5ABE8
55B437FE2ACD5C79
424C41524F4E
A9EF2AFC
037F64F470AD
02C10DA600D0
E49A03306224
80499BAA5959
865B6472B1C0
A7D71AC06DC2
4DAC8EE52C68
493D660C2A524556
1B3E45AEE657
BBBBBBBBBBBB
9079350928E49A2A
489C783B3514
4F0E4AE8051A
C67B8E869D90
7BAE13DEBBD810AC
0490921D0194
2D41850A8AA6
AA1B7DA8EACC5B7C
D11E7D1BBEEA
E526BB7888DB
427553754D47
632193BE1C3C
547B86E57596
042EAE64105790EB
11C68052AAE9
1A1B1C1D1E1F
307448829EBC
7260377CD286
18AB05761CC5
ED3807B7C106FCFC
0B00220EAE75
AC4BC5B2D3C0
B4C15B3FAE7F61A8
89EAC97F8C2A
010B1D8BC24B16B2
449B9226B12E8C61
756C15E54212
875849BC3B29536A
D9109460D912
167358BB268E
4E2879A411E7
75A807E46B96
27689527E201
5184D04315D7
72EDF90C1A4E0C70
35D850D10A24
E142E32B7DF3807F
04256CFE0425
35EDABB506D8
1C0B5848
E4D2770A89BE
6D9B485A4845
D4C37528DC05
312670228372
8F5D58E7A9482DE6
C8BCD10AAABA
B736412614AF
12FD3A94DF0E
B60D053A36D9
2CB671E6365D
DFE73BE48AC6
965D66E19245
43012BD9EB87
A23456789123
021209197507
526EDB918BEE
AD1992AE37CA
FB6C88B7E279
0BB31DC123E5
037B9B8AA219
155332417E00
5D78527086A60CBE
C4851B3ED409B14E
1428C04BAAD1
92CC200886A2
BE02790E84AC
6AC292FAA1315B4D858AB3A3D7D5933A
44AB09010845
0C82C94EB11B
CF7A7B77E232
037A5DA4682B
612D81821854
95093F0B2E22
2A1F900D4533
8498740493BB
8C61C8D31E6CA194
5F3F43BA819F199A
EEB704D69BCA
0172066B2F03
D973D917A4C7
ECB4019ADD97
B7392DD1E497
A8D0D850A606
A0004A000036
DCB5AC62946C
9092D12E7967
54B8403F7087B191
DA303BADB013
0C420A20E056
0297927C0F77
537930363139
490304A15C28B85E
3122AE5341EB
A6A203994202
0500D6BFCC4F
976CE582C3263457
8F9F6C38A8911FC7
7004BA1763ED
B378C424C9E2
716A747CB931
1FCEF3005BCF
20206666
200306202033
EA490920877D
FA38F70215AD
F83466888612
773590ADFA99DBA4
755D49191A78
6AB8E2B49E25
40B07650F272EDF9
8031E3565825
58F2FA4E3F0F6404
1CFA22DBDFC3
0C2A524556D8E205
6E751666AE9A
2EDE1C155023
B64558CAC0C9
100000000000
C5498606E0A8
00112233445566778899AABBCCDDEEFF0102030405060708
8B6216E412DB
57B8B111491D
88C2E39B5990
9E74D104ACEA
E495D6E69D9C
E94D82A564BA
E49EDD4B30EAB0F0
CD3DB8C27E5C
E10623E7A016
B9F8A7D83978
116AA873ACC8
93B584A506474825
0A0B0C0D
4D2CC85EB338
564C505F4D41
3119A70628EB
03040506
AE76242931F1
D0368B24CA49
7A86AA203788
A000D42D2445
54AA2915E815
A293A90AE72C
903AA4305025
BA819F199AF82DD1
123456ABCDEF
0A1B6C50E04E
456B8D58976CE582
124174096CD12AF4
F124C2578AD0
CB779C50E1BD
CE75D7EADEAF
98D0269B83E2AFFA
3590ADFA99DBA4CD
83E2AFFAB4A6A2A5
98A92128364C
8DACA1BC0636
93C467E3
A2C325A73A9C
6CD430D99958
92A12148D0773590
C69A1DC5A430FF6A
2A27E0602400
A11000000000
1ABC15934F5A
AFCEF64C9913
32CA52054416
630228659A47
B021669B44BB
C9449301AF93
9EBC3EB37130
6BB4ED5E1682
511335CC92CD
55555555555555555555555555555555
482DE675C83B4CCC
1877ED29435A
EC0A9B1A9E06
240F0BB84681
CC6A93BD93D1
462305611C4A
AD5645062534
8B1C75E27153
18E3A02B5EFF
6A0D531DA1A7
28C3D17E4DEC
4B7CB25354D3
27DD91F1FCF1
BBB475DB2B03
476388408D8E
C901F3FF240FAD64
345B62452538
1D09B23EB116
37E2EAE635B5
A4896B2EBA4E
35C649004000
6BB1A14768A8
8829DAD9AF76
18A3196D364B
447AB7FD5A6B
42068108DE36
D327083A60A7
46C7246C1958
A01000000000
4751A5274848
BD59936949B4C15B
77777777
004173272D18
FFD6204388A3C089
8C000D9719A19023
000000270000
77C0AC14972D
E2050B1F1D65FB5D
6D4E334B6C48
DC018FC1D126
09800FF94AAF
8EF25C100DF7042E
3A8A139C20B4
02030405
3EBCE0925B2F
16A05D5C31C3
702C1BF025DD
66D2B7DC39EF
23BB58853461
403D706BA880
A2B2C9D187FB
22A95CB798DC
854A0ED2E77D
AA2D69C757D9
719B1418323E
8BD586B21ABC
30424C029001
386B4D634A65
14D258786538
11111111
89828CBDB3E6FBE0
8D0563B86DD4
C2C30D21C53E
28B20331245A
95E9EE4CCF8F
DE8CD4277A9E
FF6A121127DD422E
03E8CD22E691
D1991E71E2C5
767C33468C72
ffffffffffffffffffffffffffffffffffffffffffffffff
E57581CE8617
3E120568A35C
A6A2A566B839BDC7
A13000000000
237FF9079863DF44
314F495254FF
12DE53985046F94E
204388A3C089828C
1122334455667788
D576E9D856D9
2E52ABE0CE95
8904B0C6E2677DBD
C31C8CD41D65
B808D87AB75C
947A8147E0AE
9695167B4149
D62A4A0E57C2
E5491B5E3DD6
0E8420B04083
AABBCC660429
048451A79DA1
9F6C38A8911FC749
8C0EA504B635
2031D1E57A3B
50983712B1A8
F1A1239A4487
010000000000
B533CCD5F6BF
65E120DE5E55
E69DD9015A43
6BCAE24D9700
1B9CD1ED3420
A18D9F4E75AF
9B9226B12E8C61C8
C7DC33D5ABE827F9
D84C81EE910D
F0000000
0406080A0C0E
9D993C5D4EF4
9868925175BA
045CECA15535
FC0001877BF7
0000A2B3C86F
8268046CD154
83E391829013
A12908B38536
1663659384DC
16F21A82EC84
C6B0015532FDA9EC
6CBC25C1DA2E
2F47741062A0
A9182707A219
741A31054E6B
BA6C2E10086A
987A7F7F1A35
7932684154AE
67C071D91E0795BE
24F217AFC12C7E7D
4B7C7C315E6E
E9526CACA8B2
4BE0B912A5A3
E703589DB50B
22052B480D11
D8913C2D48E9
32DE3CD81C24
30E3E9A967E142E3
B72DBC2FA15BB307
3599856810B2
74A24BE33BE2
F3F0172066B2
1B7DA8EACC5B7C62
9A6EC0A9ECB8
43644E61EE866BA5
E41E9EDEF5719ABF
1D8BC24B16B256B7
97EF60A8F031
6A68A7D83E11
2178ED80D581
0CCDE948878A
FE1B0EC69A1DC5A4
B84C50E56DEC
4317C5C16EAD
9AF82DD18E0C68FD
DCC44C4E9269
BC5C76E5909C
1C1532A6F1BC
17D071403C20
46868F6D5677
72253C7DD951
B54D7674CB90
50179E461EE6
BC0B2C897267
12345678
25BA8775B3C4
F115E91357B3
66B504430416
0C1A4E0C70579D50
00C447B8A2D2
66778899
3B052E65D40A
9189449EA24E
98631ED2B229
DBD5CA4EE467
33D5ABE827F982DE
A5BB18152EF1
18E20102821E
6E7DBCDA05B3
A7141147D430
1F1A0A111B5B
85E0B6B26945
ACBC287A74A9D174
A7FB4824ACBF
54B25C0158F2FA4E
E3E9A967E142E32B
F89C86B2A961
382DE6AB2D1A
0172066B2F33
297B74853CAA
25228ED714BC
4C32BAF326E0
E582C32634573C17
6018522FAC02
94414C1A07DC
40E5EA1EFC00
528B0B361EDE24ED
295D3C9A8B28
11111111111111111111111111111111
2DEB57A3EA8F
9B1DD7C030A1
110C819BBEF8
25094DF2C1BD
A96B08E3A50B
6608944EE186
CDCA8BD7B002
62E49EDD4B30EAB0
EE49610E6121
5D9DB8445155
DB7E3687E450
6090D00632F5
4C275C8BB2DA
863933AE8388
4E3CB839E87D
B6ABB62E437E
0B0CB425428EF25C
D15C004DBC8D
D9A207103ED7
60000000
2AA05ED1856F
8B7CCA9DB004
E5C3A9A27D3E
B841DCDF08E576BA
529C16A720AB
3EE6D4A85643
1DA11042DD66EC6C
B656B3500C1092CC
0853A982D793
484558414354
56207539825A
D5190BD5CED6
3124ACA5491C
DA59354DFB88
000102030405060708090a0b0c0d0e0f
0EB23CC8110B
DEC0CEB0CE24
39682B3E10B5
C0885A29251E
0DB0A87AB882
B1D3BC5A7CCA
7280858E8B20
61DE2B085AC9
374521A38BCC
395244733978
6443E64DCC4B
000D8787
6B9D041136B4
0FFBF65B5A14
0C296648344D
9AFA6CB4FC3D
CCCCCCCC
730050555253
05138E278443
8DE3B131D728
AFC12C7E7D8F5D58
690155BE8D8E
16F3D5AB1139
529CF51F05C5
2E15681A4355
77D7B7E2C8BA
E61A1DA5A60E
4CA30E1A298A
3686192D813F
A750456E7C5E
6E0B0CB425428EF2
003003003003
E328A1C7156D
05862c58edfb
4AD96BF28190
A00000000096
574343467632
1A47959E7DB4
391771654DC8
734EBE504CE8
5125974CD391
3E6E5713BA10
D2752E53679D
ABB46DFB93B584A5
43E69C28F08C
9719A190237BAE13
870A042C1B34
D5E444E9D82D
4CCC65BEFA5C256F
E2C9CB14C06C
F14EE7CAE863
AE43F36C1A9A
01020304050607080910111213141516
D60DE9436219
BE6CC4851B3ED409
4927C97F1D57
C0DECE673829
763D7E6BB40E
0811EEE11930DA7E
26396F2042E7
446176696453
3250D2E661DA
71DC30168C27
34A939B49EDC
2013899194BB
BADC2149EC42
4D5076656D58
8553263F4FF0
4B0CCF691DE69079
BFE25035B0C8
7B00211CA416
185FA3438949
932035869655
579D5058C908068D
3355B437FE2ACD5C
484585414354
41454E521985
1E60CE7C5179
3CD8C6705954
02827C286AB4
536563644C65
E55A3CA71826
C4B3BD0ED5F1
1804087C7166
521B517352C7
fbeed618357133667c85e08f7236a8de
552249203848
5CD1E8EFE808F3FD
995fd2a2351e
1930DA7E5F3F43BA
2CD09D3C0A1B
5B0C7EC83645
23997DD240AB
3C9C0D559DE5
827303C574B5
ED3625E8225BA9C1
3F1A87298691
88D252AC1A8A
43595AC786EE
44D3B1561B34
88661858
288b7a34dbf8
4578ABFEDC12
526E55542A54
872B71F9D15A
1711B1A82E96
41C82D231497
E69079350928E49A
8899AABB
B9B8B7B6B5B3
3113AADC9D6B
BB41640E6340
85A438F72A8A
E2E89A375B36
ED6748113E0D
702CDACE0C14
17AA1B7DA8EACC5B
5B065568048A
A229E68AD9E5
88D026793359
97926543783B
CEB651752D4C
B3B121208E34
CAD7D4A6A996
3F0F6404798F9F6C
8A8EB5771EE9
540E0D2D1D08
EF4C5A7AC6FC
EC2B12107313
211473555436
16065CC411E0
52D0145E1AF5
434456495243
D409B14E6C24F217
160A91D29A9C
120C83C06317
144489B1056E
BAFF3053B496
1798D0269B83E2AF
3905679DEEC4
97EB8A44C49D
C4467DE80B2D
AFE444C4BCAA
0724DF9AEDE8
CE76E8A600DC
05C301C8795A
675E35EE359E
8AF9C718F23D
5352CCC3DCD2
0D6057E8133B
209A2B910545
C956C3B80DA3
B7AA0CA5D94A
8DECE0DD29DE
6C0458728774
B7513BFF587C
d3f7d3f7d3f7d3f7d3f7d3f7d3f7d3f7
6101BBEAB5FE1B0E
CB642A081A89
7C2736C901F3FF24
099672009EEA
4D23919463A3
C983685AA86B
1B9DABDEBAE0
7B296F353C6B
3F43BA819F199AF8
1FC235AC1309
C9CD8D7C65E5
06B78AD0C4BB
9DFE12DE53985046
B80CC6DE9A03
0AEE126549DA
74684B0B4B1D
28B85EDFB5157C27
988D023C15A5
84963355B437FE2A
CC90AA19C73D0811
6C67F210E78530CB
ADB24E78784B
B128298D9073
E00000000000
9BA241DB3F56
00B7D428DAA6C552
41BC44A8C3C6
1AB23CD45EF6
79B7A4C58DE0
071B57D258CE
68D3263A8CD6
A5CC0EE7B9E3
8228D2AA6EFA
B7E9A91174CB
BCF5A6B5E13F
59DB4DBB5D7A
4E8250E29617
7E475BA186E6
044ED79417E1
200000000000
5D912E1CB2C054D0
011C6CF459E8
9DE89E070277
D9BCDE7FC489
AD5038D15490
06B577E0E480
EA0CA627FD06
D0BE546CC06B
491CDC863104
1F1FFE000000
C55875BCB82C
B60E84963355B437
745276053CB6
ADFA99DBA4CD3601
22094904FF22677E5D28C6E3ED4F694C
AD061A23287D
393CCCCCDA4A
828CBDB3E6FBE030
3F449B9226B12E8C
0EA607E1C4E3
A8C0BE436685
874D123262E7
FAD63ECB5891
167828B6105C
0AD6B7E37183
90D8713352D1
08629D1DD0D6
C629E0D34581
6BC1E1AE547D
B6CD1A3EC5BC
BD749E85586A
9D442B28BD11
2B490231E063
49E8249DD677
55D95774E9A0
92D0A0999CBA
70C714869DC7
76140285B768
EE0042F88840
7E43C3BAB3CB
66A163BA82B4
BBEAB5FE1B0EC69A
5D223E990AD8
31E3A933BC4A
20000000
D6204388A3C08982
BA28CFD15EE8
3E3188294ED1
873CE44DDC6B
E9A967E142E32B7D
514956AB3142
1617AA1B7DA8EACC
2803BCB0C7E1
A95BD5BB4FC5
64695084C575
79271963B6E8
DDA22A189095
41990A529AE2
55F5A5DD38C9
AC7D4B201D92
5E8E50B3048B
67DE22850162
00000000000A
73E7B22D6E54
57A18BFEC381
72B5B87BBC6E
965D72659982
12343D71106C
ED8CEB8B7102
3A524B7A7B37
6E9C01B7D4EEBDAC
28DDD4C3E9C4
2E2E85E0E6C9
5E7CC04C3A58
7C4CBBD2DDE1
B7BF0C13066E
2352C5B56D85
E4410EF8ED2D
74E3670C045A
B0699AD03D17
2BD607CA70B2
5D384E6A4145
DA818C56CE43
639E59929C8C0863
2A4C4DB1D71D
62312EC272A0
1C68315674AC
0C0D0E0F
C1E6149B386D
E8225BA9C1A0FDAA
7E5F3F43BA819F19
4C5A766DFE3A
E56AC127DD45
AD7C2A07114B
B3D8C03C78E0
67362D90F973
718B39561350
B882FD4A9F78
8CA2C9DC8292
883DA78EC87D
9D5058C908068D67
02EB32B92D30
C7BD49777A79
647AB9ED2DC9153F
47454D5850524553534F53414D504C45                    # Gemalto
6666202066668888 # iCS tags reversed from the SOs
665B8B24C20D
0E0E8C6D8EB6
EA0FD73CB149
17193709ADF4
C01FC822C6E5
8FD0A4F256E9
9A138D1A5CB7
EA8E8ADC26B9
B39D19A280DF
89267DEE07ED
C404D280640E
6285A1C8EB5C
3C4ABB877EAF
3B8E321AB1B4
90210DDAB57D
1395C108B6B6
61718ED2C94D
F088A85E71D7
BB3D7B11D224
430265958BEB
4808C5AD0115
D12B25B8DDE2
DF1FC709457A4FE3
7A4C61A1B48D
BE518C742B74
42FC522DE987
77DABC9825E1
22729A9BD40F
50F272EDF90C1A4E
138153A4351A
ABCD1234
6a59aa9a959b
C0000000
374BF468607F
89347350BD36
B10000000000
BE1266314B9D
A23C91829013
54686973206973206D79206B65792020
E64C2A07CA9B
B95BFDEBA7E4
95B920CACC84
AE7F61A83DB6554C
9551F8F9259D
EC2B9FD483CA
B16B2E573235
B0015532FDA9EC04
F23442436765
4CBC34D10D83
5A85536395B3
38FCF33072E0
C8B2F9456B8D5897
A12148D0773590AD
97F5DA640B18
E827F982DE18EF87
2CECBC323E31
6D44B5AAF464
9216EEE5B677
6202A38F69E2
5B59BCC4321E
25428EF25C100DF7
4D57414C5648
010203040506
B312E56ED250
C314E31A670D
2340CBD61A71
541C417E57C0
B46DFB93B584A506
AD674E4ADB79
4118D7EF0902
704A81DDACED
BD463C3693A4
706101BBEAB5FE1B
29A791829013
84A35A698E93
00F0BD116D70
CAC7490304A15C28
8C32D0AE3DB7
A593071D4758
5CBA3CEE351A
DEA8098D6E51
67E142E32B7DF380
73EA81968900
8C97CD7A0E56
80BB8436024C
D8809EB9BA7D
DA705702248C
76939DDD9E97
7B118EABC7BB
D4FE03CE5B09
31646241686C
86A60CBE6CC4851B
84ABDE484425
E19504C39461
04A15C28B85EDFB5
3AD0EE1031A9
B8B1CFA646A8
1C2316079532
9EEE39E00CBB
000000000001
A920F32FE93A
6307417353C1
F66224EE1E89
C608E13ADD50
563A22C01FC8
1BAB19D01495
11223344
CD212889C3ED
1565A172770F
0271B7C4B015
BD32E4EC7080
E341574B2E32
4BB747E48C2A
DFB5157C2736C901
97D77FAE77D3
DDDDDDDDDDDD
D8BA1AA9ABA0
1CD3D4E690B7
B9DA40920237
B47058139187
1EDE24ED3625E822
0000000A
22C3AB41B123
8CCA8F62A551
202ECDCCC642
CD14C8553CB9
96D0C3996714
B0C9DD55DD4D
9F6E0B0CB425428E
98A54AD58A43
AD5586744A60
1B4654AE9454
E030F774B72DBC2F
BC7C64828C1D
E045E6309471
BBCCDDEE
B38D82CF7B6C
826DD63B9032
88888888888888888888888888888888
0D8CA561BDF3
636CB69BB10C
8E65B3AF7D22
3D9C3245AE76
314159E0
415BAA0CAB15
819F199AF82DD18E
AA55BBBB
33F974B42769
234E50256146
5C8FF9990DA2
B0000000
66B2F1F01720
8D96A800B21A
EDCE0890472D
7B0DE8504D57
0B764247D00E
C054D06577009ADC
8ED41E8B8056
C81584EF5EDF
195DC63DB3A3
7B0A8AE18817
F72CD208FDF9
DF27A8F1CB8E
FF16014FEFC7
5E56BFA9E2C9
E6600C4D6A44
B839BDC7DC33D5AB
0A906663EE1C
6A1987C40A21
4663ACD2FFFF
E8779E40450E
0AF244E13FB60E84
16B256B79DFE12DE
02974B9786C9
0BB8414CB6EA
D2A597D76936
911E52FD7CE4
EFE808F3FD6E9C01
E7004C5EA94A
50642C36DA00
7545DF809202
AB6191DB240A
A6C028A12FBB
235C9338D5B6
D201DBB6AB6E
EBC825C186B3
30B7680B2BC9
0E6478123917
6874E54471E8
49204E3CA169
B292C9554CBA
A78BB575EAC5
5714E9D33034
709311997549
B6DF25353654
DBF9F79AB7A2
E033CA419AEE43F9
02D8A7729ED3
36C54912D10E
08B386463229
CDE668FDCDBA
514B797B2F3A
50265ED9D468
F02B77CC90AA19C7
E38A1C654E82
F09BB8DD142D
DFED39FFBB76
A12000000000
F81CED821B63
2A3C347A1200
B4DACABCAB07
C121FF19F681
A91E2BE6C308
360A08C66042
0CCAD03DDBC6
B90DE525CEB6
04D49C76623B
74A9D174E8639E59
A82045A10949
535508AA6C91
CEB105E65289
97274C21BD6C
34573C1798D0269B
2F904641D75F
BBBBBBBB
A10F303FC879
26C6D38B8257
361A62F35BC9
D4FE03CE5B06
C5ABC0A455C5
55A691710B48
b0b1b2b3b4b5b6b7b0b1b2b3b4b5b6b7
9083158A49A1
89D2C28BE578
BFF123126C9B
573314090BA5
86538085966D
69FB7B7CD8EE
FF9A84635BD2
7CABABB46DFB93B5
07D3DF184370502B
540B15E8019D
0C03A720F208
4436CB060568
5CBCF1DA45D5FB4F # PicoPass Default Exchange Key
5734CD8A65DA
3F7087B191CAC749
C757C15E9E0D
605F5E5D5C5B5A59605F5E5D5C5B5A59              # access control
575F4F4B
3D54B25C0158F2FA
227D16EA455A
75EDE6A84460
15DACCE8D5EC
2B2D2DC3D319
68A99E258692
68C9D33E3735
028137A705DB
1DC5A430FF6A1211
B1A80C94F710
A6CAC2886412
89E00BC444EF
6232C5262CC6
FF240FAD647AB9ED
16CA203B811B
671737BA0054
B0B1B2B3B4B5
0120BF672A64
A8966C7CC54B
A4CD36017CABABB4
257192699E32
30DA7E5F3F43BA81
5554AAA96321
69696969
B5F44686
6A696B646631
1092A12148D07735
7234CC6BD65D
326657A8E9C0
15CAFD6159F6
8A19D40CF2B5
C49288F574929EB8
BF2B03163830E3E9
C67BEB41FFBF
FDAEFFD6204388A3
74772915E24C
397619525709
B79DFE12DE539850
562A4FB8260B
2BAB94372644
3A5D13E05B6A
025ACA1B63A3
5353B3AECB53
62387B8D250D
C554EF6A6015
6B2F1B017206
9FAC23197904
F59A36A2546D
135B88A94B8B
292C2CCD157E
3321FB75A356
4D80A10649DF
891EDA20BDEA
57734F6F6974
554C1617AA1B7DA8
04602A40C037
64E2283FCF5E
5B7C62C491C11B39
2DD18E0C68FDAEFF
DA3379D12773
1A55D4849951
345547514B4D
91CE16C07AC5
0C71BCFB7E72
FEE470A4CB58
61780BCB0C57
83B881F2936B2E49
0DE247593B93
6471A5EF2D1A
2F130172066B
96435BD1D29B
F217AFC12C7E7D8F
0578E317C419
59929C8C0863D32B
6AA40421D23C
912E1CB2C054D065
941FBD59936949B4
B1A862985913
AE3FF4EEA0DB
BE5695316117
5106CA7E4A69
234323BC2992
77C1CE0E7674
8534A6CE0911
CDA811AD5055
43464F494D48504E4C4359454E528841                    #NHIF
A7395CCB42A0
703265497350
77646B633657
5C5752328A47
CD16EAB946E9
E8639E59929C8C08
D144BD193063
2FE3CB83EA43
43166BCA83EB
5BA9C1A0FDAA48B6
0CE87813E389
7665544332211000 # key1/Kc from PicoPass 2k documentation
E4821A377B75
05F181493D660C2A
6F506F493353
B2174092CDC5
82D58AA49CCB
6B07877E2C5C
1B9E00780953
78527086A60CBE6C
B7C106FCFCC8B2F9
9CF46DB5FD46
460722122510
157C9A513FA5
1E3C71643766
C1A0FDAA48B6010B
9A2A1092A12148D0
57D7D4D746DA
48FFE71294A0
9E02910C691A
564777315276
152FD0C420A7
482562E49EDD4B30
9982E3E6A4A0
381ECE050FBD
70758FDD31E0
A421D7A04C4B
5C100DF7042EAE64
1ADC527D5BDA
D61A3231790D
C849133B7CCC
60B20ADA0471
22222222222222222222222222222222
71171A82D951
243A41574A39
7A396F0D633D
403F09848B87
ffffffffffffffff
FFD46FF6C5EE
5EB0EA0A9412
9FC9493DBA2A52E3
D3A297DC2698
DE41BBD7E68D
74A386AD0A6D
0DB5E6523F7C
43CA22C13091
9E0E9D983B9A
B4A6A2A566B839BD
4CA74DAC7C01
B0805C191424
BC2D1791DEC1
7016ECD01559
4174096CD12AF4C6
E576BABC3D54B25C
A8EACC5B7C62C491
2381B8214025
34EDE51B4C22
C491C11B398C000D
919402EC39CB
F41DAF58B20C8B91
1523A1E39D03
CE7712C5071D
57D27B730760
200D45263629
A992B5E070C1
929C8C0863D32B98
FF9F11223358
5583698DF085
A1BE42A15EDE
1795902DBAF9
2E71D3BD262A
333333333333
B93A6432E51A
03C34821DE9A
6D801AC74572
1064BA5D6DF8
10E78530CB941FBD
422E07D3DF184370
AD2BDC097023
4A65D627625C
1A8619858137
C1ACDB8C1890
5E45A227B391
C798A8465ACB
90ADFA99DBA4CD36
C99A004E6133
9E3779B9
E98075318085
B12000000000
82908B57EF4F
735C2AB60A97
28DAA6C5529FC949
A66A478712EA
6B0454D5D3C3
7F33625BC129
22A1245CA266
7564993C91C7
A1AEC2B58BBA
AAC0C35C43EB
260480290483
1CC219E9FEC1
509359F131B1
0F35D5660653
1F107328DC8D
32A7F5EAF87D
0F318130ED18
9C2F537FA5DF1FC7
BA8DEEE045E8
66666666666666666666666666666666
4F271149
D0000000
081D1B1C3110
8C187E78EE9C
66584C91EE80D5E5
70D73BE22CDD
873B47C457E6
0304A15C28B85EDF
5261CDDA279E
064d9423938a
D89B5EA419C1
7836593AB838
20188A599582
D8B6BF2B03163830
0380A9A3CBDE
9A677289564D
AF9E38D36582
511E269A9BAE
50520901
7A33D19B7248
09074A146605
F1D83F964314
FBC2793D540B
3AAE07339954
8A3E680AF244E13F
48B6010B1D8BC24B
5EDFB5157C2736C9
FA4E3F0F6404798F
9E7168064993
3C09C971D835
8830379B50B7
72DA8050A38E
01124119AB54
777B1F3A4F4A
AD9E0A1CA2F7
098B48278122
8186CE2B363E
918A67D05479
E592ED478E59
08F3FD6E9C01B7D4
4B9901AEC16E
3BF391815A8D
2F8A867B06B4
3D5D9996359A
D5524F591EED
5B9CA63C4267
30FF6A121127DD42
B231AA398B90
C22E04247D9A
106E2D6E55E6
B14000000000
F00DFEEDD0D0
AFD0BA94D624
13DEBBD810AC40BF
2870E08CEDBA
25E8225BA9C1A0FD
5CCC6D50EAAC
70D9461C5E90
20B51C977E54
BDB576D1E88C
8829DA9DAF76
D106E94A4C3B
7BBC9DC92836
4FA9EB49F75E
85ABD94CD7A9
5C34B8E4A456
744E326B3441
C6E2677DBD2854B8
E9EB2DE57AE9
A00002000021
5032E362B484
40BF3FB59F6E0B0C
34D1DF9934C5
9925893ABAC7
5785EE00049E
4CEE1794E0EA
EE17C426D25E
E444D53D359F
415210E0C6BB
892CB89ACCC6
EEB420209D0C
A9D4B933B07A
75FAB77E2E5B
3BBB7BD8D7B7
82D8E8DDE296
40DABA780B41
1EB0864E9134
D28F090677A1
ACFFFFFFFFFF
B3830B95CA34
0AD0956DF6EE
172066B2F2F0
C748500B6947
45B722C63319
0965220D2ECE
639DB16995B7
CC2517AB2346
4A306E62E9B6
C0EE394D3D95
C8382A233993
B3500C1092CC8904
9232215296B2
7CE836EBD228
05412723F1B6
C427B93DC2ED
A690A817B9D9
E65B66089AFC
BC3B29536A124174
E167EC67C7FF
C4F271F5F0B3
A8DE205120A8
68C312391560
69314718
2C9E9E4D0895
5429D67E1F57
D2926519AC09
F0A3C5182007
AAAAAAAA
26578719DCD9
1330824CD356
D80511FC2AB4
20CC5A00C677
6E7747394E63
70172066B2F0
57CC9D0AA32B
B83092098A7D
dddddddddddddddddddddddddddddddd
D1972D6CE2C3
A61D5137E6B3
3EB914E70076
0CCF691DE6907935
A967E142E32B7DF3
CE95875316C8
EDD4A2EA7493
7BB90D382672
34FCAFA9ED3807B7
A160FCD5EC4C
39A00E856381
46752993E2E9
7038CD25C408
7D56759A974A
D537320FF90E
4EC71DB088DE
9966588CB9A0
DE24ED3625E8225B
4584EACB6087
12A21B5671A8
9302DEB79C5A
1D65FB5D78527086
BBA840BA1C57
186C59E6AFC9
395D38815892
130662240200
5C9BD0AC1DB1
E67C8010502D
61D59C284952
9E53491F685B
FDCB5A52EA8F3090
1FB841DCDF08E576
7DE02A7F6025
26BF1A68B00F
C0C1C2C3C4C5
040047C12B75
7B296C40C486
A2A3CCA2A3CC
9384841B4702
EE5931913A8D
90EB34FCAFA9ED38
0B3690D4B122
8AC3B2ADE77B
6C24F217AFC12C7E
125CD1E8EFE808F3
48C739E21A04
336C8CBA5AE2
18971D893494
FC5AC7678BE3
0529E8827A52
A402B5137D86
A4528B0B361EDE24
72F96BDD3714
5DA57EACA38C
6BAD01EBE736
04064B0CCF691DE6
4186562A5BB2
A777B233A4F4
00B70875AF1D
B7DEC863369D
0708090A
7B1D9A2E22AA
6A6C80423226
B0F02B77CC90AA19
AE64105790EB34FC
CC2AC1AD29CA
E33B66EA2705
FEE2A3FBC5B6
AA4DDA458EBB
D18E0C68FDAEFFD6
CC5646BD7AEB
E4F65C0EF32C
07894FFEC1D6
BE0EC5155806
E5100AC4C6C3
037EE3DE21B7
349A347186D7
B72468A7710D
C1B74D7478053AE2
534F4C303232
7A3E0F5B63FC
A15C28B85EDFB515
30D9690FC5BC
1FC709457A4FE39D
2E641D99AD5B
E70143BE0091
C32634573C1798D0
75D8690F21B6
868A33A44447
3A5834C46513
C01E8740DE38
EB8536C958B2
5A6272CDBE9C
D44CFC178460
87DF99D496CB
11496F97752A
009FB42D98ED
509052C8E42E
A4EF6C3BB692
3D660C2A524556D8
45CE4E504C06
459BC12982B1
3493D84E6317
48706101BBEAB5FE
C443EEC4330D
6E029927600D
78CCDB50C193
21A600056CB0
4B511F4D28DD
BDADE6111218
897B845C2680
2DD39A54E1F3
6B13935CD550
FC55C50E579F
7357EBD483CC
1A72E2337BC3
A2BBCC3B546C
9EDD4B30EAB0F02B
08AE4ECD7CE3
F4A9EF2AFC6D
86120E488ABF
C82EC29E3235
8ACCC7290C8C
4EB8761372EA
564664475726
B598984AD584
0000085F0000
58C908068D67C071
3EA227893101
6A121127DD422E07
BD493A3962B6
B191CAC7490304A1
668770666644
8FD6D76742DC
6936C035AE1B
D9C70CC5818A
765584147990
0490AD0C9283
17197B247A4A
64E3C10394C2
97EB373096CA
ACE07B45C0C5
394181105544
E32B7DF3807F40B0
E1E59574ADBC
B268F7C9CA63
CA96A487DE0B
B37B48D8C1C5
C908068D67C071D9
BD196D0A74E0
18ADAAC2B08B
FD6E9C01B7D4EEBD
B31763D9D0DE
66B31E64CA4B
47170BD112B6
5ACB8043C10C
BFB6796A11DB
F3807F40B07650F2
32E532232C29
0B83797A9C64
4E474434FFFF
8818A9C5D406
3E34909990B5
81E1529AE22B
D4FE03CE5B08
55D1E91B1D35
6D4D29CEB9B5
DB1A3338B2EB
8B0A3B3DCDD4
B069D0D03D17
5D58E7A9482DE675
65857569
84366C6D7781
505249564141
95C013B70D99
9F199AF82DD18E0C
B56EC9A20D28
77E0A57DD456
6135433CC5EA
1D0322005969
23C9FDD9A366
4DEBA10CC85D
09B14E6C24F217AF
94384AC919F18237
00000000000000000000000000000000
77494C526339
153BB53ACE71
03D10A75B56A
C870C98A4E91
A0A1A2A3
7086A60CBE6CC485
6D6E9A6B725D
7076D48D5E49
C95855AE08E8
10000000
C581CA998910
C709457A4FE39D01
763D835BD5ED
05F89678CFCF
F68930789631
4CD3ACABC6A3
2009828E4A21
41B727883B27
30000000
E8028A6DCC90
301C9AA3DECA
0A7932DC7E65
EB3C9732C3BA
BF3FE47637EC
C76C94B495CA
2196FAD8115B
329AC7C59311
D7AC70A05A0C
74A929877793
513C85D06CDE
B0C3B3299090
C1C55A7A99EA
C12C7E7D8F5D58E7
FDA9EC04064B0CCF
AA19C73D0811EEE1
EC070A52E539
560F7CFF2D81
A00002000086
852BEB133D74
AFAAFCC40DEC
274E6101FC5E
BCA2D8118631
37FE2ACD5C793B5B
B1E8B5054DAD
11549C141AD9
888888888888
00000000000B
F5C1C4C5DE34
BC287A74A9D174E8
8EE497C9A869
63B636458E94
7E6545076619
F181493D660C2A52
079B8DA54DB1
462225CD34CF
2DBC2FA15BB30725
CC1B5BD45315
0000000018DE
2E1CB2C054D06577
0267B4922681
B81846F06EDF
3495A04A9270
52E3C648706101BB
7173E199A420
CA3A24669D45
123456789ABC
4D40BC7A44DB
CA968EBEB9C7
D4FE03CE5B0A
3C5D1C2BCD18
DFF293979FA7
434143445649
534F4C415249
ABBA1234FCB0
D55E5AA3406D
4E457854
883803A3360C
4AE23A562A80
C6BC3B9CCB41
7A7469B69C6A
2A45A0D8D6EE
CA679D6291B0
798F9F6C38A8911F
B0B1B2B3
A435DD64AD17
A833FE5A4B55
0769855EEC13
353A7167576B
A50DC0830AA5
89A69E60
243F160918D1
EF875849BC3B2953
D8E2050B1F1D65FB
AFBECD120454
3048EBB8A18E
7A2893B75AD1
B063B209BB20
12344321
8791B2CCB5C4
6BE9314930D8
8AA8544A2207
E4B976AD6687
2953C63E9E58
C5BB2CCCB9C3
C661C4AE1DD1
CE0F4F15E909
94CEEAC5A8D7
33293485AD61
99AABBCC
168DE72B3B5A
666E564F4A44
3C4C95D0A0C7
2DAC030D1AB9
76962C07EC9E
C6A76CB2F3B5
E2CE9A674CBE
6CE210B529C4
18BE810A83DD
3D5EA1C71953
B2C5A2E88304
36CA0101B6DC
B7C344A36D88
736B4A835B2B
C52876869800
E933DA9735C4
D32B98A4793D9C2F
3352DB1E8777
486001404A80
BA84C974B356
0E7D4AC83133
A0B1F234006C
C65EEAE02433
E9203D5BD2DA
E20716902884
A9ED3807B7C106FC
04050607
38A88AEC1C43
2686EE3F87C7
25EE21CDE4B9
6A676C315142
7B7224C1AB79
48D0773590ADFA99
8B028B7E6D60
72913BDAB647
8CEC639E64DC
D5ABE827F982DE18
B1BB19BDD424
4E4175623670
C90B7AD266D3
E5124DB665A6
D023DB35ED05
44B44CAE
8B1B6C705C1A
204752454154
27FBC86A00D0
361EDE24ED3625E8
C670A9AD6066
8AC4317D049B
8D97B475C957
EDC7CEBD4000
491CDCFB7752
1A2B3C4D5E6F
697A8ED07418
C65194543D6B
B7A9DA22E9C6
A06000000000
CCDDEEFF
E0E457054B62
056D4B5D2915
9DA4528CEB8C
D964406E67B4
11428B5BCE08
DEBBD810AC40BF3F
71BC9C9E31E4
22222222
17AFC12C7E7D8F5D
384AC919F18237CC
A0974382C4C5
B6A18CBD4DA6
7DAC0E83D335
97184D136233
310241E1CB36
9AEDF9931EC1
A0A1A2A3A4A5
1E67823C239D50BF
534BB4A6984E
74929EB85B8CE0A0
11428B5BCE09
03D87397E9A8
57AD9604ED24
10510049D725
4146D4A956C4
7B0BA045AB35
269B83E2AFFAB4A6
91F93A5564C9
41DCDF08E576BABC
D313116A45B4
323334353637
58B11E803B58
2B051C90BE82
86EDEABCC357
12F2EE3478C1
A02000000000
354A787087F1
07D7BB0B
372CC880F216
AE13DEBBD810AC40
CFE63749080A
C2A0105EB028
DF37DCB6AFB3
768016001C8D
2AB6536187C7
94552B863E37
012279BAD3E5
7B21781EC649
3CD344A7EB21
779A248E098C
120616C6208E
5C28B85EDFB5157C
2A1092A12148D077
DB5181C92CBE
024988BC4D5E
FE231E5EB656B350
2E6803BE2E11
0CB7E7FC
8ACD6B86EC44
66C9880D1DC2
299ABB519354
0599E014139E
0AB08938E3DA
2B98A4793D9C2F53
B85B8CE0A0D8B6BF
23BAE8DA1AC5
81504133B13C
C11B398C000D9719
67D47C1B6425
30F774B72DBC2FA1
E76962E3B8B4
E2C42591368A
13131313
3515AE068CAD
E7316853E731
1127DD422E07D3DF
E466090D2123
33B54345C32E
0DF7042EAE641057
06FF5F03AA1A
E3E3919444CA
485BEEDBC293
BDACBC287A74A9D1
10DF4D1859C8
B13AE369390C
EED69A391464
6D97408C6D60
FC9839273862
E9920427
2B83FB448CD4
0000014B5C31
A2789E1DD888
EB16B6462B66
AD4FB33388BF
A58AB5619631
B3A4C47757B0
77A84170B574
47524F555042
1170553E4304
47C43D5DD234
2854B8403F7087B1
6CA194384AC919F1
8223205047B6
A99164400748
87927467808B
5A211CE57C4B
32A091B89995
454841585443
B63957593E23
FBF225DC5D58
B425428EF25C100D
A053A292A4AF
6ABD4C4A72D9
D12AF4C6B0015532
9C0630361CC5
29536A124174096C
34B16CD59FF8
ABABB46DFB93B584
35D152154017
BC3D54B25C0158F2
4537282554C5
35895EB472C4
D5629384CE7D
3882719778A1
CCBBAB6504A4
a0a1a2a3a4a5a6a7a0a1a2a3a4a5a6a7
CB941FBD59936949
06CC91829013
58B6AE62DB88
D0269B83E2AFFAB4
D28B2D42DE1A
223e5847dd79
52B26C199862
D4EEBDACBC287A74
08E576BABC3D54B2
31EC44581294
69174742042D
2348251AD23E
48734389EDC3
3DF14C8000A1
111111111111
A00002000036
AA4E4558A9EE
66EC6C67F210E785
6039ABB101BB
b2afbf2331d4
BCCC3A719013
668091829013
63D32B98A4793D9C
09ACEA48DD0D
7D49042C530D
1E1A0DB8729C
207FFED492FD
184B95B4E3C6
982D6054B83D
E8A9E2D87D36
62D6EAA06CD6
FFFFD06F83E3
FA99DBA4CD36017C
97992CE2DD31
9B7C25052FC3
B941A9D99B6C
08068D67C071D91E
C7F4A4478415
C4D3911AD1B3
9BFB6CB4FC45
752FBB5B7B45
A6375E98A5B5
94F46DB5FD46
F4CD5D4C13FF
488CCC60B70A
21B4BE97AE07
A5041E8B8E22
66695A45C9FA
826576A1AB68
6DFB93B584A50647
A6344C0418DC
41B1839829A9
2AA82B4B6711
7544d1652bc9bd43
8DDC91829013
2C6C7957EB3E
5C0158F2FA4E3F0F
051518B3301E
5296C26109D4
A1670589B2AF
75B691829013
6BAAAB1D4589
7AA84B1A527D
3F3865FCCB69
06147D199266
3C1798D0269B83E2
80D62251E20C
C6121BC4A29C
6E6602904925
0849495E1CCA
A8911FC749FE231E
B81F2B0C2F66
822017D8929A
2B77CC90AA19C73D
8697389ACA26
06070809
163830E3E9A967E1
075FCF1860A8
A844F4F52385
E1ACC6742AB7
BF3FB59F6E0B0CB4
E5BE9C989A29
f7ddac306ae266ccf90bc11ee46d513b
A9EC04064B0CCF69
F700BD8E042D
7686962A
1A982C7E459A
B62307B62307
048DE5148DE7
8A55194F6587
418184DBB4A0
55AA55AA
7C2DAC2CC775
3D50D902EA48
45DB3799C150
F5C1B3F62FDA
1A80B93F7107
B50383A32302
F82DD18E0C68FDAE
FE04ECFE5577
5E8943D9A836
EAB8066C7479
911E097A27A9
361F69D2C462
D7744A1A0C44
4087C6A75A96
67CC03B7D577
E222553A59A2
00010203040506070809101112131415
046154274C11
30CCE5ECB397
0734BFB93DAB
0E0AD1796003
940B37939AC6
E092081D724B
68FDAEFFD6204388
B6BF2B03163830E3
C65D4EAA645B
69C1327AC20B
D1417E431949
EEBDACBC287A74A9
A38044A3E18E
B01000000000
BB467463ACD6
4E6F5D912E1CB2C0
B9ED829C22AE
ABCC1276FCB0
EC8CB5758097
B133A4D48757
1DAE8D2CEA5C
A3647146C335
0B361EDE24ED3625
DAD9A48A8C33
38A8911FC749FE23
0DB520C78C1C
1D75E52E76BE
7C1DA11042DD66EC
BB1484CC155D
44074C461042
AC47461358D7
0D6C26AB25CD
3351916B5A77
2142B57D369D
AEAE9E5CE65D
AD97523144B2
0AD8AD0739A6
88888888
B1419B62772C
C4652C54261C
416D21717779
153F449B9226B12E
A430FF6A121127DD
6949B4C15B3FAE7F
AEA5A5A0E46B
3D5C8240B2D2
CB9D507CE56D
D2EB1FB841DCDF08
BBE8FFFCF363
C919F18237CC1E67
71F3A315AD26
29173860FC76
985046F94E6F5D91
A36031D6ECB2
2C7E7D8F5D58E7A9
90AA19C73D0811EE
4556D8E2050B1F1D
D3DC10453857
19920427
1B095E78BB33
957E6EE3EB55
B1ACA33180A5
3AA5AC1CDC21
DF184370502B1617
281499DD16A0
DE1B08C6D94B
9AA1E6CE588C
1C2855ED7A10
0C734F230E13
7E5744EC286C
5726AA3BE37B
73068F118C13
8BABAD9A65C6
A4F204203F56
B30725F2C49288F5
1504C1846399
1BD3119E0363
F3FD6E9C01B7D4EE
6C57CBD51995
E47069DA0C44
4E6C24F217AFC12C
AB28A44AD5F5
3A4C47757B07
536653644C65
5481986D2D62
6847808E63EE
043D8B66D569
8211571B9D16
1B61B2E78C75
8B75A29D4AB2
EF1232AB18A0
20002000
2ED3B15E7C0F
AABAFFCC7612
B07000000000
48644467A214
B2D8485C2460
2E0F00700000
C238E449F725B1510EAA699550CABA16                    # J2A040
B8E87380D361
9EA3387A63C1
8EB64D710C88
D80A37B6D7ED
350928E49A2A1092
F72A29005459
BFC8E353AF63
707B11FC1481
303041534956
7B583D350740
2E4340CC1C63
BB7923232725
1E6CA194384AC919
5038884E4178
100533B89331
01020304
5A060A64C535
91C11B398C000D97
9D0D0A829F49
4757698143BD
2A41BE015C1D
E78530CB941FBD59
F3A524B7A7B3
6A470D54127C
7B7E752B6A2D
316B8FAA12EF
5162797F8E1C
A9D174E8639E5992
C52877867C05
51243648
157C2736C901F3FF
ED14D0A14B0C
A506370E7C0F
8E0EC762E883
C49DAE1C6049
1B0EC69A1DC5A430
36E1765CE3E8
56D8E2050B1F1D65
478947735B45
27F982DE18EF8758
CE26ECB95252
A22AE12C9013
42454C4C4147
1E1873799CD7
7650F272EDF90C1A
180DE12B700E
438099331C1E
438C3CD95B58
67AA98E362C9
18E566417E5C
D6C075899D06
D97E55B1816A
015532FDA9EC0406
34EB673C863B
3A92FA438BD3
0B8B21C692C2
220D815D366A
2CCDA1358323
038B5F9B5A2A
53BD03DEA5C9
ADCBD453B232
5ADC25FB27181D32
D91E0795BEBA8A3E
86AFD95200F7
5876E1D34183
686E736F6E20
AC7A0B47B03E
DD61EB6BCE22
60E0C84ADDEE
569369C5A0E5
B5B763215C82
852C2B72659D
C3C88C6340B8
04B787B2F3A5
28B8685B1B22
CE8BFF3728EE
BC1CD369549E
ACB906631D8A
4857DD68ECD9
302D5D37342B
51BEDBA005E5
FE12DE53985046F9
6B30B6B0925D
30CB941FBD599369
AB9BCA200547
B3E6FBE030F774B7
27743B5A5736
BEBA8A3E680AF244
120D00FFFFFF
E902964DA28D
4201A36DE766
A22AE129C013
EAD0E31A6834
EC04064B0CCF691D
8627C10A7014
A14000000000
D810AC40BF3FB59F
661ABF99AFAD
508BE54D326E
1E0795BEBA8A3E68
5BC64C42281C
E7A9482DE675C83B
D7A405AD9E4E
5b7c62c491c11b39 # from loclass demo file.
21C7650673CD
9B7603341727
680AF244E13FB60E
B2F170172066
7D6E7AF43C97
B3FA87DB0C45
314B49474956
9AFEE1F65742
13B91C226E56
ECF751084A80
DAC7E0CBA8FD
F8526D1A8D6D
39A83A32909B
124578ABFEDC
D99C3222A190
6EFD46EFCBB3C875
7909427EC8B9
1CB2C054D0657700
75CCB59C9BED
1E6A67909B8D
929EB85B8CE0A0D8
25DB996D56ED
0D5C5B8BCC5B
20628CA7D92D
CBBAD2DA0EC5
48C860AA4B74
89AA9D743812
219529A90EDD
222222222222
577C528E786C
AC0E24C75527
1E2DE60A477A
47524F555041
26D787613684
8502EE9A7E85
68D3F7307C89
B6614EBEAAA2
117E5C165B10
6CEC27647CC0
1ACD5433BBDD
66F3ED00FED7
16B4442EAE97
34D71347877E
796630ED27B3
B18CDCDE52B7
AEA684A6DAB23278 # AA1
151F3E85EC46
DA898ACBB854
2058580A941F
B12E8C61C8D31E6C
3CE887B9D091
7B8FB4A7100B
BE5D8EBA120D
9976E6ADE0C9
8931DC3733D4
B89BD135E935
A4B30D146A01
D1CEEC977644
453857395635
1F1D65FB5D785270
0BE811559D69
41DDC3A48EEA
AA55AA55
07176713C0ED
57721566
36ABF5874ED7
D40E935117A2
A34DA4FAC6C8
E93A2E63189D
B578F38A5C61
003CC420001A
3A818D01E093
C151D998C669
81493D660C2A5245
123A082E2AEA
DE6E04AE4475
AE52116C234C
00BB79731B00
D6C3503456C4
5570D22DC66B
D6E23B4E75C6
D1E8EFE808F3FD6E
B8937130B6BA
55555555
D31463A7AB6D
32F093536677
14A22C112090
5A1B85FCE20A
AEFFD6204388A3C0
75C83B4CCC65BEFA
7175E14A4D62
99999999
D075379A21A6
CD4C61C26E3D
70000000
4BB29463DC29
D0773590ADFA99DB
8A2423E9D100
518DC6EEA089
93B260DBC70A
764B38E2903D
2B03163830E3E9A9
A541538F1416
49FAE4E3849F
74A778236D5A
F53E9F4114A9
A8844B0BCA06
32C1BB023F87
456666456666
9EE95586D024
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
45E599AE38EA
CA2393DB246C
066C127C208D
668082242328
BB52F8CCE07F
61B701698050
5EFBAECEF46B
89ECA97F8C2A
62EFD80AB715
529CE44BEBCC
A745AD7D6789
3BB4B3025B79
81B519418C3E
95E1C233EDE2
7c7d672bc62e
A07000000000
0EC69A1DC5A430FF
8BA1226EBA21
33333333
9A720CBD7BB1
A705087E89A8
B5FF67CBA951
BDB3E6FBE030F774
9A8389F32FBF
54726176656C
303B30A460E8
C38197C36420
5C43A75C65A0
4EC2B23135AB
576DCFFF2F25
096CD12AF4C6B001
FFE04BE3D995
0ED7846C2BC9
8B42B6D64B02
BD401D63C3E9
2736C901F3FF240F
49681C20A00D
500C1092CC8904B0
AA0720018738
7F40B07650F272ED
A9258D6B06B5
0F385FFB6529
E77952748484
C749FE231E5EB656
963355B437FE2ACD
BB850C7E4934
587EE5F9350F
C4104FA3C526
E85B73382E1F
A5A4A3A2A1A0
A7072D4324C7
5C598C9C58B5
E4ACA0ADBA0D
96759A0D5566
8022E705B640
0C270BC0BDDC
7164042BA89E
5A36898CA7C5
CE09B3870EA2
B4166B0A27EA
974A36E2B1BA
FC80E88EB88C
532DE5E7E0E9
3A70C7A4BCE4
42E32B7DF3807F40
7AB9ED2DC9153F44
BD454BD52792
51ED5833AB6D
B210CFA436D2
8AC04C1A4A25
EFCB0E689DB3
4E3552426B32
42EF7BF572AB
56B3500C1092CC89
E9C11D763BEC
62C491C11B398C00
484944204953
6D23D505D2B1
85DA8099CD7E
6900A069E3D7
56C944B04618
2B16173C05F18149
99207A00AA4A
9D50BF09D9125CD1
4CE1972E090C
0F230695923F
00E8C85DB172
52A843082BB3
0E62E6CAC3D3
000131B93F28
1D67A32045ED
BF23A53C1F63
C24B16B256B79DFE
57029D991123
DAEB5D63920B
9752A6B316D5
1494E81663D7
385D498B5390
7853D464E2A4
A3A580799BB4
C189A791A85B
2595E5B1DE76
47CD4AC26271
7B9D3A6BD061
37D4DCA92451
444156494442
20C166C00ADB
94CD6A4B6391
AD647AB9ED2DC915
E0A0D8B6BF2B0316
8E26E45E7D65
7A3CDAD7C023
23789D9ADD0D
C5529FC9493DBA2A
99243E754CB8
5AAD6814E68B
57D83754711D
D94646A4C65B
4152414B4E41
2AFFD6F88B97
61A83DB6554C1617
30D6324910AB
9636EF8F
645A166B1EEB
024E4E44001F
00112233445566778899AABBCCDDEEFF                    #TI TRF7970A sloa213
C5CFE06D9EA3
52AA1B6BB3FB
23A5BA53AD4D
C045544AD1E4
C3D275A9B8C7
8FE758A8F039
95ABD3A7C631
823C7CC6E06A
E46A91829013
1042DD66EC6C67F2
1532A2511A8B
098A92C3660A
B35A0E4ACC09
B3C3C6E4395B
24501C422387
E13FB60E84963355
23D4CDFF8DA3
44449507B736
7413B599C4EA
55430B5318E9
0DC9143735D1
CDB4EEE02E14
5C1D3898D537
5C83859F2224
70BB123776D6
37CC1E67823C239D
420445087613
5BA03479BB8C
1C1250A36A13
57784A533069
A00027000099
740E9A4F9AAF"
3yTVUhBK,Untitled,Rodunskiy,C#,Wednesday 8th of May 2024 10:05:49 AM CDT,"using System;

namespace CSLight
{
    public class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();

            int number = 1;
            int two = 2;
            int power = 0;
            int maxNumberRandom = 100;
            int numberRandom = random.Next(maxNumberRandom);

            Console.WriteLine($""–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ: {numberRandom}"");

            while (number < numberRandom) 
            {
                power++;
                number *= two;
            }

            Console.WriteLine($""–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å –¥–≤–æ–π–∫–∏, –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—è—â–∞—è —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ: {power}"");
        }
    }
}

"
r0susUFL,Untitled,Nil000,Email,Wednesday 8th of May 2024 10:03:48 AM CDT,"Myip.ms official X (Twitter) account: myipms
They're putting everything on the site on sale $100 for one product, limited to the first who dm them"
QwhuhF7T,the very best minimax with 993 and rate quota fixed,max2201111,Python,Wednesday 8th of May 2024 10:00:52 AM CDT,"import chess
import time

def ten_moves_rule(board):
    """"""Custom rule to evaluate a draw condition based on the last ten moves, considering no captures or pawn moves.""""""
    history = list(board.move_stack)
    if len(history) < 10:
        return False

    for move in history[-10:]:
        if board.is_capture(move):
            return False
        if board.piece_type_at(move.from_square) == chess.PAWN:
            return False
    return True

def evaluate_board(board, depth):
    """"""Evaluate the board state for minimax decision-making.""""""
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 1
    elif board.is_insufficient_material():
        return 2
    elif ten_moves_rule(board):
        return 3
    return 4  # Default heuristic if none of the above conditions are met

def minimax(board, depth, alpha, beta, maximizing_player, depth2, printed_depths, position_count, memo, start_time, last_print_time):
    current_time = time.time()
    if current_time - last_print_time[0] >= 1:
        elapsed_hours, remainder = divmod(current_time - start_time, 3600)
        elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
        print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
        last_print_time[0] = current_time

    position_count[0] += 1
    if position_count[0] % 1000000 == 0:
        print(f""\nProzkoumano {position_count[0]} pozic."")

    key = (board.fen(), maximizing_player, depth, alpha, beta)
    if key in memo:
        return memo[key]

    if depth == 0 or board.is_game_over():
        eval = evaluate_board(board, depth2)
        memo[key] = ([], eval)
        return [], eval

    best_eval = float('-inf') if maximizing_player else float('inf')
    best_sequence = []

    for move in board.legal_moves:
        move_san = board.san(move)
        board.push(move)
        sequence, eval = minimax(board, depth - 1, alpha, beta, not maximizing_player, depth2 + 1, printed_depths, position_count, memo, start_time, last_print_time)
        board.pop()
        
        if (maximizing_player and eval > best_eval) or (not maximizing_player and eval < best_eval):
            best_eval = eval
            best_sequence = [(move, move_san)] + sequence

        if maximizing_player:
            alpha = max(alpha, eval)
        else:
            beta = min(beta, eval)

        if beta <= alpha:
            break

    memo[key] = (best_sequence, best_eval)
    if depth2 not in printed_depths:
        printed_depths.add(depth2)
        print(f""\nHloubka {depth2} prozkoum√°na, ƒças: {time.time() - start_time:.2f}s"")
    return best_sequence, best_eval

start_time = time.time()
position_count = [0]
memo = {}
last_print_time = [start_time]
printed_depths = set()
start_fen = ""7k/8/3Q4/5K2/8/8/8/8 w - - 0 1""
board = chess.Board(start_fen)

print(""Poƒç√°teƒçn√≠ ≈°achovnice:"")
print(board)
print(""Poƒç√°teƒçn√≠ FEN:"", board.fen(), ""\n"")

sequence, final_score = minimax(board, 14, float('-inf'), float('inf'), True, 0, printed_depths, position_count, memo, start_time, last_print_time)
print(""\n\nOptimal move sequence:"")
for move, san in sequence:
    print(""Move:"", san)
    board.push(move)
    print(""Board:\n"", board)
    print(""FEN:"", board.fen())
    print(""Evaluation:"", evaluate_board(board, 0), ""\n"")
print(""Final evaluation score:"", final_score)
"
R17Aprcm,mfc_keys_bmp_sorted,chizoba667,JSON,Wednesday 8th of May 2024 09:54:42 AM CDT,"002DE0301481
004173272D18
0058A4884CA5
00BAC32761D8
00BB79731B00
00E8C85DB172
02096124DA70
024988BC4D5E
0271B7C4B015
028137A705DB
02827C286AB4
02C10DA600D0
0340643D5E27
037A5DA4682B
037AC43CBD9D
037B9B8AA219
037EE3DE21B7
0380A9A3CBDE
03D10A75B56A
03E8CD22E691
04109ED8EA79
04361330B35C
043D8B66D569
045E5588845C
048DE5148DE7
0490921D0194
04B717BD92EB
04D49C76623B
051518B3301E
0529E8827A52
052B16064085
05DC4016B500
06124317A9A6
06147D199266
0670AEB833CE
0686A9E6D6E0
06A34E5E6639
06B78AD0C4BB
0710E7818AB8
07121B8C633A
07176713C0ED
0793533A5087
081D1B1C3110
0849495E1CCA
09429512046E
0966C3B28E04
098A92C3660A
098B48278122
099672009EEA
0A7632943926
0AEE126549DA
0B3B8C2833BC
0B733C13E2C9
0B764247D00E
0BE811559D69
0C208AD4E4B3
0C270BC0BDDC
0C5D782CB183
0C82C94EB11B
0CCDE948878A
0CCE39820AAE
0CDE3E716B32
0CE06C96DB4C
0CE87813E389
0D3385CEA152
0D5C5B8BCC5B
0DB0A87AB882
0DE247593B93
0E0AD1796003
0E62E6CAC3D3
106E2D6E55E6
1096A7830C82
11549C141AD9
116A92C793D6
116C31526819
11C68052AAE9
1234B5BE8E78
1268C7D104E1
12A21B5671A8
13359D5AE9A5
1426EC62BB6C
144489B1056E
14A22C112090
14C9BBB5361B
14EB6286AC57
14EE72B27223
153BB53ACE71
157B03405B38
15A45083D24E
15DACCE8D5EC
16124677BBC5
16373A44D5D7
1663659384DC
167828B6105C
16B25A453093
1706B1BE25C7
171B15888483
17BC8EED9A0C
17C6299D5A37
17E9C4C416EB
1804087C7166
1841CC4E3E79
18AB05761CC5
18ADAAC2B08B
18E566417E5C
191390328752
1A47959E7DB4
1A9A970CC370
1B095E78BB33
1B1717043D2B
1B1A054566D9
1B4654AE9454
1B9CD1ED3420
1B9E00780953
1BB6A9CE71E2
1C1250A36A13
1C2316079532
1C2855ED7A10
1CD1AE73CA8C
1CD3D4E690B7
1D0322005969
1D09B23EB116
1D67A32045ED
1D89D900968A
1DAE8D2CEA5C
1E1873799CD7
1E60CE7C5179
1E6A67909B8D
1E8516585792
1EB0864E9134
1ECE3D04A020
2009828E4A21
200A6A3AA65D
20188A599582
20267CB20256
20628CA7D92D
2077C980EB2E
2089B5D68B27
209481EC6256
20B6691C64B1
20CC5A00C677
211473555436
2170E9D0D448
219529A90EDD
21A5B6481B7D
224A308017D1
227D16EA455A
22A1245CA266
22A95CB798DC
230E26964171
231173B68E46
2332BB9A2452
234323BC2992
234E50256146
235C9338D5B6
23789D9ADD0D
23997DD240AB
23A5BA53AD4D
23BB58853461
24CAD4153036
24CE79506842
25228ED714BC
257377227B34
2584287A0174
2616192EEB22
265C03B50877
26D641E834DC
27073B57132B
279060E3DEE9
284BA0A0A29C
285C6604C5B4
28B20331245A
28D042242A83
28DDD4C3E9C4
292C2CCD157E
299ABB519354
2A41BE015C1D
2A4A55052A51
2A94CBCD7A6E
2AB6536187C7
2B2D2DC3D319
2BD607CA70B2
2C6C7957EB3E
2C9E9E4D0895
2D2A97DD45E3
2D41850A8AA6
2DAC030D1AB9
2E12426D8847
2E25AD1D6D8D
2E2E85E0E6C9
2E4340CC1C63
2E6803BE2E11
2EB24B573DCD
2EC6450A47C7
2ECDA9A5EA96
2EDE1C155023
302D5D37342B
303645E47667
303B30A460E8
3048EBB8A18E
30BD652BED24
30CCE5ECB397
310241E1CB36
312670228372
319E8895EAB5
31E3A933BC4A
3250D2E661DA
32560224418D
32589E221D10
326657A8E9C0
329AC7C59311
32A091B89995
3312C094BD20
336C8CBA5AE2
34240649314A
3493D84E6317
349A347186D7
349BEAC5210E
34A939B49EDC
34CC7E36C8C4
34D71347877E
34DC25B4D0CE
35895EB472C4
358A6A398211
360A08C66042
36306A9CA571
37284428A250
377EC8A78B8D
37BD90A68613
37E602347133
382DE6AB2D1A
385D498B5390
38B67589E47D
393CCCCCDA4A
39682B3E10B5
397619525709
39A83A32909B
3A5834C46513
3A70C7A4BCE4
3A818D01E093
3AA5AC1CDC21
3AAE07339954
3B4497052B42
3B784087DB2D
3B86A20C16EA
3B8E321AB1B4
3BC4A3099B0D
3BC741376E71
3C4C95D0A0C7
3C84B55A5E54
3C888A88C59D
3D5C8240B2D2
3DB004172BE7
3E23271C1C15
3E3188294ED1
3E84144A770E
3EA227893101
3EB914E70076
3EE6D4A85643
40DABA780B41
4119340759A2
415210E0C6BB
416D21717779
41B1839829A9
4201A36DE766
4261A795D5A7
42AA0B29626E
430265958BEB
4317C5C16EAD
431D799E0C89
4342794AD7BB
4387ADE263DB
43982124C310
4436CB060568
44449507B736
44E858C82975
459BC12982B1
45AE5DDA9830
45C414CDC347
45CE4E504C06
461744C8EABD
46D012CA3BEC
47170BD112B6
47C43D5DD234
47CD4AC26271
47D410D1C7C4
4808C5AD0115
485BEEDBC293
486001404A80
488CCC60B70A
49204E3CA169
495657C78147
4970714D53D9
4AA715A0BBB4
4B9901AEC16E
4BE0B912A5A3
4CBC34D10D83
4CD3ACABC6A3
4CE00134DE1E
4CEB27151C49
4D02A3D7CE48
4D13683C7960
4D1A263BA48B
4D23919463A3
4D9763C083D9
4DAC8EE52C68
4DCB89C7B2E6
4DD9D9B637C4
4DE6CB63A920
4DEBA10CC85D
4E232A8C2E30
4E2879A411E7
4EA7B0BED74B
4EB8761372EA
4EC2B23135AB
4EC71DB088DE
4EC9AB4B5519
50179E461EE6
50265ED9D468
5047DC2975BE
508357498162
508BE54D326E
510A8C52AAC4
511335CC92CD
518229589A81
5184D04315D7
51B4AE31B246
526EDB918BEE
529CE44BEBCC
52A843082BB3
52AE9A909674
5313E9079489
532DE5E7E0E9
535508AA6C91
53691569B669
540A5B789761
547B86E57596
54C649075B57
552249203848
55430B5318E9
5570D22DC66B
55710879E113
55D2E4AC0446
56207539825A
564664475726
566441C5C28C
56A7930913C3
56C944B04618
56D455A8BBEA
5726991C8C28
5726AA3BE37B
573314090BA5
577C31903867
577C528E786C
57AD9604ED24
580C377283C7
587329CE3EBE
587C34557B36
58B11E803B58
5902E4DCC95D
5A060A64C535
5A36898CA7C5
5A4740D952EC
5A6ED7966868
5A99578CAA13
5AAD6814E68B
5B065568048A
5B6CE0B3AD0A
5B70E0B11758
5B926E3751EB
5B9CA63C4267
5BDC1391B289
5C1D3898D537
5C34B8E4A456
5C36456EA1E5
5C43A75C65A0
5C5752328A47
5C9D20250D74
5CBA3CEE351A
5CD5E98A2864
5CE0EB9C01B6
5D384E6A4145
5D9DB8445155
5DE8717BB640
5E1A4EE98748
5E45A227B391
5E8E50B3048B
5EB0EA0A9412
6032C47B7676
60E0C84ADDEE
612A447A2149
612D81821854
616B820EAD01
616D75A4A022
61DE2B085AC9
62312EC272A0
6232C5262CC6
62B7C7C9B0D0
62C531C6E29C
63E6AAAB4433
644ABCC3DD12
64AE7BEA1784
6515B38077D6
65972038CC25
65E120DE5E55
66141DDE8320
66718BD91332
668082242328
668920AEE063
6696C4332D46
66C9880D1DC2
67150CB11E95
671737BA0054
673551D0A99E
676D682C4336
678B98AA2E86
6847808E63EE
6887A122AA62
6888C514DEAD
688BD5B7B4E9
68A99E258692
68C312391560
68C9D33E3735
6900A069E3D7
690155BE8D8E
69174742042D
69B9CE233517
6A0B123D7595
6AB8E2B49E25
6ABD4C4A72D9
6B1CC539A1B2
6B30B6B0925D
6B638C1C950D
6BAAAB1D4589
6BAD01EBE736
6BB4ED5E1682
6CA178E036DA
6CE210B529C4
6D23D505D2B1
6D3CBD12BC6D
6D83563EB521
6D98AB9CCC71
6E3D7366E78C
6E5582237608
6E6602904925
6E77B8EB6444
6E978A7B16C6
6EEC05EB651C
70284824B26C
702CDACE0C14
704E1B85BED8
70BB123776D6
70CCC3A2D7C0
716A747CB931
7173E199A420
71BC9C9E31E4
71CAEEA3B771
71D8BA423D55
72253C7DD951
7260377CD286
7280858E8B20
72913BDAB647
72B5B87BBC6E
72C83B1D098A
72DA8050A38E
735C2AB60A97
736B602A93D9
738D7833E7DE
73E7B22D6E54
74133B1E2DED
74A929877793
74E3670C045A
7531E3E2A41C
7542A9B65EB4
7564993C91C7
760ED0AB626E
762E0E021E38
763D7E6BB40E
764B38E2903D
768016001C8D
76A616C3D42C
76AE99D9A294
76BAAA710D25
76E3B23696BC
77322DD2E184
77B40902B6D9
77C0AC14972D
77C1CE0E7674
77D7B7E2C8BA
78279397A68E
7836593AB838
783859EB51A6
78CCDB50C193
7932684154AE
79604362370E
796630ED27B3
799E4E270953
79A00573947A
79B798D66B01
7A0455D0A7EC
7A33D19B7248
7B0A8AE18817
7B0BA045AB35
7B0DE8504D57
7B21781EC649
7B7224C1AB79
7B90C2BA9B23
7BB90D382672
7BBC9DC92836
7C09DC408C47
7C418B493454
7C491D518242
7C7A86CC727C
7CE836EBD228
7D49042C530D
7E5744EC286C
7E680A48C383
7EC45CCEC35A
7EDADA19EB57
8005BD088847
8022E705B640
8031E3565825
80499BAA5959
807466CCBAB5
810518578380
810D24CB13CC
812B02C34A64
8163A5DDE1CD
8186CE2B363E
81DE6062B9D7
822017D8929A
8247C78188C5
8270D538D5E8
82D8E8DDE296
831207CA6E8A
83378A077357
83A05B477535
840160379EEE
84044BAB78A7
84366C6D7781
8442CC9AA777
8470AAD30447
8498740493BB
84A35A698E93
84ABDE484425
84B24DBB9A67
84B723B2A237
852BEB133D74
854501E98239
854A0ED2E77D
85A066D39785
8619557091AA
86228C3742A4
8637BB3BA795
8642D9310B46
86538085966D
86EE9C410811
870A042C1B34
873B47C457E6
873CE44DDC6B
874D123262E7
87513C960770
877641436923
878A091B74B7
87927467808B
88C2E39B5990
88D252AC1A8A
891EDA20BDEA
89267DEE07ED
892CB89ACCC6
8A2423E9D100
8A6BC2E3811B
8A8EB5771EE9
8A906B4B3211
8AB21B524C5C
8AB823BDC2AE
8AC3B2ADE77B
8AC4317D049B
8ACD6B86EC44
8AD966CA3B4D
8B0A3B3DCDD4
8B1B6C705C1A
8B1C75E27153
8B2A5E0332A1
8B6216E412DB
8B7CCA9DB004
8B9999AE9703
8BABAD9A65C6
8C32D0AE3DB7
8C99807368A5
8CC1133D7D5B
8CD2C872187A
8D0563B86DD4
8D43D81E37B4
8D96A800B21A
8D97B475C957
8DA62EC0C524
8DACA1BC0636
8DE3B131D728
8E55316D3B3D
8EE497C9A869
90210DDAB57D
9026977EB8A6
903AA4305025
9083158A49A1
9092D12E7967
90D8713352D1
911E097A27A9
9140EC087241
918A67D05479
919B1D357E91
9210BBA2AB26
9224B6555E30
9226D4D1236A
922E7955CC67
929CC86B1B26
929E1556110E
9302DEB79C5A
9384841B4702
93B4BD1CB47C
93D985D55712
940B37939AC6
94673AE73823
947A8147E0AE
94CD6A4B6391
94CEEAC5A8D7
95ABD3A7C631
95E1C233EDE2
9607AE17AD09
960C98566E52
96435BD1D29B
965D66E19245
965D72659982
9695167B4149
96D0C3996714
97274C21BD6C
973186B345BB
973A28C983A3
979686C51AB6
97992CE2DD31
97E9D0C89DA8
97EB8A44C49D
98314DC363C5
9860DC044565
988D023C15A5
9917BDA7B4D7
9996A233442A
9A2132B5B625
9A694755A978
9A7911ECC275
9AA1E6CE588C
9ABCCD2AE7C7
9B39A60D3841
9C0630361CC5
9C4E19AB64B1
9CE96BADE4D8
9D442B28BD11
9D4C35AE1A08
9E02910C691A
9E46407C9024
9E74D104ACEA
9EDD416A7912
A026642D13AD
A12908B38536
A16EE9666D5A
A199132A4043
A1AEC2B58BBA
A1BE42A15EDE
A1D0844C2C63
A1E0103A1879
A253602B9445
A2B019B46CB9
A2BBCC3B546C
A2C325A73A9C
A2CB60E815A0
A314B97C1A6A
A3647146C335
A3A580799BB4
A3D30CC8EB97
A402B5137D86
A42158CC74B5
A435DD64AD17
A4693D21013B
A479A91EED49
A4B30D146A01
A5142D626200
A54056E87CBB
A57DBD287491
A588C918E327
A593071D4758
A5CC0EE7B9E3
A6375E98A5B5
A666347B3B4B
A6A203994202
A6BAE1A1520D
A6E9885AA49D
A705087E89A8
A7072D4324C7
A745AD7D6789
A750456E7C5E
A783A8774651
A787C822020C
A78BB575EAC5
A7905680A254
A805534D84E9
A86C2595A1C3
A89903B6ADDB
A9182707A219
A9391782A846
A96B08E3A50B
A98DEB0733C9
A9C37CE71D23
AA2D69C757D9
AA4E4558A9EE
AA6C835C9124
AAC0C35C43EB
AB30CB2CB354
AB6191DB240A
AB8953D3560C
ABBB521319E6
AC47461358D7
AC58C25A1559
AC7D4B201D92
AD061A23287D
AD105D52DB36
AD4EA84D7185
AD5038D15490
AD97523144B2
ADB24E78784B
ADCBD453B232
AE516A187825
AE52116C234C
AE817239CAB5
AEA5A5A0E46B
AECC93678543
B0452769A83C
B04D71906C60
B0805C191424
B09172DDBE43
B13AE369390C
B14080E570D1
B1419B62772C
B14775DEA2E2
B188BA649EA1
B1BB0DB95C67
B1BB19BDD424
B1E8B5054DAD
B1EBB537CC0D
B2174092CDC5
B2554CC8AD6E
B2C5A2E88304
B312E56ED250
B37B48D8C1C5
B39C699CD208
B3B121208E34
B3C3C6E4395B
B410B958C3B8
B4204546A74E
B45171C5A67D
B4B103E693ED
B4DACABCAB07
B506567A2B84
B51083D5C2BD
B54D7674CB90
B570E5EA1DA3
B598984AD584
B5D7E1135821
B60D053A36D9
B63957593E23
B64558CAC0C9
B68175BCA864
B6CD1A3EC5BC
B72468A7710D
B75176C82A8B
B7AA0CA5D94A
B7B9D7E523B8
B808D87AB75C
B93A6432E51A
B941A9D99B6C
B9DA40920237
BA6C2E10086A
BA7384AB949E
BA8DEEE045E8
BADC2149EC42
BB1924266B36
BB41640E6340
BBB475DB2B03
BBD4C4699719
BC0B2C897267
BC7BEE6B71C4
BC8B21AD8802
BCA2D8118631
BCB7A7006400
BCBC6637499B
BCBD2B8BE4B3
BD213E28C568
BD32E4EC7080
BD401D63C3E9
BD463C3693A4
BD749E85586A
BD7CA11B9551
BD96355CBE36
BD9E6EB7B524
BDADE6111218
BDB576D1E88C
BDB5DC09C522
BE19C75D6B7E
BE5B3ED935AC
BEA20C972E70
BEEB4A159B37
C01E8740DE38
C0411C28857D
C045544AD1E4
C04660B76831
C0C4CA21B876
C0E0E092C8B4
C0EE394D3D95
C14601C6B411
C16EBAE928B2
C189A791A85B
C1ACDB8C1890
C1C55A7A99EA
C1D72A47755A
C1D8B91D65AA
C1E6149B386D
C22D8E2B1E37
C23E999B6298
C314E31A670D
C3D275A9B8C7
C3EE19B61C89
C427B93DC2ED
C443EEC4330D
C477B966D328
C4C6CAE4784C
C55875BCB82C
C581CA998910
C5ABC0A455C5
C5BE33E6B1E2
C629E0D34581
C65194543D6B
C67B8E869D90
C6BC3B9CCB41
C7034BC581A6
C748500B6947
C757C15E9E0D
C798A8465ACB
C7B6702AC17B
C849133B7CCC
C870C98A4E91
C90B7AD266D3
C90D996C3A2D
C953797CCE61
C9639352EEC8
C983685AA86B
C9CCA6D095A3
C9CE81D47EDB
C9D449AD9970
CA0D9CCC4C38
CA277AC09859
CA56EB045188
CAB92B865BAD
CAE8572C2657
CB1CE185575C
CB2ECC3D9C22
CB642A081A89
CBBAD2DA0EC5
CC1B5BD45315
CC2C02300D34
CC559969D0CC
CC5646BD7AEB
CC6A93BD93D1
CC726DD08765
CCBBAB6504A4
CCC1EA3E27B8
CD16EAB946E9
CDB4EEE02E14
CDC21E1E1EC7
CE09B3870EA2
CE5AA0C8B5A8
CE63DE29E069
D0368B24CA49
D0489010A72C
D075379A21A6
D09893B4EE04
D0A7A2787570
D0B8C06C02E4
D106E94A4C3B
D11E7D1BBEEA
D12B25B8DDE2
D1972D6CE2C3
D1B91D224946
D2752E53679D
D35B2B75CC52
D40E935117A2
D4C37528DC05
D4C818A5455E
D4CD56DB8AEB
D5190BD5CED6
D55E5AA3406D
D576E9D856D9
D5E444E9D82D
D61A3231790D
D669B3AE1E11
D6C075899D06
D6C3503456C4
D7AC70A05A0C
D80A37B6D7ED
D82E6938C58C
D85E51344EB6
D8809EB9BA7D
D8913C2D48E9
D9109460D912
D94E36427E20
D97E55B1816A
D99425130C1A
D99C3222A190
D9A207103ED7
D9C70CC5818A
DA3379D12773
DA705702248C
DA818C56CE43
DAE1888DCC0B
DBA0A2DCA8E0
DBD9799E15B1
DC242193D7E3
DCB5AC62946C
DCB75AEC61A0
DD6E0587A821
DD7B1A7C6A82
DDA22A189095
DDDAE53AA711
DDE7304E78B6
DE1B4DA681B9
DEAC67E2D7C1
DEB7D7E4C62B
E127434AB3B7
E1ACC6742AB7
E1E59574ADBC
E1EA6BAA03D9
E222553A59A2
E2230B8E84C9
E33E807EC3BA
E341574B2E32
E42868808B70
E43562C624B0
E43D54DC3511
E466090D2123
E47069DA0C44
E49DD6062901
E4ACA0ADBA0D
E4B976AD6687
E526BB7888DB
E53354B71B10
E57581CE8617
E61A1DA5A60E
E6293BDA5EDC
E64C2A07CA9B
E6600C4D6A44
E6655B6425DC
E6BADC631036
E70143BE0091
E75E07A010D1
E76962E3B8B4
E8028A6DCC90
E80C5E3E8227
E8779E40450E
E8A9E2D87D36
E8B5A0BDD993
E933DA9735C4
E93A2E63189D
E9447637E40D
E94836269887
E94D82A564BA
E98DC3B561B5
E9EB2DE57AE9
EA490920877D
EA4C494C9353
EA9B1695DD91
EAD0E31A6834
EB16B6462B66
EB276C9AB68D
EB3C9732C3BA
EB44DDC408CE
EB8536C958B2
EBC825C186B3
EC1A55BB58EB
EC2B12107313
EC8CB5758097
ECD4C42EA3D1
ED22B7115435
ED2CE17A590C
ED65A9B6469C
ED6748113E0D
ED8CEB8B7102
EDCE0890472D
EDD4A2EA7493
EE17C426D25E
EE487A4C806E
EE5931913A8D
EED56840AEBA
"
QBzAmNhC,Untitled,Rodunskiy,C#,Wednesday 8th of May 2024 09:53:19 AM CDT,"using System;

namespace CSLight
{
    public class Program
    {
        static void Main(string[] args)
        {
            string symbols = """";

            Console.WriteLine(""–í–≤–µ–¥–∏—Ç–µ –∏–º—è:"");
            string name = Console.ReadLine();

            Console.WriteLine(""–í–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª:"");
            char symbol = Console.ReadKey(true).KeyChar;

            string middleRow = symbol + name + symbol;

            for (int i = 0; i < middleRow.Length; i++)
            {
                symbols += symbol;
            }

            Console.WriteLine(symbols);
            Console.WriteLine(middleRow);
            Console.WriteLine(symbols);

        }
    }
}"
zpwWJYia,iclass_elite_keys,chizoba667,JSON,Wednesday 8th of May 2024 09:52:15 AM CDT,"#
# iClass Elite Default Keys
#   -- iceman fork version --
#   -- sharing is caring --
#
217F45867C1DA110
7F45867C1DA11042
45867C1DA11042DD
867C1DA11042DD66
7C1DA11042DD66EC
1DA11042DD66EC6C
A11042DD66EC6C67
1042DD66EC6C67F2
42DD66EC6C67F210
DD66EC6C67F210E7
66EC6C67F210E785
EC6C67F210E78530
6C67F210E78530CB
67F210E78530CB94
F210E78530CB941F
10E78530CB941FBD
E78530CB941FBD59
8530CB941FBD5993
30CB941FBD599369
CB941FBD59936949
941FBD59936949B4
1FBD59936949B4C1
BD59936949B4C15B
59936949B4C15B3F
936949B4C15B3FAE
6949B4C15B3FAE7F
49B4C15B3FAE7F61
B4C15B3FAE7F61A8
C15B3FAE7F61A83D
5B3FAE7F61A83DB6
3FAE7F61A83DB655
AE7F61A83DB6554C
7F61A83DB6554C16
61A83DB6554C1617
A83DB6554C1617AA
3DB6554C1617AA1B
B6554C1617AA1B7D
554C1617AA1B7DA8
4C1617AA1B7DA8EA
1617AA1B7DA8EACC
17AA1B7DA8EACC5B
AA1B7DA8EACC5B7C
1B7DA8EACC5B7C62
7DA8EACC5B7C62C4
A8EACC5B7C62C491
EACC5B7C62C491C1
CC5B7C62C491C11B
5B7C62C491C11B39
7C62C491C11B398C
62C491C11B398C00
C491C11B398C000D
91C11B398C000D97
C11B398C000D9719
1B398C000D9719A1
398C000D9719A190
8C000D9719A19023
000D9719A190237B
0D9719A190237BAE
9719A190237BAE13
19A190237BAE13DE
A190237BAE13DEBB
90237BAE13DEBBD8
237BAE13DEBBD810
7BAE13DEBBD810AC
AE13DEBBD810AC40
13DEBBD810AC40BF
DEBBD810AC40BF3F
BBD810AC40BF3FB5
D810AC40BF3FB59F
10AC40BF3FB59F6E
AC40BF3FB59F6E0B
40BF3FB59F6E0B0C
BF3FB59F6E0B0CB4
3FB59F6E0B0CB425
B59F6E0B0CB42542
9F6E0B0CB425428E
6E0B0CB425428EF2
0B0CB425428EF25C
0CB425428EF25C10
B425428EF25C100D
25428EF25C100DF7
428EF25C100DF704
8EF25C100DF7042E
F25C100DF7042EAE
5C100DF7042EAE64
100DF7042EAE6410
0DF7042EAE641057
F7042EAE64105790
042EAE64105790EB
2EAE64105790EB34
AE64105790EB34FC
64105790EB34FCAF
105790EB34FCAFA9
5790EB34FCAFA9ED
90EB34FCAFA9ED38
EB34FCAFA9ED3807
34FCAFA9ED3807B7
FCAFA9ED3807B7C1
AFA9ED3807B7C106
A9ED3807B7C106FC
ED3807B7C106FCFC
3807B7C106FCFCC8
07B7C106FCFCC8B2
B7C106FCFCC8B2F9
C106FCFCC8B2F945
06FCFCC8B2F9456B
FCFCC8B2F9456B8D
FCC8B2F9456B8D58
C8B2F9456B8D5897
B2F9456B8D58976C
F9456B8D58976CE5
456B8D58976CE582
6B8D58976CE582C3
8D58976CE582C326
58976CE582C32634
976CE582C3263457
6CE582C32634573C
E582C32634573C17
82C32634573C1798
C32634573C1798D0
2634573C1798D026
34573C1798D0269B
573C1798D0269B83
3C1798D0269B83E2
1798D0269B83E2AF
98D0269B83E2AFFA
D0269B83E2AFFAB4
269B83E2AFFAB4A6
9B83E2AFFAB4A6A2
83E2AFFAB4A6A2A5
E2AFFAB4A6A2A566
AFFAB4A6A2A566B8
FAB4A6A2A566B839
B4A6A2A566B839BD
A6A2A566B839BDC7
A2A566B839BDC7DC
A566B839BDC7DC33
66B839BDC7DC33D5
B839BDC7DC33D5AB
39BDC7DC33D5ABE8
BDC7DC33D5ABE827
C7DC33D5ABE827F9
DC33D5ABE827F982
33D5ABE827F982DE
D5ABE827F982DE18
ABE827F982DE18EF
E827F982DE18EF87
27F982DE18EF8758
F982DE18EF875849
82DE18EF875849BC
DE18EF875849BC3B
18EF875849BC3B29
EF875849BC3B2953
875849BC3B29536A
5849BC3B29536A12
49BC3B29536A1241
BC3B29536A124174
3B29536A12417409
29536A124174096C
536A124174096CD1
6A124174096CD12A
124174096CD12AF4
4174096CD12AF4C6
74096CD12AF4C6B0
096CD12AF4C6B001
6CD12AF4C6B00155
D12AF4C6B0015532
2AF4C6B0015532FD
F4C6B0015532FDA9
C6B0015532FDA9EC
B0015532FDA9EC04
015532FDA9EC0406
5532FDA9EC04064B
32FDA9EC04064B0C
FDA9EC04064B0CCF
A9EC04064B0CCF69
EC04064B0CCF691D
04064B0CCF691DE6
064B0CCF691DE690
4B0CCF691DE69079
0CCF691DE6907935
CF691DE690793509
691DE69079350928
1DE69079350928E4
E69079350928E49A
9079350928E49A2A
79350928E49A2A10
350928E49A2A1092
0928E49A2A1092A1
28E49A2A1092A121
E49A2A1092A12148
9A2A1092A12148D0
2A1092A12148D077
1092A12148D07735
92A12148D0773590
A12148D0773590AD
2148D0773590ADFA
48D0773590ADFA99
D0773590ADFA99DB
773590ADFA99DBA4
3590ADFA99DBA4CD
90ADFA99DBA4CD36
ADFA99DBA4CD3601
FA99DBA4CD36017C
99DBA4CD36017CAB
DBA4CD36017CABAB
A4CD36017CABABB4
CD36017CABABB46D
36017CABABB46DFB
017CABABB46DFB93
7CABABB46DFB93B5
ABABB46DFB93B584
ABB46DFB93B584A5
B46DFB93B584A506
6DFB93B584A50647
FB93B584A5064748
93B584A506474825
B584A50647482562
84A50647482562E4
A50647482562E49E
0647482562E49EDD
47482562E49EDD4B
482562E49EDD4B30
2562E49EDD4B30EA
62E49EDD4B30EAB0
E49EDD4B30EAB0F0
9EDD4B30EAB0F02B
DD4B30EAB0F02B77
4B30EAB0F02B77CC
30EAB0F02B77CC90
EAB0F02B77CC90AA
B0F02B77CC90AA19
F02B77CC90AA19C7
2B77CC90AA19C73D
77CC90AA19C73D08
CC90AA19C73D0811
90AA19C73D0811EE
AA19C73D0811EEE1
19C73D0811EEE119
C73D0811EEE11930
3D0811EEE11930DA
0811EEE11930DA7E
11EEE11930DA7E5F
EEE11930DA7E5F3F
E11930DA7E5F3F43
1930DA7E5F3F43BA
30DA7E5F3F43BA81
DA7E5F3F43BA819F
7E5F3F43BA819F19
5F3F43BA819F199A
3F43BA819F199AF8
43BA819F199AF82D
BA819F199AF82DD1
819F199AF82DD18E
9F199AF82DD18E0C
199AF82DD18E0C68
9AF82DD18E0C68FD
F82DD18E0C68FDAE
2DD18E0C68FDAEFF
D18E0C68FDAEFFD6
8E0C68FDAEFFD620
0C68FDAEFFD62043
68FDAEFFD6204388
FDAEFFD6204388A3
AEFFD6204388A3C0
FFD6204388A3C089
D6204388A3C08982
204388A3C089828C
4388A3C089828CBD
88A3C089828CBDB3
A3C089828CBDB3E6
C089828CBDB3E6FB
89828CBDB3E6FBE0
828CBDB3E6FBE030
8CBDB3E6FBE030F7
BDB3E6FBE030F774
B3E6FBE030F774B7
E6FBE030F774B72D
FBE030F774B72DBC
E030F774B72DBC2F
30F774B72DBC2FA1
F774B72DBC2FA15B
74B72DBC2FA15BB3
B72DBC2FA15BB307
2DBC2FA15BB30725
BC2FA15BB30725F2
2FA15BB30725F2C4
A15BB30725F2C492
5BB30725F2C49288
B30725F2C49288F5
0725F2C49288F574
25F2C49288F57492
F2C49288F574929E
C49288F574929EB8
9288F574929EB85B
88F574929EB85B8C
F574929EB85B8CE0
74929EB85B8CE0A0
929EB85B8CE0A0D8
9EB85B8CE0A0D8B6
B85B8CE0A0D8B6BF
5B8CE0A0D8B6BF2B
8CE0A0D8B6BF2B03
E0A0D8B6BF2B0316
A0D8B6BF2B031638
D8B6BF2B03163830
B6BF2B03163830E3
BF2B03163830E3E9
2B03163830E3E9A9
03163830E3E9A967
163830E3E9A967E1
3830E3E9A967E142
30E3E9A967E142E3
E3E9A967E142E32B
E9A967E142E32B7D
A967E142E32B7DF3
67E142E32B7DF380
E142E32B7DF3807F
42E32B7DF3807F40
E32B7DF3807F40B0
2B7DF3807F40B076
7DF3807F40B07650
F3807F40B07650F2
807F40B07650F272
7F40B07650F272ED
40B07650F272EDF9
B07650F272EDF90C
7650F272EDF90C1A
50F272EDF90C1A4E
F272EDF90C1A4E0C
72EDF90C1A4E0C70
EDF90C1A4E0C7057
F90C1A4E0C70579D
0C1A4E0C70579D50
1A4E0C70579D5058
4E0C70579D5058C9
0C70579D5058C908
70579D5058C90806
579D5058C908068D
9D5058C908068D67
5058C908068D67C0
58C908068D67C071
C908068D67C071D9
08068D67C071D91E
068D67C071D91E07
8D67C071D91E0795
67C071D91E0795BE
C071D91E0795BEBA
71D91E0795BEBA8A
D91E0795BEBA8A3E
1E0795BEBA8A3E68
0795BEBA8A3E680A
95BEBA8A3E680AF2
BEBA8A3E680AF244
BA8A3E680AF244E1
8A3E680AF244E13F
3E680AF244E13FB6
680AF244E13FB60E
0AF244E13FB60E84
F244E13FB60E8496
44E13FB60E849633
E13FB60E84963355
3FB60E84963355B4
B60E84963355B437
0E84963355B437FE
84963355B437FE2A
963355B437FE2ACD
3355B437FE2ACD5C
55B437FE2ACD5C79
B437FE2ACD5C793B
37FE2ACD5C793B5B
FE2ACD5C793B5BB5
2ACD5C793B5BB5A4
CD5C793B5BB5A452
5C793B5BB5A4528B
793B5BB5A4528B0B
3B5BB5A4528B0B36
5BB5A4528B0B361E
B5A4528B0B361EDE
A4528B0B361EDE24
528B0B361EDE24ED
8B0B361EDE24ED36
0B361EDE24ED3625
361EDE24ED3625E8
1EDE24ED3625E822
DE24ED3625E8225B
24ED3625E8225BA9
ED3625E8225BA9C1
3625E8225BA9C1A0
25E8225BA9C1A0FD
E8225BA9C1A0FDAA
225BA9C1A0FDAA48
5BA9C1A0FDAA48B6
A9C1A0FDAA48B601
C1A0FDAA48B6010B
A0FDAA48B6010B1D
FDAA48B6010B1D8B
AA48B6010B1D8BC2
48B6010B1D8BC24B
B6010B1D8BC24B16
010B1D8BC24B16B2
0B1D8BC24B16B256
1D8BC24B16B256B7
8BC24B16B256B79D
C24B16B256B79DFE
4B16B256B79DFE12
16B256B79DFE12DE
B256B79DFE12DE53
56B79DFE12DE5398
B79DFE12DE539850
9DFE12DE53985046
FE12DE53985046F9
12DE53985046F94E
DE53985046F94E6F
53985046F94E6F5D
985046F94E6F5D91
5046F94E6F5D912E
46F94E6F5D912E1C
F94E6F5D912E1CB2
4E6F5D912E1CB2C0
6F5D912E1CB2C054
5D912E1CB2C054D0
912E1CB2C054D065
2E1CB2C054D06577
1CB2C054D0657700
B2C054D06577009A
C054D06577009ADC
54D06577009ADCD2
D06577009ADCD2EB
6577009ADCD2EB1F
77009ADCD2EB1FB8
009ADCD2EB1FB841
9ADCD2EB1FB841DC
DCD2EB1FB841DCDF
D2EB1FB841DCDF08
EB1FB841DCDF08E5
1FB841DCDF08E576
B841DCDF08E576BA
41DCDF08E576BABC
DCDF08E576BABC3D
DF08E576BABC3D54
08E576BABC3D54B2
E576BABC3D54B25C
76BABC3D54B25C01
BABC3D54B25C0158
BC3D54B25C0158F2
3D54B25C0158F2FA
54B25C0158F2FA4E
B25C0158F2FA4E3F
5C0158F2FA4E3F0F
0158F2FA4E3F0F64
58F2FA4E3F0F6404
F2FA4E3F0F640479
FA4E3F0F6404798F
4E3F0F6404798F9F
3F0F6404798F9F6C
0F6404798F9F6C38
6404798F9F6C38A8
04798F9F6C38A891
798F9F6C38A8911F
8F9F6C38A8911FC7
9F6C38A8911FC749
6C38A8911FC749FE
38A8911FC749FE23
A8911FC749FE231E
911FC749FE231E5E
1FC749FE231E5EB6
C749FE231E5EB656
49FE231E5EB656B3
FE231E5EB656B350
231E5EB656B3500C
1E5EB656B3500C10
5EB656B3500C1092
B656B3500C1092CC
56B3500C1092CC89
B3500C1092CC8904
500C1092CC8904B0
0C1092CC8904B0C6
1092CC8904B0C6E2
92CC8904B0C6E267
CC8904B0C6E2677D
8904B0C6E2677DBD
04B0C6E2677DBD28
B0C6E2677DBD2854
C6E2677DBD2854B8
E2677DBD2854B840
677DBD2854B8403F
7DBD2854B8403F70
BD2854B8403F7087
2854B8403F7087B1
54B8403F7087B191
B8403F7087B191CA
403F7087B191CAC7
3F7087B191CAC749
7087B191CAC74903
87B191CAC7490304
B191CAC7490304A1
91CAC7490304A15C
CAC7490304A15C28
C7490304A15C28B8
490304A15C28B85E
0304A15C28B85EDF
04A15C28B85EDFB5
A15C28B85EDFB515
5C28B85EDFB5157C
28B85EDFB5157C27
B85EDFB5157C2736
5EDFB5157C2736C9
DFB5157C2736C901
B5157C2736C901F3
157C2736C901F3FF
7C2736C901F3FF24
2736C901F3FF240F
36C901F3FF240FAD
C901F3FF240FAD64
01F3FF240FAD647A
F3FF240FAD647AB9
FF240FAD647AB9ED
240FAD647AB9ED2D
0FAD647AB9ED2DC9
AD647AB9ED2DC915
647AB9ED2DC9153F
7AB9ED2DC9153F44
B9ED2DC9153F449B
ED2DC9153F449B92
2DC9153F449B9226
C9153F449B9226B1
153F449B9226B12E
3F449B9226B12E8C
449B9226B12E8C61
9B9226B12E8C61C8
9226B12E8C61C8D3
26B12E8C61C8D31E
B12E8C61C8D31E6C
2E8C61C8D31E6CA1
8C61C8D31E6CA194
61C8D31E6CA19438
C8D31E6CA194384A
D31E6CA194384AC9
1E6CA194384AC919
6CA194384AC919F1
A194384AC919F182
94384AC919F18237
384AC919F18237CC
4AC919F18237CC1E
C919F18237CC1E67
19F18237CC1E6782
F18237CC1E67823C
8237CC1E67823C23
37CC1E67823C239D
CC1E67823C239D50
1E67823C239D50BF
67823C239D50BF09
823C239D50BF09D9
3C239D50BF09D912
239D50BF09D9125C
9D50BF09D9125CD1
50BF09D9125CD1E8
BF09D9125CD1E8EF
09D9125CD1E8EFE8
D9125CD1E8EFE808
125CD1E8EFE808F3
5CD1E8EFE808F3FD
D1E8EFE808F3FD6E
E8EFE808F3FD6E9C
EFE808F3FD6E9C01
E808F3FD6E9C01B7
08F3FD6E9C01B7D4
F3FD6E9C01B7D4EE
FD6E9C01B7D4EEBD
6E9C01B7D4EEBDAC
9C01B7D4EEBDACBC
01B7D4EEBDACBC28
B7D4EEBDACBC287A
D4EEBDACBC287A74
EEBDACBC287A74A9
BDACBC287A74A9D1
ACBC287A74A9D174
BC287A74A9D174E8
287A74A9D174E863
7A74A9D174E8639E
74A9D174E8639E59
A9D174E8639E5992
D174E8639E59929C
74E8639E59929C8C
E8639E59929C8C08
639E59929C8C0863
9E59929C8C0863D3
59929C8C0863D32B
929C8C0863D32B98
9C8C0863D32B98A4
8C0863D32B98A479
0863D32B98A4793D
63D32B98A4793D9C
D32B98A4793D9C2F
2B98A4793D9C2F53
98A4793D9C2F537F
A4793D9C2F537FA5
793D9C2F537FA5DF
3D9C2F537FA5DF1F
9C2F537FA5DF1FC7
2F537FA5DF1FC709
537FA5DF1FC70945
7FA5DF1FC709457A
A5DF1FC709457A4F
DF1FC709457A4FE3
1FC709457A4FE39D
C709457A4FE39D01
09457A4FE39D0151
457A4FE39D01515B
7A4FE39D01515B00
4FE39D01515B00B7
E39D01515B00B7D4
9D01515B00B7D428
01515B00B7D428DA
515B00B7D428DAA6
5B00B7D428DAA6C5
00B7D428DAA6C552
B7D428DAA6C5529F
D428DAA6C5529FC9
28DAA6C5529FC949
DAA6C5529FC9493D
A6C5529FC9493DBA
C5529FC9493DBA2A
529FC9493DBA2A52
9FC9493DBA2A52E3
C9493DBA2A52E3C6
493DBA2A52E3C648
3DBA2A52E3C64870
BA2A52E3C6487061
2A52E3C648706101
52E3C648706101BB
E3C648706101BBEA
C648706101BBEAB5
48706101BBEAB5FE
706101BBEAB5FE1B
6101BBEAB5FE1B0E
01BBEAB5FE1B0EC6
BBEAB5FE1B0EC69A
EAB5FE1B0EC69A1D
B5FE1B0EC69A1DC5
FE1B0EC69A1DC5A4
1B0EC69A1DC5A430
0EC69A1DC5A430FF
C69A1DC5A430FF6A
9A1DC5A430FF6A12
1DC5A430FF6A1211
C5A430FF6A121127
A430FF6A121127DD
30FF6A121127DD42
FF6A121127DD422E
6A121127DD422E07
121127DD422E07D3
1127DD422E07D3DF
27DD422E07D3DF18
DD422E07D3DF1843
422E07D3DF184370
2E07D3DF18437050
07D3DF184370502B
D3DF184370502B16
DF184370502B1617
184370502B16173C
4370502B16173C05
70502B16173C05F1
502B16173C05F181
2B16173C05F18149
16173C05F181493D
173C05F181493D66
3C05F181493D660C
05F181493D660C2A
F181493D660C2A52
81493D660C2A5245
493D660C2A524556
3D660C2A524556D8
660C2A524556D8E2
0C2A524556D8E205
2A524556D8E2050B
524556D8E2050B1F
4556D8E2050B1F1D
56D8E2050B1F1D65
D8E2050B1F1D65FB
E2050B1F1D65FB5D
050B1F1D65FB5D78
0B1F1D65FB5D7852
1F1D65FB5D785270
1D65FB5D78527086
65FB5D78527086A6
FB5D78527086A60C
5D78527086A60CBE
78527086A60CBE6C
527086A60CBE6CC4
7086A60CBE6CC485
86A60CBE6CC4851B
A60CBE6CC4851B3E
0CBE6CC4851B3ED4
BE6CC4851B3ED409
6CC4851B3ED409B1
C4851B3ED409B14E
851B3ED409B14E6C
1B3ED409B14E6C24
3ED409B14E6C24F2
D409B14E6C24F217
09B14E6C24F217AF
B14E6C24F217AFC1
4E6C24F217AFC12C
6C24F217AFC12C7E
24F217AFC12C7E7D
F217AFC12C7E7D8F
17AFC12C7E7D8F5D
AFC12C7E7D8F5D58
C12C7E7D8F5D58E7
2C7E7D8F5D58E7A9
7E7D8F5D58E7A948
7D8F5D58E7A9482D
8F5D58E7A9482DE6
5D58E7A9482DE675
58E7A9482DE675C8
E7A9482DE675C83B
A9482DE675C83B4C
482DE675C83B4CCC
2DE675C83B4CCC65
E675C83B4CCC65BE
75C83B4CCC65BEFA
C83B4CCC65BEFA5C
3B4CCC65BEFA5C25
4CCC65BEFA5C256F
CC65BEFA5C256F54
65BEFA5C256F544B
BEFA5C256F544BA4
"
4tjN6XKq,iclass_default_keys,chizoba667,JSON,Wednesday 8th of May 2024 09:51:25 AM CDT,"#
# iClass Default Keys
#   -- iceman fork version --
#   -- contribute to this list, sharing is caring --
#
AEA684A6DAB23278 # AA1
7665544332211000 # key1/Kc from PicoPass 2k documentation
0123456789ABCDEF # SAGEM
5b7c62c491c11b39 # from loclass demo file.
F0E1D2C3B4A59687 # Kd from PicoPass 2k documentation
5CBCF1DA45D5FB4F # PicoPass Default Exchange Key
31ad7ebd2f282168 # From HID multiclassSE reader
#
# From pastebin: https://pastebin.com/uHqpjiuU
6EFD46EFCBB3C875
E033CA419AEE43F9
#
# iCopy-x DRM keys
2020666666668888 # iCL tags
6666202066668888 # iCS tags reversed from the SOs
#
# default picopass KD / Page 0 / Book 1
FDCB5A52EA8F3090
237FF9079863DF44
5ADC25FB27181D32
83B881F2936B2E49
43644E61EE866BA5
897034143D016080
82D17B44C0122963
4895CA7DE65E2025
DADAD4C57BE271B7
E41E9EDEF5719ABF
293D275EC3AF9C7F
C3C169251B8A70FB
F41DAF58B20C8B91
28877A609EC0DD2B
66584C91EE80D5E5
C1B74D7478053AE2
#
# default iCLASS RFIDeas
6B65797374726B72
"
AnAj2DYV,Untitled,dllbridge,C,Wednesday 8th of May 2024 09:49:10 AM CDT,"

#include<stdio.h>
#include<string.h>

char  narr[99]=""APPLE + SONY"";

void Decoder(char*p);
void Shifr  (char*p);  

/////////////////////////////////////////////
int main()                                 // 
{
   Shifr(narr);
   printf(""narr = %s\n"",narr);
   Decoder(narr);
   printf(""narr = %s\n"",narr);
}

 //  –î–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä
////////////////////////////////////////////
 void Decoder(char*p)                        //   
 {
	
	 int n = strlen(p);	
	 	
     for(int i=0; i < n; i++)   p[i] = p[i]+5;
         
     
 }
 
 
 
 
 //  –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
 ////////////////////////////////////////////
 void Shifr(char*p)                        // 
 {
		
	 int n = strlen(p);	
		
     for(int i=0; i < n; i++)
     {
       p[i] = p[i]-5;  
         
     }
 }
 
 
 
 
 
 
 
 
 

/*
#include   <stdio.h>

int n = 1;

///////////////////////////////////////////
int main()
{
    
   
    for(int i = 0; i < 11; i++)
    {
		
	   printf(""n = %4d\n"", n);
	   
	   n = n << 1;	
	}
}
   
   
   
   */
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   

/*



#include   <stdio.h>

int n = 10;

///////////////////////////////////////////
int main()
{
    
    
  //  n *= 2;
    n = n * 2;
    
    printf(""n = %d\n"", n);     
    
	n = n >> 3;

    printf(""n = %d\n"", n); 
    
	 
}


*/














/*
#include   <stdio.h>

int n = 10;

///////////////////////////////////////////
int main()
{
    
    
  //  n *= 2;
    n = n * 2;
    
    printf(""n = %d\n"", n);     
    
	n = n >> 1;

    printf(""n = %d\n"", n); 
    
    n >>= 1;

    printf(""n = %d\n"", n);    
	
    n = n >> 1;

    printf(""n = %d\n"", n);  	 
}



*/


"
sbFivP5e,Template,NittyGritty,JSON,Wednesday 8th of May 2024 09:43:24 AM CDT,"[
    {
        ""id"": ""6d054402.bae15c"",
        ""type"": ""tab"",
        ""label"": ""Template Test"",
        ""disabled"": false,
        ""info"": """"
    },
    {
        ""id"": ""8bc45fe100c4d4b6"",
        ""type"": ""function"",
        ""z"": ""6d054402.bae15c"",
        ""name"": ""function 58"",
        ""func"": ""var options = { hour12: false };\nvar date_options = {day: '2-digit', month: '2-digit', year: '2-digit' };\nvar time_options = {hour: '2-digit', minute: '2-digit', second: '2-digit' };\nconst lang = 'de-DE';\n\n\n/**\n* @param {string} value\n* @param {any} index\n* @param {any} array\n*/\nfunction myFunction(value, index, array) {\n  var varname = value + \""-\"";\n\n  var Temp = global.get(varname + \""Temp\"");\n  var Hum = global.get(varname + \""Hum\"");\n  var Dew = global.get(varname + \""Dew\"");\n  var AF = global.get(varname + \""AF\"");\n  var TS = global.get(varname + \""TimeStamp\"");\n\nvar date = new Date(TS);\n\nconst date_locale = date.toLocaleDateString(lang, {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric'\n  });\nconst time_locale = date.toLocaleTimeString(lang);\nconst formated = `${date_locale} ${time_locale}`;\n\nvar formated1 = (date.toLocaleTimeString([], {\n    hourCycle: 'h23',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  }));\n\nvar Influx = \n    {\n        Room: value,\n        Temp: Temp,\n        Hum: Hum,\n        Dew: Dew,\n        AF: AF,\n        TS: formated\n}\n  return (Influx);\n}\n// ----------------------------------\nconst Rooms = [\""Wozi\"",\n            \""Schlazi\"",\n             \""Kueche\"",\n             \""Eingang\"",\n             \""BadFenster\"",\n             \""Bad\"",\n             \""Flur\"",\n             \""Keller\"",\n             \""Thermostat\"",\n             \""Heizung\"",\n             \""Auriol-2\"",\n             \""Auriol-3\"",\n             \""UPM_ESIC\"",\n             \""Xiron\""];\n\nvar Influx1 = Rooms.map(myFunction);\n\nvar msg1={};\nmsg1[\""payload\""]=Influx1;\nreturn msg1;"",
        ""outputs"": 1,
        ""timeout"": 0,
        ""noerr"": 0,
        ""initialize"": """",
        ""finalize"": """",
        ""libs"": [],
        ""x"": 310,
        ""y"": 60,
        ""wires"": [
            [
                ""098b601643948d23"",
                ""0259f282ce685ac9""
            ]
        ]
    },
    {
        ""id"": ""098b601643948d23"",
        ""type"": ""template"",
        ""z"": ""6d054402.bae15c"",
        ""name"": ""html template"",
        ""field"": ""payload"",
        ""fieldType"": ""msg"",
        ""format"": ""html"",
        ""syntax"": ""mustache"",
        ""template"": ""<table border=\""1\"" width=\""800px\"">\n    \n   <thead>\n        <tr>\n            <th colspan=\""6\"">Messages</th>\n        </tr>\n    </thead>\n\n    <tr>\n        <th class=\""White\"" width =\""40\""> Room</th>\n        <th class=\""red\""width =\""60\""> Temperature</th>\n        <th class=\""blue\"" width=\""60\"">  Humidity</th>\n        <th class=\""green\"" width=\""60\"">  Dewpoint</th>\n        <th class=\""yellow\"" width=\""50\"">  AF</th>\n        <th class=\""White\"" width=\""100\""> Time</th>\n    </tr>\n    {{#payload}}\n        <tr class=\""\"">\n            <td>{{Room}}</td> \n            <td>{{Temp}}¬∞C</td>\n            <td>{{Hum}}%rH</td>\n            <td>{{Dew}}¬∞C</td>\n            <td>{{AF}}g/m¬≥</td>\n            <td>{{TS}}</td>\n    </tr>\n    {{/payload}}\n</table>\n"",
        ""output"": ""str"",
        ""x"": 540,
        ""y"": 80,
        ""wires"": [
            [
                ""15917e027feb8cfb""
            ]
        ]
    },
    {
        ""id"": ""15917e027feb8cfb"",
        ""type"": ""ui_template"",
        ""z"": ""6d054402.bae15c"",
        ""group"": ""4a93a592.39efec"",
        ""name"": ""Temp/Hum/Dew"",
        ""order"": 2,
        ""width"": ""0"",
        ""height"": ""0"",
        ""format"": ""<style>\ntd {\ntext-align: right;\n}\n\n.green\n{\n    background-color:green;\n}\n.red\n{\n    background-color:red;\n}\n.yellow\n{\n    background-color:yellow;\n    color:black;\n}\n.blue\n{\n    background-color:blue;\n}\n</style>\n<div ng-bind-html=\""msg.payload\""  style=\""width:800px;height:500px\"">\n\n</div>"",
        ""storeOutMessages"": false,
        ""fwdInMessages"": false,
        ""resendOnRefresh"": false,
        ""templateScope"": ""local"",
        ""className"": """",
        ""x"": 540,
        ""y"": 120,
        ""wires"": [
            []
        ]
    },
    {
        ""id"": ""bd5d7af5b7e6584b"",
        ""type"": ""inject"",
        ""z"": ""6d054402.bae15c"",
        ""name"": """",
        ""props"": [
            {
                ""p"": ""payload""
            },
            {
                ""p"": ""topic"",
                ""vt"": ""str""
            }
        ],
        ""repeat"": ""30"",
        ""crontab"": """",
        ""once"": true,
        ""onceDelay"": ""3"",
        ""topic"": """",
        ""payload"": """",
        ""payloadType"": ""date"",
        ""x"": 130,
        ""y"": 60,
        ""wires"": [
            [
                ""8bc45fe100c4d4b6""
            ]
        ]
    },
    {
        ""id"": ""0259f282ce685ac9"",
        ""type"": ""debug"",
        ""z"": ""6d054402.bae15c"",
        ""name"": ""debug 48"",
        ""active"": false,
        ""tosidebar"": true,
        ""console"": false,
        ""tostatus"": false,
        ""complete"": ""false"",
        ""statusVal"": """",
        ""statusType"": ""auto"",
        ""x"": 520,
        ""y"": 40,
        ""wires"": []
    },
    {
        ""id"": ""4a93a592.39efec"",
        ""type"": ""ui_group"",
        ""name"": """",
        ""tab"": ""c4971399.f6246"",
        ""order"": 1,
        ""disp"": true,
        ""width"": ""16"",
        ""collapse"": false,
        ""className"": """"
    },
    {
        ""id"": ""c4971399.f6246"",
        ""type"": ""ui_tab"",
        ""name"": ""TempHumDewAF"",
        ""icon"": ""dashboard"",
        ""order"": 2,
        ""disabled"": false,
        ""hidden"": false
    }
]"
VvH4PTy3,very good bug s 993 fixed,max2201111,Python,Wednesday 8th of May 2024 09:42:56 AM CDT,"import chess
import time

def ten_moves_rule(board):
    """"""Custom rule to evaluate a draw condition based on the last ten moves, considering no captures or pawn moves.""""""
    history = list(board.move_stack)
    if len(history) < 10:
        return False

    for move in history[-10:]:
        if board.is_capture(move):
            return False
        if board.piece_type_at(move.from_square) == chess.PAWN:
            return False
    return True

def evaluate_board(board, depth):
    """"""Evaluate the board state for minimax decision-making.""""""
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 1
    elif board.is_insufficient_material():
        return 2
    elif ten_moves_rule(board):
        return 3
    return 4  # Default heuristic if none of the above conditions are met

def minimax(board, depth, alpha, beta, maximizing_player, depth2, printed_depths, position_count, memo, start_time, last_print_time):
    current_time = time.time()
    if current_time - last_print_time[0] >= 1:
        elapsed_hours, remainder = divmod(current_time - start_time, 3600)
        elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
        print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
        last_print_time[0] = current_time

    position_count[0] += 1
    if position_count[0] % 1000000 == 0:
        print(f""\nProzkoumano {position_count[0]} pozic."")

    key = (board.fen(), maximizing_player, depth, alpha, beta)
    if key in memo:
        return memo[key]

    if depth == 0 or board.is_game_over():
        eval = evaluate_board(board, depth2)
        memo[key] = ([], eval)
        return [], eval

    best_eval = float('-inf') if maximizing_player else float('inf')
    best_sequence = []

    for move in board.legal_moves:
        move_san = board.san(move)
        board.push(move)
        sequence, eval = minimax(board, depth - 1, alpha, beta, not maximizing_player, depth2 + 1, printed_depths, position_count, memo, start_time, last_print_time)
        board.pop()
        
        if (maximizing_player and eval > best_eval) or (not maximizing_player and eval < best_eval):
            best_eval = eval
            best_sequence = [(move, move_san)] + sequence

        if maximizing_player:
            alpha = max(alpha, eval)
        else:
            beta = min(beta, eval)

        if beta <= alpha:
            break

    memo[key] = (best_sequence, best_eval)
    if depth2 not in printed_depths:
        printed_depths.add(depth2)
        print(f""\nHloubka {depth2} prozkoum√°na, ƒças: {time.time() - start_time:.2f}s"")
    return best_sequence, best_eval

start_time = time.time()
position_count = [0]
memo = {}
last_print_time = [start_time]
printed_depths = set()
start_fen = ""7k/8/3Q4/5K2/8/8/8/8 w - - 0 1""
board = chess.Board(start_fen)

print(""Poƒç√°teƒçn√≠ ≈°achovnice:"")
print(board)
print(""Poƒç√°teƒçn√≠ FEN:"", board.fen(), ""\n"")

sequence, final_score = minimax(board, 12, float('-inf'), float('inf'), True, 0, printed_depths, position_count, memo, start_time, last_print_time)
print(""\n\nOptimal move sequence:"")
for move, san in sequence:
    print(""Move:"", san)
    board.push(move)
    print(""Board:\n"", board)
    print(""FEN:"", board.fen())
    print(""Evaluation:"", evaluate_board(board, 0), ""\n"")
print(""Final evaluation score:"", final_score)"
6Qfz0pMt,Datacollection,NittyGritty,JavaScript,Wednesday 8th of May 2024 09:39:57 AM CDT,"var words = msg.topic.split('/');
var KnotenName = (words[3]);
var Taskname = (words[4]);
var Influx = """";
var SysUnit = (""00""+ msg.payload.Unit).slice(-3);
// var varname = SysUnit + ""-"" + KnotenName + ""-"" + Taskname;
var varname = KnotenName + ""-"";
var TotalCount = global.get(""TotalCount"", ""file"");

var time = Date.now();

if (Taskname != ""System"") {
    global.set(varname + ""TimeStamp"", time);
}

/**
* @param {number} fTemp
* @param {number} fHum
*/
function CalcDew(fTemp, fHum) {
    var temp = -1.0 * fTemp;
    var es = 6.112 * Math.exp(-1.0 * 17.67 * temp / (243.5 - temp))
    var ed = fHum / 100.0 * es;
    var eln = Math.log(ed / 6.112);
    var td = -243.5 * eln / (eln - 17.67);
    var fDew = parseFloat(td.toFixed(1));
    return (fDew);
}

/**
* @param {any} fTemp
* @param {any} fHum
*/
function CalcAF(fTemp, fHum) {
    var T = fTemp;
    var r = fHum;

    var a = 7.5;
    var b = 237.3;
    var RG = 8314.3;
    var mw = 18.016;
    var TK = T + 273.15;

    if (T <= 0) {
        a = 7.6;
        b = 240.7;
    }

    var SDDt = 6.1078 * Math.pow(10, ((a * T) / (b + T)));
    var DDrT = r / 100 * SDDt;
    var AF = parseFloat((Math.pow(10, 5) * mw / RG * DDrT / TK).toFixed(1) );

    return (AF);
}

switch (Taskname) {
    case 'SI7021':
        var SI7021_Temp = msg.payload.Temp;
        var SI7021_Hum = msg.payload.Hum;
        var SI7021_Dew = CalcDew(SI7021_Temp, SI7021_Hum);
        var SI7021_AF = CalcAF(SI7021_Temp, SI7021_Hum);

        global.set(varname +""Temp"", SI7021_Temp);
        global.set(varname + ""Hum"", SI7021_Hum);
        global.set(varname + ""Dew"", SI7021_Dew);
        global.set(varname +  ""AF"", SI7021_AF);
        
        Influx = [{
            Room: KnotenName,
            Temp: SI7021_Temp,
            Hum: SI7021_Hum,
            Dew: SI7021_Dew,
            AF: SI7021_AF
        }]

        break;

    /* -------------------------------------------------------------------- */
    case 'DHT22':
        var DHT22_Temp = msg.payload.Temp;
        var DHT22_Hum = msg.payload.Hum;
        var DHT22_Dew = CalcDew(DHT22_Temp, DHT22_Hum);
        var DHT22_AF = CalcAF(DHT22_Temp, DHT22_Hum);
        
        global.set(varname + ""Temp"", DHT22_Temp);
        global.set(varname +  ""Hum"", DHT22_Hum);
        global.set(varname +  ""Dew"", DHT22_Dew);
        global.set(varname +   ""AF"", DHT22_AF);

        Influx = [{
            Room: KnotenName,
            Temp: DHT22_Temp,
            Hum: DHT22_Hum,
            Dew: DHT22_Dew,
            AF: DHT22_AF
        }]
        break;
       /* -------------------------------------------------------------------- */

    case 'Wasser':

        var Warmwasser_Temp = msg.payload.Warmwasser;
        var Vorlauf_Temp = msg.payload.Vorlauf;
        var Ruecklauf_Temp = msg.payload.R√ºcklauf;
        var Gehaeuse_Temp = msg.payload.Geh√§use;

        global.set(varname + ""Warmwasser"", Warmwasser_Temp);
        global.set(varname + ""Vorlauf"",    Vorlauf_Temp);
        global.set(varname + ""Ruecklauf"",  Ruecklauf_Temp);
        global.set(varname + ""Gehaeuse"",   Gehaeuse_Temp);

        Influx = [{
            Room: KnotenName,
            Warmwasser: Warmwasser_Temp,
            Vorlauf: Vorlauf_Temp,
            Ruecklauf: Ruecklauf_Temp,
            Gehaeuse: Gehaeuse_Temp
        }]

    break;
/* -------------------------------------------------------------------- */
    case 'TSL2561':

        var TSL2561_Lux = msg.payload.Lux;
        var TSL2561_IR = msg.payload.Infrared;
        var TSL2561_Broad = msg.payload.Broadband;

        global.set(varname + ""Lux"", TSL2561_Lux);
        global.set(varname + ""IR"", TSL2561_IR);
        global.set(varname + ""Broad"", TSL2561_Broad);

        Influx = [{
            Room: KnotenName,
            Broad: TSL2561_Broad,
            IR: TSL2561_IR,
            Lux: TSL2561_Lux
        }]
        break;

    /* -------------------------------------------------------------------- */
    case 'BH1750':

        var BH1750_Lux = msg.payload.Lux;
        global.set(varname + ""Lux"", BH1750_Lux)

        Influx = [{
            Room: KnotenName,
            Lux: BH1750_Lux
        }]
        break;

    /* -------------------------------------------------------------------- */
    case 'BMP085':
        var BMP085_Temp = msg.payload.Temp;
        var BMP085_Pres = msg.payload.Pressure;

        global.set(varname + ""Temp"", BMP085_Temp);
        global.set(varname + ""Pres"", BMP085_Pres);

        Influx = [{
            Room: KnotenName,
            Temp1: BMP085_Temp,
            Pressure: BMP085_Pres
        }]

        break;

    /* -------------------------------------------------------------------- */

    case 'Oben':
        var Count = msg.payload.Count;
        var Total = msg.payload.Total;
        var Time = msg.payload.Time;

        global.set(varname + ""Count"", Count);
        global.set(varname + ""Total"", Total);

        TotalCount = TotalCount + Count;
        global.set(""TotalCount"", TotalCount, ""file"");

        Influx = [{
            Room: KnotenName,
            Count: Count,
            Total: Total,
            Time: Time
        }]
        break;

    /* -------------------------------------------------------------------- */
    case 'BME280':
        var BME280_Temp = msg.payload.Temp;
        var BME280_Hum = msg.payload.Hum;
        var BME280_Pres = msg.payload.Pressure;

        global.set(varname + ""Temp"", BME280_Temp);
        global.set(varname + ""Hum"",  BME280_Hum);
        global.set(varname + ""Pres"", BME280_Pres);

        Influx = [{
            Room: KnotenName,
            Temp1: BME280_Temp,
            Hum1: BME280_Hum,
            Pressure: BME280_Pres
        }]

        break;

    /* -------------------------------------------------------------------- */

    case 'System':
        var SysUptime = msg.payload.Uptime;
        var SysRSSI = msg.payload.RSSI;

        global.set(varname + ""Uptime"", SysUptime);
        global.set(varname + ""RSSI"",   SysRSSI);

        Influx = [{
            Room: KnotenName,
            Uptime: SysUptime,
            RSSI: SysRSSI
        }]
       
        break;

}		// switch (Taskname)

node.status({
    fill: ""green"",
    shape: ""ring"",
    text: KnotenName + "" - "" +
          Taskname + "" - "" +
          ""Unit: "" + SysUnit + 
          "", Total: "" +TotalCount / 100
});


return [{ payload: Influx}, {payload:time}];

"
fpdS8jgU,Untitled,Rodunskiy,C#,Wednesday 8th of May 2024 09:38:51 AM CDT,"using System;

namespace CSLight
{
    public class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();

            int number = 0;
            int two = 2;
            int power = 1;
            int maxNumberRandom = 100;
            int numberRandom = random.Next(maxNumberRandom);

            Console.WriteLine($""–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ: {numberRandom}"");

            while (1 << power < numberRandom) 
            {
                power++;
            }

            Console.WriteLine($""–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å –¥–≤–æ–π–∫–∏, –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—è—â–∞—è —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ: {power}"");
        }
    }
}

"
7PmazVeD,snowybot,coinwalk,JavaScript,Wednesday 8th of May 2024 09:38:28 AM CDT,"var olderest = parseFloat(document.getElementById('pct_balance').value);
var betbse = Number((olderest/1000).toFixed(8));
var beast = betbse;
var tens = (betbse*10);
var sevens = (betbse*6.9);
var eights = (betbse*7.9);
var chickendinner = (olderest*4);
var great = olderest;
var original = olderest;
var flyt = 6.9;
var miss = 2.9;
var vimmi = ((Math.floor(olderest/tens))*tens);
var smokey = ((Math.floor(olderest/tens))*tens);
var fart = 7;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-olderest).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great>(vimmi+(beast*flyt))) {
    beast = beast*2;
    flyt = 4.9;
    miss = 4.9;
    vimmi = parseFloat(great);
} 
if (great<(vimmi-(beast*miss))) {
    beast = beast*2;
    flyt = 4.9;
    miss = 4.9;
    vimmi = parseFloat(great);
}  
if (((beast*2)>=(great-beast))&&(((great/10)-beast)<=tens)-&&(great<(((Math.floor(great/tens))*tens)+sevens))) {
    beast = betbse;
    flyt = 6.9;
    miss = 2.9;
    fart = 0;
    vimmi = ((Math.floor(great/tens))*tens);
}
if (((beast*4)>=((great/10)-beast))&&(((great/10)-beast)>tens)-&&(great<(((Math.floor(great/tens))*tens)+sevens))) {
    beast = betbse;
    flyt = 6.9;
    miss = 2.9;
    fart = 0;
    vimmi = ((Math.floor(great/tens))*tens);
}
if ((beast>=(original/10))&&(great<(((Math.floor(great/tens))*tens)+sevens))) {
    beast = betbse;
    flyt = 6.9;
    miss = 2.9;
    fart = 0;
    vimmi = ((Math.floor(great/tens))*tens);
} 
if (great>=chickendinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1000);
}
go();
"
VR5jnXVK,9(2),nq1s788,Python,Wednesday 8th of May 2024 09:28:07 AM CDT,"#https://inf-ege.sdamgia.ru/problem?id=38943
data = open('09 (1).csv').readlines()
answ = 0
for s in data:
    a = list(map(int, s.split(';')[:3]))
    a.sort()
    if a[0] ** 2 + a[1] ** 2 > a[2] ** 2:
        answ += 1
print(answ)"
GVd8FyFv,test relay with uart ESP32S3 6ch,hwthinker,Arduino,Wednesday 8th of May 2024 09:22:31 AM CDT,"#include <Arduino.h>
// #include ""pitches.h""

// Deklarasi pin relay
const int relay1 = 1;
const int relay2 = 2;
const int relay3 = 41;
const int relay4 = 42;
const int relay5 = 45;
const int relay6 = 46;
const int buzzer = 21;

#define NOTE_A4 440
#define NOTE_B4 494
#define NOTE_C3 131

int notes[] = {
  NOTE_A4, NOTE_B4, NOTE_C3
};

void setup() {
  // Inisialisasi pin relay sebagai output
  pinMode(relay1, OUTPUT);
  pinMode(relay2, OUTPUT);
  pinMode(relay3, OUTPUT);
  pinMode(relay4, OUTPUT);
  pinMode(relay5, OUTPUT);
  pinMode(relay6, OUTPUT);
  pinMode(buzzer, OUTPUT);

  // Inisialisasi komunikasi serial
  Serial.begin(9600);
}

void loop() {
  // Cek jika ada data yang diterima melalui serial port
  if (Serial.available() > 0) {
    char command = Serial.read();

    switch (command) {
      case '1':
        digitalWrite(relay1, !digitalRead(relay1));
        break;
      case '2':
        digitalWrite(relay2, !digitalRead(relay2));
        break;
      case '3':
        digitalWrite(relay3, !digitalRead(relay3));
        break;
      case '4':
        digitalWrite(relay4, !digitalRead(relay4));
        break;
      case '5':
        digitalWrite(relay5, !digitalRead(relay5));
        break;
      case '6':
        digitalWrite(relay6, !digitalRead(relay6));
        break;
      case 'b':                   
        tone(buzzer, notes[0], 20);
        tone(buzzer, notes[1], 20);
        tone(buzzer, notes[2], 20);
        break;
    }
  }
}"
BgZGJuqU,# gzip_find_nearest.py,here2share,Python,Wednesday 8th of May 2024 09:13:21 AM CDT,"# gzip_find_nearest.py *** fixed!

import gzip

def predict(test_set, training_set):
	predicted = 0
	test_number = 0
	for x1 in test_set:
		distance_from_x1 = []
		for x2 in training_set:
			Cx2 = len(gzip.compress(x2.encode()))
			x1x2 = "" "".join([x1, x2])
			Cx1x2 = len(gzip.compress(x1x2.encode()))
			ncd = (Cx1x2 - min(len(x1.encode()), Cx2)) / max(len(x1.encode()), Cx2)
			distance_from_x1.append((ncd, x2))
		sorted_distances = sorted(distance_from_x1)
		
		guess = sorted_distances[0][1]
		
		print(f""\nAltered Test: {x1}"")
		match_percentage = round((100-sorted_distances[0][0]),6)
		print(f""\tGuessing Nearest Match: {guess} at {match_percentage}%"")
		if answers[x1] == guess:
			print(""\t+++ CORRECT +++"")
			predicted = predicted + 1
		else:
			print(f""\t\tExpected Answer: {answers[x1]}"")
		test_number = test_number + 1
		print(f""Predicted: {predicted} out of {test_number}  Errors: {test_number - predicted}"")

# for testing
import random
import string

letters = list(string.ascii_letters)
L = len(letters)

tests = []
def generate_tests(num_tests):
	i = 0
	for _ in range(num_tests):
		test = ''
		for _ in range(9):
			s = letters.pop(i%11)
			letters.append(s)
			i += 1
			test += s
		tests.append(test)
		s = letters.pop(i%7)
		letters.append(s)

def alter_test(test):
	pos = random.sample(range(9), 2) # choose two positions to change
	new_test = list(test)
	new_test[pos[0]] = letters[(letters.index(new_test[pos[0]]) + random.randint(1, L - 1)) % L]
	new_test[pos[1]] = letters[(letters.index(new_test[pos[1]]) + random.randint(1, L - 1)) % L]
	return ''.join(new_test)

# generate a list of n random n-letter tests
generate_tests(1000)

# make a copy of each test with two letters changed
altered_tests = [alter_test(test) for test in tests]
answers = dict(zip(altered_tests, tests))
random.shuffle(tests)

# predict nearest matches for each altered test
predict(altered_tests, tests)"
dNb9h3ss,100an data product mysql sample,rezamalik15,MySQL,Wednesday 8th of May 2024 09:04:28 AM CDT,"insert  into products(productCode,productName,productLine,productScale,productVendor,productDescription,quantityInStock,buyPrice,MSRP) values 
('S10_1678','1969 Harley Davidson Ultimate Chopper','Motorcycles','1:10','Min Lin Diecast','This replica features working kickstand, front suspension, gear-shift lever, footbrake lever, drive chain, wheels and steering. All parts are particularly delicate due to their precise scale and require special care and attention.',7933,'48.81','95.70'),
('S10_1949','1952 Alpine Renault 1300','Classic Cars','1:10','Classic Metal Creations','Turnable front wheels; steering function; detailed interior; detailed engine; opening hood; opening trunk; opening doors; and detailed chassis.',7305,'98.58','214.30'),
('S10_2016','1996 Moto Guzzi 1100i','Motorcycles','1:10','Highway 66 Mini Classics','Official Moto Guzzi logos and insignias, saddle bags located on side of motorcycle, detailed engine, working steering, working suspension, two leather seats, luggage rack, dual exhaust pipes, small saddle bag located on handle bars, two-tone paint with chrome accents, superior die-cast detail , rotating wheels , working kick stand, diecast metal with plastic parts and baked enamel finish.',6625,'68.99','118.94'),
('S10_4698','2003 Harley-Davidson Eagle Drag Bike','Motorcycles','1:10','Red Start Diecast','Model features, official Harley Davidson logos and insignias, detachable rear wheelie bar, heavy diecast metal with resin parts, authentic multi-color tampo-printed graphics, separate engine drive belts, free-turning front fork, rotating tires and rear racing slick, certificate of authenticity, detailed engine, display stand\r\n, precision diecast replica, baked enamel finish, 1:10 scale model, removable fender, seat and tank cover piece for displaying the superior detail of the v-twin engine',5582,'91.02','193.66'),
('S10_4757','1972 Alfa Romeo GTA','Classic Cars','1:10','Motor City Art Classics','Features include: Turnable front wheels; steering function; detailed interior; detailed engine; opening hood; opening trunk; opening doors; and detailed chassis.',3252,'85.68','136.00'),
('S10_4962','1962 LanciaA Delta 16V','Classic Cars','1:10','Second Gear Diecast','Features include: Turnable front wheels; steering function; detailed interior; detailed engine; opening hood; opening trunk; opening doors; and detailed chassis.',6791,'103.42','147.74'),
('S12_1099','1968 Ford Mustang','Classic Cars','1:12','Autoart Studio Design','Hood, doors and trunk all open to reveal highly detailed interior features. Steering wheel actually turns the front wheels. Color dark green.',68,'95.34','194.57'),
('S12_1108','2001 Ferrari Enzo','Classic Cars','1:12','Second Gear Diecast','Turnable front wheels; steering function; detailed interior; detailed engine; opening hood; opening trunk; opening doors; and detailed chassis.',3619,'95.59','207.80'),
('S12_1666','1958 Setra Bus','Trucks and Buses','1:12','Welly Diecast Productions','Model features 30 windows, skylights & glare resistant glass, working steering system, original logos',1579,'77.90','136.67'),
('S12_2823','2002 Suzuki XREO','Motorcycles','1:12','Unimax Art Galleries','Official logos and insignias, saddle bags located on side of motorcycle, detailed engine, working steering, working suspension, two leather seats, luggage rack, dual exhaust pipes, small saddle bag located on handle bars, two-tone paint with chrome accents, superior die-cast detail , rotating wheels , working kick stand, diecast metal with plastic parts and baked enamel finish.',9997,'66.27','150.62'),
('S12_3148','1969 Corvair Monza','Classic Cars','1:18','Welly Diecast Productions','1:18 scale die-cast about 10\"" long doors open, hood opens, trunk opens and wheels roll',6906,'89.14','151.08'),
('S12_3380','1968 Dodge Charger','Classic Cars','1:12','Welly Diecast Productions','1:12 scale model of a 1968 Dodge Charger. Hood, doors and trunk all open to reveal highly detailed interior features. Steering wheel actually turns the front wheels. Color black',9123,'75.16','117.44'),
('S12_3891','1969 Ford Falcon','Classic Cars','1:12','Second Gear Diecast','Turnable front wheels; steering function; detailed interior; detailed engine; opening hood; opening trunk; opening doors; and detailed chassis.',1049,'83.05','173.02'),
('S12_3990','1970 Plymouth Hemi Cuda','Classic Cars','1:12','Studio M Art Models','Very detailed 1970 Plymouth Cuda model in 1:12 scale. The Cuda is generally accepted as one of the fastest original muscle cars from the 1970s. This model is a reproduction of one of the orginal 652 cars built in 1970. Red color.',5663,'31.92','79.80'),
('S12_4473','1957 Chevy Pickup','Trucks and Buses','1:12','Exoto Designs','1:12 scale die-cast about 20\"" long Hood opens, Rubber wheels',6125,'55.70','118.50'),
('S12_4675','1969 Dodge Charger','Classic Cars','1:12','Welly Diecast Productions','Detailed model of the 1969 Dodge Charger. This model includes finely detailed interior and exterior features. Painted in red and white.',7323,'58.73','115.16'),
('S18_1097','1940 Ford Pickup Truck','Trucks and Buses','1:18','Studio M Art Models','This model features soft rubber tires, working steering, rubber mud guards, authentic Ford logos, detailed undercarriage, opening doors and hood,  removable split rear gate, full size spare mounted in bed, detailed interior with opening glove box',2613,'58.33','116.67'),
('S18_1129','1993 Mazda RX-7','Classic Cars','1:18','Highway 66 Mini Classics','This model features, opening hood, opening doors, detailed engine, rear spoiler, opening trunk, working steering, tinted windows, baked enamel finish. Color red.',3975,'83.51','141.54'),
('S18_1342','1937 Lincoln Berline','Vintage Cars','1:18','Motor City Art Classics','Features opening engine cover, doors, trunk, and fuel filler cap. Color black',8693,'60.62','102.74'),
('S18_1367','1936 Mercedes-Benz 500K Special Roadster','Vintage Cars','1:18','Studio M Art Models','This 1:18 scale replica is constructed of heavy die-cast metal and has all the features of the original: working doors and rumble seat, independent spring suspension, detailed interior, working steering system, and a bifold hood that reveals an engine so accurate that it even includes the wiring. All this is topped off with a baked enamel finish. Color white.',8635,'24.26','53.91'),
('S18_1589','1965 Aston Martin DB5','Classic Cars','1:18','Classic Metal Creations','Die-cast model of the silver 1965 Aston Martin DB5 in silver. This model includes full wire wheels and doors that open with fully detailed passenger compartment. In 1:18 scale, this model measures approximately 10 inches/20 cm long.',9042,'65.96','124.44'),
('S18_1662','1980s Black Hawk Helicopter','Planes','1:18','Red Start Diecast','1:18 scale replica of actual Army\'s UH-60L BLACK HAWK Helicopter. 100% hand-assembled. Features rotating rotor blades, propeller blades and rubber wheels.',5330,'77.27','157.69'),
('S18_1749','1917 Grand Touring Sedan','Vintage Cars','1:18','Welly Diecast Productions','This 1:18 scale replica of the 1917 Grand Touring car has all the features you would expect from museum quality reproductions: all four doors and bi-fold hood opening, detailed engine and instrument panel, chrome-look trim, and tufted upholstery, all topped off with a factory baked-enamel finish.',2724,'86.70','170.00'),
('S18_1889','1948 Porsche 356-A Roadster','Classic Cars','1:18','Gearbox Collectibles','This precision die-cast replica features opening doors, superb detail and craftsmanship, working steering system, opening forward compartment, opening rear trunk with removable spare, 4 wheel independent spring suspension as well as factory baked enamel finish.',8826,'53.90','77.00'),
('S18_1984','1995 Honda Civic','Classic Cars','1:18','Min Lin Diecast','This model features, opening hood, opening doors, detailed engine, rear spoiler, opening trunk, working steering, tinted windows, baked enamel finish. Color yellow.',9772,'93.89','142.25'),
('S18_2238','1998 Chrysler Plymouth Prowler','Classic Cars','1:18','Gearbox Collectibles','Turnable front wheels; steering function; detailed interior; detailed engine; opening hood; opening trunk; opening doors; and detailed chassis.',4724,'101.51','163.73'),
('S18_2248','1911 Ford Town Car','Vintage Cars','1:18','Motor City Art Classics','Features opening hood, opening doors, opening trunk, wide white wall tires, front door arm rests, working steering system.',540,'33.30','60.54'),
('S18_2319','1964 Mercedes Tour Bus','Trucks and Buses','1:18','Unimax Art Galleries','Exact replica. 100+ parts. working steering system, original logos',8258,'74.86','122.73'),
('S18_2325','1932 Model A Ford J-Coupe','Vintage Cars','1:18','Autoart Studio Design','This model features grille-mounted chrome horn, lift-up louvered hood, fold-down rumble seat, working steering system, chrome-covered spare, opening doors, detailed and wired engine',9354,'58.48','127.13'),
('S18_2432','1926 Ford Fire Engine','Trucks and Buses','1:18','Carousel DieCast Legends','Gleaming red handsome appearance. Everything is here the fire hoses, ladder, axes, bells, lanterns, ready to fight any inferno.',2018,'24.92','60.77'),
('S18_2581','P-51-D Mustang','Planes','1:72','Gearbox Collectibles','Has retractable wheels and comes with a stand',992,'49.00','84.48'),
('S18_2625','1936 Harley Davidson El Knucklehead','Motorcycles','1:18','Welly Diecast Productions','Intricately detailed with chrome accents and trim, official die-struck logos and baked enamel finish.',4357,'24.23','60.57'),
('S18_2795','1928 Mercedes-Benz SSK','Vintage Cars','1:18','Gearbox Collectibles','This 1:18 replica features grille-mounted chrome horn, lift-up louvered hood, fold-down rumble seat, working steering system, chrome-covered spare, opening doors, detailed and wired engine. Color black.',548,'72.56','168.75'),
('S18_2870','1999 Indy 500 Monte Carlo SS','Classic Cars','1:18','Red Start Diecast','Features include opening and closing doors. Color: Red',8164,'56.76','132.00'),
('S18_2949','1913 Ford Model T Speedster','Vintage Cars','1:18','Carousel DieCast Legends','This 250 part reproduction includes moving handbrakes, clutch, throttle and foot pedals, squeezable horn, detailed wired engine, removable water, gas, and oil cans, pivoting monocle windshield, all topped with a baked enamel red finish. Each replica comes with an Owners Title and Certificate of Authenticity. Color red.',4189,'60.78','101.31'),
('S18_2957','1934 Ford V8 Coupe','Vintage Cars','1:18','Min Lin Diecast','Chrome Trim, Chrome Grille, Opening Hood, Opening Doors, Opening Trunk, Detailed Engine, Working Steering System',5649,'34.35','62.46'),
('S18_3029','1999 Yamaha Speed Boat','Ships','1:18','Min Lin Diecast','Exact replica. Wood and Metal. Many extras including rigging, long boats, pilot house, anchors, etc. Comes with three masts, all square-rigged.',4259,'51.61','86.02'),
('S18_3136','18th Century Vintage Horse Carriage','Vintage Cars','1:18','Red Start Diecast','Hand crafted diecast-like metal horse carriage is re-created in about 1:18 scale of antique horse carriage. This antique style metal Stagecoach is all hand-assembled with many different parts.\r\n\r\nThis collectible metal horse carriage is painted in classic Red, and features turning steering wheel and is entirely hand-finished.',5992,'60.74','104.72'),
('S18_3140','1903 Ford Model A','Vintage Cars','1:18','Unimax Art Galleries','Features opening trunk,  working steering system',3913,'68.30','136.59'),
('S18_3232','1992 Ferrari 360 Spider red','Classic Cars','1:18','Unimax Art Galleries','his replica features opening doors, superb detail and craftsmanship, working steering system, opening forward compartment, opening rear trunk with removable spare, 4 wheel independent spring suspension as well as factory baked enamel finish.',8347,'77.90','169.34'),
('S18_3233','1985 Toyota Supra','Classic Cars','1:18','Highway 66 Mini Classics','This model features soft rubber tires, working steering, rubber mud guards, authentic Ford logos, detailed undercarriage, opening doors and hood, removable split rear gate, full size spare mounted in bed, detailed interior with opening glove box',7733,'57.01','107.57'),
('S18_3259','Collectable Wooden Train','Trains','1:18','Carousel DieCast Legends','Hand crafted wooden toy train set is in about 1:18 scale, 25 inches in total length including 2 additional carts, of actual vintage train. This antique style wooden toy train model set is all hand-assembled with 100% wood.',6450,'67.56','100.84'),
('S18_3278','1969 Dodge Super Bee','Classic Cars','1:18','Min Lin Diecast','This replica features opening doors, superb detail and craftsmanship, working steering system, opening forward compartment, opening rear trunk with removable spare, 4 wheel independent spring suspension as well as factory baked enamel finish.',1917,'49.05','80.41'),
('S18_3320','1917 Maxwell Touring Car','Vintage Cars','1:18','Exoto Designs','Features Gold Trim, Full Size Spare Tire, Chrome Trim, Chrome Grille, Opening Hood, Opening Doors, Opening Trunk, Detailed Engine, Working Steering System',7913,'57.54','99.21'),
('S18_3482','1976 Ford Gran Torino','Classic Cars','1:18','Gearbox Collectibles','Highly detailed 1976 Ford Gran Torino \""Starsky and Hutch\"" diecast model. Very well constructed and painted in red and white patterns.',9127,'73.49','146.99'),
('S18_3685','1948 Porsche Type 356 Roadster','Classic Cars','1:18','Gearbox Collectibles','This model features working front and rear suspension on accurately replicated and actuating shock absorbers as well as opening engine cover, rear stabilizer flap,  and 4 opening doors.',8990,'62.16','141.28'),
('S18_3782','1957 Vespa GS150','Motorcycles','1:18','Studio M Art Models','Features rotating wheels , working kick stand. Comes with stand.',7689,'32.95','62.17'),
('S18_3856','1941 Chevrolet Special Deluxe Cabriolet','Vintage Cars','1:18','Exoto Designs','Features opening hood, opening doors, opening trunk, wide white wall tires, front door arm rests, working steering system, leather upholstery. Color black.',2378,'64.58','105.87'),
('S18_4027','1970 Triumph Spitfire','Classic Cars','1:18','Min Lin Diecast','Features include opening and closing doors. Color: White.',5545,'91.92','143.62'),
('S18_4409','1932 Alfa Romeo 8C2300 Spider Sport','Vintage Cars','1:18','Exoto Designs','This 1:18 scale precision die cast replica features the 6 front headlights of the original, plus a detailed version of the 142 horsepower straight 8 engine, dual spares and their famous comprehensive dashboard. Color black.',6553,'43.26','92.03'),
('S18_4522','1904 Buick Runabout','Vintage Cars','1:18','Exoto Designs','Features opening trunk,  working steering system',8290,'52.66','87.77'),
('S18_4600','1940s Ford truck','Trucks and Buses','1:18','Motor City Art Classics','This 1940s Ford Pick-Up truck is re-created in 1:18 scale of original 1940s Ford truck. This antique style metal 1940s Ford Flatbed truck is all hand-assembled. This collectible 1940\'s Pick-Up truck is painted in classic dark green color, and features rotating wheels.',3128,'84.76','121.08'),
('S18_4668','1939 Cadillac Limousine','Vintage Cars','1:18','Studio M Art Models','Features completely detailed interior including Velvet flocked drapes,deluxe wood grain floor, and a wood grain casket with seperate chrome handles',6645,'23.14','50.31'),
('S18_4721','1957 Corvette Convertible','Classic Cars','1:18','Classic Metal Creations','1957 die cast Corvette Convertible in Roman Red with white sides and whitewall tires. 1:18 scale quality die-cast with detailed engine and underbvody. Now you can own The Classic Corvette.',1249,'69.93','148.80'),
('S18_4933','1957 Ford Thunderbird','Classic Cars','1:18','Studio M Art Models','This 1:18 scale precision die-cast replica, with its optional porthole hardtop and factory baked-enamel Thunderbird Bronze finish, is a 100% accurate rendition of this American classic.',3209,'34.21','71.27'),
('S24_1046','1970 Chevy Chevelle SS 454','Classic Cars','1:24','Unimax Art Galleries','This model features rotating wheels, working streering system and opening doors. All parts are particularly delicate due to their precise scale and require special care and attention. It should not be picked up by the doors, roof, hood or trunk.',1005,'49.24','73.49'),
('S24_1444','1970 Dodge Coronet','Classic Cars','1:24','Highway 66 Mini Classics','1:24 scale die-cast about 18\"" long doors open, hood opens and rubber wheels',4074,'32.37','57.80'),
('S24_1578','1997 BMW R 1100 S','Motorcycles','1:24','Autoart Studio Design','Detailed scale replica with working suspension and constructed from over 70 parts',7003,'60.86','112.70'),
('S24_1628','1966 Shelby Cobra 427 S/C','Classic Cars','1:24','Carousel DieCast Legends','This diecast model of the 1966 Shelby Cobra 427 S/C includes many authentic details and operating parts. The 1:24 scale model of this iconic lighweight sports car from the 1960s comes in silver and it\'s own display case.',8197,'29.18','50.31'),
('S24_1785','1928 British Royal Navy Airplane','Planes','1:24','Classic Metal Creations','Official logos and insignias',3627,'66.74','109.42'),
('S24_1937','1939 Chevrolet Deluxe Coupe','Vintage Cars','1:24','Motor City Art Classics','This 1:24 scale die-cast replica of the 1939 Chevrolet Deluxe Coupe has the same classy look as the original. Features opening trunk, hood and doors and a showroom quality baked enamel finish.',7332,'22.57','33.19'),
('S24_2000','1960 BSA Gold Star DBD34','Motorcycles','1:24','Highway 66 Mini Classics','Detailed scale replica with working suspension and constructed from over 70 parts',15,'37.32','76.17'),
('S24_2011','18th century schooner','Ships','1:24','Carousel DieCast Legends','All wood with canvas sails. Many extras including rigging, long boats, pilot house, anchors, etc. Comes with 4 masts, all square-rigged.',1898,'82.34','122.89'),
('S24_2022','1938 Cadillac V-16 Presidential Limousine','Vintage Cars','1:24','Classic Metal Creations','This 1:24 scale precision die cast replica of the 1938 Cadillac V-16 Presidential Limousine has all the details of the original, from the flags on the front to an opening back seat compartment complete with telephone and rifle. Features factory baked-enamel black finish, hood goddess ornament, working jump seats.',2847,'20.61','44.80'),
('S24_2300','1962 Volkswagen Microbus','Trucks and Buses','1:24','Autoart Studio Design','This 1:18 scale die cast replica of the 1962 Microbus is loaded with features: A working steering system, opening front doors and tailgate, and famous two-tone factory baked enamel finish, are all topped of by the sliding, real fabric, sunroof.',2327,'61.34','127.79'),
('S24_2360','1982 Ducati 900 Monster','Motorcycles','1:24','Highway 66 Mini Classics','Features two-tone paint with chrome accents, superior die-cast detail , rotating wheels , working kick stand',6840,'47.10','69.26'),
('S24_2766','1949 Jaguar XK 120','Classic Cars','1:24','Classic Metal Creations','Precision-engineered from original Jaguar specification in perfect scale ratio. Features opening doors, superb detail and craftsmanship, working steering system, opening forward compartment, opening rear trunk with removable spare, 4 wheel independent spring suspension as well as factory baked enamel finish.',2350,'47.25','90.87'),
('S24_2840','1958 Chevy Corvette Limited Edition','Classic Cars','1:24','Carousel DieCast Legends','The operating parts of this 1958 Chevy Corvette Limited Edition are particularly delicate due to their precise scale and require special care and attention. Features rotating wheels, working streering, opening doors and trunk. Color dark green.',2542,'15.91','35.36'),
('S24_2841','1900s Vintage Bi-Plane','Planes','1:24','Autoart Studio Design','Hand crafted diecast-like metal bi-plane is re-created in about 1:24 scale of antique pioneer airplane. All hand-assembled with many different parts. Hand-painted in classic yellow and features correct markings of original airplane.',5942,'34.25','68.51'),
('S24_2887','1952 Citroen-15CV','Classic Cars','1:24','Exoto Designs','Precision crafted hand-assembled 1:18 scale reproduction of the 1952 15CV, with its independent spring suspension, working steering system, opening doors and hood, detailed engine and instrument panel, all topped of with a factory fresh baked enamel finish.',1452,'72.82','117.44'),
('S24_2972','1982 Lamborghini Diablo','Classic Cars','1:24','Second Gear Diecast','This replica features opening doors, superb detail and craftsmanship, working steering system, opening forward compartment, opening rear trunk with removable spare, 4 wheel independent spring suspension as well as factory baked enamel finish.',7723,'16.24','37.76'),
('S24_3151','1912 Ford Model T Delivery Wagon','Vintage Cars','1:24','Min Lin Diecast','This model features chrome trim and grille, opening hood, opening doors, opening trunk, detailed engine, working steering system. Color white.',9173,'46.91','88.51'),
('S24_3191','1969 Chevrolet Camaro Z28','Classic Cars','1:24','Exoto Designs','1969 Z/28 Chevy Camaro 1:24 scale replica. The operating parts of this limited edition 1:24 scale diecast model car 1969 Chevy Camaro Z28- hood, trunk, wheels, streering, suspension and doors- are particularly delicate due to their precise scale and require special care and attention.',4695,'50.51','85.61'),
('S24_3371','1971 Alpine Renault 1600s','Classic Cars','1:24','Welly Diecast Productions','This 1971 Alpine Renault 1600s replica Features opening doors, superb detail and craftsmanship, working steering system, opening forward compartment, opening rear trunk with removable spare, 4 wheel independent spring suspension as well as factory baked enamel finish.',7995,'38.58','61.23'),
('S24_3420','1937 Horch 930V Limousine','Vintage Cars','1:24','Autoart Studio Design','Features opening hood, opening doors, opening trunk, wide white wall tires, front door arm rests, working steering system',2902,'26.30','65.75'),
('S24_3432','2002 Chevy Corvette','Classic Cars','1:24','Gearbox Collectibles','The operating parts of this limited edition Diecast 2002 Chevy Corvette 50th Anniversary Pace car Limited Edition are particularly delicate due to their precise scale and require special care and attention. Features rotating wheels, poseable streering, opening doors and trunk.',9446,'62.11','107.08'),
('S24_3816','1940 Ford Delivery Sedan','Vintage Cars','1:24','Carousel DieCast Legends','Chrome Trim, Chrome Grille, Opening Hood, Opening Doors, Opening Trunk, Detailed Engine, Working Steering System. Color black.',6621,'48.64','83.86'),
('S24_3856','1956 Porsche 356A Coupe','Classic Cars','1:18','Classic Metal Creations','Features include: Turnable front wheels; steering function; detailed interior; detailed engine; opening hood; opening trunk; opening doors; and detailed chassis.',6600,'98.30','140.43'),
('S24_3949','Corsair F4U ( Bird Cage)','Planes','1:24','Second Gear Diecast','Has retractable wheels and comes with a stand. Official logos and insignias.',6812,'29.34','68.24'),
('S24_3969','1936 Mercedes Benz 500k Roadster','Vintage Cars','1:24','Red Start Diecast','This model features grille-mounted chrome horn, lift-up louvered hood, fold-down rumble seat, working steering system and rubber wheels. Color black.',2081,'21.75','41.03'),
('S24_4048','1992 Porsche Cayenne Turbo Silver','Classic Cars','1:24','Exoto Designs','This replica features opening doors, superb detail and craftsmanship, working steering system, opening forward compartment, opening rear trunk with removable spare, 4 wheel independent spring suspension as well as factory baked enamel finish.',6582,'69.78','118.28'),
('S24_4258','1936 Chrysler Airflow','Vintage Cars','1:24','Second Gear Diecast','Features opening trunk,  working steering system. Color dark green.',4710,'57.46','97.39'),
('S24_4278','1900s Vintage Tri-Plane','Planes','1:24','Unimax Art Galleries','Hand crafted diecast-like metal Triplane is Re-created in about 1:24 scale of antique pioneer airplane. This antique style metal triplane is all hand-assembled with many different parts.',2756,'36.23','72.45'),
('S24_4620','1961 Chevrolet Impala','Classic Cars','1:18','Classic Metal Creations','This 1:18 scale precision die-cast reproduction of the 1961 Chevrolet Impala has all the features-doors, hood and trunk that open; detailed 409 cubic-inch engine; chrome dashboard and stick shift, two-tone interior; working steering system; all topped of with a factory baked-enamel finish.',7869,'32.33','80.84'),
('S32_1268','1980‚Äôs GM Manhattan Express','Trucks and Buses','1:32','Motor City Art Classics','This 1980‚Äôs era new look Manhattan express is still active, running from the Bronx to mid-town Manhattan. Has 35 opeining windows and working lights. Needs a battery.',5099,'53.93','96.31'),
('S32_1374','1997 BMW F650 ST','Motorcycles','1:32','Exoto Designs','Features official die-struck logos and baked enamel finish. Comes with stand.',178,'66.92','99.89'),
('S32_2206','1982 Ducati 996 R','Motorcycles','1:32','Gearbox Collectibles','Features rotating wheels , working kick stand. Comes with stand.',9241,'24.14','40.23'),
('S32_2509','1954 Greyhound Scenicruiser','Trucks and Buses','1:32','Classic Metal Creations','Model features bi-level seating, 50 windows, skylights & glare resistant glass, working steering system, original logos',2874,'25.98','54.11'),
('S32_3207','1950\'s Chicago Surface Lines Streetcar','Trains','1:32','Gearbox Collectibles','This streetcar is a joy to see. It has 80 separate windows, electric wire guides, detailed interiors with seats, poles and drivers controls, rolling and turning wheel assemblies, plus authentic factory baked-enamel finishes (Green Hornet for Chicago and Cream and Crimson for Boston).',8601,'26.72','62.14'),
('S32_3522','1996 Peterbilt 379 Stake Bed with Outrigger','Trucks and Buses','1:32','Red Start Diecast','This model features, opening doors, detailed engine, working steering, tinted windows, detailed interior, die-struck logos, removable stakes operating outriggers, detachable second trailer, functioning 360-degree self loader, precision molded resin trailer and trim, baked enamel finish on cab',814,'33.61','64.64'),
('S32_4289','1928 Ford Phaeton Deluxe','Vintage Cars','1:32','Highway 66 Mini Classics','This model features grille-mounted chrome horn, lift-up louvered hood, fold-down rumble seat, working steering system',136,'33.02','68.79'),
('S32_4485','1974 Ducati 350 Mk3 Desmo','Motorcycles','1:32','Second Gear Diecast','This model features two-tone paint with chrome accents, superior die-cast detail , rotating wheels , working kick stand',3341,'56.13','102.05'),
('S50_1341','1930 Buick Marquette Phaeton','Vintage Cars','1:50','Studio M Art Models','Features opening trunk,  working steering system',7062,'27.06','43.64'),
('S50_1392','Diamond T620 Semi-Skirted Tanker','Trucks and Buses','1:50','Highway 66 Mini Classics','This limited edition model is licensed and perfectly scaled for Lionel Trains. The Diamond T620 has been produced in solid precision diecast and painted with a fire baked enamel finish. It comes with a removable tanker and is a perfect model to add authenticity to your static train or car layout or to just have on display.',1016,'68.29','115.75'),
('S50_1514','1962 City of Detroit Streetcar','Trains','1:50','Classic Metal Creations','This streetcar is a joy to see. It has 99 separate windows, electric wire guides, detailed interiors with seats, poles and drivers controls, rolling and turning wheel assemblies, plus authentic factory baked-enamel finishes (Green Hornet for Chicago and Cream and Crimson for Boston).',1645,'37.49','58.58'),
('S50_4713','2002 Yamaha YZR M1','Motorcycles','1:50','Autoart Studio Design','Features rotating wheels , working kick stand. Comes with stand.',600,'34.17','81.36'),
('S700_1138','The Schooner Bluenose','Ships','1:700','Autoart Studio Design','All wood with canvas sails. Measures 31 1/2 inches in Length, 22 inches High and 4 3/4 inches Wide. Many extras.\r\nThe schooner Bluenose was built in Nova Scotia in 1921 to fish the rough waters off the coast of Newfoundland. Because of the Bluenose racing prowess she became the pride of all Canadians. Still featured on stamps and the Canadian dime, the Bluenose was lost off Haiti in 1946.',1897,'34.00','66.67'),
('S700_1691','American Airlines: B767-300','Planes','1:700','Min Lin Diecast','Exact replia with official logos and insignias and retractable wheels',5841,'51.15','91.34'),
('S700_1938','The Mayflower','Ships','1:700','Studio M Art Models','Measures 31 1/2 inches Long x 25 1/2 inches High x 10 5/8 inches Wide\r\nAll wood with canvas sail. Extras include long boats, rigging, ladders, railing, anchors, side cannons, hand painted, etc.',737,'43.30','86.61'),
('S700_2047','HMS Bounty','Ships','1:700','Unimax Art Galleries','Measures 30 inches Long x 27 1/2 inches High x 4 3/4 inches Wide. \r\nMany extras including rigging, long boats, pilot house, anchors, etc. Comes with three masts, all square-rigged.',3501,'39.83','90.52'),
('S700_2466','America West Airlines B757-200','Planes','1:700','Motor City Art Classics','Official logos and insignias. Working steering system. Rotating jet engines',9653,'68.80','99.72'),
('S700_2610','The USS Constitution Ship','Ships','1:700','Red Start Diecast','All wood with canvas sails. Measures 31 1/2\"" Length x 22 3/8\"" High x 8 1/4\"" Width. Extras include 4 boats on deck, sea sprite on bow, anchors, copper railing, pilot houses, etc.',7083,'33.97','72.28'),
('S700_2824','1982 Camaro Z28','Classic Cars','1:18','Carousel DieCast Legends','Features include opening and closing doors. Color: White. \r\nMeasures approximately 9 1/2\"" Long.',6934,'46.53','101.15'),
('S700_2834','ATA: B757-300','Planes','1:700','Highway 66 Mini Classics','Exact replia with official logos and insignias and retractable wheels',7106,'59.33','118.65'),
('S700_3167','F/A 18 Hornet 1/72','Planes','1:72','Motor City Art Classics','10\"" Wingspan with retractable landing gears.Comes with pilot',551,'54.40','80.00'),
('S700_3505','The Titanic','Ships','1:700','Carousel DieCast Legends','Completed model measures 19 1/2 inches long, 9 inches high, 3inches wide and is in barn red/black. All wood and metal.',1956,'51.09','100.17'),
('S700_3962','The Queen Mary','Ships','1:700','Welly Diecast Productions','Exact replica. Wood and Metal. Many extras including rigging, long boats, pilot house, anchors, etc. Comes with three masts, all square-rigged.',5088,'53.63','99.31'),
('S700_4002','American Airlines: MD-11S','Planes','1:700','Second Gear Diecast','Polished finish. Exact replia with official logos and insignias and retractable wheels',8820,'36.27','74.03'),
('S72_1253','Boeing X-32A JSF','Planes','1:72','Motor City Art Classics','10\"" Wingspan with retractable landing gears.Comes with pilot',4857,'32.77','49.66'),
('S72_3212','Pont Yacht','Ships','1:72','Unimax Art Galleries','Measures 38 inches Long x 33 3/4 inches High. Includes a stand.\r\nMany extras including rigging, long boats, pilot house, anchors, etc. Comes with 2 masts, all square-rigged',414,'33.30','54.60');
"
d8rycvjC,dynamicka hloubka the very best,max2201111,Python,Wednesday 8th of May 2024 08:37:56 AM CDT,"import chess
import time

def ten_moves_rule(board):
    """"""Pravidlo pro vyhodnocen√≠ rem√≠zov√©ho stavu na z√°kladƒõ posledn√≠ch deseti tah≈Ø bez z√°bƒõru nebo pohybu pƒõ≈°ce.""""""
    history = list(board.move_stack)
    if len(history) < 10:
        return False
    for move in history[-10:]:
        if board.is_capture(move) or board.piece_type_at(move.from_square) == chess.PAWN:
            return False
    return True

def evaluate_board(board, depth):
    """"""Vyhodno≈•te stav ≈°achovnice pro rozhodov√°n√≠ minimaxem.""""""
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 4
    elif board.is_insufficient_material():
        return 3
    elif ten_moves_rule(board):
        return 2
    return 1  # V√Ωchoz√≠ heuristika, pokud ≈æ√°dn√° z v√Ω≈°e uveden√Ωch podm√≠nek nen√≠ splnƒõna

def minimax(board, depth, alpha, beta, maximizing_player, position_count, memo, start_time, last_print_time, depth_limit):
    current_time = time.time()
    if current_time - start_time > 5:  # Limit v√Ωpoƒçtu na 5 sekund
        return [], 0  # Vr√°t√≠ neutr√°ln√≠ hodnotu, pokud vypr≈°√≠ ƒças

    position_count[0] += 1
    key = (board.fen(), maximizing_player, depth, alpha, beta)
    if key in memo:
        return memo[key]

    if board.is_game_over() or depth >= depth_limit:
        eval = evaluate_board(board, depth)
        memo[key] = ([], eval)
        return [], eval

    best_eval = float('-inf') if maximizing_player else float('inf')
    best_sequence = []

    for move in board.legal_moves:
        move_san = board.san(move)
        board.push(move)
        current_depth_limit = depth_limit if not board.is_check() else depth_limit + 1  # Zvy≈° hloubku, pokud je kr√°l v ≈°achu
        sequence, eval = minimax(board, depth + 1, alpha, beta, not maximizing_player, position_count, memo, start_time, last_print_time, current_depth_limit)
        board.pop()
        
        if (maximizing_player and eval > best_eval) or (not maximizing_player and eval < best_eval):
            best_eval = eval
            best_sequence = [(move, move_san)] + sequence

        if maximizing_player:
            alpha = max(alpha, eval)
        else:
            beta = min(beta, eval)

        if beta <= alpha:
            break

    memo[key] = (best_sequence, best_eval)
    return best_sequence, best_eval

start_time = time.time()
position_count = [0]
memo = {}
last_print_time = [start_time]
depth_limit = 3  # Nastav poƒç√°teƒçn√≠ omezen√≠ hloubky
start_fen = ""7k/8/3Q4/5K2/8/8/8/8 w - - 0 1""
board = chess.Board(start_fen)

print(""Poƒç√°teƒçn√≠ ≈°achovnice:"")
print(board)
print(""Poƒç√°teƒçn√≠ FEN:"", board.fen(), ""\n"")

sequence, final_score = minimax(board, 0, float('-inf'), float('inf'), True, position_count, memo, start_time, last_print_time, depth_limit)
print(""\n\nOptimal move sequence:"")
for move, san in sequence:
    print(""Move:"", san)
    board.push(move)
    print(""Board:\n"", board)
    print(""FEN:"", board.fen())
    print(""Evaluation:"", evaluate_board(board, 0), ""\n"")
print(""Final evaluation score:"", final_score)"
SJnzEKEB,Untitled,Armen_06,Dart,Wednesday 8th of May 2024 08:17:37 AM CDT,"            openInAppController.stream.listen((event) async {
              if (widget.index != selectedIndexNotifier.value) return;

              final urlToLaunch = (await controller.getUrl()).toString();

              ApplicationMessagesService.showSnackBarGenericError(
                  (await controller.getHtml()) as String);

              ApplicationMessagesService.showSnackBarGenericError(urlToLaunch);
            });"
MqQfcLKA,#4 - Hades // v1.1.0,Monoxide,HTML,Wednesday 8th of May 2024 08:13:39 AM CDT,"<!DOCTYPE html>

<html>

<!--------------------------------------------------------------------
 
  ""Hades"" // a custom tumblr theme made by dioti
  Version: 1.1.0
  Published: 06/01/20 (Last updated: 08/05/24)
 
  ----------
  NOTES:
  + Do not steal code or remove credits.
  + Please ask for permission if using as a base code.
  + You're free to edit the code, providing you do not republish it.
  + Tested in Chrome, Firefox and Edge.
  + Works best at 1920x1080 resolution.
  ----------
  CREDITS:
  + Moveable tooltip script by Daniel Imms
  + jQuery (https://jquery.com/)
  + Custom fonts:
      ~ Alegreya Sans (https://fonts.google.com/specimen/Alegreya+Sans)
      ~ Caesar Dressing (https://fonts.google.com/specimen/Caesar+Dressing)
      ~ Titillium Web (https://fonts.google.com/specimen/Titillium+Web)
      ~ Gelasio (https://fonts.google.com/specimen/Gelasio)
  + Icons:
      ~ Font Awesome (http://fontawesome.io/)
  + Images, icons and various other theme assets are from the game ""Hades"" which is created and owned by Supergiant Games, who hold the copyright of ""Hades"". The use of these assets are believed to qualify as fair use under United States copyright law, as such display does not significantly impede the right of the copyright holder to sell the copyrighted material.
  ----------
 
  https://dioti.tumblr.com/
  https://dioticodes.tumblr.com
 
--------------------------------------------------------------------->

<head>
    <title>{Title}</title>
        <link rel=""shortcut icon"" href=""{Favicon}"">
        <link rel=""alternate"" type=""application/rss+xml"" href=""{RSS}"">
        {block:Description}
            <meta name=""description"" content=""{MetaDescription}"" />
        {/block:Description}
        
        <meta name=""text:Name"" content=""Zagreus""/>
        <meta name=""text:Tagline"" content=""In the name of blogging! Tumblr, I accept &lt;a href=&quot;https://dioti.tumblr.com/post/190105572068/hades-a-custom-tumblr-theme-by&quot;&gt;this theme&lt;/a&gt;!""/>
        <meta name=""text:Post Font Size"" content=""18px""/>
        
        <meta name=""select:Location"" content="""" title=""None""/>
        <meta name=""select:Location"" content=""https://static.tumblr.com/rphroxy/2BKqi4di3/house-of-hades.jpg"" title=""House of Hades""/>
        <meta name=""select:Location"" content=""https://static.tumblr.com/rphroxy/Yg4qi4dif/garden.jpg"" title=""Garden""/>
        <meta name=""select:Location"" content=""https://static.tumblr.com/rphroxy/DToqi4djl/tartarus.jpg"" title=""Tartarus""/>
        <meta name=""select:Location"" content=""https://static.tumblr.com/rphroxy/Tyiqi4djs/asphodel.jpg"" title=""Asphodel""/>
        <meta name=""select:Location"" content=""https://static.tumblr.com/rphroxy/NHfqi4djx/elysium.jpg"" title=""Elysium""/>
        <meta name=""select:Location"" content=""https://static.tumblr.com/rphroxy/qvnqi4dk3/styx.jpg"" title=""Temple of Styx""/>
        <meta name=""select:Location"" content=""https://static.tumblr.com/rphroxy/kSSqi4dk8/void.jpg"" title=""The Void""/>
        <meta name=""select:Location"" content=""https://static.tumblr.com/rphroxy/9viqi4dke/sunrise_blue.jpg"" title=""Sunrise (Blue)""/>
        <meta name=""select:Location"" content=""https://static.tumblr.com/rphroxy/kiNqi4dkk/sunrise_red.jpg"" title=""Sunrise (Red)""/>
        <meta name=""select:Location"" content=""https://static.tumblr.com/rphroxy/ajsqi4dkq/cottage.jpg"" title=""Cottage""/>
        
        <meta name=""select:Cursor Style"" content=""*, body {cursor: url(&#39;https://static.tumblr.com/rphroxy/n2tq3k0jx/cursordefault.png&#39;), auto!important} a:hover, a img:hover {cursor: url(&#39;https://static.tumblr.com/rphroxy/oVwq3k0lg/cursorinteractpress.png&#39;), auto!important}"" title=""Custom (Hover Alternative)""/>
        <meta name=""select:Cursor Style"" content="""" title=""Normal""/>
        <meta name=""select:Cursor Style"" content=""*, body {cursor: url(&#39;https://static.tumblr.com/rphroxy/n2tq3k0jx/cursordefault.png&#39;), auto!important}"" title=""Custom (Static)""/>
        <meta name=""select:Cursor Style"" content=""*, body {cursor: url(&#39;https://static.tumblr.com/rphroxy/n2tq3k0jx/cursordefault.png&#39;), auto!important} a:hover, a img:hover {cursor: url(&#39;https://static.tumblr.com/rphroxy/w58q3k0l7/cursordefaultpress.png&#39;), auto!important}"" title=""Custom (Hover)""/>
        <meta name=""select:Cursor Style"" content=""*, body {cursor: url(&#39;https://static.tumblr.com/rphroxy/n2tq3k0jx/cursordefault.png&#39;), auto!important} .mouse-down {cursor: url(&#39;https://static.tumblr.com/rphroxy/w58q3k0l7/cursordefaultpress.png&#39;), auto!important}"" title=""Custom (Mouseclick)""/>
        <meta name=""select:Cursor Style"" content=""*, body {cursor: url(&#39;https://static.tumblr.com/rphroxy/n2tq3k0jx/cursordefault.png&#39;), auto!important} .mouse-down {cursor: url(&#39;https://static.tumblr.com/rphroxy/oVwq3k0lg/cursorinteractpress.png&#39;), auto!important}"" title=""Custom (Mouseclick Alternative)""/>
        
        <meta name=""select:Attack Boon"" content=""https://static.tumblr.com/rphroxy/XJXqi43o1/empty-attack.png"" title=""None"">
        <meta name=""select:Attack Boon"" content=""https://static.tumblr.com/rphroxy/NXLqi44za/aphrodite_attack.png"" title=""Aphrodite"">
        <meta name=""select:Attack Boon"" content=""https://static.tumblr.com/rphroxy/u0Xqi44vn/ares_attack.png"" title=""Ares"">
        <meta name=""select:Attack Boon"" content=""https://static.tumblr.com/rphroxy/mkDqi451k/artemis_attack.png"" title=""Artemis"">
        <meta name=""select:Attack Boon"" content=""https://static.tumblr.com/rphroxy/o9yqi4ah4/athena_attack.png"" title=""Athena"">
        <meta name=""select:Attack Boon"" content=""https://static.tumblr.com/rphroxy/G20qi5ob2/chaosb_attack.png"" title=""Chaos (Blessed)"">
        <meta name=""select:Attack Boon"" content=""https://static.tumblr.com/rphroxy/ByWqi5ob7/chaosc_attack.png"" title=""Chaos (Cursed)"">
        <meta name=""select:Attack Boon"" content=""https://static.tumblr.com/rphroxy/eIXqi5obc/demeter_attack.png"" title=""Demeter"">
        <meta name=""select:Attack Boon"" content=""https://static.tumblr.com/rphroxy/TjQqi5ock/dionysus_attack.png"" title=""Dionysus"">
        <meta name=""select:Attack Boon"" content=""https://static.tumblr.com/rphroxy/DNvqi5oco/hermes_attack.png"" title=""Hermes"">
        <meta name=""select:Attack Boon"" content=""https://static.tumblr.com/rphroxy/kaoqi5ocu/poseidon_attack.png"" title=""Poseidon"">
        <meta name=""select:Attack Boon"" content=""https://static.tumblr.com/rphroxy/E5Pqi5ocz/zeus_attack.png"" title=""Zeus"">
        
        <meta name=""select:Attack Boon Frame"" content=""https://static.tumblr.com/rphroxy/VHRqi5q6q/primary.png"" title=""Standard""/>
        <meta name=""select:Attack Boon Frame"" content=""https://static.tumblr.com/rphroxy/yg0qi4bf5/passive.png"" title=""Passive""/>
        <meta name=""select:Attack Boon Frame"" content=""https://static.tumblr.com/rphroxy/nV6qi4bff/booninfo.png"" title=""Boon Info""/>
        <meta name=""select:Attack Boon Frame"" content=""https://static.tumblr.com/rphroxy/GJGqi5pym/common.png"" title=""Tier (Common)""/>
        <meta name=""select:Attack Boon Frame"" content=""https://static.tumblr.com/rphroxy/PMjqi5pys/rare.png"" title=""Tier (Rare)""/>
        <meta name=""select:Attack Boon Frame"" content=""https://static.tumblr.com/rphroxy/hw1qi5pyw/epic.png"" title=""Tier (Epic)""/>
        <meta name=""select:Attack Boon Frame"" content=""https://static.tumblr.com/rphroxy/DCjqi5pyz/legendary.png"" title=""Tier (Legendary)""/>
        <meta name=""select:Attack Boon Frame"" content=""https://static.tumblr.com/rphroxy/a2Yqi5q2p/heroic.png"" title=""Tier (Heroic)""/>
        <meta name=""select:Attack Boon Frame"" content=""https://static.tumblr.com/rphroxy/sn8qi5pz6/duo.png"" title=""Tier (Duo)""/>
        <meta name=""select:Attack Boon Frame"" content=""https://static.tumblr.com/rphroxy/06Lqi4bnd/sell.png"" title=""Sell""/>
        <meta name=""select:Attack Boon Frame"" content=""https://static.tumblr.com/rphroxy/vsIqi4bhh/shop_traits.png"" title=""Shop""/>
        <meta name=""select:Attack Boon Frame"" content=""https://static.tumblr.com/rphroxy/ULNqi4bho/special_hammer.png"" title=""Hammer""/>
        <meta name=""select:Attack Boon Frame"" content=""https://static.tumblr.com/rphroxy/WhDqi4bhw/npc_gift.png"" title=""NPC Gift""/>
        <meta name=""select:Attack Boon Frame"" content=""https://static.tumblr.com/rphroxy/jnuqi4bi2/mirror_of_darkness.png"" title=""Darkness""/>
        
        <meta name=""select:Special Boon"" content=""https://static.tumblr.com/rphroxy/T83qi43pb/empty-special.png"" title=""None"">
        <meta name=""select:Special Boon"" content=""https://static.tumblr.com/rphroxy/Ullqi44zh/aphrodite_special.png"" title=""Aphrodite"">
        <meta name=""select:Special Boon"" content=""https://static.tumblr.com/rphroxy/ln6qi44vx/ares_special.png"" title=""Ares"">
        <meta name=""select:Special Boon"" content=""https://static.tumblr.com/rphroxy/Ivuqi451s/artemis_special.png"" title=""Artemis"">
        <meta name=""select:Special Boon"" content=""https://static.tumblr.com/rphroxy/ddXqi4ahd/athena_special.png"" title=""Athena"">
        <meta name=""select:Special Boon"" content=""https://static.tumblr.com/rphroxy/InDqi5of4/chaosb_special.png"" title=""Chaos (Blessed)"">
        <meta name=""select:Special Boon"" content=""https://static.tumblr.com/rphroxy/jCJqi5of8/chaosc_special.png"" title=""Chaos (Cursed)"">
        <meta name=""select:Special Boon"" content=""https://static.tumblr.com/rphroxy/YuZqi5ofk/demeter_special.png"" title=""Demeter"">
        <meta name=""select:Special Boon"" content=""https://static.tumblr.com/rphroxy/p9xqi5ofq/dionysus_special.png"" title=""Dionysus"">
        <meta name=""select:Special Boon"" content=""https://static.tumblr.com/rphroxy/S6dqi5ofv/hermes_special.png"" title=""Hermes"">
        <meta name=""select:Special Boon"" content=""https://static.tumblr.com/rphroxy/kC0qi5og0/poseidon_special.png"" title=""Poseidon"">
        <meta name=""select:Special Boon"" content=""https://static.tumblr.com/rphroxy/tTgqi5og4/zeus_special.png"" title=""Zeus"">
        
        <meta name=""select:Special Boon Frame"" content=""https://static.tumblr.com/rphroxy/VHRqi5q6q/primary.png"" title=""Standard""/>
        <meta name=""select:Special Boon Frame"" content=""https://static.tumblr.com/rphroxy/yg0qi4bf5/passive.png"" title=""Passive""/>
        <meta name=""select:Special Boon Frame"" content=""https://static.tumblr.com/rphroxy/nV6qi4bff/booninfo.png"" title=""Boon Info""/>
        <meta name=""select:Special Boon Frame"" content=""https://static.tumblr.com/rphroxy/GJGqi5pym/common.png"" title=""Tier (Common)""/>
        <meta name=""select:Special Boon Frame"" content=""https://static.tumblr.com/rphroxy/PMjqi5pys/rare.png"" title=""Tier (Rare)""/>
        <meta name=""select:Special Boon Frame"" content=""https://static.tumblr.com/rphroxy/hw1qi5pyw/epic.png"" title=""Tier (Epic)""/>
        <meta name=""select:Special Boon Frame"" content=""https://static.tumblr.com/rphroxy/DCjqi5pyz/legendary.png"" title=""Tier (Legendary)""/>
        <meta name=""select:Special Boon Frame"" content=""https://static.tumblr.com/rphroxy/a2Yqi5q2p/heroic.png"" title=""Tier (Heroic)""/>
        <meta name=""select:Special Boon Frame"" content=""https://static.tumblr.com/rphroxy/sn8qi5pz6/duo.png"" title=""Tier (Duo)""/>
        <meta name=""select:Special Boon Frame"" content=""https://static.tumblr.com/rphroxy/06Lqi4bnd/sell.png"" title=""Sell""/>
        <meta name=""select:Special Boon Frame"" content=""https://static.tumblr.com/rphroxy/vsIqi4bhh/shop_traits.png"" title=""Shop""/>
        <meta name=""select:Special Boon Frame"" content=""https://static.tumblr.com/rphroxy/ULNqi4bho/special_hammer.png"" title=""Hammer""/>
        <meta name=""select:Special Boon Frame"" content=""https://static.tumblr.com/rphroxy/WhDqi4bhw/npc_gift.png"" title=""NPC Gift""/>
        <meta name=""select:Special Boon Frame"" content=""https://static.tumblr.com/rphroxy/jnuqi4bi2/mirror_of_darkness.png"" title=""Darkness""/>
        
        <meta name=""select:Cast Boon"" content=""https://static.tumblr.com/rphroxy/vs5qi43p5/empty-cast.png"" title=""None"">
        <meta name=""select:Cast Boon"" content=""https://static.tumblr.com/rphroxy/7i9qi44zl/aphrodite_cast.png"" title=""Aphrodite"">
        <meta name=""select:Cast Boon"" content=""https://static.tumblr.com/rphroxy/OO1qi44vt/ares_cast.png"" title=""Ares"">
        <meta name=""select:Cast Boon"" content=""https://static.tumblr.com/rphroxy/lreqi451v/artemis_cast.png"" title=""Artemis"">
        <meta name=""select:Cast Boon"" content=""https://static.tumblr.com/rphroxy/DDrqi4535/athena_cast.png"" title=""Athena"">
        <meta name=""select:Cast Boon"" content=""https://static.tumblr.com/rphroxy/zEhqi5ohd/chaosb_cast.png"" title=""Chaos (Blessed)"">
        <meta name=""select:Cast Boon"" content=""https://static.tumblr.com/rphroxy/Nbnqi5ohj/chaosc_cast.png"" title=""Chaos (Cursed)"">
        <meta name=""select:Cast Boon"" content=""https://static.tumblr.com/rphroxy/fYHqi5ohx/demeter_cast.png"" title=""Demeter"">
        <meta name=""select:Cast Boon"" content=""https://static.tumblr.com/rphroxy/hhAqi5oi1/dionysus_cast.png"" title=""Dionysus"">
        <meta name=""select:Cast Boon"" content=""https://static.tumblr.com/rphroxy/2XJqi5oi5/hermes_cast.png"" title=""Hermes"">
        <meta name=""select:Cast Boon"" content=""https://static.tumblr.com/rphroxy/0PPqi5oia/poseidon_cast.png"" title=""Poseidon"">
        <meta name=""select:Cast Boon"" content=""https://static.tumblr.com/rphroxy/zyRqi5oie/zeus_cast.png"" title=""Zeus"">
        
        <meta name=""select:Cast Boon Frame"" content=""https://static.tumblr.com/rphroxy/VHRqi5q6q/primary.png"" title=""Standard""/>
        <meta name=""select:Cast Boon Frame"" content=""https://static.tumblr.com/rphroxy/yg0qi4bf5/passive.png"" title=""Passive""/>
        <meta name=""select:Cast Boon Frame"" content=""https://static.tumblr.com/rphroxy/nV6qi4bff/booninfo.png"" title=""Boon Info""/>
        <meta name=""select:Cast Boon Frame"" content=""https://static.tumblr.com/rphroxy/GJGqi5pym/common.png"" title=""Tier (Common)""/>
        <meta name=""select:Cast Boon Frame"" content=""https://static.tumblr.com/rphroxy/PMjqi5pys/rare.png"" title=""Tier (Rare)""/>
        <meta name=""select:Cast Boon Frame"" content=""https://static.tumblr.com/rphroxy/hw1qi5pyw/epic.png"" title=""Tier (Epic)""/>
        <meta name=""select:Cast Boon Frame"" content=""https://static.tumblr.com/rphroxy/DCjqi5pyz/legendary.png"" title=""Tier (Legendary)""/>
        <meta name=""select:Cast Boon Frame"" content=""https://static.tumblr.com/rphroxy/a2Yqi5q2p/heroic.png"" title=""Tier (Heroic)""/>
        <meta name=""select:Cast Boon Frame"" content=""https://static.tumblr.com/rphroxy/sn8qi5pz6/duo.png"" title=""Tier (Duo)""/>
        <meta name=""select:Cast Boon Frame"" content=""https://static.tumblr.com/rphroxy/06Lqi4bnd/sell.png"" title=""Sell""/>
        <meta name=""select:Cast Boon Frame"" content=""https://static.tumblr.com/rphroxy/vsIqi4bhh/shop_traits.png"" title=""Shop""/>
        <meta name=""select:Cast Boon Frame"" content=""https://static.tumblr.com/rphroxy/ULNqi4bho/special_hammer.png"" title=""Hammer""/>
        <meta name=""select:Cast Boon Frame"" content=""https://static.tumblr.com/rphroxy/WhDqi4bhw/npc_gift.png"" title=""NPC Gift""/>
        <meta name=""select:Cast Boon Frame"" content=""https://static.tumblr.com/rphroxy/jnuqi4bi2/mirror_of_darkness.png"" title=""Darkness""/>
        
        <meta name=""select:Dash Boon"" content=""https://static.tumblr.com/rphroxy/TSbqi43p8/empty-dash.png"" title=""None"">
        <meta name=""select:Dash Boon"" content=""https://static.tumblr.com/rphroxy/tikqi44zn/aphrodite_dash.png"" title=""Aphrodite"">
        <meta name=""select:Dash Boon"" content=""https://static.tumblr.com/rphroxy/Lmbqi44vv/ares_dash.png"" title=""Ares"">
        <meta name=""select:Dash Boon"" content=""https://static.tumblr.com/rphroxy/XDVqi451x/artemis_dash.png"" title=""Artemis"">
        <meta name=""select:Dash Boon"" content=""https://static.tumblr.com/rphroxy/7G9qi4aho/athena_dash.png"" title=""Athena"">
        <meta name=""select:Dash Boon"" content=""https://static.tumblr.com/rphroxy/J2Cqi5okk/chaosb_dash.png"" title=""Chaos (Blessed)"">
        <meta name=""select:Dash Boon"" content=""https://static.tumblr.com/rphroxy/mKeqi5okp/chaosc_dash.png"" title=""Chaos (Cursed)"">
        <meta name=""select:Dash Boon"" content=""https://static.tumblr.com/rphroxy/voVqi5oku/demeter_dash.png"" title=""Demeter"">
        <meta name=""select:Dash Boon"" content=""https://static.tumblr.com/rphroxy/w4Sqi5oky/dionysus_dash.png"" title=""Dionysus"">
        <meta name=""select:Dash Boon"" content=""https://static.tumblr.com/rphroxy/P0qqi5ol2/hermes_dash.png"" title=""Hermes"">
        <meta name=""select:Dash Boon"" content=""https://static.tumblr.com/rphroxy/MT6qi5ol7/poseidon_dash.png"" title=""Poseidon"">
        <meta name=""select:Dash Boon"" content=""https://static.tumblr.com/rphroxy/OW3qi5olb/zeus_dash.png"" title=""Zeus"">
        
        <meta name=""select:Dash Boon Frame"" content=""https://static.tumblr.com/rphroxy/VHRqi5q6q/primary.png"" title=""Standard""/>
        <meta name=""select:Dash Boon Frame"" content=""https://static.tumblr.com/rphroxy/yg0qi4bf5/passive.png"" title=""Passive""/>
        <meta name=""select:Dash Boon Frame"" content=""https://static.tumblr.com/rphroxy/nV6qi4bff/booninfo.png"" title=""Boon Info""/>
        <meta name=""select:Dash Boon Frame"" content=""https://static.tumblr.com/rphroxy/GJGqi5pym/common.png"" title=""Tier (Common)""/>
        <meta name=""select:Dash Boon Frame"" content=""https://static.tumblr.com/rphroxy/PMjqi5pys/rare.png"" title=""Tier (Rare)""/>
        <meta name=""select:Dash Boon Frame"" content=""https://static.tumblr.com/rphroxy/hw1qi5pyw/epic.png"" title=""Tier (Epic)""/>
        <meta name=""select:Dash Boon Frame"" content=""https://static.tumblr.com/rphroxy/DCjqi5pyz/legendary.png"" title=""Tier (Legendary)""/>
        <meta name=""select:Dash Boon Frame"" content=""https://static.tumblr.com/rphroxy/a2Yqi5q2p/heroic.png"" title=""Tier (Heroic)""/>
        <meta name=""select:Dash Boon Frame"" content=""https://static.tumblr.com/rphroxy/sn8qi5pz6/duo.png"" title=""Tier (Duo)""/>
        <meta name=""select:Dash Boon Frame"" content=""https://static.tumblr.com/rphroxy/06Lqi4bnd/sell.png"" title=""Sell""/>
        <meta name=""select:Dash Boon Frame"" content=""https://static.tumblr.com/rphroxy/vsIqi4bhh/shop_traits.png"" title=""Shop""/>
        <meta name=""select:Dash Boon Frame"" content=""https://static.tumblr.com/rphroxy/ULNqi4bho/special_hammer.png"" title=""Hammer""/>
        <meta name=""select:Dash Boon Frame"" content=""https://static.tumblr.com/rphroxy/WhDqi4bhw/npc_gift.png"" title=""NPC Gift""/>
        <meta name=""select:Dash Boon Frame"" content=""https://static.tumblr.com/rphroxy/jnuqi4bi2/mirror_of_darkness.png"" title=""Darkness""/>
        
        <meta name=""select:Call Boon"" content=""https://static.tumblr.com/rphroxy/Mdsqi43oy/empty-call.png"" title=""None"">
        <meta name=""select:Call Boon"" content=""https://static.tumblr.com/rphroxy/2qCqi44zq/aphrodite_call.png"" title=""Aphrodite"">
        <meta name=""select:Call Boon"" content=""https://static.tumblr.com/rphroxy/T03qi44vr/ares_call.png"" title=""Ares"">
        <meta name=""select:Call Boon"" content=""https://static.tumblr.com/rphroxy/H2fqi4520/artemis_call.png"" title=""Artemis"">
        <meta name=""select:Call Boon"" content=""https://static.tumblr.com/rphroxy/qbJqi4ahw/athena_call.png"" title=""Athena"">
        <meta name=""select:Call Boon"" content=""https://static.tumblr.com/rphroxy/5wRqi5omx/chaosb_health.png"" title=""Chaos (Blessed)"">
        <meta name=""select:Call Boon"" content=""https://static.tumblr.com/rphroxy/6t9qi5on2/chaosc_health.png"" title=""Chaos (Cursed)"">
        <meta name=""select:Call Boon"" content=""https://static.tumblr.com/rphroxy/Q09qi5on6/demeter_call.png"" title=""Demeter"">
        <meta name=""select:Call Boon"" content=""https://static.tumblr.com/rphroxy/iRSqi5onb/dionysus_call.png"" title=""Dionysus"">
        <meta name=""select:Call Boon"" content=""https://static.tumblr.com/rphroxy/Werqi5onf/hermes_call.png"" title=""Hermes"">
        <meta name=""select:Call Boon"" content=""https://static.tumblr.com/rphroxy/WbRqi5onk/poseidon_call.png"" title=""Poseidon"">
        <meta name=""select:Call Boon"" content=""https://static.tumblr.com/rphroxy/uINqi5ono/zeus_call.png"" title=""Zeus"">
        <meta name=""select:Call Boon"" content=""https://static.tumblr.com/rphroxy/Qoxqi5oof/secret_call.png"" title=""[Redacted]"">
        
        <meta name=""select:Call Boon Frame"" content=""https://static.tumblr.com/rphroxy/VHRqi5q6q/primary.png"" title=""Standard""/>
        <meta name=""select:Call Boon Frame"" content=""https://static.tumblr.com/rphroxy/yg0qi4bf5/passive.png"" title=""Passive""/>
        <meta name=""select:Call Boon Frame"" content=""https://static.tumblr.com/rphroxy/nV6qi4bff/booninfo.png"" title=""Boon Info""/>
        <meta name=""select:Call Boon Frame"" content=""https://static.tumblr.com/rphroxy/GJGqi5pym/common.png"" title=""Tier (Common)""/>
        <meta name=""select:Call Boon Frame"" content=""https://static.tumblr.com/rphroxy/PMjqi5pys/rare.png"" title=""Tier (Rare)""/>
        <meta name=""select:Call Boon Frame"" content=""https://static.tumblr.com/rphroxy/hw1qi5pyw/epic.png"" title=""Tier (Epic)""/>
        <meta name=""select:Call Boon Frame"" content=""https://static.tumblr.com/rphroxy/DCjqi5pyz/legendary.png"" title=""Tier (Legendary)""/>
        <meta name=""select:Call Boon Frame"" content=""https://static.tumblr.com/rphroxy/a2Yqi5q2p/heroic.png"" title=""Tier (Heroic)""/>
        <meta name=""select:Call Boon Frame"" content=""https://static.tumblr.com/rphroxy/sn8qi5pz6/duo.png"" title=""Tier (Duo)""/>
        <meta name=""select:Call Boon Frame"" content=""https://static.tumblr.com/rphroxy/06Lqi4bnd/sell.png"" title=""Sell""/>
        <meta name=""select:Call Boon Frame"" content=""https://static.tumblr.com/rphroxy/vsIqi4bhh/shop_traits.png"" title=""Shop""/>
        <meta name=""select:Call Boon Frame"" content=""https://static.tumblr.com/rphroxy/ULNqi4bho/special_hammer.png"" title=""Hammer""/>
        <meta name=""select:Call Boon Frame"" content=""https://static.tumblr.com/rphroxy/WhDqi4bhw/npc_gift.png"" title=""NPC Gift""/>
        <meta name=""select:Call Boon Frame"" content=""https://static.tumblr.com/rphroxy/jnuqi4bi2/mirror_of_darkness.png"" title=""Darkness""/>
        
        <meta name=""select:Boon Frame Brightness"" content=""100"" title=""100%""/>
        <meta name=""select:Boon Frame Brightness"" content=""25"" title=""25%""/>
        <meta name=""select:Boon Frame Brightness"" content=""50"" title=""50%""/>
        <meta name=""select:Boon Frame Brightness"" content=""75"" title=""75%""/>
        <meta name=""select:Boon Frame Brightness"" content=""150"" title=""150%""/>
        <meta name=""select:Boon Frame Brightness"" content=""200"" title=""200%""/>
        <meta name=""select:Boon Frame Brightness"" content=""250"" title=""250%""/>
        <meta name=""select:Boon Frame Brightness"" content=""300"" title=""300%""/>
        
        <meta name=""select:Boon Icon Brightness"" content=""100"" title=""100%""/>
        <meta name=""select:Boon Icon Brightness"" content=""25"" title=""25%""/>
        <meta name=""select:Boon Icon Brightness"" content=""50"" title=""50%""/>
        <meta name=""select:Boon Icon Brightness"" content=""75"" title=""75%""/>
        <meta name=""select:Boon Icon Brightness"" content=""150"" title=""150%""/>
        <meta name=""select:Boon Icon Brightness"" content=""200"" title=""200%""/>
        <meta name=""select:Boon Icon Brightness"" content=""250"" title=""250%""/>
        <meta name=""select:Boon Icon Brightness"" content=""300"" title=""300%""/>
        
        <meta name=""select:Pin Brightness"" content=""100"" title=""100%""/>
        <meta name=""select:Pin Brightness"" content=""25"" title=""25%""/>
        <meta name=""select:Pin Brightness"" content=""50"" title=""50%""/>
        <meta name=""select:Pin Brightness"" content=""75"" title=""75%""/>
        <meta name=""select:Pin Brightness"" content=""150"" title=""150%""/>
        <meta name=""select:Pin Brightness"" content=""200"" title=""200%""/>
        <meta name=""select:Pin Brightness"" content=""250"" title=""250%""/>
        <meta name=""select:Pin Brightness"" content=""300"" title=""300%""/>
        
        <meta name=""color:Background Colour"" content=""#692D1E""/>
        <meta name=""image:Custom Background Image"" content=""""/>
        <meta name=""text:Background Blur Amount"" content=""5""/>
        
        <meta name=""color:Posts"" content=""#DADADA""/>
        <meta name=""color:Links"" content=""#F1D136""/>
        <meta name=""color:Tags"" content=""#00FF63""/>
        <meta name=""color:Accent"" content=""#FF9211""/>
        
        <meta name=""text:Link 1 Title"" content=""Home""/>
        <meta name=""text:Link 1 URL"" content=""/""/>
        <meta name=""text:Link 2 Title"" content=""About""/>
        <meta name=""text:Link 2 URL"" content=""/about""/>
        <meta name=""text:Link 3 Title"" content=""Ask""/>
        <meta name=""text:Link 3 URL"" content=""/ask""/>
        <meta name=""text:Link 4 Title"" content=""Random""/>
        <meta name=""text:Link 4 URL"" content=""/random""/>
        <meta name=""text:Link 5 Title"" content=""Archive""/>
        <meta name=""text:Link 5 URL"" content=""/archive""/>
        
        <meta name=""if:Show Name Tooltip"" content=""0""/>
        <meta name=""if:Show Sidebar Pins on Hover"" content=""1""/>
        <meta name=""if:Show Captions"" content=""1""/>
        <meta name=""if:Enable Custom List Bullets"" content=""1""/>
        <meta name=""if:Enable Page Scrollbar"" content=""0""/>
        
        <link href=""https://fonts.googleapis.com/css?family=Alegreya+Sans:900|Caesar+Dressing|Titillium+Web:300|Gelasio&display=swap"" rel=""stylesheet"">
        <link rel=""stylesheet"" href=""//netdna.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css"">
        
        <script src=""//code.jquery.com/jquery-2.2.4.min.js""></script>
        
        <!-- preloads some theme assets -->
        <!-- changes cursor when the mouse is clicked -->
        <!-- moveable tooltips -->
        <script>
            window.onload=function(){$(""*, body"").on(""mousedown"",function(){$(this).addClass(""mouse-down"")}).on(""mouseup"",function(){$(this).removeClass(""mouse-down"")}),(new Image).src=""https://static.tumblr.com/rphroxy/z5uq3kium/button_selected.png"";var o=document.querySelectorAll("".navlink span,.prev span,.next span,.c span{block:IfShowNameTooltip},.name-txt span{/block:IfShowNameTooltip}"");window.onmousemove=function(n){for(var e=n.clientX+15+""px"",t=n.clientY-20+""px"",l=0;l<o.length;l++)o[l].style.top=t,o[l].style.left=e}};
        </script>
        
        <style>
            /*** SCROLLBAR  ***/
            ::-webkit-scrollbar {width: 12px; background-color: #21211F}
            ::-webkit-scrollbar-thumb {background-color: #4F4D49}
            
            pre::-webkit-scrollbar {height: 5px; background-color: #21211F}
            pre::-webkit-scrollbar-thumb {background-color: #4F4D49}
            pre::-webkit-scrollbar-track {box-shadow: 0px 0px 5px black inset;}
            
            .firefox-scroll, pre {
               scrollbar-color: #4F4D49 #21211F;
               scrollbar-width: thin;
            }
            
            /*
            *, body {cursor: url(''), auto!important}
            a:hover, a img:hover {cursor: url(), auto!important}
            */
            
            /*** CURSORS ***/
            {select:Cursor Style}
            _:-ms-lang(x), _:-webkit-full-screen, *, body, a:hover, a img:hover {cursor:auto!important} /* don't change cursor for IE and Edge */
            
            /*** TEXT SELECTION COLOURS ***/
            ::selection {background-color: #656565}
            ::-moz-selection {background-color: #656565}
        
            body {
                margin: 0;
                padding: 0;
                text-align: center;
                overflow: hidden;
                {block:ifEnablePageScrollbar}
                    overflow: auto!important;
                {/block:ifEnablePageScrollbar}
            }
            
            a {text-decoration: none}
            a:focus { outline: none}
            b {color: {color:Accent}; font-weight: normal;}
            
            ul {list-style: none}
            
            {block:IfEnableCustomListBullets}
            ul {padding-left: 20px}
            ul li {position: relative; padding-left: 20px}
            ul li:before {
                content: '';
                width: 1em;
                height: 1em;
                position: absolute;
                background-image: url('https://static.tumblr.com/rphroxy/980q3k4hc/ammo20.png');
                background-size: cover;
                background-position: center;
                left: 0;
                top: 0.25em;
            }
            {/block:IfEnableCustomListBullets}
            
            {block:IfNotEnableCustomListBullets}
            ul li::before {
                font-family: 'Arial', sans-serif;
                content: ""‚Ä¢"";
                color: {color:Accent};
                font-weight: bold;
                display: inline-block;
                width: 1em;
                margin-left: -1em;
            }
            {block:IfNotEnableCustomListBullets}
            
            ol li {
                counter-increment: list;
                list-style-type: none;
                position: relative;
            }
            
            ol li:before {
                color: {color:Accent};
                content: counter(list) ""."";
                left:-32px;
                position: absolute;
                text-align: right;
                width: 26px;
            }
            
            img, video {width: auto; height: auto;}
            iframe, img, embed, object, video {max-width: 100%}
            
            embed {font-family: 'Calibri';}
            
            blockquote {
                padding-left: 1em;
                margin-left: 0.7em;
                margin-right: 0;
                border-left: 1.6px groove #4F4D49;
            }
            
            code {
                text-shadow: none;
                color: {color:Accent};
                font: 0.8em 'Courier New', 'Courier', monospace;
                margin-left: 0.1em;
                margin-right: 0.1em;
                background-color: #21211F;
                padding: 0.1em 0.3em 0.1em 0.3em;
            }
            
            pre {
                background-color: #21211F;
                padding: 0.8em 1.2em 0.8em 1.2em;
                font: 0.8em 'Courier New', 'Courier', monospace;
                text-shadow: none;
                overflow: auto;
            }
            
            hr {
                border-style: inset;
                border-color: #4F4D49;
            }
            
            .npf_row {margin: 0!important} /* fix npf posts */
            
            .read_more {
                background-image: url('https://static.tumblr.com/rphroxy/fbcq3kiuj/button.png');
                background-position: center;
                background-size: contain;
                background-repeat: no-repeat;
                padding: 1em;
                font: 20px ""Alegreya Sans"", sans-serif;
                color: #E2E2E2!important;
                text-transform: uppercase;
                display: inline-block;
                margin-left: 50%;
                transform: translate(-50%);
            }
            
            .read_more:hover {
                background-image: url('https://static.tumblr.com/rphroxy/z5uq3kium/button_selected.png');
                color: #a8a8a8!important;
            }
            
            .unselectable {
                -webkit-user-select: none; /* Safari 3.1+ */
                -moz-user-select: none; /* Firefox 2+ */
                -ms-user-select: none; /* IE 10+ */
                user-select: none; /* Standard syntax */
            }
            
            #bg {
                width: 100%;
                height: 100%;
                top: 0;
                z-index: -1;
                position: fixed;
                background-color: {color:Background Colour};
                transform: scale(calc(1 + ({text:Background Blur Amount}/300)));
            }
           
            .bg-img {
                width: 100%;
                height: 100%;
                /* ""ImageImage"" is the new ""moon moon"" */
                {block:IfCustomBackgroundImageImage}
                    background: url('{image:Custom Background Image}') no-repeat center;
                {/block:IfCustomBackgroundImageImage}
                {block:IfNotCustomBackgroundImageImage}
                    background: url('{select:Location}') no-repeat center;
                {/block:IfNotCustomBackgroundImageImage}
                position: fixed;
                background-size: cover;
                filter: blur({text:Background Blur Amount}px);
                -webkit-filter: blur({text:Background Blur Amount}px);
                
            }
            
            #header
            {
                position: relative;
                height: 252px;
                width: 553px;
                margin: 15px auto 0 auto;
                padding-right: 25px;
                z-index: 1;
            }
            
            .header-img
            {    
                position: absolute;
                left: 0;
                top: 0;
            }
            
            .name-bg {
                position: absolute;
                margin: 0;
                left: 68px;
                top: 62px;
                width: 170px;
                max-height: 38px;
                overflow: hidden;
                /*background-color: green;*/
            }
            
            .name-txt {
                font: 30px ""Caesar Dressing"", sans-serif;
                color: #E2E2E2;
                text-transform: lowercase;
            }
            
            .name-txt:hover {color: #CF532D}
            
            {block:IfShowNameTooltip}
            .name-txt span {
                display: none;
                position: absolute;
                bottom: 0;
                left: 0;
                right: 0;
                color: #E2E2E2;
                font: 20px ""Alegreya Sans"", sans-serif;
                text-transform: uppercase;
                text-shadow: -1.5px 0 black, 0 1.5px black, 1.5px 0 black, 0 -1.5px black;
            }
            .name-txt:hover span {
                display: block;
                position: fixed;
                overflow: hidden;
                text-align: left;
            }
            {/block:IfShowNameTooltip}
            
            .desc-bg {
                position: absolute;
                left: 60px;
                top: 130px;
                width: 455px;
                height: 90px;
                overflow: hidden;
                /*background-color: green;*/
            }
            
            .desc-txt {
                position: absolute;
                font: 20px ""Alegreya Sans"", sans-serif;
                color: #282624;
                margin: 0;
                width: 100%;
                top: 50%;
                left: 50%;
                transform: translate(-50%,-50%);
                /*background-color: blue;*/
            }
            
            .desc-txt a {color: #CF532D}
            
            .desc-txt a:hover {
                filter: brightness(125%);
                -webkit-filter: brightness(125%);   
            }
            
            #left, #right {
                position: absolute;
                bottom: 0;
                z-index: 3;
            }
            
            #left {left: calc(50% - 445px)}
            #right {right: calc(50% - 445px)}
            
            .pagination {
                position: relative;
                margin-bottom: 40px;
            }
            
            .prev, .curr, .next {
                display: block;
                margin-bottom: 20px;
            }
            
            .next, .prev {
                width: 40px;
                margin: 0 auto;
                margin-bottom: 20px;
            }
            
            .arrow {display: block}
            
            .prev .arrow {transform: rotate(180deg)}
            
            .curr {width: 75px}
            
            .pagenum {
                z-index: 4;
                position: absolute;
                left: 0;
                right: 0;
                margin-top: 20%;
                color: #E2E2E2;
                font: 32px ""Alegreya Sans"", sans-serif;
                text-transform: uppercase;
                text-shadow: -1.5px 0 black, 0 1.5px black, 1.5px 0 black, 0 -1.5px black;
            }
            
            {block:IfShowSidebarPinsonHover}
            .pin {
                height: 23px;
                width: auto;
                position: absolute;
                z-index: 3;
                margin-left: 7px;
                margin-top: 7px;
                display: block;
                transform: translateY(-5px);
                opacity: 0;
                filter: brightness({select:Pin Brightness}%)!important;
                -webkit-filter: brightness({select:Pin Brightness}%)!important;
                transition: 0.3s ease;
                -o-transition: 0.3s ease;
                -moz-transition: 0.3s ease;
                -webkit-transition: 0.3s ease;
            }
            .boon a:hover .pin {
                display: block;
                opacity: 1;
                transition: transform 250ms;
                transform: translateY(0px);
            }
            {/block:IfShowSidebarPinsonHover}
            
            .navlink {
                display: block;
                position: relative;
                text-decoration: none;
            }
            
            .boon {
                display: block;
                margin-bottom: 20px;
                width: 75px;
                height: 75px;
            }
            
            .boon-frame {
                position: absolute;
                z-index: 2;
                filter: brightness({select:Boon Frame Brightness}%);
                -webkit-filter: brightness({select:Boon Frame Brightness}%);
            }
            
            .boon-icon {
                position: relative;
                z-index: 1;
                filter: brightness({select:Boon Icon Brightness}%);
                -webkit-filter: brightness({select:Boon Icon Brightness}%);
            }
            
            .boon-bg {
                /*margin-left: 50px!important;*/
            }
            
            .boon-icon, .boon-bg {transform: scale(0.75)}
            
            .navtip {
                z-index: 4;
                display: none;
                position: absolute;
                bottom: 0;
                left: 0;
                right: 0;
                color: #E2E2E2;
                font: 20px ""Alegreya Sans"", sans-serif;
                text-transform: uppercase;
                text-shadow: -1.5px 0 black, 0 1.5px black, 1.5px 0 black, 0 -1.5px black;
            }
            
            .navlink:hover span, .prev:hover span, .next:hover span {
                display: block;
                position: fixed;
                overflow: hidden;
                text-align: left;
            }
            
            .arrow:hover {block:IfNotShowSidebarPinsonHover},
            .boon a:hover {/block:IfNotShowSidebarPinsonHover} {
                filter: brightness(150%);
                -webkit-filter: brightness(150%);
                display: block;
            }
            
            #posts-container {
                position: absolute;
                width: 550px;
                max-height: 687px;
                top: 275px;
                bottom: 15px; /* redundant but just to make sure */
                left: calc(50% - 21px); /* offsets post bg img */
                transform: translateX(-45%);
                z-index: 2;
                overflow: auto;
            }
            
            #main
            {
                position: absolute;
                left: calc(50% - 21px); /* offsets post bg img */
                transform: translateX(-50%);
                width: 900px;
                height: 835px;
                margin: -100px auto 35px auto;
            }
            
            .posts-bg img
            {    
                position: absolute;
                width: 900px;
                margin-bottom: 20px;
            }
            
            .posts {
                position: absolute;
                font-family: 'Titillium Web', sans-serif;
                font-size: {text:Post Font Size};
                color: {color:Posts};
                text-shadow: -1.5px 0 black, 0 1.5px black, 1.5px 0 black, 0 -1.5px black;
                margin: 0;
                width: 520px;
                text-align: left;
                /*background-color: blue;*/
            }
            
            .posts h1 {
                font-family: 'Gelasio', serif;
                text-transform: uppercase;
                font-weight: normal;
                letter-spacing: 0.4em;
                text-align: center;
            }
            
            .posts a, .posts a b:not(.read_more) {color: {color:Links}}
            .posts a:not(.read_more):hover {
                filter: brightness(150%);
                -webkit-filter: brightness(150%);
            }

            .post {
                {block:IndexPage}
                    margin-bottom: 100px;
                {/block:IndexPage}
                {block:PermalinkPage}
                    margin-bottom: 70px;
                {/block:PermalinkPage}
            }
            
            .post:last-of-type {margin-bottom: 30px}
            
            .quote .short, .quote .medium, .quote .long {
                text-align: center;
                color: {color:Accent};
                margin-bottom: 0;
            }
            .quote .short {font-size: 2em}
            .quote .medium {font-size: 1.5em}
            .quote .long {font-size: 1em}
            /* nested reblog captions for quote posts are broken as hell and i don't know why. i'm just going to blame tumblr and leave it as it is. as an (in)famous man once said, ""it just works."" */
            .quote .source {text-align: right; margin-top: 0}
            
            /* usually this would be .link but i forgot i'm already using that for the navbar/pagination and i can't be bothered to go back and change it */
            .link-post .source {text-align: right; margin-top: -1.5em}
            .link-post .excerpt {text-align: center; color: {color:Accent}}
            
            .chat {width: calc(100% - 40px)}
            .chat li {padding-left: 0.5em}
            .chat li:before {
                position: relative;
                background-image: none;
            }
            {block:IfNotEnableCustomListBullets}
            .chat {padding-left: 20px}
            .chat li {padding-left: 0.3em}
            .chat li:before {content: ''}
            {/block:IfNotEnableCustomListBullets}
            .chat .even {background-color: #474643}
            .chat .odd {background-color: #21211F}
            
            .video iframe {margin-left: 10px}
            
            .ask .question {text-align: center}
            .ask .question .asker h3 {margin-bottom: 0}
            .ask .question .q {color: {color:Accent}}
            
            .audio {text-align: center;}
 
            .default_album_bg, .album_art {
                width: 200px;
                height: 200px;
                margin-bottom: 5px;
            }
             
            .player {
                width: 200px;
                height: auto;
                z-index: 1;
                position: absolute;
                margin-left: 50%;
                margin-top: 30%;
                transform: translate(-50%, 50%);
                opacity: 0.7;
            }
             
            .default_album_bg {
                background-color: #21211F;
                color: #4F4D49;
                display: inline-block;
            }
            
            .default_album_art {
                transform: translateY(12%);
                filter: grayscale(100%) contrast(35%) brightness(45%);
            }
             
            .album_art {
                position: absolute;
                margin-left: -200px;
            }
            
            .audio_info .track_info {
                font-family: ""Alegreya Sans"", sans-serif;
                text-transform: uppercase;
                color: {color:Accent};
                margin-top: 0.2em;
            }
            
            .audio_info .play_count {
                font-size: 0.8em;
                margin-top: -0.2em;
            }
            
            #tags {
                line-height: 0.8em;
                margin-top: -0.1em;
            }
            
            .tag {
                color: {color:Tags}!important;
                font-size: 0.8em;
            }
            
            .notes ol li:before {content: ''}
            .notes img {
                margin-right: 10px;
                border: 1px solid black;
            }
            
            .c {
            	position: fixed;
            	left: 10px;
            	bottom: 9px;
            	width: 30px;
            	z-index: 999;
            }
            .c img {opacity: 0.4}
            .c img:hover {opacity: 1}
            .c span {
            	z-index: 1000;
            	display: none;
            	position: absolute;
            	bottom: 0;
            	left: 0;
            	right: 0;
            	color: #E2E2E2;
            	font: 20px ""Alegreya Sans"", sans-serif;
            	text-transform: uppercase;
            	text-shadow: -1.5px 0 black, 0 1.5px black, 1.5px 0 black, 0 -1.5px black;
            }
            .c:hover span {
            	display: block;
            	position: fixed;
            	overflow: hidden;
            	text-align: left;
            }
            
            {CustomCSS}
            
        </style>
        
</head>





<body>



    <div id=""bg"">
        <div class=""bg-img""></div>
    </div>



    <div id=""header"">
        <img class=""header-img unselectable"" src=""https://static.tumblr.com/rphroxy/TwXq3o9xf/header.png"" draggable=""false""/>
        <div class=""name-bg unselectable"">
            <a class=""name-txt"" href=""/"">{text:Name}{block:IfShowNameTooltip}<span>Home</span>{/block:IfShowNameTooltip}</a>
        </div>
        <div class=""desc-bg unselectable"">
            <p class=""desc-txt"">{text:Tagline}</p>
        </div>
    </div>
    
    
    
    <div id=""left"">
        <div class=""navbar unselectable"">
            
            <div class=""navlink"">
                <div class=""boon attack"">
                    {block:IfLink1URL}<a href=""{text:Link 1 URL}"">{/block:IfLink1URL}
                    {block:IfShowSidebarPinsonHover}<img class=""pin"" draggable=""false"" src=""https://static.tumblr.com/rphroxy/E7mqi46cw/pin.png"">{/block:IfShowSidebarPinsonHover}
                    <img class=""boon-frame"" draggable=""false"" src=""{select:Attack Boon Frame}"">
                    {block:IfLink1URL}<img class=""boon-icon"" src=""{select:Attack Boon}"">{/block:IfLink1URL}
                    {block:IfNotLink1URL}<img class=""boon-bg"" src=""https://static.tumblr.com/rphroxy/XJXqi43o1/empty-attack.png"">{/block:IfNotLink1URL}
                    {block:IfLink1URL}</a>{/block:IfLink1URL}
                </div>
                {block:IfLink1URL}<span class=""navtip"">{text:Link 1 Title}</span>{/block:IfLink1URL}
            </div>
            
            <div class=""navlink"">
                <div class=""boon special"">
                    {block:IfLink2URL}<a href=""{text:Link 2 URL}"">{/block:IfLink2URL}
                    {block:IfShowSidebarPinsonHover}<img class=""pin"" draggable=""false"" src=""https://static.tumblr.com/rphroxy/E7mqi46cw/pin.png"">{/block:IfShowSidebarPinsonHover}
                    <img class=""boon-frame"" draggable=""false"" src=""{select:Special Boon Frame}"">
                    {block:IfLink2URL}<img class=""boon-icon"" src=""{select:Special Boon}"">{/block:IfLink2URL}
                    {block:IfNotLink2URL}<img class=""boon-bg"" src=""https://static.tumblr.com/rphroxy/T83qi43pb/empty-special.png"">{/block:IfNotLink2URL}
                    {block:IfLink2URL}</a>{/block:IfLink2URL}
                </div>
                {block:IfLink2URL}<span class=""navtip"">{text:Link 2 Title}</span>{/block:IfLink2URL}
            </div>
            
            <div class=""navlink"">
                <div class=""boon cast"">
                    {block:IfLink3URL}<a href=""{text:Link 3 URL}"">{/block:IfLink3URL}
                    {block:IfShowSidebarPinsonHover}<img class=""pin"" draggable=""false"" src=""https://static.tumblr.com/rphroxy/E7mqi46cw/pin.png"">{/block:IfShowSidebarPinsonHover}
                    <img class=""boon-frame"" draggable=""false"" src=""{select:Cast Boon Frame}"">
                    {block:IfLink3URL}<img class=""boon-icon"" src=""{select:Cast Boon}"">{/block:IfLink3URL}
                    {block:IfNotLink3URL}<img class=""boon-bg"" src=""https://static.tumblr.com/rphroxy/vs5qi43p5/empty-cast.png"">{/block:IfNotLink3URL}
                    {block:IfLink3URL}</a>{/block:IfLink3URL}
                </div>
                {block:IfLink3URL}<span class=""navtip"">{text:Link 3 Title}</span>{/block:IfLink3URL}
            </div>
            
            <div class=""navlink"">
                <div class=""boon dash"">
                    {block:IfLink4URL}<a href=""{text:Link 4 URL}"">{/block:IfLink4URL}
                    {block:IfShowSidebarPinsonHover}<img class=""pin"" draggable=""false"" src=""https://static.tumblr.com/rphroxy/E7mqi46cw/pin.png"">{/block:IfShowSidebarPinsonHover}
                    <img class=""boon-frame"" draggable=""false"" src=""{select:Dash Boon Frame}"">
                    {block:IfLink4URL}<img class=""boon-icon"" src=""{select:Dash Boon}"">{/block:IfLink4URL}
                    {block:IfNotLink4URL}<img class=""boon-bg"" src=""https://static.tumblr.com/rphroxy/TSbqi43p8/empty-dash.png"">{/block:IfNotLink4URL}
                    {block:IfLink4URL}</a>{/block:IfLink4URL}
                </div>
                {block:IfLink4URL}<span class=""navtip"">{text:Link 4 Title}</span>{/block:IfLink4URL}
            </div>
            
            <div class=""navlink"">
                <div class=""boon call"">
                    {block:IfLink5URL}<a href=""{text:Link 5 URL}"">{/block:IfLink5URL}
                    {block:IfShowSidebarPinsonHover}<img class=""pin"" draggable=""false"" src=""https://static.tumblr.com/rphroxy/E7mqi46cw/pin.png"">{/block:IfShowSidebarPinsonHover}
                    <img class=""boon-frame"" draggable=""false"" src=""{select:Call Boon Frame}"">
                    {block:IfLink5URL}<img class=""boon-icon"" src=""{select:Call Boon}"">{/block:IfLink5URL}
                    {block:IfNotLink5URL}<img class=""boon-bg"" src=""https://static.tumblr.com/rphroxy/Mdsqi43oy/empty-call.png"">{/block:IfNotLink5URL}
                    {block:IfLink5URL}</a>{/block:IfLink5URL}
                </div>
                {block:IfLink5URL}<span class=""navtip"">{text:Link 5 Title}</span>{/block:IfLink5URL}
            </div>
            
        </div>
    </div>
    
    
    
    {block:Pagination}
    <div id=""right"">
        <div class=""pagination unselectable"">
            {block:PreviousPage}
            <a class=""prev"" href=""{PreviousPage}""><img class=""arrow"" src=""https://static.tumblr.com/rphroxy/GUFqi46h1/arrow.png"" draggable=""false""/><span class=""navtip"">Previous</span></a>
            {/block:PreviousPage}
            
            <div class=""curr""><img class=""wreath"" src=""https://static.tumblr.com/rphroxy/tcCqi46c7/wreath.png"" draggable=""false""/><span class=""pagenum"">{CurrentPage}</span></div>
            
            {block:NextPage}
            <a class=""next"" href=""{NextPage}""><img class=""arrow"" src=""https://static.tumblr.com/rphroxy/GUFqi46h1/arrow.png"" draggable=""false""/><span class=""navtip"">Next</span></a>
            {/block:NextPage}
        </div>
    </div>
    {/block:Pagination}
    
    
    
    <div id=""main"">
        <img class=""posts-bg unselectable"" src=""https://static.tumblr.com/rphroxy/Qs4q3od6j/posts.png"" draggable=""false""/>
    </div>
    
    
    
    <div id=""posts-container"" class=""firefox-scroll"">
        <div class=""posts"">
        
            {block:Posts}
            <div class=""post"" id=""{PostID}"">
                
                {block:Text}
                    <div class=""text"">
                        {block:Title}
                            <h1>{Title}</h1>
                        {/block:Title}
                        <div class=""caption"">{Body}</div>
                    </div>
                {/block:Text}
                    
                {block:Quote}
                    <div class=""quote"">
                        <p class=""{Length}"">‚Äú{Quote}‚Äù</p>
                        {block:Source}
                            <h5 class=""source"">‚Äî{Source}</h5>                                         {/block:Source}
                    </div>
                {/block:Quote}
                    
                {block:Link}
                    <div class=""link-post"">
                        <h1 class=""title""><a href=""{URL}"">{Name}</a></h1>
                        {block:Host}<h5 class=""source"">‚Äî{Host}</h5>{/block:Host}
                        {block:Excerpt}<div class=""excerpt"">""{Excerpt}""</div>{/block:Excerpt}
                    </div>
                    {block:Description}
                        <div class=""caption"">{Description}</div>
                    {/block:Description}
                {/block:Link}
                   
                {block:Photo}
                    <div class=""photo"">
                        <center>
                            {LinkOpenTag}
                                <img src=""{PhotoURL-HighRes}"" alt=""{PhotoAlt}""/>
                            {LinkCloseTag}
                        </center>
                        {block:IfShowCaptions}
                            {block:Caption}
                                <div class=""caption"">{Caption}</div>
                            {/block:Caption}
                        {/block:IfShowCaptions}
                    </div>
                {/block:Photo}
                
                {block:Photoset}
                    <div class=""photoset"">
                        <center>{Photoset-700}</center>
                        {block:IfShowCaptions}
                            {block:Caption}
                                <div class=""caption"">{Caption}</div>
                            {/block:Caption}
                        {/block:IfShowCaptions}
                    </div>
                {/block:Photoset}
                    
                {block:Chat}
                    {block:Title}<h1>{Title}</h1>{/block:Title}
                        <ul class=""chat"">
                        {block:Lines}
                            <li class=""{Alt}"">
                            {block:Label}
                                <span class=""label""><b>{Label}</b></span>
                            {/block:Label}
                            &nbsp;<span class=""line"">{Line}</span>
                            </li>
                        {/block:Lines}
                    </ul>
                {/block:Chat}
                
                {block:Video}
                    <div class=""video"">{Video-500}
                    {block:IfShowCaptions}
                        {block:Caption}
                            <div class=""caption"">{Caption}</div>
                        {/block:Caption}
                    {/block:IfShowCaptions}
                    </div>
                {/block:Video}

                {block:Answer}
                <div class=""ask"">
                    <div class=""question"">
                        <div class=""asker""><h3>{Asker} said:</h3></div>
                        <div class=""q""><i>{Question}</i></div>
                    </div>
                    <div class=""answer"">{Answer}</div>
                </div>
                {/block:Answer}
                
                {block:Audio}
                    <div class=""audio"">
                        {block:AudioPlayer}
                            <div class=""player unselectable"">{AudioPlayerWhite}</div>
                        {/block:AudioPlayer}
                        <!--<div class=""default_album_bg unselectable""><i class=""fa fa-headphones""></i></div>-->
                        <div class=""default_album_bg unselectable""><img class=""default_album_art unselectable"" src=""https://static.tumblr.com/rphroxy/g42sd62be/music_sheet.png"" draggable=""false""/></div>
                        {block:AlbumArt}<img class=""album_art unselectable"" src=""{AlbumArtURL}"" draggable=""false"">{/block:AlbumArt}
                        <div class=""audio_info"">
                            <div class=""track_info"">
                                {block:TrackName}{TrackName}{/block:TrackName}
                                {block:Artist} by {Artist}{/block:Artist}
                            </div>
                            <!-- does tumblr not keep track of play counts anymore? -->
                            {block:PlayCount}<div class=""play_count""><i class=""fa fa-play-circle-o""></i>&nbsp;<span>{PlayCountWithLabel}</span></div>{/block:PlayCount}
                        </div>
                    </div>
                    {block:IfShowCaptions}{block:Caption}<div id=""caption"">{Caption}</div>{/block:Caption}{/block:IfShowCaptions}
                {/block:Audio}

                {block:Submission}
                    <h5 style=""text-align:right"">
                        (submitted by <a href=""{SubmitterURL}"">{Submitter}</a>)
                    </h5>
                {/block:Submission}
                   
                {block:Date}
                    <div class=""pinfo"">
                        <div id=""perma"">
                            {block:PermalinkPage}<a href=""{Permalink}"">{Year}-{MonthNumberWithZero}-{DayOfMonthWithZero} {24HourWithZero}:{Minutes}</a>, {NoteCountWithLabel}{/block:PermalinkPage}
                            {block:IndexPage}<a href=""{Permalink}"">{TimeAgo}</a>, {NoteCountWithLabel}{/block:IndexPage}
                        </div>
                        <div id=""tags"">
                            {block:Tags}<a class=""tag"" href=""{TagURL}"">#{Tag}</a>&nbsp;&nbsp;{/block:Tags}
                        </div>
                    </div>
                {block:Date}
            
            </div>
                    
            {block:PostNotes}
                <div class=""notes"">{PostNotes}</div>
            {/block:PostNotes}
                   
            {/block:Posts}
            
        </div>
    </div>
    
    <!-- DON'T REMOVE THIS! -->
    <a class=""c unselectable"" href=""https://dioti.tumblr.com""><img draggable=""false"" src=""https://static.tumblr.com/rphroxy/Onlqi5rnb/elite.png""><span>theme</span></a>
    
</body>

</html>"
8sybC1id,Count Good Nodes in Binary Tree,jayati,C++,Wednesday 8th of May 2024 08:10:20 AM CDT,"/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int goodNodes(TreeNode* root,int mx=INT_MIN) {

        if(!root)
        {
            return 0;
        }

        return (mx<=root->val?1:0)+goodNodes(root->left,max(root->val,mx))+goodNodes(root->right,max(root->val,mx));
        
    }
};"
cGinMQyH,Untitled,NikitaYak,Python,Wednesday 8th of May 2024 07:36:11 AM CDT,"from pathlib import Path

import torch
import torch.nn as nn
import torch.optim as optim
from torch.optim import lr_scheduler
from torch.utils.data import DataLoader, TensorDataset
from torchvision import models, transforms
from torchvision.transforms import v2, GaussianBlur
from tqdm import tqdm
import numpy as np
import time
from efficientnet_pytorch import EfficientNet
from nets_parts.datasets.psi_dataset_regions_cls import (
    PSIRegionClsDataset,
    PSIRegionClsDatasetParams,
)
from nets_parts.datasets.psi_dataset_random import (
    PSIRandomDataset,
    PSIRandomDatasetParams,
)
from nets_parts.nets_train_part import (
    run_valid, run_train,
    save_confusion_matrix, 
    get_data_iterator, get_data_iterator_pl 
)
from torchvision.transforms import RandAugment, ToPILImage
from torchvision.transforms.functional import pil_to_tensor
import gc
from nets_parts.datasets.psi_torch_dataset import TorchPSIDataset
from nets_parts.datasets.utils import low_entropy_filter
from torch.utils.tensorboard import SummaryWriter
import sys, json, os
from os.path import isdir, join
from nets_parts.datasets.utils import low_entropy_filter_single_input_with_prob
sys.path.append(os.path.dirname(os.path.realpath(__file__)))
print(os.path.dirname(os.path.realpath(__file__)))
from nets_parts.RandAugment import RandAugment as MyRandAugment
THRESHOLD = 0.95

def train_model(
    model,
    criterion,
    optimizer,
    scheduler,
    iterations_per_epoch,
    n_epochs,
    valid_loader,
    patch_size,
    layer,
    batch_size_train,
    valid_image_num,
    checkpoint_path,
    cur_statistic_path,
    rand_aug_strange, 
    rand_aug_max_strange,
    n_ops,
    epoch_for_start_pl,
    use_all_data,
    writer,
    use_my_rand_aug,
    images_to_use
):
    global_train_loss = []
    global_train_acc = []
    global_valid_loss = []
    global_valid_acc = []
    best_train_acc = None
    best_valid_acc = None
    train_data_pseudo_label = None
    train_ds = None
    
    data_pl_iterator, train_data_pseudo_label = get_data_iterator_pl(
        path_to_data=""/home/n.yakovlev/datasets/symblink/WSS2/train_valid"",
        train_ds=train_data_pseudo_label,
        layer=layer,
        patch_size=patch_size,
        batch_size=64
    )
    generated_images: int = 0
    if use_my_rand_aug:
        RandAugmentator = MyRandAugment(ops_num=n_ops, cur_value=rand_aug_strange, max_value=rand_aug_max_strange)
    else:
        RandAugmentator = RandAugment(num_ops=n_ops, magnitude=rand_aug_strange, num_magnitude_bins=rand_aug_max_strange, fill=255)
    using_labels_in_cur_epoch = []
    for epoch in range(n_epochs):
        model.train()
        if epoch % images_to_use == 0:
            data_iterator, train_ds = get_data_iterator(
                path_to_data=f""/home/n.yakovlev/datasets/symblink/WSS2/train_valid_{images_to_use}"",
                train_ds=train_ds,
                layer=layer,
                patch_size=patch_size,
                batch_size=64
            )
        print(f""Epoch {epoch}/{n_epochs - 1}"")
        print(""-"" * 10)

        # Each epoch has a training and validation phase
        model.train()  # Set model to training mode
        torch.set_grad_enabled(True)

        running_loss = 0.0
        running_corrects = 0
        using_labels_in_cur_epoch.append({k: int(0) for k in range(5)})

        # Iterate over data.
        for _ in tqdm(
            range(iterations_per_epoch), f""running epoch {epoch + 1}""
        ):
            model.eval()
            torch.set_grad_enabled(False)
            inputs_pl = None
            labels_pl = None
            cycle_try_to_get_pl = 0
            while epoch >= epoch_for_start_pl and (inputs_pl is None or inputs_pl.size(dim=0) < batch_size_train * 7):
                cycle_try_to_get_pl += 1
                gc.collect()
                torch.cuda.empty_cache()
                if inputs_pl is None and cycle_try_to_get_pl > 10:
                    break
                if generated_images > train_data_pseudo_label.__len__() - 10 * batch_size_train:
                    generated_images = 0
                    data_pl_iterator, train_data_pseudo_label = get_data_iterator_pl(
                        path_to_data=""/home/n.yakovlev/datasets/symblink/WSS2/train_valid"",
                        train_ds=train_data_pseudo_label,
                        layer=layer,
                        patch_size=patch_size,
                        batch_size=64
                    )
                
                images_cur = next(data_pl_iterator).to(device)
                generated_images += images_cur.size(dim=0)
                labels_cur = model(images_cur)
                if (labels_cur.max(dim=1).values > THRESHOLD).sum().item() < 10:
                    continue
                # get pseudo labels with threshold
                images_cur = images_cur[labels_cur.max(dim=1).values > THRESHOLD]
                labels_cur = labels_cur[labels_cur.max(dim=1).values > THRESHOLD]
                labels_cur[labels_cur > THRESHOLD] = 1.0
                labels_cur[labels_cur < 1 - 1e-5] = 0
                if inputs_pl is None:
                    inputs_pl = images_cur
                    labels_pl = labels_cur
                else:
                    inputs_pl = torch.cat((inputs_pl, images_cur), dim=0)
                    labels_pl = torch.cat((labels_pl, labels_cur), dim=0)
            model.train()  # Set model to training mode
            torch.set_grad_enabled(True)
            if not (inputs_pl is None or labels_pl is None):
                inputs_pl, labels_pl = inputs_pl[:7 * batch_size_train], labels_pl[:7 * batch_size_train]
            if inputs_pl is None or labels_pl is None or inputs_pl.size(0) == 0:
                inputs, labels = next(data_iterator)
                inputs = inputs.to(device)
                labels = labels.to(device)

                # zero the parameter gradients
                optimizer.zero_grad()

                outputs = model(inputs)
                loss = criterion(outputs, labels)

                loss.backward()
                optimizer.step()

                # statistics
                preds = torch.argmax(outputs, dim=1)
                gts = torch.argmax(labels, dim=1)
                running_loss += loss.item()
                running_corrects += torch.sum(preds == gts)
            else:
                uniq_values, uniq_counts = np.unique(labels_pl.argmax(1).cpu().numpy(), return_counts=True)
                for ind, i in zip(uniq_values, uniq_counts):
                    using_labels_in_cur_epoch[epoch][ind] += int(i)
                for image in inputs_pl:
                    if use_my_rand_aug:
                        temp_img = (image * 255).to(torch.uint8)
                        temp_img = ToPILImage()(temp_img)
                        temp_img = RandAugmentator(temp_img)
                        image = pil_to_tensor(temp_img) / 255
                    else:
                        image = (RandAugmentator((image * 255).to(torch.uint8))).to(torch.float32)
                        if image.max() > 1.1:
                            image /= 255
                # Each epoch has a training and validation phase
                inputs, labels = next(data_iterator)
                labels_pl = labels_pl.to(labels.dtype)
                inputs = inputs.to(device)
                labels = labels.to(device)
                inputs_pl = inputs_pl.to(device)
                labels_pl = labels_pl.to(device)

                # zero the parameter gradients
                optimizer.zero_grad()

                outputs = model(inputs)
                loss_l = criterion(outputs, labels)

                outputs_pl = model(inputs_pl)
                loss_u = criterion(outputs_pl, labels_pl)

                loss = loss_l + 1. / 7 * loss_u 
                loss.backward()
                optimizer.step()

                # statistics
                preds = torch.argmax(outputs, dim=1)
                gts = torch.argmax(labels, dim=1)
                running_loss += loss.item()
                running_corrects += torch.sum(preds == gts)
            gc.collect()
            torch.cuda.empty_cache()

        if epoch >= 10:
            scheduler.step()

        epoch_loss = running_loss / iterations_per_epoch
        epoch_acc = running_corrects.float() / (
            iterations_per_epoch * inputs.size(0)
        )
        global_train_acc.append(float(epoch_acc))
        global_train_loss.append(float(epoch_loss))
        if best_train_acc is None or best_train_acc < epoch_acc:
            torch.save(model.state_dict(), f""{checkpoint_path}/best_train_acc_{round(float(epoch_acc) * 100)}.pth"")
            best_train_acc = epoch_acc

        print(f""Loss: {epoch_loss:.4f} Acc: {epoch_acc:.4f}"")
        writer.add_scalar(""Loss"", epoch_loss, epoch)
        writer.add_scalar(""Acc"", epoch_acc, epoch)

        matrix_conf, epoch_loss, epoch_acc = run_valid(
            model=model,
            valid_loader=valid_loader,
            valid_images_num=valid_image_num,
            criterion=criterion,
            device=device
        )
        global_valid_acc.append(float(epoch_acc))
        global_valid_loss.append(float(epoch_loss))
        if best_valid_acc is None or best_valid_acc < epoch_acc:
            torch.save(model.state_dict(), f""{checkpoint_path}/best_valid_acc_{round(float(epoch_acc) * 100)}.pth"")
            best_valid_acc = epoch_acc
        print(f""Val Loss: {epoch_loss:.4f} Val Acc: {epoch_acc:.4f}"")
        writer.add_scalar(""Loss valid"", epoch_loss, epoch)
        writer.add_scalar(""Accuracy valid"", epoch_acc, epoch)
        if epoch % 1 == 0:
            with open(f""{cur_statistic_path}/statistic.json"", ""w"") as f:
                json.dump(
                    {
                        ""train_loss"": global_train_loss,
                        ""train_acc"": global_train_acc,
                        ""valid_loss"": global_valid_loss,
                        ""valid_acc"": global_valid_acc,
                    },
                    f
                )
            with open(f""{cur_statistic_path}/using_pl.json"", ""w"") as f:
                json.dump(
                    using_labels_in_cur_epoch,
                    f
                )
            path_to_save_conf_matrix = f""{cur_statistic_path}/confusion_matrix_best_epoch.png""
            save_confusion_matrix(matrix_conf, path_to_save_conf_matrix)
    if not (train_data_pseudo_label is None):
        train_data_pseudo_label.close()
    if not (train_ds is None):
        train_ds.close()
    train_data_pseudo_label = None
    train_ds = None


if __name__ == ""__main__"":
    """"""
    {
        ""batch_size_train"": 192,
        ""batch_size_valid"": 512,
        ""lr"": 0.01,
        ""exprement_path"": ""/home/n.yakovlev/my_best_program/diplom_8sem/experiments/classifier"",

        ""patch_size"": 224,
        ""layer"": 2,
        ""scheduler_param"": 0.99,
        ""pretrain"": 1,

        ""device"": 1,

        ""is_efficientnet"": 1
        ""nn_name"": ""efficientnet-b4""
        ""iter_per_epoch"": 26
    }
""""""
    path_to_params = sys.argv[1]
    with open(path_to_params) as f:
        parsed_file = f.read()
        parsed_json = json.loads(parsed_file)
        BATCH_SIZE_TRAIN = int(parsed_json[""batch_size_train""])
        BATCH_SIZE_VALID = int(parsed_json[""batch_size_valid""])
        LEARING_RATE = float(parsed_json[""lr""])
        LAYER = int(parsed_json[""layer""])

        PRETRAIN = bool(parsed_json[""pretrain""])
        EXP_PATH = str(parsed_json[""exprement_path""])
        os.makedirs(EXP_PATH, exist_ok=True)
        PATCH_SIZE = int(parsed_json[""patch_size""])
        SCHEDULER_PARAM = float(parsed_json[""scheduler_param""])

        IS_EFFICIENTNET = bool(parsed_json[""is_efficientnet""])
        NN_NAME = str(parsed_json[""nn_name""])
        ITER_PER_EPOCH = int(parsed_json[""iter_per_epoch""])
        rand_aug_strange = int(parsed_json[""rand_aug_strange""])
        rand_aug_max_strange = int(parsed_json[""rand_aug_max_strange""])
        n_ops = int(parsed_json[""n_ops""])
        device = f""cuda:{parsed_json[""device""]}""
        epoch_for_start_pl = int(parsed_json[""epoch_for_start_pl""])
        use_all_data = bool(parsed_json[""use_all_data""])
        use_my_rand_aug = bool(parsed_json[""use_my_rand_aug""])
        images_to_use = int(parsed_json[""images_to_use""])
    
    data = np.load(""/home/n.yakovlev/datasets/test_files_WSS2.npz"")
    images = data[""images""]
    valid_image_num = images.shape[0]
    labels = data[""labels""]

    del data
    gc.collect()
    valid_dataset = TensorDataset(torch.tensor(images), torch.tensor(labels))
    del images, labels
    valid_loader = DataLoader(valid_dataset, batch_size=BATCH_SIZE_VALID, num_workers=8)

    for use_my_rand_aug in [False]:
        for rand_aug_strange in [4, 5, 6, 7, 8, 9, 10, 11, 12, 13]:
            rand_aug_max_strange = 31
            n_ops = int(parsed_json[""n_ops""])
            path_to_params = sys.argv[1]
            with open(path_to_params) as f:
                parsed_file = f.read()
                parsed_json = json.loads(parsed_file)
                parsed_json[""rand_aug_strange""] = rand_aug_strange
                parsed_json[""use_my_rand_aug""] = use_my_rand_aug

                EXP_PATH = str(parsed_json[""exprement_path""])
                os.makedirs(EXP_PATH, exist_ok=True)
                onlydirs = [f for f in os.listdir(EXP_PATH) if isdir(join(EXP_PATH, f))]
                cur_exp_path = f""{EXP_PATH}/{len(onlydirs)}""
                os.makedirs(cur_exp_path)
                cur_statistic_path = f""{cur_exp_path}/statistic""
                os.makedirs(cur_statistic_path)
                checkpoint_path = cur_exp_path + ""/checkpoints""
                os.makedirs(checkpoint_path)
                writer = SummaryWriter(EXP_PATH)
                with open(f""{cur_exp_path}/params.json"", 'w') as f:
                    json.dump(parsed_json, f)
    
            if IS_EFFICIENTNET:
                if PRETRAIN:
                    model_ft = EfficientNet.from_pretrained(NN_NAME, num_classes=5)
                else:
                    model_ft = EfficientNet.from_name(NN_NAME, num_classes=5)
            else:
                model_ft = models.resnet50(weights=""IMAGENET1K_V1"")
                num_ftrs = model_ft.fc.in_features
                model_ft.fc = nn.Linear(num_ftrs, 5)

            try:
                pretrained_dict = torch.load(""/home/n.yakovlev/conv_autoencoder_256neuron_best_valid.pth"")
                model_dict = model_ft.state_dict()

                processed_dict = {}

                for k in model_dict.keys():
                    decomposed_key = k.split(""."")
                    if (""model"" in decomposed_key):
                        pretrained_key = ""."".join(decomposed_key[1:])
                        processed_dict[k] = pretrained_dict[pretrained_key]

                model_ft.load_state_dict(processed_dict, strict=False)

            except Exception:
                print(""Model weights doesn't loaded!"")
            

            model_ft = model_ft.to(device)

            criterion = nn.CrossEntropyLoss(weight=torch.tensor([1, 1, 1.2, 1, 1.2], device=device))

            # Observe that all parameters are being optimized
            optimizer_ft = optim.Adam(model_ft.parameters(), lr=LEARING_RATE)

            exp_lr_scheduler = lr_scheduler.StepLR(
                optimizer_ft, step_size=1, gamma=SCHEDULER_PARAM
            )

            train_model(
                model_ft,
                criterion,
                optimizer_ft,
                exp_lr_scheduler,
                iterations_per_epoch=ITER_PER_EPOCH,  # len(train_ds) // batch_size,
                n_epochs=50,
                valid_loader=valid_loader,
                patch_size=PATCH_SIZE,
                layer=LAYER, 
                batch_size_train=BATCH_SIZE_TRAIN,
                valid_image_num=valid_image_num,
                checkpoint_path=checkpoint_path,
                cur_statistic_path=cur_statistic_path,
                rand_aug_strange=rand_aug_strange,
                rand_aug_max_strange=rand_aug_max_strange,
                n_ops=n_ops,
                epoch_for_start_pl=epoch_for_start_pl,
                use_all_data=use_all_data,
                writer=writer,
                use_my_rand_aug=use_my_rand_aug,
                images_to_use=images_to_use
            )
            del model_ft, optimizer_ft
            gc.collect()
            torch.cuda.empty_cache()"
hWicWF4R,Untitled,nshelper,PHP,Wednesday 8th of May 2024 07:35:13 AM CDT,"    $orderItems = $order->get_items() + $order->get_items('fee');
    foreach ($orderItems as $itemId => $item) {
        do_action( 'woocommerce/cart_loop/start', $item );
        if ($onWoocommerceV3OrNewer) {
            $product = is_callable(array($item, 'get_product')) ? $item->get_product() : null;
        } 
        else {
            $product = $order->get_product_from_item($item);
        }

        if ($includeOrdersWithOnlyVirtualItems) {
            $orderHasAtleastOneItem = true;
        }
        // skip items that don't require shipping
        else if ((!$product || !$product->needs_shipping()) && 'fee' !== $item['type']) {
            do_action( 'woocommerce/cart_loop/end', $item );
            continue;
        }
        
        $orderHasAtleastOneItem = true;

        $webshipItem = array(
            'lineId' => (string) $itemId,
        );

        if ('fee' === $item['type']) {
            $webshipItem = array_merge($webshipItem, array(
                'title' => $onWoocommerceV3OrNewer ? $item->get_name() : $item['name'],
                'quantity' => (string) 1,
                'price' => $order->get_item_total($item, false, true)
            ));
        }

        if ($product && $product->needs_shipping()) {
            $imageId = $product->get_image_id();
            $imgUrl = $imageId ? current(wp_get_attachment_image_src($imageId, 'shop_thumbnail')) : '';
            
            if (method_exists($product, 'get_id')) {
                $productId = $product->get_id();
            }
            else {
                $productId = $product->id;
            }

            $webshipItem = array_merge($webshipItem, array(
                'productId' => (string) $productId,
                'sku' => $product->get_sku(),
                'title' => $product->get_title(),
                'imgUrl' => $imgUrl,
                'shippingWeight' => (string) wc_get_weight($product->get_weight(), 'lbs'),
                'quantity' => (string) $item['qty'],
                'price' => $order->get_item_subtotal($item, false, true),
                'productLength' => $product->get_length(),
                'productWidth' => $product->get_width(),
                'productHeight' => $product->get_height(),
                'url' => $product->get_permalink()
            ));
        }

        if ($item['item_meta']) {
            if (version_compare(WC_VERSION, '3.0.0', '<')) {
                $itemMeta = new WC_Order_Item_Meta($item, $product);
                $formattedMeta = $itemMeta->get_formatted('_');
            }
            else {
                add_filter('woocommerce_is_attribute_in_product_name', '__return_false');
                $formattedMeta = $item->get_formatted_meta_data();
            }

            if (!empty($formattedMeta)) {
                $attributes = array();

                foreach ($formattedMeta as $metaKey => $meta) {
                    if (version_compare(WC_VERSION, '3.0.0', '<')) {
                        array_push($attributes, array(
                            'name' => $meta['label'],
                            'value' => $meta['value']
                        ));
                    } 
                    else {
                        array_push($attributes, array(
                            'name' => $meta->display_key,
                            'value' => wp_strip_all_tags($meta->display_value)
                        ));
                    }
                }

                $webshipItem['attributes'] = $attributes;
            }
        }
        
        array_push($webshipOrder['items'], $webshipItem);
        do_action( 'woocommerce/cart_loop/end', $item );
    }"
68NwHwB1,remove watermark pdf -pages,nicuf,Python,Wednesday 8th of May 2024 07:32:10 AM CDT,"import os
import fitz  # PyMuPDF

def remove_watermark_and_empty_pages(input_pdf, output_pdf):
    # Deschide fi»ôierul PDF de intrare
    doc = fitz.open(input_pdf)

    # Crea»õi un nou document PDF gol pentru ie»ôire
    output_doc = fitz.open()

    # Parcurge fiecare paginƒÉ a documentului de intrare
    for page_number in range(len(doc)):
        # √éncarcƒÉ pagina curentƒÉ
        page = doc.load_page(page_number)

        # CurƒÉ»õƒÉ con»õinutul paginii pentru a √ÆndepƒÉrta elementele grafice
        page.clean_contents()

        # VerificƒÉ dacƒÉ pagina este goalƒÉ
        # DacƒÉ pagina con»õine text sau elemente grafice, o adƒÉugƒÉm √Æn documentul de ie»ôire
        if page.get_text().strip() or page.search_for_images(full=True):
            output_doc.insert_pdf(doc, from_page=page_number, to_page=page_number)

    # SalveazƒÉ documentul PDF modificat √Æn output_pdf
    output_doc.save(output_pdf)

    # √énchide documentele PDF
    doc.close()
    output_doc.close()

# Directorul unde se aflƒÉ fi»ôierele PDF
directory = ""D:/test""

# Parcurge fiecare fi»ôier PDF din director
for filename in os.listdir(directory):
    if filename.endswith("".pdf""):
        # Calea completƒÉ a fi»ôierului PDF de intrare
        input_pdf = os.path.join(directory, filename)

        # Calea completƒÉ a fi»ôierului PDF de ie»ôire
        output_pdf = os.path.join(directory, filename.replace("".pdf"", ""_removed.pdf""))

        # EliminƒÉ watermark-ul »ôi paginile goale din fi»ôierul PDF
        remove_watermark_and_empty_pages(input_pdf, output_pdf)

print(""Eliminarea watermark-ului »ôi paginilor goale a fost completatƒÉ pentru toate fi»ôierele PDF din directorul specificat."")
"
Eqn7bvSJ,wcfm-store-page-article-tab-flatsome-theme,palsushobhan,PHP,Wednesday 8th of May 2024 07:15:23 AM CDT,"add_action( 'wcfmmp_store_article_loop_in_before', function( $store_id, $store_info ) {
    ?>
    <article id=""post-<?php the_ID(); ?>"" <?php post_class(); ?>>
	    <div class=""article-inner <?php flatsome_blog_article_classes(); ?>"">
    <?php
}, 50, 2);

add_action( 'wcfmmp_store_article_template', function() {
    get_template_part('template-parts/posts/partials/entry-header', flatsome_option('blog_posts_header_style') );
    get_template_part('template-parts/posts/content', 'default' );
    get_template_part('template-parts/posts/partials/entry-footer', 'default' );
});

add_action( 'wcfmmp_store_article_template_none', function() {
    get_template_part( 'template-parts/posts/content','none');
});

add_action( 'wcfmmp_store_article_loop_in_after', function( $store_id, $store_info ) {
    ?>
        </div>
    </article>
<?php
}, 50, 2);

add_filter( 'wcfm_is_allow_store_articles', '__return_true' );"
LBUuWz6F,Untitled,lamhotsimamora,PHP,Wednesday 8th of May 2024 06:56:42 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Laravel 10</title>
    <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"" crossorigin=""anonymous"">
    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"" crossorigin=""anonymous""></script>
    <script src=""https://cdn.jsdelivr.net/npm/vue@2.7.16/dist/vue.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js""></script>
</head>
<body>
<nav class=""navbar navbar-expand-lg bg-body-tertiary"">
  <div class=""container-fluid"">
    <a class=""navbar-brand"" href=""."">Home</a>
    <button class=""navbar-toggler"" type=""button"" data-bs-toggle=""collapse"" data-bs-target=""#navbarSupportedContent"" aria-controls=""navbarSupportedContent"" aria-expanded=""false"" aria-label=""Toggle navigation"">
      <span class=""navbar-toggler-icon""></span>
    </button>
    <div class=""collapse navbar-collapse"" id=""navbarSupportedContent"">
      <ul class=""navbar-nav me-auto mb-2 mb-lg-0"">
        
        <li class=""nav-item"">
          <a class=""nav-link"" href=""#"">Profile</a>
        </li>
        
       
      </ul>
      <form id=""search"" class=""d-flex"" role=""search"">
        <input class=""form-control me-2"" v-model=""search"" ref=""search"" type=""search"" placeholder=""Search"" aria-label=""Search"">
        <button class=""btn btn-outline-success"" @click=""searchData"" type=""button"">Search</button>
      </form>
    </div>
  </div>
</nav>
<br>
<div class=""container"" id=""app"">

<div class=""card"">
  <div class=""card-body"">
  <button type=""button"" class=""btn btn-primary"" data-bs-toggle=""modal"" data-bs-target=""#modal_add"">Add</button>
    <div class=""table-responsive"">
    <table class=""table table-striped"">
    <thead>
    <tr>
      <th scope=""col"">#</th>
      <th scope=""col"">Name</th>
      <th scope=""col"">Cover</th>
      <th scope=""col"">Price</th>
      <th scope=""col"">Action</th>
    </tr>
  </thead>
  <tbody>
    <tr v-for=""(book,i) in books"">
      <th scope=""row"">@{{ i=i+1 }}</th>
      <td>@{{book.name}}</td>
      <td>
        <img :src=""loadImage(book.cover)"" width=""50"" height=""50"" alt="""">
      </td>
      <td>@{{book.price}}</td>
      <td>
        <button type=""button"" @click=""updateData(book)"" data-bs-toggle=""modal"" data-bs-target=""#modal_edit"" class=""btn btn-warning btn-sm"">Update</button>
        <button type=""button"" @click=""deleteData(book.id)"" class=""btn btn-danger btn-sm"">x</button>
      </td>
    </tr>
  </tbody>

    </table>
    </div>

  </div>
</div>
</div>

<!-- Modal -->
<div class=""modal fade"" id=""modal_add"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
  <div class=""modal-dialog"">
    <div class=""modal-content"">
      <div class=""modal-header"">
        <h1 class=""modal-title fs-5"" id=""exampleModalLabel"">Modal title</h1>
        <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
      </div>
      <div class=""modal-body"">
        <div class=""input-group mb-3"">
          <span class=""input-group-text"" id=""basic-addon1"">Name</span>
          <input type=""text"" class=""form-control"" v-model=""name"" placeholder=""Name"" ref=""name"" aria-label=""Name"" 
          aria-describedby=""basic-addon1"">
        </div>
        <div class=""input-group mb-3"">
          <span class=""input-group-text"" id=""basic-addon1"">Cover</span>
          <input type=""text"" class=""form-control"" v-model=""cover"" placeholder=""Cover"" ref=""cover"" aria-label=""Name"" 
          aria-describedby=""basic-addon1"">
        </div>
        <div class=""input-group mb-3"">
          <span class=""input-group-text"" id=""basic-addon1"">Price</span>
          <input type=""number"" class=""form-control"" v-model=""price"" placeholder=""Price"" ref=""price"" aria-label=""Name"" 
          aria-describedby=""basic-addon1"">
        </div>
      </div>
      <div class=""modal-footer"">
        <button type=""button"" class=""btn btn-secondary"" data-bs-dismiss=""modal"">Close</button>
        <button type=""button"" class=""btn btn-primary"" @click=""addData"">Save</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal -->
<div class=""modal fade"" id=""modal_edit"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
  <div class=""modal-dialog"">
    <div class=""modal-content"">
      <div class=""modal-header"">
        <h1 class=""modal-title fs-5"" id=""exampleModalLabel"">Modal title</h1>
        <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
      </div>
      <div class=""modal-body"">
        <div class=""input-group mb-3"">
          <span class=""input-group-text"" id=""basic-addon1"">Name</span>
          <input type=""text"" class=""form-control"" v-model=""name"" placeholder=""Name"" ref=""name"" aria-label=""Name"" aria-describedby=""basic-addon1"">
        </div>
        <div class=""input-group mb-3"">
          <span class=""input-group-text"" id=""basic-addon1"">Cover</span>
          <input type=""text"" class=""form-control"" v-model=""cover"" placeholder=""Cover"" ref=""cover"" aria-label=""Name"" aria-describedby=""basic-addon1"">
        </div>
        <div class=""input-group mb-3"">
          <span class=""input-group-text"" id=""basic-addon1"">Price</span>
          <input type=""number"" class=""form-control"" v-model=""price"" placeholder=""Price"" ref=""price"" aria-label=""Name"" aria-describedby=""basic-addon1"">
        </div>
      </div>
      <div class=""modal-footer"">
        <button type=""button"" class=""btn btn-secondary"" data-bs-dismiss=""modal"">Close</button>
        <button type=""button"" class=""btn btn-primary"" @click=""updateData"">Save</button>
      </div>
    </div>
  </div>
</div>

<script>
 const _TOKEN_ = ""<?= csrf_token() ?>"";
  var app=  new Vue({
        el : ""#app"",
        data : {
            books: null
        },
        methods: {
            loadImage: function(image){
              return 'storage/'+image
            },
            updateData : function(data){
              edit.name = data.name;
              edit.cover = data.cover;
              edit.price = data.price;
              edit.id = data.id;
            },
            loadData: async function(){
              
                try {
                    const response = await axios.get('/books');
                    this.books = response.data;
                } catch (error) {
                     console.error(error);
                }
            },
            deleteData: function(id){
                axios.post('/book-delete', {
                    id: id,
                    _token : _TOKEN_
                })
                .then(function (response) {
                    alert(""success delete data"")
                    window.location.href="".""
                })
                .catch(function (error) {
                    console.log(error);
                });
            }
        },
        mounted() {
            this.loadData();
        },
    })


    new Vue({
      el : ""#modal_add"",
      data: {
        name: null,
        cover: null,
        price: null
      },
      methods: {
        addData: function(){
            if (this.name==null){
                this.$refs.name.focus();
                return;
            }
            if (this.cover==null){
                this.$refs.cover.focus();
                return;
            }
            if (this.price==null){
                this.$refs.price.focus();
                return;
            }
            axios.post('/book-add', {
                    name: this.name,
                    cover:this.cover,
                    price:this.price,
                    _token : _TOKEN_
                })
            .then(function (response) {
                alert(""success add data"")
                app.loadData();
            })
            .catch(function (error) {
                console.log(error);
            });
        }
      },
    })


    new Vue({
      el : ""#search"",
      data : {
        search :null
      },
      methods: {
        searchData: function(){
          if (this.search==null){
              this.$refs.search.focus();
              return;
          }

          axios.post('/book-search', {
                search: this.search,
                    _token : _TOKEN_
            })
          .then(function (response) {
             var obj = response.data;
             app.books = obj;
          })
          .catch(function (error) {
              console.log(error);
          });
        }
      },
    })

  var edit=  new Vue({
      el : ""#modal_edit"",
      data : {
        name: null,
        cover : null,
        price : null,
        id: null
      },
      methods: {
        updateData: function(){
           if (this.name==null){
                this.$refs.name.focus();
                return;
            }
            if (this.cover==null){
                this.$refs.cover.focus();
                return;
            }
            if (this.price==null){
                this.$refs.price.focus();
                return;
            }

            axios.post('/book-update', {
                    id:this.id,
                    name: this.name,
                    cover:this.cover,
                    price:this.price,
                    _token : _TOKEN_
                })
            .then(function (response) {
                alert(""success update data"")
                app.loadData();
            })
            .catch(function (error) {
                console.log(error);
            });
        }
      },
    })
</script>

</body>
</html>"
WXbp8X46,"Steam ""What's New"" Fix 2024 for AHKv2",Will_Robinson,Autohotkey,Wednesday 8th of May 2024 06:37:39 AM CDT,"#Requires AutoHotkey 2.0+
#SingleInstance Force

;Change the following line to your Steam CSS directory...
SetWorkingDir(""C:\Program Files (x86)\Steam\steamui\css\"")

Loop Files ""Chunk*.css"",""F""
  F:=A_LoopFileName
If !F
  MsgBox(""Matching CSS file not found!`n`nQuitting..."",""CSS File Error"",0x30),ExitApp()
S:=StrLen(H:=FileRead(F)),D:=0

; #####  ""What's New"" section  #####
If RegExMatch(H,"".*?17uEB[^\{]*\{bo.*?\}\.Lib.*"")
  H:=RegExReplace(H,""`aim)(.*?17uEB[^\{]*\{)bo.*?(\}\.Lib.*)"",""$1display:none !important;$2""),D:=1

; #####  ""Add Shelf"" section  #####
If RegExMatch(H,"".*?3SkuN[^\{]*\{bo.*?\}.*"")
  H:=RegExReplace(H,""`aim)(.*?3SkuN[^\{]*\{)bo.*?(\}.*)"",""$1display:none !important;$2""),D:=1

If D
  FileMove(F,SubStr(F,1,-3) ""bup"",1),FileAppend(H Format(""{: "" S-StrLen(H) ""}"","" ""),F)
MsgBox(""All replacements have"" (D?"""":"" already"") "" been made."",""All done..."")
"
hnU78zm5,wiggle.py,j0h,Python,Wednesday 8th of May 2024 06:21:47 AM CDT,"#!/usr/bin/python3
'''
wiggle.py you wave your face around the camera, to control your mouse. 
this program is intened to be used with ""dasher""
https://github.com/dasher-project/
though its interoperation is not integrated yet

Dasher is an on screen typing tool where you use a mouse to navigate 
a sea of letters. where you point the mose determines what you type. 
as sentences form predictive text appears more frequently. 
'''
import cv2
import dlib
import numpy as np
import os
import pyautogui
pyautogui.FAILSAFE=0
# Initialize the dlib facial landmark predictor
predictor_path = ""shape_predictor_68_face_landmarks.dat""
predictor = dlib.shape_predictor(predictor_path)

# Initialize the dlib face detector
detector = dlib.get_frontal_face_detector()

# Start the webcam
cap = cv2.VideoCapture(0)

while True:
    ret, frame = cap.read()
    if not ret:
        break

    # Convert the frame to grayscale
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Detect faces in the frame
    faces = detector(gray)

    for face in faces:
        # Detect facial landmarks
        landmarks = predictor(gray, face)
        
        # Extract landmarks for the left and right eyes, and the nose tip
        left_eye = np.array([(landmarks.part(i).x, landmarks.part(i).y) for i in range(36, 42)])
        right_eye = np.array([(landmarks.part(i).x, landmarks.part(i).y) for i in range(42, 48)])
        nose_tip = np.array([(landmarks.part(i).x, landmarks.part(i).y) for i in range(30, 31)])
        
        # Calculate the average position of the eyes and nose tip
        avg_eye_pos = np.mean(np.concatenate((left_eye, right_eye)), axis=0)
        avg_nose_pos = np.mean(nose_tip, axis=0)
       
        # Calculate the direction of gaze
        #gaze_direction = avg_eye_pos - avg_nose_pos
        gaze_direction = avg_nose_pos - avg_eye_pos

        # Scale the gaze direction to control the mouse movement
        mouse_move_x = int(gaze_direction[0] * 5)
       # mouse_move_x = int(nose_tip[0])
        mouse_move_y = int(gaze_direction[0] * 5)
       # mouse_move_y = int(nose_tip[1])

        # Move the mouse cursor
        current_x, current_y = pyautogui.position()
        new_x = max(0, min(current_x + mouse_move_x, pyautogui.size().width - 1))
        new_y = max(0, min(current_y + mouse_move_y, pyautogui.size().height - 1))
        pyautogui.moveTo(new_x, new_y)

    cv2.imshow('Gaze Tracking', frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
"
J9y6ryMN,data920,TestGuy1,JSON,Wednesday 8th of May 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '58f423ed3053527ed26f535319a933660eea09d3541be96b0a13475f0b57d8012083caee625fe3af52d1dfe2808a022f0f662da39953f5c0ca7932dba37278b846d5a0ea8b21d72ab0c555b0ab7af455f49f5cf25309cf8ba32c961cb54205abf18bcfd21056e44eab2d8e26f6c579044918a5b6586c725df3e7b4c37684889e',
  otherdata: [
    '45b832d416a6a94c8efce2ef6e67ec85',
    '575255f612fb76cd94852e300c1609ed',
    '511da0fc7d0c5a2b60e07b86084f1d73',
    '1acc8b106c62479bf4bc1b75ef731130',
    '3cb0dcdb14cfa14d44b5347f3317bff6',
    '0a209f7e50b8f6ae0092d2c13cafa611',
    'b343a4ccfcabcc30796d0eb721474478',
    '80003ad0dbe78de163c4b36c28498cfd'
  ]
}"
jmAqcHRP,Untitled,dereksir,Rust,Wednesday 8th of May 2024 05:28:11 AM CDT,"// define async main function using Tokio
#[tokio::main]
async fn main() -> Result<(), Box<dyn std::error::Error>> {
	// make GET request to target URL and retrieve response
    let resp = reqwest::get(""https://www.scrapingcourse.com/ecommerce/product/adrienne-trek-jacket/"")
        .await?
        .text()
        .await?;
    println!(""{resp:#?}"");
    Ok(())
}"
