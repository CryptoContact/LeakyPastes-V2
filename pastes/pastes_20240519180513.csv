id,title,username,language,date,content
yP1Jsa8J,certusFarm,problemlow,Lua,Sunday 19th of May 2024 12:55:48 PM CDT,"function searchString(bigString, searchString)
    if bigString ~= nil and searchString ~= nil then
        if bigString.match(bigString, searchString) == nil then
            return false
        else
            return true
        end
    else
        return false
    end
end

while true do
	turtle.dig()
	if turtle.getFuelLevel() == 0 then
		print(""I need more fuel"")
		read()
		shell.run(""refuel all"")
		turtle.select(1)
	end
	turtle.forward()
	tf, temp = turtle.inspectDown()
	name = temp.name
	if searchString(name, ""flawed"") == false then
		turtle.select(16)
		turtle.digDown()
		turtle.select(1) -- select water bucket
		turtle.placeDown() -- place water bucket
		turtle.select(2) -- select charged crystal
		turtle.dropDown(1)
		turtle.dropDown(1)
		turtle.dropDown(1)
		turtle.select(16)
		turtle.dropDown(1)
		sleep(3)
		turtle.select(1)
		turtle.digDown()
		turtle.suckDown()
		turtle.suckDown()
		turtle.suckDown()
		turtle.suckDown()
		turtle.suckDown()
        turtle.select(3)
        turtle.placeDown()
	end
	turtle.select(1)
	turtle.back()
	sleep(30)
end"
xk5gaqWr,thread_for_duration.go,betrayed,Go,Sunday 19th of May 2024 12:54:54 PM CDT,"package main

import (
    ""fmt""
    ""os""
    ""os/signal""
    ""syscall""
    ""sync""
    ""time""
)

func worker(id int, wg *sync.WaitGroup, stopChan chan struct{}) {
    defer wg.Done()
    for {
        select {
        case <-stopChan:
            fmt.Printf(""Worker %d received stop signal. Exiting...\n"", id)
            return
        default:
            fmt.Printf(""Worker %d is running\n"", id)
            time.Sleep(1 * time.Second)
        }
    }
}

func main() {
    fmt.Println(""Press CTRL+C to exit"")

    // Create a channel to listen for the interrupt signal
    interrupt := make(chan os.Signal, 1)
    signal.Notify(interrupt, os.Interrupt, syscall.SIGTERM)

    // Create a wait group to wait for all goroutines to finish
    var wg sync.WaitGroup

    // Create a channel to signal stop to goroutines
    stopChan := make(chan struct{})

    // Start 5 goroutines
    for i := 0; i < 5; i++ {
        wg.Add(1)
        go worker(i, &wg, stopChan)
    }

    // Wait for the interrupt signal
    <-interrupt
    fmt.Println(""Interrupt signal received. Stopping workers..."")

    // Signal stop to goroutines
    close(stopChan)

    // Wait for all goroutines to finish before exiting
    wg.Wait()
    fmt.Println(""All workers have exited. Exiting program."")
}"
9DvgnZTH,ü§ë G2A.com Free Gift Card Guide May 2024 FIX üéÅ,ssss50w,GetText,Sunday 19th of May 2024 12:26:05 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
19 May 2024"
B0DZkZNz,ü§ë G2A.com Free Gift Card Guide May 2024 FIX ü§ë,jusst2k4,GetText,Sunday 19th of May 2024 12:20:47 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_241974.pdf

Working as of:
19 May 2024"
mnA6HUzS,–î–µ—Ä–µ–≤–æ,hpnq,C++,Sunday 19th of May 2024 12:20:31 PM CDT,"#include ""bits/stdc++.h""
//speed coding handle

#define mp make_pair
#define cve(tpy) for (auto i : tpy) {for(auto j : i){cout << j << "" "";  }cout << ""\n"";} ;
#define f first
#define s second
#define loop(i, x, n) for (int i = x; i < n; i++)
#define joop(x, n) for (ll j = x; j < n; j++)
#define lp(n) for (ll i = 0; i < n; i++)
#define err cout << ""ERROR"" << endl;
#define all(x) x.begin(), x.end()
#define pb push_back
#define sz(x) x.size()
#define rndm rng()

// types
#define pii pair<int, int>
#define pll pair<ll, ll>
#define vvi vector<vector<int>>
#define vvll vector<vector<ll>>
typedef long long ll;
typedef long double ld;

// types of data
#define inf 1000000000
#define infll 1000000000000000000
#define INF ll(1e18)

#define md 998244353
#define mod 1000000009
//#define K 239017

#define DEBUG 1
using namespace std;
mt19937_64 rng(113113);
uniform_int_distribution<ll> drist;
struct  node    // –æ–ø–∏—Å–∞–Ω–∏–µ —É–∑–ª–∞
{
    int info;   // –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø–æ–ª–µ
    node* next; // –ø–æ–ª–µ –¥–ª—è —Å–≤—è–∑–∏ —Å –¥—Ä—É–≥–∏–º —É–∑–ª–æ–º
};

struct tEdge {//–æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–±—Ä–∞ –≥—Ä–∞—Ñ–∞
    int begin;//–∏–∑ –∫–∞–∫–æ–π –≤–µ—Ä—à–∏–Ω—ã —Ä–µ–±—Ä–æ –≤—ã—Ö–æ–¥–∏—Ç
    int end;//–≤ –∫–∞–∫—É—é —Ä–µ–±—Ä–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç
};


struct  nodeEdge    // –æ–ø–∏—Å–∞–Ω–∏–µ —É–∑–ª–∞ –¥–ª—è —Å—Ç–µ–∫–∞ —Ä–µ–±–µ—Ä
{
    tEdge edge;   // –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø–æ–ª–µ
    nodeEdge* next; // –ø–æ–ª–µ –¥–ª—è —Å–≤—è–∑–∏ —Å –¥—Ä—É–≥–∏–º —É–∑–ª–æ–º
};

//_________________________________________________________
//—Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—á–µ—Ä–µ–¥—å—é –≤–µ—Ä—à–∏–Ω

void push(node** phead, node** pend, int d) // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –æ—á–µ—Ä–µ–¥—å
//–∑–¥–µ—Å—å phead - —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –Ω–∞—á–∞–ª–æ –æ—á–µ—Ä–µ–¥–∏, pend - —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –∫–æ–Ω–µ—Ü –æ—á–µ—Ä–µ–¥–∏
{
    node* p = new node; // –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏ –ø–æ–¥ –Ω–æ–≤—ã–π —É–∑–µ–ª
    p->info = d; //–í –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø–æ–ª–µ –∑–∞–Ω–æ—Å–∏–º –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ d
    p->next = nullptr; //—ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π, –∑–∞ –Ω–∏–º –Ω–µ—Ç —É–∑–ª–æ–≤,
    //–ø–æ—ç—Ç–æ–º—É —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Å—Ç–∞–≤–∏–º –Ω–∞ NULL
    if (*pend) (*pend)->next = p;//–µ—Å–ª–∏ –æ—á–µ—Ä–µ–¥—å –±—ã–ª–∞ –Ω–µ–ø—É—Å—Ç–æ–π, —Ç–æ –Ω–∞—à —ç–ª–µ–º–µ–Ω—Ç —É–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ next
        //–¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ - —Ç.–µ. —Å—Ç–∞–≤–∏–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–º
    else *phead = p;//–µ—Å–ª–∏ –æ—á–µ—Ä–µ–¥—å –±—ã–ª–∞ –ø—É—Å—Ç–æ–π, —Ç–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–µ–ª–∞–µ–º –Ω–∞—á–∞–ª–æ–º –æ—á–µ—Ä–µ–¥–∏ -
    //—É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –Ω–∞—á–∞–ª–æ —Å—Ç–∞–≤–∏–º –Ω–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
    *pend = p;//—É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –æ—á–µ—Ä–µ–¥–∏
    //–µ—Å–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –ø–æ–∫–∞ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç, —Ç–æ –æ–±–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è phead –∏ pend –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç
}

void pop(node** top, node** pend)//—É–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
{
    node* temp;
    if ((*top) != nullptr)
    {
        temp = *top; // —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å temp –Ω–∞ –≤–µ—Ä—à–∏–Ω—É
        if ((*top) == (*pend))//–µ—Å–ª–∏ –æ—á–µ—Ä–µ–¥—å —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
            (*pend) = (*pend)->next;//–ø–µ—Ä–µ–Ω–æ—Å–∏–º —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ NULL
        (*top) = (*top)->next;//–ø–µ—Ä–µ–Ω–æ—Å–∏–º —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –≤–µ—Ä—à–∏–Ω—É –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç
        delete temp;//—É–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —É–∑–µ–ª
    }
}


// code
void build(int** matr, const int n, int k) {
//    cout << """" << endl;
    loop(i, 0, k) {
        int f, s, size;
        cin >> f >> s >> size;
        matr[f-1][s-1] = size;
        matr[s-1][f-1] = size;
    }
}
void print(int** matr, int n)
{
    cout << ""matr:"" << n << endl;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) cout << matr[i][j] << "" "";
        cout << endl;
    }
    cout << endl;
}

void bfs(int ** g, const int n){
    vector<queue<int>> qs;

}


void solve(){
    int n, m, k;
    cin >> n >> m >> k;
    int **g = new int*[n];
    loop(i, 0, n)  g[i] = new int[n] {0};

    build(g, n, k);
    print(g, n);
    // –∑–∞–¥–∞–º
    bfs(g, n);


}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
#ifdef DEBUG
    freopen(""text.txt"", ""r"", stdin);
//    freopen(""output.txt"", ""w"", stdout);
#endif
    solve();
    return 1;
}

"
Uyu08Zre,Untitled,lamorfini,Python,Sunday 19th of May 2024 12:11:19 PM CDT,"class UserCreationFormAdmin(UserCreationForm):
    class Meta:
        model = User
        fields = ['first_name', 'last_name', 'email', 'password1', 'password2']


class UserChangeFormAdmin(UserChangeForm):
    class Meta:
        model = User
        fields = ['first_name', 'last_name', 'display_name', 'email', 'date_of_birth', 'sex']

class Register(UserCreationForm):
    captcha = MathCaptchaField()
    class Meta:
        model = User
        fields = ['first_name', 'last_name', 'email', 'password1', 'password2']"
yJvRwwgK,Untitled,Josif_tepe,C++,Sunday 19th of May 2024 11:57:59 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;

    int z = 0;
    int i, x;
    for(i = 1; i <= n; i += 1) {
        cin >> x;
        z += x;
    }
     cout << z << endl;
    return 0;
}
"
kXSyJZ6X,Untitled,Josif_tepe,C++,Sunday 19th of May 2024 11:49:08 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int a = 0;
    int b = 0;
    int i;
    for(i = 1; i <= 5; i++)
        a = a + i;
        b = b + i;
    cout << a << endl;
    cout << b << endl;
    return 0;
}
"
7BVuYBGK,Untitled,Josif_tepe,C++,Sunday 19th of May 2024 11:43:00 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int a = 0;
    int i;
    for(i = 20; i > 10; i -= 2) 
        a = a + i; // 20 + 18 + 16 + 14 + 12
    cout << a << endl;
    return 0;
}
"
W9uQYKQ7,Untitled,Josif_tepe,C++,Sunday 19th of May 2024 11:39:19 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int a = 0;
    int i;
    for(i = 5; i >= 0; i--) 
        a = a + i; // 15
    cout << a << endl;
    return 0;
}
"
W7p34YVp,Untitled,Josif_tepe,C++,Sunday 19th of May 2024 11:36:11 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int z = 0;
    int i;
    for(i = 1; i <= 10; i++) {
        if((i % 3) == 0) {
            z += i; // z = 18
        }
    }
    cout << z << endl;
    return 0;
}
"
y9fj57KF,Untitled,Josif_tepe,C++,Sunday 19th of May 2024 11:27:05 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int i;
    for(i = 99; i >= 1; i -= 2) 
    {   
            cout << i << endl;   
    }
  
    return 0;
}
"
4B3t4Ha7,Untitled,Josif_tepe,C++,Sunday 19th of May 2024 11:22:58 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int i;
    for(i = 2; i <= 100; i += 2) 
    {   
            cout << i << endl;   
    }
  
    return 0;
}
"
N24yPGLG,Put Sprite Battlers on Bottom,Archeia,JavaScript,Sunday 19th of May 2024 11:22:42 AM CDT,"// Declare Constants
const sprite = this;
const actor = this._actor;
const index = arguments[0];

// Make Calculations
const battlerSpacing = 200; // Increase this value to add more space between battlers
let x = Math.round((Graphics.width / 2) - ($gameParty.maxBattleMembers() * battlerSpacing / 2) + (index * battlerSpacing));
x -= Math.floor((Graphics.width - Graphics.boxWidth) / 2);

let y = Graphics.height - 150;
y -= Math.floor((Graphics.height - Graphics.boxHeight) / 2);

// Home Position Offsets
const offsetNote = /<SIDEVIEW HOME OFFSET:[ ]([\+\-]\d+),[ ]([\+\-]\d+)>/i;
const xOffsets = actor.traitObjects().map((obj) => (obj && obj.note.match(offsetNote) ? Number(RegExp.$1) : 0));
const yOffsets = actor.traitObjects().map((obj) => (obj && obj.note.match(offsetNote) ? Number(RegExp.$2) : 0));
x = xOffsets.reduce((r, offset) => r + offset, x);
y = yOffsets.reduce((r, offset) => r + offset, y);

// Set Home Position
this.setHome(x, y);
"
0xZmrN7T,Untitled,Josif_tepe,C++,Sunday 19th of May 2024 11:21:59 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int i;
    for(i = 1; i <= 100; i += 1) 
    {
        if(i % 2 == 0) {
            cout << i << endl;
        }
    }
  
    return 0;
}
"
J9Ji2FTE,Untitled,Josif_tepe,C++,Sunday 19th of May 2024 11:17:52 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int i;
    for(i = 1; i <= 10; i += 1) 
    {
        cout << i << "" "";
    }
  
    return 0;
}
"
SzJP7Pcn,SFML_hell,VladimirKostovsky,C++,Sunday 19th of May 2024 11:01:28 AM CDT,"#include <SFML/Graphics.hpp>
#include <iostream>
#include <cmath>

#ifndef M_PI
#define M_PI 3.14159265358979323846
#endif

// Function to calculate gamma value
float calculateGamma(float alpha, float beta) {
    return std::sqrt((1 + alpha * alpha) / beta);
}

// Function to get a point on the ellipse
sf::Vector2f getEllipsePoint(float t, float alpha, float beta, float gamma, float epsilon) {
    float cosT = std::cos(t);
    float sinT = std::sin(t);
    float denom = gamma * gamma + 2 * alpha * gamma * cosT + beta * cosT * cosT;
    denom = (denom == 0) ? 0.0001f : denom; // Avoid division by zero
    float x = std::sqrt(epsilon / denom) * sinT;
    float y = std::sqrt(epsilon / denom) * cosT;
    return sf::Vector2f(x, y);
}

int main() {
    sf::RenderWindow window(sf::VideoMode(1024, 1024), ""Elliptical Beam Shape"");
    sf::Font font;
    if (!font.loadFromFile(""arial.ttf"")) {
        std::cerr << ""Failed to load font"" << std::endl;
        return -1;
    }

    // Scale factors for the ellipse
    float scaleX = 100.0f;
    float scaleY = 100.0f;

    // Form dimensions and position
    const float formWidth = 200.0f;
    const float formHeight = 150.0f;
    sf::Vector2f formPosition((window.getSize().x - formWidth) / 2, (window.getSize().y - formHeight) / 2);
    sf::Vector2f graphPosition((window.getSize().x - formWidth) / 2 + formWidth + 10, (window.getSize().y - formHeight) / 2);

    // Variable Labels
    sf::Text variableLabels[3] = { sf::Text(""Alpha:"", font, 20), sf::Text(""Beta:"", font, 20), sf::Text(""Epsilon:"", font, 20) };
    for (int i = 0; i < 3; ++i) {
        variableLabels[i].setPosition(formPosition.x + 10, formPosition.y + 20 + i * 50);
    }

    // Variable Values
    sf::Text variableValues[3] = { sf::Text(""1.0"", font, 20), sf::Text(""1.0"", font, 20), sf::Text(""1.0"", font, 20) };
    for (int i = 0; i < 3; ++i) {
        variableValues[i].setPosition(formPosition.x + 110, formPosition.y + 20 + i * 50);
    }

    // Input Box Outlines
    sf::RectangleShape inputOutlines[3];
    for (int i = 0; i < 3; ++i) {
        inputOutlines[i].setSize(sf::Vector2f(100, 30));
        inputOutlines[i].setPosition(formPosition.x + 100, formPosition.y + 20 + i * 50);
        inputOutlines[i].setFillColor(sf::Color::Transparent);
        inputOutlines[i].setOutlineColor(sf::Color::White);
        inputOutlines[i].setOutlineThickness(2);
    }

    // Input Field
    sf::Text inputField("""", font, 20);
    inputField.setFillColor(sf::Color::White);
    inputField.setPosition(formPosition.x + 100, formPosition.y + 20);

    bool activeInputs[3] = { false }; // Flags to track active input boxes

    // Grid Parameters
    const float gridSpacingX = window.getSize().x / 10.0f;
    const float gridSpacingY = window.getSize().y / 10.0f;

    // Main loop
    while (window.isOpen()) {
        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed) {
                window.close();
            }
            else if (event.type == sf::Event::MouseButtonPressed) {
                // Check if mouse is clicked inside any input box
                sf::Vector2i mousePos = sf::Mouse::getPosition(window);
                for (int i = 0; i < 3; ++i) {
                    activeInputs[i] = inputOutlines[i].getGlobalBounds().contains(static_cast<float>(mousePos.x), static_cast<float>(mousePos.y));
                }
            }
            else if (event.type == sf::Event::TextEntered) {
                if (event.text.unicode == '\b' && !inputField.getString().isEmpty()) {
                    inputField.setString(inputField.getString().substring(0, inputField.getString().getSize() - 1));
                }
                else if ((event.text.unicode >= 48 && event.text.unicode <= 57) || event.text.unicode == '.') {
                    inputField.setString(inputField.getString() + static_cast<char>(event.text.unicode));
                }
            }
            else if (event.type == sf::Event::KeyPressed && event.key.code == sf::Keyboard::Enter) {
                for (int i = 0; i < 3; ++i) {
                    if (activeInputs[i]) {
                        variableValues[i].setString(inputField.getString());
                        inputField.setString("""");
                    }
                }
            }
            else if (event.type == sf::Event::KeyPressed) {
                if (event.key.code == sf::Keyboard::Up) {
                    scaleX *= 1.1f;
                    scaleY *= 1.1f;
                }
                else if (event.key.code == sf::Keyboard::Down) {
                    scaleX /= 1.1f;
                    scaleY /= 1.1f;
                }
            }
        }

        window.clear();

        // Draw grid lines
        sf::Color gridColor(100, 100, 100);
        sf::VertexArray gridLinesX(sf::Lines, 2 * 10);
        sf::VertexArray gridLinesY(sf::Lines, 2 * 10);

        // Vertical grid lines
        for (int i = 0; i < 10; ++i) {
            float xPos = i * gridSpacingX;
            gridLinesX[2 * i].position = sf::Vector2f(xPos, 0);
            gridLinesX[2 * i].color = gridColor;
            gridLinesX[2 * i + 1].position = sf::Vector2f(xPos, window.getSize().y);
            gridLinesX[2 * i + 1].color = gridColor;
        }

        // Horizontal grid lines
        for (int i = 0; i < 10; ++i) {
            float yPos = i * gridSpacingY;
            gridLinesY[2 * i].position = sf::Vector2f(0, yPos);
            gridLinesY[2 * i].color = gridColor;
            gridLinesY[2 * i + 1].position = sf::Vector2f(window.getSize().x, yPos);
            gridLinesY[2 * i + 1].color = gridColor;
        }

        window.draw(gridLinesX);
        window.draw(gridLinesY);

        // Draw labels for grid lines
        sf::Text gridLabelsX[10];
        sf::Text gridLabelsY[10];
        for (int i = 0; i < 10; ++i) {
            float valueX = i * window.getSize().x / 10.0f / scaleX;
            float valueY = i * window.getSize().y / 10.0f / scaleY;
            gridLabelsX[i].setString(std::to_string(valueX));
            gridLabelsX[i].setFont(font);
            gridLabelsX[i].setCharacterSize(12);
            gridLabelsX[i].setFillColor(sf::Color::White);
            gridLabelsX[i].setPosition(i * window.getSize().x / 10.0f, window.getSize().y - 20);
            window.draw(gridLabelsX[i]);

            gridLabelsY[i].setString(std::to_string(valueY));
            gridLabelsY[i].setFont(font);
            gridLabelsY[i].setCharacterSize(12);
            gridLabelsY[i].setFillColor(sf::Color::White);
            gridLabelsY[i].setPosition(5, i * window.getSize().y / 10.0f);
            window.draw(gridLabelsY[i]);
        }

        // Get parameter values
        float alpha = std::stof(variableValues[0].getString().toAnsiString());
        float beta = std::stof(variableValues[1].getString().toAnsiString());
        float epsilon = std::stof(variableValues[2].getString().toAnsiString());

        // Calculate gamma
        float gamma = calculateGamma(alpha, beta);

        // Draw the ellipse
        sf::VertexArray ellipse(sf::LineStrip, 361);
        for (int i = 0; i <= 360; ++i) {
            float t = i * M_PI / 180.0f;
            sf::Vector2f point = getEllipsePoint(t, alpha, beta, gamma, epsilon);
            ellipse[i].position = sf::Vector2f(graphPosition.x + scaleX * point.x, graphPosition.y + scaleY * point.y);
            ellipse[i].color = sf::Color::Green;
        }
        window.draw(ellipse);

        // Draw form elements
        for (int i = 0; i < 3; ++i) {
            window.draw(inputOutlines[i]);
            window.draw(variableLabels[i]);
            window.draw(variableValues[i]);
        }
        window.draw(inputField);

        window.display();
    }

    return 0;
}

"
Tyg8htaq,appdaemon,kofii12345,YAML,Sunday 19th of May 2024 10:45:05 AM CDT,"appdaemon:
  latitude: 0
  longitude: 0
  elevation: 30
  time_zone: Europe/Berlin
  plugins:
    HASS:
      type: hass
      ha_url: http://192.168.0.195:8123
      token: cdscdscdscs - token from Home Assistant
      cert_verify: True
    MQTT:
      type: mqtt
      namespace: mqtt
      client_id: ""appdaemon""
      client_host: 192.168.0.195
      client_port: 1883
      client_user: ""mqttlogin""
      client_password: ""mqttpass""
      client_topics: NONE
http:
  url: http://192.168.0.195:5050
admin:
api:
hadashboard:
"
wR0Lgpxm,Toilet Tower Defense | Askar Script,LunarRbx,Lua,Sunday 19th of May 2024 10:44:44 AM CDT,"--UPDATE
loadstring(game:HttpGet(""https://raw.githubusercontent.com/ImN3rP1k/AscarClient/main/AscarScriptTTD""))()"
FyBuqDiV,Untitled,Josif_tepe,C++,Sunday 19th of May 2024 10:43:06 AM CDT,"#include <bits/stdc++.h>

using namespace std;
const int maxn = 2e5 + 10;
int n;
int h[maxn], r[maxn];
int segment_tree[3 * maxn];
void build_tree(int L, int R, int pos) {
    if(L == R) {
        segment_tree[pos] = h[L];
    }
    else {
        int middle = (L + R) / 2;
        build_tree(L, middle, 2 * pos);
        build_tree(middle + 1, R, 2 * pos + 1);
        segment_tree[pos] = max(segment_tree[2 * pos], segment_tree[2 * pos + 1]);
    }
}
void update(int L, int R, int pos, int idx, int value) {
    if(L == R) {
        segment_tree[pos] -= value;
        return;
    }
    int middle = (L + R) / 2;
    if(idx <= middle) {
        update(L, middle, 2 * pos, idx, value);
    }
    else {
        update(middle + 1, R, 2 * pos + 1, idx, value);
    }
    segment_tree[pos] = max(segment_tree[2 * pos], segment_tree[2 * pos + 1]);
}
int query(int L, int R, int pos, int x) {
    if(L == R) {
        return L + 1;
    }
    int middle = (L + R) / 2;
    if(segment_tree[2 * pos] >= x) {
        return query(L, middle, 2 * pos, x);
    }
    else {
        return query(middle + 1, R, 2 * pos + 1, x);
    }
    return 0;
}
int main()
{
    ios_base::sync_with_stdio(false);
    int m;
    cin >> n >> m;

    for(int i = 0; i < n; i++) {
        cin >> h[i];
    }
    for(int i = 0; i < m; i++) {
        cin >> r[i];
    }

    build_tree(0, n - 1, 1);

    for(int i = 0; i < m; i++) {
        if(segment_tree[1] < r[i]) {
            cout << 0 << "" "";
        }
        else {
            int x = query(0, n - 1, 1, r[i]);
            update(0, n - 1, 1, x - 1, r[i]);
            cout << x << "" "";
        }
    }
    return 0;
}
"
HJJ1DX23,apps.yaml,kofii12345,YAML,Sunday 19th of May 2024 10:42:43 AM CDT,"nspanel-1:
  module: nspanel-lovelace-ui
  class: NsPanelLovelaceUIManager
  config:
    panelRecvTopic: ""tele/nspanel-1/RESULT""
    panelSendTopic: ""cmnd/nspanel-1/CustomSend""
    model: eu
    locale: ""pl_PL""
    updateMode: ""auto-notify""
    sleepTimeout: 20
    screensaver:
      entity: ""weather.forecast_dom""
    cards:
      - type: cardEntities
        title: Test Entities Card
        entities:
          - entity: cover.roleta_biuro_zaslona
            name: Roleta biuro
          - entity: button.l10s_ultra_shortcut_1
            name: Vacuum"
eASj2apG,Admin panel,Uuuuh,Lua,Sunday 19th of May 2024 10:25:23 AM CDT,"local Players = game:GetService(""Players"")

-- –°–æ–∑–¥–∞–µ–º ScreenGui
local screenGui = Instance.new(""ScreenGui"")
screenGui.Name = ""AdminPanel""
screenGui.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")

-- –°–æ–∑–¥–∞–µ–º Frame –¥–ª—è –ø–∞–Ω–µ–ª–∏
local frame = Instance.new(""Frame"")
frame.Size = UDim2.new(0, 200, 0, 150)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.Parent = screenGui

-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–∞–Ω–µ–ª–∏
local title = Instance.new(""TextLabel"")
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
title.Text = ""Admin Panel""
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Parent = frame

-- –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
local playerNameInput = Instance.new(""TextBox"")
playerNameInput.Size = UDim2.new(1, -20, 0, 30)
playerNameInput.Position = UDim2.new(0, 10, 0, 40)
playerNameInput.PlaceholderText = ""Enter Player Name""
playerNameInput.Text = """"
playerNameInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
playerNameInput.TextColor3 = Color3.fromRGB(255, 255, 255)
playerNameInput.Parent = frame

-- –ö–Ω–æ–ø–∫–∞ Teleport
local teleportButton = Instance.new(""TextButton"")
teleportButton.Size = UDim2.new(1, -20, 0, 30)
teleportButton.Position = UDim2.new(0, 10, 0, 80)
teleportButton.Text = ""Teleport""
teleportButton.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
teleportButton.TextColor3 = Color3.fromRGB(255, 255, 255)
teleportButton.Parent = frame

-- –í–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫
local watermark = Instance.new(""TextLabel"")
watermark.Size = UDim2.new(1, 0, 0, 20)
watermark.Position = UDim2.new(0, 0, 1, -20)
watermark.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
watermark.Text = ""by Xande | Scripts!""
watermark.TextColor3 = Color3.fromRGB(255, 255, 255)
watermark.TextScaled = true
watermark.Parent = frame

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫ –∏–≥—Ä–æ–∫—É
local function teleportToPlayer(targetPlayerName)
    local targetPlayer = Players:FindFirstChild(targetPlayerName)
    local localPlayer = Players.LocalPlayer

    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild(""HumanoidRootPart"") then
        local targetPosition = targetPlayer.Character.HumanoidRootPart.CFrame
        if localPlayer.Character and localPlayer.Character:FindFirstChild(""HumanoidRootPart"") then
            localPlayer.Character.HumanoidRootPart.CFrame = targetPosition
        else
            print(""Local player's HumanoidRootPart not found."")
        end
    else
        print(""Target player or their HumanoidRootPart not found."")
    end
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ Teleport
teleportButton.MouseButton1Click:Connect(function()
    local targetPlayerName = playerNameInput.Text
    if targetPlayerName ~= """" then
        teleportToPlayer(targetPlayerName)
    else
        print(""Please enter a valid player name."")
    end
end)"
iWFsJ27w,sdbvsrfbdr,gadungw71,PHP,Sunday 19th of May 2024 10:07:25 AM CDT,"‚Ä¢	https://www.imdb.com/list/ls545422768/
‚Ä¢	https://www.imdb.com/list/ls545422264/
‚Ä¢	https://www.imdb.com/list/ls545422918/
‚Ä¢	https://www.imdb.com/list/ls545424532/
‚Ä¢	https://www.imdb.com/list/ls545424712/
‚Ä¢	https://www.imdb.com/list/ls545424158/
‚Ä¢	https://www.imdb.com/list/ls545424166/
‚Ä¢	https://www.imdb.com/list/ls545424640
‚Ä¢	https://www.imdb.com/list/ls545424207
‚Ä¢	https://www.imdb.com/list/ls545424264
‚Ä¢	https://www.imdb.com/list/ls545424485
‚Ä¢	https://www.imdb.com/list/ls545445910
‚Ä¢	https://www.kooapp.com/koo/guest_3NFOM8/72acd6b3-facc-44be-b720-4a9701ea4910
‚Ä¢	https://open.firstory.me/user/clwdmtcwr000h01x67evoheva
‚Ä¢	https://open.firstory.me/story/clwdmtvhi09xi01wg58wndir9
‚Ä¢	https://wandering.flarum.cloud/d/63647-abudabiii
‚Ä¢	https://hiuderyy.hashnode.dev/abudabbii
‚Ä¢	https://forum.mush.com.br/topic/217424/abudabbii
‚Ä¢	https://www.bankier.pl/forum/temat_sdfsegsg,66392463.html
‚Ä¢	https://medium.com/@styller101/%E6%8E%92%E7%90%83%E5%B0%91%E5%B9%B4-%E5%9E%83%E5%9C%BE%E5%9C%BA%E5%86%B3%E6%88%98-%E5%AE%8C%E6%95%B4%E7%89%88%E6%9C%AC-%E9%9B%BB%E5%BD%B1-2024-bluray-%E5%9C%A8%E7%B7%9A%E8%A7%80%E7%9C%8B%E5%AE%8C%E6%95%B4%E7%89%88-b471679b60a3.
‚Ä¢	https://www.onfeetnation.com/profiles/blogs/dsfsebrt
‚Ä¢	https://hackmd.io/@rerewilli6/BkT_eqvQA
‚Ä¢	https://demo.hedgedoc.org/s/sMZMklsSs
‚Ä¢	https://rentry.co/tcnupkb2
‚Ä¢	https://paste.ee/p/i7E2K
‚Ä¢	https://yamcode.com/dsgfsgsg-7
‚Ä¢	https://lifeisfeudal.com/Discussions/question/fsaesgjt
‚Ä¢	https://start.me/w/arxv8n
‚Ä¢	https://plaza.rakuten.co.jp/aryasantosso/diary/202405190001/
‚Ä¢	https://telegra.ph/DXGSEGSE-05-19
‚Ä¢	https://muckrack.com/adaretrt-geratayui/bio
‚Ä¢	https://profile.hatena.ne.jp/safaryuuiop/
‚Ä¢	https://www.bitsdujour.com/profiles/fVLhjE
‚Ä¢	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/764238/Default.aspx
‚Ä¢	https://www.fitlynk.com/1716131002F335101
"
NukYumAd,Untitled,Nick90,C++,Sunday 19th of May 2024 09:55:21 AM CDT,"#include <iostream>
#include <stack>
#include <queue>
#include <string>
#include <sstream>

using namespace std;

char getMirrorParanthesis(char one) {

    char sign = NULL;

    switch (one) {
        case '{': sign = '}'; break;
        case '(': sign = ')'; break;
        case '[': sign = ']'; break;
        case '}': sign = '{'; break;
        case ')': sign = '('; break;
        case ']': sign = '['; break;
        case ' ': sign = ' '; break;
    }

    return sign;

}

int main() {

    string line;
    getline(cin, line);

    stack<char> left;
    queue<char> right;

    for (int i = 0; i < line.size(); i++) {

        char paranthesis = line[i];

        if (i < line.size() / 2) {
            left.push(paranthesis);
        } else {
            right.push(paranthesis);
        }
    } 

    bool balanced = true;

    if (left.size() == right.size()) {
        while (left.size() && right.size()) {
            char leftSign = left.top(); left.pop();
            char rightSign = right.front(); right.pop();
            if (getMirrorParanthesis(leftSign) != rightSign) {
                balanced = false;
                break;
            }
        }
    } else {
        balanced = false;
    }

    cout << (balanced ? ""YES"" : ""NO"") << endl;

    return 0;
}"
gdsnuMLU,i3 config,Wrigs,Bash,Sunday 19th of May 2024 09:54:37 AM CDT,"################################################################################
#
#   __  __    __ 
#   \ \/ / /\ \ \
#    \ \ \/  \/ /
# /\_/ /\  /\  / 
# \___/  \/  \/  
#
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#
# See http://i3wm.org/docs/userguide.html for a complete reference!
#
################################################################################

# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 10
font pango:System-ui Regular 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec ""rofi -modi drun,run -show drun""
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop


# start j4-desktop-menu
bindsym $mod+Shift+m exec --no-startup-id j4-dmenu-desktop
# start rofi (a program launcher)
bindsym $mod+m exec --no-startup-id ""rofi -show drun -show-icons -display-drun prompt""

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

################################################################################
##  Workspaces
################################################################################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 ""1""
set $ws2 ""2""
set $ws3 ""3""
set $ws4 ""4""
set $ws5 ""5""
set $ws6 ""6""
set $ws7 ""7""
set $ws8 ""8""
set $ws9 ""9""
set $ws10 ""10""

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec ""i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'""

# resize window (you can also use the mouse for that)
mode ""resize"" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window‚Äôs width.
        # Pressing right will grow the window‚Äôs width.
        # Pressing up will shrink the window‚Äôs height.
        # Pressing down will grow the window‚Äôs height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode ""default""
        bindsym Escape mode ""default""
        bindsym $mod+r mode ""default""
}

bindsym $mod+r mode ""resize""

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
        position top
        font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
        font pango:System-ui Regular 11
}


################################################################################
##  Floating or Tiled
################################################################################

#floating enabled from some programs - find with xprop

for_window [class=""Bleachbit""] floating disable
for_window [class=""Blueberry.py""] floating enable
for_window [class=""Brasero""] floating disable
for_window [class=""Galculator""] floating enable
for_window [class=""Gnome-Calculator""] floating enable
for_window [class=""Gnome-disks""] floating disable
for_window [class=""^Gnome-font-viewer$""] floating enable
for_window [class=""^Gpick$""] floating enable
for_window [class=""Hexchat""] floating disable
for_window [class=""Imagewriter""] floating enable
for_window [class=""Font-manager""] floating enable
# for_window [class=""qt5ct|Lxappearance] floating enable
for_window [class=""Nitrogen""] floating disable
for_window [class=""Pavucontrol""] floating disable
for_window [class=""Peek""] floating enable
# for_window [class=""^Skype$""] floating enable
for_window [class=""^Spotify$""] floating disable
for_window [class=""System-config-printer.py""] floating enable
for_window [class=""Unetbootin.elf""] floating enable
for_window [class=""Usb-creator-gtk""] floating enable
for_window [class=""^Vlc$""] floating disable
for_window [class=""Wine""] floating disable
for_window [class=""Xfburn""] floating disable
for_window [class=""Xfce4-appfinder""] floating enable
for_window [class=""Xfce4-settings-manager""] floating disable
for_window [class=""Xfce4-taskmanager""] floating enable
for_window [class=""KeePassXC""] floating enable


#for_window [instance=""gimp""] floating disable
#for_window [instance=""script-fu""] border normal
# for_window [instance=""variety""] floating disable


for_window [title=""Copying""] floating enable
for_window [title=""Deleting""] floating enable
for_window [title=""Moving""] floating enable
for_window [title=""^Terminator Preferences$""] floating enable


#for_window [window_role=""^gimp-toolbox-color-dialog$""] floating enable
for_window [window_role=""pop-up""] floating enable
for_window [window_role=""^Preferences$""] floating enable
for_window [window_role=""setup""] floating enable



################################################################################
##  Give Focus to Applications
################################################################################

for_window [class=""Alactritty""] focus
for_window [class=""Gnome-terminal""] focus
for_window [class=""Termite""] focus
for_window [class=""Terminator""] focus
for_window [class=""Tilix""] focus
for_window [class=""Urxvt""] focus


################################################################################
##  Settings for I3 gaps
################################################################################

# https://i3wm.org/docs/userguide.html#gaps
# delete or uncomment the following lines if you do not have it or do not
# want it


for_window [class=""^.*""] border pixel 2

# Inner gaps for all windows: space between two adjacent windows (or split containers).
gaps inner 6

# Outer gaps for all windows: space along the screen edges.
gaps outer 6

################################################################################
##  AutoStart Apps
################################################################################
exec_always --no-startup-id nitrogen --restore
"
mAHkeyJ8,evaluasi-rkpd.php,martinms,PHP,Sunday 19th of May 2024 09:25:01 AM CDT,"<?php
$breadcumb = [
    ""head"" => ""Evaluasi RKPD"",
    ""menu"" => ""Evaluasi"",
    ""subMenu"" => ""RKPD""
];
ob_start(); ?>
<link href=""https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css"" rel=""stylesheet"" />
<style>
    .v-middle {
        vertical-align: middle;
    }
</style>
<?php
$link = ob_get_clean();
$body = insertHtml(function ($data) { ?>
    <div class=""card mb-5"">
        <form action=""#"" method=""post"" id=""searchForm"">
            <div class=""card-body"">
                <div class=""row"">
                    <label for=""filter-label"" class=""form-label fw-semibold col-2 mt-2 text-start"">
                        Filter Evaluasi Renja :
                    </label>

                    <div class=""col-sm-7"">
                        <select class=""form-select"" id=""opd"" aria-label=""Default select example"">
                            <option value=""placeholder"" disabled selected>Pilih OPD</option>
                            <?php foreach ($data['semuaOpd'] as $opd) { ?>
                                <option value=""<?= $opd['opdId'] ?>"" <?php echo ($data['opdId'] == $opd['opdId']) ? 'selected' : ''; ?>><?= $opd['namaOpd'] ?></option>
                            <?php } ?>
                        </select>
                    </div>

                    <div class=""col-sm-3"">
                        <button class=""btn btn-primary"" id=""submit-btn"" type=""submit"">
                            <i class=""ti ti-search""></i>
                            Cari
                        </button>
                    </div>

                </div>
            </div>
        </form>
    </div>
<?php }, $data); ?>

<?php $modal = insertHtml(function () use ($data) { ?>
    <div class=""modal fade"" id=""detail-modal"" tabindex=""-1"" aria-labelledby=""bs-example-modal-lg"" style=""display: none;"" aria-hidden=""true"">
        <div class=""modal-dialog modal-fullscreen"">
            <div class=""modal-content"">
                <div class=""modal-body"">
                    <div class=""d-flex modal-header justify-content-end"">
                        <a href=""#"" class=""btn btn-md btn-primary"" id=""btn-download-laporan"">Download</a>

                        <button type=""button"" class=""btn"" data-bs-dismiss=""modal"" aria-label=""Close""><i class=""ti ti-arrows-minimize fs-8""></i></button>
                    </div>
                    <p class=""text-center fs-6 mt-2 fw-bolder text-dark"">
                        Tabel Gabungan T-B.4 dan T-C.19
                        <br>
                        Evaluasi Kinerja Pelaksanaan Perencanaan Daerah sampai dengan Tahun Berjalan
                        (<?php echo date('Y') ?>)
                    </p>

                    <div class=""table-responsive"">
                        <table class=""table table-hover table-bordered"" id=""dt-data"">
                            <thead>
                                <tr class=""text-center"">
                                    <th rowspan=""2"" class=""v-middle"">No</th>
                                    <th rowspan=""2"" class=""v-middle"">
                                        Urusan / Bidang
                                        <br>
                                        Urusan Pemerintahan Daerah
                                        <br>
                                        dan
                                        <br>
                                        Program / Kegiatan / Sub Kegiatan
                                    </th>
                                    <th rowspan=""2"" class=""v-middle"">
                                        Indikator Kinerja Program (outcome) /
                                        <br>
                                        Kegiatan (output) /
                                        <br>
                                        Sub Kegiatan (output)
                                    </th>
                                    <th rowspan=""2"" class=""v-middle"" colspan=""3"">
                                        Target Capaian Kinerja RPJMD Tahun 2021-2026
                                        <br>
                                        (akhir periode RPJMD)
                                    </th>
                                    <th rowspan=""2"" class=""v-middle"" colspan=""3"">
                                        Realisasi Target Kinerja Hasil Program
                                        <br>
                                        dan Keluaran Kegiatan s/d Tahun 2021
                                    </th>
                                    <?php $i = 0; ?>
                                    <?php foreach ($data['data']['tahun'] as $tahun) : ?>
                                        <?php if ($i == 0) : ?>
                                            <th class=""v-middle"" colspan=""7"">
                                                Target dan Realisasi Kinerja Program
                                                <br>
                                                dan Keluaran Kegiatan Tahun Lalu
                                                <br>
                                                Target RKPD Tahun <?php echo $tahun; ?>
                                            </th>
                                        <?php elseif ($i == count($data['data']['tahun']) - 1) : ?>
                                            <th class=""v-middle"" rowspan=""2"" colspan=""3"">
                                                Target Program atau Kegiatan RKPD
                                                <br>
                                                Tahun Berjalan (<?php echo $tahun; ?>)
                                            </th>
                                        <?php else : ?>
                                            <th class=""v-middle"" colspan=""7"">
                                                Target dan Realisasi
                                                <br>
                                                Program / Kegiatan RKPD <?php echo $tahun; ?>
                                            </th>
                                        <?php endif; ?>
                                        <?php $i++; ?>
                                    <?php endforeach; ?>
                                    <th colspan=""5"">
                                        Perkiraan Realisasi Capaian Target RPJMD dan Renstra
                                        <br>
                                        Sampai Dengan Tahun Berjalan
                                    </th>
                                    <th rowspan=""2"" class=""v-middle"">
                                        Perangkat Daerah Penanggung Jawab
                                    </th>
                                    <th rowspan=""2"" class=""v-middle"">
                                        Keterangan
                                    </th>
                                </tr>
                                <tr>
                                    <th class=""v-middle text-center"" colspan=""3"">Target RKPD Tahun 2022</th>
                                    <th class=""v-middle text-center"" colspan=""2"">Realisasi RKPD Tahun 2022</th>
                                    <th class=""v-middle text-center"" colspan=""2"">Tingkat Realisasi (%)</th>

                                    <th class=""v-middle text-center"" colspan=""3"">Target RKPD Tahun 2023</th>
                                    <th class=""v-middle text-center"" colspan=""2"">Realisasi RKPD Tahun 2023</th>
                                    <th class=""v-middle text-center"" colspan=""2"">Tingkat Realisasi (%)</th>
                                    <th class=""v-middle text-center"" colspan=""3"">
                                        Realisasi Capaian Program <br>
                                        dan Kegiatan s/d Tahun Berjalan
                                    </th>
                                    <th class=""v-middle text-center"" colspan=""2"">
                                        Tingkat Capaian Realisasi Target
                                        <br>
                                        s/d Tahun Berjalan
                                    </th>
                                </tr>
                                <tr>
                                    <th class=""text-center v-middle"" rowspan=""2"">1</th>
                                    <th class=""text-center v-middle"" rowspan=""2"">2</th>
                                    <th class=""text-center v-middle"" rowspan=""2"">3</th>
                                    <th colspan=""3"" class=""text-center"">4</th>
                                    <th colspan=""3"" class=""text-center"">5</th>

                                    <?php $i = 0; ?>
                                    <?php foreach ($data['data']['tahun'] as $tahun) : ?>
                                        <?php if ($i == 0) : ?>
                                            <th class=""text-center"" colspan=""3"">6</th>
                                            <th class=""text-center"" colspan=""2"">7</th>
                                            <th class=""text-center"" colspan=""2"">8=(7/6)*100</th>
                                        <?php elseif ($i == 1) : ?>
                                            <th class=""text-center"" colspan=""3"">9</th>
                                            <th class=""text-center"" colspan=""2"">10</th>
                                            <th class=""text-center"" colspan=""2"">11=(10/9)*100</th>
                                        <?php else : ?>
                                            <th class=""text-center"" colspan=""3"">9</th>
                                        <?php endif; ?>

                                        <?php $i++; ?>
                                    <?php endforeach; ?>

                                    <th class=""text-center"" colspan=""3"">10=(5+7+9)</th>
                                    <th class=""text-center"" colspan=""2"">11=(10/4)*100</th>
                                    <th class=""text-center"">12</th>
                                    <th></th>
                                </tr>
                                <tr>
                                    <th class=""text-center v-middle"">Kinerja</th>
                                    <th class=""text-center v-middle"">Satuan</th>
                                    <th class=""text-center v-middle"">Rp</th>

                                    <th class=""text-center v-middle"">Kinerja</th>
                                    <th class=""text-center v-middle"">Satuan</th>
                                    <th class=""text-center v-middle"">Rp</th>

                                    <?php $i = 0; ?>
                                    <?php foreach ($data['data']['tahun'] as $tahun) : ?>
                                        <?php if ($i != count($data['data']['tahun']) - 1) : ?>
                                            <th class=""text-center v-middle"">Kinerja</th>
                                            <th class=""text-center v-middle"">Satuan</th>
                                            <th class=""text-center v-middle"">Rp</th>
                                            <th class=""text-center v-middle"">Kinerja</th>
                                            <th class=""text-center v-middle"">Rp</th>
                                            <th class=""text-center v-middle"">Kinerja (%)</th>
                                            <th class=""text-center v-middle"">Rp (%)</th>
                                        <?php else : ?>
                                            <th class=""text-center v-middle"">Kinerja</th>
                                            <th class=""text-center v-middle"">Satuan</th>
                                            <th class=""text-center v-middle"">Rp</th>
                                        <?php endif; ?>
                                        <?php $i++; ?>
                                    <?php endforeach; ?>


                                    <th class=""text-center v-middle"">Kinerja</th>
                                    <th class=""text-center v-middle"">Satuan</th>
                                    <th class=""text-center v-middle"">Rp</th>

                                    <th class=""text-center v-middle"">Kinerja</th>
                                    <th class=""text-center v-middle"">Rp</th>

                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td></td>
                                    <td>
                                        <?php echo $data['opd']['namaOpd']; ?>
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td class=""text-center"">xx.xxx.xxx</td>
                                    <td></td>
                                    <td></td>
                                    <td class=""text-center"">xx.xxx.xxx</td>
                                    <td></td>
                                    <td></td>
                                    <td class=""text-center"">xx.xxx.xxx</td>
                                    <td></td>
                                    <td class=""text-center"">xx.xxx.xxx</td>
                                    <td></td>
                                    <td class=""text-center"">xx</td>
                                    <td></td>
                                    <td></td>
                                    <td class=""text-center"">xx.xxx.xxx</td>
                                    <td></td>
                                    <td class=""text-center"">xx.xxx.xxx</td>
                                    <td></td>
                                    <td class=""text-center"">xx</td>
                                    <td></td>
                                    <td></td>
                                    <td class=""text-center"">xx.xxx.xxx</td>
                                    <td class=""text-center"">x</td>
                                    <td></td>
                                    <td class=""text-center"">xx.xxx.xxx</td>
                                    <td></td>
                                    <td class=""text-center"">xx</td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <?php $i = 0; ?>
                                <?php foreach ($data['data']['evaluasi'] as $tujuan) : ?>
                                    <tr>
                                        <td rowspan=""<?php echo count($tujuan['indikator']); ?>""><?php echo $i + 1; ?></td>
                                        <td rowspan=""<?php echo count($tujuan['indikator']); ?>"">
                                            <b>Tujuan</b>: <?php echo $tujuan['nama']; ?>
                                        </td>
                                        <td><?php echo $tujuan['indikator'][0]['nama']; ?></td>

                                        <td class=""text-center""><?php echo $tujuan['indikator'][0]['targetAkhirPeriode']['kinerja']; ?></td>
                                        <td class=""text-center""><?php echo $tujuan['indikator'][0]['targetAkhirPeriode']['satuan']; ?></td>
                                        <td class=""text-center""><?php echo $tujuan['paguIndikatif']; ?></td>

                                        <td class=""text-center""></td>
                                        <td class=""text-center""></td>
                                        <td class=""text-center""></td>

                                        <?php $j = 0; ?>
                                        <?php foreach ($tujuan['indikator'][0]['targetDanRealisasi'] as $targetDanRealisasi) : ?>
                                            <?php if ($j != count($tujuan['indikator'][0]['targetDanRealisasi']) - 1) : ?>
                                                <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                <td class=""text-center""><?php echo $tujuan['paguIndikatif'] ?? ''; ?></td>

                                                <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['kinerja'] ?? ''; ?></td>
                                                <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['rp'] ?? ''; ?></td>

                                                <td class=""text-center""></td>
                                                <td class=""text-center""></td>
                                            <?php else : ?>
                                                <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                <td class=""text-center""><?php echo $targetDanRealisasi['target']['paguIndikatif'] ?? ''; ?></td>
                                            <?php endif; ?>

                                            <?php $j++; ?>
                                        <?php endforeach; ?>

                                        <td class=""text-center v-middle""></td>
                                        <td class=""text-center v-middle""></td>
                                        <td class=""text-center v-middle""></td>

                                        <td class=""text-center v-middle""></td>
                                        <td class=""text-center v-middle""></td>

                                        <td></td>
                                        <td></td>
                                    </tr>

                                    <?php for ($j = 1; $j < count($tujuan['indikator']); $j++) : ?>
                                        <tr>
                                            <td><?php echo $tujuan['indikator'][$j]['nama']; ?></td>

                                            <td class=""text-center""><?php echo $tujuan['indikator'][$j]['targetAkhirPeriode']['kinerja']; ?></td>
                                            <td class=""text-center""><?php echo $tujuan['indikator'][$j]['targetAkhirPeriode']['satuan']; ?></td>
                                            <td class=""text-center""><?php echo $tujuan['paguIndikatif']; ?></td>

                                            <td class=""text-center""></td>
                                            <td class=""text-center""></td>
                                            <td class=""text-center""></td>

                                            <?php $k = 0; ?>
                                            <?php foreach ($tujuan['indikator'][$j]['targetDanRealisasi'] as $targetDanRealisasi) : ?>
                                                <?php if ($k != count($tujuan['indikator'][$j]['targetDanRealisasi']) - 1) : ?>
                                                    <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                    <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                    <td class=""text-center""><?php echo $tujuan['paguIndikatif'] ?? ''; ?></td>

                                                    <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['kinerja'] ?? ''; ?></td>
                                                    <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['rp'] ?? ''; ?></td>

                                                    <td class=""text-center""></td>
                                                    <td class=""text-center""></td>
                                                <?php else : ?>
                                                    <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                    <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                    <td class=""text-center""><?php echo $targetDanRealisasi['target']['paguIndikatif'] ?? ''; ?></td>
                                                <?php endif; ?>

                                                <?php $k++; ?>
                                            <?php endforeach; ?>

                                            <td class=""text-center v-middle""></td>
                                            <td class=""text-center v-middle""></td>
                                            <td class=""text-center v-middle""></td>

                                            <td class=""text-center v-middle""></td>
                                            <td class=""text-center v-middle""></td>

                                            <td></td>
                                            <td></td>
                                        </tr>
                                    <?php endfor; ?>

                                    <?php $s = 0; ?>
                                    <?php foreach ($tujuan['sasaran'] as $sasaran) : ?>
                                        <tr>
                                            <td rowspan=""<?php echo count($sasaran['indikator']); ?>""><?php echo $i + 1; ?>
                                                .<?php echo $s + 1; ?></td>
                                            <td rowspan=""<?php echo count($sasaran['indikator']); ?>"">
                                                <b>Sasaran</b>: <?php echo $sasaran['nama']; ?>
                                            </td>
                                            <td><?php echo $sasaran['indikator'][0]['nama']; ?></td>

                                            <td class=""text-center""><?php echo $sasaran['indikator'][0]['targetAkhirPeriode']['kinerja']; ?></td>
                                            <td class=""text-center""><?php echo $sasaran['indikator'][0]['targetAkhirPeriode']['satuan']; ?></td>
                                            <td class=""text-center""><?php echo $sasaran['paguIndikatif']; ?></td>

                                            <td class=""text-center""></td>
                                            <td class=""text-center""></td>
                                            <td class=""text-center""></td>

                                            <?php $j = 0; ?>
                                            <?php foreach ($sasaran['indikator'][0]['targetDanRealisasi'] as $targetDanRealisasi) : ?>
                                                <?php if ($j != count($sasaran['indikator'][0]['targetDanRealisasi']) - 1) : ?>
                                                    <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                    <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                    <td class=""text-center""><?php echo $sasaran['paguIndikatif'] ?? ''; ?></td>

                                                    <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['kinerja'] ?? ''; ?></td>
                                                    <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['rp'] ?? ''; ?></td>

                                                    <td class=""text-center""></td>
                                                    <td class=""text-center""></td>
                                                <?php else : ?>
                                                    <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                    <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                    <td class=""text-center""><?php echo $targetDanRealisasi['target']['paguIndikatif'] ?? ''; ?></td>
                                                <?php endif; ?>

                                                <?php $j++; ?>
                                            <?php endforeach; ?>

                                            <td class=""text-center v-middle""></td>
                                            <td class=""text-center v-middle""></td>
                                            <td class=""text-center v-middle""></td>

                                            <td class=""text-center v-middle""></td>
                                            <td class=""text-center v-middle""></td>

                                            <td></td>
                                            <td></td>
                                        </tr>

                                        <?php for ($k = 1; $k < count($sasaran['indikator']); $k++) : ?>
                                            <tr>
                                                <td>
                                                    <?php echo $sasaran['indikator'][$k]['nama']; ?>
                                                </td>

                                                <td class=""text-center""><?php echo $sasaran['indikator'][$k]['targetAkhirPeriode']['kinerja']; ?></td>
                                                <td class=""text-center""><?php echo $sasaran['indikator'][$k]['targetAkhirPeriode']['satuan']; ?></td>
                                                <td class=""text-center""><?php echo $sasaran['paguIndikatif']; ?></td>

                                                <td class=""text-center""></td>
                                                <td class=""text-center""></td>
                                                <td class=""text-center""></td>

                                                <?php $l = 0; ?>
                                                <?php foreach ($sasaran['indikator'][$k]['targetDanRealisasi'] as $targetDanRealisasi) : ?>
                                                    <?php if ($l != count($sasaran['indikator'][$k]['targetDanRealisasi']) - 1) : ?>
                                                        <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                        <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                        <td class=""text-center""><?php echo $sasaran['paguIndikatif'] ?? ''; ?></td>

                                                        <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['kinerja'] ?? ''; ?></td>
                                                        <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['rp'] ?? ''; ?></td>

                                                        <td class=""text-center""></td>
                                                        <td class=""text-center""></td>
                                                    <?php else : ?>
                                                        <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                        <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                        <td class=""text-center""><?php echo $targetDanRealisasi['target']['paguIndikatif'] ?? ''; ?></td>
                                                    <?php endif; ?>

                                                    <?php $l++; ?>
                                                <?php endforeach; ?>

                                                <td class=""text-center v-middle""></td>
                                                <td class=""text-center v-middle""></td>
                                                <td class=""text-center v-middle""></td>

                                                <td class=""text-center v-middle""></td>
                                                <td class=""text-center v-middle""></td>

                                                <td></td>
                                                <td></td>
                                            </tr>
                                        <?php endfor; ?>

                                        <?php $p = 0; ?>
                                        <?php foreach ($sasaran['program'] as $program) : ?>
                                            <tr>
                                                <td rowspan=""<?php echo count($program['indikator']); ?>""><?php echo $i + 1; ?>
                                                    .<?php echo $s + 1; ?>.<?php echo $p + 1; ?></td>
                                                <td rowspan=""<?php echo count($program['indikator']); ?>"">
                                                    <b>Program</b>: <?php echo $program['nama']; ?>
                                                </td>
                                                <td><?php echo $program['indikator'][0]['nama']; ?></td>

                                                <td class=""text-center""><?php echo $program['indikator'][0]['targetAkhirPeriode']['kinerja']; ?></td>
                                                <td class=""text-center""><?php echo $program['indikator'][0]['targetAkhirPeriode']['satuan']; ?></td>
                                                <td class=""text-center""><?php echo formatRupiah($program['paguIndikatif']); ?></td>

                                                <td class=""text-center""></td>
                                                <td class=""text-center""></td>
                                                <td class=""text-center""></td>

                                                <?php $q = 0; ?>
                                                <?php foreach ($program['indikator'][0]['targetDanRealisasi'] as $targetDanRealisasi) : ?>
                                                    <?php if ($q != count($program['indikator'][0]['targetDanRealisasi']) - 1) : ?>
                                                        <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                        <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                        <td class=""text-center""><?php echo formatRupiah($program['paguIndikatif']) ?? ''; ?></td>

                                                        <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['kinerja'] ?? ''; ?></td>
                                                        <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['rp'] ?? ''; ?></td>

                                                        <td class=""text-center""></td>
                                                        <td class=""text-center""></td>
                                                    <?php else : ?>
                                                        <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                        <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                        <td class=""text-center""><?php echo formatRupiah($program['paguIndikatif']) ?? ''; ?></td>
                                                    <?php endif; ?>

                                                    <?php $q++; ?>
                                                <?php endforeach; ?>

                                                <td class=""text-center v-middle""></td>
                                                <td class=""text-center v-middle""></td>
                                                <td class=""text-center v-middle""></td>

                                                <td class=""text-center v-middle""></td>
                                                <td class=""text-center v-middle""></td>

                                                <td></td>
                                                <td></td>
                                            </tr>

                                            <?php for (
                                                $q = 1;
                                                $q < count($program['indikator']);
                                                $q++
                                            ) : ?>
                                                <tr>
                                                    <td>
                                                        <?php echo $program['indikator'][$q]['nama']; ?>
                                                    </td>

                                                    <td class=""text-center""><?php echo $program['indikator'][$q]['targetAkhirPeriode']['kinerja']; ?></td>
                                                    <td class=""text-center""><?php echo $program['indikator'][$q]['targetAkhirPeriode']['satuan']; ?></td>
                                                    <td class=""text-center""><?php echo $program['paguIndikatif']; ?></td>

                                                    <td class=""text-center""></td>
                                                    <td class=""text-center""></td>
                                                    <td class=""text-center""></td>

                                                    <?php $r = 0; ?>
                                                    <?php foreach ($program['indikator'][$q]['targetDanRealisasi'] as $targetDanRealisasi) : ?>
                                                        <?php if ($r != count($program['indikator'][$q]['targetDanRealisasi']) - 1) : ?>
                                                            <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                            <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                            <td class=""text-center""><?php echo $program['paguIndikatif'] ?? ''; ?></td>

                                                            <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['kinerja'] ?? ''; ?></td>
                                                            <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['rp'] ?? ''; ?></td>

                                                            <td class=""text-center""></td>
                                                            <td class=""text-center""></td>
                                                        <?php else : ?>
                                                            <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                            <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                            <td class=""text-center""><?php echo $targetDanRealisasi['target']['paguIndikatif'] ?? ''; ?></td>
                                                        <?php endif; ?>

                                                        <?php $r++; ?>
                                                    <?php endforeach; ?>

                                                    <td class=""text-center v-middle""></td>
                                                    <td class=""text-center v-middle""></td>
                                                    <td class=""text-center v-middle""></td>

                                                    <td class=""text-center v-middle""></td>
                                                    <td class=""text-center v-middle""></td>

                                                    <td></td>
                                                    <td></td>
                                                <?php endfor; ?>

                                                <?php $kg = 0; ?>
                                                <?php foreach ($program['kegiatan'] as $kegiatan) : ?>
                                                <tr>
                                                    <td rowspan=""<?php echo count($kegiatan['indikator']); ?>""><?php echo $i + 1; ?>
                                                        .<?php echo $s + 1; ?>.<?php echo $p + 1; ?>.<?php echo $kg + 1; ?></td>
                                                    <td rowspan=""<?php echo count($kegiatan['indikator']); ?>"">
                                                        <b>Kegiatan</b>: <?php echo $kegiatan['nama']; ?>
                                                    </td>
                                                    <td><?php echo $kegiatan['indikator'][0]['nama']; ?></td>

                                                    <td class=""text-center""><?php echo $kegiatan['indikator'][0]['targetAkhirPeriode']['kinerja']; ?></td>
                                                    <td class=""text-center""><?php echo $kegiatan['indikator'][0]['targetAkhirPeriode']['satuan']; ?></td>
                                                    <td class=""text-center""><?php echo formatRupiah($kegiatan['paguIndikatif']); ?></td>

                                                    <td class=""text-center""></td>
                                                    <td class=""text-center""></td>
                                                    <td class=""text-center""></td>

                                                    <?php $r = 0; ?>
                                                    <?php foreach ($kegiatan['indikator'][0]['targetDanRealisasi'] as $targetDanRealisasi) : ?>
                                                        <?php if ($r != count($kegiatan['indikator'][0]['targetDanRealisasi']) - 1) : ?>
                                                            <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                            <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                            <td class=""text-center""><?php echo formatRupiah($kegiatan['paguIndikatif']) ?? ''; ?></td>

                                                            <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['kinerja'] ?? ''; ?></td>
                                                            <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['rp'] ?? ''; ?></td>

                                                            <td class=""text-center""></td>
                                                            <td class=""text-center""></td>
                                                        <?php else : ?>
                                                            <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                            <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                            <td class=""text-center""><?php echo formatRupiah($kegiatan['paguIndikatif']) ?? ''; ?></td>
                                                        <?php endif; ?>

                                                        <?php $r++; ?>
                                                    <?php endforeach; ?>

                                                    <td class=""text-center v-middle""></td>
                                                    <td class=""text-center v-middle""></td>
                                                    <td class=""text-center v-middle""></td>

                                                    <td class=""text-center v-middle""></td>
                                                    <td class=""text-center v-middle""></td>

                                                    <td></td>
                                                    <td></td>
                                                </tr>

                                                <?php for ($kg = 1; $kg < count($kegiatan['indikator']); $kg++) : ?>
                                                    <tr>
                                                        <td>
                                                            <?php echo $kegiatan['indikator'][$kg]['nama']; ?>
                                                        </td>

                                                        <td class=""text-center""><?php echo $kegiatan['indikator'][$kg]['targetAkhirPeriode']['kinerja']; ?></td>
                                                        <td class=""text-center""><?php echo $kegiatan['indikator'][$kg]['targetAkhirPeriode']['satuan']; ?></td>
                                                        <td class=""text-center""><?php echo formatRupiah($kegiatan['paguIndikatif']); ?></td>

                                                        <td class=""text-center""></td>
                                                        <td class=""text-center""></td>
                                                        <td class=""text-center""></td>

                                                        <?php $r = 0; ?>
                                                        <?php foreach ($kegiatan['indikator'][$kg]['targetDanRealisasi'] as $targetDanRealisasi) : ?>
                                                            <?php if ($r != count($kegiatan['indikator'][$kg]['targetDanRealisasi']) - 1) : ?>
                                                                <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                                <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                                <td class=""text-center""><?php echo formatRupiah($kegiatan['paguIndikatif']) ?? ''; ?></td>

                                                                <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['kinerja'] ?? ''; ?></td>
                                                                <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['rp'] ?? ''; ?></td>

                                                                <td class=""text-center""></td>
                                                                <td class=""text-center""></td>
                                                            <?php else : ?>
                                                                <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                                <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                                <td class=""text-center""><?php echo formatRupiah($kegiatan['paguIndikatif']) ?? ''; ?></td>
                                                            <?php endif; ?>

                                                            <?php $r++; ?>
                                                        <?php endforeach; ?>

                                                        <td class=""text-center v-middle""></td>
                                                        <td class=""text-center v-middle""></td>
                                                        <td class=""text-center v-middle""></td>

                                                        <td class=""text-center v-middle""></td>
                                                        <td class=""text-center v-middle""></td>

                                                        <td></td>
                                                        <td></td>
                                                    </tr>
                                                <?php endfor; ?>

                                                <?php $sk = 0; ?>
                                                <?php foreach ($kegiatan['subKegiatan'] as $subKegiatan) : ?>
                                                    <tr>
                                                        <td rowspan=""<?php echo count($subKegiatan['indikator']); ?>""><?php echo $i + 1; ?>.<?php echo $s + 1; ?>.<?php echo $p + 1; ?>.<?php echo $kg + 1; ?>.<?php echo $sk + 1; ?></td>
                                                        <td rowspan=""<?php echo count($subKegiatan['indikator']); ?>"">
                                                            <b>Sub Kegiatan</b>: <?php echo $subKegiatan['nama']; ?>
                                                        </td>
                                                        <td><?php echo $subKegiatan['indikator'][0]['nama']; ?></td>

                                                        <td class=""text-center""><?php echo $subKegiatan['indikator'][0]['targetAkhirPeriode']['kinerja']; ?></td>
                                                        <td class=""text-center""><?php echo $subKegiatan['indikator'][0]['targetAkhirPeriode']['satuan']; ?></td>
                                                        <td class=""text-center""><?php echo formatRupiah($subKegiatan['paguIndikatif']); ?></td>

                                                        <td class=""text-center""></td>
                                                        <td class=""text-center""></td>
                                                        <td class=""text-center""></td>

                                                        <?php $r = 0; ?>
                                                        <?php foreach ($subKegiatan['indikator'][0]['targetDanRealisasi'] as $targetDanRealisasi) : ?>
                                                            <?php if ($r != count($subKegiatan['indikator'][0]['targetDanRealisasi']) - 1) : ?>
                                                                <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                                <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                                <td class=""text-center""><?php echo formatRupiah($subKegiatan['paguIndikatif']) ?? ''; ?></td>

                                                                <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['kinerja'] ?? ''; ?></td>
                                                                <td class=""text-center""><?php echo formatRupiah($targetDanRealisasi['realisasi']['rp']) ?? ''; ?></td>

                                                                <td class=""text-center""></td>
                                                                <td class=""text-center""><?php echo number_format(percentage($targetDanRealisasi['realisasi']['rp'], $subKegiatan['paguIndikatif']), 2, ','); ?>%</td>
                                                            <?php else : ?>
                                                                <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                                <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                                <td class=""text-center""><?php echo formatRupiah($subKegiatan['paguIndikatif']) ?? ''; ?></td>
                                                            <?php endif; ?>

                                                            <?php $r++; ?>
                                                        <?php endforeach; ?>

                                                        <td class=""text-center v-middle""></td>
                                                        <td class=""text-center v-middle""></td>
                                                        <td class=""text-center v-middle""></td>

                                                        <td class=""text-center v-middle""></td>
                                                        <td class=""text-center v-middle""></td>

                                                        <td></td>
                                                        <td></td>
                                                    </tr>

                                                    <?php for (
                                                            $skI = 1;
                                                            $skI < count($subKegiatan['indikator']);
                                                            $skI++
                                                        ) : ?>
                                                        <tr>
                                                            <td>
                                                                <?php echo $subKegiatan['indikator'][$skI]['nama']; ?>
                                                            </td>

                                                            <td class=""text-center""><?php echo $subKegiatan['indikator'][$skI]['targetAkhirPeriode']['kinerja']; ?></td>
                                                            <td class=""text-center""><?php echo $subKegiatan['indikator'][$skI]['targetAkhirPeriode']['satuan']; ?></td>
                                                            <td class=""text-center""><?php echo formatRupiah($subKegiatan['paguIndikatif']); ?></td>

                                                            <td class=""text-center""></td>
                                                            <td class=""text-center""></td>
                                                            <td class=""text-center""></td>

                                                            <?php $r = 0; ?>
                                                            <?php foreach ($subKegiatan['indikator'][$skI]['targetDanRealisasi'] as $targetDanRealisasi) : ?>
                                                                <?php if ($r != count($subKegiatan['indikator'][$skI]['targetDanRealisasi']) - 1) : ?>
                                                                    <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                                    <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                                    <td class=""text-center""><?php echo formatRupiah($subKegiatan['paguIndikatif']) ?? ''; ?></td>

                                                                    <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['kinerja'] ?? ''; ?></td>
                                                                    <td class=""text-center""><?php echo $targetDanRealisasi['realisasi']['rp'] ?? ''; ?></td>

                                                                    <td class=""text-center""></td>
                                                                    <td class=""text-center""></td>
                                                                <?php else : ?>
                                                                    <td class=""text-center""><?php echo $targetDanRealisasi['target']['kinerja'] ?? ''; ?></td>
                                                                    <td class=""text-center""><?php echo $targetDanRealisasi['target']['satuan'] ?? ''; ?></td>
                                                                    <td class=""text-center""><?php echo formatRupiah($subKegiatan['paguIndikatif']) ?? ''; ?></td>
                                                                <?php endif; ?>

                                                                <?php $r++; ?>
                                                            <?php endforeach; ?>

                                                            <td class=""text-center v-middle""></td>
                                                            <td class=""text-center v-middle""></td>
                                                            <td class=""text-center v-middle""></td>

                                                            <td class=""text-center v-middle""></td>
                                                            <td class=""text-center v-middle""></td>

                                                            <td></td>
                                                            <td></td>
                                                        <?php endfor; ?>

                                                        <?php $sk++; ?>
                                                    <?php endforeach; ?>

                                                    <?php $kg++; ?>
                                                <?php endforeach; ?>

                                                <?php $p++; ?>
                                            <?php endforeach; ?>

                                            <?php $s++; ?>
                                        <?php endforeach; ?>

                                        <?php $i++; ?>
                                    <?php endforeach; ?>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.modal Detail -->
<?php }) ?>

<?php $script = insertHtml(function () { ?>
    <script src=""https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js""></script>
    <script src=""<?= base_url ?>public/service/admin/evaluasi/evaluasi-rkpd.js""></script>
<?php }); ?>

<?php include ""app/views/dashboard.php""; ?>"
P248UzJp,rkpd.php,martinms,PHP,Sunday 19th of May 2024 09:24:22 AM CDT,"<?php
$breadcumb = [
    ""head"" => ""Evaluasi RKPD"",
    ""menu"" => ""Evaluasi"",
    ""subMenu"" => ""RKPD""
];
ob_start(); ?>
<link href=""https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css"" rel=""stylesheet""/>
<style>
    .v-middle {
        vertical-align: middle;
    }
</style>
<?php
$link = ob_get_clean();
$body = insertHtml(function ($data) { ?>
    <div class=""card mb-5"">
        <form action=""#"" method=""post"" id=""searchForm"">
            <div class=""card-body"">
                <div class=""row"">
                    <label for=""filter-label"" class=""form-label fw-semibold col-2 mt-2 text-start"">
                        Filter Evaluasi Renja :
                    </label>

                    <div class=""col-sm-7"">
                        <select class=""form-select"" id=""opd"" aria-label=""Default select example"">
                            <option value=""placeholder"" disabled selected>Pilih OPD</option>
                            <?php foreach ($data['semuaOpd'] as $opd) { ?>
                                <option value=""<?= $opd['opdId'] ?>""><?= $opd['namaOpd'] ?></option>
                            <?php } ?>
                        </select>
                    </div>

                    <div class=""col-sm-3"">
                        <button class=""btn btn-primary"" id=""submit-btn"" type=""submit"">
                            <i class=""ti ti-search""></i>
                            Cari
                        </button>
                    </div>

                </div>
            </div>
        </form>
    </div>
<?php }, $data); ?>

<?php $script = insertHtml(function () { ?>
    <script src=""https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js""></script>
    <script src=""<?= base_url ?>public/service/admin/evaluasi/rkpd.js""></script>
<?php }); ?>

<?php include ""app/views/dashboard.php""; ?>
"
AQ8m6VZL,menu.php,martinms,PHP,Sunday 19th of May 2024 09:20:35 AM CDT,"<!-- ---------------------------------- -->
<!-- Menu -->
<!-- ---------------------------------- -->
<?php if (session('roleId') === ""1"") : ?>
    <li class=""nav-small-cap"">
        <i class=""ti ti-dots nav-small-cap-icon fs-4""></i>
        <span class=""hide-menu"">Home</span>
    </li>
    <!-- ---------------------------------- -->
    <!-- Dashboard -->
    <!-- ---------------------------------- -->
    <li class=""sidebar-item active"">
        <a class=""sidebar-link"" href=""<?= base_url ?>admin"" aria-expanded=""false"">
            <span>
                <i class=""ti ti-home""></i>
            </span>
            <span class=""hide-menu"">Dashboard</span>
        </a>
    </li>
    <li class=""nav-small-cap"">
        <i class=""ti ti-dots nav-small-cap-icon fs-4""></i>
        <span class=""hide-menu"">Persiapan</span>
    </li>
    <!-- ---------------------------------- -->
    <li class=""sidebar-item"">
        <a class=""sidebar-link"" href=""<?= base_url ?>admin_tahun"" aria-expanded=""false"">
            <span>
                <i class=""ti ti-calendar""></i>
            </span>
            <span class=""hide-menu"">Manajemen Tahun</span>
        </a>
    </li>
    <li class=""sidebar-item"">
        <a class=""sidebar-link"" href=""<?= base_url ?>admin_periode"" aria-expanded=""false"">
            <span>
                <i class=""ti ti-calendar-time""></i>
            </span>
            <span class=""hide-menu"">Manajemen Jadwal</span>
        </a>
    </li>
<?php endif; ?>
<li class=""nav-small-cap"">
    <i class=""ti ti-dots nav-small-cap-icon fs-4""></i>
    <span class=""hide-menu"">Perencanaan</span>
</li>
<?php if (session(""odpId"") === ""122"") : ?>
    <li class=""sidebar-item"">
        <a class=""sidebar-link"" href=""<?= base_url ?>admin_urusan"" aria-expanded=""false"">
            <span>
                <i class=""ti ti-ad-2""></i>
            </span>
            <span class=""hide-menu"">Manajemen Urusan</span>
        </a>
    </li>
<?php endif; ?>
<!-- ---------------------------------- -->
<li class=""sidebar-item"">
    <a class=""sidebar-link"" href=""<?= base_url ?>admin_instrumen"" aria-expanded=""false"">
        <span>
            <i class=""ti ti-file-plus""></i>
        </span>
        <span class=""hide-menu"">Manajemen Perencanaan</span>
    </a>
</li>
<li class=""sidebar-item"">
    <a class=""sidebar-link"" href=""<?= base_url ?>admin_triwulan/uraian"" aria-expanded=""false"">
        <span>
            <i class=""ti ti-file-plus""></i>
        </span>
        <span class=""hide-menu"">Target Triwulan</span>
    </a>
</li>
<li class=""sidebar-item"">
    <a class=""sidebar-link"" href=""<?= base_url ?>admin_triwulan"" aria-expanded=""false"">
        <span>
            <i class=""ti ti-file-plus""></i>
        </span>
        <span class=""hide-menu"">Rekapitulasi Target TW</span>
    </a>
</li>
<?php if (session('roleId') === ""1"") : ?>
    <!-- ---------------------------------- -->
    <!-- Menu -->
    <!-- ---------------------------------- -->
    <li class=""nav-small-cap"">
        <i class=""ti ti-dots nav-small-cap-icon fs-4""></i>
        <span class=""hide-menu"">Evaluasi</span>
    </li>
    <!-- ---------------------------------- -->
    <li class=""sidebar-item"">
        <a class=""sidebar-link"" href=""<?= base_url ?>admin_evaluasi/renja"" aria-expanded=""false"">
            <span>
                <i class=""ti ti-ad-2""></i>
            </span>
            <span class=""hide-menu"">Renja</span>
        </a>
    </li>
    <li class=""sidebar-item"">
        <a class=""sidebar-link"" href=""<?= base_url ?>admin_evaluasi/rkpd"" aria-expanded=""false"">
            <span>
                <i class=""ti ti-ad-2""></i>
            </span>
            <span class=""hide-menu"">RKPD</span>
        </a>
    </li>

    <!-- ---------------------------------- -->
    <!-- Menu -->
    <!-- ---------------------------------- -->
    <li class=""nav-small-cap"">
        <i class=""ti ti-dots nav-small-cap-icon fs-4""></i>
        <span class=""hide-menu"">User</span>
    </li>
    <!-- ---------------------------------- -->
    <li class=""sidebar-item"">
        <a class=""sidebar-link"" href=""<?= base_url ?>admin_user"" aria-expanded=""false"">
            <span>
                <i class=""ti ti-users""></i>
            </span>
            <span class=""hide-menu"">Manajemen User</span>
        </a>
    </li>
    <li class=""sidebar-item"">
        <a class=""sidebar-link"" href=""<?= base_url ?>admin_opd"" aria-expanded=""false"">
            <span>
                <i class=""ti ti-building-factory-2""></i>
            </span>
            <span class=""hide-menu"">Manajemen OPD</span>
        </a>
    </li>
<?php endif; ?>"
xFPeafke,rkpd.js,martinms,PHP,Sunday 19th of May 2024 09:12:14 AM CDT,"$('#opd').select2();

const searchForm = document.querySelector('#searchForm');
const submitBtn = document.querySelector('#submit-btn');
searchForm.addEventListener('submit', (e) => {
    e.preventDefault();

    submitBtn.innerHTML = '<i class=""fas fa-spinner fa-spin""></i> Memuat...';
    const opd = $('#opd').val();

    setTimeout(() => {
        window.location=`${base_url}admin_evaluasi/rkpd/evaluasi/${opd}`;
    }, 1000);
});"
062VSyJn,renja.js,martinms,PHP,Sunday 19th of May 2024 09:11:48 AM CDT,"window.onload = function () {
    opdSelect2('#opd');
    selectTahun();
}

function selectTahun() {
    fetch(`${base_url}admin_tahun/list`)
        .then(response => response.json())
        .then(data => {
            if (data.success == true) {
                var tahun = data.data;
                var tahunList = [
                    {
                        id: tahun.tahunSatu,
                        text: tahun.tahunSatu
                    },
                    {
                        id: tahun.tahunDua,
                        text: tahun.tahunDua
                    },
                    {
                        id: tahun.tahunTiga,
                        text: tahun.tahunTiga
                    },
                    {
                        id: tahun.tahunEmpat,
                        text: tahun.tahunEmpat
                    },
                    {
                        id: tahun.tahunLima,
                        text: tahun.tahunLima
                    }
                ];
                $('#tahun').select2({
                    data: tahunList
                });
            } else {
                cekLogin(data.data);
            }
        })
}

async function cari(id) {
    var opd = document.getElementById('opd');
    var opdSelected = opd.options[opd.selectedIndex];
    var tahun = document.getElementById('tahun');
    var tahunSelected = tahun.options[tahun.selectedIndex];

    if (opdSelected.value === 'placeholder') {
        opd.classList.add('is-invalid');
        afterSpiner(id, 'Cari', 'search');
        toastr.error('OPD belum dipilih', ""Gagal"");
        return;
    }
    if (tahunSelected.value === 'placeholder') {
        tahun.classList.add('is-invalid');
        afterSpiner(id, 'Cari', 'search');
        toastr.error('Tahun belum dipilih', ""Gagal"");
        return;
    }
    spiner(id, 'Mencari'),
        await renjaList(tahun.value, opd.value),
        afterSpiner(id, 'Cari', 'search')
}

const renjaList = async (tahun, opd) => {
    var table = document.getElementById('table-content');
    try {
        const res = await fetch(`${base_url}admin_evaluasi/renja/data/${tahun}/${opd}`);
        if (!res.ok) {
            throw new Error(""Gagal mengambil data"");
        }
        const data = await res.json();
        if (data.success === false) {
            belumAda(data.message);
            table.className = """";
            table.classList.add('card', 'd-none');
        } else {
            table.className = """";
            table.classList.add('card');
            dataAda(data.data);
        }

    } catch (error) {
        toastr.error(error, ""Gagal"");
    }
    // createTable(tahun, opd)
}

const belumAda = () => {
    var opd = document.getElementById('opd');
    var opdSelected = opd.options[opd.selectedIndex];
    var tahun = document.getElementById('tahun');
    var tahunSelected = tahun.options[tahun.selectedIndex];

    const content = document.getElementById('data-content');
    content.innerHTML = """";
    const div = document.createElement('div');
    div.classList.add('col-12', 'd-flex', 'justify-content-center', 'py-5', 'align-items-center');

    const span = document.createElement('span')
    span.className = ""text-center fw-semibold text-danger"";
    span.innerHTML = `${opdSelected.textContent} Belum melakukan input capaian untuk tahun ${tahunSelected.textContent} atau perencanaan belum dibuat`;
    div.appendChild(span);

    content.appendChild(div);
}

const dataAda = (data) => {
    var opd = document.getElementById('opd');
    var opdSelected = opd.options[opd.selectedIndex];
    var tahun = document.getElementById('tahun');
    var tahunSelected = tahun.options[tahun.selectedIndex];

    const content = document.getElementById('data-content');
    content.innerHTML = """";
    const div = document.createElement('div');
    div.classList.add('col-12', 'd-flex', 'justify-content-center', 'py-2', 'align-items-center');

    const span = document.createElement('span')
    span.className = ""text-center fw-semibold fs-4"";
    span.innerHTML = `Tabel Hasil Evaluasi Renja ${opdSelected.textContent} tahun ${tahunSelected.textContent} <br/> <span class=""text-warning fs-2"">""untuk melihat secara detail silahkan klik tombol Detail""</span>`;
    div.appendChild(span);
    content.appendChild(div);

    document.getElementById('tahun-target').innerHTML = tahunSelected.textContent;
    document.getElementById('tahun-target-fs').innerHTML = tahunSelected.textContent;
    document.getElementById('tahun-capaian-fs').innerHTML = tahunSelected.textContent;

    document.getElementById('title-fs').innerHTML = `${opdSelected.textContent} tahun ${tahunSelected.textContent}`;

    document.getElementById('btn-download-laporan').href = `${base_url}admin_evaluasi/renja_download/${tahun.value}/${opd.value}`

    createResult(data);
    detailTable(data);
}


function createResult(data) {
    data.forEach(function (tujuan, T) {
        if (T == 0) {
            document.getElementById('table-wrapper').innerHTML = """";
            // document.getElementById('detail-wrapper').innerHTML = """";
        }
        var namaT = `<span class=""fw-bolder"">Tujuan: </span>${enterKata(tujuan.namaTujuan, 3)}`
        parentTable(T + 1, namaT, tujuan.indikatorData.length + 1);

        // Indikator .............
        tujuan.indikatorData.forEach(indikator => {
            resultTable(indikator, tujuan.targetPaguIndikatif);
        });

        // Sararan ............
        tujuan.dataSasaran.forEach(function (sasaran, S) {
            var namaS = `<span class=""fw-bolder"">Sasaran: </span>${enterKata(sasaran.namaSasaran, 3)}`
            var kodeS = `${T + 1}.${S + 1}`;
            var lengthS = sasaran.indikatorData.length + 1;
            parentTable(kodeS, namaS, lengthS);

            // IndikatorSasran ................
            sasaran.indikatorData.forEach(indikatorS => {
                resultTable(indikatorS, sasaran.targetPaguIndikatif);
            });

            // Program .............
            sasaran.dataProgram.forEach(function (program, P) {
                var namaP = `<span class=""fw-bolder"">Program: </span>${enterKata(program.namaProgram, 3)}`
                var kodeP = `${kodeS}.${P + 1}`;
                var lengthP = program.indikatorData.length + 1;
                parentTable(kodeP, namaP, lengthP);

                // Indikator Program ...........................
                program.indikatorData.forEach(indikatorP => {
                    resultTable(indikatorP, program.targetPaguIndikatif)
                });

                // Kegiatan ........
                program.dataKegiatan.forEach(function (kegiatan, K) {
                    var namaK = `<span class=""fw-bolder"">Kegiatan: </span>${enterKata(kegiatan.namaKegiatan, 3)}`
                    var kodeK = `${kodeP}.${K + 1}`;
                    var lengthK = kegiatan.indikatorData.length + 1;
                    parentTable(kodeK, namaK, lengthK);

                    // Indikator kegiatan ...........
                    kegiatan.indikatorData.forEach(indikatorK => {
                        resultTable(indikatorK, kegiatan.targetPaguIndikatif);
                    })

                    // Sub Kegiatan .............
                    kegiatan.dataSubKegiatan.forEach(function (subKegiatan, Sk) {
                        var namaSk = `<span class=""fw-bolder"">Sub Kegiatan: </span>${enterKata(subKegiatan.namaSubKegiatan, 3)}`
                        var kodeSk = `${kodeK}.${Sk + 1}`;
                        var lengthSk = subKegiatan.indikatorData.length + 1;
                        parentTable(kodeSk, namaSk, lengthSk);
                        // tableFS(subKegiatan, kodeSk);

                        // Indikator Sub Kegiatan ...........
                        subKegiatan.indikatorData.forEach(indikatorSk => {
                            var tw = subKegiatan.targetDanCapaian;
                            resultTable(indikatorSk, subKegiatan.targetPaguIndikatif, tw.TotalKinerja, tw.TotalRealisasi);
                        })
                    })
                });
            });
        });
    });
}

function parentTable(kodeData, namaData, length) {
    var table = document.getElementById('table-wrapper');
    // var detail = document.getElementById('detail-wrapper');

    var tableRow = document.createElement('tr');

    var kode = document.createElement('td');
    kode.setAttribute('rowspan', length);
    kode.className = ""align-top text-start"";
    kode.textContent = kodeData;
    tableRow.appendChild(kode);

    var nama = document.createElement('td');
    nama.setAttribute('rowspan', length);
    nama.className = ""align-top text-start"";
    nama.innerHTML = namaData;
    tableRow.appendChild(nama);

    table.appendChild(tableRow.cloneNode(true));
    // detail.appendChild(tableRow);

}

function resultTable(indikator, pagu, kinerja = null, rp = null) {
    var table = document.getElementById('table-wrapper');
    var rowIndikator = document.createElement('tr');

    var indikatorCell = document.createElement('td');
    indikatorCell.className = ""align-top text-start"";
    indikatorCell.innerHTML = enterKata(indikator.NamaIndikator, 3);
    rowIndikator.appendChild(indikatorCell);

    var targetCell = document.createElement('td');
    targetCell.className = ""align-middle"";
    targetCell.innerHTML = indikator.target;
    rowIndikator.appendChild(targetCell);

    var satuanCell = document.createElement('td');
    satuanCell.className = ""align-middle"";
    satuanCell.innerHTML = indikator.satuan;
    rowIndikator.appendChild(satuanCell);

    var paguCell = document.createElement('td');
    paguCell.className = ""align-middle"";
    paguCell.innerHTML = pagu == null ? '' : rpNone(pagu);
    rowIndikator.appendChild(paguCell);

    var kinerjaCell = document.createElement('td');
    kinerjaCell.className = ""align-middle"";
    kinerjaCell.innerHTML = kinerja == null ? '' : kinerja;
    rowIndikator.appendChild(kinerjaCell);

    var rpCell = document.createElement('td');
    rpCell.className = ""align-middle"";
    rpCell.innerHTML = rp == null ? '' : rp;
    rowIndikator.appendChild(rpCell);

    var realisasiCell = document.createElement('td');
    realisasiCell.id = `real${indikator.idindikator}`;
    realisasiCell.className = ""align-middle"";
    realisasiCell.innerHTML = indikator.realisasiOutcome;
    rowIndikator.appendChild(realisasiCell);

    var persentaseCell = document.createElement('td');
    persentaseCell.className = ""align-middle"";
    persentaseCell.innerHTML = `${indikator.persenRealisasiOutcome}%`;
    rowIndikator.appendChild(persentaseCell);

    table.appendChild(rowIndikator);
}

function detailTable(data) {
    data.forEach(function (tujuan, T) {
        if (T == 0) {
            document.getElementById('detail-wrapper').innerHTML = """";
            // document.getElementById('detail-wrapper').innerHTML = """";
        }
        var namaT = `<span class=""fw-bolder"">Tujuan: </span>${enterKata(tujuan.namaTujuan, 3)}`
        detailParent(T + 1, namaT, tujuan.indikatorData.length + 1);

        // Indikator .............
        tujuan.indikatorData.forEach(indikator => {
            indikatorDetail(tujuan, indikator);
        });

        // Sararan ............
        tujuan.dataSasaran.forEach(function (sasaran, S) {
            var namaS = `<span class=""fw-bolder"">Sasaran: </span>${enterKata(sasaran.namaSasaran, 3)}`
            var kodeS = `${T + 1}.${S + 1}`;
            var lengthS = sasaran.indikatorData.length + 1;
            detailParent(kodeS, namaS, lengthS);

            // IndikatorSasran ................
            sasaran.indikatorData.forEach(indikatorS => {
                indikatorDetail(sasaran, indikatorS);
            });

            // Program .............
            sasaran.dataProgram.forEach(function (program, P) {
                var namaP = `<span class=""fw-bolder"">Program: </span>${enterKata(program.namaProgram, 3)}`
                var kodeP = `${kodeS}.${P + 1}`;
                var lengthP = program.indikatorData.length + 1;
                detailParent(kodeP, namaP, lengthP);

                // Indikator Program ...........................
                program.indikatorData.forEach(indikatorP => {
                    indikatorDetail(program, indikatorP)
                });

                // Kegiatan ........
                program.dataKegiatan.forEach(function (kegiatan, K) {
                    var namaK = `<span class=""fw-bolder"">Kegiatan: </span>${enterKata(kegiatan.namaKegiatan, 3)}`
                    var kodeK = `${kodeP}.${K + 1}`;
                    var lengthK = kegiatan.indikatorData.length + 1;
                    detailParent(kodeK, namaK, lengthK);

                    // Indikator kegiatan ...........
                    kegiatan.indikatorData.forEach(indikatorK => {
                        indikatorDetail(kegiatan, indikatorK);
                    })

                    // Sub Kegiatan .............
                    kegiatan.dataSubKegiatan.forEach(function (subKegiatan, Sk) {
                        var namaSk = `<span class=""fw-bolder"">Sub Kegiatan: </span>${enterKata(subKegiatan.namaSubKegiatan, 3)}`
                        var kodeSk = `${kodeK}.${Sk + 1}`;
                        var lengthSk = subKegiatan.indikatorData.length + 1;
                        detailParent(kodeSk, namaSk, lengthSk);
                        // tableFS(subKegiatan, kodeSk);

                        // Indikator Sub Kegiatan ...........
                        subKegiatan.indikatorData.forEach(indikatorSk => {
                            var tw = subKegiatan.targetDanCapaian;
                            indikatorDetail(subKegiatan, indikatorSk, tw);
                        })
                    })
                });
            });
        });
    });
}

function detailParent(kodeData, namaData, length) {
    var table = document.getElementById('detail-wrapper');
    // var detail = document.getElementById('detail-wrapper');

    var tableRow = document.createElement('tr');

    var kode = document.createElement('td');
    kode.setAttribute('rowspan', length);
    kode.className = ""align-top text-start"";
    kode.textContent = kodeData;
    tableRow.appendChild(kode);

    var nama = document.createElement('td');
    nama.setAttribute('rowspan', length);
    nama.className = ""align-top text-start"";
    nama.innerHTML = namaData;
    tableRow.appendChild(nama);

    table.appendChild(tableRow.cloneNode(true));
    // detail.appendChild(tableRow);

}

function indikatorDetail(parent, indikator, triwulan) {
    var table = document.getElementById('detail-wrapper');
    var rowIndikator = document.createElement('tr');

    var indikatorCell = document.createElement('td');
    indikatorCell.className = ""align-top text-start"";
    indikatorCell.innerHTML = enterKata(indikator.NamaIndikator, 3);
    rowIndikator.appendChild(indikatorCell);

    var targetCell = document.createElement('td');
    targetCell.className = ""align-middle"";
    targetCell.innerHTML = indikator.target;
    rowIndikator.appendChild(targetCell);

    var satuanCell = document.createElement('td');
    satuanCell.className = ""align-middle"";
    satuanCell.innerHTML = indikator.satuan;
    rowIndikator.appendChild(satuanCell);

    var paguCell = document.createElement('td');
    paguCell.className = ""align-middle"";
    paguCell.innerHTML = parent.targetPaguIndikatif == null ? '' : rpNone(parent.targetPaguIndikatif);
    rowIndikator.appendChild(paguCell);

    var bobotCell = document.createElement('td');
    bobotCell.className = ""align-middle"";
    bobotCell.innerHTML = (typeof triwulan !== 'undefined') ? 100 : '';
    rowIndikator.appendChild(bobotCell);

    if (typeof triwulan !== 'undefined') {
        let totalCapaianTriwulan = 0;

        for (let i = 1; i <= 4; i++) {
            triwulan.dataTriwulan[0].forEach(element => {
                if (element.triwulan === i) {
                    var targetTriwulanCell = document.createElement('td');
                    targetTriwulanCell.className = ""align-middle"";
                    targetTriwulanCell.innerHTML = element.target;
                    rowIndikator.appendChild(targetTriwulanCell);

                    var satuantargetTriwulanCell = document.createElement('td');
                    satuantargetTriwulanCell.className = ""align-middle"";
                    satuantargetTriwulanCell.innerHTML = indikator.satuan;
                    rowIndikator.appendChild(satuantargetTriwulanCell);

                    var realisasiCell = document.createElement('td');
                    realisasiCell.className = ""align-middle"";
                    realisasiCell.innerHTML = element.realisasiKinerja;
                    rowIndikator.appendChild(realisasiCell);

                    var satuanrealisasiTriwulanCell = document.createElement('td');
                    satuanrealisasiTriwulanCell.className = ""align-middle"";
                    satuanrealisasiTriwulanCell.innerHTML = indikator.satuan;
                    rowIndikator.appendChild(satuanrealisasiTriwulanCell);

                    var anggaranTriwulanCell = document.createElement('td');
                    anggaranTriwulanCell.className = ""align-middle"";
                    anggaranTriwulanCell.innerHTML = element.rp;
                    rowIndikator.appendChild(anggaranTriwulanCell)

                    var persenanggaranTriwulanCell = document.createElement('td');
                    persenanggaranTriwulanCell.className = ""align-middle"";
                    persenanggaranTriwulanCell.innerHTML = element.persenRealisasi;
                    rowIndikator.appendChild(persenanggaranTriwulanCell)

                    totalCapaianTriwulan += element.rp;
                }
            })
        }
        var capaianTw = document.createElement('td');
        capaianTw.className = 'align-middle'
        capaianTw.innerHTML = triwulan.TotalKinerja;
        rowIndikator.appendChild(capaianTw);

        var satuancapaianTw = document.createElement('td');
        satuancapaianTw.className = 'align-middle'
        satuancapaianTw.innerHTML = indikator.satuan;
        rowIndikator.appendChild(satuancapaianTw);

        var rpCell = document.createElement('td');
        rpCell.className = 'align-middle';
        // rpCell.innerHTML = rpNone(parent.targetPaguIndikatif);
        rpCell.innerHTML = rpNone(totalCapaianTriwulan);
        rowIndikator.appendChild(rpCell);

        var persenrpCell = document.createElement('td');
        persenrpCell.className = 'align-middle';
        persenrpCell.innerHTML = triwulan.TotalRealisasi;
        rowIndikator.appendChild(persenrpCell);

        var satuanpersenrpCell = document.createElement('td');
        satuanpersenrpCell.className = 'align-middle';
        satuanpersenrpCell.innerHTML = '%';
        rowIndikator.appendChild(satuanpersenrpCell);


    } else {
        for (let i = 1; i <= 29; i++) {
            var triwulanCell = document.createElement('td');
            triwulanCell.className = ""align-middle"";
            triwulanCell.innerHTML = '';
            rowIndikator.appendChild(triwulanCell);
        }
    }

    var kinerjaOutcomeCell = document.createElement('td');
    kinerjaOutcomeCell.className = ""align-middle"";
    kinerjaOutcomeCell.innerHTML = indikator.realisasiOutcome;
    rowIndikator.appendChild(kinerjaOutcomeCell);

    var satuanOutcomeCell = document.createElement('td');
    satuanOutcomeCell.className = ""align-middle"";
    satuanOutcomeCell.innerHTML = indikator.satuan;
    rowIndikator.appendChild(satuanOutcomeCell);

    var persentaseCell = document.createElement('td');
    persentaseCell.className = ""align-middle"";
    persentaseCell.innerHTML = `${indikator.persenRealisasiOutcome}%`;
    rowIndikator.appendChild(persentaseCell);

    var pendorongCell = document.createElement('td');
    pendorongCell.className = ""align-middle"";
    pendorongCell.innerHTML = (typeof indikator.faktorPendorong !== 'undefined') ? indikator.faktorPendorong : '';
    rowIndikator.appendChild(pendorongCell);

    var penghambatCell = document.createElement('td');
    penghambatCell.className = ""align-middle"";
    penghambatCell.innerHTML = (typeof indikator.faktorPenghambat !== 'undefined') ? indikator.faktorPenghambat : '';
    rowIndikator.appendChild(penghambatCell);

    var tindakLanjutCell = document.createElement('td');
    tindakLanjutCell.className = ""align-middle"";
    tindakLanjutCell.innerHTML = (typeof indikator.tindakLanjut !== 'undefined') ? indikator.tindakLanjut : '';
    rowIndikator.appendChild(tindakLanjutCell);

    table.appendChild(rowIndikator);
}
"
ea3Vv3rW,evaluasi-rkpd.js,martinms,PHP,Sunday 19th of May 2024 09:11:22 AM CDT,"$('#opd').select2();

setTimeout(() => {
    $('#detail-modal').modal('show');
}, 10);

const searchForm = document.querySelector('#searchForm');
const submitBtn = document.querySelector('#submit-btn');
searchForm.addEventListener('submit', (e) => {
    e.preventDefault();

    submitBtn.innerHTML = '<i class=""fas fa-spinner fa-spin""></i> Memuat...';
    const opd = $('#opd').val();

    setTimeout(() => {
        window.location = `${base_url}admin_evaluasi/rkpd/evaluasi/${opd}`;
    }, 1000);
});

// get ID FROM URL
const url = window.location.href;
const urlSplit = url.split('/');
const id = urlSplit[urlSplit.length - 1];

let btnDownload = document.querySelector('#btn-download-laporan');
btnDownload.href = `${base_url}admin_evaluasi/rkpd/download/${id}`"
PcNYJ7Hw,Helper.php,martinms,PHP,Sunday 19th of May 2024 09:10:24 AM CDT,"<?php

function formatNumber($number, $maxFraction = 2)
{
    if ($number == 0 || $number == null)
        return;

    $formatted = number_format($number, $maxFraction, ',', '.');

    // get fraction part
    $fraction = explode(',', $formatted)[1];

    // if fraction part is 0, remove it
    if ($fraction == '00')
        return number_format($number, 0, ',', '.');

    return $formatted;
}

function formatRupiah($str)
{
    return number_format($str, 0, ',', '.');
}

function percentage($number, $total)
{
    if ($total == 0)
        return 0;

    return ($number / $total) * 100;
}"
VBKXT8hC,Admin_evaluasi.php,martinms,PHP,Sunday 19th of May 2024 09:09:38 AM CDT,"<?php

require_once __DIR__ . '/../helpers/Helper.php';

class Admin_evaluasi extends Controller
{

    private $api;
    private $_renja;
    private $_opd;
    private $_rkpd;

    public function __construct()
    {
        $this->_renja = $this->model('Renja_model');
        $this->_opd = $this->model('Opd_model');
        $this->_rkpd = $this->model('Rkpd_model');

        $this->api = new ApiReference;
        $this->access('admin');
    }

    public function renja($case = null, ...$params)
    {
        switch ($case) {
            case ""data"":
                $response = $this->_renja->faktorList($params[0], $params[1]);
                echo $response;
                break;
            default:
                $data['title'] = ""Evaluasi renja"";
                $this->view('admin/evaluasi/renja', $data);
                break;
        }
    }

    public function renja_download($tahun, $idOpd)
    {
        $opd = json_decode($this->_opd->getSingle($idOpd), true);

        $response = $this->api->GET(""renja/faktor/list/$tahun/$idOpd/excel"");

        header(""Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet; charset=utf-8"");
        header(""Content-Disposition: attachment; filename=Laporan {$opd['data']['namaOpd']} Tahun {$tahun}.xlsx"");  //File name extension was wrong
        header(""Expires: 0"");
        header(""Cache-Control: must-revalidate, post-check=0, pre-check=0"");
        header(""Cache-Control: private"", false);

        echo $response;
    }

    public function rkpd($case = null, ...$params)
    {
        switch ($case) {
            case 'data':
                $response = $this->_rkpd->dataEvaluasi($params[0]);

                // set content type to json
                header('Content-Type: application/json');
                echo $response;
                break;
            case 'download':
                $opdId = isset($params[0]) ? $params[0] : null;

                if ($opdId == null) {
                    $this->rkpd();
                }

                $opd = json_decode($this->_opd->getSingle($opdId), true);
                $response = $this->api->GET('rkpd/evaluasi/' . $opdId . '/excel');

                header(""Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet; charset=utf-8"");
                header(""Content-Disposition: attachment; filename=Laporan RKPD {$opd['data']['namaOpd']}.xlsx"");  //File name extension was wrong
                header(""Expires: 0"");
                header(""Cache-Control: must-revalidate, post-check=0, pre-check=0"");
                header(""Cache-Control: private"", false);

                echo $response;
                break;
            case 'evaluasi':
                $opdId = isset($params[0]) ? $params[0] : null;

                if ($opdId == null) {
                    $this->rkpd();
                }

                $data['semuaOpd'] = json_decode($this->_opd->getAllOpd(), true)['data'];
                $data['opdId'] = $opdId;
                $data['opd'] = json_decode($this->_opd->getSingle($opdId), true)['data'];
                $data['title'] = ""Evaluasi RKPD - "" . $data['opd']['namaOpd'];
                $data['data'] = json_decode($this->_rkpd->dataEvaluasi($opdId), true)['data'];

                $this->view('admin/evaluasi/evaluasi-rkpd', $data);
                break;
            default:
                $data['title'] = ""Evaluasi RKPD"";
                $data['semuaOpd'] = json_decode($this->_opd->getAllOpd(), true)['data'];

                $this->view('admin/evaluasi/rkpd', $data);
                break;
        }
    }
}
"
uaTugcKG,Arduino - Stazione Meteo e Dati su Telegram,webtronico,Arduino,Sunday 19th of May 2024 08:20:07 AM CDT,"#include <BME280.h>
#include <WiFi.h>
#include <PubSubClient.h>

const char* ssid = ""NOME_RETE_WIFI""; // Sostituire con il nome della tua rete WiFi
const char* password = ""PASSWORD_RETE_WIFI""; // Sostituire con la password della tua rete WiFi
const char* botToken = ""BOT_TOKEN""; // Sostituire con il token del tuo bot Telegram
const char* chatId = ""ID_CHAT""; // Sostituire con l'ID della chat Telegram a cui inviare i dati

WiFiClient espClient;
PubSubClient client(espClient);

BME280 sensor;

void setup() {
  Serial.begin(115200);

  sensor.begin(0x76);
  
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(""."");
  }
  Serial.println("""");
  Serial.println(""WiFi connected!"");

  client.setServer(""mqqt.telegram.org"", 1883);
  client.setCallback(callback);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }

  float temperature = sensor.readTemperatureC();
  float humidity = sensor.readHumidity();
  float pressure = sensor.readPressurePa();

  String message = ""Temperatura: "" + String(temperature) + ""¬∞C\n"" +
                ""Umidit√†: "" + String(humidity) + ""%RH\n"" +
                ""Pressione: "" + String(pressure) + ""hPa"";

  client.publish(chatId, message.c_str());

  delay(10000); // Inviare i dati ogni 10 secondi
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print(""Message arrived on topic: "");
  Serial.print(topic);
  Serial.print("". Message: "");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
  Serial.println();
}

void reconnect() {
  // Loop until we connect
  while (!client.connected()) {
    Serial.print(""Attempting MQTT connection..."");
    // Create a random client ID
    String clientId = ""ESP8266Client-"";
    clientId += String(random(0xFFFFFF));

    if (client.connect(clientId.c_str())) {
      Serial.println(""connected"");
      // Once connected, subscribe to our topic
      client.subscribe(chatId);
    } else {
      Serial.print(""failed, rc="");
      Serial.print(client.state());
      Serial.println("" try again in 5 seconds"");
      delay(5000);
    }
  }
}"
D3nrub9u,CurrencyConversionRates,Astoras,JSON,Sunday 19th of May 2024 08:19:10 AM CDT,"{
    ""AT"": 1,
    ""BE"": 1,
    ""CY"": 1,
    ""EE"": 1,
    ""FI"": 1,
    ""FR"": 1,
    ""DE"": 1,
    ""GR"": 1,
    ""IE"": 1,
    ""IT"": 1,
    ""LV"": 1,
    ""LT"": 1,
    ""LU"": 1,
    ""MT"": 1,
    ""NL"": 1,
    ""PT"": 1,
    ""SK"": 1,
    ""SI"": 1,
    ""ES"": 1,
    ""AF"": 94.46,
    ""AL"": 117.77,
    ""DZ"": 148.47,
    ""AO"": 825.95,
    ""AR"": 235.94,
    ""AM"": 427.53,
    ""AU"": 1.62,
    ""AZ"": 1.84,
    ""BS"": 1.08,
    ""BH"": 0.40,
    ""BD"": 117.83,
    ""BB"": 2.16,
    ""BY"": 3.03,
    ""BZ"": 2.16,
    ""BJ"": 656.71,
    ""BT"": 89.32,
    ""BO"": 7.45,
    ""BA"": 1.96,
    ""BW"": 12.04,
    ""BR"": 5.48,
    ""BN"": 1.46,
    ""BG"": 1.96,
    ""BF"": 656.71,
    ""BI"": 3835.95,
    ""KH"": 4570.85,
    ""CM"": 656.71,
    ""CA"": 1.46,
    ""CV"": 110.26,
    ""CF"": 656.71,
    ""TD"": 656.71,
    ""CL"": 878.85,
    ""CN"": 7.55,
    ""CO"": 4764.10,
    ""KM"": 491.97,
    ""CD"": 2191.00,
    ""CG"": 656.71,
    ""CR"": 607.82,
    ""CI"": 656.71,
    ""HR"": 7.54,
    ""CU"": 25.72,
    ""CZ"": 23.84,
    ""DK"": 7.45,
    ""DJ"": 192.83,
    ""DM"": 2.92,
    ""DO"": 60.03,
    ""EC"": 1.08,
    ""EG"": 33.12,
    ""SV"": 1.08,
    ""GQ"": 656.71,
    ""ER"": 16.29,
    ""SZ"": 20.13,
    ""ET"": 59.18,
    ""FJ"": 2.43,
    ""FI"": 1,
    ""FR"": 1,
    ""GA"": 656.71,
    ""GM"": 58.66,
    ""GE"": 2.84,
    ""GH"": 12.34,
    ""GD"": 2.92,
    ""GT"": 8.31,
    ""GN"": 9838.48,
    ""GW"": 656.71,
    ""GY"": 225.57,
    ""HT"": 147.46,
    ""HN"": 26.47,
    ""HU"": 379.20,
    ""IS"": 148.36,
    ""IN"": 89.32,
    ""ID"": 15996.23,
    ""IR"": 470918.37,
    ""IQ"": 1422.74,
    ""IL"": 3.95,
    ""JM"": 167.60,
    ""JP"": 146.75,
    ""JO"": 0.76,
    ""KZ"": 484.92,
    ""KE"": 149.97,
    ""KI"": 2.43,
    ""KP"": 899.99,
    ""KR"": 1446.22,
    ""KW"": 0.33,
    ""KG"": 96.77,
    ""LA"": 19547.36,
    ""LB"": 16156.17,
    ""LS"": 20.13,
    ""LR"": 183.51,
    ""LY"": 5.26,
    ""LI"": 1.08,
    ""LT"": 1,
    ""LU"": 1,
    ""MG"": 4740.36,
    ""MW"": 1172.16,
    ""MY"": 4.87,
    ""MV"": 16.66,
    ""ML"": 656.71,
    ""MT"": 1,
    ""MH"": 1.08,
    ""MR"": 40.29,
    ""MU"": 49.43,
    ""MX"": 19.65,
    ""FM"": 1.08,
    ""MD"": 19.50,
    ""MC"": 1,
    ""MN"": 3803.65,
    ""ME"": 1,
    ""MA"": 10.89,
    ""MZ"": 69.85,
    ""MM"": 2262.64,
    ""NA"": 20.13,
    ""NR"": 1.08,
    ""NP"": 143.88,
    ""NL"": 1,
    ""NZ"": 1.75,
    ""NI"": 39.60,
    ""NE"": 656.71,
    ""NG"": 824.95,
    ""NO"": 11.56,
    ""OM"": 0.41,
    ""PK"": 308.65,
    ""PW"": 1.08,
    ""PA"": 1.08,
    ""PG"": 3.87,
    ""PY"": 7827.27,
    ""PE"": 4.01,
    ""PH"": 59.55,
    ""PL"": 4.54,
    ""PT"": 1,
    ""QA"": 3.95,
    ""RO"": 4.95,
    ""RU"": 91.46,
    ""RW"": 1244.73,
    ""KN"": 2.92,
    ""LC"": 2.92,
    ""VC"": 2.92,
    ""WS"": 2.94,
    ""SM"": 1,
    ""ST"": 22.80,
    ""SA"": 4.05,
    ""SN"": 656.71,
    ""RS"": 117.56,
    ""SC"": 15.33,
    ""SL"": 22.62,
    ""SG"": 1.46,
    ""SK"": 1,
    ""SI"": 1,
    ""SB"": 9.02,
    ""SO"": 617.92,
    ""ZA"": 20.13,
    ""SS"": 808.78,
    ""ES"": 1,
    ""LK"": 374.15,
    ""SD"": 661.92,
    ""SR"": 41.12,
    ""SE"": 11.43,
    ""CH"": 0.98,
    ""SY"": 13342.37,
    ""TW"": 32.62,
    ""TJ"": 11.73,
    ""TZ"": 2641.36,
    ""TH"": 38.43,
    ""TL"": 1.08,
    ""TG"": 656.71,
    ""TO"": 2.40,
    ""TT"": 7.40,
    ""TN"": 3.42,
    ""TR"": 28.12,
    ""TM"": 3.79,
    ""TV"": 1.08,
    ""UG"": 4051.18,
    ""UA"": 39.61,
    ""AE"": 3.95,
    ""GB"": 0.87,
    ""US"": 1.08,
    ""UY"": 41.37,
    ""UZ"": 12725.65,
    ""VU"": 130.99,
    ""VE"": 35.32,
    ""VN"": 25514.61,
    ""YE"": 270.15,
    ""ZM"": 21.75,
    ""ZW"": 431.91
}
"
6P3LGhZk,Untitled,MeehoweCK,C++,Sunday 19th of May 2024 08:18:42 AM CDT,"#include <iostream>

int main() {
	int liczba1{ 5 };									// inicjalizacja zmiennej - utworzenie zmiennej wraz z przypisaniem jej warto≈õci
	int liczba2{ 12 };
	auto pf{ liczba1 > liczba2 };
	std::cout << std::boolalpha << pf << std::endl;		// false
	pf = (liczba2 == 12);
	std::cout << std::boolalpha << pf << std::endl;		// true

	pf = (liczba1 < liczba2 && liczba2 == 20);			// true && false : false
	std::cout << std::boolalpha << pf << std::endl;		// false

	pf = (liczba1 < liczba2 || liczba2 == 20);			// true || false : true
	std::cout << std::boolalpha << pf << std::endl;		// true

	pf = !pf;											// !true : false
	std::cout << std::boolalpha << pf << std::endl;		// false

	return 0;
}"
PGtS4W5a,trial snowybot,coinwalk,JavaScript,Sunday 19th of May 2024 08:03:15 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = 0.0001;
var beast = prefit;
var tens = (prefit*10);
var hunt = (prefit*100);
var tentyfour = (prefit*32)
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var mighty = elderly;

function go(){
great = Number(document.getElementById('pct_balance').value);
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great>(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great<(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((((great-(((Math.floor(mighty/hunt))*hunt)-tentyfour))/4)<=beast)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    mighty = parseFloat(great);
    snowie = ((Math.floor(great/tens))*tens);
}
if ((((great-(((Math.floor(mighty/hunt))*hunt)+tentyfour))/4)<=beast)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    mighty = parseFloat(great);
    snowie = ((Math.floor(great/tens))*tens);
}
console.log(((great-(((Math.floor(great/hunt))*hunt)-tentyfour))/4));
console.log(beast);
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1200);
}
go();"
E0yKg7a4,FeedBans,ExecuteCommands,Lua,Sunday 19th of May 2024 07:57:28 AM CDT,ExecuteCommands
5xPvnjbQ,PS1.sh,Adrien_Horgnies,Bash,Sunday 19th of May 2024 07:49:33 AM CDT,"BG_GREEN=""$(tput setab 64)""
BG_RED=""$(tput setab 124)""

BLACK=""$(tput setaf 0)""
BLUE=""$(tput setaf 57)""
GREEN=""$(tput setaf 2)""
MAGENTA=""$(tput setaf 201)""
ORANGE=""$(tput setaf 214)""
RED=""$(tput setaf 1)""
YELLOW=""$(tput setaf 11)""
WHITE=""$(tput setaf 255)""

NC=""$(tput sgr0)""

PSG=~/.password-store/.git

LPTF=$(mktemp /tmp/last_prompt_time_XXXXXX)

function _rc_ {
  local return_code=$?
  if (( return_code > 0 )); then
    echo ""${RED}$return_code${NC} ""
  fi
}

function _start_chrono_ {
    date +%s > ""$LPTF""
}

function _duration_ {
    local now=$(date +%s)
    if [ -s $LPTF ]; then
        local last=$(cat $LPTF)
        local duration=$((now  - last))
        if [ ""$duration"" -ge 5 ]; then
            echo ""${BLUE}‚ßó ${duration}${NC} ""
        fi
    fi
}

function _git_ {
    if ! (command -v git >/dev/null && git -C . rev-parse 2>/dev/null > /dev/null); then
        return 0
    fi

    if branch=$(git branch --show-current | grep .); then
        local ahead late
        echo -n $GREEN$branch' '
        ahead=$(git rev-list $branch ^origin/$branch --count -- 2>/dev/null)
        late=$(git rev-list ^$branch origin/$branch --count -- 2>/dev/null)

        if [ $? -gt 0 ]; then
            echo -n ""$REDÛ∞ì® ""
        elif [ ${ahead:-0} -gt 0 ] && [ ${late:-0} -gt 0 ]; then
            echo -n ""$RED${ahead}Û∞úò${late} ""
        elif [ ${ahead:-0} -gt 0 ]; then
            echo -n ""$GREEN${ahead}Û∞úò $NC""
        elif [ ${late:-0} -gt 0 ]; then
            echo -n ""$BLUEÛ∞úò${late} $NC""
        fi
    elif tag=$(git describe --tags --exact-match 2>/dev/null); then
        echo -n ""$ORANGE$tag ""
    elif sha=$(git rev-list HEAD -1 --abbrev-commit 2>/dev/null); then
        echo -n ""$YELLOW$sha ""
    fi

    local dirty=""$(git status --porcelain 2>/dev/null)""
    if [ ""$dirty"" ]; then
        local staging=""$(echo -e ""$dirty"" | grep -o '^.' | sort -u | xargs | tr -d ' ')""
        local workspace=""$(echo -e ""$dirty"" | grep -Po '^.\K.' | sort -u | xargs | tr -d ' ')""
        echo -n $GREEN$staging$RED$workspace' '
    fi

    echo -n $NC
}

function _ssh_ {
    if [ ""$SSH_TTY"" ] && [ ""$NOT_PRODUCTION"" ]; then
        echo ""${BG_GREEN}${WHITE} \u@\H ${NC} ""
    elif [ ""$SSH_TTY"" ]; then
        echo ""${BG_RED}${YELLOW} \u@\H ${NC} ""
    fi
}

function _prompt_ {
    if [ $(id -u) -eq 0 ]; then
        echo ""$(tput bold)$YELLOW#$NC$RED ""
    else
        echo ""$(tput bold)$YELLOW\$$NC ""
    fi
}

PS0=""\$(_start_chrono_)$(tput sgr0)""
PS1=""$(_ssh_)\$(_rc_)\$(_duration_)${MAGENTA}\w \$(_git_)\n$(_prompt_)""
"
7aNCZ0Uu,Untitled,awseqehaider,JSON,Sunday 19th of May 2024 07:44:40 AM CDT,"[{
""title"" : ""Tittle A"",
""code"" : ""https://i.postimg.cc/C1vcrzBy/20231128-193946.jpg"",
""date"" : ""1""
},
{
""title"" : ""Tittle A"",
""code"" : ""https://i.postimg.cc/C1vcrzBy/20231128-193946.jpg"",
""date"" : ""1""
},
{
""title"" : ""Tittle A"",
""code"" : ""https://i.postimg.cc/C1vcrzBy/20231128-193946.jpg"",
""date"" : ""1""
}]
"
d97rNfBM,–ñ–∏–∑–Ω—å –ø—Ä–∏–∂–æ–∫ —Å–∫–æ—Ä–æ—Å—Ç—å,Uuuuh,Lua,Sunday 19th of May 2024 07:29:58 AM CDT,"-- –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∏–≥—Ä–æ–∫—É –∏ –µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂—É
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º GUI, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
local function createPlayerGui()
    local screenGui = player:FindFirstChild(""PlayerGui""):FindFirstChild(""PlayerControlGui"")
    
    if not screenGui then
        screenGui = Instance.new(""ScreenGui"")
        screenGui.Name = ""PlayerControlGui""
        screenGui.Parent = player:FindFirstChild(""PlayerGui"")
        
        local frame = Instance.new(""Frame"")
        frame.Size = UDim2.new(0, 180, 0, 120)
        frame.Position = UDim2.new(0, 10, 0, 10)
        frame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
        frame.BackgroundTransparency = 0.5
        frame.BorderSizePixel = 0
        frame.Parent = screenGui

        -- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
        local function createTextBox(labelText, defaultText, positionY, callback)
            local label = Instance.new(""TextLabel"")
            label.Size = UDim2.new(0.5, 0, 0.3, 0)
            label.Position = UDim2.new(0, 0, positionY, 0)
            label.Text = labelText
            label.TextColor3 = Color3.new(1, 1, 1)
            label.BackgroundTransparency = 1
            label.Font = Enum.Font.SourceSans
            label.TextScaled = true
            label.Parent = frame

            local textBox = Instance.new(""TextBox"")
            textBox.Size = UDim2.new(0.5, -10, 0.3, 0)
            textBox.Position = UDim2.new(0.5, 10, positionY, 0)
            textBox.Text = defaultText
            textBox.TextColor3 = Color3.new(1, 1, 1)
            textBox.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
            textBox.Font = Enum.Font.SourceSans
            textBox.TextScaled = true
            textBox.Parent = frame
            
            textBox.FocusLost:Connect(function()
                local newValue = tonumber(textBox.Text)
                if newValue then
                    callback(newValue)
                else
                    textBox.Text = defaultText
                end
            end)
        end

        createTextBox(""Speed"", ""16"", 0, function(newSpeed)
            character.Humanoid.WalkSpeed = newSpeed
        end)
        
        createTextBox(""Jump"", ""50"", 0.35, function(newJumpPower)
            character.Humanoid.JumpPower = newJumpPower
        end)
        
        createTextBox(""Health"", ""100"", 0.7, function(newHealth)
            character.Humanoid.Health = newHealth
        end)
    end
    
    -- –°–æ–∑–¥–∞–µ–º –≤–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫
    local watermark = Instance.new(""TextLabel"")
    watermark.Size = UDim2.new(0, 200, 0, 50)
    watermark.Position = UDim2.new(0, 10, 1, -60)  -- –ü–æ–∑–∏—Ü–∏—è –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞
    watermark.Text = ""by Xande | Scripts!""
    watermark.TextColor3 = Color3.new(1, 1, 1)
    watermark.BackgroundTransparency = 1
    watermark.Font = Enum.Font.SourceSansBold
    watermark.TextScaled = true
    watermark.Parent = screenGui
end

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º CFrame, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
local function setupCFrame()
    if not character:FindFirstChild(""HumanoidRootPart"") then
        local rootPart = Instance.new(""Part"")
        rootPart.Name = ""HumanoidRootPart""
        rootPart.Size = Vector3.new(2, 2, 1)
        rootPart.Anchored = true
        rootPart.CFrame = CFrame.new(0, 5, 0)
        rootPart.Parent = character
    end
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
local function setupPlayer()
    character:WaitForChild(""Humanoid"") -- –ñ–¥–µ–º –ø–æ–∫–∞ Humanoid –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω
    createPlayerGui()
    setupCFrame()
end

-- –í—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
setupPlayer()

-- –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
player.CharacterAdded:Connect(function(char)
    character = char
    setupPlayer()
end)"
Lixri5EJ,Roman2Integer x2,evgenibatev,Java,Sunday 19th of May 2024 07:26:32 AM CDT,"class Solution {
    public int romanToInt(String s) {
        Map<Character, Integer> romanToInteger = Map.of(
            'I', 1,
            'V', 5,
            'X', 10,
            'L', 50,
            'C', 100,
            'D', 500,
            'M', 1000
        );

        int result = 0;

        for (int i = 0; i < s.length(); i++) {

            Character c = s.charAt(i);
            Character cNext = Character.MIN_VALUE;
            boolean shouldSubtract = false;
            if (i+1 < s.length()) {

                cNext = s.charAt(i+1);
                switch(c) {
                    case 'I':
                        if (cNext == 'V' || cNext == 'X') {
                            shouldSubtract = true;
                        }
                        break;
                    case 'X':
                        if (cNext == 'L' || cNext == 'C') {
                            shouldSubtract = true;
                        }
                        break;
                    case 'C':
                        if (cNext == 'D' || cNext == 'M') {
                            shouldSubtract = true;
                        }
                        break;
                }
            }

            if (shouldSubtract) {
                result += (romanToInteger.get(cNext) - romanToInteger.get(c));
                i++;
            }
            else {
                result += romanToInteger.get(c);
            }
        }
        return result;
    }
}"
VVwVgq9J,–õ–†2 –û–û–ü,Maestro1,C++,Sunday 19th of May 2024 07:21:56 AM CDT,"#include <iostream>
#include <cstring>
using namespace std;

class Settlement {
private:
    char nazvanie[100];
    int naselenie;
    double shirota;
    double dolgota;
    char transport[100];

public:
/*–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é*/
    Settlement() 
    {
        strcpy(nazvanie, ""–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"");
        naselenie = 0;
        shirota = 0.0;
        dolgota = 0.0;
        strcpy(transport, ""–ù–µ—Ç"");
    }
/*–ö–æ—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤*/
    Settlement(const char* nazv, int nasel) 
    {
        strcpy(nazvanie, nazv);
        naselenie = nasel;
        shirota = 0.0;
        dolgota = 0.0;
        strcpy(transport, ""–ù–µ—Ç"");
    }

    Settlement(const char* nazv, int nasel, const char* trans)
    {
        strcpy(nazvanie, nazv);
        naselenie = nasel;
        shirota = 0.0;
        dolgota = 0.0;
        strcpy(transport, trans);
    }

    Settlement(const char* nazv, int nasel, double s, double d) 
    {
        strcpy(nazvanie, nazv);
        naselenie = nasel;
        shirota = s;
        dolgota = d;
        strcpy(transport, ""–ù–µ—Ç"");
    }

    Settlement(const char* nazv, int nasel, double s, double d, const char* trans)
    {
        strcpy(nazvanie, nazv);
        naselenie = nasel;
        shirota = s;
        dolgota = d;
        strcpy(transport, trans);
    }
    
    /* –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä*/
    ~Settlement() {
        strcpy(nazvanie, """");
        naselenie = -1;
        shirota = -1.0;
        dolgota = -1.0;
        strcpy(transport, """");
    }

    void Input() {
        cout << ""–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞: "";
        cin.ignore();
        cin.getline(nazvanie, 100);
        cout << ""–í–≤–µ–¥–µ–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–∏—è: "";
        cin >> naselenie;
        cout << ""–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–æ—Ç—É: "";
        cin >> shirota;
        cout << ""–í–≤–µ–¥–∏—Ç–µ –¥–æ–ª–≥–æ—Ç—É: "";
        cin >> dolgota;
        cout << ""–í–≤–µ–¥–∏—Ç–µ –∫–∞–∫–æ–π –µ—Å—Ç—å –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç: "";
        cin.ignore();
        cin.getline(transport, 100);
    }

    void Output() const {
        cout << ""–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Å–µ–ª—ë–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞: "" << nazvanie << endl;
        cout << ""–ù–∞—Å–µ–ª–µ–Ω–∏–µ: "" << naselenie << endl;
        cout << ""–®–∏—Ä–æ—Ç–∞: "" << shirota << endl;
        cout << ""–î–æ–ª–≥–æ—Ç–∞: "" << dolgota << endl;
        cout << ""–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç: "" << transport << endl;
        cout << ""--------------------------------------------------------"" <<endl;
    }

private:
    void printCoordinates() const {
        cout << ""–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ("" << shirota << "", "" << dolgota << "")"" << endl;
    }

public:
    void displayInfo() const {
        Output();
        printCoordinates();
    }
};

int main() {

    Settlement defaultSettlement;
    defaultSettlement.Output();
    cout << endl;


    Settlement settlement1(""–ö–∞–ª–∏–Ω–æ–≤–æ"", 1500);
    Settlement settlement2(""–î–æ–Ω–µ—Ü–∫"", 1000000, 48.023, -37.8022);
    Settlement settlement3(""–ú–∞–∫–µ–µ–≤–∫–∞"", 500000, 48.0478, 37.9258, ""–ê–≤—Ç–æ–±—É—Å—ã, –¢—Ä–æ–ª–µ–π–±—É—Å—ã, –¢–∞–∫—Å–∏"");

    settlement1.Output();
    cout << endl;
    settlement2.Output();
    cout << endl;
    settlement3.Output();
    cout << endl;

    Settlement settlements[3];


    for (int i = 0; i < 3; ++i) {
        settlements[i].Input();
    }

    for (int i = 0; i < 3; ++i) {
        settlements[i].Output();
        cout << endl;
    }

    return 0;
}
"
XUpG3qEP,le sigh,tomtomvader298,JavaScript,Sunday 19th of May 2024 07:17:23 AM CDT,"if (interaction.options.getSubcommand() === 'mute') {
            const selectedMember = interaction.options.getMember('user');
            const providedReason = interaction.options.getString('reason');
            const choices = interaction.options.getString('timeout-duration');
            let reasonProvided;

            //Check If User Is A Bot
            if (selectedMember.user.bot) {
                return interaction.editReply({ content: `I Cannot Mute ${selectedMember}, As They Are A Bot` })
            }
            //End Check For Bot, Start Check For Ban Permission
            if (selectedMember.permissions.has(PermissionFlagsBits.ModerateMembers)) {
                return interaction.editReply({ content: `I Cannot Mute ${selectedMember}, As They Are A Member Of Staff` })
            }
            //End Permission Check, Start Reason Validation
            if (providedReason) {
                reasonProvided = providedReason;
            } else {
                reasonProvided = `No reason Provided`;
            }
            const guildID = interaction.guild.id; // Grab GuildID From The Member Atrib
            const loggedLoggingChannelId = await db.get(`loggedlogschannel_${guildID}`) || [];
            const loggingChannelIdIndex = loggedLoggingChannelId.findIndex(entry => entry.name === ""Channel"");
            let loggerChannelId;

            if (loggingChannelIdIndex !== -1) {
                loggerChannelId = loggedLoggingChannelId[loggingChannelIdIndex].value;
            } else {
                return;
            }

            if (choices === 'one-minute') {
                const oneMinuteInMilliSeconds = 60000
                const duration = Math.floor(oneMinuteInMilliSeconds)
                const durationInMinutes = Math.floor(duration / 60000);

                try {
                    await selectedMember.send({ content: `You have been timed out in ${interaction.guild.name},\nFor the duration of: ${durationInMinutes}M\nWith the reason of: **${reasonProvided}**` });
                } catch (error) {

                    if (error.code === 50007) {
                        console.log(`User ${selectedMember.user.username} (${selectedMember.user.id}) cannot receive DMs. Ignoring the warning message.`); // Probably send a message to the channel saying this or something iddk
                    } else {
                        throw error;
                    }
                }

                let mutedEmbed = new EmbedBuilder().setColor(teaGreen).setTitle(`A User Has Been Muted [Timeout]`)
                    .setDescription(`
            Muted: ${selectedMember.user.username} (${selectedMember.user.id}) 
            For: ${durationInMinutes}M
            Reason: ${reasonProvided}
            `)
                    .setFooter({ text: null, iconURL: interaction.client.user.displayAvatarURL({ dynamic: true }), inline: true }).setTimestamp()

                await selectedMember.timeout(duration, reasonProvided)
                await interaction.editReply({ content: `Muted: ${selectedMember.user.username} (${selectedMember.user.id}) For ${durationInMinutes}M\nReason: ${reasonProvided}`, embeds: [], files: [], components: [], ephemeral: true, tts: false, fetchReply: false });
                await interaction.guild.channels.cache.get(loggerChannelId).send({ content: null, embeds: [mutedEmbed], files: [], ephemeral: false });
            } else if (choices === 'five-minute') {
                const fiveMinutesInMilliSeconds = 300000
                const duration = Math.floor(fiveMinutesInMilliSeconds)
                const durationInMinutes = Math.floor(duration / 60000);

                try {
                    await selectedMember.send({ content: `You have been timed out in ${interaction.guild.name},\nFor the duration of: ${durationInMinutes}M\nWith the reason of: **${reasonProvided}**` });
                } catch (error) {

                    if (error.code === 50007) {
                        console.log(`User ${selectedMember.user.username} (${selectedMember.user.id}) cannot receive DMs. Ignoring the warning message.`); // Probably send a message to the channel saying this or something iddk
                    } else {
                        throw error;
                    }
                }

                let mutedEmbed = new EmbedBuilder().setColor(teaGreen).setTitle(`A User Has Been Muted [Timeout]`)
                    .setDescription(`
            Muted: ${selectedMember.user.username} (${selectedMember.user.id}) 
            For: ${durationInMinutes}M
            Reason: ${reasonProvided}
            `)
                    .setFooter({ text: null, iconURL: interaction.client.user.displayAvatarURL({ dynamic: true }), inline: true }).setTimestamp()

                await selectedMember.timeout(duration, reasonProvided)
                await interaction.editReply({ content: `Muted: ${selectedMember.user.username} (${selectedMember.user.id}) For ${durationInMinutes}M\nReason: ${reasonProvided}`, embeds: [], files: [], components: [], ephemeral: true, tts: false, fetchReply: false });
                await interaction.guild.channels.cache.get(loggerChannelId).send({ content: null, embeds: [mutedEmbed], files: [], ephemeral: false });
            } else if (choices === 'ten-minute') {
                const tenMinutesInMilliSeconds = 600000
                const duration = Math.floor(tenMinutesInMilliSeconds)
                const durationInMinutes = Math.floor(duration / 60000);

                try {
                    await selectedMember.send({ content: `You have been timed out in ${interaction.guild.name},\nFor the duration of: ${durationInMinutes}M\nWith the reason of: **${reasonProvided}**` });
                } catch (error) {

                    if (error.code === 50007) {
                        console.log(`User ${selectedMember.user.username} (${selectedMember.user.id}) cannot receive DMs. Ignoring the warning message.`); // Probably send a message to the channel saying this or something iddk
                    } else {
                        throw error;
                    }
                }

                let mutedEmbed = new EmbedBuilder().setColor(teaGreen).setTitle(`A User Has Been Muted [Timeout]`)
                    .setDescription(`
            Muted: ${selectedMember.user.username} (${selectedMember.user.id}) 
            For: ${durationInMinutes}M
            Reason: ${reasonProvided}
            `)
                    .setFooter({ text: null, iconURL: interaction.client.user.displayAvatarURL({ dynamic: true }), inline: true }).setTimestamp()

                await selectedMember.timeout(duration, reasonProvided)
                await interaction.editReply({ content: `Muted: ${selectedMember.user.username} (${selectedMember.user.id}) For ${durationInMinutes}M\nReason: ${reasonProvided}`, embeds: [], files: [], components: [], ephemeral: true, tts: false, fetchReply: false });
                await interaction.guild.channels.cache.get(loggerChannelId).send({ content: null, embeds: [mutedEmbed], files: [], ephemeral: false });
            } else if (choices === 'one-hour') {
                const oneHourInMilliSeconds = 3600000
                const duration = Math.floor(oneHourInMilliSeconds)
                const durationInMinutes = Math.floor(duration / 3600000);

                try {
                    await selectedMember.send({ content: `You have been timed out in ${interaction.guild.name},\nFor the duration of: ${durationInMinutes}H\nWith the reason of: **${reasonProvided}**` });
                } catch (error) {

                    if (error.code === 50007) {
                        console.log(`User ${selectedMember.user.username} (${selectedMember.user.id}) cannot receive DMs. Ignoring the warning message.`); // Probably send a message to the channel saying this or something iddk
                    } else {
                        throw error;
                    }
                }

                let mutedEmbed = new EmbedBuilder().setColor(teaGreen).setTitle(`A User Has Been Muted [Timeout]`)
                    .setDescription(`
            Muted: ${selectedMember.user.username} (${selectedMember.user.id}) 
            For: ${durationInMinutes}H
            Reason: ${reasonProvided}
            `)
                    .setFooter({ text: null, iconURL: interaction.client.user.displayAvatarURL({ dynamic: true }), inline: true }).setTimestamp()

                await selectedMember.timeout(duration, reasonProvided)
                await interaction.editReply({ content: `Muted: ${selectedMember.user.username} (${selectedMember.user.id}) For ${durationInMinutes}H\nReason: ${reasonProvided}`, embeds: [], files: [], components: [], ephemeral: true, tts: false, fetchReply: false });
                await interaction.guild.channels.cache.get(loggerChannelId).send({ content: null, embeds: [mutedEmbed], files: [], ephemeral: false });
            } else if (choices === 'one-day') {
                const oneDayInMilliSeconds = 86400000
                const duration = Math.floor(oneDayInMilliSeconds)
                const durationInMinutes = Math.floor(duration / (1000 * 60 * 60 * 24));

                try {
                    await selectedMember.send({ content: `You have been timed out in ${interaction.guild.name},\nFor the duration of: ${durationInMinutes}D\nWith the reason of: **${reasonProvided}**` });
                } catch (error) {

                    if (error.code === 50007) {
                        console.log(`User ${selectedMember.user.username} (${selectedMember.user.id}) cannot receive DMs. Ignoring the warning message.`); // Probably send a message to the channel saying this or something iddk
                    } else {
                        throw error;
                    }
                }

                let mutedEmbed = new EmbedBuilder().setColor(teaGreen).setTitle(`A User Has Been Muted [Timeout]`)
                    .setDescription(`
            Muted: ${selectedMember.user.username} (${selectedMember.user.id}) 
            For: ${durationInMinutes}D
            Reason: ${reasonProvided}
            `)
                    .setFooter({ text: null, iconURL: interaction.client.user.displayAvatarURL({ dynamic: true }), inline: true }).setTimestamp()

                await selectedMember.timeout(duration, reasonProvided)
                await interaction.editReply({ content: `Muted: ${selectedMember.user.username} (${selectedMember.user.id}) For ${durationInMinutes}D\nReason: ${reasonProvided}`, embeds: [], files: [], components: [], ephemeral: true, tts: false, fetchReply: false });
                await interaction.guild.channels.cache.get(loggerChannelId).send({ content: null, embeds: [mutedEmbed], files: [], ephemeral: false });
            } else if (choices === 'one-week') {
                const oneWeekInMilliSeconds = 604800000
                const duration = Math.floor(oneWeekInMilliSeconds)
                const durationInMinutes = Math.floor(duration / (1000 * 60 * 60 * 24 * 7));

                try {
                    await selectedMember.send({ content: `You have been timed out in ${interaction.guild.name},\nFor the duration of: ${durationInMinutes}W\nWith the reason of: **${reasonProvided}**` });
                } catch (error) {

                    if (error.code === 50007) {
                        console.log(`User ${selectedMember.user.username} (${selectedMember.user.id}) cannot receive DMs. Ignoring the warning message.`); // Probably send a message to the channel saying this or something iddk
                    } else {
                        throw error;
                    }
                }

                let mutedEmbed = new EmbedBuilder().setColor(teaGreen).setTitle(`A User Has Been Muted [Timeout]`)
                    .setDescription(`
            Muted: ${selectedMember.user.username} (${selectedMember.user.id}) 
            For: ${durationInMinutes}W
            Reason: ${reasonProvided}
            `)
                    .setFooter({ text: null, iconURL: interaction.client.user.displayAvatarURL({ dynamic: true }), inline: true }).setTimestamp()

                await selectedMember.timeout(duration, reasonProvided)
                await interaction.editReply({ content: `Muted: ${selectedMember.user.username} (${selectedMember.user.id}) For ${durationInMinutes}W\nReason: ${reasonProvided}`, embeds: [], files: [], components: [], ephemeral: true, tts: false, fetchReply: false });
                await interaction.guild.channels.cache.get(loggerChannelId).send({ content: null, embeds: [mutedEmbed], files: [], ephemeral: false });

            }
        }
"
q5c2B4vp,auto Backward Elim,STANAANDREY,R,Sunday 19th of May 2024 07:11:06 AM CDT,"backwardElimination <- function(x, sl) {
    numVars = length(x)
    for (i in c(1:numVars)){
      regressor = lm(formula = Profit ~ ., data = x)
      maxVar = max(coef(summary(regressor))[c(2:numVars), ""Pr(>|t|)""])
      if (maxVar > sl){
        j = which(coef(summary(regressor))[c(2:numVars), ""Pr(>|t|)""] == maxVar)
        x = x[, -j]
      }
      numVars = numVars - 1
    }
    return(summary(regressor))
  }
  
  SL = 0.05
  dataset = dataset[, c(1,2,3,4,5)]
  backwardElimination(training_set, SL)"
2YarCEA2,Untitled,khuseiN,SQL,Sunday 19th of May 2024 06:51:19 AM CDT,"--books--
DROP TABLE IF EXISTS books cascade;
CREATE TABLE books (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

INSERT INTO books (name) VALUES
('–í–æ–π–Ω–∞ –∏ –º–∏—Ä'),
('–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ'),
('–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞'),
('–¢–∏—Ö–∏–π –¥–æ–Ω'),
('–ë–æ–π—Ü–æ–≤—Å–∫–∏–π –ö–ª—É–±');

--book_reg--
DROP TABLE IF EXISTS book_reg cascade;
CREATE TABLE book_reg (
    id INT PRIMARY KEY,
    date DATE NOT NULL
);

INSERT INTO book_reg (id, date) VALUES
(1, TO_DATE('01.05.2006', 'DD.MM.YYYY')),
(3, TO_DATE('05.07.2004', 'DD.MM.YYYY')),
(5, TO_DATE('30.09.2015', 'DD.MM.YYYY'));

--genres--
DROP TABLE IF EXISTS genres cascade;
CREATE TABLE genres (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

INSERT INTO genres (name) VALUES
('–†—É—Å—Å–∫–∞—è –∫–ª–∞—Å—Å–∏–∫–∞'),
('–ó–∞—Ä—É–±–µ–∂–Ω—ã–µ —Ä–æ–º–∞–Ω—ã'),
('–î—Ä–∞–º–∞');

--book_genres--
DROP TABLE IF EXISTS book_genres cascade;
CREATE TABLE book_genres (
    book_id INT NOT NULL,
    genre_id INT NOT NULL,
    UNIQUE (book_id, genre_id),
    FOREIGN KEY (book_id) REFERENCES books (id),
    FOREIGN KEY (genre_id) REFERENCES genres (id)
);

INSERT INTO book_genres (book_id, genre_id) VALUES
(1, 1),
(1, 3),
(2, 1),
(3, 1),
(4, 1),
(5, 2),
(5, 3);

--–ø—Ä–æ–≤–µ—Ä–∫–∏
SELECT * FROM books;
SELECT * FROM book_reg;
SELECT * FROM genres;
SELECT * FROM book_genres;

--–∑–∞–ø—Ä–æ—Å
SELECT g.name AS genre_name, COUNT(DISTINCT b.id) AS book_count
FROM book_reg b_r
JOIN books b ON b_r.id = b.id
JOIN book_genres b_g ON b.id = b_g.book_id
JOIN genres g ON b_g.genre_id = g.id
WHERE b_r.date > TO_DATE('12.04.2003', 'DD.MM.YYYY')
GROUP BY g.name
ORDER BY book_count DESC;"
0uBC5fuQ,weapon_script,Lakamfo,GDScript,Sunday 19th of May 2024 06:42:16 AM CDT,"class_name Weapon extends Node3D

@export_category(""Basic"")
##Rate of fire per minute
@export var fire_rate = 800
##Rate of burst mode fire per minute 
@export var burst_fire_rate = 800
##Default fire mode
@export_enum(""semi"", ""auto"", ""burst"") var fire_mode : int = 1
@export_flags(""semi"", ""auto"", ""burst"") var available_shooting_modes = 3 
##Maximum engagement distance
@export var fire_distance : float = 50
##Zoom X while aiming
@export var aim_camera_zoom : float = 2

@export_group(""Bullets"")
@export var clip_size : int = 30
@export var magazine_size : int = 300
##Additional bullet in chamber when tactical reloaded
@export var bullet_in_chamber : bool = true
@export var burst_size : int = 3

@export_group(""Damage"")
##Base damage.
##Damage depends on the body part and is calculated using the formula:
##result_damage = damage * part_mult
@export var damage : float = 27

@export var head_mult : float = 2
@export var torso_mult : float = 1
@export var limbs_mult : float = 0.7

@export_group(""Recoil"")
@export var hip_camera_kick : Vector3
@export var aim_camera_kick : Vector3
#@export var max_camera_kick : Vector3

##Does nothing
@export var random_mult : float = 1

##How fast camera snaps to kick
@export var snappinnes = 6
##How fast camera returns to normal rotation
@export var return_speed = 2

@export_subgroup(""NonStop paremetres"")
##If this option is activated, the camera's recoil accumulates
@export var non_stop_mult_enabled : bool = true
@export var max_non_stop_mult : float = 5
@export var min_non_stop_mult : float = 1
##How much accumulates per shoot
@export var non_stop_increase : float = 0.05
##Waiting for the last shot to reset the recoil
@export var non_stop_reset_threshold : float = 0.5


@export_group(""Position & Procedural animation"")
##Procedural animations for aiming
@export var procedural_animation_enabled : bool = true

@export_subgroup(""Hip"")
@export var standart_position : Vector3
@export var standart_rotation : Vector3
@export_subgroup(""Aim"")
@export var aim_position : Vector3
@export var aim_rotation : Vector3
##How long does the animation last in seconds
@export var aim_speed : float = 1.0

@export_group(""Shell"")
@export_enum(""9mm:0"",""7mm:1"",""5mm:2"") var shell_type : int = 0
@export var min_impulse : Vector3
@export var max_impulse : Vector3 
@export_subgroup(""Custom shell model"") 
@export var custom_model : PackedScene

@export_group(""Sounds & Animations"")
@export_placeholder(""You can write several animations separated by commas"") var idle_animation : String = """"
@export_placeholder(""You can write several animations separated by commas"") var take_out_animation : String = """"
@export_subgroup(""Fire Animations"")
@export_placeholder(""You can write several animations separated by commas"") var fire_animation : String = """"
@export_placeholder(""You can write several animations separated by commas"") var aim_fire_animation : String = """"
#@export_placeholder(""You can write several animations separated by commas"") var aim_reload_animation : String = """"
@export_subgroup(""Reload Animations"")
@export_placeholder(""You can write several animations separated by commas"") var tactical_reload_animation : String = """"
@export_placeholder(""You can write several animations separated by commas"") var reload_animation : String = """"


@export_group(""UI"")
@export var icon : CompressedTexture2D = preload(""res://icon.svg"")
@export var hit_marker_standart_color : Color = Color(1, 1, 1)
@export var hit_marker_critical_color : Color = Color(0.56878209114075, 0.16045689582825, 0.2052811384201)

@export_group(""Nodes"")
## Weapon`s animation node
@export_node_path(""AnimationPlayer"") var animation_player
## Weapon`s shot sound
@export_node_path(""AudioStreamPlayer3D"") var audio_stream_player
## Weapon`s change mode click
@export_node_path(""AudioStreamPlayer3D"") var audio_fire_mode_switch_stream_player
## Weapon`s flash
@export_node_path(""OmniLight3D"") var omni_light
## Weapon`s shells spawn position
@export_node_path(""Marker3D"") var shell_position
## Weapon`s sparkles and smoke
@export_node_path(""GPUParticles3D"") var gpu_particles

@onready var bullet_pos = $bullet_tracer_pos
var scene_root

#NODES
var _animation_player : AnimationPlayer
var _audio_stream_player : AudioStreamPlayer3D
var _omni_light : OmniLight3D
var _gpu_particles : GPUParticles3D
var _shell_position : Marker3D
var _audio_fire_mode_switch_stream_player : AudioStreamPlayer3D

var player
var timer : Timer = Timer.new()
var non_stop_timer : Timer = Timer.new()

#Shells
var shell_9mm : PackedScene = preload(""res://player/weapons/shells/9_mm_shell.tscn"")
var shell_7mm : PackedScene
var shell_5mm : PackedScene

var bullet_hole_decal : PackedScene = preload(""res://player/weapons/bullet_hole.tscn"")

var fire_mode_str : Array = [""SEMI"",""AUTO"",""BURST""]

#Internal variables
var is_aiming : bool = false
var previous_aim_state : bool = is_aiming

var timer_wait : float = 60.0 / fire_rate
var non_stop : float = 1.0
var weapon_ray_cast_3d : RayCast3D
var ui_element

var is_reloading : bool = false 
var is_take_out : bool = false

var clip : int 
var magazine : int = magazine_size

var _animations_fire : AnimationsPack = AnimationsPack.new()
var _animations_aim_fire : AnimationsPack = AnimationsPack.new()
var _animations_idle : AnimationsPack = AnimationsPack.new()
var _animations_take_out : AnimationsPack = AnimationsPack.new()
var _animations_tactical_reload : AnimationsPack = AnimationsPack.new()
var _animations_reload : AnimationsPack = AnimationsPack.new()

class AnimationsPack:
	var _animations_pack : PackedStringArray
	var _pack_size : int = -1
	
	func parse(data : String, splitter : String = "","") -> void:
		_animations_pack = data.split(splitter, false)
		
		_pack_size = _animations_pack.size() - 1
	
	func get_size() -> int:
		return _pack_size
	
	func get_pack() -> PackedStringArray:
		return _animations_pack
	
	func get_rand_animation() -> String:
		if _pack_size > -1:
			return _animations_pack[randi_range(0,_pack_size)]
		else: 
			return ""null""


var bullet_tracer = preload(""res://player/weapons/in_game/bullet_tracer.tscn"")
var tracer_instance 
var shell_instance 

#Signals
#Weapon_recoil in Event Bus
#Weapon_aim in Event Bus

func _ready() -> void:
	add_child(timer)
	add_child(non_stop_timer)
	
	timer.one_shot = true; non_stop_timer.one_shot = true
	timer.autostart = false; non_stop_timer.autostart = false
	
	non_stop = min_non_stop_mult
	
	if animation_player != null: _animation_player = get_node_or_null(animation_player)
	if audio_stream_player != null: _audio_stream_player = get_node_or_null(audio_stream_player) 
	if audio_fire_mode_switch_stream_player != null: _audio_fire_mode_switch_stream_player = get_node_or_null(audio_fire_mode_switch_stream_player)
	if omni_light != null: _omni_light = get_node_or_null(omni_light)
	if gpu_particles != null: _gpu_particles = get_node_or_null(gpu_particles)
	if shell_position != null: _shell_position = get_node_or_null(shell_position)
	
	_animations_fire.parse(fire_animation)
	_animations_aim_fire.parse(aim_fire_animation)
	_animations_idle.parse(idle_animation)
	_animations_reload.parse(reload_animation)
	_animations_tactical_reload.parse(tactical_reload_animation)
	_animations_take_out.parse(take_out_animation)
	
	_play_animation(_animations_fire.get_rand_animation())
	
	scene_root = get_tree().root
	
	magazine = magazine_size
	clip = clip_size
	
	if _animation_player:
		_animation_player.animation_finished.connect(_animation_handler)
	
	_change_shooting_mode(true)
	_update_ui()

func _check(_delta : float):
	if !visible:
		return
	
	is_aiming = Input.is_action_pressed(""mouse_2"")
	
	if non_stop_timer.is_stopped():
		non_stop = min_non_stop_mult
	
	if !timer.is_stopped() or is_reloading or is_take_out:
		return
	
	match fire_mode:
		0: # Semi
			if Input.is_action_just_pressed(""mouse_1""):
				timer_wait = 60.0 / fire_rate
				_fire()
		1: #Auto
			if Input.is_action_pressed(""mouse_1""):
				timer_wait = 60.0 / fire_rate
				_fire()
		2: #Burst
			if Input.is_action_just_pressed(""mouse_1""):
				timer_wait = 60.0 / burst_fire_rate
				for bullet in burst_size:
					_fire()
					timer.start(timer_wait)
					await timer.timeout

func _physics_process(delta):
	_check(delta)
	
	if Input.is_action_just_pressed(""b""):
		_change_shooting_mode(false)
	
	if Input.is_action_just_pressed(""r""):
		_reload()

func _process(delta: float) -> void:
	_check(delta)
	
	_procedural_animation(delta)

func _fire():
	if !clip > 0:
		return
	
	_play_vfx()
	
	if custom_model and shell_position:
		pass
	
	elif shell_position and Global.decals_enabled:
		match shell_type:
			0:
				var instance = shell_9mm.instantiate()
				#_shell_position.add_child(instance)
				scene_root.add_child(instance)
				instance.global_transform = _shell_position.global_transform
				
				instance.top_level = true
				instance.apply_central_impulse(global_transform.basis * _get_random_impulse())
				instance.apply_torque_impulse(_get_random_impulse())
				
				instance = null
			1:
				pass
			2:
				pass
	
	clip -= 1
	_hit_reg()
	
	_update_ui()
	
	random_recoil()
	timer.start(timer_wait)
	non_stop_timer.start(non_stop_reset_threshold)
	
	if _animation_player != null and fire_animation != """":
		_animation_player.stop()
		
		if(aim_fire_animation != """") and is_aiming:
			_play_animation(_animations_aim_fire.get_rand_animation())
		else:
			_play_animation(_animations_fire.get_rand_animation())
	
	if _audio_stream_player != null:
		_audio_stream_player.pitch_scale = randf_range(0.9,1.1) 
		_audio_stream_player.play()
	
	non_stop += non_stop_increase
	non_stop = clamp(non_stop, min_non_stop_mult, max_non_stop_mult)

func _hit_reg():
	if weapon_ray_cast_3d:
		var collider = weapon_ray_cast_3d.get_collider()
		if collider and collider.has_method(""get_hit""):
			var final_damage = damage
			if collider is Hitbox:
				match collider.type:
					0:
						final_damage *= head_mult
						EventBus.emit_signal(""weapon_hitted"", hit_marker_critical_color)
					1:
						final_damage *= torso_mult
						EventBus.emit_signal(""weapon_hitted"", hit_marker_standart_color)
					2:
						final_damage *= limbs_mult
						EventBus.emit_signal(""weapon_hitted"", hit_marker_standart_color)
			
			collider.call(""get_hit"", final_damage, Vector3())


func _reload():
	#While shooting, the player cannot start reloading
	if (_animation_player.current_animation in _animations_fire.get_pack() or _animation_player.current_animation in _animations_reload.get_pack()):
		return
	
	if (is_reloading):
		return
	
	
	var wasted_ammo_size : int = clip_size - (clip - int(bullet_in_chamber and clip > 0))
	
	if wasted_ammo_size <= 0 || magazine <= 0:
		return
	
	if (wasted_ammo_size <= magazine):
		magazine -= wasted_ammo_size
		
		clip += wasted_ammo_size
	else:
		clip += magazine
		magazine = 0
	
	if clip > 0 and _animations_tactical_reload.get_size() > -1:
		_play_animation(_animations_tactical_reload.get_rand_animation())
		is_reloading = true
	elif _animations_reload.get_size() > -1:
		_play_animation(_animations_reload.get_rand_animation())
		is_reloading = true
	
	
	EventBus.emit_signal(""weapon_reload"", is_reloading)
	
	_update_ui()

func _change_shooting_mode(ready_update : bool = false):
	# fire_mode = semi : 0, auto : 1, burst : 2
	# Single modes are not described, because they don't need logic
	if(ready_update):
		match available_shooting_modes:
			1: #Semi
				fire_mode = 0
			2: # Auto
				fire_mode = 1
			4: # Burst
				fire_mode = 2
	else:
		match available_shooting_modes:
			1: #Semi
				fire_mode = 0
			2: # Auto
				fire_mode = 1
			4: # Burst
				fire_mode = 2
			3: #Semi : 1 + Auto : 2
				if(fire_mode == 0): fire_mode = 1
				else : fire_mode = 0 
				print(""shkibididop"")
			5: #Burst : 4 + Semi : 1
				if(fire_mode == 0): fire_mode = 2
				else : fire_mode = 0 
			6: #Auto : 2 + burst : 4
				if(fire_mode == 1): fire_mode = 2
				else : fire_mode = 1 
			7: #Semi : 1 + Auto : 2 + Burst : 4
				if(fire_mode == 0): fire_mode = 1
				elif(fire_mode == 1) : fire_mode = 2
				else : fire_mode =  0
		
		if _audio_fire_mode_switch_stream_player:
			_audio_fire_mode_switch_stream_player.pitch_scale = randf_range(0.9,1.1)
			_audio_fire_mode_switch_stream_player.play()
	
	if(available_shooting_modes == 0):
		DebugOutput.print_warning(""Please select at least one shooting mode! : "" + str(self))
	
	_update_ui()

func random_recoil():
	var camera_kick : Vector3
	
	if is_aiming:
		camera_kick = Vector3(
			randf_range(aim_camera_kick.x / 2,aim_camera_kick.x),
			randf_range(-aim_camera_kick.y,aim_camera_kick.y),
			randf_range(-aim_camera_kick.z,aim_camera_kick.z)
		) * non_stop
	else:
		camera_kick = Vector3(
			randf_range( hip_camera_kick.x / 2,hip_camera_kick.x),
			randf_range(-hip_camera_kick.y,hip_camera_kick.y),
			randf_range(-hip_camera_kick.z,hip_camera_kick.z)
		) * non_stop
	
	EventBus.emit_signal(""weapon_recoil"", camera_kick, snappinnes, return_speed)

func _update_ui():
	if ui_element != null:
		ui_element.ammos.text = str(clip) + ""/"" + str(magazine)
		ui_element.fire_mode.text = fire_mode_str[fire_mode]

func _get_random_impulse():
	return Vector3(
					randf_range(min_impulse.x,max_impulse.x),
					randf_range(min_impulse.y,max_impulse.y),
					randf_range(min_impulse.z,max_impulse.z)
					) 

func _procedural_animation(_delta : float):
	if !procedural_animation_enabled:
		return
	if is_aiming == previous_aim_state:
		return
	
	previous_aim_state = is_aiming
	var new_tween = get_tree().create_tween()
	
	if (is_aiming):
		EventBus.emit_signal(""weapon_aim"", aim_camera_zoom, aim_speed, is_aiming)
	else:
		EventBus.emit_signal(""weapon_aim"", 1, aim_speed, is_aiming)
	
	if is_aiming:
		new_tween.tween_property(self, ""position"",aim_position, aim_speed).set_trans(Tween.TRANS_SINE)
		new_tween.parallel()
		new_tween.tween_property(self, ""rotation_degrees"",aim_rotation, aim_speed).set_trans(Tween.TRANS_SINE)
		
		new_tween.play()
		#position = lerp(position, aim_position, aim_speed * delta)
		#rotation_degrees = lerp(rotation_degrees, aim_rotation, aim_speed * delta)
	else:
		new_tween.tween_property(self, ""position"",standart_position, aim_speed).set_trans(Tween.TRANS_SINE)
		new_tween.parallel()
		new_tween.tween_property(self, ""rotation_degrees"",standart_rotation, aim_speed).set_trans(Tween.TRANS_SINE)
		
		new_tween.play()
		
		#position = lerp(position, standart_position, aim_speed * delta)
		#rotation_degrees = lerp(rotation_degrees, standart_rotation, aim_speed * delta)

func _animation_handler(animation_name : String):
	if (animation_name in _animations_take_out.get_pack() + _animations_fire.get_pack() + _animations_reload.get_pack() + _animations_tactical_reload.get_pack()):
		var rand_animation : String = _animations_idle.get_rand_animation()
		
		if(animation_name in _animations_reload.get_pack() + _animations_tactical_reload.get_pack()):
			is_reloading = false
			EventBus.emit_signal(""weapon_reload"", is_reloading)
		
		if(animation_name in _animations_take_out.get_pack()):
			is_take_out = false
		
		_play_animation(rand_animation)

func _play_vfx():
	if !Global.decals_enabled:
		return
	
	tracer_instance = bullet_tracer.instantiate()
	bullet_pos.add_child(tracer_instance)
	#bullet_tracer.global_transform = bullet_pos.global_transform
	tracer_instance.top_level = true
	
	if weapon_ray_cast_3d.is_colliding():
		var collider = weapon_ray_cast_3d.get_collider()
		if collider:
			if !collider.is_in_group(""dynamic_object""):
				var decal = bullet_hole_decal.instantiate()
				decal.collider = collider
				collider.add_child(decal)
				decal.global_transform.origin = weapon_ray_cast_3d.get_collision_point()
				decal.look_at(Global.player.neck.global_rotation, weapon_ray_cast_3d.get_collision_normal())
	
	if _gpu_particles:_gpu_particles.emitting = true
	if _omni_light:_omni_light.visible = true
	await get_tree().create_timer(timer_wait).timeout
	if _gpu_particles:_gpu_particles.emitting = false
	if _omni_light:_omni_light.visible = false


func _play_animation(anim_name : String):
	if _animation_player:
		_animation_player.play(anim_name)

func change_visible(visible_weapon : bool = false):
	if (visible_weapon == visible):
		return
	else:
		visible = visible_weapon
	
		if(visible_weapon and _animations_take_out.get_size() > -1):
			_animation_player.stop()
			_play_animation(_animations_take_out.get_rand_animation())
			is_take_out = true

#Func for track in AnimationPlayer
func end_reloading():
	is_reloading = false
	EventBus.emit_signal(""weapon_reload"", is_reloading)

func end_take_out():
	is_take_out = false"
2P1eTmhV,data931,TestGuy1,JSON,Sunday 19th of May 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '38d24ccfcb306583bc54f430c5da028c98fcf72bec12f84493edcdbaf161f7a7ff71258588f91078be548453b019abba3d9263b1af550e85071d88f7135b06472821f9acc0fc66bccf30f413a15417824eb1cefa83d55143a972717c47250d3ab505ea31f3fadd5da247539c6b2df7b3457ab3ebc3568d77bae41fdc948ef1e9',
  otherdata: [
    '3e0194c51dd9971d1d69733e28a35d7e',
    'd2fd9028e46b4e653330c15da27dd62a',
    '9448775cc9d8a08b46f3cac31f94709f',
    '01fd156109b8b0cab58464ee05e85a18',
    '19ee6780b650c4f63a87a2a977c082e5',
    '0f77df624c7e28d8327e9eddff4d9bf1',
    'c5239c894f8a3b630c6d8ee8b2d3934f',
    'bc682331ea98789ca106279f674a96ca'
  ]
}"
zdyrJ0xT,Untitled,Arch_of_Triumph,C++,Sunday 19th of May 2024 05:23:37 AM CDT,"#include <bits/stdc++.h>

#define sz(x) (int)x.size()

using namespace std;

const int N = (int)2e5 + 7;

int n, m, a[N];

int getNum(string s) {
    int res = 0;
    for (int i = 0; i < sz(s); i++) {
        if (s[i] == '-')
            continue;
        res = res * 10 + s[i] - '0';
    }
    if (s[0] == '-')
        res = -res;
    return res;
}

int main() { 
    cin >> n;

    for (int i = 0; i < n; i++)
        cin >> a[i];

    cin >> m;
    string s;
    getline(cin, s);
    while (m--) {
        getline(cin, s);

        int cnt = 0;
        for (int i = 0; i < sz(s); i++)
            if (s[i] == ' ')
                cnt++;

        if (cnt == 1) {
            string lnum = """", rnum = """";
            int l = 0, r = 0;
            for (int i = 0; i < sz(s); i++) {
                if (s[i] == ' ') {
                    l = getNum(lnum);
                    for (int j = i + 1; j < sz(s); j++)
                        rnum += s[j];
                    r = getNum(rnum);
                    break;
                }
                lnum += s[i];
            }
            // cout << l << ' ' << r << endl;
        } else {
            string lnum = """", rnum = """", xnum = """";
            int l = 0, r = 0, x = 0;
            cnt = 0;
            for (int i = 0; i < sz(s); i++) {
                if (s[i] == ' ') {
                    cnt++;
                    if (cnt == 1)
                        l = getNum(lnum);
                    if (cnt == 2)
                        r = getNum(rnum);
                } else {
                    if (cnt == 0)
                        lnum += s[i];
                    else if (cnt == 1)
                        rnum += s[i];
                    else if (cnt == 2)
                        xnum += s[i];
                }
            }
            x = getNum(xnum);
            // cout << l << ' ' << r << ' ' << x << endl;
        }
    }

}"
Mkv2dsDe,CREATE TABLE IF NOT EXISTS,cydside,SQL,Sunday 19th of May 2024 05:21:45 AM CDT,"CREATE TABLE [IF NOT EXISTS] [schema_name].table_name (
	column_1 INTEGER PRIMARY KEY,
   	column_2 INTEGER NOT NULL,
	column_3 REAL DEFAULT 0,
	column_4 TEXT,
	column_5 BLOB DEFAULT NULL,
	table_constraints
) [WITHOUT ROWID];

CREATE TABLE IF NOT EXISTS t (a INTEGER PRIMARY KEY, b INTEGER NOT NULL, c REAL DEFAULT 0, d TEXT, e BLOB DEFAULT NULL);

DROP TABLE IF EXISTS t;"
