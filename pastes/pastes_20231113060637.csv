id,title,username,language,date,content
zv03nxGQ,Untitled,SomewhereOutInSpace,Rust,Sunday 12th of November 2023 11:47:24 PM CDT,"use serde::Deserialize;

#[derive(Debug, Deserialize)]
struct Article {
    text: String
}

fn main() {
    let data = std::fs::read_to_string(""/var/home/colonial/wikipedia.json"")
        .unwrap();

    let trim = data
        .trim_start_matches('[')
        .trim_end_matches(""],"");

    let mut occurrences = [0_usize; 128];

    for line in trim.lines() {
        let line = line.trim_end_matches(',');

        let article = match serde_json::from_str::<Article>(line) {
            Ok(article) => article,
            Err(_) => continue
        };


        article
            .text
            .chars()
            .filter(|c| c.is_ascii())
            .for_each(|c| {
                occurrences[c as u8 as usize] += 1;
            })
    }

    for (i, count) in occurrences.iter().enumerate() {
        println!(
            ""{} ({}) {}"",
            i as u8 as char,
            i,
            count
        )
    }

    println!();
    println!(""Total: {}"", occurrences.iter().sum::<usize>())
}
"
Psmw6tvJ,BTC Wallet Credentials have been reset,castlclass_20,GetText,Sunday 12th of November 2023 11:36:51 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
ektodermasv:w45N4k on 212.224.93.130
You can connect via SSH.
Regards"
1xVWvgUH,m01710_a0-optimized.cl,little2379,C,Sunday 12th of November 2023 11:29:41 PM CDT,"/**
 * Author......: See docs/credits.txt
 * License.....: MIT
 */

#define NEW_SIMD_CODE

#ifdef KERNEL_STATIC
#include M2S(INCLUDE_PATH/inc_vendor.h)
#include M2S(INCLUDE_PATH/inc_types.h)
#include M2S(INCLUDE_PATH/inc_platform.cl)
#include M2S(INCLUDE_PATH/inc_common.cl)
#include M2S(INCLUDE_PATH/inc_rp_optimized.h)
#include M2S(INCLUDE_PATH/inc_rp_optimized.cl)
#include M2S(INCLUDE_PATH/inc_simd.cl)
#include M2S(INCLUDE_PATH/inc_hash_sha512.cl)
#endif

DECLSPEC void sha512_transform_intern (PRIVATE_AS const u32x *w0, PRIVATE_AS const u32x *w1, PRIVATE_AS const u32x *w2, PRIVATE_AS const u32x *w3, PRIVATE_AS u64x *digest)
{
  u64x w0_t = hl32_to_64 (w0[0], w0[1]);
  u64x w1_t = hl32_to_64 (w0[2], w0[3]);
  u64x w2_t = hl32_to_64 (w1[0], w1[1]);
  u64x w3_t = hl32_to_64 (w1[2], w1[3]);
  u64x w4_t = hl32_to_64 (w2[0], w2[1]);
  u64x w5_t = hl32_to_64 (w2[2], w2[3]);
  u64x w6_t = hl32_to_64 (w3[0], w3[1]);
  u64x w7_t = 0;
  u64x w8_t = 0;
  u64x w9_t = 0;
  u64x wa_t = 0;
  u64x wb_t = 0;
  u64x wc_t = 0;
  u64x wd_t = 0;
  u64x we_t = 0;
  u64x wf_t = hl32_to_64 (w3[2], w3[3]);

  u64x a = digest[0];
  u64x b = digest[1];
  u64x c = digest[2];
  u64x d = digest[3];
  u64x e = digest[4];
  u64x f = digest[5];
  u64x g = digest[6];
  u64x h = digest[7];

  #define ROUND_EXPAND()                            \
  {                                                 \
    w0_t = SHA512_EXPAND (we_t, w9_t, w1_t, w0_t);  \
    w1_t = SHA512_EXPAND (wf_t, wa_t, w2_t, w1_t);  \
    w2_t = SHA512_EXPAND (w0_t, wb_t, w3_t, w2_t);  \
    w3_t = SHA512_EXPAND (w1_t, wc_t, w4_t, w3_t);  \
    w4_t = SHA512_EXPAND (w2_t, wd_t, w5_t, w4_t);  \
    w5_t = SHA512_EXPAND (w3_t, we_t, w6_t, w5_t);  \
    w6_t = SHA512_EXPAND (w4_t, wf_t, w7_t, w6_t);  \
    w7_t = SHA512_EXPAND (w5_t, w0_t, w8_t, w7_t);  \
    w8_t = SHA512_EXPAND (w6_t, w1_t, w9_t, w8_t);  \
    w9_t = SHA512_EXPAND (w7_t, w2_t, wa_t, w9_t);  \
    wa_t = SHA512_EXPAND (w8_t, w3_t, wb_t, wa_t);  \
    wb_t = SHA512_EXPAND (w9_t, w4_t, wc_t, wb_t);  \
    wc_t = SHA512_EXPAND (wa_t, w5_t, wd_t, wc_t);  \
    wd_t = SHA512_EXPAND (wb_t, w6_t, we_t, wd_t);  \
    we_t = SHA512_EXPAND (wc_t, w7_t, wf_t, we_t);  \
    wf_t = SHA512_EXPAND (wd_t, w8_t, w0_t, wf_t);  \
  }

  #define ROUND_STEP(i)                                                                   \
  {                                                                                       \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, a, b, c, d, e, f, g, h, w0_t, k_sha512[i +  0]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, h, a, b, c, d, e, f, g, w1_t, k_sha512[i +  1]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, g, h, a, b, c, d, e, f, w2_t, k_sha512[i +  2]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, f, g, h, a, b, c, d, e, w3_t, k_sha512[i +  3]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, e, f, g, h, a, b, c, d, w4_t, k_sha512[i +  4]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, d, e, f, g, h, a, b, c, w5_t, k_sha512[i +  5]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, c, d, e, f, g, h, a, b, w6_t, k_sha512[i +  6]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, b, c, d, e, f, g, h, a, w7_t, k_sha512[i +  7]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, a, b, c, d, e, f, g, h, w8_t, k_sha512[i +  8]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, h, a, b, c, d, e, f, g, w9_t, k_sha512[i +  9]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, g, h, a, b, c, d, e, f, wa_t, k_sha512[i + 10]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, f, g, h, a, b, c, d, e, wb_t, k_sha512[i + 11]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, e, f, g, h, a, b, c, d, wc_t, k_sha512[i + 12]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, d, e, f, g, h, a, b, c, wd_t, k_sha512[i + 13]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, c, d, e, f, g, h, a, b, we_t, k_sha512[i + 14]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, b, c, d, e, f, g, h, a, wf_t, k_sha512[i + 15]); \
  }

  ROUND_STEP (0);

  #if defined IS_CUDA
  ROUND_EXPAND (); ROUND_STEP (16);
  ROUND_EXPAND (); ROUND_STEP (32);
  ROUND_EXPAND (); ROUND_STEP (48);
  ROUND_EXPAND (); ROUND_STEP (64);
  #else
  #ifdef _unroll
  #pragma unroll
  #endif
  for (int i = 16; i < 80; i += 16)
  {
    ROUND_EXPAND (); ROUND_STEP (i);
  }
  #endif

  /* rev
  digest[0] += a;
  digest[1] += b;
  digest[2] += c;
  digest[3] += d;
  digest[4] += e;
  digest[5] += f;
  digest[6] += g;
  digest[7] += h;
  */

  digest[0] = a;
  digest[1] = b;
  digest[2] = c;
  digest[3] = d;
  digest[4] = e;
  digest[5] = f;
  digest[6] = g;
  digest[7] = h;
}

KERNEL_FQ void m01710_m04 (KERN_ATTR_RULES ())
{
  /**
   * modifier
   */

  const u64 lid = get_local_id (0);

  /**
   * base
   */

  const u64 gid = get_global_id (0);

  if (gid >= GID_CNT) return;

  u32 pw_buf0[4];
  u32 pw_buf1[4];

  pw_buf0[0] = pws[gid].i[0];
  pw_buf0[1] = pws[gid].i[1];
  pw_buf0[2] = pws[gid].i[2];
  pw_buf0[3] = pws[gid].i[3];
  pw_buf1[0] = pws[gid].i[4];
  pw_buf1[1] = pws[gid].i[5];
  pw_buf1[2] = pws[gid].i[6];
  pw_buf1[3] = pws[gid].i[7];

  const u32 pw_len = pws[gid].pw_len & 63;

  /**
   * salt
   */

  u32 salt_buf0[4];
  u32 salt_buf1[4];
  u32 salt_buf2[4];
  u32 salt_buf3[4];

  salt_buf0[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 0];
  salt_buf0[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 1];
  salt_buf0[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 2];
  salt_buf0[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 3];
  salt_buf1[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 4];
  salt_buf1[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 5];
  salt_buf1[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 6];
  salt_buf1[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 7];
  salt_buf2[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 8];
  salt_buf2[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 9];
  salt_buf2[2] = salt_bufs[SALT_POS_HOST].salt_buf[10];
  salt_buf2[3] = salt_bufs[SALT_POS_HOST].salt_buf[11];
  salt_buf3[0] = salt_bufs[SALT_POS_HOST].salt_buf[12];
  salt_buf3[1] = salt_bufs[SALT_POS_HOST].salt_buf[13];
  salt_buf3[2] = salt_bufs[SALT_POS_HOST].salt_buf[14];
  salt_buf3[3] = salt_bufs[SALT_POS_HOST].salt_buf[15];

  const u32 salt_len = salt_bufs[SALT_POS_HOST].salt_len;

  /**
   * loop
   */

  for (u32 il_pos = 0; il_pos < IL_CNT; il_pos += VECT_SIZE)
  {
    u32x w0[4] = { 0 };
    u32x w1[4] = { 0 };
    u32x w2[4] = { 0 };
    u32x w3[4] = { 0 };

    const u32x out_len = apply_rules_vect_optimized (pw_buf0, pw_buf1, pw_len, rules_buf, il_pos, w0, w1);

    /**
     * append salt
     */

    u32x s0[4];
    u32x s1[4];
    u32x s2[4];
    u32x s3[4];

    s0[0] = salt_buf0[0];
    s0[1] = salt_buf0[1];
    s0[2] = salt_buf0[2];
    s0[3] = salt_buf0[3];
    s1[0] = salt_buf1[0];
    s1[1] = salt_buf1[1];
    s1[2] = salt_buf1[2];
    s1[3] = salt_buf1[3];
    s2[0] = salt_buf2[0];
    s2[1] = salt_buf2[1];
    s2[2] = salt_buf2[2];
    s2[3] = salt_buf2[3];
    s3[0] = salt_buf3[0];
    s3[1] = salt_buf3[1];
    s3[2] = salt_buf3[2];
    s3[3] = salt_buf3[3];

    switch_buffer_by_offset_le_VV (s0, s1, s2, s3, out_len);

    const u32x pw_salt_len = out_len + salt_len;

    w0[0] |= s0[0];
    w0[1] |= s0[1];
    w0[2] |= s0[2];
    w0[3] |= s0[3];
    w1[0] |= s1[0];
    w1[1] |= s1[1];
    w1[2] |= s1[2];
    w1[3] |= s1[3];
    w2[0] |= s2[0];
    w2[1] |= s2[1];
    w2[2] |= s2[2];
    w2[3] |= s2[3];
    w3[0] |= s3[0];
    w3[1] |= s3[1];
    w3[2] |= s3[2];
    w3[3] |= s3[3];

    /**
     * sha512
     */

    u32x w0_t[4];
    u32x w1_t[4];
    u32x w2_t[4];
    u32x w3_t[4];

    w0_t[0] = hc_swap32 (w0[0]);
    w0_t[1] = hc_swap32 (w0[1]);
    w0_t[2] = hc_swap32 (w0[2]);
    w0_t[3] = hc_swap32 (w0[3]);
    w1_t[0] = hc_swap32 (w1[0]);
    w1_t[1] = hc_swap32 (w1[1]);
    w1_t[2] = hc_swap32 (w1[2]);
    w1_t[3] = hc_swap32 (w1[3]);
    w2_t[0] = hc_swap32 (w2[0]);
    w2_t[1] = hc_swap32 (w2[1]);
    w2_t[2] = hc_swap32 (w2[2]);
    w2_t[3] = hc_swap32 (w2[3]);
    w3_t[0] = hc_swap32 (w3[0]);
    w3_t[1] = hc_swap32 (w3[1]);
    w3_t[2] = 0;
    w3_t[3] = pw_salt_len * 8;

    u64x digest[8];

    digest[0] = SHA512M_A;
    digest[1] = SHA512M_B;
    digest[2] = SHA512M_C;
    digest[3] = SHA512M_D;
    digest[4] = SHA512M_E;
    digest[5] = SHA512M_F;
    digest[6] = SHA512M_G;
    digest[7] = SHA512M_H;

    sha512_transform_intern (w0_t, w1_t, w2_t, w3_t, digest);

    const u32x r0 = l32_from_64 (digest[7]);
    const u32x r1 = h32_from_64 (digest[7]);
    const u32x r2 = l32_from_64 (digest[3]);
    const u32x r3 = h32_from_64 (digest[3]);

    COMPARE_M_SIMD (r0, r1, r2, r3);
  }
}

KERNEL_FQ void m01710_m08 (KERN_ATTR_RULES ())
{
}

KERNEL_FQ void m01710_m16 (KERN_ATTR_RULES ())
{
}

KERNEL_FQ void m01710_s04 (KERN_ATTR_RULES ())
{
  /**
   * modifier
   */

  const u64 lid = get_local_id (0);

  /**
   * base
   */

  const u64 gid = get_global_id (0);

  if (gid >= GID_CNT) return;

  u32 pw_buf0[4];
  u32 pw_buf1[4];

  pw_buf0[0] = pws[gid].i[0];
  pw_buf0[1] = pws[gid].i[1];
  pw_buf0[2] = pws[gid].i[2];
  pw_buf0[3] = pws[gid].i[3];
  pw_buf1[0] = pws[gid].i[4];
  pw_buf1[1] = pws[gid].i[5];
  pw_buf1[2] = pws[gid].i[6];
  pw_buf1[3] = pws[gid].i[7];

  const u32 pw_len = pws[gid].pw_len & 63;

  /**
   * salt
   */

  u32 salt_buf0[4];
  u32 salt_buf1[4];
  u32 salt_buf2[4];
  u32 salt_buf3[4];

  salt_buf0[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 0];
  salt_buf0[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 1];
  salt_buf0[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 2];
  salt_buf0[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 3];
  salt_buf1[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 4];
  salt_buf1[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 5];
  salt_buf1[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 6];
  salt_buf1[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 7];
  salt_buf2[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 8];
  salt_buf2[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 9];
  salt_buf2[2] = salt_bufs[SALT_POS_HOST].salt_buf[10];
  salt_buf2[3] = salt_bufs[SALT_POS_HOST].salt_buf[11];
  salt_buf3[0] = salt_bufs[SALT_POS_HOST].salt_buf[12];
  salt_buf3[1] = salt_bufs[SALT_POS_HOST].salt_buf[13];
  salt_buf3[2] = salt_bufs[SALT_POS_HOST].salt_buf[14];
  salt_buf3[3] = salt_bufs[SALT_POS_HOST].salt_buf[15];

  const u32 salt_len = salt_bufs[SALT_POS_HOST].salt_len;

  /**
   * digest
   */

  const u32 search[4] =
  {
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R0],
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R1],
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R2],
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R3]
  };

  /**
   * loop
   */

  for (u32 il_pos = 0; il_pos < IL_CNT; il_pos += VECT_SIZE)
  {
    u32x w0[4] = { 0 };
    u32x w1[4] = { 0 };
    u32x w2[4] = { 0 };
    u32x w3[4] = { 0 };

    const u32x out_len = apply_rules_vect_optimized (pw_buf0, pw_buf1, pw_len, rules_buf, il_pos, w0, w1);

    /**
     * append salt
     */

    u32x s0[4];
    u32x s1[4];
    u32x s2[4];
    u32x s3[4];

    s0[0] = salt_buf0[0];
    s0[1] = salt_buf0[1];
    s0[2] = salt_buf0[2];
    s0[3] = salt_buf0[3];
    s1[0] = salt_buf1[0];
    s1[1] = salt_buf1[1];
    s1[2] = salt_buf1[2];
    s1[3] = salt_buf1[3];
    s2[0] = salt_buf2[0];
    s2[1] = salt_buf2[1];
    s2[2] = salt_buf2[2];
    s2[3] = salt_buf2[3];
    s3[0] = salt_buf3[0];
    s3[1] = salt_buf3[1];
    s3[2] = salt_buf3[2];
    s3[3] = salt_buf3[3];

    switch_buffer_by_offset_le_VV (s0, s1, s2, s3, out_len);

    const u32x pw_salt_len = out_len + salt_len;

    w0[0] |= s0[0];
    w0[1] |= s0[1];
    w0[2] |= s0[2];
    w0[3] |= s0[3];
    w1[0] |= s1[0];
    w1[1] |= s1[1];
    w1[2] |= s1[2];
    w1[3] |= s1[3];
    w2[0] |= s2[0];
    w2[1] |= s2[1];
    w2[2] |= s2[2];
    w2[3] |= s2[3];
    w3[0] |= s3[0];
    w3[1] |= s3[1];
    w3[2] |= s3[2];
    w3[3] |= s3[3];

    /**
     * sha512
     */

    u32x w0_t[4];
    u32x w1_t[4];
    u32x w2_t[4];
    u32x w3_t[4];

    w0_t[0] = hc_swap32 (w0[0]);
    w0_t[1] = hc_swap32 (w0[1]);
    w0_t[2] = hc_swap32 (w0[2]);
    w0_t[3] = hc_swap32 (w0[3]);
    w1_t[0] = hc_swap32 (w1[0]);
    w1_t[1] = hc_swap32 (w1[1]);
    w1_t[2] = hc_swap32 (w1[2]);
    w1_t[3] = hc_swap32 (w1[3]);
    w2_t[0] = hc_swap32 (w2[0]);
    w2_t[1] = hc_swap32 (w2[1]);
    w2_t[2] = hc_swap32 (w2[2]);
    w2_t[3] = hc_swap32 (w2[3]);
    w3_t[0] = hc_swap32 (w3[0]);
    w3_t[1] = hc_swap32 (w3[1]);
    w3_t[2] = 0;
    w3_t[3] = pw_salt_len * 8;

    u64x digest[8];

    digest[0] = SHA512M_A;
    digest[1] = SHA512M_B;
    digest[2] = SHA512M_C;
    digest[3] = SHA512M_D;
    digest[4] = SHA512M_E;
    digest[5] = SHA512M_F;
    digest[6] = SHA512M_G;
    digest[7] = SHA512M_H;

    sha512_transform_intern (w0_t, w1_t, w2_t, w3_t, digest);

    const u32x r0 = l32_from_64 (digest[7]);
    const u32x r1 = h32_from_64 (digest[7]);
    const u32x r2 = l32_from_64 (digest[3]);
    const u32x r3 = h32_from_64 (digest[3]);

    COMPARE_S_SIMD (r0, r1, r2, r3);
  }
}

KERNEL_FQ void m01710_s08 (KERN_ATTR_RULES ())
{
}

KERNEL_FQ void m01710_s16 (KERN_ATTR_RULES ())
{
}"
thGWzmJF,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Sunday 12th of November 2023 11:20:44 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT285931"
Ze5r4XHh,m01712_a0-optimized.cl,little2379,C,Sunday 12th of November 2023 10:46:25 PM CDT,"/**
 * Author......: See docs/credits.txt
 * License.....: MIT
 */

#define NEW_SIMD_CODE

#ifdef KERNEL_STATIC
#include M2S(INCLUDE_PATH/inc_vendor.h)
#include M2S(INCLUDE_PATH/inc_types.h)
#include M2S(INCLUDE_PATH/inc_platform.cl)
#include M2S(INCLUDE_PATH/inc_common.cl)
#include M2S(INCLUDE_PATH/inc_rp_optimized.h)
#include M2S(INCLUDE_PATH/inc_rp_optimized.cl)
#include M2S(INCLUDE_PATH/inc_simd.cl)
#include M2S(INCLUDE_PATH/inc_hash_sha512.cl)
#endif

DECLSPEC void sha512_transform_intern (PRIVATE_AS const u32x *w0, PRIVATE_AS const u32x *w1, PRIVATE_AS const u32x *w2, PRIVATE_AS const u32x *w3, PRIVATE_AS u64x *digest)
{
  u64x w0_t = hl32_to_64 (w0[0], w0[1]);
  u64x w1_t = hl32_to_64 (w0[2], w0[3]);
  u64x w2_t = hl32_to_64 (w1[0], w1[1]);
  u64x w3_t = hl32_to_64 (w1[2], w1[3]);
  u64x w4_t = hl32_to_64 (w2[0], w2[1]);
  u64x w5_t = hl32_to_64 (w2[2], w2[3]);
  u64x w6_t = hl32_to_64 (w3[0], w3[1]);
  u64x w7_t = 0;
  u64x w8_t = 0;
  u64x w9_t = 0;
  u64x wa_t = 0;
  u64x wb_t = 0;
  u64x wc_t = 0;
  u64x wd_t = 0;
  u64x we_t = 0;
  u64x wf_t = hl32_to_64 (w3[2], w3[3]);

  u64x a = digest[0];
  u64x b = digest[1];
  u64x c = digest[2];
  u64x d = digest[3];
  u64x e = digest[4];
  u64x f = digest[5];
  u64x g = digest[6];
  u64x h = digest[7];

  #define ROUND_EXPAND()                            \
  {                                                 \
    w0_t = SHA512_EXPAND (we_t, w9_t, w1_t, w0_t);  \
    w1_t = SHA512_EXPAND (wf_t, wa_t, w2_t, w1_t);  \
    w2_t = SHA512_EXPAND (w0_t, wb_t, w3_t, w2_t);  \
    w3_t = SHA512_EXPAND (w1_t, wc_t, w4_t, w3_t);  \
    w4_t = SHA512_EXPAND (w2_t, wd_t, w5_t, w4_t);  \
    w5_t = SHA512_EXPAND (w3_t, we_t, w6_t, w5_t);  \
    w6_t = SHA512_EXPAND (w4_t, wf_t, w7_t, w6_t);  \
    w7_t = SHA512_EXPAND (w5_t, w0_t, w8_t, w7_t);  \
    w8_t = SHA512_EXPAND (w6_t, w1_t, w9_t, w8_t);  \
    w9_t = SHA512_EXPAND (w7_t, w2_t, wa_t, w9_t);  \
    wa_t = SHA512_EXPAND (w8_t, w3_t, wb_t, wa_t);  \
    wb_t = SHA512_EXPAND (w9_t, w4_t, wc_t, wb_t);  \
    wc_t = SHA512_EXPAND (wa_t, w5_t, wd_t, wc_t);  \
    wd_t = SHA512_EXPAND (wb_t, w6_t, we_t, wd_t);  \
    we_t = SHA512_EXPAND (wc_t, w7_t, wf_t, we_t);  \
    wf_t = SHA512_EXPAND (wd_t, w8_t, w0_t, wf_t);  \
  }


  #define ROUND_STEP(i)                                                                   \
  {                                                                                       \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, a, b, c, d, e, f, g, h, w0_t, k_sha512[i +  0]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, h, a, b, c, d, e, f, g, w1_t, k_sha512[i +  1]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, g, h, a, b, c, d, e, f, w2_t, k_sha512[i +  2]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, f, g, h, a, b, c, d, e, w3_t, k_sha512[i +  3]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, e, f, g, h, a, b, c, d, w4_t, k_sha512[i +  4]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, d, e, f, g, h, a, b, c, w5_t, k_sha512[i +  5]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, c, d, e, f, g, h, a, b, w6_t, k_sha512[i +  6]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, b, c, d, e, f, g, h, a, w7_t, k_sha512[i +  7]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, a, b, c, d, e, f, g, h, w8_t, k_sha512[i +  8]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, h, a, b, c, d, e, f, g, w9_t, k_sha512[i +  9]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, g, h, a, b, c, d, e, f, wa_t, k_sha512[i + 10]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, f, g, h, a, b, c, d, e, wb_t, k_sha512[i + 11]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, e, f, g, h, a, b, c, d, wc_t, k_sha512[i + 12]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, d, e, f, g, h, a, b, c, wd_t, k_sha512[i + 13]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, c, d, e, f, g, h, a, b, we_t, k_sha512[i + 14]); \
    SHA512_STEP (SHA512_F0o, SHA512_F1o, b, c, d, e, f, g, h, a, wf_t, k_sha512[i + 15]); \
  }

  ROUND_STEP (0);

  #if defined IS_CUDA
  ROUND_EXPAND (); ROUND_STEP (16);
  ROUND_EXPAND (); ROUND_STEP (32);
  ROUND_EXPAND (); ROUND_STEP (48);
  ROUND_EXPAND (); ROUND_STEP (64);
  #else
  #ifdef _unroll
  #pragma unroll
  #endif
  for (int i = 16; i < 80; i += 16)
  {
    ROUND_EXPAND (); ROUND_STEP (i);
  }
  #endif

  digest[0] = a;
  digest[1] = b;
  digest[2] = c;
  digest[3] = d;
  digest[4] = e;
  digest[5] = f;
  digest[6] = g;
  digest[7] = h;
}

KERNEL_FQ void m01712_m04 (KERN_ATTR_RULES ())
{
  /**
   * modifier
   */

  const u64 lid = get_local_id (0);

  /**
   * base
   */

  const u64 gid = get_global_id (0);

  if (gid >= GID_CNT) return;

  u32 pw_buf0[4];
  u32 pw_buf1[4];

  pw_buf0[0] = pws[gid].i[0];
  pw_buf0[1] = pws[gid].i[1];
  pw_buf0[2] = pws[gid].i[2];
  pw_buf0[3] = pws[gid].i[3];
  pw_buf1[0] = pws[gid].i[4];
  pw_buf1[1] = pws[gid].i[5];
  pw_buf1[2] = pws[gid].i[6];
  pw_buf1[3] = pws[gid].i[7];

  const u32 pw_len = pws[gid].pw_len & 63;

  /**
   * salt
   */

  u32 salt_buf0[4];
  u32 salt_buf1[4];
  u32 salt_buf2[4];
  u32 salt_buf3[4];

  salt_buf0[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 0];
  salt_buf0[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 1];
  salt_buf0[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 2];
  salt_buf0[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 3];
  salt_buf1[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 4];
  salt_buf1[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 5];
  salt_buf1[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 6];
  salt_buf1[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 7];
  salt_buf2[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 8];
  salt_buf2[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 9];
  salt_buf2[2] = salt_bufs[SALT_POS_HOST].salt_buf[10];
  salt_buf2[3] = salt_bufs[SALT_POS_HOST].salt_buf[11];
  salt_buf3[0] = salt_bufs[SALT_POS_HOST].salt_buf[12];
  salt_buf3[1] = salt_bufs[SALT_POS_HOST].salt_buf[13];
  salt_buf3[2] = salt_bufs[SALT_POS_HOST].salt_buf[14];
  salt_buf3[3] = salt_bufs[SALT_POS_HOST].salt_buf[15];

  const u32 salt_len = salt_bufs[SALT_POS_HOST].salt_len;

  /**
   * loop
   */

  for (u32 il_pos = 0; il_pos < IL_CNT; il_pos += VECT_SIZE)
  {
    u32x w0[4] = { 0 };
    u32x w1[4] = { 0 };
    u32x w2[4] = { 0 };
    u32x w3[4] = { 0 };

        const u32x out_len = apply_rules_vect_optimized (pw_buf0, pw_buf1, pw_len, rules_buf, il_pos, w0, w1);

    /**
     * append salt
     */

    u32x s0[4];
    u32x s1[4];
    u32x s2[4];
    u32x s3[4];

    s0[0] = salt_buf0[0];
    s0[1] = salt_buf0[1];
    s0[2] = salt_buf0[2];
    s0[3] = salt_buf0[3];
    s1[0] = salt_buf1[0];
    s1[1] = salt_buf1[1];
    s1[2] = salt_buf1[2];
    s1[3] = salt_buf1[3];
    s2[0] = salt_buf2[0];
    s2[1] = salt_buf2[1];
    s2[2] = salt_buf2[2];
    s2[3] = salt_buf2[3];
    s3[0] = salt_buf3[0];
    s3[1] = salt_buf3[1];
    s3[2] = salt_buf3[2];
    s3[3] = salt_buf3[3];

    switch_buffer_by_offset_le_VV (s0, s1, s2, s3, out_len);

    const u32x pw_salt_len = out_len + salt_len;

    w0[0] |= s0[0];
    w0[1] |= s0[1];
    w0[2] |= s0[2];
    w0[3] |= s0[3];
    w1[0] |= s1[0];
    w1[1] |= s1[1];
    w1[2] |= s1[2];
    w1[3] |= s1[3];
    w2[0] |= s2[0];
    w2[1] |= s2[1];
    w2[2] |= s2[2];
    w2[3] |= s2[3];
    w3[0] |= s3[0];
    w3[1] |= s3[1];
    w3[2] |= s3[2];
    w3[3] |= s3[3];

    /**
     * sha512 with 12 rounds
     */

    u64x digest[8];

    digest[0] = SHA512M_A;
    digest[1] = SHA512M_B;
    digest[2] = SHA512M_C;
    digest[3] = SHA512M_D;
    digest[4] = SHA512M_E;
    digest[5] = SHA512M_F;
    digest[6] = SHA512M_G;
    digest[7] = SHA512M_H;

    for (int round = 0; round < 12; round++)
    {
        u32x w0_t[4] = { hc_swap32 (w0[0]), hc_swap32 (w0[1]), hc_swap32 (w0[2]), hc_swap32 (w0[3]) };
        u32x w1_t[4] = { hc_swap32 (w1[0]), hc_swap32 (w1[1]), hc_swap32 (w1[2]), hc_swap32 (w1[3]) };
        u32x w2_t[4] = { hc_swap32 (w2[0]), hc_swap32 (w2[1]), hc_swap32 (w2[2]), hc_swap32 (w2[3]) };
        u32x w3_t[4] = { hc_swap32 (w3[0]), hc_swap32 (w3[1]), 0, pw_salt_len * 8 };

        sha512_transform_intern (w0_t, w1_t, w2_t, w3_t, digest);

        // Prepare for the next round
        if (round < 11)
        {
            w0[0] = l32_from_64 (digest[0]);
            w0[1] = h32_from_64 (digest[0]);
            w0[2] = l32_from_64 (digest[1]);
            w0[3] = h32_from_64 (digest[1]);
            w1[0] = l32_from_64 (digest[2]);
            w1[1] = h32_from_64 (digest[2]);
            w1[2] = l32_from_64 (digest[3]);
            w1[3] = h32_from_64 (digest[3]);
            w2[0] = l32_from_64 (digest[4]);
            w2[1] = h32_from_64 (digest[4]);
            w2[2] = l32_from_64 (digest[5]);
            w2[3] = h32_from_64 (digest[5]);
            w3[0] = l32_from_64 (digest[6]);
            w3[1] = h32_from_64 (digest[6]);
            w3[2] = 0;
            w3[3] = pw_salt_len * 8;
        }
    }

    const u32x r0 = l32_from_64 (digest[7]);
    const u32x r1 = h32_from_64 (digest[7]);
    const u32x r2 = l32_from_64 (digest[3]);
    const u32x r3 = h32_from_64 (digest[3]);

    COMPARE_M_SIMD (r0, r1, r2, r3);
  }
}

KERNEL_FQ void m01712_m08 (KERN_ATTR_RULES ())
{
}

KERNEL_FQ void m01712_m16 (KERN_ATTR_RULES ())
{
}

KERNEL_FQ void m01712_s04 (KERN_ATTR_RULES ())
{
  /**
   * modifier
   */
  const u64 lid = get_local_id (0);

  /**
   * base
   */
  const u64 gid = get_global_id (0);

  if (gid >= GID_CNT) return;

  u32 pw_buf0[4];
  u32 pw_buf1[4];

  pw_buf0[0] = pws[gid].i[0];
  pw_buf0[1] = pws[gid].i[1];
  pw_buf0[2] = pws[gid].i[2];
  pw_buf0[3] = pws[gid].i[3];
  pw_buf1[0] = pws[gid].i[4];
  pw_buf1[1] = pws[gid].i[5];
  pw_buf1[2] = pws[gid].i[6];
  pw_buf1[3] = pws[gid].i[7];

  const u32 pw_len = pws[gid].pw_len & 63;

  /**
   * salt
   */
  u32 salt_buf0[4];
  u32 salt_buf1[4];
  u32 salt_buf2[4];
  u32 salt_buf3[4];

  salt_buf0[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 0];
  salt_buf0[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 1];
  salt_buf0[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 2];
  salt_buf0[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 3];
  salt_buf1[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 4];
  salt_buf1[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 5];
  salt_buf1[2] = salt_bufs[SALT_POS_HOST].salt_buf[ 6];
  salt_buf1[3] = salt_bufs[SALT_POS_HOST].salt_buf[ 7];
  salt_buf2[0] = salt_bufs[SALT_POS_HOST].salt_buf[ 8];
  salt_buf2[1] = salt_bufs[SALT_POS_HOST].salt_buf[ 9];
  salt_buf2[2] = salt_bufs[SALT_POS_HOST].salt_buf[10];
  salt_buf2[3] = salt_bufs[SALT_POS_HOST].salt_buf[11];
  salt_buf3[0] = salt_bufs[SALT_POS_HOST].salt_buf[12];
  salt_buf3[1] = salt_bufs[SALT_POS_HOST].salt_buf[13];
  salt_buf3[2] = salt_bufs[SALT_POS_HOST].salt_buf[14];
  salt_buf3[3] = salt_bufs[SALT_POS_HOST].salt_buf[15];

  const u32 salt_len = salt_bufs[SALT_POS_HOST].salt_len;

  /**
   * loop
   */
  for (u32 il_pos = 0; il_pos < IL_CNT; il_pos += VECT_SIZE)
  {
    u32x w0[4] = { 0 };
    u32x w1[4] = { 0 };
    u32x w2[4] = { 0 };
    u32x w3[4] = { 0 };

    const u32x out_len = apply_rules_vect_optimized (pw_buf0, pw_buf1, pw_len, rules_buf, il_pos, w0, w1);

    /**
     * append salt
     */
    u32x s0[4];
    u32x s1[4];
    u32x s2[4];
    u32x s3[4];

    s0[0] = salt_buf0[0];
    s0[1] = salt_buf0[1];
    s0[2] = salt_buf0[2];
    s0[3] = salt_buf0[3];
    s1[0] = salt_buf1[0];
    s1[1] = salt_buf1[1];
    s1[2] = salt_buf1[2];
    s1[3] = salt_buf1[3];
    s2[0] = salt_buf2[0];
    s2[1] = salt_buf2[1];
    s2[2] = salt_buf2[2];
    s2[3] = salt_buf2[3];
    s3[0] = salt_buf3[0];
    s3[1] = salt_buf3[1];
    s3[2] = salt_buf3[2];
    s3[3] = salt_buf3[3];

    switch_buffer_by_offset_le_VV (s0, s1, s2, s3, out_len);

    const u32x pw_salt_len = out_len + salt_len;

    w0[0] |= s0[0];
    w0[1] |= s0[1];
    w0[2] |= s0[2];
    w0[3] |= s0[3];
    w1[0] |= s1[0];
    w1[1] |= s1[1];
    w1[2] |= s1[2];
    w1[3] |= s1[3];
    w2[0] |= s2[0];
    w2[1] |= s2[1];
    w2[2] |= s2[2];
    w2[3] |= s2[3];
    w3[0] |= s3[0];
    w3[1] |= s3[1];
    w3[2] |= s3[2];
    w3[3] |= s3[3];

    /**
     * sha512 with 12 rounds
     */
    u64x digest[8];

    digest[0] = SHA512M_A;
    digest[1] = SHA512M_B;
    digest[2] = SHA512M_C;
    digest[3] = SHA512M_D;
    digest[4] = SHA512M_E;
    digest[5] = SHA512M_F;
    digest[6] = SHA512M_G;
    digest[7] = SHA512M_H;

    for (int round = 0; round < 12; round++)
    {
      u32x w0_t[4] = { hc_swap32 (w0[0]), hc_swap32 (w0[1]), hc_swap32 (w0[2]), hc_swap32 (w0[3]) };
      u32x w1_t[4] = { hc_swap32 (w1[0]), hc_swap32 (w1[1]), hc_swap32 (w1[2]), hc_swap32 (w1[3]) };
      u32x w2_t[4] = { hc_swap32 (w2[0]), hc_swap32 (w2[1]), hc_swap32 (w2[2]), hc_swap32 (w2[3]) };
      u32x w3_t[4] = { hc_swap32 (w3[0]), hc_swap32 (w3[1]), 0, pw_salt_len * 8 };

      sha512_transform_intern (w0_t, w1_t, w2_t, w3_t, digest);

      if (round < 11)
      {
        w0[0] = l32_from_64 (digest[0]);
        w0[1] = h32_from_64 (digest[0]);
        w0[2] = l32_from_64 (digest[1]);
        w0[3] = h32_from_64 (digest[1]);
        w1[0] = l32_from_64 (digest[2]);
        w1[1] = h32_from_64 (digest[2]);
        w1[2] = l32_from_64 (digest[3]);
        w1[3] = h32_from_64 (digest[3]);
        w2[0] = l32_from_64 (digest[4]);
        w2[1] = h32_from_64 (digest[4]);
        w2[2] = l32_from_64 (digest[5]);
        w2[3] = h32_from_64 (digest[5]);
        w3[0] = l32_from_64 (digest[6]);
        w3[1] = h32_from_64 (digest[6]);
        w3[2] = 0;
        w3[3] = pw_salt_len * 8;
      }
    }

    const u32x r0 = l32_from_64 (digest[7]);
    const u32x r1 = h32_from_64 (digest[7]);
    const u32x r2 = l32_from_64 (digest[3]);
    const u32x r3 = h32_from_64 (digest[3]);

    COMPARE_S_SIMD (r0, r1, r2, r3);
  }
}

KERNEL_FQ void m01712_s08 (KERN_ATTR_RULES ())
{
}

KERNEL_FQ void m01712_s16 (KERN_ATTR_RULES ())
{
}
"
rfBqxNAw,Rapid Dijkstra,Ernazar00,C++,Sunday 12th of November 2023 10:36:47 PM CDT,"#include <bits/stdc++.h>

using namespace std;

int main() {

    int N, K, S, T, x, y, z;
    cin >> N >> K;
    N++;
    vector<vector<pair<long long,long long>>> g(N);
    for (int i = 0; i < K; ++i) {
        cin >> x >> y >> z;
        g[x].push_back({ z, y });
        g[y].push_back({ z, x });
    }
    cin >> S >> T;
    //cout << S << "" "" << T;

    long long inf = 1e18;
    priority_queue<pair<long long, long long>> q;
    vector<long long> d(N, inf);
    vector<int> prev(N, -1);
    d[S] = 0;
    q.push({ d[S], S });
    int cnt = 0;
    while(!q.empty()){
        long long v = q.top().second;
        long long cur_d = -q.top().first;
        q.pop();
        cnt++;
        if(cur_d > d[v])continue;
        for(auto x: g[v]){
            long long to = x.second;
            long long len = x.first;
            if(d[v] + len < d[to]){
                d[to] = d[v] + len;
                prev[to] = v;
                q.push(make_pair(-d[to], to));
            }
        }
    }
    //cout << cnt << ""\n"";
    if(d[T] < inf){
        cout << d[T] << ""\n"";
        return 0;
        stack<int> path;
        while(T != -1){
            path.push(T + 1);
            T = prev[T];
        }
        while(!path.empty()){
            cout << path.top() << "" ""; path.pop();
        }
    }
    else{
        cout << -1;
    }

    return 0;
}
"
Z9XeWqsY,m01712_a0-pure.cl,little2379,C,Sunday 12th of November 2023 10:22:26 PM CDT,"/**
 * Author......: See docs/credits.txt
 * License.....: MIT
 */

//#define NEW_SIMD_CODE

#ifdef KERNEL_STATIC
#include M2S(INCLUDE_PATH/inc_vendor.h)
#include M2S(INCLUDE_PATH/inc_types.h)
#include M2S(INCLUDE_PATH/inc_platform.cl)
#include M2S(INCLUDE_PATH/inc_common.cl)
#include M2S(INCLUDE_PATH/inc_rp.h)
#include M2S(INCLUDE_PATH/inc_rp.cl)
#include M2S(INCLUDE_PATH/inc_scalar.cl)
#include M2S(INCLUDE_PATH/inc_hash_sha512.cl)
#endif

KERNEL_FQ void m01710_mxx (KERN_ATTR_RULES ())
{
  const u64 lid = get_local_id (0);
  const u64 gid = get_global_id (0);

  if (gid >= GID_CNT) return;

  COPY_PW (pws[gid]);

  const u32 salt_len = salt_bufs[SALT_POS_HOST].salt_len;

  u32 s[64] = { 0 };

  for (u32 i = 0, idx = 0; i < salt_len; i += 4, idx += 1)
  {
    s[idx] = hc_swap32_S (salt_bufs[SALT_POS_HOST].salt_buf[idx]);
  }

  for (u32 il_pos = 0; il_pos < IL_CNT; il_pos++)
  {
    pw_t tmp = PASTE_PW;

    tmp.pw_len = apply_rules (rules_buf[il_pos].cmds, tmp.i, tmp.pw_len);

    sha512_ctx_t ctx;
    sha512_init (&ctx);
    sha512_update_swap (&ctx, tmp.i, tmp.pw_len);
    sha512_update (&ctx, s, salt_len);

    // Loop for 12 rounds
  for (int round = 0; round < 11; round++) {
    u64 digest[8];
    for (int i = 0; i < 8; i++) {
        digest[i] = ctx.h[i];
}


    sha512_init(&ctx);

    u32 digest32[16];
    for (int i = 0; i < 8; i++) {
      digest32[i * 2]     = l32_from_64 (digest[i]);
      digest32[i * 2 + 1] = h32_from_64 (digest[i]);
    }

  sha512_update(&ctx, digest32, sizeof(digest32) * 8);
  }

    sha512_final (&ctx);

    const u32 r0 = l32_from_64_S (ctx.h[7]);
    const u32 r1 = h32_from_64_S (ctx.h[7]);
    const u32 r2 = l32_from_64_S (ctx.h[3]);
    const u32 r3 = h32_from_64_S (ctx.h[3]);

    COMPARE_M_SCALAR (r0, r1, r2, r3);
  }
}

KERNEL_FQ void m01710_sxx (KERN_ATTR_RULES ())
{
  const u64 lid = get_local_id (0);
  const u64 gid = get_global_id (0);

  if (gid >= GID_CNT) return;

  const u32 search[4] =
  {
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R0],
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R1],
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R2],
    digests_buf[DIGESTS_OFFSET_HOST].digest_buf[DGST_R3]
  };

  COPY_PW (pws[gid]);

  const u32 salt_len = salt_bufs[SALT_POS_HOST].salt_len;

  u32 s[64] = { 0 };

  for (u32 i = 0, idx = 0; i < salt_len; i += 4, idx += 1)
  {
    s[idx] = hc_swap32_S (salt_bufs[SALT_POS_HOST].salt_buf[idx]);
  }

  for (u32 il_pos = 0; il_pos < IL_CNT; il_pos++)
  {
    pw_t tmp = PASTE_PW;

    tmp.pw_len = apply_rules (rules_buf[il_pos].cmds, tmp.i, tmp.pw_len);

    sha512_ctx_t ctx;
    sha512_init (&ctx);
    sha512_update_swap (&ctx, tmp.i, tmp.pw_len);
    sha512_update (&ctx, s, salt_len);

    // Loop for 12 rounds
    for (int round = 0; round < 11; round++) {
        u64 digest[8];
        for (int i = 0; i < 8; i++) {
            digest[i] = ctx.h[i];
}


        sha512_init(&ctx);

        u32 digest32[16];
        for (int i = 0; i < 8; i++) {
            digest32[i * 2]     = l32_from_64 (digest[i]);
            digest32[i * 2 + 1] = h32_from_64 (digest[i]);
        }

        sha512_update(&ctx, digest32, sizeof(digest32) * 8);
    }

    sha512_final (&ctx);

    const u32 r0 = l32_from_64_S (ctx.h[7]);
    const u32 r1 = h32_from_64_S (ctx.h[7]);
    const u32 r2 = l32_from_64_S (ctx.h[3]);
    const u32 r3 = h32_from_64_S (ctx.h[3]);

    COMPARE_S_SCALAR (r0, r1, r2, r3);
  }
}"
BZ2c8zsu,module_01712.c,little2379,C,Sunday 12th of November 2023 10:18:24 PM CDT,"/**
 * Author......: See docs/credits.txt
 * License.....: MIT
 */

#include ""common.h""
#include ""types.h""
#include ""modules.h""
#include ""bitops.h""
#include ""convert.h""
#include ""shared.h""

static const u32   ATTACK_EXEC    = ATTACK_EXEC_INSIDE_KERNEL;
static const u32   DGST_POS0      = 14;
static const u32   DGST_POS1      = 15;
static const u32   DGST_POS2      = 6;
static const u32   DGST_POS3      = 7;
static const u32   DGST_SIZE      = DGST_SIZE_8_8;
static const u32   HASH_CATEGORY  = HASH_CATEGORY_RAW_HASH_SALTED;
static const char *HASH_NAME      = ""sha512($pass.$salt) [12 rounds]"";
static const u64   KERN_TYPE      = 1712; // Updated for -m 1712
static const u32   OPTI_TYPE      = OPTI_TYPE_ZERO_BYTE
                                  | OPTI_TYPE_PRECOMPUTE_INIT
                                  | OPTI_TYPE_EARLY_SKIP
                                  | OPTI_TYPE_APPENDED_SALT
                                  | OPTI_TYPE_USES_BITS_64
                                  | OPTI_TYPE_RAW_HASH;
static const u64   OPTS_TYPE      = OPTS_TYPE_STOCK_MODULE
                                  | OPTS_TYPE_PT_GENERATE_BE
                                  | OPTS_TYPE_ST_ADD80
                                  | OPTS_TYPE_ST_ADDBITS15;
static const u32   SALT_TYPE      = SALT_TYPE_GENERIC;
static const char *ST_PASS        = ""Lucyluna1"";
static const char *ST_HASH        = ""fa050d5a1659a626dfc90602dfdf9b0b8ab8140fd10979e8fb594286776c26b96bdb206dff323ea9b7bbe505937e125bc5e18db421d745730953f540045a9e58:eaGXQa2bH6uBjnmSqoxd"";

u32         module_attack_exec    (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return ATTACK_EXEC;     }
u32         module_dgst_pos0      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return DGST_POS0;       }
u32         module_dgst_pos1      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return DGST_POS1;       }
u32         module_dgst_pos2      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return DGST_POS2;       }
u32         module_dgst_pos3      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return DGST_POS3;       }
u32         module_dgst_size      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return DGST_SIZE;       }
u32         module_hash_category  (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return HASH_CATEGORY;   }
const char *module_hash_name      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return HASH_NAME;       }
u64         module_kern_type      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return KERN_TYPE;       }
u32         module_opti_type      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return OPTI_TYPE;       }
u64         module_opts_type      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return OPTS_TYPE;       }
u32         module_salt_type      (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return SALT_TYPE;       }
const char *module_st_hash        (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return ST_HASH;         }
const char *module_st_pass        (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra) { return ST_PASS;         }

char *module_jit_build_options (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const user_options_t *user_options, MAYBE_UNUSED const user_options_extra_t *user_options_extra, MAYBE_UNUSED const hashes_t *hashes, MAYBE_UNUSED const hc_device_param_t *device_param)
{
  char *jit_build_options = NULL;

  // Extra treatment for Apple systems
  if (device_param->opencl_platform_vendor_id == VENDOR_ID_APPLE)
  {
    // Metal
    if (device_param->is_metal == true)
    {
      hc_asprintf (&jit_build_options, ""-D _unroll"");
    }

    return jit_build_options;
  }

  // HIP
  if (device_param->opencl_device_vendor_id == VENDOR_ID_AMD_USE_HIP)
  {
    hc_asprintf (&jit_build_options, ""-D _unroll"");
  }

  // ROCM
  if ((device_param->opencl_device_vendor_id == VENDOR_ID_AMD) && (device_param->has_vperm == true))
  {
    hc_asprintf (&jit_build_options, ""-D _unroll"");
  }

  return jit_build_options;
}

int module_hash_decode (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED void *digest_buf, MAYBE_UNUSED salt_t *salt, MAYBE_UNUSED void *esalt_buf, MAYBE_UNUSED void *hook_salt_buf, MAYBE_UNUSED hashinfo_t *hash_info, const char *line_buf, MAYBE_UNUSED const int line_len)
{
  u64 *digest = (u64 *) digest_buf;

  hc_token_t token;

  memset (&token, 0, sizeof (hc_token_t));

  token.token_cnt  = 2;

  token.sep[0]     = hashconfig->separator;
  token.len[0]     = 128;
  token.attr[0]    = TOKEN_ATTR_FIXED_LENGTH
                   | TOKEN_ATTR_VERIFY_HEX;

  token.len_min[1] = SALT_MIN;
  token.len_max[1] = SALT_MAX;
  token.attr[1]    = TOKEN_ATTR_VERIFY_LENGTH;

  if (hashconfig->opts_type & OPTS_TYPE_ST_HEX)
  {
    token.len_min[1] *= 2;
    token.len_max[1] *= 2;

    token.attr[1] |= TOKEN_ATTR_VERIFY_HEX;
  }

  const int rc_tokenizer = input_tokenizer ((const u8 *) line_buf, line_len, &token);

  if (rc_tokenizer != PARSER_OK) return (rc_tokenizer);

  const u8 *hash_pos = token.buf[0];

  digest[0] = hex_to_u64 (hash_pos +   0);
  digest[1] = hex_to_u64 (hash_pos +  16);
  digest[2] = hex_to_u64 (hash_pos +  32);
  digest[3] = hex_to_u64 (hash_pos +  48);
  digest[4] = hex_to_u64 (hash_pos +  64);
  digest[5] = hex_to_u64 (hash_pos +  80);
  digest[6] = hex_to_u64 (hash_pos +  96);
  digest[7] = hex_to_u64 (hash_pos + 112);

  digest[0] = byte_swap_64 (digest[0]);
  digest[1] = byte_swap_64 (digest[1]);
  digest[2] = byte_swap_64 (digest[2]);
  digest[3] = byte_swap_64 (digest[3]);
  digest[4] = byte_swap_64 (digest[4]);
  digest[5] = byte_swap_64 (digest[5]);
  digest[6] = byte_swap_64 (digest[6]);
  digest[7] = byte_swap_64 (digest[7]);

  if (hashconfig->opti_type & OPTI_TYPE_OPTIMIZED_KERNEL)
  {
    digest[0] -= SHA512M_A;
    digest[1] -= SHA512M_B;
    digest[2] -= SHA512M_C;
    digest[3] -= SHA512M_D;
    digest[4] -= SHA512M_E;
    digest[5] -= SHA512M_F;
    digest[6] -= SHA512M_G;
    digest[7] -= SHA512M_H;
  }

  const u8 *salt_pos = token.buf[1];
  const int salt_len = token.len[1];

  const bool parse_rc = generic_salt_decode (hashconfig, salt_pos, salt_len, (u8 *) salt->salt_buf, (int *) &salt->salt_len);

  if (parse_rc == false) return (PARSER_SALT_LENGTH);

  return (PARSER_OK);
}

int module_hash_encode (MAYBE_UNUSED const hashconfig_t *hashconfig, MAYBE_UNUSED const void *digest_buf, MAYBE_UNUSED const salt_t *salt, MAYBE_UNUSED const void *esalt_buf, MAYBE_UNUSED const void *hook_salt_buf, MAYBE_UNUSED const hashinfo_t *hash_info, char *line_buf, MAYBE_UNUSED const int line_size)
{
  const u64 *digest = (const u64 *) digest_buf;

  // we can not change anything in the original buffer, otherwise destroying sorting
  // therefore create some local buffer

  u64 tmp[8];

  tmp[0] = digest[0];
  tmp[1] = digest[1];
  tmp[2] = digest[2];
  tmp[3] = digest[3];
  tmp[4] = digest[4];
  tmp[5] = digest[5];
  tmp[6] = digest[6];
  tmp[7] = digest[7];

  if (hashconfig->opti_type & OPTI_TYPE_OPTIMIZED_KERNEL)
  {
    tmp[0] += SHA512M_A;
    tmp[1] += SHA512M_B;
    tmp[2] += SHA512M_C;
    tmp[3] += SHA512M_D;
    tmp[4] += SHA512M_E;
    tmp[5] += SHA512M_F;
    tmp[6] += SHA512M_G;
    tmp[7] += SHA512M_H;
  }

  tmp[0] = byte_swap_64 (tmp[0]);
  tmp[1] = byte_swap_64 (tmp[1]);
  tmp[2] = byte_swap_64 (tmp[2]);
  tmp[3] = byte_swap_64 (tmp[3]);
  tmp[4] = byte_swap_64 (tmp[4]);
  tmp[5] = byte_swap_64 (tmp[5]);
  tmp[6] = byte_swap_64 (tmp[6]);
  tmp[7] = byte_swap_64 (tmp[7]);

  u8 *out_buf = (u8 *) line_buf;

  int out_len = 0;

  u64_to_hex (tmp[0], out_buf + out_len); out_len += 16;
  u64_to_hex (tmp[1], out_buf + out_len); out_len += 16;
  u64_to_hex (tmp[2], out_buf + out_len); out_len += 16;
  u64_to_hex (tmp[3], out_buf + out_len); out_len += 16;
  u64_to_hex (tmp[4], out_buf + out_len); out_len += 16;
  u64_to_hex (tmp[5], out_buf + out_len); out_len += 16;
  u64_to_hex (tmp[6], out_buf + out_len); out_len += 16;
  u64_to_hex (tmp[7], out_buf + out_len); out_len += 16;

  out_buf[out_len] = hashconfig->separator;

  out_len += 1;

  out_len += generic_salt_encode (hashconfig, (const u8 *) salt->salt_buf, (const int) salt->salt_len, out_buf + out_len);

  return out_len;
}

void module_init (module_ctx_t *module_ctx)
{
  module_ctx->module_context_size             = MODULE_CONTEXT_SIZE_CURRENT;
  module_ctx->module_interface_version        = MODULE_INTERFACE_VERSION_CURRENT;

  module_ctx->module_attack_exec              = module_attack_exec;
  module_ctx->module_benchmark_esalt          = MODULE_DEFAULT;
  module_ctx->module_benchmark_hook_salt      = MODULE_DEFAULT;
  module_ctx->module_benchmark_mask           = MODULE_DEFAULT;
  module_ctx->module_benchmark_charset        = MODULE_DEFAULT;
  module_ctx->module_benchmark_salt           = MODULE_DEFAULT;
  module_ctx->module_build_plain_postprocess  = MODULE_DEFAULT;
  module_ctx->module_deep_comp_kernel         = MODULE_DEFAULT;
  module_ctx->module_deprecated_notice        = MODULE_DEFAULT;
  module_ctx->module_dgst_pos0                = module_dgst_pos0;
  module_ctx->module_dgst_pos1                = module_dgst_pos1;
  module_ctx->module_dgst_pos2                = module_dgst_pos2;
  module_ctx->module_dgst_pos3                = module_dgst_pos3;
  module_ctx->module_dgst_size                = module_dgst_size;
  module_ctx->module_dictstat_disable         = MODULE_DEFAULT;
  module_ctx->module_esalt_size               = MODULE_DEFAULT;
  module_ctx->module_extra_buffer_size        = MODULE_DEFAULT;
  module_ctx->module_extra_tmp_size           = MODULE_DEFAULT;
  module_ctx->module_extra_tuningdb_block     = MODULE_DEFAULT;
  module_ctx->module_forced_outfile_format    = MODULE_DEFAULT;
  module_ctx->module_hash_binary_count        = MODULE_DEFAULT;
  module_ctx->module_hash_binary_parse        = MODULE_DEFAULT;
  module_ctx->module_hash_binary_save         = MODULE_DEFAULT;
  module_ctx->module_hash_decode_postprocess  = MODULE_DEFAULT;
  module_ctx->module_hash_decode_potfile      = MODULE_DEFAULT;
  module_ctx->module_hash_decode_zero_hash    = MODULE_DEFAULT;
  module_ctx->module_hash_decode              = module_hash_decode;
  module_ctx->module_hash_encode_status       = MODULE_DEFAULT;
  module_ctx->module_hash_encode_potfile      = MODULE_DEFAULT;
  module_ctx->module_hash_encode              = module_hash_encode;
  module_ctx->module_hash_init_selftest       = MODULE_DEFAULT;
  module_ctx->module_hash_mode                = MODULE_DEFAULT;
  module_ctx->module_hash_category            = module_hash_category;
  module_ctx->module_hash_name                = module_hash_name;
  module_ctx->module_hashes_count_min         = MODULE_DEFAULT;
  module_ctx->module_hashes_count_max         = MODULE_DEFAULT;
  module_ctx->module_hlfmt_disable            = MODULE_DEFAULT;
  module_ctx->module_hook_extra_param_size    = MODULE_DEFAULT;
  module_ctx->module_hook_extra_param_init    = MODULE_DEFAULT;
  module_ctx->module_hook_extra_param_term    = MODULE_DEFAULT;
  module_ctx->module_hook12                   = MODULE_DEFAULT;
  module_ctx->module_hook23                   = MODULE_DEFAULT;
  module_ctx->module_hook_salt_size           = MODULE_DEFAULT;
  module_ctx->module_hook_size                = MODULE_DEFAULT;
  module_ctx->module_jit_build_options        = module_jit_build_options;
  module_ctx->module_jit_cache_disable        = MODULE_DEFAULT;
  module_ctx->module_kernel_accel_max         = MODULE_DEFAULT;
  module_ctx->module_kernel_accel_min         = MODULE_DEFAULT;
  module_ctx->module_kernel_loops_max         = MODULE_DEFAULT;
  module_ctx->module_kernel_loops_min         = MODULE_DEFAULT;
  module_ctx->module_kernel_threads_max       = MODULE_DEFAULT;
  module_ctx->module_kernel_threads_min       = MODULE_DEFAULT;
  module_ctx->module_kern_type                = module_kern_type;
  module_ctx->module_kern_type_dynamic        = MODULE_DEFAULT;
  module_ctx->module_opti_type                = module_opti_type;
  module_ctx->module_opts_type                = module_opts_type;
  module_ctx->module_outfile_check_disable    = MODULE_DEFAULT;
  module_ctx->module_outfile_check_nocomp     = MODULE_DEFAULT;
  module_ctx->module_potfile_custom_check     = MODULE_DEFAULT;
  module_ctx->module_potfile_disable          = MODULE_DEFAULT;
  module_ctx->module_potfile_keep_all_hashes  = MODULE_DEFAULT;
  module_ctx->module_pwdump_column            = MODULE_DEFAULT;
  module_ctx->module_pw_max                   = MODULE_DEFAULT;
  module_ctx->module_pw_min                   = MODULE_DEFAULT;
  module_ctx->module_salt_max                 = MODULE_DEFAULT;
  module_ctx->module_salt_min                 = MODULE_DEFAULT;
  module_ctx->module_salt_type                = module_salt_type;
  module_ctx->module_separator                = MODULE_DEFAULT;
  module_ctx->module_st_hash                  = module_st_hash;
  module_ctx->module_st_pass                  = module_st_pass;
  module_ctx->module_tmp_size                 = MODULE_DEFAULT;
  module_ctx->module_unstable_warning         = MODULE_DEFAULT;
  module_ctx->module_warmup_disable           = MODULE_DEFAULT;
}"
F2VP4GWL,going well snowybot,coinwalk,JavaScript,Sunday 12th of November 2023 10:15:12 PM CDT,"var originalbal = parseFloat(document.getElementById('pct_balance').value);
var divide = 300;
var changer = (divide/7);
var base = Number((originalbal/divide).toFixed(8));
var floatingbase = base;
var taget = (originalbal*7);
var groupedten = (base*10);
var groupedseven = (base*6.5);
var tobetnext = ((floatingbase*1).toFixed(8));
var bolance = originalbal;
var over = 6.9;
var under = 2.9;
var fart = 1;
var freak = false;
var oldbolance = ((Math.floor(originalbal/groupedten))*groupedten);
var oldbolancetree = ((Math.floor(originalbal/groupedten))*groupedten);
var oldbolancetwo = ((Math.floor(originalbal/groupedten))*groupedten);
 
 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
 
function get(){
console.clear();
setTimeout(function(){
bolance = document.getElementById('pct_balance').value;
if (bolance>(oldbolance+(floatingbase*over))){
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    freak = true;
    oldbolance = parseFloat(bolance);
}
if (bolance<(oldbolance-(floatingbase*under))){
    floatingbase = floatingbase*2;
    over = 4.9;
    under = 4.9;
    freak = false;
    oldbolance = parseFloat(bolance);
}
if ((bolance>=(oldbolancetree+(oldbolancetree/changer)))&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 1;   
    over = 6.9;
    under = 2.9;
    freak = false;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
    oldbolancetwo = ((Math.floor(bolance/groupedten))*groupedten);
    oldbolancetree = ((Math.floor(bolance/groupedten))*groupedten);
}
if (((bolance-floatingbase)<=(oldbolancetwo-(oldbolancetwo/changer)))&&(bolance<oldbolancetwo)&&(floatingbase>base)&&(bolance<(((Math.floor(bolance/groupedten))*groupedten)+groupedseven))){
    floatingbase = base;
    fart = 0;
    over = 6.9;
    under = 2.9;
    oldbolance = ((Math.floor(bolance/groupedten))*groupedten);
    oldbolancetwo = ((Math.floor(bolance/groupedten))*groupedten);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = ((floatingbase*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
}, (getR(100,200)));
var good = ((bolance-originalbal).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), (getR(200,300)));
}
get();"
rmzJcPjc,Untitled,adalrigopisano,HTML,Sunday 12th of November 2023 10:13:05 PM CDT,"<!DOCTYPE html>
<html>
<head>
<title>Page Title</title>
</head>
<body>
<script src=""https://ssl.p.jwpcdn.com/player/v/8.30.0/jwplayer.js""></script>
<script> jwplayer.key = 'XSuP4qMl+9tK17QNb+4+th2Pm9AWgMO/cYH8CI0HGGr7bdjo';
</script>
    <div id=""player""></div>
    <script> 
        var playerInstance = jwplayer(""player""); 
        playerInstance.setup({ 
            playlist: [{
                ""title"": """",
                ""description"": """",
                ""sources"": [
                    {
                        ""default"": false,
                        ""type"": ""mpd"",
                        ""file"":'https://dce-ac-live.cdn.indazn.com/dashdrm/dazn-linear-024/stream.mpd?p=web',
                        ""drm"": {
                            ""clearkey"": { ""keyId"": ""82f8e2a17dac44c0a18f660479349c59"", ""key"": ""1b144f73e6fefe91cd05f850e2b589d0"" }
                        },
                        ""label"": ""0"",
                        ""label"": ""Italian"",
                        ""kind"": ""captions""
                    }
                ]
            }],
            width: ""100%"",
            height: ""100%"",
            aspectratio: ""16:9"",
            allowfullscreen: true,
            autostart: true,
            skin: {
                name: """",
                active: ""RED"", 
                inactive: ""yellow"",
                background: """"
            },
            logo: {
                file: """", // URL o percorso del tuo logo
                link: """", // Link opzionale al tuo sito web
                position: ""top-left"", // Posizione del logo (puoi personalizzarla)
                margin: 0
            }
        });

        jwplayer(""player"").on(""play"", function(e){
            jwplayer(""player"").setCurrentAudioTrack(0);
        });
    </script>
    <style>
        @keyframes blink {
            0% { opacity: 1; }
            50% { opacity: 0; }
            100% { opacity: 1; }
        }
        
        .jw-text-live::before {
            background-color: red !important;
            animation: blink 1s infinite;
        }
    </style>
</body>
</html>"
ujsRc1E9,Nigerian scammers [12-11-3/2023],bombaires,AIMMS,Sunday 12th of November 2023 09:05:57 PM CDT,"<a href=""mailto:jwala0061@gmail.com"">jwala0061@gmail.com</a>
<a href=""mailto:j.w.ala.0.0.6.1@gmail.com"">j.w.ala.0.0.6.1@gmail.com</a>
<a href=""mailto:jw.a.la006.1@gmail.com"">jw.a.la006.1@gmail.com</a>
<a href=""mailto:jwa.l.a.006.1@gmail.com"">jwa.l.a.006.1@gmail.com</a>
<a href=""mailto:j.w.a.l.a.0061@gmail.com"">j.w.a.l.a.0061@gmail.com</a>
<a href=""mailto:jwal.a.00.61@gmail.com"">jwal.a.00.61@gmail.com</a>
<a href=""mailto:j.wa.l.a.0.0.6.1@gmail.com"">j.wa.l.a.0.0.6.1@gmail.com</a>
<a href=""mailto:j.w.a.l.a0061@gmail.com"">j.w.a.l.a0061@gmail.com</a>
<a href=""mailto:jwa.l.a0.06.1@gmail.com"">jwa.l.a0.06.1@gmail.com</a>
<a href=""mailto:jw.al.a00.61@gmail.com"">jw.al.a00.61@gmail.com</a>
<a href=""mailto:jw.a.la00.61@gmail.com"">jw.a.la00.61@gmail.com</a>
<a href=""mailto:jwal.a0061@gmail.com"">jwal.a0061@gmail.com</a>
<a href=""mailto:jwa.la0.0.61@gmail.com"">jwa.la0.0.61@gmail.com</a>
<a href=""mailto:j.wal.a0.061@gmail.com"">j.wal.a0.061@gmail.com</a>
<a href=""mailto:jwala.0061@gmail.com"">jwala.0061@gmail.com</a>
<a href=""mailto:j.wala.00.6.1@gmail.com"">j.wala.00.6.1@gmail.com</a>
<a href=""mailto:jw.ala.006.1@gmail.com"">jw.ala.006.1@gmail.com</a>
<a href=""mailto:j.wala.00.61@gmail.com"">j.wala.00.61@gmail.com</a>
<a href=""mailto:jwal.a0.06.1@gmail.com"">jwal.a0.06.1@gmail.com</a>
<a href=""mailto:j.wa.la.0061@gmail.com"">j.wa.la.0061@gmail.com</a>
<a href=""mailto:j.w.ala0061@gmail.com"">j.w.ala0061@gmail.com</a>
<a href=""mailto:jwala0.0.6.1@gmail.com"">jwala0.0.6.1@gmail.com</a>
<a href=""mailto:jw.ala.0061@gmail.com"">jw.ala.0061@gmail.com</a>
<a href=""mailto:jw.a.l.a.0.061@gmail.com"">jw.a.l.a.0.061@gmail.com</a>
<a href=""mailto:jw.ala.0.0.61@gmail.com"">jw.ala.0.0.61@gmail.com</a>
<a href=""mailto:j.w.a.la.006.1@gmail.com"">j.w.a.la.006.1@gmail.com</a>
<a href=""mailto:j.w.a.la0.0.6.1@gmail.com"">j.w.a.la0.0.6.1@gmail.com</a>
<a href=""mailto:jwal.a006.1@gmail.com"">jwal.a006.1@gmail.com</a>
<a href=""mailto:jwa.la.0.06.1@gmail.com"">jwa.la.0.06.1@gmail.com</a>
<a href=""mailto:j.w.a.l.a0.0.61@gmail.com"">j.w.a.l.a0.0.61@gmail.com</a>
<a href=""mailto:j.wa.la0061@gmail.com"">j.wa.la0061@gmail.com</a>
<a href=""mailto:jwala006.1@gmail.com"">jwala006.1@gmail.com</a>
<a href=""mailto:jw.al.a.0.0.6.1@gmail.com"">jw.al.a.0.0.6.1@gmail.com</a>
<a href=""mailto:jw.a.la.00.6.1@gmail.com"">jw.a.la.00.6.1@gmail.com</a>
<a href=""mailto:j.wal.a.0061@gmail.com"">j.wal.a.0061@gmail.com</a>
<a href=""mailto:jw.a.la0.06.1@gmail.com"">jw.a.la0.06.1@gmail.com</a>
<a href=""mailto:jw.al.a.0.06.1@gmail.com"">jw.al.a.0.06.1@gmail.com</a>
<a href=""mailto:jwala.0.061@gmail.com"">jwala.0.061@gmail.com</a>
<a href=""mailto:jw.a.l.a0.061@gmail.com"">jw.a.l.a0.061@gmail.com</a>
<a href=""mailto:j.wal.a.006.1@gmail.com"">j.wal.a.006.1@gmail.com</a>
<a href=""mailto:j.wala0061@gmail.com"">j.wala0061@gmail.com</a>
<a href=""mailto:j.w.a.l.a0.06.1@gmail.com"">j.w.a.l.a0.06.1@gmail.com</a>
<a href=""mailto:j.wa.la.00.6.1@gmail.com"">j.wa.la.00.6.1@gmail.com</a>
<a href=""mailto:j.w.a.la.0.0.6.1@gmail.com"">j.w.a.la.0.0.6.1@gmail.com</a>
<a href=""mailto:jwa.la0061@gmail.com"">jwa.la0061@gmail.com</a>
<a href=""mailto:jwa.l.a0.0.6.1@gmail.com"">jwa.l.a0.0.6.1@gmail.com</a>
<a href=""mailto:j.w.ala.0.06.1@gmail.com"">j.w.ala.0.06.1@gmail.com</a>
<a href=""mailto:jw.al.a006.1@gmail.com"">jw.al.a006.1@gmail.com</a>
<a href=""mailto:jwal.a0.0.61@gmail.com"">jwal.a0.0.61@gmail.com</a>
<a href=""mailto:jw.al.a.00.6.1@gmail.com"">jw.al.a.00.6.1@gmail.com</a>
<a href=""mailto:jwa.l.a.0.061@gmail.com"">jwa.l.a.0.061@gmail.com</a>
<a href=""mailto:j.wala.0.0.6.1@gmail.com"">j.wala.0.0.6.1@gmail.com</a>
<a href=""mailto:j.wala.0061@gmail.com"">j.wala.0061@gmail.com</a>
<a href=""mailto:jwa.l.a.00.61@gmail.com"">jwa.l.a.00.61@gmail.com</a>
<a href=""mailto:jw.ala.0.06.1@gmail.com"">jw.ala.0.06.1@gmail.com</a>
<a href=""mailto:jw.a.la0.0.61@gmail.com"">jw.a.la0.0.61@gmail.com</a>
<a href=""mailto:j.w.a.la0061@gmail.com"">j.w.a.la0061@gmail.com</a>
<a href=""mailto:jwala.0.06.1@gmail.com"">jwala.0.06.1@gmail.com</a>
<a href=""mailto:j.wa.l.a0.0.6.1@gmail.com"">j.wa.l.a0.0.6.1@gmail.com</a>
<a href=""mailto:jwa.la.0.0.61@gmail.com"">jwa.la.0.0.61@gmail.com</a>
<a href=""mailto:jw.a.la0061@gmail.com"">jw.a.la0061@gmail.com</a>
<a href=""mailto:jw.a.l.a00.6.1@gmail.com"">jw.a.l.a00.6.1@gmail.com</a>
<a href=""mailto:j.wa.la.0.0.61@gmail.com"">j.wa.la.0.0.61@gmail.com</a>
<a href=""mailto:jw.a.la.00.61@gmail.com"">jw.a.la.00.61@gmail.com</a>
<a href=""mailto:jwala00.6.1@gmail.com"">jwala00.6.1@gmail.com</a>
<a href=""mailto:jw.ala.0.061@gmail.com"">jw.ala.0.061@gmail.com</a>
<a href=""mailto:jwa.l.a.0.0.6.1@gmail.com"">jwa.l.a.0.0.6.1@gmail.com</a>
<a href=""mailto:jwa.la.00.61@gmail.com"">jwa.la.00.61@gmail.com</a>
<a href=""mailto:j.wal.a0061@gmail.com"">j.wal.a0061@gmail.com</a>
<a href=""mailto:j.wa.la00.61@gmail.com"">j.wa.la00.61@gmail.com</a>
<a href=""mailto:j.wala.0.0.61@gmail.com"">j.wala.0.0.61@gmail.com</a>
<a href=""mailto:jw.a.l.a0061@gmail.com"">jw.a.l.a0061@gmail.com</a>
<a href=""mailto:jw.al.a.00.61@gmail.com"">jw.al.a.00.61@gmail.com</a>
<a href=""mailto:jw.ala0.0.6.1@gmail.com"">jw.ala0.0.6.1@gmail.com</a>
<a href=""mailto:jw.al.a.0.0.61@gmail.com"">jw.al.a.0.0.61@gmail.com</a>
<a href=""mailto:jw.ala0.0.61@gmail.com"">jw.ala0.0.61@gmail.com</a>
<a href=""mailto:j.w.ala.0.061@gmail.com"">j.w.ala.0.061@gmail.com</a>
<a href=""mailto:j.w.ala.0061@gmail.com"">j.w.ala.0061@gmail.com</a>
<a href=""mailto:jwal.a.0.06.1@gmail.com"">jwal.a.0.06.1@gmail.com</a>
<a href=""mailto:j.wa.la.0.06.1@gmail.com"">j.wa.la.0.06.1@gmail.com</a>
<a href=""mailto:jw.al.a0.061@gmail.com"">jw.al.a0.061@gmail.com</a>
<a href=""mailto:jw.ala00.61@gmail.com"">jw.ala00.61@gmail.com</a>
<a href=""mailto:jwala00.61@gmail.com"">jwala00.61@gmail.com</a>
<a href=""mailto:j.w.al.a.0061@gmail.com"">j.w.al.a.0061@gmail.com</a>
<a href=""mailto:jw.a.l.a.00.6.1@gmail.com"">jw.a.l.a.00.6.1@gmail.com</a>
<a href=""mailto:j.wal.a006.1@gmail.com"">j.wal.a006.1@gmail.com</a>
<a href=""mailto:jwala0.061@gmail.com"">jwala0.061@gmail.com</a>
<a href=""mailto:j.wa.l.a.0.0.61@gmail.com"">j.wa.l.a.0.0.61@gmail.com</a>
<a href=""mailto:j.w.a.la00.61@gmail.com"">j.w.a.la00.61@gmail.com</a>
<a href=""mailto:j.wala.0.061@gmail.com"">j.wala.0.061@gmail.com</a>
<a href=""mailto:j.wa.la0.06.1@gmail.com"">j.wa.la0.06.1@gmail.com</a>
<a href=""mailto:j.w.ala.00.61@gmail.com"">j.w.ala.00.61@gmail.com</a>
<a href=""mailto:j.w.al.a.006.1@gmail.com"">j.w.al.a.006.1@gmail.com</a>
<a href=""mailto:jwal.a.00.6.1@gmail.com"">jwal.a.00.6.1@gmail.com</a>
<a href=""mailto:j.wa.l.a.006.1@gmail.com"">j.wa.l.a.006.1@gmail.com</a>
<a href=""mailto:jw.ala.0.0.6.1@gmail.com"">jw.ala.0.0.6.1@gmail.com</a>
<a href=""mailto:j.w.a.l.a.006.1@gmail.com"">j.w.a.l.a.006.1@gmail.com</a>
<a href=""mailto:j.wala00.61@gmail.com"">j.wala00.61@gmail.com</a>
<a href=""mailto:j.wa.l.a.00.6.1@gmail.com"">j.wa.l.a.00.6.1@gmail.com</a>
<a href=""mailto:j.wa.la.0.0.6.1@gmail.com"">j.wa.la.0.0.6.1@gmail.com</a>
<a href=""mailto:jw.ala.00.6.1@gmail.com"">jw.ala.00.6.1@gmail.com</a>
<a href=""mailto:j.wa.l.a0061@gmail.com"">j.wa.l.a0061@gmail.com</a>
<a href=""mailto:jwa.l.a.0.0.61@gmail.com"">jwa.l.a.0.0.61@gmail.com</a>
<a href=""mailto:jwala.0.0.61@gmail.com"">jwala.0.0.61@gmail.com</a>
<a href=""mailto:jw.a.l.a0.06.1@gmail.com"">jw.a.l.a0.06.1@gmail.com</a>
<a href=""mailto:jwala0.0.61@gmail.com"">jwala0.0.61@gmail.com</a>
<a href=""mailto:j.wal.a0.0.61@gmail.com"">j.wal.a0.0.61@gmail.com</a>
<a href=""mailto:j.w.a.l.a.0.0.6.1@gmail.com"">j.w.a.l.a.0.0.6.1@gmail.com</a>
<a href=""mailto:jw.a.l.a.0.0.6.1@gmail.com"">jw.a.l.a.0.0.6.1@gmail.com</a>
<a href=""mailto:j.w.a.la.0.0.61@gmail.com"">j.w.a.la.0.0.61@gmail.com</a>
<a href=""mailto:j.wal.a.00.61@gmail.com"">j.wal.a.00.61@gmail.com</a>
<a href=""mailto:j.w.al.a0.061@gmail.com"">j.w.al.a0.061@gmail.com</a>
<a href=""mailto:j.wal.a.0.06.1@gmail.com"">j.wal.a.0.06.1@gmail.com</a>
<a href=""mailto:jwa.la0.06.1@gmail.com"">jwa.la0.06.1@gmail.com</a>
<a href=""mailto:jw.a.l.a.006.1@gmail.com"">jw.a.l.a.006.1@gmail.com</a>
<a href=""mailto:j.wa.l.a0.061@gmail.com"">j.wa.l.a0.061@gmail.com</a>
<a href=""mailto:jwa.la006.1@gmail.com"">jwa.la006.1@gmail.com</a>
<a href=""mailto:j.wa.l.a00.6.1@gmail.com"">j.wa.l.a00.6.1@gmail.com</a>
<a href=""mailto:j.wa.la0.0.61@gmail.com"">j.wa.la0.0.61@gmail.com</a>
<a href=""mailto:j.wa.l.a0.0.61@gmail.com"">j.wa.l.a0.0.61@gmail.com</a>
<a href=""mailto:j.wal.a0.0.6.1@gmail.com"">j.wal.a0.0.6.1@gmail.com</a>
<a href=""mailto:jw.al.a0.0.61@gmail.com"">jw.al.a0.0.61@gmail.com</a>
<a href=""mailto:jwa.l.a.0061@gmail.com"">jwa.l.a.0061@gmail.com</a>
<a href=""mailto:j.w.ala.0.0.61@gmail.com"">j.w.ala.0.0.61@gmail.com</a>
<a href=""mailto:j.w.a.l.a00.6.1@gmail.com"">j.w.a.l.a00.6.1@gmail.com</a>
<a href=""mailto:jwal.a00.61@gmail.com"">jwal.a00.61@gmail.com</a>
<a href=""mailto:j.w.a.l.a.0.0.61@gmail.com"">j.w.a.l.a.0.0.61@gmail.com</a>
<a href=""mailto:jw.a.la00.6.1@gmail.com"">jw.a.la00.6.1@gmail.com</a>
<a href=""mailto:jw.a.l.a.0061@gmail.com"">jw.a.l.a.0061@gmail.com</a>
<a href=""mailto:jw.ala0061@gmail.com"">jw.ala0061@gmail.com</a>
<a href=""mailto:j.w.ala0.061@gmail.com"">j.w.ala0.061@gmail.com</a>
<a href=""mailto:j.w.a.la0.0.61@gmail.com"">j.w.a.la0.0.61@gmail.com</a>
<a href=""mailto:j.wal.a.00.6.1@gmail.com"">j.wal.a.00.6.1@gmail.com</a>
<a href=""mailto:jw.a.l.a.0.06.1@gmail.com"">jw.a.l.a.0.06.1@gmail.com</a>
<a href=""mailto:j.w.al.a0.0.6.1@gmail.com"">j.w.al.a0.0.6.1@gmail.com</a>
<a href=""mailto:j.wa.la0.0.6.1@gmail.com"">j.wa.la0.0.6.1@gmail.com</a>
<a href=""mailto:jw.al.a0061@gmail.com"">jw.al.a0061@gmail.com</a>
<a href=""mailto:jw.ala.00.61@gmail.com"">jw.ala.00.61@gmail.com</a>
<a href=""mailto:jwa.la.0.0.6.1@gmail.com"">jwa.la.0.0.6.1@gmail.com</a>
<a href=""mailto:j.wa.la0.061@gmail.com"">j.wa.la0.061@gmail.com</a>
<a href=""mailto:j.w.ala00.61@gmail.com"">j.w.ala00.61@gmail.com</a>
<a href=""mailto:j.w.a.l.a.00.6.1@gmail.com"">j.w.a.l.a.00.6.1@gmail.com</a>
<a href=""mailto:j.w.a.l.a006.1@gmail.com"">j.w.a.l.a006.1@gmail.com</a>
<a href=""mailto:jwa.l.a0.0.61@gmail.com"">jwa.l.a0.0.61@gmail.com</a>
<a href=""mailto:jwal.a.0.0.6.1@gmail.com"">jwal.a.0.0.6.1@gmail.com</a>
<a href=""mailto:j.wa.l.a.0061@gmail.com"">j.wa.l.a.0061@gmail.com</a>
<a href=""mailto:jw.a.la.0.061@gmail.com"">jw.a.la.0.061@gmail.com</a>
<a href=""mailto:jwala.006.1@gmail.com"">jwala.006.1@gmail.com</a>
<a href=""mailto:j.w.ala0.0.6.1@gmail.com"">j.w.ala0.0.6.1@gmail.com</a>
<a href=""mailto:jwa.la00.6.1@gmail.com"">jwa.la00.6.1@gmail.com</a>
<a href=""mailto:jw.a.l.a006.1@gmail.com"">jw.a.l.a006.1@gmail.com</a>
<a href=""mailto:j.w.al.a.00.61@gmail.com"">j.w.al.a.00.61@gmail.com</a>
<a href=""mailto:jwala.00.6.1@gmail.com"">jwala.00.6.1@gmail.com</a>
<a href=""mailto:j.wa.l.a006.1@gmail.com"">j.wa.l.a006.1@gmail.com</a>
<a href=""mailto:j.wala.0.06.1@gmail.com"">j.wala.0.06.1@gmail.com</a>
<a href=""mailto:j.wal.a.0.0.61@gmail.com"">j.wal.a.0.0.61@gmail.com</a>
<a href=""mailto:jwala.0.0.6.1@gmail.com"">jwala.0.0.6.1@gmail.com</a>
<a href=""mailto:jw.a.la0.0.6.1@gmail.com"">jw.a.la0.0.6.1@gmail.com</a>
<a href=""mailto:jw.al.a.006.1@gmail.com"">jw.al.a.006.1@gmail.com</a>
<a href=""mailto:jw.al.a0.0.6.1@gmail.com"">jw.al.a0.0.6.1@gmail.com</a>
<a href=""mailto:jwa.l.a006.1@gmail.com"">jwa.l.a006.1@gmail.com</a>
<a href=""mailto:jw.a.la.0.06.1@gmail.com"">jw.a.la.0.06.1@gmail.com</a>
<a href=""mailto:jwal.a.0.0.61@gmail.com"">jwal.a.0.0.61@gmail.com</a>
<a href=""mailto:j.wal.a00.6.1@gmail.com"">j.wal.a00.6.1@gmail.com</a>
<a href=""mailto:j.w.a.la.0.061@gmail.com"">j.w.a.la.0.061@gmail.com</a>
<a href=""mailto:j.w.ala.00.6.1@gmail.com"">j.w.ala.00.6.1@gmail.com</a>
<a href=""mailto:j.w.ala.006.1@gmail.com"">j.w.ala.006.1@gmail.com</a>
<a href=""mailto:j.w.a.la006.1@gmail.com"">j.w.a.la006.1@gmail.com</a>
<a href=""mailto:jw.a.l.a0.0.6.1@gmail.com"">jw.a.l.a0.0.6.1@gmail.com</a>
<a href=""mailto:j.w.al.a0061@gmail.com"">j.w.al.a0061@gmail.com</a>
<a href=""mailto:j.w.a.l.a.0.061@gmail.com"">j.w.a.l.a.0.061@gmail.com</a>
<a href=""mailto:j.wa.la.006.1@gmail.com"">j.wa.la.006.1@gmail.com</a>
<a href=""mailto:j.w.al.a.00.6.1@gmail.com"">j.w.al.a.00.6.1@gmail.com</a>
<a href=""mailto:j.wala006.1@gmail.com"">j.wala006.1@gmail.com</a>
<a href=""mailto:jwa.l.a.00.6.1@gmail.com"">jwa.l.a.00.6.1@gmail.com</a>
<a href=""mailto:j.w.a.la0.061@gmail.com"">j.w.a.la0.061@gmail.com</a>
<a href=""mailto:jwa.la0.0.6.1@gmail.com"">jwa.la0.0.6.1@gmail.com</a>
<a href=""mailto:j.wal.a.0.061@gmail.com"">j.wal.a.0.061@gmail.com</a>
<a href=""mailto:j.wa.l.a00.61@gmail.com"">j.wa.l.a00.61@gmail.com</a>
<a href=""mailto:j.w.al.a.0.0.6.1@gmail.com"">j.w.al.a.0.0.6.1@gmail.com</a>
<a href=""mailto:j.w.a.l.a.0.06.1@gmail.com"">j.w.a.l.a.0.06.1@gmail.com</a>
<a href=""mailto:jwal.a.0.061@gmail.com"">jwal.a.0.061@gmail.com</a>
<a href=""mailto:j.wala0.06.1@gmail.com"">j.wala0.06.1@gmail.com</a>
<a href=""mailto:j.wa.la.00.61@gmail.com"">j.wa.la.00.61@gmail.com</a>
<a href=""mailto:jwa.la.0.061@gmail.com"">jwa.la.0.061@gmail.com</a>
<a href=""mailto:j.w.al.a.0.061@gmail.com"">j.w.al.a.0.061@gmail.com</a>
<a href=""mailto:jw.a.la.0061@gmail.com"">jw.a.la.0061@gmail.com</a>
<a href=""mailto:jwala.00.61@gmail.com"">jwala.00.61@gmail.com</a>
<a href=""mailto:jwa.la00.61@gmail.com"">jwa.la00.61@gmail.com</a>
<a href=""mailto:j.w.ala0.06.1@gmail.com"">j.w.ala0.06.1@gmail.com</a>
<a href=""mailto:j.w.a.la.00.6.1@gmail.com"">j.w.a.la.00.6.1@gmail.com</a>
<a href=""mailto:jw.a.l.a00.61@gmail.com"">jw.a.l.a00.61@gmail.com</a>
<a href=""mailto:j.wal.a00.61@gmail.com"">j.wal.a00.61@gmail.com</a>
<a href=""mailto:j.w.a.la.0061@gmail.com"">j.w.a.la.0061@gmail.com</a>
<a href=""mailto:j.wa.l.a.0.061@gmail.com"">j.wa.l.a.0.061@gmail.com</a>
<a href=""mailto:jw.a.l.a0.0.61@gmail.com"">jw.a.l.a0.0.61@gmail.com</a>
<a href=""mailto:j.w.a.la00.6.1@gmail.com"">j.w.a.la00.6.1@gmail.com</a>
<a href=""mailto:j.w.a.l.a0.061@gmail.com"">j.w.a.l.a0.061@gmail.com</a>
<a href=""mailto:j.w.al.a00.61@gmail.com"">j.w.al.a00.61@gmail.com</a>
<a href=""mailto:j.wala0.0.6.1@gmail.com"">j.wala0.0.6.1@gmail.com</a>
<a href=""mailto:j.w.a.la.0.06.1@gmail.com"">j.w.a.la.0.06.1@gmail.com</a>
<a href=""mailto:gudajim5@googlemail.com"">gudajim5@googlemail.com</a>
<a href=""mailto:gudajim5@googlemail.com"">gudajim5@googlemail.com</a>
<a href=""mailto:g.u.da.j.i.m.5@googlemail.com"">g.u.da.j.i.m.5@googlemail.com</a>
<a href=""mailto:guda.j.i.m5@googlemail.com"">guda.j.i.m5@googlemail.com</a>
<a href=""mailto:g.u.d.ajim5@googlemail.com"">g.u.d.ajim5@googlemail.com</a>
<a href=""mailto:gud.ajim.5@googlemail.com"">gud.ajim.5@googlemail.com</a>
<a href=""mailto:gu.d.a.j.i.m.5@googlemail.com"">gu.d.a.j.i.m.5@googlemail.com</a>
<a href=""mailto:gu.d.a.jim.5@googlemail.com"">gu.d.a.jim.5@googlemail.com</a>
<a href=""mailto:gudaj.i.m.5@googlemail.com"">gudaj.i.m.5@googlemail.com</a>
<a href=""mailto:g.u.daj.i.m5@googlemail.com"">g.u.daj.i.m5@googlemail.com</a>
<a href=""mailto:g.ud.aji.m.5@googlemail.com"">g.ud.aji.m.5@googlemail.com</a>
<a href=""mailto:g.ud.aj.im5@googlemail.com"">g.ud.aj.im5@googlemail.com</a>
<a href=""mailto:guda.jim5@googlemail.com"">guda.jim5@googlemail.com</a>
<a href=""mailto:gud.a.jim.5@googlemail.com"">gud.a.jim.5@googlemail.com</a>
<a href=""mailto:gu.da.j.i.m5@googlemail.com"">gu.da.j.i.m5@googlemail.com</a>
<a href=""mailto:g.udajim5@googlemail.com"">g.udajim5@googlemail.com</a>
<a href=""mailto:gud.aj.i.m.5@googlemail.com"">gud.aj.i.m.5@googlemail.com</a>
<a href=""mailto:gu.da.j.i.m.5@googlemail.com"">gu.da.j.i.m.5@googlemail.com</a>
<a href=""mailto:gudaji.m5@googlemail.com"">gudaji.m5@googlemail.com</a>
<a href=""mailto:g.udaj.i.m5@googlemail.com"">g.udaj.i.m5@googlemail.com</a>
<a href=""mailto:gud.a.j.im5@googlemail.com"">gud.a.j.im5@googlemail.com</a>
<a href=""mailto:g.u.da.j.im.5@googlemail.com"">g.u.da.j.im.5@googlemail.com</a>
<a href=""mailto:g.uda.j.im5@googlemail.com"">g.uda.j.im5@googlemail.com</a>
<a href=""mailto:g.u.daj.im.5@googlemail.com"">g.u.daj.im.5@googlemail.com</a>
<a href=""mailto:gudaj.i.m5@googlemail.com"">gudaj.i.m5@googlemail.com</a>
<a href=""mailto:g.u.d.aj.i.m.5@googlemail.com"">g.u.d.aj.i.m.5@googlemail.com</a>
<a href=""mailto:g.u.d.a.jim.5@googlemail.com"">g.u.d.a.jim.5@googlemail.com</a>
<a href=""mailto:g.ud.a.j.i.m5@googlemail.com"">g.ud.a.j.i.m5@googlemail.com</a>
<a href=""mailto:gu.d.ajim5@googlemail.com"">gu.d.ajim5@googlemail.com</a>
<a href=""mailto:g.u.dajim.5@googlemail.com"">g.u.dajim.5@googlemail.com</a>
<a href=""mailto:g.ud.a.jim.5@googlemail.com"">g.ud.a.jim.5@googlemail.com</a>
<a href=""mailto:g.ud.a.j.im.5@googlemail.com"">g.ud.a.j.im.5@googlemail.com</a>
<a href=""mailto:gu.daj.i.m.5@googlemail.com"">gu.daj.i.m.5@googlemail.com</a>
<a href=""mailto:gu.d.a.ji.m.5@googlemail.com"">gu.d.a.ji.m.5@googlemail.com</a>
<a href=""mailto:gud.ajim5@googlemail.com"">gud.ajim5@googlemail.com</a>
<a href=""mailto:gud.a.jim5@googlemail.com"">gud.a.jim5@googlemail.com</a>
<a href=""mailto:g.uda.ji.m.5@googlemail.com"">g.uda.ji.m.5@googlemail.com</a>
<a href=""mailto:guda.j.i.m.5@googlemail.com"">guda.j.i.m.5@googlemail.com</a>
<a href=""mailto:gu.daji.m.5@googlemail.com"">gu.daji.m.5@googlemail.com</a>
<a href=""mailto:g.u.d.a.j.i.m5@googlemail.com"">g.u.d.a.j.i.m5@googlemail.com</a>
<a href=""mailto:g.ud.aj.i.m5@googlemail.com"">g.ud.aj.i.m5@googlemail.com</a>
<a href=""mailto:gu.d.aj.im5@googlemail.com"">gu.d.aj.im5@googlemail.com</a>
<a href=""mailto:gu.daj.i.m5@googlemail.com"">gu.daj.i.m5@googlemail.com</a>
<a href=""mailto:gudaj.im.5@googlemail.com"">gudaj.im.5@googlemail.com</a>
<a href=""mailto:gu.d.aj.im.5@googlemail.com"">gu.d.aj.im.5@googlemail.com</a>
<a href=""mailto:g.u.daji.m5@googlemail.com"">g.u.daji.m5@googlemail.com</a>
<a href=""mailto:gud.aji.m5@googlemail.com"">gud.aji.m5@googlemail.com</a>
<a href=""mailto:g.u.d.a.jim5@googlemail.com"">g.u.d.a.jim5@googlemail.com</a>
<a href=""mailto:gu.d.a.jim5@googlemail.com"">gu.d.a.jim5@googlemail.com</a>
<a href=""mailto:g.udaj.im.5@googlemail.com"">g.udaj.im.5@googlemail.com</a>
<a href=""mailto:gu.d.a.j.i.m5@googlemail.com"">gu.d.a.j.i.m5@googlemail.com</a>
<a href=""mailto:g.ud.ajim5@googlemail.com"">g.ud.ajim5@googlemail.com</a>
<a href=""mailto:gu.d.aji.m.5@googlemail.com"">gu.d.aji.m.5@googlemail.com</a>
<a href=""mailto:g.udajim.5@googlemail.com"">g.udajim.5@googlemail.com</a>
<a href=""mailto:gu.d.aji.m5@googlemail.com"">gu.d.aji.m5@googlemail.com</a>
<a href=""mailto:g.ud.a.j.i.m.5@googlemail.com"">g.ud.a.j.i.m.5@googlemail.com</a>
<a href=""mailto:g.ud.a.jim5@googlemail.com"">g.ud.a.jim5@googlemail.com</a>
<a href=""mailto:gu.da.jim.5@googlemail.com"">gu.da.jim.5@googlemail.com</a>
<a href=""mailto:g.udaji.m5@googlemail.com"">g.udaji.m5@googlemail.com</a>
<a href=""mailto:gudaji.m.5@googlemail.com"">gudaji.m.5@googlemail.com</a>
<a href=""mailto:gu.daji.m5@googlemail.com"">gu.daji.m5@googlemail.com</a>
<a href=""mailto:gu.da.ji.m.5@googlemail.com"">gu.da.ji.m.5@googlemail.com</a>
<a href=""mailto:g.u.da.j.i.m5@googlemail.com"">g.u.da.j.i.m5@googlemail.com</a>
<a href=""mailto:g.uda.jim5@googlemail.com"">g.uda.jim5@googlemail.com</a>
<a href=""mailto:g.u.dajim5@googlemail.com"">g.u.dajim5@googlemail.com</a>
<a href=""mailto:g.ud.a.ji.m5@googlemail.com"">g.ud.a.ji.m5@googlemail.com</a>
<a href=""mailto:g.u.d.aj.im5@googlemail.com"">g.u.d.aj.im5@googlemail.com</a>
<a href=""mailto:g.ud.a.j.im5@googlemail.com"">g.ud.a.j.im5@googlemail.com</a>
<a href=""mailto:guda.ji.m5@googlemail.com"">guda.ji.m5@googlemail.com</a>
<a href=""mailto:gu.d.aj.i.m.5@googlemail.com"">gu.d.aj.i.m.5@googlemail.com</a>
<a href=""mailto:gu.da.j.im.5@googlemail.com"">gu.da.j.im.5@googlemail.com</a>
<a href=""mailto:g.u.da.j.im5@googlemail.com"">g.u.da.j.im5@googlemail.com</a>
<a href=""mailto:gud.aj.im5@googlemail.com"">gud.aj.im5@googlemail.com</a>
<a href=""mailto:g.udaji.m.5@googlemail.com"">g.udaji.m.5@googlemail.com</a>
<a href=""mailto:g.u.d.aji.m5@googlemail.com"">g.u.d.aji.m5@googlemail.com</a>
<a href=""mailto:gu.da.jim5@googlemail.com"">gu.da.jim5@googlemail.com</a>
<a href=""mailto:gu.da.ji.m5@googlemail.com"">gu.da.ji.m5@googlemail.com</a>
<a href=""mailto:g.u.d.aj.im.5@googlemail.com"">g.u.d.aj.im.5@googlemail.com</a>
<a href=""mailto:gu.daj.im.5@googlemail.com"">gu.daj.im.5@googlemail.com</a>
<a href=""mailto:g.u.da.ji.m.5@googlemail.com"">g.u.da.ji.m.5@googlemail.com</a>
<a href=""mailto:guda.j.im.5@googlemail.com"">guda.j.im.5@googlemail.com</a>
<a href=""mailto:gudaj.im5@googlemail.com"">gudaj.im5@googlemail.com</a>
<a href=""mailto:gud.a.ji.m.5@googlemail.com"">gud.a.ji.m.5@googlemail.com</a>
<a href=""mailto:gud.aji.m.5@googlemail.com"">gud.aji.m.5@googlemail.com</a>
<a href=""mailto:gud.a.j.i.m.5@googlemail.com"">gud.a.j.i.m.5@googlemail.com</a>
<a href=""mailto:g.uda.jim.5@googlemail.com"">g.uda.jim.5@googlemail.com</a>
<a href=""mailto:g.u.daji.m.5@googlemail.com"">g.u.daji.m.5@googlemail.com</a>
<a href=""mailto:gu.dajim5@googlemail.com"">gu.dajim5@googlemail.com</a>
<a href=""mailto:g.ud.aj.i.m.5@googlemail.com"">g.ud.aj.i.m.5@googlemail.com</a>
<a href=""mailto:g.u.d.a.ji.m5@googlemail.com"">g.u.d.a.ji.m5@googlemail.com</a>
<a href=""mailto:gu.daj.im5@googlemail.com"">gu.daj.im5@googlemail.com</a>
<a href=""mailto:gud.aj.i.m5@googlemail.com"">gud.aj.i.m5@googlemail.com</a>
<a href=""mailto:gu.dajim.5@googlemail.com"">gu.dajim.5@googlemail.com</a>
<a href=""mailto:gu.d.a.j.im.5@googlemail.com"">gu.d.a.j.im.5@googlemail.com</a>
<a href=""mailto:g.u.da.ji.m5@googlemail.com"">g.u.da.ji.m5@googlemail.com</a>
<a href=""mailto:gud.aj.im.5@googlemail.com"">gud.aj.im.5@googlemail.com</a>
<a href=""mailto:g.uda.j.im.5@googlemail.com"">g.uda.j.im.5@googlemail.com</a>
<a href=""mailto:g.u.d.aji.m.5@googlemail.com"">g.u.d.aji.m.5@googlemail.com</a>
<a href=""mailto:gud.a.j.i.m5@googlemail.com"">gud.a.j.i.m5@googlemail.com</a>
<a href=""mailto:g.u.da.jim5@googlemail.com"">g.u.da.jim5@googlemail.com</a>
<a href=""mailto:g.u.d.a.j.im.5@googlemail.com"">g.u.d.a.j.im.5@googlemail.com</a>
<a href=""mailto:g.u.d.ajim.5@googlemail.com"">g.u.d.ajim.5@googlemail.com</a>
<a href=""mailto:g.u.daj.im5@googlemail.com"">g.u.daj.im5@googlemail.com</a>
<a href=""mailto:g.ud.aj.im.5@googlemail.com"">g.ud.aj.im.5@googlemail.com</a>
<a href=""mailto:g.ud.a.ji.m.5@googlemail.com"">g.ud.a.ji.m.5@googlemail.com</a>
<a href=""mailto:g.ud.ajim.5@googlemail.com"">g.ud.ajim.5@googlemail.com</a>
<a href=""mailto:gud.a.ji.m5@googlemail.com"">gud.a.ji.m5@googlemail.com</a>
<a href=""mailto:g.u.d.a.j.i.m.5@googlemail.com"">g.u.d.a.j.i.m.5@googlemail.com</a>
<a href=""mailto:gu.d.a.ji.m5@googlemail.com"">gu.d.a.ji.m5@googlemail.com</a>
<a href=""mailto:gu.d.aj.i.m5@googlemail.com"">gu.d.aj.i.m5@googlemail.com</a>
<a href=""mailto:gu.d.ajim.5@googlemail.com"">gu.d.ajim.5@googlemail.com</a>
<a href=""mailto:g.uda.ji.m5@googlemail.com"">g.uda.ji.m5@googlemail.com</a>
<a href=""mailto:guda.ji.m.5@googlemail.com"">guda.ji.m.5@googlemail.com</a>
<a href=""mailto:g.ud.aji.m5@googlemail.com"">g.ud.aji.m5@googlemail.com</a>
<a href=""mailto:g.uda.j.i.m.5@googlemail.com"">g.uda.j.i.m.5@googlemail.com</a>
<a href=""mailto:gu.da.j.im5@googlemail.com"">gu.da.j.im5@googlemail.com</a>
<a href=""mailto:g.u.d.a.ji.m.5@googlemail.com"">g.u.d.a.ji.m.5@googlemail.com</a>
<a href=""mailto:g.u.da.jim.5@googlemail.com"">g.u.da.jim.5@googlemail.com</a>
<a href=""mailto:g.u.daj.i.m.5@googlemail.com"">g.u.daj.i.m.5@googlemail.com</a>
<a href=""mailto:gu.d.a.j.im5@googlemail.com"">gu.d.a.j.im5@googlemail.com</a>
<a href=""mailto:guda.j.im5@googlemail.com"">guda.j.im5@googlemail.com</a>
<a href=""mailto:g.uda.j.i.m5@googlemail.com"">g.uda.j.i.m5@googlemail.com</a>
<a href=""mailto:gudajim.5@googlemail.com"">gudajim.5@googlemail.com</a>
<a href=""mailto:g.u.d.a.j.im5@googlemail.com"">g.u.d.a.j.im5@googlemail.com</a>
<a href=""mailto:g.u.d.aj.i.m5@googlemail.com"">g.u.d.aj.i.m5@googlemail.com</a>
<a href=""mailto:gud.a.j.im.5@googlemail.com"">gud.a.j.im.5@googlemail.com</a>
<a href=""mailto:guda.jim.5@googlemail.com"">guda.jim.5@googlemail.com</a>
<a href=""mailto:g.udaj.i.m.5@googlemail.com"">g.udaj.i.m.5@googlemail.com</a>
<a href=""mailto:g.udaj.im5@googlemail.com"">g.udaj.im5@googlemail.com</a>"
94RqBJ0F,Semaforo,cypictronic,Arduino,Sunday 12th of November 2023 08:38:46 PM CDT,"int verde = 13;
int amarillo = 12;
int rojo = 11;


void setup() {
  // put your setup code here, to run once:
 pinMode(verde,OUTPUT);
 pinMode(amarillo,OUTPUT);
 pinMode(rojo,OUTPUT);
}

void loop() {
  // put your main code here, to run repeatedly:
  digitalWrite(verde,HIGH); // LED VERDE ON
  digitalWrite(amarillo,LOW); // LED AMARILLO OFF
  digitalWrite(rojo,LOW); // LED ROJO OFF

  delay(2000);

  digitalWrite(verde,LOW);
  digitalWrite(amarillo,LOW);
  digitalWrite(rojo,HIGH);

  delay(2000);

  digitalWrite(verde, LOW);
  digitalWrite(amarillo,HIGH);
  digitalWrite(rojo,LOW);

  delay(1000);
}"
iaMHTQJW,Arduino COM I2C,LucasZds,C,Sunday 12th of November 2023 07:56:02 PM CDT,"/*CONTROL SENSORES M1*/
int TRIGGER_PINS[] = {A2, A0, 5, 12};
int ECHO_PINS[] = {A3, A1, 4, 11};
int LEDS[] = {7, 8, 6, 13};
int SENSOR_LIMIT[] = {60, 60, 60, 60};

// sensor 1 | sensor 2 | sensor 3 | sensor 4
// adelante | atras | izquierda | derecha
int distance = 0; 
#define NUM_SENSORS  4
byte sensorState = 0;
unsigned long tiempoAnterior = 0;
const unsigned long INTERVALO_LECTURA = 10; // Intervalo entre lecturas en milisegundos

void setup() {
  Serial.begin(9600);
  for (int i = 0; i < NUM_SENSORS; ++i) {
    pinMode(TRIGGER_PINS[i], OUTPUT);
    pinMode(ECHO_PINS[i], INPUT);
    pinMode(LEDS[i], OUTPUT);
  }
}

int getDistance(int triggerPin, int echoPin) {
  long duration;
  digitalWrite(triggerPin, LOW);
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(20);
  digitalWrite(triggerPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  return (duration / 2) / 29.1;
}

void loop() {
  if (millis() - tiempoAnterior >= INTERVALO_LECTURA) {
    for (int i = 0; i < NUM_SENSORS; ++i) {
      distance = getDistance(TRIGGER_PINS[i], ECHO_PINS[i]);
      distance = i*30;
      sensorState = (sensorState & ~(1 << i)) | ((distance >= SENSOR_LIMIT[i]) << i);
      digitalWrite(LEDS[i], (distance >= SENSOR_LIMIT[i]) ? HIGH : LOW);
    }
    Serial.write(sensorState);
    tiempoAnterior = millis();
  }
}
/*CONTROL SENSORES M1*/

/*CONTROL MANDO M1*/
#include <SoftwareSerial.h>

SoftwareSerial bluetoothSerial(12, 11); // RX (pin 12) y TX (pin 11) para la comunicación Bluetooth

#define NUM_SENSORS 4
byte receivedSensorState = 0;

#define NUM_SALIDAS 2
#define TIEMPO_MOVIMIENTO 5000 //ms
unsigned char PINES_OUT[] = {5, 10};
unsigned char LEDS[] = {4, 2, 3, 9};
unsigned long tiempoInicioMovimiento = 0;

#define ADELANTE 0
#define ATRAS 1
#define IZQUIERDA 2
#define DERECHA 3

#define BLINK_INTERVAL 100
unsigned long tiempoAnterior = 0; // tiempo del último cambio de estado del led
bool estadoLED = LOW;             // Estado actual de los LEDs

void led_onoff(unsigned char led) {
  if (millis() - tiempoAnterior >= BLINK_INTERVAL) {
    digitalWrite(led, estadoLED);
    tiempoAnterior = millis();
    estadoLED = !estadoLED;
  }
}

unsigned char State_Sensors(unsigned char movimiento) {
  led_onoff(LEDS[3]); // led para movimiento
  receivedSensorState = Serial.read();
  if(receivedSensorState != 0xFF){
    if ((receivedSensorState & (1 << movimiento)) != 0) {
        return 1;
    } else return 0;
  }
  
}

void movimiento_adelante() {
  // adelante
  analogWrite(PINES_OUT[1], 200);
}

void movimiento_atras() {
  // atras
  analogWrite(PINES_OUT[1], 56);
}

void movimiento_izquierda() {
  // izquierda
  analogWrite(PINES_OUT[0], 200);
}

void movimiento_derecha() {
  // derecha
  analogWrite(PINES_OUT[0], 56);
}

void movimiento_stop() {
  // stop
  digitalWrite(LEDS[3], LOW);
  analogWrite(PINES_OUT[0], 128);
  analogWrite(PINES_OUT[1], 128);
}

void setup() {
  Serial.begin(9600);
  bluetoothSerial.begin(9600);
  for (int i = 0; i < NUM_SENSORS; i++) {
    pinMode(LEDS[i], OUTPUT);
  }
  for (int i = 0; i < NUM_SALIDAS; i++) {
    pinMode(PINES_OUT[i], OUTPUT);
  }
}

void loop() {
  if (Serial.available() > 0) {
    digitalWrite(LEDS[0], LOW);
    // verificar bt, obtención del movimiento, comparo y mando a las funciones
    if (bluetoothSerial.available() > 0) {
      digitalWrite(LEDS[1], LOW);
      char sentido = bluetoothSerial.read();
      tiempoInicioMovimiento = millis();

      switch (sentido) {
        case 0x11:
          movimiento_adelante();
          while ((millis() - tiempoInicioMovimiento < TIEMPO_MOVIMIENTO) && (State_Sensors( ADELANTE) != 1));
          movimiento_stop();

          break;
        case 0x12:
          movimiento_atras();
          while ((millis() - tiempoInicioMovimiento < TIEMPO_MOVIMIENTO) && (State_Sensors( ATRAS) != 1));
          movimiento_stop();

          break;
        case 0x14:
          movimiento_izquierda();
          while ((millis() - tiempoInicioMovimiento < TIEMPO_MOVIMIENTO) && (State_Sensors( IZQUIERDA) != 1));
          movimiento_stop();

          break;
        case 0x18:
          movimiento_derecha();
          while ((millis() - tiempoInicioMovimiento < TIEMPO_MOVIMIENTO) && (State_Sensors( DERECHA) != 1));
          movimiento_stop();

          break;
        default:
          movimiento_stop();
      }

    } else
      led_onoff(LEDS[1]);
    // verificar bt, obtención del movimiento, comparo y mando a las funciones
  } else
    led_onoff(LEDS[0]);
}  // verificar serial, obtención de distancias comparo y entro
/*CONTROL MANDO M1*/"
48uwZ40f,ny kig,iconoclasthero,Bash,Sunday 12th of November 2023 07:52:47 PM CDT,"$ cat mylogfile 
$ bash dev_setup.sh 
Creating /var/log/mycroft/ directory

                    Welcome to Mycroft!  

This script is designed to make working with Mycroft easy.  During this
first run of dev_setup we will ask you a few questions to help setup
your environment.

Do you want to run on 'master' or against a dev branch?  Unless you are
a developer modifying mycroft-core itself, you should run on the
'master' branch.  It is updated bi-weekly with a stable release.
  Y)es, run on the stable 'master' branch
  N)o, I want to run unstable branches
Choice [Y/N]:  Y - using 'master' branch 
Branch 'master' set up to track remote branch 'master' from 'origin'.
Switched to a new branch 'master'

Mycroft is actively developed and constantly evolving.  It is recommended
that you update regularly.  Would you like to automatically update
whenever launching Mycroft?  This is highly recommended, especially for
those running against the 'master' branch.
  Y)es, automatically check for updates
  N)o, I will be responsible for keeping Mycroft updated.
Choice [Y/N]:  Y - update automatically 

Mycroft uses its Mimic technology to speak to you.  Mimic can run both
locally and from a server.  The local Mimic is more robotic, but always
available regardless of network connectivity.  It will act as a fallback
if unable to contact the Mimic server.

However, building the local Mimic is time consuming -- it can take hours
on slower machines.  This can be skipped, but Mycroft will be unable to
talk if you lose network connectivity.  Would you like to build Mimic
locally?
Choice [Y/N]:  Y - Mimic will be built 


There are several Mycroft helper commands in the bin folder.  These
can be added to your system PATH, making it simpler to use Mycroft.
Would you like this to be added to your PATH in the .profile?
Choice [Y/N]:  Y - Adding Mycroft commands to your PATH 
Type mycroft-help to see available commands.

The standard location for Mycroft skills is under /opt/mycroft/skills.
This script will create that folder for you.  This requires sudo
permission and might ask you for a password...
Created!
For convenience, a soft link has been created called 'skills' which leads
to /opt/mycroft/skills.

(Developer) Do you want to automatically check code-style when submitting code.
If unsure answer yes.

Choice [Y/N]: Will install PEP8 pre-commit hook...

Interactive portion complete, now installing dependencies...

Installing packages...
 Installing packages for Debian/Ubuntu/Mint...

We have detected that your computer has the libjack-jackd2-0 package installed.
Mycroft requires a conflicting package, and will likely uninstall this package.
On some systems, this can cause other programs to be marked for removal.
Please review the following package changes carefully.
Press enter to continue
[sudo] password for user: 
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
autoconf is already the newest version (2.71-2).
automake is already the newest version (1:1.16.5-1.3).
build-essential is already the newest version (12.9ubuntu3).
jq is already the newest version (1.6-2.1ubuntu3).
libffi-dev is already the newest version (3.4.2-4).
libffi-dev set to manually installed.
libicu-dev is already the newest version (70.1-2).
libjpeg-dev is already the newest version (8c-2ubuntu10).
libtool is already the newest version (2.4.6-15build2).
pkg-config is already the newest version (0.29.2-1ubuntu3).
curl is already the newest version (7.81.0-1ubuntu1.14).
git is already the newest version (1:2.34.1-1ubuntu1.10).
libglib2.0-dev is already the newest version (2.72.4-0ubuntu2.2).
libssl-dev is already the newest version (3.0.2-0ubuntu1.12).
pulseaudio is already the newest version (1:15.99.1+dfsg1-1ubuntu2.1).
pulseaudio set to manually installed.
pulseaudio-utils is already the newest version (1:15.99.1+dfsg1-1ubuntu2.1).
pulseaudio-utils set to manually installed.
python3 is already the newest version (3.10.6-1~22.04).
python3-dev is already the newest version (3.10.6-1~22.04).
python3-dev set to manually installed.
python3-setuptools is already the newest version (59.6.0-1.2ubuntu0.22.04.1).
python3-setuptools set to manually installed.
flac is already the newest version (1.3.3-2ubuntu0.2).
The following additional packages will be installed:
  libfann2 libportaudiocpp0 swig4.0
Suggested packages:
  bison-doc libfann-doc jackd oss-compat oss4-base portaudio19-doc byobu | screenie | iselect swig-doc swig-examples swig4.0-examples swig4.0-doc
The following NEW packages will be installed:
  bison libfann-dev libfann2 libportaudiocpp0 mpg123 portaudio19-dev screen swig swig4.0
0 upgraded, 9 newly installed, 0 to remove and 16 not upgraded.
Need to get 2964 kB of archives.
After this operation, 11.5 MB of additional disk space will be used.
Do you want to continue? [Y/n] 
Get:1 http://us.archive.ubuntu.com/ubuntu jammy/main amd64 bison amd64 2:3.8.2+dfsg-1build1 [748 kB]
Get:2 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 libfann2 amd64 2.2.0+ds-6 [63.5 kB]
Get:3 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 libfann-dev amd64 2.2.0+ds-6 [88.0 kB]
Get:4 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 libportaudiocpp0 amd64 19.6.0-1.1 [16.1 kB]
Get:5 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 mpg123 amd64 1.29.3-1build1 [155 kB]
Get:6 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 portaudio19-dev amd64 19.6.0-1.1 [106 kB]
Get:7 http://us.archive.ubuntu.com/ubuntu jammy/main amd64 screen amd64 4.9.0-1 [672 kB]
Get:8 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 swig4.0 amd64 4.0.2-1ubuntu1 [1110 kB]
Get:9 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 swig all 4.0.2-1ubuntu1 [5632 B]
Fetched 2964 kB in 1s (4624 kB/s)
Selecting previously unselected package bison.
(Reading database ... 478165 files and directories currently installed.)
Preparing to unpack .../0-bison_2%3a3.8.2+dfsg-1build1_amd64.deb ...
Unpacking bison (2:3.8.2+dfsg-1build1) ...
Selecting previously unselected package libfann2:amd64.
Preparing to unpack .../1-libfann2_2.2.0+ds-6_amd64.deb ...
Unpacking libfann2:amd64 (2.2.0+ds-6) ...
Selecting previously unselected package libfann-dev:amd64.
Preparing to unpack .../2-libfann-dev_2.2.0+ds-6_amd64.deb ...
Unpacking libfann-dev:amd64 (2.2.0+ds-6) ...
Selecting previously unselected package libportaudiocpp0:amd64.
Preparing to unpack .../3-libportaudiocpp0_19.6.0-1.1_amd64.deb ...
Unpacking libportaudiocpp0:amd64 (19.6.0-1.1) ...
Selecting previously unselected package mpg123.
Preparing to unpack .../4-mpg123_1.29.3-1build1_amd64.deb ...
Unpacking mpg123 (1.29.3-1build1) ...
Selecting previously unselected package portaudio19-dev:amd64.
Preparing to unpack .../5-portaudio19-dev_19.6.0-1.1_amd64.deb ...
Unpacking portaudio19-dev:amd64 (19.6.0-1.1) ...
Selecting previously unselected package screen.
Preparing to unpack .../6-screen_4.9.0-1_amd64.deb ...
Unpacking screen (4.9.0-1) ...
Selecting previously unselected package swig4.0.
Preparing to unpack .../7-swig4.0_4.0.2-1ubuntu1_amd64.deb ...
Unpacking swig4.0 (4.0.2-1ubuntu1) ...
Selecting previously unselected package swig.
Preparing to unpack .../8-swig_4.0.2-1ubuntu1_all.deb ...
Unpacking swig (4.0.2-1ubuntu1) ...
Setting up screen (4.9.0-1) ...
Setting up mpg123 (1.29.3-1build1) ...
update-alternatives: using /usr/bin/mpg123.bin to provide /usr/bin/mpg123 (mpg123) in auto mode
update-alternatives: using /usr/bin/mpg123.bin to provide /usr/bin/mp3-decoder (mp3-decoder) in auto mode
Setting up libportaudiocpp0:amd64 (19.6.0-1.1) ...
Setting up portaudio19-dev:amd64 (19.6.0-1.1) ...
Setting up bison (2:3.8.2+dfsg-1build1) ...
update-alternatives: using /usr/bin/bison.yacc to provide /usr/bin/yacc (yacc) in auto mode
Setting up swig4.0 (4.0.2-1ubuntu1) ...
Setting up libfann2:amd64 (2.2.0+ds-6) ...
Setting up libfann-dev:amd64 (2.2.0+ds-6) ...
Setting up swig (4.0.2-1ubuntu1) ...
Processing triggers for man-db (2.10.2-1) ...
Processing triggers for install-info (6.8-4build1) ...
Processing triggers for mailcap (3.70+nmu1ubuntu1) ...
Processing triggers for libc-bin (2.35-0ubuntu3.4) ...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 2570k  100 2570k    0     0  3596k      0 --:--:-- --:--:-- --:--:-- 3595k
Collecting pip==20.0.2
  Downloading pip-20.0.2-py2.py3-none-any.whl (1.4 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.4/1.4 MB 5.4 MB/s eta 0:00:00
Collecting setuptools
  Downloading setuptools-68.2.2-py3-none-any.whl.metadata (6.3 kB)
Collecting wheel
  Downloading wheel-0.41.3-py3-none-any.whl.metadata (2.2 kB)
Downloading setuptools-68.2.2-py3-none-any.whl (807 kB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 807.9/807.9 kB 5.8 MB/s eta 0:00:00
Downloading wheel-0.41.3-py3-none-any.whl (65 kB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 65.8/65.8 kB 7.5 MB/s eta 0:00:00
Installing collected packages: wheel, setuptools, pip
Successfully installed pip-20.0.2 setuptools-68.2.2 wheel-0.41.3

[notice] A new release of pip is available: 20.0.2 -> 23.3.1
[notice] To update, run: python3 -m pip install --upgrade pip
Installing PEP8 check as precommit-hook
Adding mycroft-core to virtualenv path
Collecting requests<2.26.0,>=2.20.0
  Downloading requests-2.25.1-py2.py3-none-any.whl (61 kB)
     |████████████████████████████████| 61 kB 2.6 MB/s 
Collecting gTTS<2.3.0,>=2.2.2
  Downloading gTTS-2.2.4-py3-none-any.whl (26 kB)
Collecting PyAudio==0.2.11
  Downloading PyAudio-0.2.11.tar.gz (37 kB)
Collecting pyee==8.1.0
  Downloading pyee-8.1.0-py2.py3-none-any.whl (12 kB)
Collecting SpeechRecognition==3.8.1
  Downloading SpeechRecognition-3.8.1-py2.py3-none-any.whl (32.8 MB)
     |████████████████████████████████| 32.8 MB 5.0 MB/s 
Collecting tornado~=6.1
  Downloading tornado-6.3.3-cp38-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (427 kB)
     |████████████████████████████████| 427 kB 4.9 MB/s 
Collecting websocket-client~=1.2.1
  Downloading websocket_client-1.2.3-py3-none-any.whl (53 kB)
     |████████████████████████████████| 53 kB 5.6 MB/s 
Collecting requests-futures==0.9.5
  Downloading requests-futures-0.9.5.tar.gz (5.3 kB)
Collecting pyserial==3.0
  Downloading pyserial-3.0.tar.gz (133 kB)
     |████████████████████████████████| 133 kB 2.8 MB/s 
Collecting psutil==5.6.6
  Downloading psutil-5.6.6.tar.gz (447 kB)
     |████████████████████████████████| 447 kB 5.7 MB/s 
Collecting pocketsphinx==0.1.0
  Downloading pocketsphinx-0.1.0.tar.gz (503 kB)
     |████████████████████████████████| 503 kB 5.4 MB/s 
Collecting inflection==0.3.1
  Downloading inflection-0.3.1.tar.gz (8.7 kB)
Collecting pillow==8.3.2
  Downloading Pillow-8.3.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)
     |████████████████████████████████| 3.0 MB 5.7 MB/s 
Collecting python-dateutil==2.6.0
  Downloading python_dateutil-2.6.0-py2.py3-none-any.whl (194 kB)
     |████████████████████████████████| 194 kB 5.8 MB/s 
Collecting fasteners==0.14.1
  Downloading fasteners-0.14.1-py2.py3-none-any.whl (20 kB)
Collecting PyYAML==5.4
  Downloading PyYAML-5.4.tar.gz (174 kB)
     |████████████████████████████████| 174 kB 5.7 MB/s 
  Installing build dependencies ... done
  Getting requirements to build wheel ... error
  ERROR: Command errored out with exit status 1:
   command: /home/user/bin/gits/mycroft-core/.venv/bin/python3 /home/user/bin/gits/mycroft-core/.venv/lib/python3.10/site-packages/pip/_vendor/pep517/_in_process.py get_requires_for_build_wheel /tmp/tmpfe5vyzd0
       cwd: /tmp/pip-install-2zhk_4cu/PyYAML
  Complete output (62 lines):
  /tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/config/setupcfg.py:293: _DeprecatedConfig: Deprecated config in `setup.cfg`
  !!
  
          ********************************************************************************
          The license_file parameter is deprecated, use license_files instead.
  
          This deprecation is overdue, please update your project and remove deprecated
          calls to avoid build errors in the future.
  
          See https://setuptools.pypa.io/en/latest/userguide/declarative_config.html for details.
          ********************************************************************************
  
  !!
    parsed = self.parsers.get(option_name, lambda x: x)(value)
  running egg_info
  writing lib3/PyYAML.egg-info/PKG-INFO
  writing dependency_links to lib3/PyYAML.egg-info/dependency_links.txt
  writing top-level names to lib3/PyYAML.egg-info/top_level.txt
  Traceback (most recent call last):
    File ""/home/user/bin/gits/mycroft-core/.venv/lib/python3.10/site-packages/pip/_vendor/pep517/_in_process.py"", line 257, in <module>
      main()
    File ""/home/user/bin/gits/mycroft-core/.venv/lib/python3.10/site-packages/pip/_vendor/pep517/_in_process.py"", line 240, in main
      json_out['return_val'] = hook(**hook_input['kwargs'])
    File ""/home/user/bin/gits/mycroft-core/.venv/lib/python3.10/site-packages/pip/_vendor/pep517/_in_process.py"", line 91, in get_requires_for_build_wheel
      return hook(config_settings)
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/build_meta.py"", line 355, in get_requires_for_build_wheel
      return self._get_build_requires(config_settings, requirements=['wheel'])
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/build_meta.py"", line 325, in _get_build_requires
      self.run_setup()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/build_meta.py"", line 341, in run_setup
      exec(code, locals())
    File ""<string>"", line 271, in <module>
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/__init__.py"", line 103, in setup
      return distutils.core.setup(**attrs)
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/_distutils/core.py"", line 185, in setup
      return run_commands(dist)
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/_distutils/core.py"", line 201, in run_commands
      dist.run_commands()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/_distutils/dist.py"", line 969, in run_commands
      self.run_command(cmd)
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/dist.py"", line 989, in run_command
      super().run_command(command)
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/_distutils/dist.py"", line 988, in run_command
      cmd_obj.run()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/command/egg_info.py"", line 318, in run
      self.find_sources()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/command/egg_info.py"", line 326, in find_sources
      mm.run()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/command/egg_info.py"", line 548, in run
      self.add_defaults()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/command/egg_info.py"", line 586, in add_defaults
      sdist.add_defaults(self)
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/command/sdist.py"", line 113, in add_defaults
      super().add_defaults()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/_distutils/command/sdist.py"", line 251, in add_defaults
      self._add_defaults_ext()
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/_distutils/command/sdist.py"", line 336, in _add_defaults_ext
      self.filelist.extend(build_ext.get_source_files())
    File ""<string>"", line 201, in get_source_files
    File ""/tmp/pip-build-env-plq5pcdn/overlay/lib/python3.10/site-packages/setuptools/_distutils/cmd.py"", line 107, in __getattr__
      raise AttributeError(attr)
  AttributeError: cython_sources
  ----------------------------------------
ERROR: Command errored out with exit status 1: /home/user/bin/gits/mycroft-core/.venv/bin/python3 /home/user/bin/gits/mycroft-core/.venv/lib/python3.10/site-packages/pip/_vendor/pep517/_in_process.py get_requires_for_build_wheel /tmp/tmpfe5vyzd0 Check the logs for full command output.
Warning: Failed to install required dependencies. Continue? y/N
"
qkPay9Sd,Day04 perimeter,HarrJ,Java,Sunday 12th of November 2023 07:47:38 PM CDT,"public class Day04C {
    public static void main(String[] args) {
        double base = 13;
        double height = 10;
        double area;
        
        area = (base * height) / 2;
        
        System.out.println(""the area of a triangle with "");
        System.out.println(""a base of "" + base);
        System.out.println(""and a height of "" + height);
        System.out.println(""is "" + area);
        
        double lenght;
        double width;
        double perimeter;
        // make a formula to get the perimiter of a rectangle
        
        
        System.out.println(""the perimeter of a rectangle with "");
        System.out.println(""a length of "" + lenght);
        System.out.println(""and a width of "" + width);
        System.out.println(""is "" + perimeter);
    }
}
"
bMBCJupp,Untitled,NikitaM,C++,Sunday 12th of November 2023 06:30:54 PM CDT,"#include <iostream>
#include <vector>
#include <utility>
#include <queue>
#include <stack>

using namespace std;

const double double_inf=1e18;


int main(int argc, char *argv[])
{
	int n;
	cin>>n;
	
	vector<int> t(n+1);
	vector<int> v(n+1);
	
	for(int i=1; i<=n; ++i)
	    cin>>t[i]>>v[i];
	    
	vector<vector<pair<int,int>>> g(n+1);
	
	for(int i=0; i<n-1; ++i){
	      int a,b, s;
	      cin>>a>>b>>s;
	      g[a].push_back({b,s});
	      g[b].push_back({a,s});
	}
	
	vector<vector<double>> dist(n+1);
	
	for(auto &vec: dist)
	    vec.assign(n+1, double_inf);
	    
	for(int i=1; i<=n; ++i){
	    
	    stack<int> s;
	    s.push(i);
	    
	    int velocity = v[i];
	    int preparation_time = t[i];
	    
	    dist[i][i] = 0;
	    
	    vector<bool> visited_dfs(n+1, false);
	    
	    vector<int> path_dfs(n+1);
	    path_dfs[i] = 0;
	    
	    while(!s.empty()){
	        int vertex = s.top();
	        s.pop();
	        
	        visited_dfs[vertex]=true;
	        
	        for(int j=0; j<g[vertex].size();++j){
	           int to = g[vertex][j].first;
	           
	           if(visited_dfs[to])
	               continue;
	           
	           int len = g[vertex][j].second;
	           
	           path_dfs[to] = path_dfs[vertex]+len;
	           
	           dist[i][to] =(double) path_dfs[to] / velocity + preparation_time;
	           
	           s.push(to);
	        }
	    }
	}
	
//	for(int i=1; i<=n;++i)
	 //   for(int j=1; j<=n; ++j)
//	        cout<<i<<' '<<j<<' '<<dist[i][j]<<endl;
	
	vector<double> dist2(n+1, double_inf);
	vector<int> prev(n+1);
	vector<bool> visited(n+1, false);
	prev[1] = -1;
	
	dist2[1]=0;
	
	for(int i=1; i<=n; ++i){
	     int vertex=-1;
	     for(int j=1; j<=n; ++j)
	         if(!visited[j] &&(vertex==-1 || dist2[j] < dist2[vertex])) 
	         vertex = j;
	         
	     if(vertex==-1 || dist2[vertex]==double_inf)
	         break;
	         
	     visited[vertex] = true;
	     
	     for(int j=1; j<=n; ++j){
	         if(vertex == j)
	             continue;
	             
	         int to = j;
	         double len = dist[to][vertex];
	         
	         if(dist2[vertex]+len <dist2[to]){
	              dist2[to] = dist2[vertex]  + len;
	              prev[to] = vertex;
	         }
	     }
	}
	
	int max_index = -1;
	double max_time =0;
	
	for(int i=1; i<=n; ++i){
	     if(dist2[i] > max_time)   {
	         max_time=dist2[i];
	         max_index = i;
	     }
	}
	
	
	double res = max_time;
	int city = max_index;
	
	cout<<res<<endl;
	
	while(city!=-1){
	     cout<<city<<' ';
	     city=prev[city];
	}
	
	cout<<endl;
	
	return 0;
}"
3sFwiHfk,2023-11-12_stats.json,rdp_snitch,JSON,Sunday 12th of November 2023 06:18:09 PM CDT,"{
  ""ip"": {
    ""190.85.239.111"": 9,
    ""167.94.138.35"": 3,
    ""41.158.2.12"": 3,
    ""212.147.209.51"": 21,
    ""205.210.31.110"": 9,
    ""159.223.47.136"": 36,
    ""159.223.34.145"": 9,
    ""159.223.47.118"": 27,
    ""159.223.47.108"": 3,
    ""159.223.47.115"": 6,
    ""159.223.47.144"": 3,
    ""62.204.41.146"": 12,
    ""45.143.201.62"": 15,
    ""106.116.169.71"": 3,
    ""87.251.75.145"": 3,
    ""185.170.144.3"": 6,
    ""62.122.184.166"": 12,
    ""62.122.184.168"": 12,
    ""198.235.24.104"": 9,
    ""210.2.89.161"": 6,
    ""87.251.75.120"": 3,
    ""101.36.113.66"": 3,
    ""36.91.222.100"": 6,
    ""167.248.133.34"": 3,
    ""198.235.24.134"": 9,
    ""51.75.160.42"": 6,
    ""45.140.17.16"": 3,
    ""103.212.137.250"": 18,
    ""87.251.75.64"": 3,
    ""167.172.112.103"": 12,
    ""45.33.112.158"": 3,
    ""111.93.144.102"": 9,
    ""103.211.56.147"": 3,
    ""198.235.24.114"": 9,
    ""40.68.89.187"": 3
  },
  ""asn"": {
    ""AS14080"": 9,
    ""AS398324"": 6,
    ""AS16058"": 3,
    ""AS50837"": 21,
    ""AS396982"": 36,
    ""AS14061"": 96,
    ""AS59425"": 12,
    ""AS210950"": 15,
    ""AS4134"": 3,
    ""AS208091"": 9,
    ""AS197414"": 6,
    ""AS57523"": 24,
    ""AS24085"": 6,
    ""AS135377"": 3,
    ""AS7713"": 6,
    ""AS16276"": 6,
    ""AS198953"": 3,
    ""AS133676"": 21,
    ""AS63949"": 3,
    ""AS45820"": 9,
    ""AS8075"": 3
  },
  ""isp"": {
    ""Telmex Colombia S.A."": 9,
    ""Censys, Inc."": 6,
    ""Gabon Telecom Internet Network Autonomous System"": 3,
    ""CLOUDSIGMA AG"": 21,
    ""Google LLC"": 36,
    ""DigitalOcean, LLC"": 96,
    ""Horizon LLC"": 12,
    ""TOV E-RISHENNYA"": 15,
    ""Chinanet"": 3,
    ""Xhost Internet Solutions LP"": 15,
    ""Chang Way Technologies Co. Limited"": 24,
    ""Quang Trung Software City Development Company"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""PT Telekomunikasi Indonesia"": 6,
    ""OVH SAS"": 6,
    ""Proton66 OOO"": 3,
    ""Gstech Software Systems Pvt Ltd"": 21,
    ""Akamai Technologies, Inc."": 3,
    ""Ttsl-isp Division"": 9,
    ""Microsoft Corporation"": 3
  },
  ""org"": {
    ""Telmex Colombia S.A"": 9,
    ""Censys, Inc"": 3,
    ""Gtlib Ipmpls01"": 3,
    ""ServeCentric Ltd"": 21,
    ""Palo Alto Networks, Inc"": 36,
    ""DigitalOcean, LLC"": 96,
    ""Horizon LLC"": 12,
    ""TOV VAIZ PARTNER"": 15,
    ""Chinanet HE"": 3,
    ""Xhost Internet Solutions"": 9,
    ""Xhostis"": 6,
    ""Chang Way Technologies Co. Limited"": 24,
    ""Quang Trung Software City Development Company Limited"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Telekomunikasi Indonesia"": 6,
    ""Censys, Inc."": 3,
    ""OVH Ltd"": 6,
    ""Proton66 LLC"": 3,
    ""Gstech Software Systems Pvt Ltd"": 21,
    ""Linode"": 3,
    ""Tata Teleservices ISP"": 9,
    ""Microsoft Azure Cloud (westeurope)"": 3
  },
  ""regionName"": {
    ""Bogota D.C."": 9,
    ""Michigan"": 6,
    ""Estuaire"": 3,
    ""Leinster"": 21,
    ""California"": 48,
    ""South West"": 75,
    ""Central Singapore"": 9,
    ""Moscow"": 39,
    ""Kyiv City"": 15,
    ""Hebei"": 3,
    ""North Holland"": 18,
    ""Ho Chi Minh"": 6,
    ""Central and Western District"": 3,
    ""Jakarta"": 6,
    ""England"": 6,
    ""Uttar Pradesh"": 21,
    ""Texas"": 3,
    ""Karnataka"": 9
  },
  ""country"": {
    ""Colombia"": 9,
    ""United States"": 57,
    ""Gabon"": 3,
    ""Ireland"": 21,
    ""Singapore"": 84,
    ""Russia"": 39,
    ""Ukraine"": 15,
    ""China"": 3,
    ""Netherlands"": 18,
    ""Vietnam"": 6,
    ""Hong Kong"": 3,
    ""Indonesia"": 6,
    ""United Kingdom"": 6,
    ""India"": 30
  },
  ""account"": {
    ""hello"": 69,
    ""(empty)"": 12,
    ""VhAAOBsAx"": 3,
    ""VjqFsW"": 3,
    ""rmtAvX"": 3,
    ""142.93.8.59"": 84,
    ""Domain"": 36,
    ""Administr"": 33,
    ""gBgrmQQHH"": 3,
    ""NkFIOu"": 3,
    ""nKdNmY"": 3,
    ""Administrator"": 3,
    ""Test"": 12,
    ""YwiBndhje"": 3,
    ""NHRPtX"": 3,
    ""iGILWm"": 3,
    ""kfvifxl7"": 12,
    ""beio"": 3,
    ""saJdmDlzp"": 3,
    ""qjbubp"": 3,
    ""ZHwjXx"": 3
  },
  ""keyboard"": {
    ""Unknown"": 300
  },
  ""client_build"": {
    ""Unknown"": 300
  },
  ""client_name"": {
    ""Unknown"": 300
  },
  ""ip_type"": {
    ""Unknown"": 132,
    ""hosting"": 156,
    ""hosting & proxy"": 12
  }
}"
pHJ2HQ60,2023-11-12_stats.json,rdp_snitch,JSON,Sunday 12th of November 2023 06:16:05 PM CDT,"{
  ""ip"": {
    ""190.85.239.111"": 6,
    ""167.94.138.35"": 2,
    ""41.158.2.12"": 2,
    ""212.147.209.51"": 14,
    ""205.210.31.110"": 6,
    ""159.223.47.136"": 24,
    ""159.223.34.145"": 6,
    ""159.223.47.118"": 18,
    ""159.223.47.108"": 2,
    ""159.223.47.115"": 4,
    ""159.223.47.144"": 2,
    ""62.204.41.146"": 8,
    ""45.143.201.62"": 10,
    ""106.116.169.71"": 2,
    ""87.251.75.145"": 2,
    ""185.170.144.3"": 4,
    ""62.122.184.166"": 8,
    ""62.122.184.168"": 8,
    ""198.235.24.104"": 6,
    ""210.2.89.161"": 4,
    ""87.251.75.120"": 2,
    ""101.36.113.66"": 2,
    ""36.91.222.100"": 4,
    ""167.248.133.34"": 2,
    ""198.235.24.134"": 6,
    ""51.75.160.42"": 4,
    ""45.140.17.16"": 2,
    ""103.212.137.250"": 12,
    ""87.251.75.64"": 2,
    ""167.172.112.103"": 8,
    ""45.33.112.158"": 2,
    ""111.93.144.102"": 6,
    ""103.211.56.147"": 2,
    ""198.235.24.114"": 6,
    ""40.68.89.187"": 2
  },
  ""asn"": {
    ""AS14080"": 6,
    ""AS398324"": 4,
    ""AS16058"": 2,
    ""AS50837"": 14,
    ""AS396982"": 24,
    ""AS14061"": 64,
    ""AS59425"": 8,
    ""AS210950"": 10,
    ""AS4134"": 2,
    ""AS208091"": 6,
    ""AS197414"": 4,
    ""AS57523"": 16,
    ""AS24085"": 4,
    ""AS135377"": 2,
    ""AS7713"": 4,
    ""AS16276"": 4,
    ""AS198953"": 2,
    ""AS133676"": 14,
    ""AS63949"": 2,
    ""AS45820"": 6,
    ""AS8075"": 2
  },
  ""isp"": {
    ""Telmex Colombia S.A."": 6,
    ""Censys, Inc."": 4,
    ""Gabon Telecom Internet Network Autonomous System"": 2,
    ""CLOUDSIGMA AG"": 14,
    ""Google LLC"": 24,
    ""DigitalOcean, LLC"": 64,
    ""Horizon LLC"": 8,
    ""TOV E-RISHENNYA"": 10,
    ""Chinanet"": 2,
    ""Xhost Internet Solutions LP"": 10,
    ""Chang Way Technologies Co. Limited"": 16,
    ""Quang Trung Software City Development Company"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""PT Telekomunikasi Indonesia"": 4,
    ""OVH SAS"": 4,
    ""Proton66 OOO"": 2,
    ""Gstech Software Systems Pvt Ltd"": 14,
    ""Akamai Technologies, Inc."": 2,
    ""Ttsl-isp Division"": 6,
    ""Microsoft Corporation"": 2
  },
  ""org"": {
    ""Telmex Colombia S.A"": 6,
    ""Censys, Inc"": 2,
    ""Gtlib Ipmpls01"": 2,
    ""ServeCentric Ltd"": 14,
    ""Palo Alto Networks, Inc"": 24,
    ""DigitalOcean, LLC"": 64,
    ""Horizon LLC"": 8,
    ""TOV VAIZ PARTNER"": 10,
    ""Chinanet HE"": 2,
    ""Xhost Internet Solutions"": 6,
    ""Xhostis"": 4,
    ""Chang Way Technologies Co. Limited"": 16,
    ""Quang Trung Software City Development Company Limited"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Telekomunikasi Indonesia"": 4,
    ""Censys, Inc."": 2,
    ""OVH Ltd"": 4,
    ""Proton66 LLC"": 2,
    ""Gstech Software Systems Pvt Ltd"": 14,
    ""Linode"": 2,
    ""Tata Teleservices ISP"": 6,
    ""Microsoft Azure Cloud (westeurope)"": 2
  },
  ""regionName"": {
    ""Bogota D.C."": 6,
    ""Michigan"": 4,
    ""Estuaire"": 2,
    ""Leinster"": 14,
    ""California"": 32,
    ""South West"": 50,
    ""Central Singapore"": 6,
    ""Moscow"": 26,
    ""Kyiv City"": 10,
    ""Hebei"": 2,
    ""North Holland"": 12,
    ""Ho Chi Minh"": 4,
    ""Central and Western District"": 2,
    ""Jakarta"": 4,
    ""England"": 4,
    ""Uttar Pradesh"": 14,
    ""Texas"": 2,
    ""Karnataka"": 6
  },
  ""country"": {
    ""Colombia"": 6,
    ""United States"": 38,
    ""Gabon"": 2,
    ""Ireland"": 14,
    ""Singapore"": 56,
    ""Russia"": 26,
    ""Ukraine"": 10,
    ""China"": 2,
    ""Netherlands"": 12,
    ""Vietnam"": 4,
    ""Hong Kong"": 2,
    ""Indonesia"": 4,
    ""United Kingdom"": 4,
    ""India"": 20
  },
  ""account"": {
    ""hello"": 46,
    ""(empty)"": 8,
    ""VhAAOBsAx"": 2,
    ""VjqFsW"": 2,
    ""rmtAvX"": 2,
    ""142.93.8.59"": 56,
    ""Domain"": 24,
    ""Administr"": 22,
    ""gBgrmQQHH"": 2,
    ""NkFIOu"": 2,
    ""nKdNmY"": 2,
    ""Administrator"": 2,
    ""Test"": 8,
    ""YwiBndhje"": 2,
    ""NHRPtX"": 2,
    ""iGILWm"": 2,
    ""kfvifxl7"": 8,
    ""beio"": 2,
    ""saJdmDlzp"": 2,
    ""qjbubp"": 2,
    ""ZHwjXx"": 2
  },
  ""keyboard"": {
    ""Unknown"": 200
  },
  ""client_build"": {
    ""Unknown"": 200
  },
  ""client_name"": {
    ""Unknown"": 200
  },
  ""ip_type"": {
    ""Unknown"": 88,
    ""hosting"": 104,
    ""hosting & proxy"": 8
  }
}"
YSMxbhex,2023-11-12_stats.json,rdp_snitch,JSON,Sunday 12th of November 2023 06:15:08 PM CDT,"{
  ""ip"": {
    ""190.85.239.111"": 3,
    ""167.94.138.35"": 1,
    ""41.158.2.12"": 1,
    ""212.147.209.51"": 7,
    ""205.210.31.110"": 3,
    ""159.223.47.136"": 12,
    ""159.223.34.145"": 3,
    ""159.223.47.118"": 9,
    ""159.223.47.108"": 1,
    ""159.223.47.115"": 2,
    ""159.223.47.144"": 1,
    ""62.204.41.146"": 4,
    ""45.143.201.62"": 5,
    ""106.116.169.71"": 1,
    ""87.251.75.145"": 1,
    ""185.170.144.3"": 2,
    ""62.122.184.166"": 4,
    ""62.122.184.168"": 4,
    ""198.235.24.104"": 3,
    ""210.2.89.161"": 2,
    ""87.251.75.120"": 1,
    ""101.36.113.66"": 1,
    ""36.91.222.100"": 2,
    ""167.248.133.34"": 1,
    ""198.235.24.134"": 3,
    ""51.75.160.42"": 2,
    ""45.140.17.16"": 1,
    ""103.212.137.250"": 6,
    ""87.251.75.64"": 1,
    ""167.172.112.103"": 4,
    ""45.33.112.158"": 1,
    ""111.93.144.102"": 3,
    ""103.211.56.147"": 1,
    ""198.235.24.114"": 3,
    ""40.68.89.187"": 1
  },
  ""asn"": {
    ""AS14080"": 3,
    ""AS398324"": 2,
    ""AS16058"": 1,
    ""AS50837"": 7,
    ""AS396982"": 12,
    ""AS14061"": 32,
    ""AS59425"": 4,
    ""AS210950"": 5,
    ""AS4134"": 1,
    ""AS208091"": 3,
    ""AS197414"": 2,
    ""AS57523"": 8,
    ""AS24085"": 2,
    ""AS135377"": 1,
    ""AS7713"": 2,
    ""AS16276"": 2,
    ""AS198953"": 1,
    ""AS133676"": 7,
    ""AS63949"": 1,
    ""AS45820"": 3,
    ""AS8075"": 1
  },
  ""isp"": {
    ""Telmex Colombia S.A."": 3,
    ""Censys, Inc."": 2,
    ""Gabon Telecom Internet Network Autonomous System"": 1,
    ""CLOUDSIGMA AG"": 7,
    ""Google LLC"": 12,
    ""DigitalOcean, LLC"": 32,
    ""Horizon LLC"": 4,
    ""TOV E-RISHENNYA"": 5,
    ""Chinanet"": 1,
    ""Xhost Internet Solutions LP"": 5,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Quang Trung Software City Development Company"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""PT Telekomunikasi Indonesia"": 2,
    ""OVH SAS"": 2,
    ""Proton66 OOO"": 1,
    ""Gstech Software Systems Pvt Ltd"": 7,
    ""Akamai Technologies, Inc."": 1,
    ""Ttsl-isp Division"": 3,
    ""Microsoft Corporation"": 1
  },
  ""org"": {
    ""Telmex Colombia S.A"": 3,
    ""Censys, Inc"": 1,
    ""Gtlib Ipmpls01"": 1,
    ""ServeCentric Ltd"": 7,
    ""Palo Alto Networks, Inc"": 12,
    ""DigitalOcean, LLC"": 32,
    ""Horizon LLC"": 4,
    ""TOV VAIZ PARTNER"": 5,
    ""Chinanet HE"": 1,
    ""Xhost Internet Solutions"": 3,
    ""Xhostis"": 2,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Quang Trung Software City Development Company Limited"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Telekomunikasi Indonesia"": 2,
    ""Censys, Inc."": 1,
    ""OVH Ltd"": 2,
    ""Proton66 LLC"": 1,
    ""Gstech Software Systems Pvt Ltd"": 7,
    ""Linode"": 1,
    ""Tata Teleservices ISP"": 3,
    ""Microsoft Azure Cloud (westeurope)"": 1
  },
  ""regionName"": {
    ""Bogota D.C."": 3,
    ""Michigan"": 2,
    ""Estuaire"": 1,
    ""Leinster"": 7,
    ""California"": 16,
    ""South West"": 25,
    ""Central Singapore"": 3,
    ""Moscow"": 13,
    ""Kyiv City"": 5,
    ""Hebei"": 1,
    ""North Holland"": 6,
    ""Ho Chi Minh"": 2,
    ""Central and Western District"": 1,
    ""Jakarta"": 2,
    ""England"": 2,
    ""Uttar Pradesh"": 7,
    ""Texas"": 1,
    ""Karnataka"": 3
  },
  ""country"": {
    ""Colombia"": 3,
    ""United States"": 19,
    ""Gabon"": 1,
    ""Ireland"": 7,
    ""Singapore"": 28,
    ""Russia"": 13,
    ""Ukraine"": 5,
    ""China"": 1,
    ""Netherlands"": 6,
    ""Vietnam"": 2,
    ""Hong Kong"": 1,
    ""Indonesia"": 2,
    ""United Kingdom"": 2,
    ""India"": 10
  },
  ""account"": {
    ""hello"": 23,
    ""(empty)"": 4,
    ""VhAAOBsAx"": 1,
    ""VjqFsW"": 1,
    ""rmtAvX"": 1,
    ""142.93.8.59"": 28,
    ""Domain"": 12,
    ""Administr"": 11,
    ""gBgrmQQHH"": 1,
    ""NkFIOu"": 1,
    ""nKdNmY"": 1,
    ""Administrator"": 1,
    ""Test"": 4,
    ""YwiBndhje"": 1,
    ""NHRPtX"": 1,
    ""iGILWm"": 1,
    ""kfvifxl7"": 4,
    ""beio"": 1,
    ""saJdmDlzp"": 1,
    ""qjbubp"": 1,
    ""ZHwjXx"": 1
  },
  ""keyboard"": {
    ""Unknown"": 100
  },
  ""client_build"": {
    ""Unknown"": 100
  },
  ""client_name"": {
    ""Unknown"": 100
  },
  ""ip_type"": {
    ""Unknown"": 44,
    ""hosting"": 52,
    ""hosting & proxy"": 4
  }
}"
QJayH2Kq,aero,zero96x,Lua,Sunday 12th of November 2023 06:06:43 PM CDT,"fahrstufen = peripheral.wrap(""tm_rsPort_1"")
connector2 = peripheral.wrap(""tm_rsPort_2"")

mainAxisFS1CW = ""up""
mainAxisFS2CW = ""south""
mainAxisFS1CCW = ""west"" 
mainAxisFS2CCW = ""east""
mainAxisBrake = ""up""

function mainTurnAxisOff()
    fahrstufen.setOutput(mainAxisFS1CW,true)
    fahrstufen.setOutput(mainAxisFS2CW,true)
    fahrstufen.setOutput(mainAxisFS1CCW,true)
    fahrstufen.setOutput(mainAxisFS2CCW,true)
end

function mainTurnAxisBrake()
    connector2.setOutput(""up"",true)
end

function mainTurnAxisBrakesOff()
    connector2.setOutput(""up"",false)
end


function mainAxisClockwiseSlow()
    mainTurnAxisOff()
    sleep(.25)
    fahrstufen.setOutput(mainAxisFS1CW,false)
end

function mainAxisClockwiseFast()
    mainTurnAxisOff()
    sleep(.25)
    fahrstufen.setOutput(mainAxisFS2CW,false)
end

function mainAxisCounterClockwiseSlow()
    mainTurnAxisOff()
    sleep(.25)
    fahrstufen.setOutput(mainAxisFS1CCW,false)
end

function mainAxisCounterClockwiseFast()
    mainTurnAxisOff()
    sleep(.25)
    fahrstufen.setOutput(mainAxisFS2CCW,false)
end







function cmd()
    while true do
        term.clear()
        term.setCursorPos(1,1)
        term.write(""list for commands"")
        term.setCursorPos(1,2)
        input = read()
        if input == ""mainAxisBrake"" then
            mainTurnAxisBrake()
        elseif input == ""mainAxisBrakesOff"" then
            mainTurnAxisBrakesOff()
        elseif input == ""mainAxisCwSlow"" then
            mainAxisClockwiseSlow()
        elseif input == ""mainAxisCwFast"" then
            mainAxisClockwiseFast()
        elseif input == ""mainAxisCcwSlow""  then
            mainAxisCounterClockwiseSlow() 
        elseif input == ""mainAxisCcwFast""then
            mainAxisCounterClockwiseFast()
        elseif input == ""mainAxisOff""then
            mainTurnAxisOff()
        elseif input == ""list"" then
            term.clear()
            term.setCursorPos(1,1)
            term.write(""mainAxisBrake"")
            term.setCursorPos(1,2)
            term.write(""mainAxisBrakesOff"")
            term.setCursorPos(1,3)
            term.write(""mainAxisCwSlow"")
            term.setCursorPos(1,4)
            term.write(""mainAxisCwFast"")
            term.setCursorPos(1,5)
            term.write(""mainAxisCcwSlow"")
            term.setCursorPos(1,6)
            term.write(""mainAxisCcwFast"")
            term.setCursorPos(1,7)
            term.write(""mainAxisOff"")
            term.setCursorPos(1,8)
            term.write(""list"")
        else
            term.clear()
            term.setCursorPos(1,1)
            term.write(""try again"")
        end
        sleep(1)
    end
    
end

--PROGRAM

cmd()"
PpTdLEaF,[1.20.1] Mekanism Digital Miner - Automatization script,martinjanas,Lua,Sunday 12th of November 2023 05:33:11 PM CDT,"-- Computercraft script: 

-- Mekanism Digital Miner Automator version 2.0 for Minecraft 1.20.1 
-- (or maybe even anything above 1.12.2 with slight edits to the Blocks section) 
-- by MartiNJ409 - https://github.com/martinjanas
-- This script can be found in my repository - https://github.com/martinjanas/DigitalMinerAutomatization
 
-- This script places & destroys miner, energy block, storage block, chatbox and chunkloader.
-- It can also output miner status to the chat, visible to anyone on servers, can be turned off below in Settings.
-- Also works on AdvancedPeriperals's chunky turtle, so no need for chunkloader.
 
-- Just place all the required blocks into the turtle.
-- No need to use chunkloader if you are using chunky turtle, chat box is not mandatory.
 
-- User Settings Area --
Settings = {}
Settings.MAX_CHUNKS = 16 -- The amount of chunks this script will run. (Default 16)
Settings.SEND_TO_CHAT = true -- Set this to false if you don't wish for the chatbox to send serverwide messages about the mining status.

Blocks = {}
Blocks.BLOCK_MINER = ""mekanism:digital_miner""
Blocks.BLOCK_ENERGY = ""mekanism:quantum_entangloporter"" -- Edit this to match your desired block.
Blocks.BLOCK_STORAGE = ""mekanism:quantum_entangloporter"" -- Edit this to match your desired block.
Blocks.BLOCK_CHUNKLOADER = ""chickenchunks:chunk_loader"" -- Edit this to match your desired block.
Blocks.BLOCK_CHATBOX = ""advancedperipherals:chat_box"" -- Edit this only if you are porting to newer/older versions.
-- User Settings Area --

-- Dont touch this underneath:
GlobalVars = {}
GlobalVars.m_pMiner = nil
GlobalVars.m_pChatBox = nil
GlobalVars.m_bHasChunkLoader = false
GlobalVars.m_bIsChunkyTurtle = false
GlobalVars.m_bHasChatBox = false

function download_file(url, destination)
    local response = http.get(url)

    if response then
        local file = fs.open(destination, ""w"")

        local data = response.readAll()

        file.write(data)
        file.close()

        response.close()
    end
end

download_file(""https://raw.githubusercontent.com/martinjanas/DigitalMinerAutomatization/main/utils.lua"", ""utils.lua"")

require ""utils""

function main(i)
    GlobalVars.m_bIsChunkyTurtle = is_chunky_turtle_fn()

    place_blocks_fn(Blocks, GlobalVars)

    os.sleep(0.15)

    if GlobalVars.m_pMiner then
       local to_mine_cached = GlobalVars.m_pMiner.getToMine()

       while GlobalVars.m_pMiner.isRunning() do
            local to_mine = GlobalVars.m_pMiner.getToMine()

            local seconds = (to_mine * 0.5)
            
            if GlobalVars.m_pChatBox and Settings.SEND_TO_CHAT then
               local percentage = (to_mine / to_mine_cached) * 100
               percentage = math.floor(percentage)

               if percentage_in_range_fn(percentage, 80, 1) then
                  local text = string.format(""20%% of Blocks Mined (%d/%d)"", to_mine, to_mine_cached)
                  GlobalVars.m_pChatBox.sendMessage(text, ""Miner"")
                  os.sleep(2)
               end

               if percentage_in_range_fn(percentage, 50, 1) then
                  local text = string.format(""50%% of Blocks Mined (%d/%d)"", to_mine, to_mine_cached)
                  GlobalVars.m_pChatBox.sendMessage(text, ""Miner"")
                  os.sleep(2)
               end

               if percentage_in_range_fn(percentage, 30, 1) then
                  local text = string.format(""70%% of Blocks Mined (%d/%d)"", to_mine, to_mine_cached)
                  GlobalVars.m_pChatBox.sendMessage(text, ""Miner"")
                  os.sleep(2)
               end
            end

            if to_mine % 5 then
               local text = string.format(""To mine: %d, ETA: %s"", to_mine, get_time_fn(seconds))
		       print(text)
            end

            if (to_mine == 0) then
                if GlobalVars.m_pChatBox and Settings.SEND_TO_CHAT then
                   local text = string.format(""Done (%d/%d) rounds"", i, Settings.MAX_CHUNKS)
                   GlobalVars.m_pChatBox.sendMessage(text, ""Miner"")
                   os.sleep(1)
                end
                
                if i == Settings.MAX_CHUNKS and GlobalVars.m_pChatBox and Settings.SEND_TO_CHAT then
                    local text = string.format(""Pick me up! I am finished!"")
                    GlobalVars.m_pChatBox.sendMessage(text, ""Miner"")
                    os.sleep(1)
                end

                destroy_blocks_fn(GlobalVars)

                os.sleep(2)

                go_one_chunk_fn()
            end

            os.sleep(0.5)
       end
    end
end

for i = 1, Settings.MAX_CHUNKS do
    GlobalVars.m_bIsChunkyTurtle = false
    GlobalVars.m_bHasChunkLoader = false
    
    main(i)
end"
YikvuRm5,teza 8-sub 3-1,madidino,C++,Sunday 12th of November 2023 04:28:45 PM CDT,"#include <iostream>
#include <cmath>
using namespace std;
int n;
void f(int v[11])
{int nr=0;
    for(int i=n;i>=1;i--)
    {
        if(v[i]==1)
        {
            nr+=pow(2,n-i);
        }
    }
    cout<<nr<<"" "";
}
int main()
{
    int a[11][11];
    cin>>n;
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=n;j++)
        {
            cin>>a[i][j];
        }
        f(a[i]);
    }
    return 0;
}
"
gTfJW747,Untitled,Josif_tepe,C,Sunday 12th of November 2023 04:09:39 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <math.h>


int main(int argc, char * argv[]) {
    int x;
    
    while(scanf(""%d"", &x)) {
        int tmp = x;
        if(x < 10) {
            printf(""Ne mozhe da se formira dvocifren broj\n"");
        }
        else {
            int prva, posledna;
            posledna = x % 10;
            while(x > 9) {
                x /= 10;
            }
            prva = x;
            int zbir = prva + posledna;
            if(zbir < 10) {
                printf(""Ne mozhe da se formira dvocifren broj\n"");
            }
            else {
                int proizvod = (zbir % 10) * (zbir / 10);
                if(proizvod % 2 == 0) {
                    printf(""%d "", tmp);
                }
            }
            
        }
    }
    return 0;
}
"
UkVam8ri,teza7-sub3-3,madidino,C++,Sunday 12th of November 2023 04:05:17 PM CDT,"#include <iostream>
#include <cmath>
#include <fstream>
using namespace std;
int main()
{
   ifstream fin(""BAC.IN"");
   ofstream fout(""BAC.OUT"");
   int x;
   int v[10];
   for(int i=0;i<=9;i++)
   {
       v[i]=0;
   }
   while(fin>>x)
   {
       x=log10(x);
       v[x]++;
   }
   fin.close();
   for(int i=0;i<=9;i++)
   {
       while(v[i])
       {
           fout<<pow(10,i)<<"" "";
           v[i]--;
       }
   }
   fout.close();
   return 0;
}"
MJpxQD8L,teza7-sub3-2,madidino,C++,Sunday 12th of November 2023 04:03:57 PM CDT,"#include <iostream>
using namespace std;
void permuta(int n,int a[],int k)
{
    int v[100];
    int j=1;

    for(int i=k+1; i<=n; i++)
    {
        v[j]=a[i];
        j++;
    }
    for(int i=1; i<=k; i++)
    {
        v[j]=a[i];
        j++;
    }
    for(int i=1; i<=n; i++)
    {
        a[i]=v[i];
    }
}
int main()
{
    int a[] = {0,60,45,30,10};
    permuta(4,a,2);
    for(int i=1;i<=4;i++)
    {
        cout << a[i] << "" "";
    }
}
"
m70ALmA7,teza7-sub3-1,madidino,C++,Sunday 12th of November 2023 04:02:42 PM CDT,"#include <iostream>
#include <cstring>
using namespace std;
int main()
{
    char s[100],c[100];
    cin>>s>>c;
    int mx=(int)'z';
    for(int i=0;i<strlen(s);i++)
    {
        if(s[i]+((int)c[i]-'0')>'z')
        {
            s[i]='a'+((int)(s[i]+(int)(c[i]-'0'))%mx);
        }
        else
        {
            s[i]=s[i]+(int)(c[i]-'0');
        }
    }
    cout<<s;
}
//info 3212"
74F3zeqw,teza6-sub3-2,madidino,C++,Sunday 12th of November 2023 04:02:10 PM CDT,"#include <iostream>
using namespace std;

int divizor(int n,int a[])
{
    int x,y;
    x=a[1];
    for(int i=2;i<=n;i++)
    {
        y=a[i];
        while(x!=y)
        {
            if(x>y)
            {
                x=x-y;
            }
            else
            {
                y=y-x;
            }
        }
    }
    return x;
}
void cmmdc(int a,int b)
{int r;
    while(b!=0)
    {
        r=a%b;
        a=b;
        b=r;
    }
}
int main()
{
    int a[100];
    int n;
    cin>>n;
    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
    }
    cout<<divizor(n,a);
}
//4
//60 45 30 10
"
ndN3fDu4,teza6-sub3-1,madidino,C++,Sunday 12th of November 2023 04:01:45 PM CDT,"#include <iostream>
#include <cstring>
using namespace std;
//void var_mat()
//{
//    char s[100];
//    cin.getline(s,100);
//    char cuv[100][100];
//    int k=0;
//    char *p=strtok(s,"" "");
//    while(p)
//    {
//        strcpy(cuv[k],p);
//        k++;
//        p=strtok(NULL,"" "");
//    }
//}
//void citire_prop_cand_stim_nr()
//{
//    char s[100];
////    while(cin.getline(s,100))
//    {
//        blabla
//    }
//}
//void citire_prop_cand_stim_nr()
//{
//    char s[100];
//    int n;
//    cin>>n;
//    cin.ignore();//sa nu ia enter ul de dupa nr de prop
//    //la fisier nu e nevoie
//    for(int i=1; i<=n; i++)
//    {
//        cin.getline(s,100);
//    }
//}
int main()
{
    char s[100];
    cin.getline(s,100);
    int mx=-1;
    int k=0;
    int lng;
    char *p;
    p=strtok(s,"" "");
    while(p)
    {
        lng=strlen(p);
        if(mx<lng)
        {
            mx=lng;
            k=1;
        }
        else
        {
            if(mx==lng)
            {
                k++;
            }
        }
        p=strtok(NULL,"" "");
    }
    cout<<mx<<"" ""<<k<<""."";
        return 0;
}
//eu dau bacalaureat la informatica
"
p0CJZYnR,teza2-sub3-3,madidino,C++,Sunday 12th of November 2023 04:01:17 PM CDT,"#include <iostream>
#include <fstream>
using namespace std;
int main()
{
    ifstream fin(""bac.txt"");
    int n,m;
    fin>>n>>m;
    int va[1000],vb[1000];
    for(int i=0; i<=1000; i++)
    {
        va[i]=0;
        vb[i]=0;
    }int x;
    for(int i=1; i<=n; i++)
    {
        fin>>x;
        vb[x]++;
    }
    for(int i=1; i<=m; i++)
    {
        fin>>x;
        va[x]++;
    }
    int crt=0;
    int mn=1000;
    for(int i=0; i<=1000; i++)
    {
        if(vb[i]!=0 && va[i]!=0)
        {
            crt++;
            if(mn>vb[i])
            {
                mn=vb[i];
            }
        }
    }
    if(crt==m)
    {
        cout<<mn;
    }
    fin.close();
    return 0;
}


//8 3
//1 6 3 1 7 6 1
//6 1 3"
mgeCCsTu,teza2-sub3-2,madidino,C++,Sunday 12th of November 2023 04:00:27 PM CDT,"#include <iostream>
using namespace std;
int numarare(int a, int b)
{int k;
int crt=0;
    for(int i=a;i<=b;i++)
    {k=0;
        for(int j=2;j<=i/2;j++)
        {
            if(i%j==0)
            {
                k++;
            }
        }
        if(k==1)
        {
            crt++;
        }
    }
    return crt;
}
int main()
{
cout<<numarare(6,36);
    return 0;
}"
mAXPqM6P,teza2-sub3-1,madidino,C++,Sunday 12th of November 2023 03:59:45 PM CDT,"
#include <iostream>
#include <cstring>
using namespace std;

int main()
{
    char s[101];
    cin.get(s,101);
    int v[26],V[26];
    for(int i=0; i<=26; i++)
    {
        v[i]=0;
        V[i]=0;
    }
    for(int i=0; i<strlen(s); i++)
    {
        if(s[i]!=' ')
        {
            if(s[i]>='a' && s[i]<='z')
            {
                v[s[i]-'a']++;
            }
            else
            {
                V[s[i]-'A']++;
            }
        }
    }
    char chr;
    int mx=-1;
    for(int i=0; i<=26; i++)
    {
        if(v[i]>mx)
        {
            mx=v[i];
        }
        if(V[i]>mx)
        {
            mx=V[i];
        }
    }
    for(int i=0; i<=26; i++)
    {
        if(v[i]==mx)
        {
            cout<<(char)(i+'a');
        }
        else
        {
            if(V[i]==mx)
            {
                cout<<(char)(i+'A');
            }
        }
    }
    cout<<"" ""<<mx;
    return 0;
}

//Voi da Bacalaureatul la Informatica
"
PygM78Vt,pb cu siruri model,madidino,C++,Sunday 12th of November 2023 03:58:40 PM CDT,"#include <bits/stdc++.h>
using namespace std;

void a(int l,int maxi,char word[][100]){
    for(int s=0;s<l;s++){
        cout<<'#';
    for(int i=0;i<maxi;i++) {
        if (word[s][i] != 0)
            cout << word[s][i];
    }
    }
    cout<<'#';
}

int main() {
    char s[100];
    cin.get(s, 100);
    int p = 0, l = 0, maxi = -1,aux;
    int len = strlen(s);
    char word[100][100];
    for (int i = 1; i < len; i++) { //incepem de la 1 fiindca primul element este
        //# si nu avem nevoie de el
        if (s[i] != '#') {
            word[l][p] = s[i];
            p++;
        } else {
            if (maxi < p) {
                maxi = p;
            }
            word[l][p] = 0;
            l++;
            p = 0;
        }
    }
    for (int j = 0; j < l; j++) {
            if(word[j][maxi-1]!=0)
                for (int s = 0; s < maxi/2; s++) {
                  aux=word[j][s];
                  word[j][s]=word[j][maxi-1-s];
                  word[j][maxi-1-s]=aux;
                }
    }
    a(l,maxi,word);
    }

//#Voi#da#bacu#la#info#
//#Ana#are#mere#
"
w8r21Hhv,Untitled,Josif_tepe,C,Sunday 12th of November 2023 03:58:02 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <math.h>

int rek(int broj) {
    while(broj > 9) {
        int posledna = broj % 10;
        int pretposledna = (broj / 10) % 10;
        if(pretposledna >= posledna) {
            return 0;
        }
        broj /= 10;
    }
    return 1;
}
int main(int argc, char * argv[]) {
    int n;
    scanf(""%d"", &n);
    printf(""%d\n"", rek(n));
    return 0;
}
"
HmUA7XvQ,teza1,madidino,C++,Sunday 12th of November 2023 03:57:50 PM CDT,"#include <iostream>
#include <cstring>
#include <fstream>
using namespace std;

void ex_2()
{
   int n,m;
   cin>>n;
   int a[n];
   for(int i=0;i<n;i++)
   {
       cin>>a[i];
   }
   cin>>m;
   int mn=1e9;
  int b[m];
   for(int i=0;i<m;i++)
   {
       cin>>b[i];
       if(b[i]<mn)
       {
           mn=b[i];
       }
   }
   int crt=0;
   for(int i=0;i<n;i++)
   {
       if(a[i]<mn)
       {
           crt++;
       }
   }
   cout<<crt<<endl;
}
void ex_3()
{
    char s[10000000];
   // ifstream fin(""bac.txt"");
    cin.getline(s,201);
    //fin.close();
    int crt=-1;//final
    int x=-1;//fiecare interval
    int i=0;
    while(s)
    {
        if(s[i]==' ')
        {
            if(s[i-1]==s[i+1])
            {
                x++;
            }
            else{
                if(x>crt)
                {
                    crt=x;
                    x=-1;
                }
            }
        }
        i++;
        strcpy(s,s+1);
    }
    cout<<crt<<endl;
}
int main()
{
    ex_3();
    return 0;
}
"
EjtJKuFf,Untitled,Josif_tepe,C,Sunday 12th of November 2023 03:56:01 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <math.h>

int rek(int broj) {
    if(broj < 10) {
        return 1;
    }
    
    int posledna = broj  % 10;
    int pretposledna = (broj / 10) % 10;
    
    if(pretposledna >= posledna) {
        return 0;
    }
    return rek(broj / 10);
}
int main(int argc, char * argv[]) {
    int n;
    scanf(""%d"", &n);
    printf(""%d\n"", rek(n));
    return 0;
}
"
1te9srHG,Untitled,Josif_tepe,C,Sunday 12th of November 2023 03:47:19 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <math.h>

void f(int broj) {
    for(int i = broj; i > 0; i--) {
        for(int j = 0; j < i; j++) {
            printf(""%d "", i);
        }
    }
}

int main(int argc, char * argv[]) {
 
    f(4);
    return 0;
}
"
KeAqVNse,sesiunea speciala (sub 3_3),madidino,C++,Sunday 12th of November 2023 03:47:17 PM CDT,"#include <iostream>
#include <fstream>
using namespace std;

int main()
{int x;
int mn=1e9;
int mx=-1e9;
int p=0;
int k=0;
    ifstream fin(""bac.txt"");
    while(fin>>x)
    {p++;

        if(x>mx || x<mn)
        {
            if(x>mx)
            {
                mx=x;
            }
            if(x<mn)
            {
                mn=x;
            }
        }
        else
        {
            if(mx!=x)
            {
                k++;
                cout<<p<<"" "";
            }
        }
    }
    if(!k)
    {
        cout<<""nu exista!"";
    }
    fin.close();
    return 0;
}
"
huK8dx7i,Untitled,Josif_tepe,C,Sunday 12th of November 2023 03:45:32 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <math.h>

void f(int broj) {
    if(broj == 0) {
        return;
    }
    for(int i = 0; i < broj; i++) {
        printf(""%d "", broj);
    }
    f(broj - 1);
}

int main(int argc, char * argv[]) {
 
    f(4);
    return 0;
}
"
0FvUWwh5,Untitled,Josif_tepe,C,Sunday 12th of November 2023 03:41:24 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <math.h>


int main(int argc, char * argv[]) {
 
    int a, b;
    scanf(""%d%d"", &a, &b);
    
    for(int i = a; i <= b; i++) {
        int tmp = i;
        int prevrten = 0;
        while(tmp > 0) {
            int cifra = tmp % 10;
            prevrten = (prevrten * 10) + cifra;
            tmp /= 10;
        }
        int sum = 0;
        for(int j = 1; j < prevrten; j++) {
            if(prevrten % j == 0) {
                sum += j;
            }
        }
        if(prevrten == sum) {
            printf(""%d "", i);
        }
    }
    return 0;
}
"
uHsgGUXm,Zad2 Kursova Rabota,borko_panterata,C++,Sunday 12th of November 2023 03:36:43 PM CDT,"#include <iostream>
#include <fstream>

struct Futbolist;
Futbolist futbolisti[5];

int main()
{
    // Futbolist 1
    futbolisti[0].name = ""Christiano"";
    futbolisti[0].surname = ""Ronaldo"";
    futbolisti[0].otborDyrjava = ""Arjentina"";
    futbolisti[0].nomer = 7;
    futbolisti[0].golove = 220;
    // Futbolist 2
    futbolisti[1].name = ""Lionel"";
    futbolisti[1].surname = ""Messi"";
    futbolisti[1].otborDyrjava = ""Ispaniq"";
    futbolisti[1].nomer = 10;
    futbolisti[1].golove = 293;
    // Futbolist 3
    futbolisti[2].name = ""Kepler"";
    futbolisti[2].surname = ""Lima"";
    futbolisti[2].otborDyrjava = ""Brazil"";
    futbolisti[2].nomer = 3;
    futbolisti[2].golove = 220;
    // Futbolist 4
    futbolisti[3].name = ""Luka"";
    futbolisti[3].surname = ""Modric"";
    futbolisti[3].otborDyrjava = ""Croatia"";
    futbolisti[3].nomer = 10;
    futbolisti[3].golove = 435;
    // Futbolist 5
    futbolisti[4].name = ""Antoine"";
    futbolisti[4].surname = ""Griezmann"";
    futbolisti[4].otborDyrjava = ""France"";
    futbolisti[4].nomer = 7;
    futbolisti[4].golove = 169;

    for(int i = 0; i < 5; i++)
    {

        std:: cout << ""Enter the name of the football player "" << i << "" : "";
        
    }
    return 0;
}

struct Futbolist
{
    std:: string name;
    std:: string surname;
    std:: string otborDyrjava;
    int nomer;
    int golove;
};"
9Eavnvk1,Untitled,lemansky,HTML,Sunday 12th of November 2023 03:35:20 PM CDT,"<!doctype html>
<html lang=""en"">
  <head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <title>Bootstrap demo</title>
    <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi"" crossorigin=""anonymous"">
    <style>
      body,html{
        height:100%;
      }
      body{
        min-height: 100%;
      }
      .body{
        min-height: 100%;
        height: auto !important;
        margin-bottom:-120px;
      }
      .pusher{
        height:72px;
      }
      .footer{
        height:72px;
        box-sizing: border-box;
      }
    </style>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        let animeArr = ['Bleach', 'Naruto', 'JoJo\'s Bizarre Adventure', 'Demon Slayer', 'My Hero Academia', 'One Piece'];
        let poster = document.querySelectorAll('.card-img-top');
        let animeItem = document.querySelector('.row-cols-xl-4 > .col');
        getAnimes(animeArr).then(x => {
            for(let i = 0; i < animeArr.length; i++){
              if(i != 0){
                let clone = animeItem.cloneNode(true);
                animeItem.parentNode.append(clone);
              }
              poster = document.querySelectorAll('.card-img-top');
              poster[i].nextElementSibling.firstElementChild.innerText = animeArr[i];
              poster[i].src = x[i].img.images.jpg.image_url;
              poster[i].nextElementSibling.firstElementChild.nextElementSibling.innerText = x[i].quote;
            }
        });

      });

      const delay = (ms = 1100) => new Promise(r => setTimeout(r, ms));

      const getAnimes = async items => {
        let results = [];
        for (let index = 0; index < items.length; index++) {
          await delay();
          const res1 = await fetch('https://api.jikan.moe/v4/anime?q='+ items[index] +'&sfw').then(r => r.json());
          const res2 = await fetch(""https://kitsu.io/api/edge/anime?filter[text]="" + items[index]).then(r => r.json());
          results.push({img: res1.data[0], quote: res2.data[0].attributes.synopsis});
        }
        return results;
      };
      
    </script>       
  </head>
  <body>
    <div class=""body"">
    <div class=""bg-light"">
      <div class=""container"">
        <div class=""row justify-content-between justify-content-lg-start align-items-center"">
          <div class=""col-auto"">
            <h5 class=""text-primary mb-0 fw-bold"">JSON Example</h5>
          </div>
          <div class=""col"">
            <div class=""navbar navbar-expand-lg text-end text-lg-start justify-content-end"">
              <button class=""navbar-toggler"" data-bs-target=""#menu"" data-bs-toggle=""collapse"">
                <span class=""navbar-toggler-icon""></span>
              </button> 
              <div class=""collapse navbar-collapse justify-content-lg-between"" id=""menu"">
                <ul class=""navbar-nav"">
                  <li class=""nav-item"">
                    <a href="""" class=""nav-link text-primary"">Anime</a>
                  </li>
                  <li class=""nav-item"">
                    <a href="""" class=""nav-link text-primary"">Anime</a>
                  </li>
                  <li class=""nav-item"">
                    <a href="""" class=""nav-link text-primary"">Anime</a>
                  </li>
                  <li class=""nav-item"">
                    <a href="""" class=""nav-link text-primary"">Anime</a>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>        
      </div>  
    </div>          
    <div class=""bg-info py-5"">
        <div class=""container my-3"">
          <div class=""row"">
            <div class=""col text-center"">
              <h1 class=""fw-bold"">Anime List</h1>
              <span>JSON Fetch Example</span>
            </div>
          </div>
        </div>
    </div>   
 
    <div class=""container mt-4"">
      <div class=""row justify-content-lg-center"">
        <div class=""col-12 col-lg-5 mx-3"">
          <input type=""text"" class=""form-control"" placeholder=""Look for Anime by title"">
        </div>
        <div class=""col-12 col-lg-5 mx-3"">
          <select name="""" id="""" class=""form-select"">
            <option value="""">Select Anime</option>
          </select>
        </div>
      </div>
      <div class=""mt-4 row row-cols-xl-4 row-cols-md-3 row-cols-2 justify-content-center gy-5"">
        <div class=""col"">
          <div class=""card border-info"">
            <img src=""https://placehold.co/450x300"" alt="""" class=""card-img-top"">
            <div class=""card-body text-center"">
                <h5 class=""mb-1"">Anime Title</h5>  
                <div class=""mb-4"">
                  Quote
                </div>
            </div>
          </div>
        </div>
      </div>
    </div> 
    <div class=""pusher""></div>  
 </div>
    <div class=""bg-dark text-white text-center p-4 mt-5 footer"">
      Copyright &copy; Your Website 2021
    </div>
 
 
    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"" crossorigin=""anonymous""></script>
  </body>
</html>"
mw4q8y6n,Untitled,Josif_tepe,C,Sunday 12th of November 2023 03:32:00 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <math.h>

void f(int broj, char c) {
    for(int i = broj; i > 0; i--) {
        for(int j = 0; j < i; j++) {
            printf(""%c "", c);
            
        }
        c -= 1;
    }
}

int main(int argc, char * argv[]) {
    int broj;
    char c;
    scanf(""%d"", &broj);
    scanf("" %c"", &c);
    
    printf(""%d %c\n"", broj, c);
    f(broj, c);
    
    return 0;
}
"
dswqgvQs,Untitled,Josif_tepe,C,Sunday 12th of November 2023 03:29:30 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <math.h>

void f(int broj, char c) {
    if(broj == 0) {
        return;
    }
    for(int i = 0; i < broj; i++) {
        printf(""%c "", c);
    }
    f(broj - 1, c - 1);
}

int main(int argc, char * argv[]) {
    int broj;
    char c;
    scanf(""%d"", &broj);
    scanf("" %c"", &c);
    
    printf(""%d %c\n"", broj, c);
    f(broj, c);
    
    return 0;
}
"
Snr0B8D2,Untitled,Josif_tepe,C,Sunday 12th of November 2023 03:21:00 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <math.h>

int main(int argc, char * argv[]) {
    int a, b;
    scanf(""%d%d"", &a, &b);
    
    for(int i = a; i <= b; i++) {
        int tmp = i;
        int prevrten = 0;
        
        while(tmp > 0) {
            int cifra = tmp % 10;
            prevrten = (prevrten * 10) + cifra;
            tmp /= 10;
        }
        int deliteli = 0;
        for(int j = 1; j <= prevrten; j++) {
            if(prevrten % j == 0) {
                deliteli++;
            }
        }
        if(deliteli <= 2) {
            printf(""%d "", i);
        }
    }
    
    return 0;
}
"
uGTCm7cw,Untitled,Josif_tepe,C,Sunday 12th of November 2023 03:14:49 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <math.h>

int main(int argc, char * argv[]) {
    int reden;
    scanf(""%d"", &reden);
    
    float dolna, gorna;
    scanf(""%f%f"", &dolna, &gorna);
    
    if(reden == 1) {
        if(dolna > 140 || gorna < 140) {
            
        }
        else {
            if(140 - dolna < gorna - 140) {
                printf(""dolna\n"");
            }
            else {
                printf(""gorna\n"");
            }
        }
    }
    else if(reden == 2) {
        if(dolna > 7 || gorna < 7) {
            
        }
    }
    
    scanf(""%d"", &reden);
    
    scanf(""%f%f"", &dolna, &gorna);
    
    if(reden == 1) {
        if(dolna > 140 || gorna < 140) {
            
        }
        else {
            if(140 - dolna < gorna - 140) {
                printf(""dolna\n"");
            }
            else {
                printf(""gorna\n"");
            }
        }
    }
    else if(reden == 2) {
        if(dolna > 7 || gorna < 7) {
            
        }
    }
    return 0;
}
"
cNhLJxRW,Paja,arxeiss,VisualBasic,Sunday 12th of November 2023 02:44:57 PM CDT,"Function ConvertToMonths(lifeLength As String) As Double
    Dim years As Double
    Dim months As Double
    Dim parts() As String
    
    ' Split the input into parts based on spaces
    parts = Split(lifeLength, "" "")
    
    ' Loop through the parts to find years and months
    For i = 0 To UBound(parts)
        If InStr(""rl"", Left(parts(i), 1)) > 0 Then
            years = Val(parts(i - 1))
            ' Check for ""a půl"" (and a half)
            If i < UBound(parts) And UCase(parts(i + 1)) = ""A"" And UCase(parts(i + 2)) = ""PŮL"" Then
                years = years + 0.5
            End If
        ElseIf Left(parts(i), 1) = ""m"" Then
            months = Val(parts(i - 1))
            ' Check for ""a půl"" (and a half)
            If i < UBound(parts) And UCase(parts(i + 1)) = ""A"" And UCase(parts(i + 2)) = ""PŮL"" Then
                months = months + 0.5
            End If
        End If
    Next i
    
    ' Convert to months and return the result
    ConvertToMonths = years * 12 + months
End Function
"
7A6wnV6T,azure rc,Raz1elka,Lua,Sunday 12th of November 2023 02:42:45 PM CDT,"_G.HideGuiKey=Enum.KeyCode.RightShift
loadstring(game:HttpGet(""https://raw.githubusercontent.com/idinaxuyyyyy436984965hh5yngrn/ok/main/Azure.lua""))() "
evDyUM5U,QEMU basic setup,metalx1000,Bash,Sunday 12th of November 2023 02:37:02 PM CDT,"#based on tutorial at https://christitus.com/vm-setup-in-linux/
#Check Virtualization Extension
#should return greater than 0
egrep -c '(vmx|svm)' /proc/cpuinfo

sudo apt install qemu-kvm qemu-system qemu-utils python3 python3-pip libvirt-clients libvirt-daemon-system bridge-utils virtinst libvirt-daemon virt-manager -y
sudo systemctl status libvirtd.service

#Start Default Network for Networking
sudo virsh net-start default
sudo virsh net-autostart default

#Check status with
sudo virsh net-list --all

#Add User to libvirt to Allow Access to VMs
sudo usermod -aG libvirt $USER
sudo usermod -aG libvirt-qemu $USER
sudo usermod -aG kvm $USER
sudo usermod -aG input $USER
sudo usermod -aG disk $USER

#reboot for permissions to take effect

#Get ISO
wget -c ""http://mirror.slitaz.org/iso/rolling/slitaz-rolling.iso""
qemu-system-i386 -enable-kvm -m 2G -smp 2 -boot d -cdrom slitaz-rolling.iso

-enable-kvm → KVM to boost performance
-m 4G → 4GB RAM
-smp 2 → 2CPUs
-hda myVirtualDisk.qcow2 → our 20GB variable-size disk
-boot d → boots the first virtual CD drive
-cdrom linuxmint-21.1-cinnamon-64bit.iso → Linux Mint ISO
-netdev user,id=net0,net=192.168.0.0/24,dhcpstart=192.168.0.9 → NAT with DHCP
-device virtio-net-pci,netdev=net0 → network card
-vga qxl → powerful graphics card
-device AC97 → sound card"
JFM6NPQv,Untitled,AlRia,Python,Sunday 12th of November 2023 02:09:32 PM CDT,"from django_filters import rest_framework as filters

from recipes.models import Recipe


class RecipeFilter(filters.FilterSet):
    author = filters.AllValuesMultipleFilter(
        field_name='author__id')
    tags = filters.AllValuesMultipleFilter(
        field_name='tags__slug')
    is_favorited = filters.BooleanFilter(
        method='is_favorited_filter')
    is_in_shopping_cart = filters.BooleanFilter(
        method='is_in_shopping_cart_filter'
    )

    class Meta:
        model = Recipe
        fields = (
            'author',
            'tags',
            'is_favorited',
            'is_in_shopping_cart',
        )

    def is_favorited_filter(self, queryset, name, value):
        if value:
            user = self.request.user
            return queryset.filter(favorites__user_id=user.id)
        return queryset

    def is_in_shopping_cart_filter(self, queryset, name, value):
        if value:
            user = self.request.user
            return queryset.filter(shopping_list__user_id=user.id)
        return queryset

# Настройки Пагинации:
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 6,
}
"
WaB69W6n,Files needed for Dayz 1.23 supply crates,OneShot1984,XML,Sunday 12th of November 2023 01:55:55 PM CDT," Add this part into your events.xml file
 
 
 <event name=""StaticAirplaneCrate"">
        <nominal>9</nominal>
        <min>0</min>
        <max>0</max>
        <lifetime>1800</lifetime>
        <restock>0</restock>
        <saferadius>1000</saferadius>
        <distanceradius>1</distanceradius>
        <cleanupradius>1000</cleanupradius>
        <flags deletable=""1"" init_random=""0"" remove_damaged=""0""/>
        <position>fixed</position>
        <limit>child</limit>
        <active>1</active>
        <children>
            <child lootmax=""8"" lootmin=""4"" max=""4"" min=""2"" type=""StaticObj_Misc_SupplyBox1_DE""/>
            <child lootmax=""8"" lootmin=""4"" max=""4"" min=""2"" type=""StaticObj_Misc_SupplyBox2_DE""/>
            <child lootmax=""8"" lootmin=""4"" max=""4"" min=""2"" type=""StaticObj_Misc_SupplyBox3_DE""/>
        </children>
    </event>
	
	
	
	Add this part into your cfgeventspawns.xml
	
	<event name=""StaticAirplaneCrate"">
		<zone smin=""0"" smax=""0"" dmin=""0"" dmax=""0"" r=""0"" />
				<pos x=""2350"" z=""2235"" />
				<pos x=""4407.497070"" z=""10240.783203"" a=""25.000000"" />
				<pos x=""4408.201660"" z=""10227.108398"" />
				<pos x=""4408.502441"" z=""10242.607422"" a=""25.000000"" />
				<pos x=""4408.953125"" z=""10239.821289"" a=""25.000000"" />
				<pos x=""4409.389160"" z=""10244.279297"" a=""25.000000"" />
				<pos x=""4409.949219"" z=""10241.607422"" a=""205.000000"" />
				<pos x=""4410.242676"" z=""10245.882813"" a=""205.000000"" />
				<pos x=""4410.941406"" z=""10243.389648"" a=""205.000000"" />
				<pos x=""4411.875000"" z=""10245.064453"" a=""205.000000"" />
				<pos x=""4412.098633"" z=""10225.173828"" />
				<pos x=""4417.962891"" z=""10225.666992"" a=""150.000000"" />
				<pos x=""4418.629883"" z=""10223.896484"" a=""150.000000"" />
				<pos x=""4419.493652"" z=""10222.450195"" a=""150.000000"" />
				<pos x=""4419.810059"" z=""10238.427734"" a=""10.000000"" />
				<pos x=""4420.064453"" z=""10240.121094"" a=""10.000000"" />
				<pos x=""4420.266113"" z=""10241.659180"" a=""10.000000"" />
				<pos x=""4420.473633"" z=""10243.168945"" a=""10.000000"" />
				<pos x=""4424.472656"" z=""10227.924805"" a=""125.000000"" />
				<pos x=""4425.941895"" z=""10226.922852"" a=""125.000000"" />
				<pos x=""4426.065430"" z=""10242.805664"" />
				<pos x=""4426.670898"" z=""10238.280273"" />
				<pos x=""4427.444824"" z=""10225.956055"" a=""125.000000"" />
				<pos x=""4710.880859"" z=""10332.765625"" a=""100.000000""/>
				<pos x=""4713.376465"" z=""10332.264648"" a=""100.000000""/>
				<pos x=""4715.752930"" z=""10331.850586"" a=""100.000000""/>
				<pos x=""4719.551758"" z=""10318.416992"" a=""130.000000""/>
				<pos x=""4720.963867"" z=""10316.429688"" a=""130.000000""/>
	</event>
	
	
	
	Add this to your mapgroupproto.xml
	
	<group name=""StaticObj_Misc_SupplyBox1_DE"" lootmax=""8"">
				<usage name=""Military"" />
				<usage name=""Village"" />
				<usage name=""Town"" />
				<container name=""lootFloor"">
						<category name=""food"" />
						<tag name=""floor"" />
						<tag name=""ground"" />
						<point pos=""-0.466845 -0.577179 -1.298379"" range=""0.280357"" height=""0.700892"" flags=""32"" />
						<point pos=""0.084186 -0.644623 1.159460"" range=""0.739037"" height=""0.162445"" flags=""32"" />
						<point pos=""-1.035482 -0.653107 0.301545"" range=""0.406250"" height=""1.015625"" flags=""32"" />
						<point pos=""0.310169 -0.593872 -1.174397"" range=""0.444704"" height=""1.111755"" flags=""32"" />
						<point pos=""-1.153436 -0.605530 -0.597895"" range=""0.502139"" height=""2.000000"" flags=""32"" />
						<point pos=""0.906094 -0.628113 0.677857"" range=""0.213721"" height=""0.534301"" flags=""32"" />
						<point pos=""0.864444 -0.620605 -0.197463"" range=""0.258789"" height=""0.646973"" flags=""32"" />
						<point pos=""-0.229351 0.550568 -0.329906"" range=""0.443750"" height=""1.109375"" />
						<point pos=""0.403208 0.561493 -0.224684"" range=""0.197594"" height=""0.686218"" />
						<point pos=""-0.139909 0.552948 0.399432"" range=""0.291055"" height=""0.851563"" />
						<point pos=""0.345056 0.561157 0.339634"" range=""0.369713"" height=""0.937500"" />
				</container>
		</group>
		<group name=""StaticObj_Misc_SupplyBox2_DE"" lootmax=""8"">
				<usage name=""Military"" />
				<container name=""lootFloor"">
						<category name=""weapons"" />
						<tag name=""floor"" />
						<tag name=""ground"" />
						<point pos=""0.002854 0.438721 0.542980"" range=""0.134375"" height=""0.335938"" />
						<point pos=""0.010212 0.431763 -0.010903"" range=""0.409375"" height=""1.023438"" />
						<point pos=""-0.190548 0.425385 -0.506625"" range=""0.125495"" height=""0.335938"" />
						<point pos=""0.087892 -0.884277 1.071619"" range=""0.304182"" height=""0.760455"" flags=""32"" />
						<point pos=""-0.655645 -0.890137 0.651234"" range=""0.158478"" height=""0.396195"" flags=""32"" />
						<point pos=""-0.747071 -0.899292 -0.072718"" range=""0.251009"" height=""0.627523"" flags=""32"" />
						<point pos=""-0.699315 -0.908264 -0.791738"" range=""0.259988"" height=""0.100006"" flags=""32"" />
						<point pos=""0.011688 -0.910675 -1.026367"" range=""0.280357"" height=""0.100006"" flags=""32"" />
						<point pos=""0.713865 -0.907501 -0.818310"" range=""0.243164"" height=""0.607910"" flags=""32"" />
						<point pos=""0.735190 -0.892029 0.413747"" range=""0.222352"" height=""0.555878"" flags=""32"" />
						<point pos=""0.878849 -0.900024 -0.231583"" range=""0.366364"" height=""0.920135"" flags=""32"" />
				</container>
		</group>
		<group name=""StaticObj_Misc_SupplyBox3_DE"" lootmax=""8"">
				<usage name=""Medic"" />
				<container name=""lootFloor"">
						<category name=""clothes"" />
						<category name=""tools"" />
						<tag name=""floor"" />
						<tag name=""ground"" />
						<point pos=""0.002854 0.438721 0.542980"" range=""0.134375"" height=""0.335938"" />
						<point pos=""0.010212 0.431763 -0.010903"" range=""0.409375"" height=""1.023438"" />
						<point pos=""-0.190548 0.425385 -0.506625"" range=""0.125495"" height=""0.335938"" />
						<point pos=""0.087892 -0.884277 1.071619"" range=""0.304182"" height=""0.760455"" flags=""32"" />
						<point pos=""-0.655645 -0.890137 0.651234"" range=""0.158478"" height=""0.396195"" flags=""32"" />
						<point pos=""-0.747071 -0.899292 -0.072718"" range=""0.251009"" height=""0.627523"" flags=""32"" />
						<point pos=""-0.699315 -0.908264 -0.791738"" range=""0.259988"" height=""0.100006"" flags=""32"" />
						<point pos=""0.011688 -0.910675 -1.026367"" range=""0.280357"" height=""0.100006"" flags=""32"" />
						<point pos=""0.713865 -0.907501 -0.818310"" range=""0.243164"" height=""0.607910"" flags=""32"" />
						<point pos=""0.735190 -0.892029 0.413747"" range=""0.222352"" height=""0.555878"" flags=""32"" />
						<point pos=""0.878849 -0.900024 -0.231583"" range=""0.366364"" height=""0.920135"" flags=""32"" />
				</container>
		</group>"
