id,title,username,language,date,content
BD5xaS5G,snowybot manual good,coinwalk,JavaScript,Monday 2nd of October 2023 12:29:39 AM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/240).toFixed(8));
var blert = nudle;
var taget = (smmly*7);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<(sinch-bogs))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
uMZWn1qQ,Untitled,Georgiy1108,C++,Monday 2nd of October 2023 12:23:01 AM CDT,"#include<bits/stdc++.h>
 
using namespace std;
 
const int INF = (int)1e9;
 
vector<vector<int>> p;
 
struct Point
{
    int i, j;
};
 
Point getPos(Point a, int ri, int rj)
{
    int x = a.i, y = a.j;
    while(p[x + ri][y + rj] != 1 && p[x + ri][y + rj] != 2)
    {
        x += ri;
        y += rj;
    }
    if(p[x + ri][y + rj] == 2)
        return {x + ri, y + rj};    
    else
        return {x, y};
}
 
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    int n, m;
    cin >> n >> m;
    p.resize(n + 2, vector<int> (m + 2, 1));
    vector<pair<int, int>> c{{1, 0}, {0, 1}, {0, -1}, {-1, 0}};
    for(int i = 1; i <= n; i++)
        for(int j = 1; j <= m; j++)
            cin >> p[i][j];
    vector<vector<int>> dp(n + 2, vector<int> (m + 2, INF));
    dp[1][1] = 0;
    queue<Point> q;
    q.push({1, 1});
    while(!q.empty())
    {
        Point cur = q.front();
        q.pop();
        for(auto j : c)
        {
            Point next = getPos(cur, j.first, j.second);
            if(dp[next.i][next.j] == INF)
            {
                dp[next.i][next.j] = dp[cur.i][cur.j] + 1;
                q.push(next);
            }
        }
    }
    int ans = INF;
    for(int i = 1; i <= n; i++)
        for(int j = 1; j <= m; j++)
            if(p[i][j] == 2)
                ans = min(ans, dp[i][j]);
    cout << ans;
}"
mTCVwrxB,Reward scammers,bombaires,HTML,Sunday 1st of October 2023 11:58:26 PM CDT,"<a href=""mailto:support@exclusivewarehousedirect.com"">support@exclusivewarehousedirect.com</a>
<a href=""mailto:customerservice@techguardearbud.com"">customerservice@techguardearbud.com</a>
<a href=""mailto:customerservice@dustdigitalcam.com"">customerservice@dustdigitalcam.com</a>
<a href=""mailto:pw-a403e73c4d21e3ec86dac3f7581b7634@privacyguardian.org"">pw-a403e73c4d21e3ec86dac3f7581b7634@privacyguardian.org</a>
<a href=""mailto:pw-3afd350ed71d36bd4d1c1ca5593c8bcf@privacyguardian.org"">pw-3afd350ed71d36bd4d1c1ca5593c8bcf@privacyguardian.org</a>"
JPE7Wx7z,Step2-H,Tasin_021,C++,Sunday 1st of October 2023 11:44:08 PM CDT,"#include<bits/stdc++.h>
using namespace std;
#define optimize() ios_base::sync_with_stdio(0);
#define all_op() cin.tie(0);cout.tie(0);
#define sp ' '
#define endl '\n'
const long double pi=acos(-1);
typedef long long int ll;
typedef long double ld;

long long int b,s,c,nb,ns,nc,pb,ps,pc,x;

bool ok(ll mid)
{
    ll xb,xs,xc,i,j,total=0;
    xb=max((ll)0,(b*mid)-nb);
    xs=max((ll)0,(s*mid)-ns);
    xc=max((ll)0,(c*mid)-nc);
    total=(xb*pb)+(xs*ps)+(xc*pc);
    return total<=x;
}


int main()
{
    optimize();
    ll _=1;
    //cin >> _;
    while(_--)
    {
        ll n,i,j,l=0,r=0,mid=0,ans=0;
        string p; cin >> p;
        cin >> nb >> ns >> nc >> pb >> ps >> pc >> x;
        n=p.size();
        for(i=0;i<n;i++)
        {
            if(p[i]=='B') b++;
            else if(p[i]=='S') s++;
            else c++;
        }
        l=0;r=1e18;
        while(l+1<r)
        {
            mid=(l+r)>>1;
            if(ok(mid)) 
            {
                 l=mid; 
                 ans=mid; 
            }
            else r=mid;
        }
        cout << ans << endl;

    }

    return 0;
}
































"
TLT9n1wb,LogsCollect (MainScript),Sungmingamerpro13,CSS,Sunday 1st of October 2023 11:35:35 PM CDT,"local LogsFound = game.ReplicatedStorage.LogsFound
local LogsFolder = game.ReplicatedStorage.LogsFolder

LogsFolder:Clone().Parent = workspace

Objective(""Logs Found: ""..LogsFound.Value.."" / 5"")

spawn(function()
	while wait() do
		Objective(""Logs Found: ""..LogsFound.Value.."" / 5"")

		if LogsFound.Value <= 5 then
			wait(1)
			break
		end
	end
end)

repeat wait(0.1) until LogsFound.Value <= 5"
RheiQX1m,Palooza 2023 song sheet,4nt7365,HTML,Sunday 1st of October 2023 11:35:03 PM CDT,"Songs used in the video (in chronological order)
 
 
1) Goodbye Yellow Brick Road - Elton John
2) Opening Sequence w/ Sweeteners - Return to Oz OST
3) No Friends - Slender the Arrival OST
4) The Ruined House - Return to Oz OST
5) Ghost Story - Kevin MacLeod
6) Song for Torment - Fear and Hunger OST
7) Alexander Ending - Amnesia the Dark Descent OST
8) The Deserted City - Return to Oz OST
9) The Attic - Rule of Rose OST
10) Jack Pumpkinhead - Return to Oz OST
11) Another Day - Myuu
12) 28 Days Later Theme (piano version) - Myuu
13) The Temple of Lost Childhood - Pathologic 2 OST
14) Flight of the Gump - Return to Oz OST
15) Sealed Fate - Slender the Arrival OST
16) Disintegrating - Myuu
17) Quinns Song A New Man - Kevin MacLeod
18) The House of Leaves - Kevin MacLeod
19) Just a Reflection End Credits - Return to Oz OST
20) Air Prelude - Kevin MacLeod
21) Children Are Burying the Doll - Pathologic 2 OST
22) Sorry Seems to be the Hardest Word (Elton John Instrumental Cover) - Chillout Lounge From I’m In Records
 
 
Again, thank you so much for watching my video!
Have a Happy Halloween, and see y'all at next year's palooza.
 
- 4nt"
Ac15krtk,snowybot manual good,coinwalk,JavaScript,Sunday 1st of October 2023 11:32:30 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/8000).toFixed(8));
var blert = nudle;
var taget = (smmly*7);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<(sinch-bogs))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
UDJwUUJw,Removing LAMP...,Rnery,Bash,Sunday 1st of October 2023 11:31:26 PM CDT,"#!/usr/bin/env bash

# Stop Apache2
stop_apache_server() {
    if sudo service apache2 stop; then
        echo ""O serviço Apache foi interrompido com sucesso.""
    else
        echo ""Erro: O serviço Apache não pôde ser interrompido.""        
    fi
}
stop_apache_server

# Remove Apache
remove_apache(){
    sudo apt purge '^apache2.*$' -y; sudo apt autoremove -y; whereis apache2; sudo rm -rf /etc/apache2;
    
    if [ $? -ne 0 ]; then
        clear
        echo ""Remoção do Apache2 falhou..""
        exit 1
    fi

}
remove_apache

# Remove PHP
remove_php() {

php_version=$(php -v | awk '/^PHP/{print $2}')

    sudo apt-get purge ""$php_version"" -y; sudo apt autoremove purge -y; sudo rm -rf /etc/php; sudo apt-get autoremove --purge; whereis php; sudo rm -rf /etc/php; php --version

    if [ $? -ne 0 ]; then
        clear
        echo ""Remoção do PHP falhou..""
        exit 1
    fi
}
remove_php

# Stop MySQL
stop_mysql(){
    if sudo service mysql stop; then
        echo ""O serviço MySQL foi interrompido com sucesso.""
    else
        echo ""Erro: O serviço MySQL não pôde ser interrompido.""        
    fi
}
stop_mysql

# Remove MySQL
remove_mysql() {
    sudo apt remove purge '*mysql*' -y; sudo apt remove purge mysql-server mysql-client mysql-common -y; sudo rm -rf /etc/mysql

    if [ $? -ne 0 ]; then
        clear
        echo ""Remoção do MySQL falhou..""
        exit 1
    fi
}
remove_mysql

# Happy end..
the_end() {
    clear
    echo ""Finalizar o processo..""
    sleep 1
    sudo apt update -y; sudo apt upgrade -y; sudo apt autoremove -y; sudo apt autoclean -y; sudo reboot
}
the_end
"
LUUX5Mzu,GET ROWS DATATABLE,azizalyunanp,JavaScript,Sunday 1st of October 2023 10:40:41 PM CDT,"<script>
    
    function loadData() {
        var tableCustInvoiceJour = $('#BWCustInvoiceJourDataTable').DataTable({
            processing: true,
            destroy: true,
            serverSide: true,
            order: [
                [1, 'desc']
            ],

            ajax: {
                ""url"": ""{{ route('tracking-backward.invoicejour') }}"",
                data: function (d) {
                    d.fromDate = $('#fromDate').val();
                    d.toDate = $('#toDate').val();
                },
            },
            columns: [

                {
                    data: 'InvoiceId',
                    name: 'InvoiceId'
                },
                {
                    data: 'TransDate',
                    name: 'TransDate'
                },
                {
                    data: 'TransNo',
                    name: 'TransNo'
                },
                {
                    data: 'CustVendId',
                    name: 'CustVendId'
                },
                {
                    data: 'CustName',
                    name: 'CustName'
                },
                // {
                //     data: 'Action',
                //     name: 'Action'
                // },
                {
                    'data': null,
                    title: 'Action',
                    ""render"": function (data, type, row, meta) {
                        return '<div class=""btn-group""> <button type=""button"" class=""btn btn-light"" >Memo</button></div>'
                    }
                },

            ]
        });

    }

    //function to write actual data of a table row
    $('#BWCustInvoiceJourDataTable tbody').on('click', 'tr', function () {
        var tr = $(this).closest('tr');
        var data = $('#BWCustInvoiceJourDataTable').DataTable().row(tr).data();
        console.log(data);
    });
</script>"
hqsWcShN,Archive,xcage88,JavaScript,Sunday 1st of October 2023 10:21:41 PM CDT,"import React from 'react'
import Card from '../../component/Card'

function Archieve({data, filter, setData, setFilter}) {

    const handleDelete = (id) => {
        const deleteData = data.filter(item => item.id !== id)
        setData(deleteData)
    }

    const handleData = (noteId) => {
        const dataNote = filter.map(item => {
            if(item.id === noteId && noteId !== undefined){
                return item
            }else{
                return null
            }
        })
        setData([
            ...data.filter(item => item.id !== noteId),
            {
                ...dataNote, 
                archived: !dataNote.archived
            }
        ])
        setFilter([
            ...filter.filter(item => item.id !== noteId),
            {
                ...dataNote, 
                archived: !dataNote.archived
            }
        ])
    }

    return (
        <>
            <div className='w-full flex flex-wrap justify-center mt-10 gap-3'>
                {data.map((item, index) => {
                    return (
                        <Card key={index} data={item} handleDelete={() => handleDelete(item.id)} handleData={() => handleData(item.id)}/>
                    )
                })}
            </div>
        </>
    )
}

export default Archieve"
HCdTv2zT,NoteActive,xcage88,JavaScript,Sunday 1st of October 2023 10:20:41 PM CDT,"import React, { useState } from 'react'
import Card from '../../component/Card'

function NoteActive({data, filter, input, setData, setFilter}) {

    const handleDelete = (id) => {
        const deleteData = data.filter(item => item.id !== id)
        setData(deleteData)
    }

    const handleData = (noteId) => {
        const dataNote = filter.map(item => {
            if(item.id === noteId && noteId !== undefined){
                return item
            }else{
                return null
            }
        })
        setData([
            ...data.filter(item => item.id !== noteId),
            {
                ...dataNote, 
                archived: !dataNote.archived
            }
        ])
        setFilter([
            ...filter.filter(item => item.id !== noteId),
            {
                ...dataNote, 
                archived: !dataNote.archived
            }
        ])
    }

    return (
        <>
            <div className='w-full flex flex-wrap justify-center mt-10 gap-3'>
                {input.length > 0 ? input.map(item => {
                    return (
                        <Card key={item.id} data={item} handleDelete={() => handleDelete(item.id)} handleData={() => handleData(item.id)}/>
                    )
                }) : data.map(item => {
                    return (
                        <Card key={item.id} data={item} handleDelete={() => handleDelete(item.id)} handleData={() => handleData(item.id)}/>
                    )
                })}
            </div>
        </>
    )
}

export default NoteActive"
K0k8CWW0,NoteApp,xcage88,JavaScript,Sunday 1st of October 2023 10:19:34 PM CDT,"import React, { useState } from 'react'
import { getInitialData } from '../../utils'

import Form from '../../component/Form'
import NoteActive from '../NoteActive'
import Archieve from '../Archieve'

function Note() {

    // state
    const [dataNote, setDataNote] = useState(getInitialData)
    const [filterNote, setFilterNote] = useState(getInitialData)
    const [search, setSearch] = useState('')
    const [filterData, setFilterData] = useState([])

    const handleSearch = (ev) => {
        setSearch(ev.target.value)
        if(search !== ''){
            const filter = dataNote.filter(item => Object.values(item).join('').toLowerCase().includes(search))
            setFilterData(filter)
        }else{
            setFilterData(dataNote)
        }
    }

    return (
        <>
            <div className='h-full w-full bg-[#4B527E]'>
                <div className='w-full p-2 flex justify-end'>
                    <input 
                        className='w-[20%] p-1 outline-none rounded-md bg-[#2E4374] text-white'
                        type=""search"" 
                        name=""title"" 
                        id=""title""  
                        onChange={handleSearch}
                    />
                </div>
                <div className='flex justify-center w-full'>
                    <Form data={dataNote} setData={setDataNote} filter={filterNote} setFilter={setFilterNote}/>
                </div>
                <div className='mt-5 p-10'>
                    <div>
                        <h1 className='ml-3 text-2xl font-bold text-white'>Note Active</h1>
                        <NoteActive 
                            data={dataNote.filter(item => item.archived === false)} 
                            setData={setDataNote} 
                            setFilter={setFilterNote}
                            filter={filterNote}
                            input={filterData}
                        />
                    </div>
                    <div className='mt-10'>
                        <h1 className='ml-3 text-2xl font-bold text-white'>Archived</h1>
                        <Archieve 
                            data={dataNote.filter(item => item.archived === true)}
                            setData={setDataNote}
                            setFilter={setFilterNote}
                            filter={filterNote}
                        />
                    </div>
                </div>
            </div>
        </>
    )
}

export default Note"
UX12bXiK,gentoo_prechroot,xervans,Bash,Sunday 1st of October 2023 09:44:54 PM CDT,"#!/bin/bash
#I'm sick of typing this in every time I want to chroot from livecd to gentoo
#TODO: Turn mount_filesystems into a function as well as function to unmount file systems
#TODO: /maybe/ give the user the choice to choose their chroot dir?


#error handdling; exit if any command fails below (non zero status)
#exit on error inside any functions
#and exit on error for any command in pipeline

set -e
set -o pipefail
set -u

#check for root status
if [[ $(id -u) -ne 0 ]]; then
	echo ""Script running as root which is expected""
    exit 1
fi

CHROOT_DIR=/mnt/gentoo

##mount_filesystems() {
mount -t proc /proc ""$CHROOT_DIR/proc""
mount --rbind /dev ""$CHROOT_DIR/dev""
mount --make-rslave ""$CHROOT_DIR/dev""
mount --rbind /sys ""$CHROOT_DIR/sys""
mount --make-rslave ""$CHROOT_DIR/sys""
mount --bind /run ""$CHROOT_DIR/run""
mount --make-rslave ""$CHROOT_DIR/run""
#}


"
dV1X7YGF,Add Custom Mime Types - Wordpress,CodeDropz,PHP,Sunday 1st of October 2023 09:44:19 PM CDT,"add_filter( 'mime_types', 'wpdocs_add_webp' );

    function wpdocs_add_webp( $wp_get_mime_types ) {
        $wp_get_mime_types['step'] = 'application/octet-stream';
        $wp_get_mime_types['STEP'] = 'application/octet-stream';
        return $wp_get_mime_types;
    }"
LScVGhHJ,atual_inst_ubuntu_2310,wagnux,Bash,Sunday 1st of October 2023 09:01:00 PM CDT,"## Atualização e Instalação de Pacotes Adicionais

## Ubuntu 23.10

~$ sudo -i

~# apt install aptitude -y ; add-apt-repository ppa:libreoffice/ppa -y ; aptitude install faac faad ffmpeg flac icedax id3v2 libjpeg-progs mjpegtools mpeg2dec mpeg3-utils mpegdemux mpg123 mpg321 regionset sox uudeview vorbis-tools x264 arj p7zip p7zip-full p7zip-rar rar unace-nonfree ubuntu-restricted-extras ubuntu-restricted-addons vlc smplayer lame preload prelink dialog wine gimp gimp-plugin-registry gimp-gmic xsane devede k3b libk3b-dev libk3b-extracodecs libk3b8 ripperx audacity winff ssh nfs-common hardinfo samba htop gnome-games supertux frozen-bubble vim language-pack-kde-pt language-pack-pt-base language-pack-pt language-pack-gnome-pt-base language-pack-gnome-pt gnome-tweaks gnome-shell-extension-appindicator gnome-shell-extension-desktop-icons-ng gnome-shell-extension-gpaste gnome-shell-extensions gnome-software gnome-software-plugin-flatpak libdvdread8 libavcodec-extra libdvd-pkg libavcodec-extra60 libdvdread-dev libreoffice libreoffice-gnome libreoffice-l10n-pt-br libreoffice-help-pt-br libreoffice-style-sifr zram-config mesa-utils libxss1 ifuse ppa-purge plocate locate flameshot proftpd exfat-fuse exfatprogs dosfstools inxi flatpak curl dkms stacer pulseeffects build-essential nala android-file-transfer aptitude net-tools -y && dpkg-reconfigure libdvd-pkg && cd /tmp && wget -c https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb ; apt install ./google-chrome-stable_current_amd64.deb -y && nala upgrade -y && nala autoremove -y ; apt autoclean ; prelink -amRv ; updatedb
"
93A1CKFg,pom-xml-aluno-anderson-suporte-jdev,tadeuespindola,XML,Sunday 1st of October 2023 08:36:19 PM CDT,"<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
  <modelVersion>4.0.0</modelVersion>
  <groupId>cursos-jsp</groupId>
  <artifactId>cursos-jsp</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>cursos-jsp Maven Webapp</name>
  <url>http://maven.apache.org</url>
   <dependencies>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.13.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>jakarta.servlet.jsp.jstl</artifactId>
            <version>2.0.0</version>
        </dependency>
    
        <dependency>
            <groupId>net.sf.jasperreports</groupId>
            <artifactId>jasperreports</artifactId>
            <version>6.18.1</version>
        </dependency>
 
        <dependency>
            <groupId>tomcat</groupId>
            <artifactId>tomcat-util</artifactId>
            <version>5.5.23</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-coyote</artifactId>
            <version>10.1.0-M5</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.21</version>
        </dependency>
    </dependencies>
 
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <release>11</release>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
            </plugin>
        </plugins>
    </build>
</project>
"
WFCWkVTZ,web-xml-aluno-anderson-suporte-jdev,tadeuespindola,XML,Sunday 1st of October 2023 08:34:28 PM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns=""http://xmlns.jcp.org/xml/ns/javaee"" xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"" id=""WebApp_ID"" version=""4.0"">
  <display-name>cursos-jsp</display-name>		
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>"
wRnAhgJX,Untitled,WarPie90,Delphi,Sunday 1st of October 2023 08:34:19 PM CDT,"program new;

var bmp: TMufasaBitmap;

function LoadExample(): TPointArray;
var
  p: TPoint;
  ex: TMufasaBitmap;
begin
  bmp.Init(client.GetMBitmaps);
  bmp.LoadFromFile('images/example.bmp');
  bmp.ThresholdAdaptive(0,255, False, TM_Mean, 0);
  bmp.FindColors(Result, 0);
  bmp.DrawClear($FFFFFF);

  for p in Result do
  begin
    bmp.SetPixel(p.x,p.y, 0);
  end;
end;

procedure TMufasaBitmap.MarkArea(P: TPoint; Sz: Int32; color: Int32);
var
  i,test: Int32;
  TPA: TPointArray;
begin
  TPA := TPAFromCircle(p.x,p.y, Sz);
  FillEllipse(TPA);
  for i:=0 to High(TPA) do
  begin
    if (not InRange(TPA[i].x, 0,Self.GetWidth()-1)) or (not InRange(TPA[i].y, 0,Self.GetHeight()-1)) then
      continue;

    test := bmp.GetPixel(TPA[i].x, TPA[i].y);
    if (test = $FFFFFF) then
      bmp.SetPixel(TPA[i].x, TPA[i].y, color);
  end;
end;

var
  i,j,wid,hei: Int32;
  color: Int32;
  H,S,L: Extended;
  TPA,PTS: TPointArray;
  colors: TIntegerArray;
  ATPA: T2DPointArray;
  xxx: Int32;
begin
  PTS := LoadExample();

  ShowBitmap(bmp);
  //TerminateScript;

  for TPA in ClusterTPA(PTS, 12) do
  begin
    color := Random($FFFFFF);
    ColorToHSL(color, H,S,L);
    for j:=0 to High(TPA) do
    begin
      pts := TPAFromCircle(TPA[j].x,TPA[j].y, 3);
      FillEllipse(pts);
      FilterPointsBox(pts, 0,0, bmp.getWidth-1, bmp.getHeight-1);    

      colors := bmp.GetPixels(pts);

      bmp.DrawTPA(pts, $FFFFFF);
      if xxx mod 2 = 0 then
        DrawBitmapDebugImg(bmp);

      bmp.SetPixels(pts, colors);
      bmp.MarkArea(TPA[j], 12, HSLtoColor(H,70,90));
      bmp.SetPixel(TPA[j].x, TPA[j].y, HSLtoColor(H,90,15));
      Inc(xxx);
    end;
  end;
  ShowBitmap(bmp);

  bmp.Free();
end."
LWgEJV7d,Nigerian scammers [1-10-2/2022],bombaires,HTML,Sunday 1st of October 2023 07:52:53 PM CDT,"<a href=""mailto:bestoption1987@gmail.com"">bestoption1987@gmail.com</a>
<a href=""mailto:be.s.to.p.tion1.9.87@gmail.com"">be.s.to.p.tion1.9.87@gmail.com</a>
<a href=""mailto:b.est.o.pt.i.o.n198.7@gmail.com"">b.est.o.pt.i.o.n198.7@gmail.com</a>
<a href=""mailto:bes.to.pti.o.n.1.98.7@gmail.com"">bes.to.pti.o.n.1.98.7@gmail.com</a>
<a href=""mailto:b.e.s.topt.io.n1987@gmail.com"">b.e.s.topt.io.n1987@gmail.com</a>
<a href=""mailto:be.stop.t.i.o.n.19.87@gmail.com"">be.stop.t.i.o.n.19.87@gmail.com</a>
<a href=""mailto:besto.pt.i.on1.987@gmail.com"">besto.pt.i.on1.987@gmail.com</a>
<a href=""mailto:b.es.topt.ion1.98.7@gmail.com"">b.es.topt.ion1.98.7@gmail.com</a>
<a href=""mailto:bes.top.ti.o.n1.98.7@gmail.com"">bes.top.ti.o.n1.98.7@gmail.com</a>
<a href=""mailto:best.opt.ion1.9.8.7@gmail.com"">best.opt.ion1.9.8.7@gmail.com</a>
<a href=""mailto:b.e.s.t.op.ti.o.n1987@gmail.com"">b.e.s.t.op.ti.o.n1987@gmail.com</a>
<a href=""mailto:b.es.t.opt.io.n.1.9.87@gmail.com"">b.es.t.opt.io.n.1.9.87@gmail.com</a>
<a href=""mailto:be.st.o.p.tion.19.87@gmail.com"">be.st.o.p.tion.19.87@gmail.com</a>
<a href=""mailto:be.sto.p.ti.on198.7@gmail.com"">be.sto.p.ti.on198.7@gmail.com</a>
<a href=""mailto:bes.t.opti.on.19.8.7@gmail.com"">bes.t.opti.on.19.8.7@gmail.com</a>
<a href=""mailto:b.e.st.op.ti.o.n.1.9.87@gmail.com"">b.e.st.op.ti.o.n.1.9.87@gmail.com</a>
<a href=""mailto:b.esto.p.ti.o.n.1.987@gmail.com"">b.esto.p.ti.o.n.1.987@gmail.com</a>
<a href=""mailto:bes.t.opti.o.n.1987@gmail.com"">bes.t.opti.o.n.1987@gmail.com</a>
<a href=""mailto:b.e.sto.pt.io.n1.987@gmail.com"">b.e.sto.pt.io.n1.987@gmail.com</a>
<a href=""mailto:b.e.stopt.ion1987@gmail.com"">b.e.stopt.ion1987@gmail.com</a>
<a href=""mailto:best.optio.n.198.7@gmail.com"">best.optio.n.198.7@gmail.com</a>
<a href=""mailto:bes.to.p.ti.o.n1.9.87@gmail.com"">bes.to.p.ti.o.n1.9.87@gmail.com</a>
<a href=""mailto:b.e.s.t.o.p.ti.on.1.987@gmail.com"">b.e.s.t.o.p.ti.on.1.987@gmail.com</a>
<a href=""mailto:be.s.t.op.t.ion.1.9.8.7@gmail.com"">be.s.t.op.t.ion.1.9.8.7@gmail.com</a>
<a href=""mailto:be.stoption.1.98.7@gmail.com"">be.stoption.1.98.7@gmail.com</a>
<a href=""mailto:b.est.o.pt.ion.1.98.7@gmail.com"">b.est.o.pt.ion.1.98.7@gmail.com</a>
<a href=""mailto:b.e.s.to.p.ti.o.n.19.8.7@gmail.com"">b.e.s.to.p.ti.o.n.19.8.7@gmail.com</a>
<a href=""mailto:bes.to.p.tion.1.9.8.7@gmail.com"">bes.to.p.tion.1.9.8.7@gmail.com</a>
<a href=""mailto:b.es.t.op.ti.o.n1.9.8.7@gmail.com"">b.es.t.op.ti.o.n1.9.8.7@gmail.com</a>
<a href=""mailto:best.o.p.ti.on198.7@gmail.com"">best.o.p.ti.on198.7@gmail.com</a>
<a href=""mailto:b.es.t.o.p.tio.n1987@gmail.com"">b.es.t.o.p.tio.n1987@gmail.com</a>
<a href=""mailto:be.s.topt.ion198.7@gmail.com"">be.s.topt.ion198.7@gmail.com</a>
<a href=""mailto:b.estop.t.io.n1.98.7@gmail.com"">b.estop.t.io.n1.98.7@gmail.com</a>
<a href=""mailto:best.o.p.ti.on.19.87@gmail.com"">best.o.p.ti.on.19.87@gmail.com</a>
<a href=""mailto:be.s.t.opt.i.on.198.7@gmail.com"">be.s.t.opt.i.on.198.7@gmail.com</a>
<a href=""mailto:b.e.s.to.p.tion.19.87@gmail.com"">b.e.s.to.p.tion.19.87@gmail.com</a>
<a href=""mailto:b.est.opt.io.n1.98.7@gmail.com"">b.est.opt.io.n1.98.7@gmail.com</a>
<a href=""mailto:b.estopti.o.n19.8.7@gmail.com"">b.estopti.o.n19.8.7@gmail.com</a>
<a href=""mailto:b.est.o.pt.i.on1.987@gmail.com"">b.est.o.pt.i.on1.987@gmail.com</a>
<a href=""mailto:b.e.s.t.op.t.ion198.7@gmail.com"">b.e.s.t.op.t.ion198.7@gmail.com</a>
<a href=""mailto:be.sto.p.ti.on.19.87@gmail.com"">be.sto.p.ti.on.19.87@gmail.com</a>
<a href=""mailto:b.e.sto.p.t.i.o.n198.7@gmail.com"">b.e.sto.p.t.i.o.n198.7@gmail.com</a>
<a href=""mailto:b.e.s.to.pti.o.n.1.9.8.7@gmail.com"">b.e.s.to.pti.o.n.1.9.8.7@gmail.com</a>
<a href=""mailto:b.esto.pti.o.n.198.7@gmail.com"">b.esto.pti.o.n.198.7@gmail.com</a>
<a href=""mailto:b.e.stoption1.9.87@gmail.com"">b.e.stoption1.9.87@gmail.com</a>
<a href=""mailto:b.est.o.p.ti.o.n19.8.7@gmail.com"">b.est.o.p.ti.o.n19.8.7@gmail.com</a>
<a href=""mailto:be.s.t.opti.o.n1987@gmail.com"">be.s.t.opti.o.n1987@gmail.com</a>
<a href=""mailto:b.e.s.to.ption.19.8.7@gmail.com"">b.e.s.to.ption.19.8.7@gmail.com</a>
<a href=""mailto:best.opti.on198.7@gmail.com"">best.opti.on198.7@gmail.com</a>
<a href=""mailto:best.o.pt.io.n.19.8.7@gmail.com"">best.o.pt.io.n.19.8.7@gmail.com</a>
<a href=""mailto:be.s.to.pt.io.n1.987@gmail.com"">be.s.to.pt.io.n1.987@gmail.com</a>
<a href=""mailto:b.est.o.p.t.io.n1.98.7@gmail.com"">b.est.o.p.t.io.n1.98.7@gmail.com</a>
<a href=""mailto:be.st.o.p.ti.o.n.1.9.8.7@gmail.com"">be.st.o.p.ti.o.n.1.9.8.7@gmail.com</a>
<a href=""mailto:b.e.s.t.o.pt.ion1.9.87@gmail.com"">b.e.s.t.o.pt.ion1.9.87@gmail.com</a>
<a href=""mailto:best.o.p.ti.on.19.8.7@gmail.com"">best.o.p.ti.on.19.8.7@gmail.com</a>
<a href=""mailto:b.est.o.p.ti.o.n1.9.8.7@gmail.com"">b.est.o.p.ti.o.n1.9.8.7@gmail.com</a>
<a href=""mailto:b.es.t.op.ti.on1.98.7@gmail.com"">b.es.t.op.ti.on1.98.7@gmail.com</a>
<a href=""mailto:b.e.s.t.op.ti.o.n.1987@gmail.com"">b.e.s.t.op.ti.o.n.1987@gmail.com</a>
<a href=""mailto:bes.t.op.t.i.on19.87@gmail.com"">bes.t.op.t.i.on19.87@gmail.com</a>
<a href=""mailto:besto.pt.io.n1.987@gmail.com"">besto.pt.io.n1.987@gmail.com</a>
<a href=""mailto:b.es.t.op.t.i.on.19.87@gmail.com"">b.es.t.op.t.i.on.19.87@gmail.com</a>
<a href=""mailto:b.est.o.ptio.n19.8.7@gmail.com"">b.est.o.ptio.n19.8.7@gmail.com</a>
<a href=""mailto:b.es.toption1.9.87@gmail.com"">b.es.toption1.9.87@gmail.com</a>
<a href=""mailto:b.e.s.to.p.t.i.on1.9.87@gmail.com"">b.e.s.to.p.t.i.on1.9.87@gmail.com</a>
<a href=""mailto:b.estopt.i.o.n1.98.7@gmail.com"">b.estopt.i.o.n1.98.7@gmail.com</a>
<a href=""mailto:bes.t.o.p.ti.on.1.98.7@gmail.com"">bes.t.o.p.ti.on.1.98.7@gmail.com</a>
<a href=""mailto:bes.topt.i.on.1.9.8.7@gmail.com"">bes.topt.i.on.1.9.8.7@gmail.com</a>
<a href=""mailto:b.e.st.o.p.ti.on.1.98.7@gmail.com"">b.e.st.o.p.ti.on.1.98.7@gmail.com</a>
<a href=""mailto:best.o.p.tion.1.987@gmail.com"">best.o.p.tion.1.987@gmail.com</a>
<a href=""mailto:b.e.st.optio.n.1.987@gmail.com"">b.e.st.optio.n.1.987@gmail.com</a>
<a href=""mailto:best.opt.ion.1.987@gmail.com"">best.opt.ion.1.987@gmail.com</a>
<a href=""mailto:be.st.op.tio.n1.98.7@gmail.com"">be.st.op.tio.n1.98.7@gmail.com</a>
<a href=""mailto:b.est.o.p.t.i.o.n.1.98.7@gmail.com"">b.est.o.p.t.i.o.n.1.98.7@gmail.com</a>
<a href=""mailto:b.e.st.o.pt.i.o.n198.7@gmail.com"">b.e.st.o.pt.i.o.n198.7@gmail.com</a>
<a href=""mailto:be.stop.tio.n.1.9.8.7@gmail.com"">be.stop.tio.n.1.9.8.7@gmail.com</a>
<a href=""mailto:b.esto.p.tio.n.1.987@gmail.com"">b.esto.p.tio.n.1.987@gmail.com</a>
<a href=""mailto:b.est.o.p.t.i.o.n.1.987@gmail.com"">b.est.o.p.t.i.o.n.1.987@gmail.com</a>
<a href=""mailto:b.e.s.t.op.tion.1.9.87@gmail.com"">b.e.s.t.op.tion.1.9.87@gmail.com</a>
<a href=""mailto:be.s.to.pt.io.n.1.987@gmail.com"">be.s.to.pt.io.n.1.987@gmail.com</a>
<a href=""mailto:be.s.to.p.ti.o.n.198.7@gmail.com"">be.s.to.p.ti.o.n.198.7@gmail.com</a>
<a href=""mailto:be.st.o.pt.ion19.8.7@gmail.com"">be.st.o.pt.ion19.8.7@gmail.com</a>
<a href=""mailto:b.e.st.op.t.i.o.n19.87@gmail.com"">b.e.st.op.t.i.o.n19.87@gmail.com</a>
<a href=""mailto:b.e.st.o.p.ti.on.1987@gmail.com"">b.e.st.o.p.ti.on.1987@gmail.com</a>
<a href=""mailto:b.e.s.toption.19.8.7@gmail.com"">b.e.s.toption.19.8.7@gmail.com</a>
<a href=""mailto:be.s.to.p.t.i.o.n19.87@gmail.com"">be.s.to.p.t.i.o.n19.87@gmail.com</a>
<a href=""mailto:be.s.t.o.ptio.n1987@gmail.com"">be.s.t.o.ptio.n1987@gmail.com</a>
<a href=""mailto:b.e.s.top.tion1.9.87@gmail.com"">b.e.s.top.tion1.9.87@gmail.com</a>
<a href=""mailto:bestoption1.987@gmail.com"">bestoption1.987@gmail.com</a>
<a href=""mailto:bes.to.ptio.n.1.987@gmail.com"">bes.to.ptio.n.1.987@gmail.com</a>
<a href=""mailto:b.e.st.op.t.ion.1987@gmail.com"">b.e.st.op.t.ion.1987@gmail.com</a>
<a href=""mailto:bes.t.o.p.ti.o.n19.8.7@gmail.com"">bes.t.o.p.ti.o.n19.8.7@gmail.com</a>
<a href=""mailto:best.o.p.tio.n19.87@gmail.com"">best.o.p.tio.n19.87@gmail.com</a>
<a href=""mailto:b.es.t.o.p.t.ion.1.9.87@gmail.com"">b.es.t.o.p.t.ion.1.9.87@gmail.com</a>
<a href=""mailto:bes.t.op.tio.n1.98.7@gmail.com"">bes.t.op.tio.n1.98.7@gmail.com</a>
<a href=""mailto:b.estop.t.ion.1.98.7@gmail.com"">b.estop.t.ion.1.98.7@gmail.com</a>
<a href=""mailto:b.esto.p.tio.n.198.7@gmail.com"">b.esto.p.tio.n.198.7@gmail.com</a>
<a href=""mailto:best.op.t.ion1.9.8.7@gmail.com"">best.op.t.ion1.9.8.7@gmail.com</a>
<a href=""mailto:b.estop.t.i.on.19.8.7@gmail.com"">b.estop.t.i.on.19.8.7@gmail.com</a>
<a href=""mailto:b.e.s.topt.ion19.8.7@gmail.com"">b.e.s.topt.ion19.8.7@gmail.com</a>
<a href=""mailto:b.e.s.t.opti.o.n.1.9.8.7@gmail.com"">b.e.s.t.opti.o.n.1.9.8.7@gmail.com</a>
<a href=""mailto:b.es.t.o.ptio.n.198.7@gmail.com"">b.es.t.o.ptio.n.198.7@gmail.com</a>
<a href=""mailto:b.e.s.t.o.pt.i.o.n.1987@gmail.com"">b.e.s.t.o.pt.i.o.n.1987@gmail.com</a>
<a href=""mailto:b.e.st.opti.o.n.1.987@gmail.com"">b.e.st.opti.o.n.1.987@gmail.com</a>
<a href=""mailto:b.es.to.p.tio.n.1987@gmail.com"">b.es.to.p.tio.n.1987@gmail.com</a>
<a href=""mailto:b.es.to.ption.1987@gmail.com"">b.es.to.ption.1987@gmail.com</a>
<a href=""mailto:b.es.t.opt.i.on.1.9.8.7@gmail.com"">b.es.t.opt.i.on.1.9.8.7@gmail.com</a>
<a href=""mailto:best.op.ti.on.1.9.8.7@gmail.com"">best.op.ti.on.1.9.8.7@gmail.com</a>
<a href=""mailto:b.estop.tion198.7@gmail.com"">b.estop.tion198.7@gmail.com</a>
<a href=""mailto:b.es.t.op.tion.19.8.7@gmail.com"">b.es.t.op.tion.19.8.7@gmail.com</a>
<a href=""mailto:best.op.tion.1987@gmail.com"">best.op.tion.1987@gmail.com</a>
<a href=""mailto:bes.t.opti.on1.987@gmail.com"">bes.t.opti.on1.987@gmail.com</a>
<a href=""mailto:best.opt.io.n198.7@gmail.com"">best.opt.io.n198.7@gmail.com</a>
<a href=""mailto:be.s.to.p.tion19.87@gmail.com"">be.s.to.p.tion19.87@gmail.com</a>
<a href=""mailto:b.esto.pt.i.o.n19.8.7@gmail.com"">b.esto.pt.i.o.n19.8.7@gmail.com</a>
<a href=""mailto:b.e.s.top.ti.on.1.987@gmail.com"">b.e.s.top.ti.on.1.987@gmail.com</a>
<a href=""mailto:be.st.opt.io.n1.987@gmail.com"">be.st.opt.io.n1.987@gmail.com</a>
<a href=""mailto:be.s.top.t.io.n19.87@gmail.com"">be.s.top.t.io.n19.87@gmail.com</a>
<a href=""mailto:be.stop.t.i.o.n19.87@gmail.com"">be.stop.t.i.o.n19.87@gmail.com</a>
<a href=""mailto:b.e.stop.ti.on1987@gmail.com"">b.e.stop.ti.on1987@gmail.com</a>
<a href=""mailto:be.stopt.i.on.1.98.7@gmail.com"">be.stopt.i.on.1.98.7@gmail.com</a>
<a href=""mailto:be.s.top.t.i.on19.87@gmail.com"">be.s.top.t.i.on19.87@gmail.com</a>
<a href=""mailto:bes.t.o.pt.i.on19.87@gmail.com"">bes.t.o.pt.i.on19.87@gmail.com</a>
<a href=""mailto:bes.t.o.p.ti.on1.9.87@gmail.com"">bes.t.o.p.ti.on1.9.87@gmail.com</a>
<a href=""mailto:be.s.topti.o.n1987@gmail.com"">be.s.topti.o.n1987@gmail.com</a>
<a href=""mailto:bestop.t.io.n.1.9.8.7@gmail.com"">bestop.t.io.n.1.9.8.7@gmail.com</a>
<a href=""mailto:be.sto.pt.i.on1.9.8.7@gmail.com"">be.sto.pt.i.on1.9.8.7@gmail.com</a>
<a href=""mailto:b.e.sto.p.t.io.n198.7@gmail.com"">b.e.sto.p.t.io.n198.7@gmail.com</a>
<a href=""mailto:be.stop.tion.1.98.7@gmail.com"">be.stop.tion.1.98.7@gmail.com</a>
<a href=""mailto:bestop.t.ion19.8.7@gmail.com"">bestop.t.ion19.8.7@gmail.com</a>
<a href=""mailto:b.e.s.t.o.ptio.n198.7@gmail.com"">b.e.s.t.o.ptio.n198.7@gmail.com</a>
<a href=""mailto:b.es.t.o.ption.19.87@gmail.com"">b.es.t.o.ption.19.87@gmail.com</a>
<a href=""mailto:be.s.t.o.pti.on19.87@gmail.com"">be.s.t.o.pti.on19.87@gmail.com</a>
<a href=""mailto:b.es.to.p.tion.1.9.87@gmail.com"">b.es.to.p.tion.1.9.87@gmail.com</a>
<a href=""mailto:be.sto.p.tion.1.987@gmail.com"">be.sto.p.tion.1.987@gmail.com</a>
<a href=""mailto:b.e.sto.p.t.ion1.9.8.7@gmail.com"">b.e.sto.p.t.ion1.9.8.7@gmail.com</a>
<a href=""mailto:be.s.t.op.tion1987@gmail.com"">be.s.t.op.tion1987@gmail.com</a>
<a href=""mailto:b.es.top.tio.n1.9.8.7@gmail.com"">b.es.top.tio.n1.9.8.7@gmail.com</a>
<a href=""mailto:bes.t.option1.987@gmail.com"">bes.t.option1.987@gmail.com</a>
<a href=""mailto:b.est.op.tio.n.1.98.7@gmail.com"">b.est.op.tio.n.1.98.7@gmail.com</a>
<a href=""mailto:be.st.op.ti.o.n1.98.7@gmail.com"">be.st.op.ti.o.n1.98.7@gmail.com</a>
<a href=""mailto:bes.t.opti.on1.9.87@gmail.com"">bes.t.opti.on1.9.87@gmail.com</a>
<a href=""mailto:be.s.t.optio.n.1.9.8.7@gmail.com"">be.s.t.optio.n.1.9.8.7@gmail.com</a>
<a href=""mailto:be.stopti.o.n1.987@gmail.com"">be.stopti.o.n1.987@gmail.com</a>
<a href=""mailto:b.es.t.o.p.tio.n.1.98.7@gmail.com"">b.es.t.o.p.tio.n.1.98.7@gmail.com</a>
<a href=""mailto:be.s.t.o.pt.i.o.n198.7@gmail.com"">be.s.t.o.pt.i.o.n198.7@gmail.com</a>
<a href=""mailto:be.stop.tion.1.987@gmail.com"">be.stop.tion.1.987@gmail.com</a>
<a href=""mailto:bes.top.t.io.n.1987@gmail.com"">bes.top.t.io.n.1987@gmail.com</a>
<a href=""mailto:besto.p.t.ion.19.8.7@gmail.com"">besto.p.t.ion.19.8.7@gmail.com</a>
<a href=""mailto:b.est.o.p.tio.n1987@gmail.com"">b.est.o.p.tio.n1987@gmail.com</a>
<a href=""mailto:be.st.opt.i.o.n1.987@gmail.com"">be.st.opt.i.o.n1.987@gmail.com</a>
<a href=""mailto:be.s.t.o.pt.io.n.198.7@gmail.com"">be.s.t.o.pt.io.n.198.7@gmail.com</a>
<a href=""mailto:be.st.o.p.tion198.7@gmail.com"">be.st.o.p.tion198.7@gmail.com</a>
<a href=""mailto:b.est.o.pt.ion.198.7@gmail.com"">b.est.o.pt.ion.198.7@gmail.com</a>
<a href=""mailto:bes.topt.i.o.n.1.98.7@gmail.com"">bes.topt.i.o.n.1.98.7@gmail.com</a>
<a href=""mailto:be.st.opt.io.n19.87@gmail.com"">be.st.opt.io.n19.87@gmail.com</a>
<a href=""mailto:b.e.stopt.io.n.1.987@gmail.com"">b.e.stopt.io.n.1.987@gmail.com</a>
<a href=""mailto:besto.p.t.i.on1.9.87@gmail.com"">besto.p.t.i.on1.9.87@gmail.com</a>
<a href=""mailto:best.op.t.i.on1.987@gmail.com"">best.op.t.i.on1.987@gmail.com</a>
<a href=""mailto:bes.top.t.io.n.1.9.87@gmail.com"">bes.top.t.io.n.1.9.87@gmail.com</a>
<a href=""mailto:b.e.st.o.p.ti.o.n1.9.8.7@gmail.com"">b.e.st.o.p.ti.o.n1.9.8.7@gmail.com</a>
<a href=""mailto:be.s.to.p.tio.n1987@gmail.com"">be.s.to.p.tio.n1987@gmail.com</a>
<a href=""mailto:b.e.s.to.p.tio.n.198.7@gmail.com"">b.e.s.to.p.tio.n.198.7@gmail.com</a>
<a href=""mailto:b.e.st.opti.on19.8.7@gmail.com"">b.e.st.opti.on19.8.7@gmail.com</a>
<a href=""mailto:b.estop.tio.n1987@gmail.com"">b.estop.tio.n1987@gmail.com</a>
<a href=""mailto:b.est.opt.i.on.1.987@gmail.com"">b.est.opt.i.on.1.987@gmail.com</a>
<a href=""mailto:be.s.to.pti.on198.7@gmail.com"">be.s.to.pti.on198.7@gmail.com</a>
<a href=""mailto:b.e.stopt.ion.1.9.8.7@gmail.com"">b.e.stopt.ion.1.9.8.7@gmail.com</a>
<a href=""mailto:be.s.t.o.p.t.ion1987@gmail.com"">be.s.t.o.p.t.ion1987@gmail.com</a>
<a href=""mailto:b.es.to.p.ti.o.n198.7@gmail.com"">b.es.to.p.ti.o.n198.7@gmail.com</a>
<a href=""mailto:best.o.pt.i.o.n.1.9.8.7@gmail.com"">best.o.pt.i.o.n.1.9.8.7@gmail.com</a>
<a href=""mailto:besto.ptio.n1.9.8.7@gmail.com"">besto.ptio.n1.9.8.7@gmail.com</a>
<a href=""mailto:b.es.t.op.t.ion.1.9.8.7@gmail.com"">b.es.t.op.t.ion.1.9.8.7@gmail.com</a>
<a href=""mailto:b.e.sto.pt.i.o.n19.8.7@gmail.com"">b.e.sto.pt.i.o.n19.8.7@gmail.com</a>
<a href=""mailto:best.o.p.ti.on19.87@gmail.com"">best.o.p.ti.on19.87@gmail.com</a>
<a href=""mailto:bes.top.t.i.o.n1.987@gmail.com"">bes.top.t.i.o.n1.987@gmail.com</a>
<a href=""mailto:be.s.t.o.p.t.ion19.87@gmail.com"">be.s.t.o.p.t.ion19.87@gmail.com</a>
<a href=""mailto:b.e.st.o.ptio.n19.87@gmail.com"">b.e.st.o.ptio.n19.87@gmail.com</a>
<a href=""mailto:bestopt.io.n.1.9.8.7@gmail.com"">bestopt.io.n.1.9.8.7@gmail.com</a>
<a href=""mailto:b.es.to.p.t.i.on.1.98.7@gmail.com"">b.es.to.p.t.i.on.1.98.7@gmail.com</a>
<a href=""mailto:besto.p.t.i.on.1.987@gmail.com"">besto.p.t.i.on.1.987@gmail.com</a>
<a href=""mailto:be.s.t.opt.io.n198.7@gmail.com"">be.s.t.opt.io.n198.7@gmail.com</a>
<a href=""mailto:b.est.o.ptio.n19.87@gmail.com"">b.est.o.ptio.n19.87@gmail.com</a>
<a href=""mailto:be.st.o.ptio.n19.87@gmail.com"">be.st.o.ptio.n19.87@gmail.com</a>
<a href=""mailto:bes.topti.o.n1.987@gmail.com"">bes.topti.o.n1.987@gmail.com</a>
<a href=""mailto:be.sto.pti.o.n.19.8.7@gmail.com"">be.sto.pti.o.n.19.8.7@gmail.com</a>
<a href=""mailto:b.est.opti.on.1.987@gmail.com"">b.est.opti.on.1.987@gmail.com</a>
<a href=""mailto:b.e.sto.pti.on.1.987@gmail.com"">b.e.sto.pti.on.1.987@gmail.com</a>
<a href=""mailto:be.st.op.t.ion.19.8.7@gmail.com"">be.st.op.t.ion.19.8.7@gmail.com</a>
<a href=""mailto:be.stop.tion19.8.7@gmail.com"">be.stop.tion19.8.7@gmail.com</a>
<a href=""mailto:b.e.st.o.pti.o.n.19.8.7@gmail.com"">b.e.st.o.pti.o.n.19.8.7@gmail.com</a>
<a href=""mailto:be.s.top.ti.on.1.98.7@gmail.com"">be.s.top.ti.on.1.98.7@gmail.com</a>
<a href=""mailto:b.e.sto.ptio.n1.9.87@gmail.com"">b.e.sto.ptio.n1.9.87@gmail.com</a>
<a href=""mailto:be.s.top.t.i.o.n.1.9.87@gmail.com"">be.s.top.t.i.o.n.1.9.87@gmail.com</a>
<a href=""mailto:be.st.o.p.t.i.o.n1.987@gmail.com"">be.st.o.p.t.i.o.n1.987@gmail.com</a>
<a href=""mailto:bes.t.opti.o.n1.98.7@gmail.com"">bes.t.opti.o.n1.98.7@gmail.com</a>
<a href=""mailto:b.e.st.op.t.i.o.n.1.98.7@gmail.com"">b.e.st.op.t.i.o.n.1.98.7@gmail.com</a>
<a href=""mailto:best.op.tion.198.7@gmail.com"">best.op.tion.198.7@gmail.com</a>
<a href=""mailto:bes.to.p.t.i.o.n1.98.7@gmail.com"">bes.to.p.t.i.o.n1.98.7@gmail.com</a>
<a href=""mailto:b.es.to.pti.o.n.1987@gmail.com"">b.es.to.pti.o.n.1987@gmail.com</a>
<a href=""mailto:be.s.t.op.tio.n.1.9.87@gmail.com"">be.s.t.op.tio.n.1.9.87@gmail.com</a>
<a href=""mailto:be.s.top.tion198.7@gmail.com"">be.s.top.tion198.7@gmail.com</a>
<a href=""mailto:toolsseller42@gmail.com"">toolsseller42@gmail.com</a>
<a href=""mailto:to.o.lss.ell.er.4.2@gmail.com"">to.o.lss.ell.er.4.2@gmail.com</a>
<a href=""mailto:tool.ss.el.le.r42@gmail.com"">tool.ss.el.le.r42@gmail.com</a>
<a href=""mailto:t.o.ol.s.s.e.l.ler4.2@gmail.com"">t.o.ol.s.s.e.l.ler4.2@gmail.com</a>
<a href=""mailto:t.o.o.lss.el.l.er4.2@gmail.com"">t.o.o.lss.el.l.er4.2@gmail.com</a>
<a href=""mailto:to.o.l.s.s.e.l.le.r.4.2@gmail.com"">to.o.l.s.s.e.l.le.r.4.2@gmail.com</a>
<a href=""mailto:toolss.e.lle.r42@gmail.com"">toolss.e.lle.r42@gmail.com</a>
<a href=""mailto:t.oo.lsse.l.l.er.4.2@gmail.com"">t.oo.lsse.l.l.er.4.2@gmail.com</a>
<a href=""mailto:t.oo.l.s.s.el.l.e.r.42@gmail.com"">t.oo.l.s.s.el.l.e.r.42@gmail.com</a>
<a href=""mailto:t.ool.s.seller4.2@gmail.com"">t.ool.s.seller4.2@gmail.com</a>
<a href=""mailto:tool.sse.ll.er.42@gmail.com"">tool.sse.ll.er.42@gmail.com</a>
<a href=""mailto:t.oo.l.ss.e.ller42@gmail.com"">t.oo.l.ss.e.ller42@gmail.com</a>
<a href=""mailto:to.ol.sse.lle.r4.2@gmail.com"">to.ol.sse.lle.r4.2@gmail.com</a>
<a href=""mailto:too.l.s.s.e.lle.r42@gmail.com"">too.l.s.s.e.lle.r42@gmail.com</a>
<a href=""mailto:t.o.o.l.sse.ller.4.2@gmail.com"">t.o.o.l.sse.ller.4.2@gmail.com</a>
<a href=""mailto:t.o.ol.ss.ell.er42@gmail.com"">t.o.ol.ss.ell.er42@gmail.com</a>
<a href=""mailto:t.o.ol.ss.e.l.ler.4.2@gmail.com"">t.o.ol.ss.e.l.ler.4.2@gmail.com</a>
<a href=""mailto:toolssell.e.r42@gmail.com"">toolssell.e.r42@gmail.com</a>
<a href=""mailto:t.oo.ls.se.ller.4.2@gmail.com"">t.oo.ls.se.ller.4.2@gmail.com</a>
<a href=""mailto:too.lsse.lle.r4.2@gmail.com"">too.lsse.lle.r4.2@gmail.com</a>
<a href=""mailto:to.olss.e.l.l.e.r.4.2@gmail.com"">to.olss.e.l.l.e.r.4.2@gmail.com</a>
<a href=""mailto:t.oo.lss.e.l.l.er.42@gmail.com"">t.oo.lss.e.l.l.er.42@gmail.com</a>
<a href=""mailto:tool.ssel.le.r4.2@gmail.com"">tool.ssel.le.r4.2@gmail.com</a>
<a href=""mailto:too.l.ss.e.ll.er.42@gmail.com"">too.l.ss.e.ll.er.42@gmail.com</a>
<a href=""mailto:t.o.ols.s.e.l.l.er.42@gmail.com"">t.o.ols.s.e.l.l.er.42@gmail.com</a>
<a href=""mailto:tools.selle.r.4.2@gmail.com"">tools.selle.r.4.2@gmail.com</a>
<a href=""mailto:t.ools.sell.er.4.2@gmail.com"">t.ools.sell.er.4.2@gmail.com</a>
<a href=""mailto:tool.sse.ll.er.4.2@gmail.com"">tool.sse.ll.er.4.2@gmail.com</a>
<a href=""mailto:too.l.ss.e.lle.r.4.2@gmail.com"">too.l.ss.e.lle.r.4.2@gmail.com</a>
<a href=""mailto:t.o.o.ls.s.el.l.e.r42@gmail.com"">t.o.o.ls.s.el.l.e.r42@gmail.com</a>
<a href=""mailto:t.o.ol.sse.l.ler.4.2@gmail.com"">t.o.ol.sse.l.ler.4.2@gmail.com</a>
<a href=""mailto:tool.ssel.le.r.4.2@gmail.com"">tool.ssel.le.r.4.2@gmail.com</a>
<a href=""mailto:to.o.lss.elle.r42@gmail.com"">to.o.lss.elle.r42@gmail.com</a>
<a href=""mailto:too.l.s.s.el.le.r4.2@gmail.com"">too.l.s.s.el.le.r4.2@gmail.com</a>
<a href=""mailto:to.ol.ss.e.l.l.er.4.2@gmail.com"">to.ol.ss.e.l.l.er.4.2@gmail.com</a>
<a href=""mailto:t.ool.sse.l.le.r.4.2@gmail.com"">t.ool.sse.l.le.r.4.2@gmail.com</a>
<a href=""mailto:t.o.o.l.sse.l.ler42@gmail.com"">t.o.o.l.sse.l.ler42@gmail.com</a>
<a href=""mailto:t.o.o.l.s.se.l.ler.42@gmail.com"">t.o.o.l.s.se.l.ler.42@gmail.com</a>
<a href=""mailto:t.oo.lsse.l.l.er42@gmail.com"">t.oo.lsse.l.l.er42@gmail.com</a>
<a href=""mailto:t.o.o.lsse.l.le.r42@gmail.com"">t.o.o.lsse.l.le.r42@gmail.com</a>
<a href=""mailto:to.o.ls.sel.le.r.4.2@gmail.com"">to.o.ls.sel.le.r.4.2@gmail.com</a>
<a href=""mailto:to.olssell.er42@gmail.com"">to.olssell.er42@gmail.com</a>
<a href=""mailto:t.oo.l.ss.e.l.ler42@gmail.com"">t.oo.l.ss.e.l.ler42@gmail.com</a>
<a href=""mailto:toolssell.er42@gmail.com"">toolssell.er42@gmail.com</a>
<a href=""mailto:to.olss.e.l.ler.42@gmail.com"">to.olss.e.l.ler.42@gmail.com</a>
<a href=""mailto:too.l.s.s.e.l.ler.4.2@gmail.com"">too.l.s.s.e.l.ler.4.2@gmail.com</a>
<a href=""mailto:t.ool.s.s.elle.r.4.2@gmail.com"">t.ool.s.s.elle.r.4.2@gmail.com</a>
<a href=""mailto:to.ol.sse.l.le.r.42@gmail.com"">to.ol.sse.l.le.r.42@gmail.com</a>
<a href=""mailto:t.oo.l.sse.lle.r.4.2@gmail.com"">t.oo.l.sse.lle.r.4.2@gmail.com</a>
<a href=""mailto:t.o.o.lsse.ll.er42@gmail.com"">t.o.o.lsse.ll.er42@gmail.com</a>
<a href=""mailto:to.o.l.sse.l.ler4.2@gmail.com"">to.o.l.sse.l.ler4.2@gmail.com</a>
<a href=""mailto:tool.s.s.e.l.l.e.r.4.2@gmail.com"">tool.s.s.e.l.l.e.r.4.2@gmail.com</a>
<a href=""mailto:too.l.sse.l.l.e.r.4.2@gmail.com"">too.l.sse.l.l.e.r.4.2@gmail.com</a>
<a href=""mailto:t.o.ols.s.eller.4.2@gmail.com"">t.o.ols.s.eller.4.2@gmail.com</a>
<a href=""mailto:too.ls.s.ell.e.r42@gmail.com"">too.ls.s.ell.e.r42@gmail.com</a>
<a href=""mailto:t.oo.l.ss.el.l.e.r4.2@gmail.com"">t.oo.l.ss.el.l.e.r4.2@gmail.com</a>
<a href=""mailto:too.l.s.sell.er.4.2@gmail.com"">too.l.s.sell.er.4.2@gmail.com</a>
<a href=""mailto:t.o.ol.sse.l.le.r42@gmail.com"">t.o.ol.sse.l.le.r42@gmail.com</a>
<a href=""mailto:t.o.ol.s.s.e.l.l.e.r42@gmail.com"">t.o.ol.s.s.e.l.l.e.r42@gmail.com</a>
<a href=""mailto:too.l.s.se.ller42@gmail.com"">too.l.s.se.ller42@gmail.com</a>
<a href=""mailto:t.ool.s.se.ller.4.2@gmail.com"">t.ool.s.se.ller.4.2@gmail.com</a>
<a href=""mailto:to.ols.s.e.lle.r.4.2@gmail.com"">to.ols.s.e.lle.r.4.2@gmail.com</a>
<a href=""mailto:toolsseller42@gmail.com"">toolsseller42@gmail.com</a>
<a href=""mailto:t.o.o.ls.s.e.l.l.er4.2@gmail.com"">t.o.o.ls.s.e.l.l.er4.2@gmail.com</a>
<a href=""mailto:t.oolss.e.l.ler42@gmail.com"">t.oolss.e.l.ler42@gmail.com</a>
<a href=""mailto:t.o.olsse.lle.r.4.2@gmail.com"">t.o.olsse.lle.r.4.2@gmail.com</a>
<a href=""mailto:t.o.ol.s.se.ll.er.4.2@gmail.com"">t.o.ol.s.se.ll.er.4.2@gmail.com</a>
<a href=""mailto:t.oo.l.sse.l.l.er.42@gmail.com"">t.oo.l.sse.l.l.er.42@gmail.com</a>
<a href=""mailto:too.l.ssel.l.e.r42@gmail.com"">too.l.ssel.l.e.r42@gmail.com</a>
<a href=""mailto:too.l.sse.ll.er42@gmail.com"">too.l.sse.ll.er42@gmail.com</a>
<a href=""mailto:t.oo.l.s.seller42@gmail.com"">t.oo.l.s.seller42@gmail.com</a>
<a href=""mailto:to.o.lss.elle.r4.2@gmail.com"">to.o.lss.elle.r4.2@gmail.com</a>
<a href=""mailto:to.ols.se.l.l.e.r42@gmail.com"">to.ols.se.l.l.e.r42@gmail.com</a>
<a href=""mailto:t.ool.ssel.ler.42@gmail.com"">t.ool.ssel.ler.42@gmail.com</a>
<a href=""mailto:t.oo.ls.s.ell.er42@gmail.com"">t.oo.ls.s.ell.er42@gmail.com</a>
<a href=""mailto:toolss.eller42@gmail.com"">toolss.eller42@gmail.com</a>
<a href=""mailto:too.l.sse.l.le.r.42@gmail.com"">too.l.sse.l.le.r.42@gmail.com</a>
<a href=""mailto:too.l.s.se.l.le.r4.2@gmail.com"">too.l.s.se.l.le.r4.2@gmail.com</a>
<a href=""mailto:tool.s.sell.er4.2@gmail.com"">tool.s.sell.er4.2@gmail.com</a>
<a href=""mailto:toolss.elle.r.42@gmail.com"">toolss.elle.r.42@gmail.com</a>
<a href=""mailto:t.o.o.ls.s.elle.r4.2@gmail.com"">t.o.o.ls.s.elle.r4.2@gmail.com</a>
<a href=""mailto:to.o.lsse.l.l.e.r.42@gmail.com"">to.o.lsse.l.l.e.r.42@gmail.com</a>
<a href=""mailto:to.ol.s.s.eller.4.2@gmail.com"">to.ol.s.s.eller.4.2@gmail.com</a>
<a href=""mailto:to.o.lss.e.l.l.e.r4.2@gmail.com"">to.o.lss.e.l.l.e.r4.2@gmail.com</a>
<a href=""mailto:to.ols.s.ell.e.r42@gmail.com"">to.ols.s.ell.e.r42@gmail.com</a>
<a href=""mailto:to.o.l.ss.e.l.le.r4.2@gmail.com"">to.o.l.ss.e.l.le.r4.2@gmail.com</a>
<a href=""mailto:t.oo.ls.s.ell.er4.2@gmail.com"">t.oo.ls.s.ell.er4.2@gmail.com</a>
<a href=""mailto:toolss.e.l.ler4.2@gmail.com"">toolss.e.l.ler4.2@gmail.com</a>
<a href=""mailto:to.o.l.s.s.e.l.l.e.r.42@gmail.com"">to.o.l.s.s.e.l.l.e.r.42@gmail.com</a>
<a href=""mailto:tool.ssel.le.r.42@gmail.com"">tool.ssel.le.r.42@gmail.com</a>
<a href=""mailto:to.ol.s.s.el.l.er42@gmail.com"">to.ol.s.s.el.l.er42@gmail.com</a>
<a href=""mailto:t.oo.lss.ell.e.r.4.2@gmail.com"">t.oo.lss.ell.e.r.4.2@gmail.com</a>
<a href=""mailto:to.ol.ssell.er4.2@gmail.com"">to.ol.ssell.er4.2@gmail.com</a>
<a href=""mailto:t.o.o.l.ss.e.l.le.r.4.2@gmail.com"">t.o.o.l.ss.e.l.le.r.4.2@gmail.com</a>
<a href=""mailto:tool.s.s.el.ler.42@gmail.com"">tool.s.s.el.ler.42@gmail.com</a>
<a href=""mailto:tools.s.e.l.l.e.r.4.2@gmail.com"">tools.s.e.l.l.e.r.4.2@gmail.com</a>
<a href=""mailto:t.o.ol.s.s.el.l.e.r.4.2@gmail.com"">t.o.ol.s.s.el.l.e.r.4.2@gmail.com</a>
<a href=""mailto:too.l.s.se.l.ler.42@gmail.com"">too.l.s.se.l.ler.42@gmail.com</a>
<a href=""mailto:too.l.s.se.lle.r42@gmail.com"">too.l.s.se.lle.r42@gmail.com</a>
<a href=""mailto:too.ls.s.e.l.l.e.r.4.2@gmail.com"">too.ls.s.e.l.l.e.r.4.2@gmail.com</a>
<a href=""mailto:t.ool.s.s.el.ler.4.2@gmail.com"">t.ool.s.s.el.ler.4.2@gmail.com</a>
<a href=""mailto:tool.sse.l.ler.42@gmail.com"">tool.sse.l.ler.42@gmail.com</a>
<a href=""mailto:t.o.o.ls.se.l.ler42@gmail.com"">t.o.o.ls.se.l.ler42@gmail.com</a>
<a href=""mailto:to.o.l.ss.e.l.l.er42@gmail.com"">to.o.l.ss.e.l.l.er42@gmail.com</a>
<a href=""mailto:too.lssell.e.r4.2@gmail.com"">too.lssell.e.r4.2@gmail.com</a>
<a href=""mailto:t.oo.l.s.s.el.le.r4.2@gmail.com"">t.oo.l.s.s.el.le.r4.2@gmail.com</a>
<a href=""mailto:to.o.l.ss.ell.e.r.42@gmail.com"">to.o.l.ss.ell.e.r.42@gmail.com</a>
<a href=""mailto:t.ool.s.s.ell.e.r.42@gmail.com"">t.ool.s.s.ell.e.r.42@gmail.com</a>
<a href=""mailto:t.o.ols.se.ll.er.42@gmail.com"">t.o.ols.se.ll.er.42@gmail.com</a>
<a href=""mailto:t.o.o.ls.se.l.ler.4.2@gmail.com"">t.o.o.ls.se.l.ler.4.2@gmail.com</a>
<a href=""mailto:to.ol.ssel.l.e.r.42@gmail.com"">to.ol.ssel.l.e.r.42@gmail.com</a>
<a href=""mailto:t.o.olssel.l.er42@gmail.com"">t.o.olssel.l.er42@gmail.com</a>
<a href=""mailto:to.olssell.er.4.2@gmail.com"">to.olssell.er.4.2@gmail.com</a>
<a href=""mailto:t.o.olss.e.ll.er4.2@gmail.com"">t.o.olss.e.ll.er4.2@gmail.com</a>
<a href=""mailto:to.ol.s.s.e.ll.e.r.42@gmail.com"">to.ol.s.s.e.ll.e.r.42@gmail.com</a>
<a href=""mailto:to.o.ls.se.lle.r.42@gmail.com"">to.o.ls.se.lle.r.42@gmail.com</a>
<a href=""mailto:t.oolsse.lle.r.42@gmail.com"">t.oolsse.lle.r.42@gmail.com</a>
<a href=""mailto:t.o.ols.se.l.l.e.r.4.2@gmail.com"">t.o.ols.se.l.l.e.r.4.2@gmail.com</a>
<a href=""mailto:t.oo.lssel.l.e.r.4.2@gmail.com"">t.oo.lssel.l.e.r.4.2@gmail.com</a>
<a href=""mailto:toolsse.ller.42@gmail.com"">toolsse.ller.42@gmail.com</a>
<a href=""mailto:to.ols.s.e.ll.er42@gmail.com"">to.ols.s.e.ll.er42@gmail.com</a>
<a href=""mailto:tools.s.eller.42@gmail.com"">tools.s.eller.42@gmail.com</a>
<a href=""mailto:to.olsse.ll.er.42@gmail.com"">to.olsse.ll.er.42@gmail.com</a>
<a href=""mailto:t.o.olss.e.ll.er.4.2@gmail.com"">t.o.olss.e.ll.er.4.2@gmail.com</a>
<a href=""mailto:t.o.o.l.s.sel.l.er.4.2@gmail.com"">t.o.o.l.s.sel.l.er.4.2@gmail.com</a>
<a href=""mailto:t.oo.lssel.l.er.42@gmail.com"">t.oo.lssel.l.er.42@gmail.com</a>
<a href=""mailto:too.l.ss.e.l.l.er4.2@gmail.com"">too.l.ss.e.l.l.er4.2@gmail.com</a>
<a href=""mailto:to.ol.sse.ll.e.r.42@gmail.com"">to.ol.sse.ll.e.r.42@gmail.com</a>
<a href=""mailto:to.ol.ss.e.l.l.e.r42@gmail.com"">to.ol.ss.e.l.l.e.r42@gmail.com</a>
<a href=""mailto:t.ool.ssel.ler42@gmail.com"">t.ool.ssel.ler42@gmail.com</a>
<a href=""mailto:t.o.ol.s.se.ll.e.r.4.2@gmail.com"">t.o.ol.s.se.ll.e.r.4.2@gmail.com</a>
<a href=""mailto:to.o.ls.s.elle.r4.2@gmail.com"">to.o.ls.s.elle.r4.2@gmail.com</a>
<a href=""mailto:t.oo.l.ss.eller.42@gmail.com"">t.oo.l.ss.eller.42@gmail.com</a>
<a href=""mailto:to.ols.s.eller42@gmail.com"">to.ols.s.eller42@gmail.com</a>
<a href=""mailto:to.o.ls.selle.r.42@gmail.com"">to.o.ls.selle.r.42@gmail.com</a>
<a href=""mailto:t.oo.l.s.s.el.l.e.r42@gmail.com"">t.oo.l.s.s.el.l.e.r42@gmail.com</a>
<a href=""mailto:to.o.l.sse.lle.r42@gmail.com"">to.o.l.sse.lle.r42@gmail.com</a>
<a href=""mailto:tools.s.e.ll.er.4.2@gmail.com"">tools.s.e.ll.er.4.2@gmail.com</a>
<a href=""mailto:t.o.o.lsselle.r42@gmail.com"">t.o.o.lsselle.r42@gmail.com</a>
<a href=""mailto:t.ools.s.el.le.r42@gmail.com"">t.ools.s.el.le.r42@gmail.com</a>
<a href=""mailto:tool.s.s.elle.r.4.2@gmail.com"">tool.s.s.elle.r.4.2@gmail.com</a>
<a href=""mailto:too.ls.s.elle.r.4.2@gmail.com"">too.ls.s.elle.r.4.2@gmail.com</a>
<a href=""mailto:t.o.o.lss.ell.er.42@gmail.com"">t.o.o.lss.ell.er.42@gmail.com</a>
<a href=""mailto:to.olss.el.le.r.4.2@gmail.com"">to.olss.el.le.r.4.2@gmail.com</a>
<a href=""mailto:t.o.o.l.ss.el.le.r42@gmail.com"">t.o.o.l.ss.el.le.r42@gmail.com</a>
<a href=""mailto:t.o.o.l.s.s.elle.r4.2@gmail.com"">t.o.o.l.s.s.elle.r4.2@gmail.com</a>
<a href=""mailto:to.o.ls.se.lle.r42@gmail.com"">to.o.ls.se.lle.r42@gmail.com</a>
<a href=""mailto:t.oolssel.l.e.r.42@gmail.com"">t.oolssel.l.e.r.42@gmail.com</a>
<a href=""mailto:toolsse.ll.er.4.2@gmail.com"">toolsse.ll.er.4.2@gmail.com</a>
<a href=""mailto:t.ool.sse.l.l.e.r4.2@gmail.com"">t.ool.sse.l.l.e.r4.2@gmail.com</a>
<a href=""mailto:t.ool.s.se.lle.r42@gmail.com"">t.ool.s.se.lle.r42@gmail.com</a>
<a href=""mailto:to.o.l.ssel.l.er42@gmail.com"">to.o.l.ssel.l.er42@gmail.com</a>
<a href=""mailto:t.oo.l.s.sel.ler.4.2@gmail.com"">t.oo.l.s.sel.ler.4.2@gmail.com</a>
<a href=""mailto:to.ols.s.eller4.2@gmail.com"">to.ols.s.eller4.2@gmail.com</a>
<a href=""mailto:to.o.l.s.sell.er.42@gmail.com"">to.o.l.s.sell.er.42@gmail.com</a>
<a href=""mailto:t.oolss.el.le.r.4.2@gmail.com"">t.oolss.el.le.r.4.2@gmail.com</a>
<a href=""mailto:too.lssell.er4.2@gmail.com"">too.lssell.er4.2@gmail.com</a>
<a href=""mailto:t.oolsse.ller42@gmail.com"">t.oolsse.ller42@gmail.com</a>
<a href=""mailto:t.oo.l.s.s.el.ler.4.2@gmail.com"">t.oo.l.s.s.el.ler.4.2@gmail.com</a>
<a href=""mailto:too.ls.se.ll.er.4.2@gmail.com"">too.ls.se.ll.er.4.2@gmail.com</a>
<a href=""mailto:to.o.l.ss.e.ll.e.r4.2@gmail.com"">to.o.l.ss.e.ll.e.r4.2@gmail.com</a>
<a href=""mailto:tools.s.eller4.2@gmail.com"">tools.s.eller4.2@gmail.com</a>
<a href=""mailto:too.l.sseller42@gmail.com"">too.l.sseller42@gmail.com</a>
<a href=""mailto:to.ol.s.s.e.l.le.r4.2@gmail.com"">to.ol.s.s.e.l.le.r4.2@gmail.com</a>
<a href=""mailto:t.o.o.lssel.l.er42@gmail.com"">t.o.o.lssel.l.er42@gmail.com</a>
<a href=""mailto:too.l.s.selle.r.4.2@gmail.com"">too.l.s.selle.r.4.2@gmail.com</a>
<a href=""mailto:t.o.o.lss.ell.e.r.4.2@gmail.com"">t.o.o.lss.ell.e.r.4.2@gmail.com</a>
<a href=""mailto:to.o.l.ssel.ler42@gmail.com"">to.o.l.ssel.ler42@gmail.com</a>
<a href=""mailto:t.o.o.lss.el.ler4.2@gmail.com"">t.o.o.lss.el.ler4.2@gmail.com</a>
<a href=""mailto:to.olssel.ler.42@gmail.com"">to.olssel.ler.42@gmail.com</a>
<a href=""mailto:to.o.l.ss.e.lle.r42@gmail.com"">to.o.l.ss.e.lle.r42@gmail.com</a>
<a href=""mailto:t.o.ol.ss.e.ll.er42@gmail.com"">t.o.ol.ss.e.ll.er42@gmail.com</a>
<a href=""mailto:t.oo.ls.se.l.l.e.r42@gmail.com"">t.oo.ls.se.l.l.e.r42@gmail.com</a>
<a href=""mailto:t.o.o.lssell.er.4.2@gmail.com"">t.o.o.lssell.er.4.2@gmail.com</a>
<a href=""mailto:t.o.o.ls.se.ller.4.2@gmail.com"">t.o.o.ls.se.ller.4.2@gmail.com</a>
<a href=""mailto:t.o.o.l.sse.ller.42@gmail.com"">t.o.o.l.sse.ller.42@gmail.com</a>
<a href=""mailto:t.oo.l.s.se.ller42@gmail.com"">t.oo.l.s.se.ller42@gmail.com</a>
<a href=""mailto:to.ol.ss.el.l.er4.2@gmail.com"">to.ol.ss.el.l.er4.2@gmail.com</a>
<a href=""mailto:t.o.o.ls.se.ll.er4.2@gmail.com"">t.o.o.ls.se.ll.er4.2@gmail.com</a>
<a href=""mailto:t.o.o.l.ss.eller.4.2@gmail.com"">t.o.o.l.ss.eller.4.2@gmail.com</a>
<a href=""mailto:t.o.o.ls.sel.ler.42@gmail.com"">t.o.o.ls.sel.ler.42@gmail.com</a>
<a href=""mailto:tool.ss.e.lle.r42@gmail.com"">tool.ss.e.lle.r42@gmail.com</a>
<a href=""mailto:too.l.ss.e.lle.r4.2@gmail.com"">too.l.ss.e.lle.r4.2@gmail.com</a>
<a href=""mailto:too.ls.se.l.ler.42@gmail.com"">too.ls.se.l.ler.42@gmail.com</a>
<a href=""mailto:tool.s.sel.l.e.r4.2@gmail.com"">tool.s.sel.l.e.r4.2@gmail.com</a>
<a href=""mailto:to.ols.sell.e.r.42@gmail.com"">to.ols.sell.e.r.42@gmail.com</a>
<a href=""mailto:t.o.ol.s.s.e.lle.r.4.2@gmail.com"">t.o.ol.s.s.e.lle.r.4.2@gmail.com</a>
<a href=""mailto:toolss.ell.er42@gmail.com"">toolss.ell.er42@gmail.com</a>
<a href=""mailto:too.ls.seller42@gmail.com"">too.ls.seller42@gmail.com</a>
<a href=""mailto:too.ls.sel.l.e.r4.2@gmail.com"">too.ls.sel.l.e.r4.2@gmail.com</a>
<a href=""mailto:t.o.ol.ss.eller4.2@gmail.com"">t.o.ol.ss.eller4.2@gmail.com</a>
<a href=""mailto:t.o.o.ls.sell.e.r4.2@gmail.com"">t.o.o.ls.sell.e.r4.2@gmail.com</a>
<a href=""mailto:to.ol.s.se.l.le.r.42@gmail.com"">to.ol.s.se.l.le.r.42@gmail.com</a>
<a href=""mailto:t.ool.sseller42@gmail.com"">t.ool.sseller42@gmail.com</a>
<a href=""mailto:too.lss.el.le.r.42@gmail.com"">too.lss.el.le.r.42@gmail.com</a>
<a href=""mailto:t.ool.sse.l.l.e.r42@gmail.com"">t.ool.sse.l.l.e.r42@gmail.com</a>
<a href=""mailto:t.o.o.lssel.le.r.4.2@gmail.com"">t.o.o.lssel.le.r.4.2@gmail.com</a>
<a href=""mailto:to.o.l.sse.lle.r.42@gmail.com"">to.o.l.sse.lle.r.42@gmail.com</a>
<a href=""mailto:t.o.o.l.sse.ll.er.42@gmail.com"">t.o.o.l.sse.ll.er.42@gmail.com</a>
<a href=""mailto:to.o.ls.s.el.l.er.4.2@gmail.com"">to.o.ls.s.el.l.er.4.2@gmail.com</a>
<a href=""mailto:t.ools.s.eller.4.2@gmail.com"">t.ools.s.eller.4.2@gmail.com</a>"
mqr3abD3,Untitled,35657,C++,Sunday 1st of October 2023 07:46:38 PM CDT,"#include <iostream>
#include <iomanip> // нужна для выравнивания вывода в консоль чисел с помощью setw

using namespace std;

void Print(int** arr, int lines, int cols) {
    for (int i = 0; i < lines; i++) {
        for (int j = 0; j < cols; j++) {
            cout << setw(4) << arr[i][j];
        }
        cout << endl;
    }
    cout << endl;
}

void Fill(int** arr, int lines, int cols) {
    for (int i = 0; i < lines; i++) {
        for (int j = 0; j < cols; j++) {
            arr[i][j] = j + i * cols;
        }
    }
}

int main() {

    setlocale(LC_ALL, ""Russian"");

    int lines = 5;
    int cols = 5;

    int** arr = new int* [lines];

    for (int i = 0; i < lines; i++) {
        arr[i] = new int[cols];
    }

    Fill(arr, lines, cols);

    Print(arr, lines, cols);

    int index;

    cout << ""Введите индекс: "";

    cin >> index;

    for (int i = 0; i < lines; ++i) {
        int* temp = new int[cols + 1];
        for (int j = 0; j < index; j++) {
            temp[j] = arr[i][j];
        }
        temp[index] = 0;
        for (int j = index; j < cols; j++) {
            temp[j + 1] = arr[i][j];
        }
        delete[] arr[i];
        arr[i] = temp;
    }
    cols++;

    Print(arr, lines, cols);


    for (int i = 0; i < lines; i++) {
        delete[] arr[i];
    }
    delete[] arr;
}"
zjPbCf53,Untitled,DugganSC,C#,Sunday 1st of October 2023 07:32:30 PM CDT,"using System;
using UnityEngine.Events;
using UnityEngine.XR.Interaction.Toolkit;

namespace UnityEngine.XR.Content.Interaction
{
    /// <summary>
    /// An interactable knob that follows the rotation of the interactor
    /// </summary>
    public class XRKnob : XRBaseInteractable
    {
        const float k_ModeSwitchDeadZone = 0.1f; // Prevents rapid switching between the different rotation tracking modes

        /// <summary>
        /// Helper class used to track rotations that can go beyond 180 degrees while minimizing accumulation error
        /// </summary>
        struct TrackedRotation
        {
            /// <summary>
            /// The anchor rotation we calculate an offset from
            /// </summary>
            float m_BaseAngle;

            /// <summary>
            /// The target rotate we calculate the offset to
            /// </summary>
            float m_CurrentOffset;

            /// <summary>
            /// Any previous offsets we've added in
            /// </summary>
            float m_AccumulatedAngle;

            /// <summary>
            /// The total rotation that occurred from when this rotation started being tracked
            /// </summary>
            public float totalOffset => m_AccumulatedAngle + m_CurrentOffset;

            /// <summary>
            /// Resets the tracked rotation so that total offset returns 0
            /// </summary>
            public void Reset()
            {
                m_BaseAngle = 0.0f;
                m_CurrentOffset = 0.0f;
                m_AccumulatedAngle = 0.0f;
            }

            /// <summary>
            /// Sets a new anchor rotation while maintaining any previously accumulated offset
            /// </summary>
            /// <param name=""direction"">The XZ vector used to calculate a rotation angle</param>
            public void SetBaseFromVector(Vector3 direction)
            {
                // Update any accumulated angle
                m_AccumulatedAngle += m_CurrentOffset;

                // Now set a new base angle
                m_BaseAngle = Mathf.Atan2(direction.z, direction.x) * Mathf.Rad2Deg;
                m_CurrentOffset = 0.0f;
            }

            public void SetTargetFromVector(Vector3 direction)
            {
                // Set the target angle
                var targetAngle = Mathf.Atan2(direction.z, direction.x) * Mathf.Rad2Deg;

                // Return the offset
                m_CurrentOffset = ShortestAngleDistance(m_BaseAngle, targetAngle, 360.0f);

                // If the offset is greater than 90 degrees, we update the base so we can rotate beyond 180 degrees
                if (Mathf.Abs(m_CurrentOffset) > 90.0f)
                {
                    m_BaseAngle = targetAngle;
                    m_AccumulatedAngle += m_CurrentOffset;
                    m_CurrentOffset = 0.0f;
                }
            }
        }

        // Test
        // Tes 2
        /* More Test
         * 
         * 
         * 
         * 
         */

        [Serializable]
        public class ValueChangeEvent : UnityEvent<float> { }

        [SerializeField]
        [Tooltip(""The object that is visually grabbed and manipulated"")]
        Transform m_Handle = null;

        [SerializeField]
        [Tooltip(""The value of the knob"")]
        [Range(0.0f, 1.0f)]
        float m_Value = 0.5f;

        [SerializeField]
        [Tooltip(""Whether this knob's rotation should be clamped by the angle limits"")]
        bool m_ClampedMotion = true;

        [SerializeField]
        [Tooltip(""Rotation of the knob at value '1'"")]
        float m_MaxAngle = 90.0f;

        [SerializeField]
        [Tooltip(""Rotation of the knob at value '0'"")]
        float m_MinAngle = -90.0f;

        [SerializeField]
        [Tooltip(""Angle increments to support, if greater than '0'"")]
        float m_AngleIncrement = 0.0f;

        [SerializeField]
        [Tooltip(""The position of the interactor controls rotation when outside this radius"")]
        float m_PositionTrackedRadius = 0.1f;

        [SerializeField]
        [Tooltip(""How much controller rotation "")]
        float m_TwistSensitivity = 1.5f;

        [SerializeField]
        [Tooltip(""Events to trigger when the knob is rotated"")]
        ValueChangeEvent m_OnValueChange = new ValueChangeEvent();

        IXRSelectInteractor m_Interactor;

        bool m_PositionDriven = false;
        bool m_UpVectorDriven = false;

        TrackedRotation m_PositionAngles = new TrackedRotation();
        TrackedRotation m_UpVectorAngles = new TrackedRotation();
        TrackedRotation m_ForwardVectorAngles = new TrackedRotation();

        float m_BaseKnobRotation = 0.0f;

        /// <summary>
        /// The object that is visually grabbed and manipulated
        /// </summary>
        public Transform handle
        {
            get => m_Handle;
            set => m_Handle = value;
        }

        /// <summary>
        /// The value of the knob
        /// </summary>
        public float value
        {
            get => m_Value;
            set
            {
                SetValue(value);
                SetKnobRotation(ValueToRotation());
            }
        }

        /// <summary>
        /// Whether this knob's rotation should be clamped by the angle limits
        /// </summary>
        public bool clampedMotion
        {
            get => m_ClampedMotion;
            set => m_ClampedMotion = value;
        }

        /// <summary>
        /// Rotation of the knob at value '1'
        /// </summary>
        public float maxAngle
        {
            get => m_MaxAngle;
            set => m_MaxAngle = value;
        }

        /// <summary>
        /// Rotation of the knob at value '0'
        /// </summary>
        public float minAngle
        {
            get => m_MinAngle;
            set => m_MinAngle = value;
        }

        /// <summary>
        /// The position of the interactor controls rotation when outside this radius
        /// </summary>
        public float positionTrackedRadius
        {
            get => m_PositionTrackedRadius;
            set => m_PositionTrackedRadius = value;
        }

        /// <summary>
        /// Events to trigger when the knob is rotated
        /// </summary>
        public ValueChangeEvent onValueChange => m_OnValueChange;

        void Start()
        {
            SetValue(m_Value);
            SetKnobRotation(ValueToRotation());
        }

        protected override void OnEnable()
        {
            base.OnEnable();
            selectEntered.AddListener(StartGrab);
            selectExited.AddListener(EndGrab);
        }

        protected override void OnDisable()
        {
            selectEntered.RemoveListener(StartGrab);
            selectExited.RemoveListener(EndGrab);
            base.OnDisable();
        }

        void StartGrab(SelectEnterEventArgs args)
        {
            m_Interactor = args.interactorObject;

            m_PositionAngles.Reset();
            m_UpVectorAngles.Reset();
            m_ForwardVectorAngles.Reset();

            UpdateBaseKnobRotation();
            UpdateRotation(true);
        }

        void EndGrab(SelectExitEventArgs args)
        {
            m_Interactor = null;
        }

        public override void ProcessInteractable(XRInteractionUpdateOrder.UpdatePhase updatePhase)
        {
            base.ProcessInteractable(updatePhase);

            if (updatePhase == XRInteractionUpdateOrder.UpdatePhase.Dynamic)
            {
                if (isSelected)
                {
                    UpdateRotation();
                }
            }
        }

        void UpdateRotation(bool freshCheck = false)
        {
            // Are we in position offset or direction rotation mode?
            var interactorTransform = m_Interactor.GetAttachTransform(this);

            // We cache the three potential sources of rotation - the position offset, the forward vector of the controller, and up vector of the controller
            // We store any data used for determining which rotation to use, then flatten the vectors to the local xz plane
            var localOffset = transform.InverseTransformVector(interactorTransform.position - m_Handle.position);
            localOffset.y = 0.0f;
            var radiusOffset = transform.TransformVector(localOffset).magnitude;
            localOffset.Normalize();

            var localForward = transform.InverseTransformDirection(interactorTransform.forward);
            var localY = Math.Abs(localForward.y);
            localForward.y = 0.0f;
            localForward.Normalize();

            var localUp = transform.InverseTransformDirection(interactorTransform.up);
            localUp.y = 0.0f;
            localUp.Normalize();


            if (m_PositionDriven && !freshCheck)
                radiusOffset *= (1.0f + k_ModeSwitchDeadZone);

            // Determine when a certain source of rotation won't contribute - in that case we bake in the offset it has applied
            // and set a new anchor when they can contribute again
            if (radiusOffset >= m_PositionTrackedRadius)
            {
                if (!m_PositionDriven || freshCheck)
                {
                    m_PositionAngles.SetBaseFromVector(localOffset);
                    m_PositionDriven = true;
                }
            }
            else
                m_PositionDriven = false;

            // If it's not a fresh check, then we weight the local Y up or down to keep it from flickering back and forth at boundaries
            if (!freshCheck)
            {
                if (!m_UpVectorDriven)
                    localY *= (1.0f - (k_ModeSwitchDeadZone * 0.5f));
                else
                    localY *= (1.0f + (k_ModeSwitchDeadZone * 0.5f));
            }

            if (localY > 0.707f)
            {
                if (!m_UpVectorDriven || freshCheck)
                {
                    m_UpVectorAngles.SetBaseFromVector(localUp);
                    m_UpVectorDriven = true;
                }
            }
            else
            {
                if (m_UpVectorDriven || freshCheck)
                {
                    m_ForwardVectorAngles.SetBaseFromVector(localForward);
                    m_UpVectorDriven = false;
                }
            }

            // Get angle from position
            if (m_PositionDriven)
                m_PositionAngles.SetTargetFromVector(localOffset);

            if (m_UpVectorDriven)
                m_UpVectorAngles.SetTargetFromVector(localUp);
            else
                m_ForwardVectorAngles.SetTargetFromVector(localForward);

            // Apply offset to base knob rotation to get new knob rotation
            var knobRotation = m_BaseKnobRotation - ((m_UpVectorAngles.totalOffset + m_ForwardVectorAngles.totalOffset) * m_TwistSensitivity) - m_PositionAngles.totalOffset;

            // Clamp to range
            if (m_ClampedMotion)
                knobRotation = Mathf.Clamp(knobRotation, m_MinAngle, m_MaxAngle);

            SetKnobRotation(knobRotation);

            // Reverse to get value
            var knobValue = (knobRotation - m_MinAngle) / (m_MaxAngle - m_MinAngle);
            SetValue(knobValue);
        }

        void SetKnobRotation(float angle)
        {
            if (m_AngleIncrement > 0)
            {
                var normalizeAngle = angle - m_MinAngle;
                angle = (Mathf.Round(normalizeAngle / m_AngleIncrement) * m_AngleIncrement) + m_MinAngle;
            }

            if (m_Handle != null)
                m_Handle.localEulerAngles = new Vector3(0.0f, angle, 0.0f);
        }

        void SetValue(float value)
        {
            if (m_ClampedMotion)
                value = Mathf.Clamp01(value);

            if (m_AngleIncrement > 0)
            {
                var angleRange = m_MaxAngle - m_MinAngle;
                var angle = Mathf.Lerp(0.0f, angleRange, value);
                angle = Mathf.Round(angle / m_AngleIncrement) * m_AngleIncrement;
                value = Mathf.InverseLerp(0.0f, angleRange, angle);
            }

            m_Value = value;
            m_OnValueChange.Invoke(m_Value);
        }

        float ValueToRotation()
        {
            return m_ClampedMotion ? Mathf.Lerp(m_MinAngle, m_MaxAngle, m_Value) : Mathf.LerpUnclamped(m_MinAngle, m_MaxAngle, m_Value);
        }

        void UpdateBaseKnobRotation()
        {
            m_BaseKnobRotation = Mathf.LerpUnclamped(m_MinAngle, m_MaxAngle, m_Value);
        }

        static float ShortestAngleDistance(float start, float end, float max)
        {
            var angleDelta = end - start;
            var angleSign = Mathf.Sign(angleDelta);

            angleDelta = Math.Abs(angleDelta) % max;
            if (angleDelta > (max * 0.5f))
                angleDelta = -(max - angleDelta);

            return angleDelta * angleSign;
        }

        void OnDrawGizmosSelected()
        {
            const int k_CircleSegments = 16;
            const float k_SegmentRatio = 1.0f / k_CircleSegments;

            // Nothing to do if position radius is too small
            if (m_PositionTrackedRadius <= Mathf.Epsilon)
                return;

            // Draw a circle from the handle point at size of position tracked radius
            var circleCenter = transform.position;

            if (m_Handle != null)
                circleCenter = m_Handle.position;

            var circleX = transform.right;
            var circleY = transform.forward;

            Gizmos.color = Color.green;
            var segmentCounter = 0;
            while (segmentCounter < k_CircleSegments)
            {
                var startAngle = (float)segmentCounter * k_SegmentRatio * 2.0f * Mathf.PI;
                segmentCounter++;
                var endAngle = (float)segmentCounter * k_SegmentRatio * 2.0f * Mathf.PI;

                Gizmos.DrawLine(circleCenter + (Mathf.Cos(startAngle) * circleX + Mathf.Sin(startAngle) * circleY) * m_PositionTrackedRadius,
                    circleCenter + (Mathf.Cos(endAngle) * circleX + Mathf.Sin(endAngle) * circleY) * m_PositionTrackedRadius);
            }
        }

        void OnValidate()
        {
            if (m_ClampedMotion)
                m_Value = Mathf.Clamp01(m_Value);

            if (m_MinAngle > m_MaxAngle)
                m_MinAngle = m_MaxAngle;

            SetKnobRotation(ValueToRotation());
        }
    }
}
"
zjziiVvY,Stupidly simple image series viewer,WarPie90,Delphi,Sunday 1st of October 2023 07:30:27 PM CDT,"program ImageVideoSeries;
(*
  Views an image series at specified FPS. 
  Pauses with space.
  When paused you can rewind or skip forward using arrow-keys.
*)

const
  DISK_LOCATION = 'C:\Simba\Images\';
  PAUSE_BUTTON  = VK_SPACE;
  REWIND_FRAME  = VK_LEFT;
  FORWARD_FRAME = VK_RIGHT;
  FPS           = 5;

var
  bmp: TMufasaBitmap;
  i: Int32;
  frames: TStringArray;

procedure ShowFrame(i: Int32);
begin
  bmp.Init();
  bmp.LoadFromFile(DISK_LOCATION+frames[i]);
  ShowBitmap(bmp);
  bmp.Free();
end;

procedure HandleAll();
var
  t: Double;
  isPaused: Boolean;
begin
  t := GetTimeRunning() + 1000 div FPS;
  while GetTimeRunning() < t do
  begin
    isPaused := isKeyDown(PAUSE_BUTTON);
    while isKeyDown(PAUSE_BUTTON) do Sleep(1);

    if isPaused then
    begin
      while not isKeyDown(PAUSE_BUTTON) do
      begin
        //check for rewinding
        if isKeyDown(REWIND_FRAME) then
        begin
          WriteLn('<< [frame='+ToStr(i-1)+']');
          while isKeyDown(REWIND_FRAME) do Sleep(1);
          i := Max(0,i-1);
          ShowFrame(i);
        end;

        if isKeyDown(FORWARD_FRAME) then
        begin
          WriteLn('>> [frame='+ToStr(i+1)+']');
          while isKeyDown(FORWARD_FRAME) do Sleep(1);
          i := Min(i+1, High(frames));
          ShowFrame(i);
        end;
        Sleep(1);
      end;
      while isKeyDown(PAUSE_BUTTON) do Sleep(1);
    end;
    Sleep(1);
  end;
end;


begin
  frames := GetFiles(DISK_LOCATION,'png');

  for i:=0 to High(frames) do
  begin
    ShowFrame(i);
    HandleAll();
  end;
end."
DcFnHmq4,snowybot manual trial,coinwalk,JavaScript,Sunday 1st of October 2023 07:29:21 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/800).toFixed(8));
var blert = nudle;
var taget = (smmly*7);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<(sinch-bogs))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 1);
}
get();"
K28LzCSb,2023-10-01_stats.json,rdp_snitch,JSON,Sunday 1st of October 2023 07:18:07 PM CDT,"{
  ""ip"": {
    ""80.94.95.238"": 6,
    ""194.165.17.11"": 9,
    ""195.181.244.184"": 3,
    ""157.97.121.163"": 3,
    ""194.165.16.76"": 6,
    ""179.43.152.58"": 3,
    ""205.210.31.166"": 9,
    ""94.232.46.250"": 33,
    ""87.251.75.145"": 6,
    ""13.229.207.188"": 396,
    ""45.143.201.62"": 15,
    ""188.119.66.107"": 3,
    ""193.142.147.9"": 9,
    ""193.142.146.17"": 9,
    ""87.251.75.120"": 3,
    ""185.170.144.3"": 6,
    ""194.165.16.78"": 12,
    ""167.248.133.35"": 3,
    ""36.139.61.15"": 3,
    ""141.98.9.153"": 3,
    ""205.210.31.220"": 9,
    ""69.75.118.251"": 9,
    ""167.94.146.53"": 3,
    ""45.227.254.55"": 6,
    ""43.132.213.11"": 6,
    ""45.140.17.16"": 3,
    ""165.154.182.154"": 3,
    ""111.61.253.55"": 3,
    ""198.235.24.69"": 9,
    ""167.94.145.60"": 3,
    ""185.196.8.31"": 3,
    ""103.238.110.134"": 3,
    ""198.235.24.41"": 9,
    ""45.227.254.26"": 6
  },
  ""asn"": {
    ""AS204428"": 6,
    ""AS48721"": 27,
    ""AS212531"": 3,
    ""AS396356"": 3,
    ""AS51852"": 3,
    ""AS396982"": 36,
    ""AS212482"": 33,
    ""AS208091"": 9,
    ""AS16509"": 396,
    ""AS210950"": 15,
    ""AS57523"": 3,
    ""AS208046"": 18,
    ""AS197414"": 6,
    ""AS398722"": 3,
    ""AS56041"": 3,
    ""AS209588"": 3,
    ""AS20001"": 9,
    ""AS398705"": 6,
    ""AS267784"": 12,
    ""AS132203"": 6,
    ""AS198953"": 3,
    ""AS135377"": 3,
    ""AS24547"": 3,
    ""AS42624"": 3,
    ""AS45916"": 3
  },
  ""isp"": {
    ""SS-Net"": 6,
    ""Flyservers S.A."": 42,
    ""UAB \""Interneto vizija\"""": 3,
    ""Consumer-Network"": 3,
    ""Private Layer INC"": 3,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 48,
    ""Amazon Technologies Inc."": 396,
    ""TOV E-RISHENNYA"": 15,
    ""Chang Way Technologies Co. Limited"": 3,
    ""ColocationX Ltd."": 18,
    ""Censys, Inc."": 9,
    ""China Mobile Communications Corporation"": 3,
    ""Charter Communications Inc"": 9,
    ""Aceville Pte.ltd"": 6,
    ""Proton66 OOO"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""China Mobile communications corporation"": 3,
    ""Simple Carrier LLC"": 3,
    ""gtpl henish cable vision"": 3
  },
  ""org"": {
    ""Internet-Transit LTD"": 6,
    ""Flyservers S.A"": 27,
    ""RACKRAY"": 3,
    ""Unknown"": 9,
    ""Private Layer Inc"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Dmitriy Panchenko"": 33,
    ""Xhost Internet Solutions"": 9,
    ""AWS EC2 (ap-southeast-1)"": 396,
    ""TOV VAIZ PARTNER"": 15,
    ""Chang Way Technologies Co. Limited"": 3,
    ""x33 Networks IBC"": 9,
    ""ColocationX Ltd"": 9,
    ""Xhostis"": 6,
    ""Censys, Inc."": 9,
    ""China Mobile Communications Corporation"": 3,
    ""Alviva Holding Limited"": 3,
    ""Spectrum"": 9,
    ""UAB Host Baltic"": 12,
    ""Proton66 LLC"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""China Mobile"": 3,
    ""USAInfrastructure"": 3,
    ""Gtpl Broadband Pvt. Ltd."": 3
  },
  ""regionName"": {
    ""Budapest"": 6,
    ""Kaunas"": 30,
    ""New Jersey"": 3,
    ""Zurich"": 3,
    ""California"": 48,
    ""Perm Krai"": 33,
    ""England"": 9,
    ""Central Singapore"": 396,
    ""Kyiv City"": 15,
    ""Moscow"": 6,
    ""English River"": 9,
    ""North Holland"": 18,
    ""Michigan"": 3,
    ""Zhejiang"": 3,
    ""Hesse"": 6,
    ""Vilnius"": 12,
    ""Central and Western District"": 6,
    ""Hebei"": 3,
    ""Texas"": 3,
    ""Gujarat"": 3
  },
  ""country"": {
    ""Hungary"": 6,
    ""Lithuania"": 42,
    ""United States"": 57,
    ""Switzerland"": 3,
    ""Russia"": 39,
    ""United Kingdom"": 9,
    ""Singapore"": 396,
    ""Ukraine"": 15,
    ""Seychelles"": 9,
    ""Netherlands"": 18,
    ""China"": 6,
    ""Germany"": 6,
    ""Hong Kong"": 6,
    ""India"": 3
  },
  ""account"": {
    ""Administr"": 78,
    ""Domain"": 27,
    ""hello"": 423,
    ""(empty)"": 15,
    ""Test"": 33,
    ""KCGwiXFkl"": 3,
    ""cJHwjR"": 3,
    ""CDlRRz"": 3,
    ""egSwRpdDO"": 3,
    ""vkBJSC"": 3,
    ""EACkyU"": 3,
    ""Administrator"": 3,
    ""QFJBpuPhH"": 3,
    ""rRDlBK"": 3,
    ""sfwMNV"": 3,
    ""vGKfeZfYM"": 3,
    ""mVchtc"": 3,
    ""bpaVIA"": 3
  },
  ""keyboard"": {
    ""Unknown"": 615
  },
  ""client_build"": {
    ""Unknown"": 615
  },
  ""client_name"": {
    ""Unknown"": 615
  },
  ""ip_type"": {
    ""Unknown"": 126,
    ""mobile & proxy"": 3,
    ""hosting"": 444,
    ""proxy"": 36,
    ""mobile"": 6
  }
}"
nbrzitmF,2023-10-01_stats.json,rdp_snitch,JSON,Sunday 1st of October 2023 07:16:12 PM CDT,"{
  ""ip"": {
    ""80.94.95.238"": 4,
    ""194.165.17.11"": 6,
    ""195.181.244.184"": 2,
    ""157.97.121.163"": 2,
    ""194.165.16.76"": 4,
    ""179.43.152.58"": 2,
    ""205.210.31.166"": 6,
    ""94.232.46.250"": 22,
    ""87.251.75.145"": 4,
    ""13.229.207.188"": 264,
    ""45.143.201.62"": 10,
    ""188.119.66.107"": 2,
    ""193.142.147.9"": 6,
    ""193.142.146.17"": 6,
    ""87.251.75.120"": 2,
    ""185.170.144.3"": 4,
    ""194.165.16.78"": 8,
    ""167.248.133.35"": 2,
    ""36.139.61.15"": 2,
    ""141.98.9.153"": 2,
    ""205.210.31.220"": 6,
    ""69.75.118.251"": 6,
    ""167.94.146.53"": 2,
    ""45.227.254.55"": 4,
    ""43.132.213.11"": 4,
    ""45.140.17.16"": 2,
    ""165.154.182.154"": 2,
    ""111.61.253.55"": 2,
    ""198.235.24.69"": 6,
    ""167.94.145.60"": 2,
    ""185.196.8.31"": 2,
    ""103.238.110.134"": 2,
    ""198.235.24.41"": 6,
    ""45.227.254.26"": 4
  },
  ""asn"": {
    ""AS204428"": 4,
    ""AS48721"": 18,
    ""AS212531"": 2,
    ""AS396356"": 2,
    ""AS51852"": 2,
    ""AS396982"": 24,
    ""AS212482"": 22,
    ""AS208091"": 6,
    ""AS16509"": 264,
    ""AS210950"": 10,
    ""AS57523"": 2,
    ""AS208046"": 12,
    ""AS197414"": 4,
    ""AS398722"": 2,
    ""AS56041"": 2,
    ""AS209588"": 2,
    ""AS20001"": 6,
    ""AS398705"": 4,
    ""AS267784"": 8,
    ""AS132203"": 4,
    ""AS198953"": 2,
    ""AS135377"": 2,
    ""AS24547"": 2,
    ""AS42624"": 2,
    ""AS45916"": 2
  },
  ""isp"": {
    ""SS-Net"": 4,
    ""Flyservers S.A."": 28,
    ""UAB \""Interneto vizija\"""": 2,
    ""Consumer-Network"": 2,
    ""Private Layer INC"": 2,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 32,
    ""Amazon Technologies Inc."": 264,
    ""TOV E-RISHENNYA"": 10,
    ""Chang Way Technologies Co. Limited"": 2,
    ""ColocationX Ltd."": 12,
    ""Censys, Inc."": 6,
    ""China Mobile Communications Corporation"": 2,
    ""Charter Communications Inc"": 6,
    ""Aceville Pte.ltd"": 4,
    ""Proton66 OOO"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""China Mobile communications corporation"": 2,
    ""Simple Carrier LLC"": 2,
    ""gtpl henish cable vision"": 2
  },
  ""org"": {
    ""Internet-Transit LTD"": 4,
    ""Flyservers S.A"": 18,
    ""RACKRAY"": 2,
    ""Unknown"": 6,
    ""Private Layer Inc"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Dmitriy Panchenko"": 22,
    ""Xhost Internet Solutions"": 6,
    ""AWS EC2 (ap-southeast-1)"": 264,
    ""TOV VAIZ PARTNER"": 10,
    ""Chang Way Technologies Co. Limited"": 2,
    ""x33 Networks IBC"": 6,
    ""ColocationX Ltd"": 6,
    ""Xhostis"": 4,
    ""Censys, Inc."": 6,
    ""China Mobile Communications Corporation"": 2,
    ""Alviva Holding Limited"": 2,
    ""Spectrum"": 6,
    ""UAB Host Baltic"": 8,
    ""Proton66 LLC"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""China Mobile"": 2,
    ""USAInfrastructure"": 2,
    ""Gtpl Broadband Pvt. Ltd."": 2
  },
  ""regionName"": {
    ""Budapest"": 4,
    ""Kaunas"": 20,
    ""New Jersey"": 2,
    ""Zurich"": 2,
    ""California"": 32,
    ""Perm Krai"": 22,
    ""England"": 6,
    ""Central Singapore"": 264,
    ""Kyiv City"": 10,
    ""Moscow"": 4,
    ""English River"": 6,
    ""North Holland"": 12,
    ""Michigan"": 2,
    ""Zhejiang"": 2,
    ""Hesse"": 4,
    ""Vilnius"": 8,
    ""Central and Western District"": 4,
    ""Hebei"": 2,
    ""Texas"": 2,
    ""Gujarat"": 2
  },
  ""country"": {
    ""Hungary"": 4,
    ""Lithuania"": 28,
    ""United States"": 38,
    ""Switzerland"": 2,
    ""Russia"": 26,
    ""United Kingdom"": 6,
    ""Singapore"": 264,
    ""Ukraine"": 10,
    ""Seychelles"": 6,
    ""Netherlands"": 12,
    ""China"": 4,
    ""Germany"": 4,
    ""Hong Kong"": 4,
    ""India"": 2
  },
  ""account"": {
    ""Administr"": 52,
    ""Domain"": 18,
    ""hello"": 282,
    ""(empty)"": 10,
    ""Test"": 22,
    ""KCGwiXFkl"": 2,
    ""cJHwjR"": 2,
    ""CDlRRz"": 2,
    ""egSwRpdDO"": 2,
    ""vkBJSC"": 2,
    ""EACkyU"": 2,
    ""Administrator"": 2,
    ""QFJBpuPhH"": 2,
    ""rRDlBK"": 2,
    ""sfwMNV"": 2,
    ""vGKfeZfYM"": 2,
    ""mVchtc"": 2,
    ""bpaVIA"": 2
  },
  ""keyboard"": {
    ""Unknown"": 410
  },
  ""client_build"": {
    ""Unknown"": 410
  },
  ""client_name"": {
    ""Unknown"": 410
  },
  ""ip_type"": {
    ""Unknown"": 84,
    ""mobile & proxy"": 2,
    ""hosting"": 296,
    ""proxy"": 24,
    ""mobile"": 4
  }
}"
XQ9tD9VU,2023-10-01_stats.json,rdp_snitch,JSON,Sunday 1st of October 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""80.94.95.238"": 2,
    ""194.165.17.11"": 3,
    ""195.181.244.184"": 1,
    ""157.97.121.163"": 1,
    ""194.165.16.76"": 2,
    ""179.43.152.58"": 1,
    ""205.210.31.166"": 3,
    ""94.232.46.250"": 11,
    ""87.251.75.145"": 2,
    ""13.229.207.188"": 132,
    ""45.143.201.62"": 5,
    ""188.119.66.107"": 1,
    ""193.142.147.9"": 3,
    ""193.142.146.17"": 3,
    ""87.251.75.120"": 1,
    ""185.170.144.3"": 2,
    ""194.165.16.78"": 4,
    ""167.248.133.35"": 1,
    ""36.139.61.15"": 1,
    ""141.98.9.153"": 1,
    ""205.210.31.220"": 3,
    ""69.75.118.251"": 3,
    ""167.94.146.53"": 1,
    ""45.227.254.55"": 2,
    ""43.132.213.11"": 2,
    ""45.140.17.16"": 1,
    ""165.154.182.154"": 1,
    ""111.61.253.55"": 1,
    ""198.235.24.69"": 3,
    ""167.94.145.60"": 1,
    ""185.196.8.31"": 1,
    ""103.238.110.134"": 1,
    ""198.235.24.41"": 3,
    ""45.227.254.26"": 2
  },
  ""asn"": {
    ""AS204428"": 2,
    ""AS48721"": 9,
    ""AS212531"": 1,
    ""AS396356"": 1,
    ""AS51852"": 1,
    ""AS396982"": 12,
    ""AS212482"": 11,
    ""AS208091"": 3,
    ""AS16509"": 132,
    ""AS210950"": 5,
    ""AS57523"": 1,
    ""AS208046"": 6,
    ""AS197414"": 2,
    ""AS398722"": 1,
    ""AS56041"": 1,
    ""AS209588"": 1,
    ""AS20001"": 3,
    ""AS398705"": 2,
    ""AS267784"": 4,
    ""AS132203"": 2,
    ""AS198953"": 1,
    ""AS135377"": 1,
    ""AS24547"": 1,
    ""AS42624"": 1,
    ""AS45916"": 1
  },
  ""isp"": {
    ""SS-Net"": 2,
    ""Flyservers S.A."": 14,
    ""UAB \""Interneto vizija\"""": 1,
    ""Consumer-Network"": 1,
    ""Private Layer INC"": 1,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 16,
    ""Amazon Technologies Inc."": 132,
    ""TOV E-RISHENNYA"": 5,
    ""Chang Way Technologies Co. Limited"": 1,
    ""ColocationX Ltd."": 6,
    ""Censys, Inc."": 3,
    ""China Mobile Communications Corporation"": 1,
    ""Charter Communications Inc"": 3,
    ""Aceville Pte.ltd"": 2,
    ""Proton66 OOO"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""China Mobile communications corporation"": 1,
    ""Simple Carrier LLC"": 1,
    ""gtpl henish cable vision"": 1
  },
  ""org"": {
    ""Internet-Transit LTD"": 2,
    ""Flyservers S.A"": 9,
    ""RACKRAY"": 1,
    ""Unknown"": 3,
    ""Private Layer Inc"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Dmitriy Panchenko"": 11,
    ""Xhost Internet Solutions"": 3,
    ""AWS EC2 (ap-southeast-1)"": 132,
    ""TOV VAIZ PARTNER"": 5,
    ""Chang Way Technologies Co. Limited"": 1,
    ""x33 Networks IBC"": 3,
    ""ColocationX Ltd"": 3,
    ""Xhostis"": 2,
    ""Censys, Inc."": 3,
    ""China Mobile Communications Corporation"": 1,
    ""Alviva Holding Limited"": 1,
    ""Spectrum"": 3,
    ""UAB Host Baltic"": 4,
    ""Proton66 LLC"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""China Mobile"": 1,
    ""USAInfrastructure"": 1,
    ""Gtpl Broadband Pvt. Ltd."": 1
  },
  ""regionName"": {
    ""Budapest"": 2,
    ""Kaunas"": 10,
    ""New Jersey"": 1,
    ""Zurich"": 1,
    ""California"": 16,
    ""Perm Krai"": 11,
    ""England"": 3,
    ""Central Singapore"": 132,
    ""Kyiv City"": 5,
    ""Moscow"": 2,
    ""English River"": 3,
    ""North Holland"": 6,
    ""Michigan"": 1,
    ""Zhejiang"": 1,
    ""Hesse"": 2,
    ""Vilnius"": 4,
    ""Central and Western District"": 2,
    ""Hebei"": 1,
    ""Texas"": 1,
    ""Gujarat"": 1
  },
  ""country"": {
    ""Hungary"": 2,
    ""Lithuania"": 14,
    ""United States"": 19,
    ""Switzerland"": 1,
    ""Russia"": 13,
    ""United Kingdom"": 3,
    ""Singapore"": 132,
    ""Ukraine"": 5,
    ""Seychelles"": 3,
    ""Netherlands"": 6,
    ""China"": 2,
    ""Germany"": 2,
    ""Hong Kong"": 2,
    ""India"": 1
  },
  ""account"": {
    ""Administr"": 26,
    ""Domain"": 9,
    ""hello"": 141,
    ""(empty)"": 5,
    ""Test"": 11,
    ""KCGwiXFkl"": 1,
    ""cJHwjR"": 1,
    ""CDlRRz"": 1,
    ""egSwRpdDO"": 1,
    ""vkBJSC"": 1,
    ""EACkyU"": 1,
    ""Administrator"": 1,
    ""QFJBpuPhH"": 1,
    ""rRDlBK"": 1,
    ""sfwMNV"": 1,
    ""vGKfeZfYM"": 1,
    ""mVchtc"": 1,
    ""bpaVIA"": 1
  },
  ""keyboard"": {
    ""Unknown"": 205
  },
  ""client_build"": {
    ""Unknown"": 205
  },
  ""client_name"": {
    ""Unknown"": 205
  },
  ""ip_type"": {
    ""Unknown"": 42,
    ""mobile & proxy"": 1,
    ""hosting"": 148,
    ""proxy"": 12,
    ""mobile"": 2
  }
}"
s86hFZsn,Farm Factory Tycoon Best Script GUI,AlexYaWon,Lua,Sunday 1st of October 2023 05:41:56 PM CDT,"local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/SiriusSoftwareLtd/Rayfield/main/source.lua'))()

local Window = Rayfield:CreateWindow({
    Name = ""DEV | Farm Factory Tycoon"",
    LoadingTitle = ""Farm Factory Tycoon"",
    LoadingSubtitle = ""By [REDACTED]"",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = ""DEV"",
        FileName = ""DevSave""
    },

})

Rayfield:Notify(""Loaded"", ""loaded in "", 4483362458) -- Notfication -- Title, Content, Image

local Tab = Window:CreateTab(""Main "", 4483362458)        -- Title, Image
local Section = Tab:CreateSection(""Main"")

local Button = Tab:CreateButton({
    Name = ""Infinite Money"",
    Callback = function()
        game.Players.LocalPlayer.PlayerGui.Hud.Main.Cash.Effect.Visible = false
        game.Players.LocalPlayer.PlayerGui.Hud.Main.Diamond.Effect.Visible = false
        game.Players.LocalPlayer.Character.HumanoidRootPart.RootRigAttachment:Destroy()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/CreatorProfessional/fft/main/generateinfinitemoney'))()
    end,
})

local Button = Tab:CreateButton({
    Name = ""Auto Upgrade"",
    Callback = function()
        getgenv().yourTycoon = nil
local descendants = game.Workspace.Tycoon:GetDescendants()

for index, descendant in pairs(descendants) do
if descendant.Name == ""Onwer"" then
if descendant.Value == game.Players.LocalPlayer then
  getgenv().yourTycoon = descendant.Parent
end
end
end
    end,
})

local Button = Tab:CreateButton({
    Name = ""Auto Obby"",
    Callback = function()
        getgenv().autoObbying = true

while getgenv().autoObbying do
  task.wait()
  local hrpCFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
  local end3 = game:GetService(""Workspace"").Obby.Obby3.End
  local end2 = game:GetService(""Workspace"").Obby.Obby2.End
  local end1 = game:GetService(""Workspace"").Obby.Obby1.End
  end3.Transparency = 1
  end2.Transparency = 1
  end1.Transparency = 1
  end3.CFrame = hrpCFrame
  end2.CFrame = hrpCFrame
  end1.CFrame = hrpCFrame
  end3.CanCollide = false
  end2.CanCollide = false
  end1.CanCollide = false
end
    end,
})

local Button = Tab:CreateButton({
    Name = ""Claim Gifts Every Second"",
    Callback = function()
        while wait(1) do
            local args = {
            [1] = 1
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 2
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 3
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 4
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 5
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 6
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 7
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 8
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 9
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 10
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 11
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 12
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        end
    end,
})

local Button = Tab:CreateButton({
    Name = ""Auto Upgrade+Rebirth Animals"",
    Callback = function()
        while wait(0.01) do

            local args = {
                [1] = ""Chicken10""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken10""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken9""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken9""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken8""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken8""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken7""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken7""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken6""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken6""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken5""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken5""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken4""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken4""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken3""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken3""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken2""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken2""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken1""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken1""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            
            
            local args = {
                [1] = ""Cow10""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow10""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow9""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow9""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow8""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow8""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow7""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow7""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow6""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow6""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow5""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow5""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow4""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow4""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow3""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow3""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow2""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow2""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow1""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow1""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            
            
            local args = {
                [1] = ""Sheep10""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep10""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep9""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep9""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep8""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep8""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep7""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep7""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep6""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep6""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep5""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep5""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep4""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep4""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep3""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep3""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep2""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep2""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep1""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep1""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
        end
    end,
})
local Label = Tab:CreateLabel(""BE AWARE YOUR SCREEN WILL GET FLOODED WITH NOTIFICATIONS SUCH AS 'did not reach the level'."")
local Label = Tab:CreateLabel(""If you know where the notification comes from please contact me."")
local Tab = Window:CreateTab(""Misc "", 4483362458)        -- Title, Image
local Section = Tab:CreateSection(""Player Settings"")

local Slider = Tab:CreateSlider({
    Name = ""Speed"",
    Range = { 0, 250 },
    Increment = 1,
    Suffix = ""Walkspeed"",
    CurrentValue = 16,
    Flag = ""Slider2"", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        while Value do
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed =  Value
        end
    end,
})

local Slider = Tab:CreateSlider({
    Name = ""JumpPower"",
    Range = { 0, 250 },
    Increment = 1,
    Suffix = ""JumpPower"",
    CurrentValue = 50,
    Flag = ""Slider3"", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        while Value do
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid.JumpPower =  Value
        end
    end,
})



local Section = Tab:CreateSection(""Misc"")
local Button = Tab:CreateButton({
    Name = ""Ctrl+Click TP"",
    Callback = function()
        local Plr = game:GetService(""Players"").LocalPlayer
local Mouse = Plr:GetMouse()
Mouse.Button1Down:connect(function()
if not game:GetService(""UserInputService""):IsKeyDown(Enum.KeyCode.LeftControl) then return end
if not Mouse.Target then return end
Plr.Character:MoveTo(Mouse.Hit.p)
end)
    end,
})
local Button = Tab:CreateButton({
    Name = ""Remote Spy - Simply Spy"",
    Callback = function()
        loadstring(game:HttpGet(""https://pastebin.com/raw/z3CJvrXt""))()
    end,
})
local Button = Tab:CreateButton({
    Name = ""DarkDex"",
    Callback = function()
        getfenv(1).currentTheme = ""Graphite""
        loadstring(game:HttpGet(""https://raw.githubusercontent.com/loglizzy/dex-custom-icons/main/main.lua""))()
    end,
})
local Button = Tab:CreateButton({
    Name = ""Destroy UI"",
    Callback = function()
        Rayfield:Destroy()
        
    end,
})
local Label = Tab:CreateLabel(""ANTI AFK ALREADY APPLIED ON EXECUTION"")

-- local Button = Tab:CreateButton({
    --Name = ""Stand In Place"",
    --Callback = function()
        --game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true
    --end,
--})

--local Button = Tab:CreateButton({
    --Name = ""Sit"",
    --Callback = function()
        --game.Players.LocalPlayer.Character.Humanoid.Sit = true
    --end,
--})

--local Button = Tab:CreateButton({
    --Name = ""Get up"",
    --Callback = function()
        --game.Players.LocalPlayer.Character.Humanoid.Sit = false
        --game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
    --end,
--})

-- AntiAfk

if game.Players.LocalPlayer then
    local vu = game:GetService(""VirtualUser"")
game:GetService(""Players"").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
end


-- Extras

-- getgenv().SecureMode = true -- Only Set To True If Games Are Detecting/Crashing The UI

-- Rayfield:Destroy() -- Destroys UI

-- Rayfield:LoadConfiguration() -- Enables Configuration Saving

-- Section:Set(""Section Example"") -- Use To Update Section Text

-- Button:Set(""Button Example"") -- Use To Update Button Text

-- Toggle:Set(false) -- Use To Update Toggle

-- Slider:Set(10) -- Use To Update Slider Value

-- Label:Set(""Label Example"") -- Use To Update Label Text

-- Paragraph:Set({Title = ""Paragraph Example"", Content = ""Paragraph Example""}) -- Use To Update Paragraph Text

-- Keybind:Set(""RightCtrl"") -- Keybind (string) -- Use To Update Keybind

-- Dropdown:Set(""Option 2"") -- The new option value -- Use To Update/Set New Dropdowns"
V9Ed3B5C,Point Of Segment(Ternary Operator),Spocoman,Python,Sunday 1st of October 2023 04:54:39 PM CDT,"first = int(input())
second = int(input())
point = int(input())

print(""in"" if first >= point >= second or first <= point <= second else ""out"")
print(min(abs(first - point), abs(second - point)))
"
YAvjXtY2,Point Of Segment(Ternary Operator),Spocoman,JavaScript,Sunday 1st of October 2023 04:49:58 PM CDT,"function pointOfSegment(input) {
    let first = Number(input[0]);
    let second = Number(input[1]);
    let point = Number(input[2]);
    
    console.log(point <= first && point >= second || point >= first && point <= second ? ""in"" : ""out"");
    console.log(Math.min(Math.abs(first - point), Math.abs(second - point)));

    return;
}"
rxfYP4qF,Point Of Segment(Ternary Operator),Spocoman,C++,Sunday 1st of October 2023 04:44:53 PM CDT,"#include <iostream>
#include <cmath>

using namespace std;

int main() {
    int first, second, point;
    cin >> first >> second >> point;

    cout << (point <= first && point >= second || point >= first && point <= second ? ""in"" : ""out"")
        << endl << min(abs(first - point), abs(second - point)) << endl;

    return 0;
}"
VfVbHtVS,Point Of Segment(Ternary Operator),Spocoman,C#,Sunday 1st of October 2023 04:36:28 PM CDT,"using System;

namespace PointOfSegment
{
    class Program
    {
        static void Main(string[] args)
        {
            int first = int.Parse(Console.ReadLine());
            int second = int.Parse(Console.ReadLine());
            int point = int.Parse(Console.ReadLine());

            Console.WriteLine(point <= first && point >= second || point >= first && point <= second ? ""in"" : ""out"");
            Console.WriteLine(Math.Min(Math.Abs(first - point), Math.Abs(second - point)));
        }
    }
}"
cFLCZMLt,rsh_server.lua,cul8ter,Lua,Sunday 1st of October 2023 04:03:04 PM CDT,"local ot=term
local nt={}
local mod=peripheral.find(""modem"")
mod.open(545)
local function call_remote(k,...)
    args={...}
    mod.transmit(555,545,{""NSA"",k,args})
end
for k,v in pairs(term) do
    nt[k]=function(...) call_remote(k,...) return ot[k](...) end
    print(""Hooked: ""..k)
    os.sleep(0)
end
_G.term=nt
nt.clear()
nt.setCursorPos(1,1)
local oldf=_G.os.pullEventRaw
_G.os.pullEventRaw=function()
    local name,a,b,c,d,e=oldf()
    if name==""modem_message"" then
        if b==545 then
            if d[3]~=_G.tmp then
                _G.tmp=d[3]
                os.queueEvent(d[1],d[2])
            end
        end
    end
    return name,a,b,c,d,e
end
shell.run(""sh"")
_G.term=ot
_G.os.pullEventRaw=oldf
print(""exited"")"
WmSZKsS3,HedgehogFacts,Tivorak,JSON,Sunday 1st of October 2023 03:50:16 PM CDT,"[
    ""It’s a myth that hedgehogs can’t swim."",
    ""A baby hedgehog is called a hoglet. "",
    ""The average hedgehog has 44 teeth."",
    ""The name “hedge” hog comes from their habitat."",
    ""Even a cute hedgehog can bite."",
    ""Hedgehogs and porcupines have many differences."",
    ""Hedgehog quills act as their primary defense mechanism."",
    ""Porcupine quills are more dangerous than hedgehog quills."",
    ""The African pygmy hedgehog is the most popular pet hedgehog. "",
    ""The hedgehog diet mainly consists of garden pests."",
    ""Hedgehogs have been featured in Alice in Wonderland."",
    ""People used to believe that hedgehogs drank milk from cows."",
    ""Hedgehogs have partial immunity to snake venom."",
    ""In New Zealand, the hedgehog is considered an invasive species."",
    ""Wild hedgehogs live in nests."",
    ""Hedgehogs were once considered sacred."",
    ""Hedgehog noises communicate different things. While looking for food, hedgehogs usually grunt and snuffe like pigs. During mating season, they chuff like a train to attract mates."",
    ""Hedgehogs perform a unique behavior called anointing."",
    ""No one knows why hedgehogs anoint."",
    ""Cars pose a big threat to hedgehogs."",
    ""Hedgehogs may suffer from balloon syndrome."",
    ""Hedgehogs aren’t rodents."",
    ""Long-eared hedgehogs are prone to carrying parasites and diseases."",
    ""Pet hedgehogs exhibit tubing."",
    ""European hedgehogs are the largest species."",
    ""African pygmy hedgehogs are the smallest hedgehogs in the world."",
    ""Scientists discovered the Sonic Hedgehog protein in 1980."",
    ""The oldest hedgehog lived up to 16 years old."",
    ""Hedgehogs can’t roll while they are curled up."",
    ""Most hedgehogs are only active at night."",
    ""Hedgehogs are omnivorous.""
]"
2NwDAtm3,Untitled,Techn0id,VBScript,Sunday 1st of October 2023 03:35:03 PM CDT,"Set WshShell = CreateObject(""WScript.Shell"")
MsgBox ConvertToKey(WshShell.RegRead(""HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\DigitalProductId""))
FileLocation = GetCurrentFolder()
call WriteToFIle(ConvertToKey(WshShell.RegRead(""HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\DigitalProductId"")),FileLocation)

Function GetCurrentFolder()
    Dim FSO
    Set FSO = CreateObject(""Scripting.FileSystemObject"")
    GetCurrentFolder = FSO.GetAbsolutePathName(""."")
End Function

Function WriteToFIle(prokey,File)
    '~ Create a FileSystemObject
    Set objFSO=CreateObject(""Scripting.FileSystemObject"")
    '~ Provide file path
     outFile=File
     '~ Setting up file to write
    Set objFile = objFSO.CreateTextFile(outFile&""/Productkey.txt"",True)
	 objFile.WriteLine prokey
	 objFile.Close
End Function

Function ConvertToKey(Key)
	Const KeyOffset = 52
	i = 28
	Chars = ""BCDFGHJKMPQRTVWXY2346789""
	Do
	Cur = 0
	x = 14
	Do
	Cur = Cur * 256
	Cur = Key(x + KeyOffset) + Cur
	Key(x + KeyOffset) = (Cur \ 24) And 255
	Cur = Cur Mod 24
	x = x -1
	Loop While x >= 0
	i = i -1
	KeyOutput = Mid(Chars, Cur + 1, 1) & KeyOutput
	If (((29 - i) Mod 6) = 0) And (i <> -1) Then
	i = i -1
	KeyOutput = ""-"" & KeyOutput
	End If
	Loop While i >= 0
	ConvertToKey = KeyOutput
End Function"
hxsAe1gX,[LUA] Door Lock for CC: Tweaked,takkairo,Lua,Sunday 1st of October 2023 03:34:22 PM CDT,"while true do
    -- Clear after/reset cursor each try 
    term.clear()
    term.setCursorPos(1, 1)

    -- Prompt user for password 
    print(""Please Enter Password:"")
    input = read(""*"")

     -- Validate password 
    if input == ""4123"" then
        -- Open door if password is correct
        redstone.setOutput(""bottom"", true) 
        -- Close door after 5 seconds
        sleep(5)
        redstone.setOutput(""bottom"", false)
    end
end"
EzYbi3pg,Untitled,renatagakhanov,Python,Sunday 1st of October 2023 03:25:55 PM CDT,"@dp.message_handler(state='UnicPhoto', content_types=['photo'])
async def unic_photo(message: types.Message, state: FSMContext):
    await state.finish()
    photo = message.photo
    for i in photo:
        letters = string.ascii_lowercase
        name = ''.join(random.choice(letters) for i in range(16))
        path = f'C:/Users/admin/Desktop/Teams/media/file_user/photo_{name}.png'
        await i.download(path)
        output_image_path = await applyFilter(path)
        await message.answer_photo(photo=open(output_image_path, 'rb'))"
8Rff58Gs,Untitled,Skos_Martren,C++,Sunday 1st of October 2023 03:06:23 PM CDT,"#include <iostream>
#include <vector>
#include<algorithm>
#include <array>

using namespace std; 



class Solution {

private:

    struct Event {

        int Val;
        int Type;

    };

    const bool operator<(const Event L, const Event R) {
        return (L.Val == R.Val ? L.Type < R.Type : L.Val < R.Val);
    }

private:

    int MNCR = 0; // Minimum Number of Conference Rooms 

public:

    int minMeetingRooms(vector<vector<int>>& intervals) {

        vector<Event> events; events.reserve(2 * intervals.size()); // ""2 * "" <-- укладывания концов в intervals в events 

        for (int i = 0; i < intervals.size(); ++i) {

            const auto event = intervals[intervals.size() - 1 - i];
            events.pop_back();

            events.push_back({ event.front(), 1 });
            events.push_back({ event.back(), -1 });

        }

        sort(events.begin(), events.end());

        int CurrentNCR = 0;

        for (const auto [val, type] : events) {
            CurrentNCR += type;
            max(MNCR, CurrentNCR);
        }


        return MNCR;

    }

};"
B5TSd2ry,Sweet Dessert,Spocoman,Python,Sunday 1st of October 2023 02:42:38 PM CDT,"from math import ceil

budget = float(input())
guests = int(input())
banana_price = float(input())
egg_price = float(input())
berries_kilo_price = float(input())

needed_money = ceil(guests / 6) * (banana_price * 2 + egg_price * 4 + berries_kilo_price / 5)

if budget >= needed_money:
    print(f""Ivancho has enough money - it would cost {needed_money:.2f}lv."")
else:
    print(f""Ivancho will have to withdraw money - he will need {needed_money - budget:.2f}lv more."")
"
fx6w7YQv,Sweet Dessert,Spocoman,JavaScript,Sunday 1st of October 2023 02:34:10 PM CDT,"function sweetDessert(input) {
    let budget = Number(input[0]);
    let guests = Number(input[1]);
    let bananaPrice = Number(input[2]);
    let eggPrice = Number(input[3]);
    let berriesKiloPrice = Number(input[4]);
 
    let neededMoney = Math.ceil(guests / 6) * (bananaPrice * 2 + eggPrice * 4 + berriesKiloPrice / 5);
 
    if (budget >= neededMoney) {
        console.log(`Ivancho has enough money - it would cost ${neededMoney.toFixed(2)}lv.`);
    }
    else {
        console.log(`Ivancho will have to withdraw money - he will need ${(neededMoney - budget).toFixed(2)}lv more.`);
    }

    return;
}"
y888cEVJ,Untitled,mrlolthe1st,C++,Sunday 1st of October 2023 02:31:31 PM CDT,"#define _CRT_SECURE_NO_WARNINGS
#include <assert.h>

#include <algorithm>
#include <array>
#include <string_view>
#include <bitset>
#include <chrono>
#include <fstream>
#include <functional>
#include <iomanip>
#include <variant>
#include <iostream>
#include <map>
#include <numeric>
#include <optional>
#include <queue>
#include <random>
#include <set>
#include <sstream>
#include <string>
#include <thread>
#include <unordered_map>
#include <unordered_set>
#include <variant>
#include <vector>

using namespace std;
const int MAXN = 3e6;
struct /*__attribute__((__packed__))*/ node {
	int l, r, sz;
	uint32_t rk;
	char lit;
};
mt19937 gen(345678);
node nodes[MAXN];
int cid = 0;
int next() {
	int r = ++cid;
	if (r == MAXN) exit(-1);
	nodes[r].rk = gen();
	return r;
}

void upd(int v) {
	if (!v) return;
	nodes[v].sz = 1 + (nodes[v].l ? nodes[nodes[v].l].sz : 0) +
		(nodes[v].r ? nodes[nodes[v].r].sz : 0);
}

inline int cnt(int v) {
	if (!v) return 0;
	return nodes[v].sz;
}

int merge(int l, int r) {
	if (!l) return r;
	if (!r) return l;
	if (nodes[l].rk > nodes[r].rk) {
		nodes[l].r = merge(nodes[l].r, r);
		upd(l);
		return l;
	}
	else {
		nodes[r].l = merge(l, nodes[r].l);
		upd(r);
		return r;
	}
}

pair<int, int> split(int p, int x) {
	if (!p) return { 0, 0 };
	if (cnt(nodes[p].l) < x) {
		auto [l, r] = split(nodes[p].r, x - cnt(nodes[p].l) - 1);
		nodes[p].r = l;
		upd(p);
		return { p, r };
	}
	else {
		auto [l, r] = split(nodes[p].l, x);
		nodes[p].l = r;
		upd(p);
		return { l, p };
	}
}

void append(int& t, int it) { t = merge(t, it); }

int insert(const string& l, const string& r) {
	int ll = 0, rr = 0;
	if (l.size() == 1) {
		ll = next();
		nodes[ll].sz = 1;
		nodes[ll].lit = l[0];
	}
	if (r.size() == 1) {
		rr = next();
		nodes[rr].sz = 1;
		nodes[rr].lit = r[0];
	}
	if (!ll && !rr) return merge(insert(l.substr(0, l.size() / 2), l.substr(l.size() / 2)), insert(r.substr(0, r.size() / 2), r.substr(r.size() / 2)));
	if (!rr && r.size()) return merge(ll, insert(r.substr(0, r.size() / 2), r.substr(r.size() / 2)));
	if (!ll && l.size()) return merge(insert(l.substr(0, l.size() / 2), l.substr(l.size() / 2)), rr);
	return merge(ll, rr);
}

void print(stringstream& s, int t) {
	if (!t) return;
	print(s, nodes[t].l);
	s << nodes[t].lit;
	print(s, nodes[t].r);
}

void print(string& s, int t) {
	stringstream ss;
	print(ss, t);
	ss.flush();
	s = ss.str();
}

void insert(int& t, const string& s) {
	t = merge(t, insert(s.substr(0, s.size() / 2), s.substr(s.size() / 2)));
}

int K = 400;
int vnum = 0;
vector<string> ans(K);
vector<vector<vector<int>>> changes(2 * K);
vector<vector<vector<char>>> changes_i(2 * K);
vector<vector<vector<int>>> changes_int(2 * K);
vector<vector<vector<string>>> changes_str(2 * K);
signed main(int argc, char** argv) {
	int L, Q;
	string S;
	cin >> L >> Q >> S;
	int deco = 0;
	insert(deco, S);
	ans[0] = S;
	int processed = 0;
	int cnt1 = 1;
	int vnum = 1;
	while (Q--) {
		string t;
		cin >> t;
		if (t == ""GET"") {
			int v, l, r;
			cin >> v >> l >> r;
			--v;
			int p = v / K;
			int off = v % K;
			--off;
			auto& block = changes[p];
			auto& block_str = changes_str[p];
			auto& block_int = changes_int[p];
			auto& block_i = changes_i[p];
			for (int j = l; j <= r; ++j) {
				int cpos = j;
				int curr_off = off;
				while (curr_off > -1) {
					auto& cur_chng = block[curr_off];
					auto& cur_chng_i = block_i[curr_off];
					auto& cur_chng_int = block_int[curr_off];
					auto& cur_chng_str = block_str[curr_off];
					auto x = upper_bound(cur_chng.begin(), cur_chng.end(), cpos);
					--x;
					int idx = x - cur_chng.begin();
					if (cur_chng_i[idx]) {
						cout << cur_chng_str[idx][cpos - cur_chng[idx]];
						break;
					}
					else {
						cpos = cur_chng_int[idx] + cpos - cur_chng[idx];
						--curr_off;
					}
				}
				if (curr_off == -1) {
					cout << ans[p][cpos - 1];
				}
			}
			cout << endl;
		}
		else if (t == ""COMMIT"") {
			++processed;
			int c;
			cin >> c;
			int new_treap = 0;
			int copy = deco;
			int removed = 0;
			int curr_idx = 1;
			vector<int> changes_;
			vector<char> changes_i_;
			vector<int> changes_int_;
			vector<string> changes_str_;
			changes_.reserve(c);
			changes_int_.reserve(c);
			changes_i_.reserve(c);
			changes_str_.reserve(c);
			while (c--) {
				string t;
				cin >> t;
				if (t == ""add"") {
					cin >> t;
					insert(new_treap, t);
					changes_.push_back(curr_idx);
					curr_idx += t.size();
					changes_str_.emplace_back(std::move(t));
					changes_i_.push_back(1);
					changes_int_.push_back(0);
				}
				else {
					int l, r;
					cin >> l >> r;
					auto [a, b] = split(copy, l - 1 - removed);
					auto [c, d] = split(b, r - l + 1);
					new_treap = merge(new_treap, c);
					removed = r;
					copy = d;
					changes_.push_back(curr_idx);
					changes_str_.emplace_back();
					changes_i_.push_back(0);
					changes_int_.push_back(l);
					curr_idx += r - l + 1;
				}
			}
			changes[cnt1 - 1].emplace_back(std::move(changes_));
			changes_str[cnt1 - 1].emplace_back(std::move(changes_str_));
			changes_int[cnt1 - 1].emplace_back(std::move(changes_int_));
			changes_i[cnt1 - 1].emplace_back(std::move(changes_i_));
			deco = new_treap;
			cout << ""version "" << ++vnum << std::endl;
			if (processed == K - 1) {
				print(ans[cnt1++], deco);
				processed = 0;
			}
		}
		else if (t == ""FLUSH"") {
			cout << ""==="" << std::endl;
		}
	}
}"
V6x7VJTC,Strategies for Earning Profits Through Football Betting,livebetpro,PHP,Sunday 1st of October 2023 02:24:22 PM CDT,https://www.livebetpro.com/strategies-for-earning-profits-through-football-betting/
f97GTj7T,FTB FanProc: Drop and wait,Tobnac,Lua,Sunday 1st of October 2023 02:19:23 PM CDT,"local inventorySize = 16

while 1 do
	for i = 1, inventorySize do
		turtle.select(i)
    	turtle.suckUp()
    end
	for i = 1, inventorySize do
    	turtle.select(i)
		turtle.drop()
    end

	sleep(40)

	for i = 1, inventorySize do
		turtle.select(i)
    	turtle.suck()
    end
	turtle.turnLeft()
	for i = 1, inventorySize do
		turtle.select(i)
    	turtle.drop()
    end
	turtle.turnRight()
end"
DRqRL367,Sweet Dessert,Spocoman,C++,Sunday 1st of October 2023 02:18:55 PM CDT,"#include <iostream>
#include <cmath>

using namespace std;

int main() {
    double budget, guests, bananaPrice, eggPrice, berriesKiloPrice;
    cin >> budget >> guests >> bananaPrice >> eggPrice >> berriesKiloPrice;

    double neededMoney = ceil(guests / 6) * (bananaPrice * 2 + eggPrice * 4 + berriesKiloPrice / 5);

    if (budget >= neededMoney) {
        printf(""Ivancho has enough money - it would cost %.2flv."", neededMoney);
    }
    else {
        printf(""Ivancho will have to withdraw money - he will need %.2flv more."", neededMoney - budget);
    }
    return 0;
}"
QCwZvvmJ,Sweet Dessert,Spocoman,C#,Sunday 1st of October 2023 02:11:55 PM CDT,"using System;

namespace SweetDessert
{
    class Program
    {
        static void Main(string[] args)
        {
            double budget = double.Parse(Console.ReadLine());
            int guests = int.Parse(Console.ReadLine());
            double bananaPrice = double.Parse(Console.ReadLine());
            double eggPrice = double.Parse(Console.ReadLine());
            double berriesKiloPrice = double.Parse(Console.ReadLine());

            double neededMoney = Math.Ceiling((double)guests / 6) * (bananaPrice * 2 + eggPrice * 4 + berriesKiloPrice / 5);
           
            if(budget >= neededMoney)
            {
                Console.WriteLine($""Ivancho has enough money - it would cost {neededMoney:f2}lv."");
            }
            else
            {
                Console.WriteLine($""Ivancho will have to withdraw money - he will need {neededMoney - budget:f2}lv more."");
            }
        }
    }
}"
Ci9rTmfz,Claim Your $30 Free Account with Windsor Brokers,reviewbrokers,PHP,Sunday 1st of October 2023 02:11:14 PM CDT,https://www.reviewbrokers.net/claim-your-30-free-account-with-windsor-brokers/
SsVHQcjv,Stored Agent Shortcode,threemarketing,PHP,Sunday 1st of October 2023 01:57:20 PM CDT,"[oxygen data='phpfunction' function='get_option' arguments='stored_agent_login']

[oxygen data='phpfunction' function='get_option' arguments='stored_agent_register']

[oxygen data='phpfunction' function='get_option' arguments='stored_agent_line']"
pRPN05Kj,AVFX Capital | $100 Free Welcome Bonus,fxvnpro,PHP,Sunday 1st of October 2023 01:56:20 PM CDT,https://www.fxvnpro.com/avfx-capital-100-free-welcome-bonus/
tQxRdUQC,LeetCode 128 - Longest Consecutive Sequence - 2023.10.02 solution,nathanwailes,Python,Sunday 1st of October 2023 01:51:15 PM CDT,"class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        """""" If it was sorted, we could just track the longest sequence as
        we went.  But sorting is O(nlogn) time.  To get O(n) time we may need
        to use extra memory, like by using a dict. Also it's important to
        remember that we can go through the list multiple times and still have
        an O(n) solution.
        The question to ask yourself is: what would you want to know, when
        looking at each element, to know if it's the element you need to
        return?
        In our case, we'd want to know what the length of the sequence is of
        which this element is a part.  And then after iterating through the
        entire list and storing a variable to keep track of the longest
        sequence we've seen we'd have our answer.
        So the next question is: how could we determine the length of the sequence of
        each element as we came to that element? A: If we knew, for each element,
        whether there existed in the list the previous element and next
        element, we could traverse each sequence as we came to each element
        to determine its length.
        
        But we don't actually need to check *every* element as we come to
        it, but rather just
        one per sequence, and we'd get the answer (the length of the 
        longest sequence). So which element of each sequence should we
        check?  The only ones we know will exist in every sequence are
        the first and last elements of the sequence because we can't just say
        'oh we'll use the second element' if we don't know if all the
        sequences are at least 2 long.
        So if we're only checking the length of a sequence for the first
        element, then we need to know, when we get to each element in the
        original list, whether it's the first of a sequence or not. And we
        can do that by using our dict to check if the number one less than it
        is in the list or not.

        So, what we need to know:
        - For each element, the index of an element with a value of 1 less 
          than it, if such an element exists
        - For each element, the index of an element with a value 1 more than
          it, if it exists.
        - We could do this with one dict mapping from value to index.
        """"""
        num_set = set(nums)
        longest_length = 0
        for n in nums:
            if n - 1 in num_set:
                continue
            length = 0
            j = n
            while j in num_set:
                length += 1
                j += 1
            longest_length = max(length, longest_length)
        return longest_length
"
jqF73qxa,Python super,alaex777,Python,Sunday 1st of October 2023 01:49:54 PM CDT,"# 01.10.23

class Phone:
    def __init__(self, price: float, name: str) -> None:
        self.price = price
        self.name = name

    def __repr__(self) -> str:
        return f'{self.name} for {self.price}$'

'''
super keyword in python allows you to get parent methods and
fields inside child class. It is a usefull instrument, when
you want to reduce code duplication.
'''

class IPhone(Phone):
    def __init__(
        self,
        price: float, 
        name: str,
        ios_version: str
    ) -> None:
        super().__init__(price, name)
        self.ios_version = ios_version

    def __repr__(self) -> str:
        return f'{super().__repr__()} with {self.ios_version}'


print(IPhone(name='iphone 15', price=1299.99, ios_version='ios 16'))
# iphone 15 for 1299.99$ with ios 16
"
WFVSQfZi,Англо-русский словарь,DaniDori,C++,Sunday 1st of October 2023 01:18:42 PM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <windows.h>
using namespace std;

struct DictionaryEntry {
    char englishWord[50]; // английское слово
    char russianWord[50];  // русское слово
};

// 2.6.1. Преобразование тестовых данных из текстового файла в двоичный файл.
void convertTextToBinary(const string& textFilename, const string& binaryFilename) {
    ifstream infile(textFilename);
    ofstream outfile(binaryFilename, ios::binary);

    if (!infile.is_open() || !outfile.is_open()) {
        cerr << ""Ошибка при открытии файлов."" << endl;
        return;
    }

    string eng, rus;
    //Закидываем по одному слову(англ-рус) из файла ввода в файл вывода
    while (infile >> eng >> rus) {
        DictionaryEntry entry;
        strncpy(entry.englishWord, eng.c_str(), sizeof(entry.englishWord));
        strncpy(entry.russianWord, rus.c_str(), sizeof(entry.russianWord));
        // два слова пишем в файл вывода
        outfile.write(reinterpret_cast<char*>(&entry), sizeof(entry));
        //reinterpret_cast<char*>(&entry) - переводит тип с указателя на массив char
    }

    infile.close();
    outfile.close();
}

// 2.6.2. Преобразование данных из двоичного файла в текстовый.
void convertBinaryToText(const string& binaryFilename, const string& textFilename) {
    ifstream infile(binaryFilename, ios::binary);
    ofstream outfile(textFilename);

    if (!infile.is_open() || !outfile.is_open()) {
        cerr << ""Ошибка при открытии файлов."" << endl;
        return;
    }

    DictionaryEntry entry;
    while (infile.read(reinterpret_cast<char*>(&entry), sizeof(entry))) {
        outfile << entry.englishWord << "" "" << entry.russianWord << ""\n"";
    }

    infile.close();
    outfile.close();
}

// 2.6.3. Вывод всех записей двоичного файла.
void displayAllEntries(const string& binaryFilename) {
    ifstream infile(binaryFilename, ios::binary);

    if (!infile.is_open()) {
        cerr << ""Ошибка при открытии файла."" << endl;
        return;
    }

    DictionaryEntry entry;
    while (infile.read(reinterpret_cast<char*>(&entry), sizeof(entry))) {
        cout << entry.englishWord << "" - "" << entry.russianWord << ""\n"";
    }

    infile.close();
}

// 2.6.4. Доступ к записи по её порядковому номеру в файле.
DictionaryEntry getEntryByIndex(const string& binaryFilename, size_t index) {
    ifstream infile(binaryFilename, ios::binary);

    if (!infile.is_open()) {
        cerr << ""Ошибка при открытии файла."" << endl;
    }
    //перемещает указатель старта чтения на необходимое место(пропускает ненужное)
    infile.seekg(index * sizeof(DictionaryEntry));
    DictionaryEntry entry;
    infile.read(reinterpret_cast<char*>(&entry), sizeof(entry));

    infile.close();
    return entry;
}

// 2.6.5. Удаление записи с заданным значением ключа.
void deleteEntryByKey(const string& binaryFilename, const string& key) {
    ifstream infile(binaryFilename, ios::binary);
    if (!infile.is_open()) {
        cerr << ""Ошибка при открытии файла."" << endl;
        return;
    }
    //закидываем пары слов из файла в вектор(массив-список)
    vector<DictionaryEntry> entries;
    DictionaryEntry entry;
    while (infile.read(reinterpret_cast<char*>(&entry), sizeof(entry))) {
        entries.push_back(entry);
    }

    infile.close();

    for (size_t i = 0; i < entries.size(); ++i) {
        if (string(entries[i].englishWord) == key) {
            //найденное слово перемещаем в конец списка
            entries[i] = entries.back();
            //удаляем последний элемент списка
            entries.pop_back();
            break;
        }
    }
    //перезаписываем файл
    ofstream outfile(binaryFilename, ios::binary);
    for (const auto& e : entries) {
        outfile.write(reinterpret_cast<const char*>(&e), sizeof(e));
    }

    outfile.close();
}

// 1. Сформировать список английских слов, начинающихся с указанной буквы и их русский перевод.
void listWordsByLetter(const string& binaryFilename, char letter) {
    ifstream infile(binaryFilename, ios::binary);
    if (!infile.is_open()) {
        cerr << ""Ошибка при открытии файла."" << endl;
        return;
    }

    DictionaryEntry entry;
    while (infile.read(reinterpret_cast<char*>(&entry), sizeof(entry))) {
        //если первая буква в английском слове совпала с искомой
        if (entry.englishWord[0] == letter) {
            cout << entry.englishWord << "" - "" << entry.russianWord << ""\n"";
        }
    }

    infile.close();
}

// 2. Обновить запись, записав новый вариант русского перевода по заданному слову.
void updateTranslation(const string& binaryFilename, const string& key, const string& newTranslation) {
    fstream file(binaryFilename, ios::binary | ios::in | ios::out);
    if (!file.is_open()) {
        cerr << ""Ошибка при открытии файла."" << endl;
        return;
    }

    DictionaryEntry entry;
    while (file.read(reinterpret_cast<char*>(&entry), sizeof(entry))) {
        if (string(entry.englishWord) == key) {
            //Копируем в найденную пару новое русское слово
            strncpy(entry.russianWord, newTranslation.c_str(), sizeof(entry.russianWord));
            //мотает курсор работы с файлом на один шаг назад
            file.seekp(static_cast<long long>(file.tellg()) - sizeof(entry));
            file.write(reinterpret_cast<const char*>(&entry), sizeof(entry));
            break;
        }
    }

    file.close();
}

void binaryMenu() {
    string filename;
    cout << ""Введите имя двоичного файла: "";
    cin >> filename;

    while (true) {
        cout << ""\n--- Меню ---\n"";
        cout << ""1. Преобразовать текстовый файл в двоичный\n"";
        cout << ""2. Преобразовать двоичный файл в текстовый\n"";
        cout << ""3. Показать все записи из двоичного файла\n"";
        cout << ""4. Доступ к записи по её порядковому номеру\n"";
        cout << ""5. Удалить запись по английскому слову\n"";
        cout << ""6. Показать слова, начинающиеся с заданной буквы\n"";
        cout << ""7. Обновить русский перевод для заданного слова\n"";
        cout << ""8. Выход\n"";
        cout << ""Выберите действие: "";

        int choice;
        cin >> choice;
        cin.ignore(99999, '\n');  // очистка буфера

        switch (choice) {
        case 1: {
            string textFilename;
            cout << ""Введите имя текстового файла для преобразования: "";
            cin >> textFilename;
            convertTextToBinary(textFilename, filename);
            cout << ""успешно!\n "";
            break;
        }
        case 2: {
            string textFilename;
            cout << ""Введите имя текстового файла для сохранения: "";
            cin >> textFilename;
            convertBinaryToText(filename, textFilename);
            break;
        }
        case 3: {
            cout << ""Все слова из двоичного файла: \n"";
            displayAllEntries(filename);
            break;
        }
        case 4: {
            size_t index;
            cout << ""Введите порядковый номер записи: "";
            cin >> index;
            DictionaryEntry entry = getEntryByIndex(filename, index);
            cout << entry.englishWord << "" - "" << entry.russianWord << ""\n"";
            break;
        }
        case 5: {
            string key;
            cout << ""Введите английское слово для удаления: "";
            cin >> key;
            deleteEntryByKey(filename, key);
            break;
        }
        case 6: {
            char letter;
            cout << ""Введите английскую букву: "";
            cin >> letter;
            listWordsByLetter(filename, letter);
            break;
        }
        case 7: {
            string key, translation;
            cout << ""Введите английское слово: "";
            cin >> key;
            cout << ""Введите новый русский перевод: "";
            cin >> translation;
            updateTranslation(filename, key, translation);
            break;
        }
        case 8:
            return;
        default:
            cout << ""Неверный выбор.\n"";
        }
    }
}

int main() {
    //Подключаем русский
    SetConsoleOutputCP(1251);
    SetConsoleCP(1251);
    binaryMenu();
    return 0;
}
"
