id,title,username,language,date,content
j5qtk3yb,2024-02-20_stats.json,rdp_snitch,JSON,Tuesday 20th of February 2024 06:15:08 PM CDT,"{
  ""ip"": {
    ""185.170.144.113"": 3,
    ""188.117.146.202"": 2,
    ""194.165.16.73"": 2,
    ""27.8.44.19"": 1,
    ""45.227.254.8"": 2,
    ""198.235.24.51"": 3,
    ""123.56.20.194"": 2,
    ""87.251.75.145"": 1,
    ""80.66.76.80"": 4,
    ""68.183.175.171"": 1,
    ""40.71.20.231"": 1,
    ""81.19.135.47"": 3,
    ""87.251.75.120"": 2,
    ""45.83.64.130"": 1,
    ""61.91.43.232"": 1,
    ""205.210.31.15"": 3,
    ""178.128.15.195"": 4,
    ""185.198.240.20"": 1,
    ""58.218.204.183"": 3,
    ""194.165.16.78"": 2,
    ""212.70.149.142"": 3,
    ""194.165.16.37"": 2,
    ""36.91.222.100"": 1,
    ""45.131.195.22"": 1,
    ""120.240.145.8"": 1,
    ""118.194.238.196"": 1,
    ""198.235.24.193"": 3,
    ""62.204.41.107"": 4,
    ""167.94.146.57"": 1,
    ""84.201.2.2"": 2,
    ""152.89.198.42"": 1,
    ""185.170.144.3"": 1,
    ""45.131.195.114"": 1,
    ""205.210.31.250"": 3,
    ""152.32.206.51"": 1
  },
  ""asn"": {
    ""AS197414"": 4,
    ""AS31242"": 2,
    ""AS48721"": 6,
    ""AS4837"": 1,
    ""AS267784"": 2,
    ""AS396982"": 12,
    ""AS37963"": 2,
    ""AS208091"": 7,
    ""AS14061"": 5,
    ""AS8075"": 1,
    ""AS209588"": 3,
    ""AS208843"": 1,
    ""AS7470"": 1,
    ""AS62240"": 3,
    ""AS4134"": 3,
    ""AS204428"": 3,
    ""AS7713"": 1,
    ""AS56040"": 1,
    ""AS135377"": 2,
    ""AS59425"": 4,
    ""AS398705"": 1,
    ""AS44066"": 2,
    ""AS57523"": 1
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 11,
    ""P4 Sp. z o.o."": 2,
    ""Flyservers S.A."": 11,
    ""China Unicom Chongqing Province Network"": 1,
    ""Google LLC"": 12,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""DigitalOcean, LLC"": 5,
    ""Microsoft Corporation"": 1,
    ""INTERNET-RESEARCH"": 1,
    ""True Internet Corporation CO. Ltd."": 1,
    ""Clouvider Limited"": 1,
    ""Chinanet"": 3,
    ""SS-Net"": 3,
    ""PT Telekomunikasi Indonesia"": 1,
    ""VPN"": 2,
    ""China Mobile communications corporation"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Horizon LLC"": 4,
    ""Censys, Inc."": 1,
    ""diva-e Datacenters GmbH"": 2,
    ""Chang Way Technologies Co. Limited"": 1
  },
  ""org"": {
    ""Xhostis"": 4,
    ""TKP S.A."": 2,
    ""Flyservers S.A"": 6,
    ""Unknown"": 3,
    ""UAB Host Baltic"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Aliyun Computing Co., LTD"": 2,
    ""Xhost Internet Solutions"": 7,
    ""DigitalOcean, LLC"": 1,
    ""Microsoft Azure Cloud (eastus)"": 1,
    ""Alviva Holding Limited"": 3,
    ""True Internet Corporation CO. LTD"": 1,
    ""Digitalocean"": 4,
    ""Chinanet JS"": 3,
    ""4Media Ltd"": 3,
    ""Telekomunikasi Indonesia"": 1,
    ""VPN-Consumer-US"": 2,
    ""China Mobile"": 1,
    ""Ucloud Information Technology"": 2,
    ""Horizon LLC"": 4,
    ""Censys, Inc."": 1,
    ""www.accelerated.de"": 2,
    ""Starcrecium Limited"": 1
  },
  ""regionName"": {
    ""North Holland"": 11,
    ""Silesia"": 2,
    ""Kaunas"": 6,
    ""Chongqing"": 1,
    ""Vilnius"": 2,
    ""California"": 17,
    ""Beijing"": 2,
    ""Virginia"": 2,
    ""Hesse"": 6,
    ""Land Berlin"": 1,
    ""Bangkok"": 1,
    ""New Jersey"": 3,
    ""Jiangsu"": 3,
    ""Plovdiv"": 3,
    ""Jakarta"": 1,
    ""Guangdong"": 1,
    ""Metro Manila"": 1,
    ""Moscow"": 5
  },
  ""country"": {
    ""The Netherlands"": 11,
    ""Poland"": 2,
    ""Lithuania"": 8,
    ""China"": 7,
    ""United States"": 22,
    ""Germany"": 7,
    ""Thailand"": 1,
    ""Bulgaria"": 3,
    ""Indonesia"": 1,
    ""Philippines"": 1,
    ""Russia"": 5
  },
  ""account"": {
    ""Domain"": 10,
    ""Administrator"": 4,
    ""Test"": 15,
    ""Administr"": 9,
    ""vRgYocSnN"": 1,
    ""PjsPNF"": 1,
    ""rciYAM"": 1,
    ""hello"": 6,
    ""beio"": 1,
    ""user"": 1,
    ""(empty)"": 6,
    ""HqGzVYkOp"": 1,
    ""HNVoTS"": 1,
    ""GgomRE"": 1,
    ""yubrhw31"": 4,
    ""aBPAJpNXr"": 1,
    ""RDdtHb"": 1,
    ""hBJNIS"": 1,
    ""mrWLJvZAJ"": 1,
    ""Pvtrbq"": 1,
    ""RBAWNO"": 1
  },
  ""keyboard"": {
    ""Unknown"": 68
  },
  ""client_build"": {
    ""Unknown"": 68
  },
  ""client_name"": {
    ""Unknown"": 68
  },
  ""ip_type"": {
    ""Unknown"": 39,
    ""hosting"": 19,
    ""hosting & proxy"": 8,
    ""mobile"": 1,
    ""proxy"": 1
  }
}"
WF4UZufs,mc compose example,hpf3,YAML,Tuesday 20th of February 2024 05:51:09 PM CDT,"version: ""3""

services:
  mc:
    #my favorite docker mc server, docs can be found at: https://docker-minecraft-server.readthedocs.io/en/latest/
    image: itzg/minecraft-server
    ports:
      - ""25565:25565/tcp""  #this is the standard mc server port, this and the one below tell the server to link/open it to the host
      - ""24454:24454/udp""  #this is for the vc mod, the line can be removed if you dont use it
    environment:
      EULA: ""TRUE""
      TYPE: ""FORGE"" #this type sets up a basic forge server for the minecraft version below
      VERSION: ""1.19.2""
      MOTD: ""Haven: CaveBlock 1.2.7"" #what shows up under the server-name when you add a server to the server list
      MEMORY: ""16G"" #how much memory to use, probably want to change this
      USE_AIKAR_FLAGS: ""true"" #some usefull java optimizations for mc, in very rare occasions this can cause issues... or so ive heard, haven't encountered any yet
      
      #generic packs are zip files that are designed to be unzipped over an initialized forge server, many serverpacks distributed nowadays are like this, but you should double check
      GENERIC_PACKS_PREFIX: ""/archive/"" #the folder path that was the target of the bind farther down, don't change this
      GENERIC_PACKS_SUFFIX: "".zip""  #we are looking for .zip files
      GENERIC_PACKS: ""ServerFiles"" #this is the name of the server-pack that we downloaded and renamed, with the above, it will be seen as /archive/ServerFiles.zip
      #if desired, you can add aditional packs, ie. for custom configs, by adding additional names to the GENERIC_PACKS var sepperated by a ',', resulting in something like ""ServerFiles,MyCustomPack""

      ALLOW_FLIGHT: ""true"" #I enable this since some mods will trigger the anti-flight detection and kick you from the server
      LEVEL_TYPE: ""skyblockbuilder:skyblock"" #important for modpacks like this one, will cause the skyblock/stoneblock stuff to be used
      WHITELIST: | #this is where you would set your whitelist players, make sure to maintain the spaces before, as this is a yaml file and whitespace matters
        user1
        user2
        user3
      EXISTING_WHITELIST_FILE: ""SYNC_FILE_MERGE_LIST"" #will merge the list with the one that is already there
      OPS: | #same as the whitelist, but for the ops
        user1
        user2
        user3
      EXISTING_OPS_FILE: ""SYNC_FILE_MERGE_LIST""
      STOP_SERVER_ANNOUNCE_DELAY: 30 #this is how long the server will wait in seconds after being told to shutdown by docker, helps prevent confusion if you have an auto-update system, but ofc it will be slower to shutdown
    tty: true
    stdin_open: true
    restart: unless-stopped #if the server crashes, or the host restarts, the server will restart itself
    stop_grace_period: 1m30s #this is how long docker will wait for the server to fully stop before forcefully killing it
    volumes:
      - type: bind #this links to a folder on the host machine
        source: /home/hpf3/minecraftBackups/Modpacks/Haven-CaveBlock #this is where i keep my server-pack .zip
        target: /archive #this is the path that the folder will have inside the container, don't change this
        read_only: true #there is no reason for the server to write to the folder, so i leave it as read-only for safety
      - type: volume #this is a virtual disk, it is easy to manage as far as deleting and keeping it seperate, but if you plan to mess with the files often, i recommend using a bind instead
        source: Data #this is the name of the volume created at the bottom of the file
        target: /data #this is the path where the server creates all of its files, don't change it
        read_only: false

        
volumes:
  Data:
    external: false #this means that docker will create(if it doesn't already exist) a new volume named something like ""StackName-Data"" for its use"
j0gZi7Yn,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Tuesday 20th of February 2024 05:41:28 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_808270.pdf

Working as of:
20 February 2024"
gW66gzt0,Bastion Reciever,Alexr360,Lua,Tuesday 20th of February 2024 05:19:12 PM CDT,"local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
modem.open(15) -- Open 43 so we can receive replies

-- Send our message
modem.transmit(43, 15, ""Bastion Network Online"")

-- And wait for a reply
local event, side, channel, replyChannel, message, distance
repeat
  event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
until channel == 15
    
-- Process the received message based on its content
if message == ""Bridge"" then
	modem.transmit(43, 15, ""Toggling Bridge Gate"")
	print(""Toggling Bridge Gate"")
    redstone.setOutput(""left"", true)  -- Emit a redstone signal to the right
    os.sleep(1)  -- Keep the signal for 1 seconds
    redstone.setOutput(""left"", false)  -- Turn off the redstone signal

elseif message == ""Courtyard"" then
	modem.transmit(43, 15, ""Toggling Courtyard Gate"")
	print(""Toggling Courtyard Gate"")
    redstone.setOutput(""right"", true)  -- Emit a redstone signal to the right
    os.sleep(1)  -- Keep the signal for 1 seconds
    redstone.setOutput(""right"", false)  -- Turn off the redstone signal

elseif message == ""Remote Connected"" then
	modem.transmit(43, 15, ""Connected to Bastion Network"")
	print(""Remote Connected"")

elseif message == ""Lockdown"" then
	modem.transmit(43, 15, ""Enabling Lockdown"")
	print(""Enabling Lockdown"")
    redstone.setOutput(""front"", true)  -- Emit a redstone signal to the right
    os.sleep(1)  -- Keep the signal for 1 seconds
    redstone.setOutput(""front"", false)  -- Turn off the redstone signal
else
  print(""Received a reply with an unrecognized option:"", tostring(message))
end
os.reboot();"
EYsBgP7Y,Restart Alexa Media Player every morning at 5:30,energywave,YAML,Tuesday 20th of February 2024 05:10:23 PM CDT,"  # Ricarica integrazione Alexa tutte le notti
  - id: 7a85ce07-9175-4f67-a728-c87968b5a80c
    alias: Alexa - Fix - Riavvia integrazione
    trigger:
      - platform: time_pattern
        hours: ""5""
        minutes: ""30""
    action:
      - service: homeassistant.reload_config_entry
        data: {}
        target:
          entity_id: media_player.pian_terreno  "
uhBz6kyr,Review Pastes,xxsa,PHP,Tuesday 20th of February 2024 05:09:28 PM CDT,https://pastes.io/pages/pastebin-alternative
Czt0xUgp,Bastion Remote,Alexr360,Lua,Tuesday 20th of February 2024 05:09:10 PM CDT,"local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
modem.open(43) -- Open 43 so we can receive replies

modem.transmit(15, 43, ""Remote Connected"")

local event, side, channel, replyChannel, message, distance
repeat
  event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
until channel == 43

print(tostring(message))


-- Send our message
print(""Enter your message:"")
local userMessage = read()
modem.transmit(15, 43, userMessage)

-- And wait for a reply
local event, side, channel, replyChannel, message, distance
repeat
  event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
until channel == 43

print(tostring(message))"
teD89ALd,LLM Error,PyNoob1,Python,Tuesday 20th of February 2024 05:00:38 PM CDT,"'
This the parent widget code to which I want to add the web scraper that i have also provided

# Parent Widget Code:

#!/usr/bin/env python3

import tkinter as tk
from tkinter import messagebox, PhotoImage, font
from tkinter.ttk import Frame, Button
from io import StringIO
import sys
from ttkthemes import ThemedTk
from selenium import webdriver
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.common.keys import Keys
from bs4 import BeautifulSoup
import time

# Function to redirect console output to text widget
class TextRedirector(object):
    def __init__(self, widget):
        self.widget = widget

    def write(self, str):
        self.widget.insert(tk.END, str)
        self.widget.see(tk.END)

    def flush(self):
        # This could be left empty as Tkinter's Text widget doesn't need flushing
        pass

# Your functions
def get_profile():
    profile = webdriver.FirefoxProfile()
    profile.set_preference(""browser.privatebrowsing.autostart"", True)
    return profile

def scroll_to_end(browser):
    scroll_pause_time = 5
    last_height = browser.execute_script(""return document.body.scrollHeight"")

    while True:
        browser.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")
        time.sleep(scroll_pause_time)
        new_height = browser.execute_script(""return document.body.scrollHeight"")
        if new_height == last_height:
            break
        last_height = new_height

def save_html(browser, path):
    html_content = browser.page_source
    soup = BeautifulSoup(html_content, 'html.parser')
    pretty_html = soup.prettify()

    with open(path, 'w', encoding='utf-8') as f:
        f.write(pretty_html)

def scrape_website():
    options = Options()
    options.profile = get_profile()
    browser = webdriver.Firefox(options=options)
    browser.get(""https://www.oddsportal.com/matches/football/20240222/"")
    
    scroll_to_end(browser)
    save_html(browser, r""/home/harshad/Projects/Predictor/Football Predictor/research/website_soup.txt"")
    
    browser.quit()
    print(""Website scraped successfully!"")

def refresh_selections():
    print(""Selections updated successfully!"")

def predict():
    print(""Prediction completed successfully!"")

# Create the main window
root = ThemedTk(theme=""arc"")
root.title(""Football Predictor"")

# Create a text widget
output = tk.Text(root)
output.pack()

# Redirect console output to text widget
sys.stdout = TextRedirector(output)

# Create a frame for the buttons
button_frame = Frame(root)
button_frame.pack(fill=tk.BOTH, expand=True)

# Create buttons for each action
scrape_button = Button(button_frame, text=""Scrape Website"", command=scrape_website)
update_button = Button(button_frame, text=""Refresh Selections"", command=refresh_selections)
predict_button = Button(button_frame, text=""Predict"", command=predict)

# Add the buttons to the window
scrape_button.grid(row=0, column=0, sticky='ew')
update_button.grid(row=1, column=0, sticky='ew')
predict_button.grid(row=2, column=0, sticky='ew')

# Configure the rows and columns for responsiveness
button_frame.columnconfigure(0, weight=1)
for i in range(3):
    button_frame.rowconfigure(i, weight=1)

# Start the main loop
root.mainloop()

above is the parent code. 

the below is an existing code that scrapes the data from the website:

# Existing Scraper Code

def parse_data(url, return_urls=False):
    print(f'Parsing URL: {url}\n')
    browser = create_driver()
    browser.get(url)
    # Wait for the first match element to be present
    wait = WebDriverWait(browser, 20)
    # Wait for the team names to be present
    team_name_class = ""participant-name""
    wait.until(EC.presence_of_element_located((By.CLASS_NAME, team_name_class)))

    # Now, check if the first match element contains match data
    match_element_class = ""border-black-borders.group.flex""  # Class of the match element
    first_match_element = browser.find_element(By.CSS_SELECTOR, f"".{match_element_class}"")
    match_data_indicator = ""participant-name""  # Class indicating match data
    wait.until(EC.presence_of_element_located((By.CLASS_NAME, match_data_indicator)))

    # ########## For page to scroll to the end ###########
    scroll_pause_time = 4
    try:
        # Get scroll height
        last_height = browser.execute_script(""return document.body.scrollHeight"")

        while True:
            import time
            # Scroll down to bottom
            browser.execute_script(""window.scrollTo(0, 0);"")  # Scroll to the top
            # Wait to load page
            time.sleep(1)  # Wait briefly
            browser.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")  # Scroll down
            time.sleep(scroll_pause_time)
            # Calculate new scroll height and compare with last scroll height
            new_height = browser.execute_script(""return document.body.scrollHeight"")
            if new_height == last_height:
                break
            last_height = new_height
        # ########## For page to scroll to the end ###########
        # If browser stalls and gives a timeout exception, refresh the browser
    except TimeoutException:
        print(""Timeout exception occurred, refreshing the page..."")
        browser.refresh()

    html_content = browser.page_source

    soup = bs(html_content, 'html.parser')
    pretty_html = soup.prettify()

    with open(r""C:\Users\harshad\Documents\Harshad Projects\Python Projects\Football Predictor\Files\z.Research\website_soup.txt"", 'w', encoding='utf-8') as f:
        f.write(pretty_html)

    # Using lxml and XPath
    tree = html.fromstring(html_content)

    # Extracting the date from the header
    date = tree.xpath('//h1[@id=""next-matches-h1""]/text()')[0]

    # Splitting the date string to get the date part
    date = date.split("", "")[-1]

    data = []

    # Initialize initial values for Country and League
    current_country = None
    current_league = None

    # Extracting match rows
    match_rows = tree.xpath('//div[contains(@class, ""eventRow"")]')

    # Iterate through each match row
    for match_row in match_rows:
        country = match_row.xpath('.//a[contains(@class, ""font-normal"")]/p[contains(@class, ""truncate"")]/text()')
        league = match_row.xpath('.//a[contains(@class, ""truncate"")]/text()')

        if country:
            current_country = country[0].strip()
        else:
            country = [current_country]

        if league:
            current_league = league[0].strip()
        else:
            league = [current_league]

        # Extract Game Teams
        team1_elements = match_row.xpath('.//a[starts-with(@href, ""/football/"")][1]/div/p/text()')
        team1 = team1_elements[0].strip() if team1_elements else ''
        team2_elements = match_row.xpath('.//a[starts-with(@href, ""/football/"")][2]/div/p/text()')
        team2 = team2_elements[0].strip() if team2_elements else ''
        game_teams_str = f""{team1} - {team2}""

        
        time = match_row.xpath('.//div/p/text()')[0].strip()
        score1_xpath = './/div[contains(@class, ""ml-auto mr-3 flex font-bold"")]/text()'
        score2_xpath = './/div[contains(@class, ""ml-auto mr-3 flex font-bold font-bold"")]/text()'
        # Extract the scores
        scores_xpath = './/a/div[contains(@class, ""ml-auto mr-3 flex font-bold"")]/text()'
        scores = match_row.xpath(scores_xpath)
        scores = [score.strip() for score in scores]

        if len(scores) >= 2:
            score1, score2 = scores[:2]
            score = f""{score1}:{score2}""
        else:
            score = None
        # Check if ""&nbsp;"" is in the score
        if score and ""&nbsp;"" in score:
            try:
                score1_xpath = './/div[contains(@class, ""ml-auto mr-3 flex font-bold next-m:!hidden"")]/text()'
                score2_xpath = './/div[contains(@class, ""ml-auto mr-3 flex font-bold next-m:!hidden font-bold"")]/text()'
                # Extract the scores
                score1 = match_row.xpath(score1_xpath)[0]
                print(""Score1 List: "", score1)
                score1 = score1[0] if score1 else None

                score2 = match_row.xpath(score2_xpath)[0]
                print(""Score2 List: "", score2)
                score2 = score2[0] if score2 else None

                if score1 and score2:
                    score = f""{score1.strip()}:{score2.strip()}""
            except IndexError:
                score_list = match_row.xpath('//div[@data-v-0398e93e=""""]/p/text()')
                print(""Score List: "", score_list)
                score = score_list[0].strip() if score_list else None
        # Extract odds and handle the case where odds are not present
        odds = match_row.xpath('.//p[contains(@class, ""height-content"")]/text()')
        odds = [s.strip() for s in odds if s.strip().replace('.', '', 1).isdigit()]
        home_odds = odds[0] if odds else None
        draw_odds = odds[1] if len(odds) > 1 else None
        away_odds = odds[2] if len(odds) > 2 else None

        # Append extracted data to the data list
        data.append({
            ""country"": country[0],  # Take the first element as the value
            ""league"": league[0],  # Take the first element as the value
            ""date"": date,
            ""time"": time,
            ""game"": game_teams_str,
            ""score"": score,
            ""home_odds"": home_odds,
            ""draw_odds"": draw_odds,
            ""away_odds"": away_odds
        })

        # Data validation
    if not data:
        print(f""No valid data extracted for URL: {url}"")
        return None  # Skip this URL and return None

    # Create a DataFrame from the data list
    df = pd.DataFrame(data)

    # Convert the DataFrame to a formatted table
    table = tabulate(df, headers='keys', tablefmt='pretty')
    print(f""Table for URL: {url}\n{table}"")

    # Return the DataFrame for this URL
    return df

    I want to refactor this scraper to the parent widget code.

    Please provide me the refactored code.
    '"
aZYzL6n8,Converte link do GoogleDrive para link direto.,RibaSoft,JavaScript,Tuesday 20th of February 2024 04:45:46 PM CDT,"  function ConverteLink(){
	var Edit = document.getElementById('edit');
	var Texto = Edit.value;
     
  	if(Texto.substring(0, 32) != 'https://drive.google.com/file/d/'){
		alert('Link Inválido!');		
		return;
	}
      
	var T = 'https://drive.google.com/file/d/';
	var Inicio = T.length;
	var Fim = Texto.indexOf('/view?usp=sharing');
	var ID = Texto.substring(Inicio, Fim);
	var NovoLink = 'https://docs.google.com/uc?export=download&id=' + ID;
	Edit.value = NovoLink;
   	alert('Convertido!');
  }"
THfJe585,auto Spirit soul steel ingot Ragna7 v1.6,mickael49300_fr,Lua,Tuesday 20th of February 2024 04:42:29 PM CDT,"-- fix drop iron
print("" auto Spirit soul steel ingot Ragna7 "")
print("" programme V1.6"")
print("" by Mickael49300_fr "")
print("" en attente de ressource "")
while true do
sleep(.1)

  while rs.getInput(""back"") do -- attente du signal de redstone pour lancer le programe
-- chargement des items
print("" lancement du programme "")
print("" 16 Burnt Otherstone"")
turtle.select(1)
turtle.suck(16) -- prend les 16 Burnt Otherstone

turtle.up()
turtle.up()
turtle.up()

turtle.forward()
turtle.forward()
turtle.turnRight()
print("" drop des 16 Burnt Otherstone"")
turtle.dropDown() -- drop les 16 Burnt Otherstone

turtle.forward()
turtle.forward()
turtle.turnRight()
turtle.down()
sleep(35)
-- craft du soul powder block
print("" craft du soul powder"")
turtle.suckDown(4)
turtle.select(2)
turtle.suckDown(4)
turtle.select(5)
turtle.suckDown(4)
turtle.select(6)
turtle.suckDown(4)
turtle.select(1)
turtle.craft() -- craft les 4 soul powder block
-- fin du craft
print("" prend le reste des items"")
turtle.forward()
turtle.forward()

turtle.select(2)
turtle.suckDown(1) -- prend 1 soul soil

turtle.forward()
turtle.select(3)
turtle.suckDown(1) -- prend 1 iron ingot 

turtle.forward()
turtle.select(4)
turtle.suckDown(1) -- prend 1 flint and steel
print("" pose les bloc pour le rituel"")

-- modif

turtle.forward()
turtle.forward()
turtle.forward()
turtle.turnRight()
turtle.up()
turtle.forward()
turtle.forward()
turtle.turnRight()
turtle.down()
turtle.down()
turtle.select(1)
turtle.place() -- place 1 soul powder block
turtle.turnRight()
turtle.place() -- place 1 soul powder block
turtle.turnRight()
turtle.place() -- place 1 soul powder block
turtle.turnRight()
turtle.place() -- place 1 soul powder block
turtle.turnRight()
turtle.up()
turtle.select(2)
turtle.placeDown() -- place 1 soul soil
turtle.up()

-- fin modif

turtle.select(4)
turtle.placeDown() -- utilise le flint and steel

turtle.select(3)
turtle.dropDown() -- drop iron ingot
print("" retour maison et depose du flint and steel"")
turtle.forward()
turtle.forward()
turtle.down()
turtle.select(4)
turtle.dropDown() -- drop le flint and steel dans le coffre

turtle.forward()
turtle.forward()
turtle.forward()

turtle.down()
turtle.down()
sleep(1)
print("" en attente de ressource"")
   
  end
end"
Pue7egLA,auto build Neural Machine Frame pour Ragnamod 7,mickael49300_fr,Lua,Tuesday 20th of February 2024 04:37:02 PM CDT,"print("" auto build Neural Machine Frame pour Ragnamod 7 "")
print("" programme V.1 "")
print("" by Mickael49300_fr "")
print("" en attente de ressource "")
while true do
sleep(.1)

  while rs.getInput(""back"") do -- attente du signal de redstone pour lancer le programe
-- chargement des block
print("" chargement des block "")
sleep(1)
turtle.select(1) -- Steel Casing
turtle.suck(1)
turtle.select(2) -- Black Plastic Block
turtle.turnLeft()
turtle.suck(26)
turtle.turnLeft()
turtle.turnLeft()
turtle.select(3) -- Redstone Servo
turtle.suck(1)
turtle.turnLeft()

-- construction du Neural Machine Frame
print("" construction du Neural Machine Frame"")

-- 1er etage

print("" build du 1er etage "")
turtle.up()
turtle.up()
turtle.up()
turtle.select(2)
turtle.forward()
turtle.turnRight()
turtle.placeDown()  -- pose le 1er Neural Machine Frame 
turtle.forward()
turtle.turnLeft()
turtle.placeDown()  -- pose le 2eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 3eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 4eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 5eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 6eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 7eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 8eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 9eme Neural Machine Frame


-- 2eme etage

print("" build du 2eme etage "")
turtle.up()
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 10eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 11eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 12eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 13eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 14eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 15eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 16eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 17eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.turnLeft()
turtle.forward()
turtle.select(1)
turtle.placeDown()  -- pose le Steel Casing
turtle.select(2)
turtle.forward()

-- 3eme etage

print("" build du 3eme etage "")
turtle.up()
turtle.turnLeft()
turtle.placeDown()  -- pose le 18eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 19eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 20eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 21eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 22eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 23eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 24eme Neural Machine Frame
turtle.forward()
turtle.placeDown()  -- pose le 25eme Neural Machine Frame
turtle.turnLeft()
turtle.forward()
turtle.turnLeft()
turtle.forward()
turtle.placeDown()  -- pose le 26eme Neural Machine Frame

-- drop du Gaia Spirit
print("" drop du Redstone"")
turtle.up()
turtle.select(3)
turtle.dropDown()
  -- retour vers la zone d'attente
print("" pause de 15sec "")  
sleep(10)
print("" retour au point de depart "")
turtle.turnLeft()
turtle.forward()
turtle.forward()
turtle.turnLeft()
turtle.turnLeft()
turtle.down()
turtle.down()
turtle.down()
turtle.down()
turtle.down()
turtle.down()
sleep(1)
print(""en attente de ressource"")
   
  end
end"
iHXsjZki,Simple parsing of text formatting,RedstoneHair,Python,Tuesday 20th of February 2024 04:12:31 PM CDT,"from html.parser import HTMLParser
from collections import deque

fonts = ['regular', 'bold', 'italic', 'bold_italic']
colors = ['white', 'yellow']
color_map = {
    'attack': 'yellow',
}
gimmicks = ['solid']


class AdvancedTextParser(HTMLParser):
    def __init__(self):
        super().__init__()
        self.current_font = deque(fonts[0:1])
        self.current_color = deque(colors[0:1])
        self.current_gimmick = deque(gimmicks[0:1])
        self.letters = []

    def handle_starttag(self, tag, attrs):
        if tag in fonts:
            if tag == 'italic' and 'bold' in self.current_font:
                self.current_font.append('bold_italic')
            elif tag == 'bold' and 'italic' in self.current_font:
                self.current_font.append('bold_italic')
            else:
                self.current_font.append(tag)
        elif tag in colors:
            self.current_color.append(tag)
        elif tag in color_map:
            self.current_color.append(color_map[tag])
        elif tag in gimmicks:
            self.current_gimmick.append(tag)

    def handle_endtag(self, tag):
        if tag in fonts:
            self.current_font.pop()
        elif tag in colors:
            self.current_color.pop()
        elif tag in color_map:
            self.current_color.pop()
        elif tag in gimmicks:
            self.current_gimmick.pop()

    def handle_data(self, data):
        for letter in data:
            self.letters.append((letter, self.current_color[-1], self.current_font[-1], self.current_gimmick[-1]))


def parse_text(text):
    parser = AdvancedTextParser()
    lines = []
    for line in text.splitlines():
        parser.feed(line)
        lines.append(parser.letters)
        parser.letters = []
    print(lines)
    return lines"
vavXjgqb,Untitled,buonaseva_fatelo,C++,Tuesday 20th of February 2024 03:53:24 PM CDT,"#include <iostream>


using namespace std;

struct Studente {
    char nome[10];
    int votoItaliano;
    int votoMatematica;
    int votoInformatica;
    float media;
};

int main() {
    const int NUM_STUDENTI = 5;
    Studente studenti[NUM_STUDENTI];

    for (int i = 0; i < NUM_STUDENTI; i++) {
        cout << ""Inserisci il nome dello studente: "";
        cin >> studenti[i].nome;

        cout << ""Inserisci il voto di italiano: "";
        cin >> studenti[i].votoItaliano;

        cout << ""Inserisci il voto di matematica: "";
        cin >> studenti[i].votoMatematica;

        cout << ""Inserisci il voto di informatica: "";
        cin >> studenti[i].votoInformatica;

        studenti[i].media = (studenti[i].votoItaliano + studenti[i].votoMatematica + studenti[i].votoInformatica) / 3.0;
    //media= (voto_materia1 + voto_materia2...) / (numero materie)
    }

    cout << ""\nNome\tItaliano\tMatematica\tInformatica\tMedia\n"";
    for (int i = 0; i < NUM_STUDENTI; i++) {
        cout << studenti[i].nome << ""\t""
             << studenti[i].votoItaliano << ""\t\t""
             << studenti[i].votoMatematica << ""\t\t""
             << studenti[i].votoInformatica << ""\t\t""
             << studenti[i].media << ""\n"";
    }

    return 0;
}
"
tVh3Z6VC,atcmd.sh,snowgum,Bash,Tuesday 20th of February 2024 03:28:23 PM CDT,"#!/bin/sh

ROOTER=/usr/lib/rooter
ATCMDD=$1

CURRMODEM=$(uci get modem.general.miscnum)
COMMPORT=""/dev/ttyUSB""$(uci get modem.modem$CURRMODEM.commport)

M2=$(echo ""$ATCMDD"" | sed -e ""s#~#\""#g"")
COPS=""+cops=?""
QOPS=""+qops?""
QSCAN=""+qscan=2""
M3=$(echo ""$M2"" | awk '{print tolower($0)}')
if `echo ${M3} | grep ""${COPS}"" 1>/dev/null 2>&1`; then
	export TIMEOUT=""120""
elif `echo ${M3} | grep ""${QOPS}"" 1>/dev/null 2>&1`; then
	export TIMEOUT=""120""
elif `echo ${M3} | grep ""${QSCAN}"" 1>/dev/null 2>&1`; then
	export TIMEOUT=""120""
else
	export TIMEOUT=""5""
fi
OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$M2"")
echo ""$OX"" > /tmp/result$CURRMODEM.at
"
sM3tVh1S,dddd,FeelKe,Python,Tuesday 20th of February 2024 03:20:14 PM CDT,"from __future__ import annotations

import time
from time import sleep
from urllib.parse import unquote
import pandas as pd
from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException, StaleElementReferenceException
from selenium.webdriver.common.by import By
from selenium.webdriver.remote.webdriver import WebDriver
from selenium.webdriver.remote.webelement import WebElement
import pathes

TABLE_COLUMNS = ['Название', 'Телефон', 'Адрес', 'Ссылка']
TABLE = {column: [] for column in TABLE_COLUMNS}


def get_element_text(driver: WebDriver, path: str) -> str:
    try:
        return driver.find_element(By.XPATH, path).text
    except NoSuchElementException:
        return ''


def move_to_element(driver: WebDriver, element: WebElement | WebDriver) -> None:
    try:
        webdriver.ActionChains(driver).move_to_element(element).perform()
    except StaleElementReferenceException:
        pass


def element_click(driver: WebDriver | WebElement, path: str) -> bool:
    try:
        driver.find_element(By.XPATH, path).click()
        return True
    except:
        return False


def main():
    search_query = 'Вкусно и точка'
    url = f'https://2gis.ru/ufa/search/{search_query}'
    driver = webdriver.Edge()
    driver.maximize_window()
    driver.get(url)
    element_click(driver, pathes.main_banner)
    element_click(driver, pathes.cookie_banner)
    count_all_items = int(get_element_text(driver, pathes.items_count))
    pages = round(count_all_items / 12 + 0.5)
    for _ in range(pages):
        main_block = driver.find_element(By.XPATH, pathes.main_block)
        count_items = len(main_block.find_elements(By.XPATH, 'div'))
        for item in range(1, count_items + 1):
            if main_block.find_element(By.XPATH, f'div[{item}]').get_attribute('class'):
                continue
            item_clicked = element_click(main_block, f'div[{item}]/div/div[2]')
            if not item_clicked:
                driver.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")
                element_click(main_block, f'div[{item}]/div/div[2]')
            element_click(driver, pathes.btnreviews)
            sleep(2)
            full_element = driver.find_element(By.XPATH, pathes.scroll)
            while True:
                prev_height = driver.execute_script(""return arguments[0].scrollHeight;"", full_element)
                driver.execute_script(""arguments[0].scrollTo(0, arguments[0].scrollHeight);"", full_element)
                time.sleep(0.5)
                new_height = driver.execute_script(""return arguments[0].scrollHeight;"", full_element)
                if new_height > prev_height:
                    pass
                else:
                    break
            title = get_element_text(driver, pathes.title)
            phone_btn_clicked = element_click(driver, pathes.phone_btn)
            phone = get_element_text(driver, pathes.phone) if phone_btn_clicked else ''
            move_to_element(driver, main_block)
            link = unquote(driver.current_url)
            address = get_element_text(driver, pathes.address)
            TABLE['Название'].append(title)
            TABLE['Телефон'].append(phone)
            TABLE['Адрес'].append(address)
            TABLE['Ссылка'].append(link)
        driver.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")
        element_click(driver, pathes.next_page_btn)
        sleep(0.5)
    driver.quit()
    pd.DataFrame(TABLE).to_excel(f""{search_query}.xlsx"")


if __name__ == '__main__':
    main()
"
d7UeTswn,minotaur sass/css,Apollyna,CSS,Tuesday 20th of February 2024 03:07:39 PM CDT,"/****************************************************************************************************/
/* DECLARE VARIABLES */
$PO-header-order: 1 !important;
/* 1 or 3 */
$PO-max-width: 900px !important;
$PO-accent: #6663d3 !important;
$PO-accent-utility: #6663d3;
$PO-accent-hover: #ff5dae !important;
$PO-side-subheader: mix($PO-accent-utility, rgba(0, 0, 0, 0), 50%) !important;
$PO-side-header: mix($PO-accent-utility, rgba(0, 0, 0, 0), 75%) !important;

/****************************************************************************************************/
/* APPLY VARIABLES */
a {
  color: $PO-accent;
}

a:hover {
  color: $PO-accent-hover;
  transition: 100ms ease-in-out;
}

.PO-accent,
.text-primary {
  color: $PO-accent;
}

li.header {
  color: #fff !important;
  background-color: $PO-side-header;
}

li.header a {
  color: #fff !important;
}

li.subheader {
  background-color: $PO-side-subheader;
}

li.subheader a {
  color: #fff !important;
}

/****************************************************************************************************/
/* BUTTONS AND BADGES */
/* navbar buttons */
.navbar .btn {
  color: #fff !important;
  background: $PO-accent;
  border-color: $PO-accent;
}

.navbar .btn :hover,
.navbar .btn-primary :hover,
.badge-primary:focus,
.btn-primary:hover,
a.badge-primary:focus,
a.btn-primary:hover,
.btn-primary.active,
.btn-primary:active,
.show>.btn-primary.dropdown-toggle,
{
color: #fff !important;
background: $PO-accent-hover;
border-color: $PO-accent-hover;
}

.side-nav li.active>a,
.side-nav li.active>a:focus,
.side-nav li.active>a:hover,
.side-nav li.active>a:link,
{
color: $accent !important;
}

/* page badges */
.page-body .badge,
.page-body .badge-primary,
a.badge-primary,
.btn-primary {
  color: #fff !important;
  background: $PO-accent;
  border-color: $PO-accent;
}

.btn-danger,
.btn-danger a {
  color: #fff !important;
}

#header .dropdown-item,
#header .nav-link,
#header .navbar-brand {
  color: hsla(0, 0%, 100%, .5) !important;
}

.page-body .badge :hover,
.page-body .badge-primary :hover,
.badge-primary:focus,
.badge-primary:hover,
a.badge-primary:focus,
a.badge-primary:hover,
.badge-primary.active,
.badge-primary:active,
.show>.badge-primary.dropdown-toggle {
  color: #fff !important;
  background: $PO-accent-hover;
  border-color: $PO-accent-hover;
}

/* header badge font color */
.profile-tags-content a {
  color: #fff !important;
}

/****************************************************************************************************/
/* STREAMLINING */
.profile-gallery-content {
  text-align: center;
}

.profile-content-title {
  display: none;
}

div.character-profile {
  max-width: 1500px;
}

.profile-content-content .user-content {
  max-width: 1300px;
  margin-left: auto;
  margin-right: auto;
}

.row .profile-header {
  flex-direction: column !important;
  width: 100%;
  max-width: $PO-max-width;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 1rem !important;
}

@media (min-width: 992px) {
  .profile-header {
    order: $PO-header-order;
  }

  .profile-info-section {
    padding: 0 !important;
  }

  .profile-name-section {
    padding: 0 !important;
  }
}

@media (min-width: 576px) {
  .character-profile {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
  }
}"
T6pjCWUg,Untitled,sissou123,HTML,Tuesday 20th of February 2024 03:04:42 PM CDT,"50 Projects In 50 Days - HTML, CSS & JavaScript
Sharpen your skills by building 50 quick, unique & fun mini projects 
What you'll learn
Project based teaching to sharpen your HTML, CSS & JavaScript skills
Perfect for beginners looking for things to build unique projects in a short timeframe 
for more:https://d-aa.com/rVEMj
"
sScVKw4D,minotaur html,Apollyna,HTML,Tuesday 20th of February 2024 02:59:02 PM CDT,"<div class=""container p-0 mb-3 text-muted"" style=""max-width: 900px;font-size: 1em;"">
	<!-- FLOATING DECOR ================================================== -->
	<div class=""PO-accent hidden-md-down"">
		<!-- top left ========== -->
		<div style=""position:absolute; top:0;bottom:0;left:0;right:0;"">
			<!-- --><i class=""fa far fa-shield-xmark"" style=""position: absolute;top: -0.4em;left: -0.8em;font-size: 6em;/transform: rotate(45deg);""></i>
			<!-- --><i class=""fa fal /fa-flip fa-globe"" style=""position: absolute;top: 0.8em;left: -1.1em;font-size: 7em;animation-duration: 5s;""></i>
			<!-- --><i class=""fa far fa-key"" style=""position: absolute;top: 3em;left: -0.9em;font-size: 5em;/transform: scaleX(-1);""></i>
		</div>
		<!-- bottom right ========== -->
		<div style=""position:absolute; top:0;bottom:0;left:0;right:0;"">
			<!-- --><i class=""fa far fa-lock"" style=""position: absolute;bottom: 2.7em;right: -0.6em;font-size: 5em;""></i>
			<!-- --><i class=""fa fal /fa-flip fa-file"" style=""position: absolute;bottom: 0.7em;right: -0.9em;font-size: 7em;animation-duration: 5s;""></i>
			<!-- --><i class=""fa far fa-xs fa-fingerprint"" style=""position: absolute;bottom: 0.2em;right: -0.7em;font-size: 4em;""></i>
		</div>
	</div>
	<!-- CONTENT COLUMN ================================================== -->
	<div class=""p-3 card bg-faded"">
		<div class=""card bg-faded border-0 flex-row row no-gutters"" style=""/border: 4px solid rgba(4,71,142,0.25);"">
			<!-- CONTENT BOX -->
			<div class=""order-2 order-lg-1 col-lg-7 my-n3"">
				<!-- MUSIC BOX  -->
				<div class=""card border-0 my-3"">
					<div class=""p-3"">
						<div class=""px-3 px-md-4"">
							<div class=""flex-row my-2 /p-5 row no-gutters justify-content-center display-4"" style=""font-size:1.5em; /border: 1px solid rgba(97,170,160,0.5);"">
								<div class=""col px-3 pl-5 my-auto"">
									<hr class=""bg-dark"" style=""/background-color: #53a494;opacity: 0.2;"">
								</div>
								<div class=""col-auto my-auto px-3"">
									<a class=""melody-embed p-3 d-flex rounded overflow-hidden"" style=""border:0;position:relative;height: 2.5rem;width: 2.5rem;z-index:2;/color: #8c9d74;"">
										<iframe style=""opacity:.01;position:absolute;top:-115px;left:-20px;"" src=""https://www.youtube-nocookie.com/embed/D7B5I7ZO2jg?controls=1"" frameborder=""0""></iframe><i class=""fa fa-thin fa-compact-disc fa-spin /fa-fw /fa-play-pause /fa-fade"" style=""z-index:-1;position:absolute;left:0;top:0;font-size: 2.5rem;/text-align:center; /height:100%; /width:100%;""></i></a>
								</div>
								<div class=""col px-3 pr-5 my-auto"">
									<hr class=""bg-dark"" style=""/background-color: #53a494;opacity: 0.2;"">
								</div>
								<div class=""col-12 text-center mt-3"">
									<!-- show on small screens ========== -->
									<div class=""d-md-none mt-n1 px-md-2 px-lg-0"">
										<a class=""text-reset text-uppercase"" href=""https://www.youtube.com/watch?v=D7B5I7ZO2jg"" id="""" rel=""noopener noreferrer"" style=""/color: #8c9d74;"" target=""_blank"">
											<!-- -->
											<!-- --><span style=""white-space:nowrap;"">Banned From Living</span>
											<!-- --><span>&nbsp;</span>
											<!-- --><span class=""faded"" style=""white-space:nowrap;"">// GLOOMCVLT</span>
										</a>
									</div>
									<!-- show on large screens ========== -->
									<div class=""d-none d-md-inline-block /text-uppercase font-italic align-items-center /mr-n3"">
										<a class=""text-reset"" href=""https://www.youtube.com/watch?v=D7B5I7ZO2jg"" id="""" rel=""noopener noreferrer"" style=""/color: #8c9d74;word-break: break-word;"" target=""_blank"">
											<!-- -->
											<!-- --><span style=""white-space:nowrap;"">Banned From Living</span>
											<!-- --><span>&nbsp;</span><span>&nbsp;</span>
											<!-- --><span class=""faded"" style=""white-space:nowrap;"">- GLOOMCVLT</span>
										</a>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<!-- BIO BOX -->
				<div class=""card border-0 p-4 my-3"">
					<div class=""d-none PO-accent text-primary flex-column border-0 mb-1 display-4 text-uppercase justify-content-between align-items-center flex-fill align-items-end"" style=""color: #3a96c3;font-size:1.7em;""><span style=""
    font-size: 1.5em;
    font-weight: 100;"">TBN</span><span class=""text-lowercase mt-1 /ml-2"" style=""font-size:1rem;""><em>pr / ns</em></span><i class=""d-none fa fal fa-sparkles faded /mt-1 /mx-3 ml-auto""></i></div>
					<hr class=""d-none w-100"">
					<div>
						<p class=""align-items-end text-center text-lg-left""><span class=""display-4"">TBN</span><span class=""mx-3"">&mdash;</span><em>it / they</em></p>
						<p><a href=""https://www.pinterest.com/apollyna/z0-vaporvvaves-plug-suit-minotaur-adopt/"" id="""" rel=""noopener noreferrer"" target=""_blank"">[ pinterest moodboard ]</a></p>
						<p>adopted 2024/02/11</p>
						<p class=""mb-3"">plans:</p>
						<ul class=""pl-4 m-0"" style=""list-style-type: circle;"">
							<li class=""mb-2"">slick scifi minotaur theme, creepily &quot;pleasant&quot; humanoid face</li>
							<li class=""mb-2"">an antivirus. tricks/traps malware into Quarantine - a seemingly infinite labyrinth - and then hunts them down</li>
							<li class=""mb-2"">androgynous voice. sounds filter-y, synth-y, techy. speech is even-toned, and emotionless.</li>
							<li class=""mb-2"">chunky mech-y legs, shape reminiscent of hooves</li>
						</ul>
					</div>
				</div>
			</div>
			<!-- MOODBOARD -->
			<div class=""order-1 order-lg-2 col-lg d-flex flex-lg-column rounded overflow-hidden ml-lg-3 mb-3 mb-lg-0"" style=""min-height:15em;position:relative;"">
				<div class=""card border-0 rounded-0 flex-fill /mb-1"">
					<div class=""card-img-overlay bg-dark /rounded overflow-hidden"" style=""background-image:url(https://i.pinimg.com/564x/67/22/a0/6722a0df5a0fe22b30bd5cb7e03d5020.jpg);background-size:cover;background-position:center;min-height:10em;"">&nbsp;</div>
				</div>
				<div class=""card border-0 rounded-0 flex-fill /mb-1"">
					<div class=""card-img-overlay bg-dark /rounded overflow-hidden"" style=""background-image:url(https://i.pinimg.com/originals/5a/c5/c3/5ac5c3caec66cce5df9ca308b9b6043f.gif);background-size:cover;background-position:center;min-height:10em;"">&nbsp;</div>
				</div>
				<div class=""card border-0 rounded-0 flex-fill /mb-1"">
					<div class=""card-img-overlay bg-dark /rounded overflow-hidden"" style=""background-image:url(https://i.pinimg.com/564x/11/81/f8/1181f8d8f15c97f680888ebc283e3b58.jpg);background-size:cover;background-position:33% 33%;min-height:10em;"">&nbsp;</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- th.circlejourney.net import code ================================================== -->
<p><u id=""allow-thcj-import"">&nbsp;</u></p>"
6LrPuE6D,the lift whit function,Nenogzar,Python,Tuesday 20th of February 2024 02:55:05 PM CDT,"def distribute_people(people, lift):
    for wagon, spaces in enumerate(lift):
        if spaces < 4:
            available = 4 - spaces
            if people - available >= 0:
                people -= available
                lift[wagon] += available
            else:
                lift[wagon] += people
                people = 0

    return people

def main():
    people = int(input())
    lift = list(map(int, input().split()))

    remaining_people = distribute_people(people, lift)

    if remaining_people == 0:
        if any(spaces < 4 for spaces in lift):
            print('The lift has empty spots!')
        print(*lift)
    elif all(spaces == 4 for spaces in lift):
        print(*lift)
    else:
        print(f""There isn't enough space! {remaining_people} people in a queue!"")
        print(*lift)

if __name__ == ""__main__"":
    main()"
i4hPLPjG,Untitled,f0f077,Python,Tuesday 20th of February 2024 02:44:28 PM CDT,"The Complete Python Bootcamp From Zero to Hero in Python
Learn Python like a Professional Start from the basics and go all the way to creating your own applications and games
What you'll learn
You will learn how to leverage the power of Python to solve tasks.
You will build games and programs that use Python libraries.
You will be able to use Python for your own work problems or personal projects.
You will create a portfolio of Python based projects you can share.
for more:https://d-aa.com/QOUbT"
EThmv8K3,Plugin pom.xml,TerenceFerut,XML,Tuesday 20th of February 2024 02:41:34 PM CDT,"<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-jar-plugin</artifactId>
    <version>3.2.0</version> <!-- Use the latest version -->
    <configuration>
        <archive>
            <manifest>
                <addClasspath>true</addClasspath>
                <classpathPrefix>lib/</classpathPrefix>
                <mainClass>com.ynov.helloworld.helloworld.HelloApplication</mainClass>
            </manifest>
        </archive>
    </configuration>
</plugin>"
ReNSgeK1,Untitled,Kalgon,Pawn,Tuesday 20th of February 2024 02:22:15 PM CDT,"package com.zenyte;

import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 
@author Jack @ The CErver | Feb 5th, 2024
This file should be in com.zenyte on a Zenyte code base.
*/

public class DiscordLog {
    public static final String ERROR_WEBHOOK = ""YOUR URL GOES HERE"";
    public static void error(String message) {
        try {
            URL url = new URL(ERROR_WEBHOOK);
            LocalDateTime timestamp1 = LocalDateTime.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern(""yyyy-MM-dd HH:mm:ss"");
            String timestamp = timestamp1.format(formatter);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod(""POST"");
            connection.setRequestProperty(""Content-Type"", ""application/json"");
            connection.setDoOutput(true);

            String jsonPayload = ""{\""content\"":\""```[""+ timestamp + ""] The CErver Logs: "" + message + ""```\""}"";

            try (OutputStream os = connection.getOutputStream()) {
                byte[] input = jsonPayload.getBytes(""utf-8"");
                os.write(input, 0, input.length);
            }

            int responseCode = connection.getResponseCode();
            if (responseCode == 204) {
                System.out.println(""Message sent to Discord successfully."");
            } else {
                System.out.println(""Failed to send message to Discord. HTTP Response Code: "" + responseCode);
                System.out.println(""Failed to send to Discord. HTTP Response Code: "" + responseCode);
            }

        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
    // 1: Add your custom channel logs here. Copy the public from error to get started.
    // 2: Underneath public static final String ERROR_WEBHOOK, copy the line and rename ERROR_WEBHOOK to your new hook name.
    // 3: Create your void here. Format: public static void NAME(String message) {
    // 4: Fill the contents with the code from error
    // 5: Change the URL line to the NAME_WEBHOOK you defined in step 2
    // 6: Call your function using DiscordLog.name(""Log string"");
}"
SDAqXSyt,SubarrayOfNumberRepetitions,UrayFenn,C#,Tuesday 20th of February 2024 02:21:42 PM CDT,"namespace SubarrayOfNumberRepetitions
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int minNumber = 1;
            int maxNumber = 7;
            int arrayLength = 30;
            int count = 1;
            int maxCount = 0;
            Random random = new Random();
            int[] numbers = new int[arrayLength];
            string repetitionsNumber = """";

            for (int i = 0; i < numbers.Length; i++)
            {
                numbers[i] = random.Next(minNumber, maxNumber);
                Console.Write(numbers[i] + "" "");
            }

            for (int i = 0; i < numbers.Length - 1; i++)
            {
                if(numbers[i] == numbers[i + 1])
                {
                    count++;

                    if(count > maxCount)
                    {
                        maxCount = count;
                        repetitionsNumber = numbers[i].ToString() + "" "";
                    }
                    else if(maxCount == count)
                    {
                        repetitionsNumber += numbers[i].ToString() + "" "";
                    }
                }
                else
                {
                    count = 1;
                }
            }

            Console.WriteLine($""\nЧисло {repetitionsNumber} повторяется {maxCount} раз подряд."");
        }
    }
}"
i0hPGrhL,the lift,Nenogzar,Python,Tuesday 20th of February 2024 02:21:01 PM CDT,"people = int(input())
lift = list(map(int, input().split()))

for wagon, spaces in enumerate(lift):
    if spaces < 4:
        available = 4 - spaces
        if people - available >= 0:
            people -= available
            lift[wagon] += available
        else:
            lift[wagon] += people
            people -= people

not_balance = True

for count in range(len(lift)):
    if lift[count] < 4:
        not_balance = False

if not_balance and people == 0:
    print(*lift)
elif people == 0:
    print('The lift has empty spots!')
    print(*lift)
else:
    print(f""There isn't enough space! {people} people in a queue!"")
    print(*lift)"
vSNU2d3n,PROLOG_lab2_var5(NT),VladimirKostovsky,Prolog,Tuesday 20th of February 2024 02:17:04 PM CDT,"% Domains
list = list

% Predicates
nondeterm medicine(symbol, integer, list, list, integer, symbol).
nondeterm recommended_medicine(list, integer, symbol).
nondeterm has_contraindications(symbol, list).
nondeterm patient_has(symbol).

% Clauses
patient_has('Pregnancy').
patient_has('Peptic ulcer disease').
patient_has('Allergy').
% Add more facts as needed

% Contraindications for medicines
has_contraindications('Aspirin', ['Pregnancy']).
has_contraindications('Paracetamol', []).
has_contraindications('Ibuprofen', ['Peptic ulcer disease']).
has_contraindications('Cetirizine', ['Pregnancy']).
has_contraindications('Amoxicillin', ['Allergy']).
has_contraindications('Loratadine', []).

% Medicine facts
medicine('Aspirin', 18, ['Headache', 'Fever'], ['Pregnancy'], 50, 'Available').
medicine('Paracetamol', 12, ['Headache', 'Fever'], [], 30, 'Available').
medicine('Ibuprofen', 16, ['Headache', 'Toothache'], ['Peptic ulcer disease'], 40, 'Available').
medicine('Cetirizine', 6, ['Allergy'], ['Pregnancy'], 25, 'Available').
medicine('Amoxicillin', 20, ['Throat', 'Fever'], ['Allergy'], 60, 'Available').
medicine('Loratadine', 10, ['Allergy'], [], 35, 'Not available').

% Recommended medicines rules
recommended_medicine(Symptoms, Age, Medicine) :-
    medicine(Medicine, AgeLimit, Symptoms, Contraindications, _, 'Available'),
    Age >= AgeLimit,
    not(has_contraindications(Medicine, Contraindications)).

% Check for contraindications
has_contraindications(_, []) :- !.
has_contraindications(Medicine, [Contraindication | Rest]) :-
    patient_has(Contraindication),
    write('Contraindication for '), write(Medicine), write(': '), writeln(Contraindication),
    has_contraindications(Medicine, Rest).

% Goal
goal
    recommended_medicine(['Fever'], 22, Medicine).

% ERRORS:
% E;Test_Goal, pos: 11, 3 Illegal keyword"
wRkTt3Kb,linearSearch.js,c-mcbride,JavaScript,Tuesday 20th of February 2024 02:16:07 PM CDT,"function linearSearch (arr, target) {
  for(let i = 0; i < arr.length; i++){
    if(arr[i] === target){
      return i;
    }
  }
  return -1;
};

function binarySearch(arr, target) {
  // Set integers pointing to the high and low range of possible indices
  let lo = 0;
  let high = arr.length - 1;

  // While high and low indices do not overlap...
  while(high >= lo){
    // Find the midpoint between high and low indices
    let midPoint = Math.floor((high + lo) / 2);

    // Compare the target value to the midpoint value
    // If the target equals the midpoint...
    if(arr[midPoint] === target){
      // Return the midpoint index
      return midPoint;
    }
    if (arr[midPoint] < target){
      // If the target is higher than the midpoint...
      // Move the low pointer to midpoint + 1
      lo = midPoint + 1;
    }

    // If the target is less than the midpoint...
    // Move the high pointer to midpoint - 1
    if(arr[midPoint] > target){
      high = midPoint - 1;
    }
  }
  // Return -1 if the loop exits with overlapping pointers
  return -1;
}"
yf52f3vv,passtote,Nil000,C#,Tuesday 20th of February 2024 02:08:23 PM CDT,"using Microsoft.VisualStudio.TestPlatform.Common;
using Newtonsoft.Json;
using NUnit.Framework;
using System.Net;
using System.Text;
[Binding]
public class FirstFeatureSteps
{
    private readonly ScenarioContext _context;
    private HttpResponseMessage _response;
 
 
    public FirstFeatureSteps(ScenarioContext context)
    {  
        _context = context;
    }
 
    [Given(@""I have generated request data for a new user with name """"(.*)"""" and email """"(.*)"""""")]
    public void GivenIhaveGeneratedRequestDataForANewUserWithNameAndEmail(string name, string email)
    {
        var requestData = new UserBuilder()
            .WithName(name)
            .WithEmail(email)
            .BuildAsJson();
        _context.Set(requestData, ""requestData"");
    }
 
    [Given(@""I have generated request data for a new user with name """"(.*)"""" but without an email"")]
    public void GivenIHaveGeneratedRequestDataForAnewUserWithNameButWithoutAnEmail(string name)
    {
        var requestData = new UserBuilder()
            .WithName(name)
            .WithoutEmail()
            .BuildAsJson();
        _context.Set(requestData, ""requestData"");
    }
 
    [When(@""I submit the request to the user registration endpoint"")]
    public async Task WhenISubmitTheRequestToTheUserRegistrationEndpoint()
    {
        var client = new HttpClient();
        var requestData = _context.Get<string>(""requestData"");
        _response = await client.PostAsync(""http://localhost:5184/api/user"",
            new StringContent(requestData, Encoding.UTF8, ""application/json""));
        _context.Set(_response, ""apiResponse"");
        //check response
        if (!_response.IsSuccessStatusCode)
        {
            Console.WriteLine($""API call failed with status code: {_response.StatusCode}"");
            return;
        }
    }
 
    [Then(@""The response should be a success"")]
    public async Task ThenTheReponseShouldBeASuccess()    
    {
        var response = _context.Get<HttpResponseMessage>(""apiResponse"");
 
        //assert response has status 200
        Assert.IsTrue(response.IsSuccessStatusCode, $""Expected a success response but got {response.StatusCode}."");
 
        //read response content as a string
        var responseContent = await response.Content.ReadAsStringAsync();
 
        //validate content against Json schema
        var schemaFilePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ""Schemas"", ""FirstFeature.json"");
        bool isValid = await SchemaValidator.IsValidJsonPayloadAgainstSchema(responseContent, schemaFilePath);
        //assert response matches schema
        Assert.IsTrue(isValid, ""The response does not match the schema"");
    }
 
    [Then(@""The response should indicate a failure"")]
    public async Task ThenTheResponseShouldIndicateAFailure()
    {
        var requestData = _context.Get<string>(""requestData"");
 
        var response = _context.Get<HttpResponseMessage>(""apiResponse"");
       
        var responseContent = await response.Content.ReadAsStringAsync();
 
        if(string.IsNullOrWhiteSpace(responseContent))
        {
            throw new InvalidOperationException(""The response content is empty or null."");
        }
 
        Assert.AreEqual(HttpStatusCode.BadRequest, response.StatusCode, ""Expected a BadRequest response."");
 
        dynamic errorResponse = JsonConvert.DeserializeObject<dynamic>(responseContent);
 
        var errorMessage = (string)errorResponse.errors.email[0];
 
        Assert.AreEqual(""The Email field is required."", errorMessage, ""Expected error message is not present"");
    }
 
}"
u2ey5fkZ,Password Screen,Alexr360,Lua,Tuesday 20th of February 2024 01:56:15 PM CDT,"-- Set your desired password here
local password = ""your_password""

-- Function to clear the screen
local function clearScreen()
  term.clear()
  term.setCursorPos(1, 1)
end

-- Function to display login prompt
local function displayLoginPrompt()
  clearScreen()
  print(""Welcome to the secure system!"")
  print(""Please enter the password to access:"")
  write(""Password: "")
end

-- Main function to check password
local function checkPassword()
  displayLoginPrompt()
  local enteredPassword = read(""*"")

  if enteredPassword == password then
    clearScreen()
    print(""Access granted!"")
    -- Your code for allowing access goes here
  else
    clearScreen()
    print(""Incorrect password. Access denied."")
    sleep(2)
    checkPassword()  -- Retry password
  end
end

-- Run the main function
checkPassword()
"
gkqSSC31,Untitled,panther5482,VeriLog,Tuesday 20th of February 2024 01:47:46 PM CDT,"module ledTest2(
    (* side=RIGHT, colors={WHITE,MAGENTA,ORANGE} *)
    output [2:0] lights
);

(* analog *)
reg sel;
reg [2:0] lightsRaw;
reg [2:0] lightsRaw_n;
reg clk;

RandomizerAnalog ar (
	.Min(0),
	.Max(8),
	.Q(sel)
);

DeMux16Analog d16 (
	.I(1),
	.S(sel),
	.O(lightsRaw)
);

Square s (
	.Pd(10),
	.Q(clk)
);

Inverter i [2:0] (
	.I0(lightsRaw),
	.O0(lightsRaw_n)
);

FlipFlopJK ff [2:0] (
	.J(lightsRaw),
	.K(lightsRaw_n),
	.CLK(clk),
	.Q(lights)
);
"
ieRZBnAw,ussd.sh,snowgum,Bash,Tuesday 20th of February 2024 01:39:09 PM CDT,"#!/bin/sh

CURRMODEM=$(uci get modem.general.modemnum)
COMMPORT=""/dev/ttyUSB""$(uci get modem.modem$CURRMODEM.commport)
ROOTER=/usr/lib/rooter

if [ -n ""$1"" ]; then
	echo ""$1"" > /tmp/ussd_arg$CURRMODEM
fi

while true; do
	if [ -e /tmp/ussd_arg$CURRMODEM ]; then
		read USSDSTR < /tmp/ussd_arg$CURRMODEM
		rm /tmp/ussd_arg$CURRMODEM
	fi
	if [ -n ""$USSDSTR"" ]; then
		ATCMDD=""AT+CUSD=1,\""$USSDSTR\"",15""
		OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""ussd.gcom"" ""$CURRMODEM"" ""$ATCMDD"" | tr ""\n"" ""\v"")
		USSD=$(echo ""$OX"" | grep -o ""+CUSD: .\+\"",[0-9]\+"" | tr ""\v"" ""\n"")
		USSDL=${#USSD}
		USSDLx=$((USSDL - 2))
		DCS=$(printf ""${USSD:$USSDLx:2}"")
		if [ $USSDL -ge 14 ]; then
			USSDL=$((USSDL - 14))
			USSD=$(printf ""${USSD:10:$USSDL}"")
			if [ $DCS -eq ""72"" ]; then
				USSDx=""""
				USSDL=${#USSD}
				nV=0
				until [ $nV -ge $USSDL ]; do
					UU=$(printf ""%d"" ""0x""${USSD:$nV:4})
					if [[ $UU -lt 128 ]]; then
						USSDx=""$USSDx""$(printf ""%b"" ""\\$(printf ""0%o"" ""$UU"")"")
					elif [[ $UU -lt 2048 ]]; then
						UUU=$(((($UU & 1984) >> 6) | 192))
						USSDx=""$USSDx""$(printf ""%b"" ""\\$(printf ""0%o"" ""$UUU"")"")
						UUU=$((($UU & 63) | 128))
						USSDx=""$USSDx""$(printf ""%b"" ""\\$(printf ""0%o"" ""$UUU"")"")
					else
						UUU=$(((($UU & 61440) >> 12) | 224))
						USSDx=""$USSDx""$(printf ""%b"" ""\\$(printf ""0%o"" ""$UUU"")"")
						UUU=$(((($UU & 4032) >> 6) | 128))
						USSDx=""$USSDx""$(printf ""%b"" ""\\$(printf ""0%o"" ""$UUU"")"")
						UUU=$((($UU & 63) | 128))
						USSDx=""$USSDx""$(printf ""%b"" ""\\$(printf ""0%o"" ""$UUU"")"")
					fi
					nV=$(( $nV + 4 ))
				done
				USSD=""$USSDx""
			fi
		else
			USSD=$(echo ""$OX"" | tr ""\v"" ""\n"")
		fi
		echo
		echo ""-----------------------------------------------------------""
		echo ""$USSD""
		echo ""-----------------------------------------------------------""
		echo
	fi
	printf ""Enter blank to quit, or a USSD string to send: ""; read USSDSTR
	if [ -z ""$USSDSTR"" ]; then
		break
	fi
done
ATCMDD=""AT+CUSD=2""
OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$ATCMDD"")
exit 0
"
eULSV9bj,"procHandler Class-updated, returns class to allow access to exitCode, stdOut and stdErr individually",TheCalisto1994,Java,Tuesday 20th of February 2024 01:37:05 PM CDT,"import java.io.IOException;
import java.io.InputStream;
import java.util.Scanner;

/*
 * Process Handler
 *
 * Allows PHP-like shell_exec() calls
 * returns the stdOut, stdErr and exitCode of the process that was executed.
 *
 */
public class procHandler {
    private static boolean waitFor = false;
    public static String stdOut = new String();
    public static String stdErr = new String();
    public int exitCode = 0;

    public procHandler shell_exec (String command) throws InterruptedException { // Run a command, return its stdOut
        String[] results = {new String(), new String()};
        String result = new String();
        try {
            Process process = Runtime.getRuntime().exec(procHandler.StrtoStrA(command));
            if (waitFor) {   // Only if .waitFor(true) was declared, use a blocking process
                process.waitFor();
                this.exitCode = process.exitValue();
            }
            InputStream inputStream = process.getInputStream();
            Scanner scanner = new Scanner(inputStream);

            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                if (line != null)
                    result += String.format(""%s\n"", line);
            }
            scanner.close();
            this.stdOut = result;
            result = new String();

            InputStream errorStream = process.getErrorStream();
            scanner = new Scanner(errorStream);
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                if (line != null)
                    result += String.format(""%s\n"", line);
            }
            scanner.close();
            this.stdErr = result;

        } catch (IOException ioe) {
            ioe.printStackTrace();
            this.exitCode = 0;
            this.stdOut = new String();
            this.stdErr = ""Error: Process execution failed."";
        }
        return(this);
    }

    // STRING OPERATIONS

    public static String StrAtoStr (String[] args) { // Converts a string array (like the command-line arguments) to a String.
        String Out = new String(); // Initialize string
        if (args.length > 0) { // Check if there's any arguments provided
            for (int i = 0; i < args.length; i++) { // Convert through a ""for""-Loop
                Out += args[i] + "" ""; // concatenate arguments
                if (i != args.length - 1) Out += "" ""; // Add a whitespace, if it's not the last argument
            }

        }
        return(Out);
    }

    public static String[] StrtoStrA (String args) { // convert a String to a String Array (e.g. to use for shell_execute)
        return args.split("" "");
    }

    // BUILDER OPERATIONS (allows for default values for certain parameters which may be called like .waitFor(true))
    public procHandler waitFor (boolean waitFor) {
        this.waitFor = waitFor;
        return this;
    }
}"
6LhPD6s5,SatisfactionExpr,cepxuozab,C++,Tuesday 20th of February 2024 01:35:26 PM CDT,"void TestExpr() {
        Student p(""ivan""s, 37);
        SatisfactionSupervisor sup{103, 107};
        p.SetObserver(&sup);
       ASSERT_EQUAL(p.GetDanceCount(), 0);
        ASSERT_EQUAL(p.GetSatisfaction(), 100);
        p.Dance();
        ASSERT_EQUAL(p.GetDanceCount(), 1);
        ASSERT_EQUAL(p.GetSatisfaction(), 101);
    }"
MireeKNL,"procHandler Class (updated, including stderr)",TheCalisto1994,Java,Tuesday 20th of February 2024 01:15:16 PM CDT,"import java.io.IOException;
import java.io.InputStream;
import java.util.Scanner;

/*
 * Process Handler
 *
 * Allows PHP-like shell_exec() calls
 * returns the stdOut of the process that was executed.
 *
 */
public class procHandler {
    private static boolean waitFor = false;
    public static String shell_exec (String command) throws InterruptedException { // Run a command, return its stdOut
        String result = new String();
        int exitCode = 0;
        try {
            Process process = Runtime.getRuntime().exec(procHandler.StrtoStrA(command));
            if (waitFor)    // Only if .waitFor(true) was declared, use a blocking process
               exitCode = process.waitFor();
            InputStream inputStream = process.getInputStream();
            Scanner scanner = new Scanner(inputStream);

            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                if (line != null)
                    result += String.format(""%s\n"", line);
            }
            scanner.close();

            InputStream errorStream = process.getErrorStream();
            scanner = new Scanner(errorStream);
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                if (line != null)
                    result += String.format(""%s\n"", line);
            }
            scanner.close();

        } catch (IOException ioe) {
            ioe.printStackTrace();
        }
        return(result);
    }

    // STRING OPERATIONS

    public static String StrAtoStr (String[] args) { // Converts a string array (like the command-line arguments) to a String.
        String Out = new String(); // Initialize string
        if (args.length > 0) { // Check if there's any arguments provided
            for (int i = 0; i < args.length; i++) { // Convert through a ""for""-Loop
                Out += args[i] + "" ""; // concatenate arguments
                if (i != args.length - 1) Out += "" ""; // Add a whitespace, if it's not the last argument
            }

        }
        return(Out);
    }

    public static String[] StrtoStrA (String args) { // convert a String to a String Array (e.g. to use for shell_execute)
        return args.split("" "");
    }

    // BUILDER OPERATIONS (allows for default values for certain parameters which may be called like .waitFor(true))
    public procHandler waitFor (boolean waitFor) {
        this.waitFor = waitFor;
        return this;
    }
}"
H2rHVEhY,KSIS 1,KopVZakone,C,Tuesday 20th of February 2024 12:56:55 PM CDT,"#include <winsock2.h>
#include <windows.h>
#include <iphlpapi.h>
#include <stdio.h>
#include <winnetwk.h>



#pragma comment(lib, ""IPHLPAPI.lib"")
#pragma comment(lib, ""mpr.lib"")
#define BUFFER_SIZE 16384
#define MALLOC(x) HeapAlloc(GetProcessHeap(),0,(x))
#define FREE(x) HeapFree(GetProcessHeap(),0,(x))
using namespace std;

void DisplayMac(PIP_ADAPTER_ADDRESSES pCurrAddresses);

bool printAddress() {
    PIP_ADAPTER_ADDRESSES pAddresses = NULL;
    PIP_ADAPTER_ADDRESSES pCurrAddresses = NULL;
    ULONG bufLen = BUFFER_SIZE;
    pAddresses = (IP_ADAPTER_ADDRESSES *) MALLOC(bufLen);
    if (pAddresses == NULL)
        return false;
    ULONG dwStatus = GetAdaptersAddresses(AF_UNSPEC, 0, NULL, pAddresses, &bufLen);
    if (dwStatus != NO_ERROR) {
        FREE(pAddresses);
        return false;
    }
    pCurrAddresses = pAddresses;
    while (pCurrAddresses) {
        DisplayMac(pCurrAddresses);
        pCurrAddresses = pCurrAddresses->Next;
    }
    FREE(pAddresses);
    return true;
}
void DisplayMac(PIP_ADAPTER_ADDRESSES pCurrAddresses) {
    int i = 0;

    printf(""Adapter Name: %s\n"", pCurrAddresses->AdapterName);

    printf(""Adapter Type: "", i);
    switch (pCurrAddresses->IfType) {
    case (IF_TYPE_OTHER):
        printf(""other\n"");
        break;
    case (IF_TYPE_ETHERNET_CSMACD):
        printf(""ethernet\n"");
        break;
    case (IF_TYPE_PPP):
        printf(""PPP\n"");
        break;
    case (IF_TYPE_SOFTWARE_LOOPBACK):
        printf(""software loopback\n"");
        break;
    case (IF_TYPE_IEEE80211):
        printf(""IEEE 802.11\n"");
        break;
    case (IF_TYPE_TUNNEL):
        printf(""tunnel\n"");
        break;
    default:
        printf(""unknown type %d\n"", pCurrAddresses->IfType);
        break;
    }


    printf(""Adapter Description: %wS\n"", pCurrAddresses->Description);
    printf(""Adapter Friendly name: %wS\n"", pCurrAddresses->FriendlyName);

    if (pCurrAddresses->PhysicalAddressLength != 0) {
        printf(""Adapter Physical address: "");
        for (i = 0; i < (int)pCurrAddresses->PhysicalAddressLength; i++) {
            if (i == (pCurrAddresses->PhysicalAddressLength - 1))
                printf(""%.2X\n"",
                    (int)pCurrAddresses->PhysicalAddress[i]);
            else
                printf(""%.2X:"",
                    (int)pCurrAddresses->PhysicalAddress[i]);
        }
    }
    printf(""\n"");
}
void DisplayStruct(int i, LPNETRESOURCE lpnrLocal);
bool WINAPI Enumerate(LPNETRESOURCE lpnr) {
    DWORD dwResult, dwResultEnum;
    HANDLE hEnum;
    DWORD cbBuffer = BUFFER_SIZE;
    DWORD cEntries = -1;
    LPNETRESOURCE lpnrLocal = NULL;
    dwResult = WNetOpenEnum(RESOURCE_GLOBALNET,
        RESOURCETYPE_ANY,
        0,
        lpnr,
        &hEnum);
    if (dwResult != NO_ERROR) {
        return false;
    }
    lpnrLocal = (LPNETRESOURCE)MALLOC(cbBuffer);
    if (lpnrLocal == NULL)
        return false;
    do {
        ///ZeroMemory(lpnrLocal, cbBuffer);
        dwResultEnum = WNetEnumResource(hEnum,
                                        &cEntries,
                                        lpnrLocal,
                                        &cbBuffer);
        if (dwResultEnum == NO_ERROR) {
            for (int i = 0; i < cEntries; i++) {
                DisplayStruct(i, &lpnrLocal[i]);
                if ((lpnrLocal[i].dwUsage & RESOURCEUSAGE_CONTAINER) == RESOURCEUSAGE_CONTAINER)
                    Enumerate(&lpnrLocal[i]);
            }
        }
    } while (dwResultEnum != ERROR_NO_MORE_ITEMS);
    FREE(lpnrLocal);
    dwResult = WNetCloseEnum(hEnum);
    return true;
}

void DisplayStruct(int i, LPNETRESOURCE lpnrLocal)
{
    printf(""NETRESOURCE[%d] Scope: "", i);
    switch (lpnrLocal->dwScope) {
    case (RESOURCE_CONNECTED):
        printf(""connected\n"");
        break;
    case (RESOURCE_GLOBALNET):
        printf(""all resources\n"");
        break;
    case (RESOURCE_REMEMBERED):
        printf(""remembered\n"");
        break;
    default:
        printf(""unknown scope %d\n"", lpnrLocal->dwScope);
        break;
    }

    printf(""NETRESOURCE[%d] Type: "", i);
    switch (lpnrLocal->dwType) {
    case (RESOURCETYPE_ANY):
        printf(""any\n"");
        break;
    case (RESOURCETYPE_DISK):
        printf(""disk\n"");
        break;
    case (RESOURCETYPE_PRINT):
        printf(""print\n"");
        break;
    default:
        printf(""unknown type %d\n"", lpnrLocal->dwType);
        break;
    }

    printf(""NETRESOURCE[%d] DisplayType: "", i);
    switch (lpnrLocal->dwDisplayType) {
    case (RESOURCEDISPLAYTYPE_GENERIC):
        printf(""generic\n"");
        break;
    case (RESOURCEDISPLAYTYPE_DOMAIN):
        printf(""domain\n"");
        break;
    case (RESOURCEDISPLAYTYPE_SERVER):
        printf(""server\n"");
        break;
    case (RESOURCEDISPLAYTYPE_SHARE):
        printf(""share\n"");
        break;
    case (RESOURCEDISPLAYTYPE_FILE):
        printf(""file\n"");
        break;
    case (RESOURCEDISPLAYTYPE_GROUP):
        printf(""group\n"");
        break;
    case (RESOURCEDISPLAYTYPE_NETWORK):
        printf(""network provider\n"");
        break;
    default:
        printf(""unknown display type %d\n"", lpnrLocal->dwDisplayType);
        break;
    }

    printf(""NETRESOURCE[%d] Usage: 0x%x = "", i, lpnrLocal->dwUsage);
    if (lpnrLocal->dwUsage & RESOURCEUSAGE_CONNECTABLE)
        printf(""connectable "");
    if (lpnrLocal->dwUsage & RESOURCEUSAGE_CONTAINER)
        printf(""container "");
    printf(""\n"");

    printf(""NETRESOURCE[%d] Localname: %S\n"", i, lpnrLocal->lpLocalName);
    printf(""NETRESOURCE[%d] Remotename: %S\n"", i, lpnrLocal->lpRemoteName);
    printf(""NETRESOURCE[%d] Comment: %S\n"", i, lpnrLocal->lpComment);
    printf(""NETRESOURCE[%d] Provider: %S\n"", i, lpnrLocal->lpProvider);
    printf(""\n"");
}
int main()
{
    printAddress();
    LPNETRESOURCE lpnr = NULL;
    Enumerate(lpnr);
}"
QzF3BdYd,client.lua,slyguy5646,Lua,Tuesday 20th of February 2024 12:33:48 PM CDT,"local url = ""wss://35da-2600-1700-a1a1-3ed0-f1ad-b7ea-cf98-d681.ngrok-free.app""
local ws,err = http.websocket(url)
print(ws)

if ws then
    while true do
        print(""LOOP RUN"")
        local msg = ws.receive()
        print(msg)
        if msg then
        --loadstring() because CC turtles run an older version of Lua
            local func = loadstring(msg)
            local res = func()
            ws.send(res)
        else
            print(""NO VALID MSG"")
        end
        -- if(msg == 'turtle.detect()')
        --     then
        --         detect = shell.run('detect')
        --         print(detect)
        --     else
        --         print('not detect')
    end
elseif err then
    print(""ERROR"", err)
end"
9dDsxFnW,Review OneRoyal,fxvnpro,PHP,Tuesday 20th of February 2024 12:30:09 PM CDT,https://www.fxvnpro.com/review-oneroyal/
zkzB6vCX,at least good++ snowybot,coinwalk,JavaScript,Tuesday 20th of February 2024 12:22:40 PM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var dockiez = original;
var madman = 0.0000001;
var tens = (madman*10);
var sevens = (madman*6.9);
var eights = (madman*7.9);
var fran = madman;
var norbble = original;
var james = ((Math.floor(original/tens))*tens);
var filfy = ((Math.floor(original/tens))*tens);
var stinky = 6.9;
var smelly = 2.9;
var fart = 1;
 
function dobet(){
norbble = document.getElementById('pct_balance').value;
if (norbble>(filfy+(fran*stinky))){
    stinky = 4.9;
    smelly = 4.9;
    fran = fran*2;
    filfy = parseFloat(norbble);
}  
if (norbble<(filfy-(fran*smelly))){
    stinky = 4.9;
    smelly = 4.9;
    fran = fran*2;
    fart = 0;
    filfy = parseFloat(norbble);
}
if ((norbble>=(james+(tens*fart)))&&(norbble<(((Math.floor(norbble/tens))*tens)+sevens))){
    stinky = 6.9;
    smelly = 2.9;
    fart = 1;
    fran = madman;
    filfy = ((Math.floor(norbble/tens))*tens);
    james = ((Math.floor(norbble/tens))*tens);
}
if (norbble>=150000){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((fran*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => dobet(), 1);
} 
dobet();
"
bHxq3wqt,Bar Domotico V1,overvolt,C++,Tuesday 20th of February 2024 12:14:29 PM CDT,"// AccelStepper - Version: 1.64.0
#include <AccelStepper.h>
#include <MultiStepper.h>

#include ""thingProperties.h""

#include <Servo.h>

#define unml 34  // moltiplicatore per associare ml a ms di funzionamento di una pompa

//   ORDINE DRINK
#define quantiDrink 5


//   CONFIGURAZIONE DRINK
int richiesto[quantiDrink][8] = {
  /*                       acqua   vodka   rum   gin   aperol tonica prosecco aaaa
  /*  negroni       */  {    0  ,    0 ,    0 ,   0   ,   0  ,    0  ,   0  ,   0  },
  /*  mojito        */  {    0  ,    0 ,    0 ,   0   ,   0  ,    0  ,   0  ,   0  },
  /*  spritz        */  {    0  ,    0 ,    0 ,   0   ,  100 ,   25  ,  50  ,   0  },
  /*  oldfashioned  */  {    20 ,    0 ,   50 ,   0   ,   0  ,    0  ,   0  ,   0  },
  /*  gintonic      */  {    0  ,    0 ,    0 ,  50   ,   0  ,   50  ,   0  ,   0  },
};

#define RELE_BLOCCO 17
#define EN_PIN 2 

#define su 1
#define giu 46000

int livello[8] = { 0, 0, 0, 0, 0, 0, 0, 0};  // da sostituire con la eeprom/flash


AccelStepper ascensore(1, 4, 3); // driver di tipo 1 (a 2 pin) , pin 4 per gli step, pin 3 per la direzione
Servo rubinetto;


void setup() {
  Serial.begin(9600); // Initialize serial and wait for port to open:
  delay(1500); // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  
  initProperties(); // Defined in thingProperties.h
  ArduinoCloud.begin(ArduinoIoTPreferredConnection); // Connect to Arduino IoT Cloud
  
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  
  pinMode(RELE_BLOCCO, OUTPUT);
  pinMode(EN_PIN, OUTPUT);

  bloccaAscensore(0);
  ascensore.setMaxSpeed(3000); 
  ascensore.setAcceleration(1100);
  ascensore.setCurrentPosition(0);
  delay(500);
  bloccaAscensore(1);

  rubinetto.attach(A7);
  rubinetto.write(100); //posizione iniziale föra di ball

  for(int i=6;i<=13;i++) pinMode(i,OUTPUT);  //cicla tutti i pin delle pompe mettendoli a output

  spritz = false;
  gintonic = false;
  negroni = false;
  mojito = false;
  oldfashioned = false;
}



void loop() {
  ArduinoCloud.update();
}


void onSpritzChange()  {
  if(spritz == true) {
      spritz = false;
      gintonic = false;
      negroni = false;
      mojito = false;
      oldfashioned = false;
      nuovoDrink(2);
  }
}

void onGintonicChange()  {
  if(spritz == true) {
      spritz = false;
      gintonic = false;
      negroni = false;
      mojito = false;
      oldfashioned = false;
      nuovoDrink(4);
  }
}

void onNegroniChange()  {
  if(negroni == true) {
      spritz = false;
      gintonic = false;
      negroni = false;
      mojito = false;
      oldfashioned = false;
      nuovoDrink(0);
  }
}

void onMojitoChange()  {
  if(mojito == true) {
      spritz = false;
      gintonic = false;
      negroni = false;
      mojito = false;
      oldfashioned = false;
      nuovoDrink(1);
  }
}

void onOldfashionedChange()  {
  if(oldfashioned == true) {
      spritz = false;
      gintonic = false;
      negroni = false;
      mojito = false;
      oldfashioned = false;
      nuovoDrink(3);
  }
}



void nuovoDrink(int drink)
{
  if(!controllaFattibile(drink))
    return;
  spostaAscensore(giu);
  rubinetto.write(36);
  eroga(drink);
  sgrulla();
  rubinetto.write(100);
  spostaAscensore(su);
}


void spostaAscensore(int dove)
{
  bloccaAscensore(0);
  ascensore.moveTo(dove);
  ascensore.runToPosition();
  bloccaAscensore(1);
}


void bloccaAscensore(bool stato)
{
  if(stato)  // solo perché serve farli in ordine diverso a seconda se sto bloccando o sbloccando
  {
    digitalWrite(EN_PIN, HIGH);
    digitalWrite(RELE_BLOCCO, LOW);
  }  else  {
    digitalWrite(RELE_BLOCCO, HIGH);
    digitalWrite(EN_PIN, LOW);
  }
}


bool controllaFattibile(int drink)
{
  return true;
  for(int bottiglia=0; bottiglia<8; bottiglia++)
  {
    if(richiesto[bottiglia][drink] == 0)
      continue;
    if(livello[bottiglia] < (richiesto[bottiglia][drink] + 50))  // giusto da avere almeno 50ml in più di quello che mi serve
      return false;
  }
  return true;
}


void eroga(int drink)
{
  for(int bottiglia=0; bottiglia<8; bottiglia++)
  {
    if(richiesto[bottiglia][drink] == 0)
      continue;
    versa(richiesto[bottiglia][drink], bottiglia);
    livello[bottiglia] -= richiesto[bottiglia][drink];
  }
}


void versa(int quanto,int cosa)
{
  digitalWrite(cosa+6, HIGH);
  delay(quanto * unml);
  digitalWrite(cosa+6,LOW);
}


void sgrulla()
{
  rubinetto.write(30);
  delay(200);
  rubinetto.write(44);
  delay(200);
  rubinetto.write(28);
  delay(200);
}

"
dN3XrcGy,23401,boyan1324,Python,Tuesday 20th of February 2024 12:00:12 PM CDT,"from math import ceil
n = int(input())
children = []
adults = []
for i in range(n):
    person_age = int(input())
    if person_age > 135:
        print(f""System was hacked with {person_age} \n List - []"")
    elif 18 <= person_age <= 135:
        adults.append(person_age)
    elif person_age < 18:
        children.append(person_age)
count_children = len(children)
count_adults = len(adults)
average_adult_age = ceil(sum(adults) / count_adults)
print(children)
print(adults)
print(f""Count of children: {count_children}"")
print(f""Count of adults: {count_adults}"")
print(f""Average age of adults: {average_adult_age}"")

positive = []
negative = []
odd = []
even = []
n = int(input())
for i in range(n):
    num = int(input())
    if num % 2 == 0:
        even.append(num)
    else:
        odd.append(num)
    if num > 0:
        positive.append(num)
    else:
        negative.append(num)
command = input(""Enter command: "")
if command == ""positive"":
    print(f""Numbers {command}: {sorted(positive)}"")
elif command == ""negative"":
    print(f""Numbers {command}: {sorted(negative)}"")
elif command == ""odd"":
    print(f""Numbers {command}: {sorted(odd)}"")
elif command == ""even"":
    print(f""Numbers {command}: {sorted(even)}"")

data = input().split("", "")
int_list = []
for i in data:
    current_element = int(i)
    int_list.append(current_element)
int_list.sort()
str_list = []
for i in int_list:
    current_element = str(i)
    str_list.append(current_element)
average_points = sum(int_list) / len(int_list)
print(f""Sorted list of points {' - '.join(str_list)}"")
print(f""Count of plays: {len(int_list)}"")
print(f""Worst play: {min(int_list)}"")
print(f""Best play: {max(int_list)}"")
print(f""Average points: {ceil(average_points)}"")

grades = input().split("", "")
grades_list = []
for i in grades:
    current_element = int(i)
    grades_list.append(current_element)
grades_list.sort()
str_list = []
for i in grades_list:
    current_element = str(i)
    str_list.append(current_element)
average_points = sum(grades_list) / len(grades_list)
print(f""Reverse sorted list of evaluations: {' '.join(str_list)}"")
print(f""Count of evaluations: {len(grades_list)}"")
print(f""Worst evaluation: {min(grades_list)}"")
print(f""Best evaluation: {max(grades_list)}"")
print(f""Count of sixes: {grades_list.count(6)}"")
print(f""Average evaluations: {average_points}"")"
gN0hSdzS,last 64^D,max2201111,Python,Tuesday 20th of February 2024 11:33:55 AM CDT,"import chess
import time

def is_white_turn(fen):
    """"""Determines if it's White's turn based on the FEN string.""""""
    return fen.split()[1] == 'w'

def initialize_game_tree(initial_fen, seeking_draw):
    """"""Initializes the game tree with the root node.""""""
    A = {
        1: {
            'fen': initial_fen,
            'moves_to_mate': None,
            'parent': None,
            'color': chess.WHITE if is_white_turn(initial_fen) else chess.BLACK,
            'result': None,
            'processed': False,
            'sequence': [],
            'up': False,
        }
    }
    return A

def generate_descendants(A, key):
    """"""Generates all legal moves from the current position and adds them to the game tree.""""""
    node = A[key]
    board = chess.Board(node['fen'])
    for move in board.legal_moves:
        board.push(move)
        new_key = max(A.keys()) + 1
        A[new_key] = {
            'fen': board.fen(),
            'moves_to_mate': None,
            'parent': key,
            'color': not node['color'],
            'result': None,
            'processed': False,
            'sequence': node['sequence'] + [move.uci()],
            'up': False,
        }
        board.pop()

def evaluate_terminal_positions(A, seeking_draw):
    """"""Evaluates terminal positions in the game tree and updates the nodes.""""""
    for key, node in A.items():
        board = chess.Board(node['fen'])
        if board.is_checkmate():
            node['moves_to_mate'] = 0
            node['result'] = 1 if node['color'] == chess.BLACK else 0
            node['processed'] = True
        elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
            node['moves_to_mate'] = 0
            node['result'] = 0.5  # Draws evaluated as 0.5 for simplicity
            node['processed'] = True
        if node['processed']:
            node['up'] = True

def propagate_results_upwards(A):
    """"""Propagates the evaluation results upwards in the game tree.""""""
    for key in sorted(A.keys(), reverse=True):
        node = A[key]
        if node['up']:
            if node['parent'] is not None:
                parent = A[node['parent']]
                # Simple propagation without considering seeking_draw for demonstration
                if parent['result'] is None or (node['result'] != parent['result']):
                    parent['result'] = node['result']
                    parent['up'] = True

def format_time(seconds):
    """"""Formats seconds into a human-readable string.""""""
    return f""{int(seconds // 3600)}h {(int(seconds) % 3600) // 60}m {seconds % 60:.2f}s""

# Main execution flow
def main():
    initial_fen = ""8/8/2k5/4K3/7p/8/8/8 w - - 0 4""
    seeking_draw = {'white': True, 'black': False}
    A = initialize_game_tree(initial_fen, seeking_draw)

    start_time = time.time()
    previous_depth = 0
    try:
        while True:
            current_time = time.time()
            print(f""Elapsed Time: {format_time(current_time - start_time)}"", end='\r')

            # Generate descendants and evaluate positions
            keys = list(A.keys())
            for key in keys:
                if not A[key]['processed']:
                    generate_descendants(A, key)
                    evaluate_terminal_positions(A, seeking_draw)
                    propagate_results_upwards(A)

            # Check for depth updates
            current_depth = max([len(node['sequence']) for node in A.values() if 'sequence' in node], default=0)
            if current_depth != previous_depth:
                print(f""\nDepth: {current_depth} - Nodes Searched: {len(A)}"", end='')
                previous_depth = current_depth

            time.sleep(1)
    except KeyboardInterrupt:
        print(""\nAnalysis stopped."")

if __name__ == ""__main__"":
    main()
"
TzjqTdcp,last 64^D,max2201111,Python,Tuesday 20th of February 2024 11:27:06 AM CDT,"import chess
import time

def is_white_turn(fen):
    """"""Determines if it's White's turn based on the FEN string.""""""
    return fen.split()[1] == 'w'

def initialize_game_tree(initial_fen):
    """"""Initializes the game tree with the root node.""""""
    A = {
        1: {
            'fen': initial_fen,
            'moves_to_mate': None,
            'parent': None,
            'color': chess.WHITE if is_white_turn(initial_fen) else chess.BLACK,
            'result': None,
            'processed': False,
            'sequence': [],
            'up': False,
        }
    }
    return A

def generate_descendants(A, key):
    """"""Generates all legal moves from the current position and adds them to the game tree.""""""
    node = A[key]
    board = chess.Board(node['fen'])
    for move in board.legal_moves:
        board.push(move)
        new_key = max(A.keys()) + 1
        A[new_key] = {
            'fen': board.fen(),
            'moves_to_mate': None,
            'parent': key,
            'color': not node['color'],
            'result': None,
            'processed': False,
            'sequence': node['sequence'] + [move.uci()],
            'up': False,
        }
        board.pop()

def evaluate_terminal_positions(A):
    """"""Evaluates terminal positions in the game tree and updates the nodes.""""""
    for key, node in A.items():
        board = chess.Board(node['fen'])
        if board.is_checkmate():
            node['moves_to_mate'] = 0
            node['result'] = 1 if node['color'] == chess.BLACK else 0
            node['processed'] = True
        elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
            node['moves_to_mate'] = 0
            node['result'] = 0.5
            node['processed'] = True
        if node['processed']:
            node['up'] = True

def propagate_results_upwards(A):
    """"""Propagates the evaluation results upwards in the game tree.""""""
    for key in sorted(A.keys(), reverse=True):
        node = A[key]
        if node['up']:
            if node['parent'] is not None:
                parent = A[node['parent']]
                if parent['result'] is None or (node['result'] > parent['result'] and parent['color'] == node['color']) or (node['result'] < parent['result'] and parent['color'] != node['color']):
                    parent['result'] = node['result']
                    parent['up'] = True

def format_time(seconds):
    """"""Formats seconds into a human-readable string.""""""
    return f""{int(seconds // 3600)}h {(int(seconds) % 3600) // 60}m {seconds % 60:.2f}s""

# Main execution flow
def main():
    initial_fen = ""8/8/2k5/4K3/7p/8/8/8 w - - 0 4""
    A = initialize_game_tree(initial_fen)

    start_time = time.time()
    previous_depth = 0
    try:
        while True:
            current_time = time.time()
            print(f""Elapsed Time: {format_time(current_time - start_time)}"", end='\r')

            # Generate descendants and evaluate positions
            keys = list(A.keys())
            for key in keys:
                if not A[key]['processed']:
                    generate_descendants(A, key)
                    evaluate_terminal_positions(A)
                    propagate_results_upwards(A)

            # Check for depth updates
            current_depth = max([len(node['sequence']) for node in A.values() if 'sequence' in node], default=0)
            if current_depth != previous_depth:
                print(f""\nDepth: {current_depth} - Nodes Searched: {len(A)}"", end='')
                previous_depth = current_depth

            time.sleep(1)
    except KeyboardInterrupt:
        print(""\nAnalysis stopped."")

if __name__ == ""__main__"":
    main()"
CJb5CXdQ,Untitled,grue74,6502 TASM/64TASS,Tuesday 20th of February 2024 11:19:26 AM CDT,"

S_48ED              lda #$00
                    sta KBD_VAR_0D
                    ldx #$FE
                    stx KBD_VAR_0E
_B_48F5             jsr ReadKeyboard
                    bcc _B_48FD
                    jmp B_4B3A

_B_48FD             lda Joy2
                    bne _B_4932
_B_4902             cpx #$FF
                    beq _B_4922
                    lda #$00
                    sta KBD_VAR_14
                    lda #$01
                    sta KBD_VAR_15
_B_490E             and KBD_VAR_16
                    bne _B_491A
                    lda KBD_VAR_0D
                    clc
                    adc KBD_VAR_14
                    jsr CheckKeys
_B_491A             inc KBD_VAR_14
                    asl KBD_VAR_15
                    lda KBD_VAR_15
                    bcc _B_490E
_B_4922             lda KBD_VAR_0D
                    clc
                    adc #$08
                    sta KBD_VAR_0D
                    sec
                    rol KBD_VAR_0E
                    lda KBD_VAR_0E
                    tax
                    bcs _B_48F5
                    rts

_B_4932             lda #$01
                    sta KBD_VAR_1B
                    sta KBD_VAR_1C
                    lda #$00
                    sta Joy2
                    sta KBD_VAR_1D
                    beq _B_4902

KBD_Bits0           .byte %00000001
                    .byte %00000010
                    .byte %00000100
                    .byte %00001000
                    .byte %00010000
                    .byte %00100000
                    .byte %01000000
                    .byte %10000000
KBD_Bits1           .byte %11111110
                    .byte %11111101
                    .byte %11111011
                    .byte %11110111
                    .byte %11101111
                    .byte %11011111
                    .byte %10111111
                    .byte %01111111
R_4951              .byte $08,$0D,$FF,$FD,$FC,$FA,$F9,$00
                    .byte $33,$57,$41,$34,$5A,$53,$45,$01
                    .byte $35,$52,$44,$36,$43,$46,$54,$58
                    .byte $37,$59,$47,$38,$42,$48,$55,$56
                    .byte $39,$49,$4A,$30,$4D,$4B,$4F,$4E
                    .byte $2B,$50,$4C,$2D,$2E,$3A,$F5,$2C
                    .byte $F8,$F7,$3B,$1B,$FE,$F6,$2D,$2F
                    .byte $31,$08,$FB,$32,$20,$FE,$51,$00

CheckKeys           cmp KBD_VAR_0F
                    beq _B_49AB
                    cmp KBD_VAR_10
                    beq _B_49AB
                    cmp KBD_VAR_11
                    beq _B_49AB
                    cmp KBD_VAR_12
                    beq _B_49AB
                    ldx #$03
                    tay
_B_49A4             lda KBD_VAR_0F,x
                    bmi _B_49AC
                    dex
                    bpl _B_49A4
_B_49AB             rts

_B_49AC             tya
                    sta KBD_VAR_0F,x
                    lda R_4951,y
                    bmi _B_49BF
                    ldx CTRLKey
                    beq _B_49BC
                    sec
                    sbc #$40
_B_49BC             jmp PutKeyInBuffer

_B_49BF             cmp #$FE
                    bne _B_49C8
                    lda #$00
                    sta KBD_VAR_1B
                    rts

_B_49C8             cmp #$FF
                    bne _B_49D0
                    lda #$00
                    sta KBD_VAR_1C
_B_49D0             cmp #$FD
                    bne _B_49D9
                    lda #$02
                    sta KBD_VAR_1D
                    rts

_B_49D9             cmp #$FC
                    bne quitkey
                    lda #$01
                    sta KBD_VAR_1D
                    rts

quitkey             tax
                    lda $12
                    cmp #$39
                    bne _B_49E2
                    jmp InitGame


_B_49E2             txa
                    cmp #$FB
                    bne MultiColor
                    lda #$01
                    sta CTRLKey
                    rts

MultiColor          cmp #$FA
                    bne _B_49F9
                    lda D016_SCREEN_CTRL_REG2
                    eor #%00010000
                    sta D016_SCREEN_CTRL_REG2
                    rts

_B_49F9             cmp #$F9
                    bne _B_4A20
                    lda #$00
                    sta ColorStart_Lo
                    lda #$D8
                    sta ColorStart_Hi
                    lda #$E8
                    sta ColorEnd_Lo
                    lda #$DB
                    sta ColorEnd_Hi
                    lda #$01
                    ldx #$0F
                    jsr S_4AE3
                    lda #$10
                    ldx #$F0
                    jsr S_4AE3
                    rts

_B_4A20             cmp #$F8
                    bne _B_4A3E
                    lda #$00
                    sta ColorStart_Lo
                    lda #$04
                    sta ColorStart_Hi
                    lda #$E8
                    sta ColorEnd_Lo
                    lda #$07
                    sta ColorEnd_Hi
                    lda #$01
                    ldx #$0F
                    bne _B_4A5A

_B_4A3E             cmp #$F7
                    bne BorderColor
                    lda #$00
                    sta ColorStart_Lo
                    lda #$04
                    sta ColorStart_Hi
                    lda #$E8
                    sta ColorEnd_Lo
                    lda #$07
                    sta ColorEnd_Hi
                    lda #$10
                    ldx #$F0
_B_4A5A             jsr S_4AE3
                    sta PaperClr
                    rts

BorderColor         cmp #$F6
                    bne PaperColor
                    inc D020_BORDER_COLOR
                    lda D020_BORDER_COLOR
                    sta BorderClr
                    rts

PaperColor          cmp #$F5
                    bne _exit
                    inc D021_BACKGROUND_COLOR
                    lda D021_BACKGROUND_COLOR
                    sta BackGdClr
                    rts


_exit               rts

S_4A7E              ldx #$03
_B_4A80             lda KBD_VAR_0F,x
                    bpl _B_4A88
_B_4A84             dex
                    bpl _B_4A80
                    rts

_B_4A88             sta KBD_VAR_0C
                    lsr a
                    lsr a
                    lsr a
                    tay
                    stx KBD_VAR_1A
                    ldx KBD_Bits1,y
                    jsr ReadKeyboard
                    bcc _B_4A9B
                    jmp B_4B3A

_B_4A9B             tax
                    lda $12
                    cmp #$39
                    bne +
                    jmp InitGame
                    +
                    
                    
                    ldx KBD_VAR_1A
                    lda KBD_VAR_0C
                    and #%00000111
                    tay
                    lda KBD_Bits0,y
                    and KBD_VAR_16
                    beq _B_4A84
                    lda #$80
                    sta KBD_VAR_0F,x
                    ldy KBD_VAR_0C
                    lda R_4951,y
                    bpl _B_4A84
                    stx KBD_VAR_0C
                    cmp #$FE
                    bne _B_4AC0
                    lda #$01
                    sta KBD_VAR_1B
                    bne _B_4AD5

_B_4AC0             cmp #$FF
                    bne _B_4ACA
                    lda #$01
                    sta KBD_VAR_1C
                    bne _B_4AD5

_B_4ACA             cmp #$FB
                    bne _B_4AD5
                    lda #$00
                    sta CTRLKey
                    beq _B_4AD5

_B_4AD5             ldx KBD_VAR_0C
                    jmp _B_4A84

ColorStart_Lo       .byte $00
ColorStart_Hi       .byte $00
ColorEnd_Lo         .byte $00
ColorEnd_Hi         .byte $00
ColorMask           .byte $00
Color               .byte $00
PTRStore_Lo         .byte $00
PTRStore_Hi         .byte $00
AStore              .byte $00

S_4AE3              sta Color
                    stx ColorMask
                    lda PTR_66
                    ldx PTR_66+1
                    sta PTRStore_Lo
                    stx PTRStore_Hi
                    lda ColorStart_Lo
                    ldx ColorStart_Hi
                    sta PTR_66
                    stx PTR_66+1
_B_4AFD             ldy #$00
                    lda (PTR_66),y
                    clc
                    adc Color
                    and ColorMask
                    tax
                    lda ColorMask
                    eor #%11111111
                    and (PTR_66),y
                    sta (PTR_66),y
                    txa
                    ora (PTR_66),y
                    sta (PTR_66),y
                    sta AStore
                    inc PTR_66
                    bne _B_4B20
                    inc PTR_66+1
_B_4B20             lda PTR_66
                    cmp ColorEnd_Lo
                    bne _B_4AFD
                    lda PTR_66+1
                    cmp ColorEnd_Hi
                    bne _B_4AFD
                    lda #<PTRStore_Lo
                    sta PTR_66
                    lda #>PTRStore_Lo
                    sta PTR_66+1
                    lda AStore
                    rts

B_4B3A              iny
                    beq _exit
                    lda #$01
                    sta Joy2
                    lda KBD_VAR_16
                    and #%00010000
                    beq _B_4B4A
                    lda #$01
_B_4B4A             sta KBD_VAR_1B
                    lda KBD_VAR_17
                    and #%00010000
                    beq _B_4B54
                    lda #$01
_B_4B54             sta KBD_VAR_1C
                    lda KBD_VAR_17
                    tax
                    and #%00000001
                    bne _B_4B61
                    lda #$01
                    bne _B_4B6C

_B_4B61             txa
                    and #%00000010
                    bne _B_4B6A
                    lda #$02
                    bne _B_4B6C

_B_4B6A             lda #$00
_B_4B6C             sta KBD_VAR_1D
_exit               rts

ReadKeyboard        ldy #$FF
                    sty DC00_DataPortA
                    lda DC00_DataPortA
                    sta KBD_VAR_16
                    lda DC01_PataPortB
                    sta KBD_VAR_17
                    stx DC00_DataPortA
                    ldx DC01_PataPortB
                    sty DC00_DataPortA
                    ldy DC00_DataPortA
                    lda DC01_PataPortB
                    sty KBD_VAR_18
                    sta KBD_VAR_19
                    and KBD_VAR_18
                    and KBD_VAR_16
                    and KBD_VAR_17
                    eor #%11111111
                    bne _B_4B9F
                    stx KBD_VAR_16
                    clc
                    rts

_B_4B9F             lda KBD_VAR_16
                    cmp KBD_VAR_18
                    bne _B_4BAF
                    lda KBD_VAR_17
                    cmp KBD_VAR_19
                    bne _B_4BAF
                    ldy #$00
                    sec
                    rts

_B_4BAF             ldy #$FF
                    sec
                    rts"
iaTHHVQJ,Untitled,irmantas_radavicius,C++,Tuesday 20th of February 2024 11:16:24 AM CDT,"#include <iostream>
#include <fstream>
#include <sstream>
#include <cctype>
#include <vector>



using namespace std;

int main(){

    /*
    int x;
    while(1){
        cout << ""Iveskite skaiciu: "";
        cin >> x;
        char c = cin.get();
        if(cin.fail() || (c != '\n')){
            cout << ""Blogas ivedimas!"" << endl;
            cin.clear();
            cin.ignore(1024, '\n');

        } else
            break;
    }
    // x yra geras
    cout << ""Tu ivedei "" << x << endl;
    */

    /*
    double x;
    int y;
    while(1){
        cout << ""Iveskite du skaicius (double ir int): "";
        cin >> x;
        cin >> y;
        char c = cin.get();
        if(cin.fail() || (c != '\n')){
            cout << ""Blogas ivedimas!"" << endl;
            cin.clear();
            cin.ignore(1024, '\n');

        } else
            break;
    }
    // x ir y yra geri
    cout << ""Tu ivedei "" << x << "" ir "" << y << endl;
    */

    /*
    vector<int> v;
    while(1){
        string line;
        cout << ""Ivesk skaiciu sarasa: "";
        getline(cin, line);

        stringstream ss;
        ss << line;
        int klaida = 0;
        while(1){
            int x;
            ss >> x;
            if(!ss.fail()){
                v.push_back(x);
            } else {
                if(!ss.eof())
                    klaida = 1;
                break;
            }
        }
        if(klaida == 0) // && v.size() % 2 == 1)
            break;
        else {
            cout << ""Blogas ivedimas"" << endl;
            v.clear();
        }
    }
    // skaiciu sarasas yra geras
    for(int i = 0; i < v.size(); i++)
        cout << v[i] << "" "";
    cout << endl;
    */
    return 0;

}
"
8b5RXmuD,Untitled,k3NGuru,YAML,Tuesday 20th of February 2024 11:16:10 AM CDT,"---
- name: Создаем и настраиваем БД
  hosts: all
  roles:
    - database

---   ### database/tasks/main.yml

- name: Настраиваем PostgreSQL
  ansible.builtin.include_tasks: database.yml
  loop: ""{{ dbname }}""

---   ### database/tasks/database.yml 

- name: Создаем пользователя {{ item.user }}
  community.postgresql.postgresql_user:
    host: ""{{ PGSRV1 }}""
    login_user: postgres
    login_password: ""{{ PGSPASS }}""
    name: ""{{ item.user }}""
    password: ""{{ PGPWD }}""
    role_attr_flags: LOGIN
    # port: 5432

- name: Создаем БД {{ item.name }}
  community.postgresql.postgresql_db:
    host: ""{{ PGSRV1 }}""
    login_user: postgres
    login_password: ""{{ PGSPASS }}""
    name: ""{{ item.name }}""
    owner: ""{{ item.user }}""
    # port: 5432

- name: Создаем схему {{ item.name }} в БД {{ item.name }}
  community.postgresql.postgresql_schema:
    host: ""{{ PGSRV1 }}""
    login_user: postgres
    login_password: ""{{ PGSPASS }}""
    db: ""{{ item.name }}""
    name: ""{{ item.name }}""
    owner: ""{{ item.user }}""

--- ###  database/defaults/main.yml 

dbname:
 - { name: ""admin_api"", user: ""admin_api_admin"" }
 - { name: ""agenda"", user: ""agenda_admin"" }

PGSRV1: postgres.intra.local
PGSPASS: aaaa
PGPWD: Blab!
"
n93BuBUX,Untitled,Martin_Toseski,C++,Tuesday 20th of February 2024 11:05:50 AM CDT,"Minimum Bit Flips to Convert Number (2220)
class Solution {
public:
    int minBitFlips(int start, int goal) {
        return __builtin_popcount((start^goal));
    }
};

Number of Even and Odd Bits (2595)
class Solution {
public:
    string to_bin(int x) {
        string ans = """";

        while(x != 0) {
            ans += (x%2)+'0';
            x/=2;
        }

        return ans;
    }  

    vector<int> evenOddBit(int n) {
        string x = to_bin(n);
        int even = 0, odd = 0;
        for (int i=0; i < x.size(); i++) {
            if (i%2 == 0 && x[i] == '1') even++;
            if (i%2 == 1 && x[i] == '1') odd++;
        }

        vector<int> ans;
        ans.push_back(even);
        ans.push_back(odd);
        return ans;
    }
};

Add Binary (67)
class Solution {
public:
    string addBinary(string a, string b) {
        string ans = """";
        int rem = 0;
        int mx = max(a.size(), b.size());

        reverse(a.begin(), a.end());
        reverse(b.begin(), b.end());

        for (int i=0; i < mx; i++) {
            int fs, sc;

            if (i >= a.size()) {
                fs = 0;
            }
            else fs = a[i]-'0';
            if (i >= b.size()) {
                sc = 0;
            }
            else sc = b[i]-'0';

            int sum = fs+sc+rem;
            if (sum == 0) {
                ans += '0';
                rem = 0;
            } 
            if (sum == 1) {
                ans += '1';
                rem = 0;
            } 
            if (sum == 2) {
                ans += '0';
                rem = 1;
            } 
            if (sum == 3) {
                ans += '1';
                rem = 1;
            } 
        }

        if (rem > 0) ans += rem+'0';
        reverse(ans.begin(), ans.end());

        return ans;
    }
};

The kth Factor of n (1492)
class Solution {
public:
    int kthFactor(int n, int k) {
        int cnt=0, ans=-1;
        for (int i=1; i <= n; i++) {
            if (n%i == 0) cnt++;
            if (cnt == k){
                ans = i;
                break;
            }
        }

        return ans;
    }
};

Closest Prime Numbers in Range (2523)
class Solution {
public:
    vector<int> closestPrimes(int left, int right) {
        bool prime[right+1];
        memset(prime, true, sizeof(prime));

        vector<int> v;

        for (long long i=2; i <= right; i++) {
            if (prime[i]) {
                if (i >= left && i <= right) v.push_back(i);
                for (long long j=2*i; j <= right; j+=i) {
                    prime[j] = false;
                }
            }
        }

        if (v.size() <= 1) 
            return {-1, -1};

        int a=0, b=INT_MAX;
        for (int i=1; i < v.size(); i++)
            if (v[i]-v[i-1] < b-a) a=v[i-1], b=v[i];
        return {a, b};
    }
};

Add to Array-Form of Integer (989)
class Solution {
public:
    vector<int> addToArrayForm(vector<int>& num, int k) {
        vector<int> ans;

        reverse(num.begin(), num.end());
        int pos = 0, over = 0;

        while(pos != num.size() && k > 0) {
            int cifra = k%10;
            int curr_zbir = num[pos]+cifra+over;
            ans.push_back(curr_zbir%10);
            over = curr_zbir/10;
            k/=10;
            pos++;
        }

        while(k != 0) {
            int cifra = k%10;
            int curr_zbir = cifra+over;
            ans.push_back(curr_zbir%10);
            over = curr_zbir/10;
            k/=10;
        }

        while(pos != num.size()) {
            int cifra = num[pos];
            int curr_zbir = cifra+over;
            ans.push_back(curr_zbir%10);
            over = curr_zbir/10;
            pos++;
        }
        
        if (over > 0) {
            ans.push_back(over);
        }

        reverse(ans.begin(), ans.end());

        return ans;
    }
};

Add Strings (415)
class Solution {
public:
    string addStrings(string num1, string num2) {
        string ans;
        reverse(num1.begin(), num1.end());
        reverse(num2.begin(), num2.end());

        int MAX = max(num1.size(), num2.size());

        int over = 0;
        for (int i=0; i < MAX; i++) {
            int cifra1, cifra2;
            if (i >= num1.size()) {
                cifra1 = 0;
            }
            else {
                cifra1 = num1[i]-'0';
            }

            if (i >= num2.size()) {
                cifra2 = 0;
            }
            else {
                cifra2 = num2[i]-'0';
            }

            int curr_zbir = cifra1+cifra2+over;
            ans += to_string(curr_zbir%10);
            over = curr_zbir/10;
        }
        
        if (over > 0) {
            ans.push_back(over+'0');
        }

        reverse(ans.begin(), ans.end());
        return ans;
    }
};"
4Qm3bebS,Untitled,backparsnip,Bash,Tuesday 20th of February 2024 10:54:04 AM CDT,"FRONTPOTATOROOF
 
2-G4BMK97 2@G4BMK97 2/G4BMK97 2\\G4BMK97 2=G4BMK97 2+G4BMK97 2_G4BMK97 [2+G4BMK97]
 
This is Feb 20 testing 1653
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6e

"
Cb6Tvve6,Merge K sorted linked lists,jayati,C++,Tuesday 20th of February 2024 10:53:41 AM CDT,"class Solution{
  public:
    //Function to merge K sorted linked list.
   Node* sortedMerge(Node* head1, Node* head2)  
{  
    // code here
   if(head1==NULL) return head2;
   if(head2==NULL) return head1;
   
   Node *head=NULL,*tail=NULL;
   if(head1->data<=head2->data){
       head=tail=head1;
       head1=head1->next;
   }else {
       head=tail=head2;
       head2=head2->next;
   }
   while(head1!=NULL && head2!=NULL){
       if(head1->data<=head2->data){
           tail->next=head1;
           head1=head1->next;
       }else {
           tail->next=head2;
           head2=head2->next;
       }
       tail=tail->next;
   }
   if(head1==NULL) tail->next=head2;
   if(head2==NULL) tail->next=head1;
   return head;
}  
    Node * mergeKLists(Node *arr[], int K)
    {
           // Your code here
           Node *curr=arr[0];
          for(int i=1;i<K;i++){
               curr=sortedMerge(curr,arr[i]);
          }
           return curr;
    }
};
"
qnEkmcWp,Untitled,grue74,6502 TASM/64TASS,Tuesday 20th of February 2024 10:45:03 AM CDT,"LimitBallSpeed      lda VAR_DE
                    ldx VAR_DF
                    bmi +
                    lsr VAR_DF                          
                    ror VAR_DE
                    lsr VAR_DF
                    ror VAR_DE
                    lsr VAR_DF
                    jmp ++

+                   sec
                    ror VAR_DF
                    ror VAR_DE
                    sec
                    ror VAR_DF
                    ror VAR_DE
                    sec
                    ror VAR_DF

+                   ror VAR_DE
                    sbc VAR_DE
                    sta VAR_DE
                    txa
                    sbc VAR_DF
                    sta VAR_DF
                    lda VAR_E4
                    ldx VAR_E5
                    bmi +
                    lsr VAR_E5
                    ror VAR_E4
                    lsr VAR_E5
                    ror VAR_E4
                    lsr VAR_E5
                    jmp ++

+                   sec
                    ror VAR_E5
                    ror VAR_E4
                    sec
                    ror VAR_E5
                    ror VAR_E4
                    sec
                    ror VAR_E5
+                   ror VAR_E4
                    sbc VAR_E4
                    sta VAR_E4
                    txa
                    sbc VAR_E5
                    sta VAR_E5
                    ldx BallTrails
                    beq _exit
                    dex
                    bne _exit
                    lda BallTrailsLim
                    ldy #$11
                    sta (PTR_86),y
_exit               rts"
7qaJ2LS0,Untitled,irmantas_radavicius,C++,Tuesday 20th of February 2024 10:38:54 AM CDT,"#include <iostream>
#include <fstream>
#include <sstream>
#include <cctype>

using namespace std;

int main(){

    int x;
    while(1){
        cout << ""Iveskite skaiciu: "";
        cin >> x;
        char c = cin.get();
        if(cin.fail() || (c != '\n')){
            cout << ""Blogas ivedimas!"" << endl;
            cin.clear();
            cin.ignore(1024, '\n');

        } else
            break;
    }

    // x yra geras
    cout << ""Tu ivedei "" << x << endl;

    return 0;

}
"
xTtR41bz,Untitled,Josif_tepe,C++,Tuesday 20th of February 2024 10:34:20 AM CDT,"#include <iostream>
#include <algorithm>
#include <queue>
#include <vector>
using namespace std;
const int maxn = 500;
const int di[] = {-1, 1, 0, 0};
const int dj[] = {0, 0, -1, 1};
int n, m;
char mat[maxn][maxn];
bool visited[maxn][maxn];
int wolves, sheep;
void dfs(int i, int j) {
//    cout << i << "" "" << j << endl;
    visited[i][j] = true;
    
    if(mat[i][j] == 'v') {
        wolves++;
    }
    if(mat[i][j] == 'o') {
        sheep++;
    }
    for(int k = 0; k < 4; k++) {
        int ti = i + di[k];
        int tj = j + dj[k];
        
        if(ti >= 0 and ti < n and tj >= 0 and tj < m and !visited[ti][tj] and mat[ti][tj] != '#') {
            dfs(ti, tj);
        }
    }
    
}
int main() {
    ios_base::sync_with_stdio(false);
    cin >> n >> m;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> mat[i][j];
            visited[i][j] = false;
        }
    }
    int res_sheep = 0, res_wolves = 0;
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            if(mat[i][j] != '#' and !visited[i][j]) {
                wolves = 0;
                sheep = 0;
                dfs(i, j);
                if(sheep > wolves) {
                    res_sheep += sheep;
                }
                else {
                    res_wolves += wolves;
                }
            }
        }
    }
    cout << res_sheep << "" "" << res_wolves << endl;
    return 0;
}
/*
 6 6
 1 2
 2 3
 2 5
 3 5
 3 4
 5 6
 **/
"
