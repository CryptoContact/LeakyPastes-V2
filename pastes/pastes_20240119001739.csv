id,title,username,language,date,content
CysNpeMZ,2024-01-18_stats.json,rdp_snitch,JSON,Thursday 18th of January 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""158.220.82.163"": 54,
    ""117.145.27.42"": 6,
    ""208.53.61.115"": 2,
    ""185.106.176.8"": 8,
    ""150.223.46.21"": 1,
    ""203.56.40.167"": 7,
    ""106.58.166.180"": 3,
    ""74.105.22.131"": 16,
    ""118.193.44.118"": 1,
    ""36.111.174.56"": 9,
    ""124.67.254.109"": 7,
    ""43.134.33.208"": 3,
    ""216.202.197.116"": 16,
    ""106.75.20.182"": 2,
    ""106.75.123.252"": 4,
    ""194.165.17.21"": 20,
    ""150.223.62.190"": 2,
    ""104.234.53.203"": 1,
    ""42.51.13.226"": 3,
    ""110.40.34.231"": 13,
    ""36.91.222.100"": 2,
    ""172.81.216.105"": 1,
    ""111.161.41.132"": 5,
    ""218.90.120.19"": 4,
    ""222.219.129.74"": 2,
    ""43.243.136.202"": 16,
    ""213.97.250.153"": 15,
    ""106.58.217.61"": 3,
    ""124.67.115.210"": 3,
    ""106.58.217.149"": 3,
    ""14.18.41.26"": 2,
    ""103.245.195.202"": 4,
    ""113.108.8.125"": 4,
    ""95.130.227.198"": 3,
    ""222.219.240.13"": 6,
    ""45.87.212.182"": 2,
    ""113.31.157.54"": 2,
    ""115.236.75.10"": 7,
    ""80.235.52.92"": 3,
    ""140.246.149.76"": 1,
    ""117.33.174.14"": 5,
    ""122.227.146.74"": 3,
    ""175.120.134.80"": 4,
    ""106.58.215.167"": 2,
    ""203.57.39.224"": 3,
    ""58.218.204.183"": 6,
    ""62.6.252.50"": 1,
    ""194.165.16.11"": 2,
    ""106.58.164.95"": 3,
    ""106.75.6.46"": 3,
    ""203.57.46.218"": 1,
    ""52.80.19.192"": 3,
    ""185.196.220.41"": 3,
    ""125.88.211.59"": 1,
    ""193.142.146.227"": 3,
    ""183.134.89.41"": 1,
    ""106.58.221.13"": 1,
    ""150.223.79.15"": 3,
    ""45.227.254.55"": 2,
    ""58.247.112.34"": 3,
    ""150.223.66.55"": 4,
    ""120.48.64.252"": 2,
    ""205.210.31.162"": 3,
    ""62.204.41.199"": 3,
    ""106.75.245.66"": 1,
    ""167.94.138.125"": 1,
    ""103.184.47.83"": 1,
    ""175.120.134.93"": 4,
    ""119.96.169.74"": 4,
    ""113.31.31.153"": 1,
    ""120.202.49.41"": 2,
    ""106.58.165.88"": 2,
    ""61.171.113.104"": 2,
    ""87.251.75.145"": 3,
    ""1.82.238.130"": 2,
    ""150.223.35.239"": 3,
    ""106.58.178.111"": 3,
    ""1.117.40.238"": 3,
    ""175.4.26.179"": 4,
    ""27.128.239.46"": 3,
    ""109.69.7.157"": 4,
    ""150.223.13.195"": 2,
    ""203.56.4.242"": 1,
    ""201.80.184.90"": 1,
    ""140.246.215.173"": 5,
    ""103.215.81.133"": 5,
    ""185.170.144.3"": 2,
    ""125.230.232.229"": 3,
    ""103.240.84.186"": 4,
    ""106.225.199.92"": 4,
    ""150.223.76.57"": 3,
    ""43.133.56.30"": 3,
    ""42.193.192.91"": 2,
    ""195.97.20.99"": 1,
    ""106.58.210.135"": 3,
    ""198.235.24.44"": 3,
    ""121.5.74.35"": 6,
    ""167.248.133.39"": 1,
    ""81.69.247.8"": 2,
    ""45.141.26.152"": 2,
    ""150.223.32.106"": 2,
    ""194.165.16.73"": 4,
    ""50.116.32.84"": 4,
    ""81.70.142.203"": 1,
    ""142.93.95.8"": 1,
    ""134.175.53.186"": 1,
    ""106.58.184.58"": 3,
    ""162.142.125.212"": 1,
    ""194.165.16.10"": 2,
    ""182.61.55.68"": 1,
    ""196.190.117.7"": 1,
    ""139.59.185.252"": 1,
    ""43.134.83.223"": 1,
    ""209.52.157.13"": 2,
    ""152.32.245.170"": 1,
    ""205.210.31.88"": 3,
    ""42.51.39.209"": 1,
    ""101.32.116.25"": 1,
    ""106.58.219.212"": 1,
    ""49.233.212.94"": 1,
    ""106.55.54.44"": 1,
    ""94.232.45.92"": 3,
    ""106.75.254.159"": 1,
    ""104.234.53.221"": 1,
    ""123.56.20.194"": 2,
    ""106.225.199.24"": 1,
    ""45.141.26.228"": 1,
    ""87.251.75.64"": 1,
    ""79.129.23.188"": 1,
    ""150.223.56.176"": 1,
    ""106.58.212.195"": 1,
    ""106.58.212.201"": 1,
    ""103.44.237.12"": 1,
    ""43.134.0.225"": 3,
    ""106.58.178.2"": 1,
    ""27.8.44.19"": 4,
    ""205.210.31.197"": 3,
    ""45.141.26.223"": 1,
    ""61.171.106.140"": 2,
    ""222.93.104.67"": 1,
    ""45.141.26.68"": 1
  },
  ""asn"": {
    ""AS51167"": 54,
    ""AS9808"": 8,
    ""AS17341"": 2,
    ""AS42960"": 8,
    ""AS58519"": 48,
    ""AS4134"": 68,
    ""AS701"": 16,
    ""AS135377"": 2,
    ""AS4837"": 24,
    ""AS132203"": 11,
    ""AS3356"": 16,
    ""AS23724"": 9,
    ""AS48721"": 28,
    ""AS206092"": 2,
    ""AS56005"": 4,
    ""AS38283"": 13,
    ""AS7713"": 2,
    ""AS45090"": 18,
    ""AS4808"": 16,
    ""AS3352"": 15,
    ""AS9541"": 4,
    ""AS35682"": 3,
    ""AS9009"": 2,
    ""AS17621"": 7,
    ""AS3249"": 3,
    ""AS134768"": 7,
    ""AS9318"": 8,
    ""AS2856"": 1,
    ""AS55960"": 3,
    ""AS208046"": 6,
    ""AS58466"": 1,
    ""AS58461"": 1,
    ""AS267784"": 2,
    ""AS38365"": 3,
    ""AS396982"": 12,
    ""AS59425"": 3,
    ""AS398324"": 3,
    ""AS146817"": 1,
    ""AS58563"": 4,
    ""AS4812"": 4,
    ""AS208091"": 4,
    ""AS63838"": 4,
    ""AS21183"": 4,
    ""AS28573"": 1,
    ""AS55933"": 5,
    ""AS197414"": 2,
    ""AS3462"": 3,
    ""AS134238"": 5,
    ""AS3329"": 1,
    ""AS142299"": 5,
    ""AS63949"": 4,
    ""AS14061"": 2,
    ""AS24757"": 1,
    ""AS852"": 2,
    ""AS212482"": 3,
    ""AS37963"": 2,
    ""AS6799"": 1,
    ""AS4816"": 1
  },
  ""isp"": {
    ""Contabo GmbH"": 54,
    ""China Mobile communications corporation"": 8,
    ""C7 Data Centers"": 2,
    ""VH-GLOBAL"": 8,
    ""Cloud Computing Corporation"": 48,
    ""Chinanet"": 67,
    ""Verizon Business"": 16,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""CNC Group CHINA169 Neimeng Province Network"": 10,
    ""Shenzhen Tencent Computer Systems Company Limited"": 13,
    ""Level 3 Communications"": 16,
    ""UCLOUD"": 13,
    ""Flyservers S.A."": 30,
    ""Velcom"": 2,
    ""China Unicom Henan Province network"": 4,
    ""CHINANET SiChuan Telecom Internet Data Center"": 13,
    ""PT Telekomunikasi Indonesia"": 2,
    ""China Unicom Tianjin Province Network"": 5,
    ""China Unicom Beijing Province Network"": 16,
    ""Telefonica de Espana SAU"": 15,
    ""CHINANET Guangdong province network"": 2,
    ""Cyber Internet Services (Private) Limited"": 4,
    ""Best Internet Solution XK"": 3,
    ""M247 Europe SRL"": 2,
    ""Telia Eesti AS"": 3,
    ""CHINANET SHAANXI province Cloud Base network"": 7,
    ""SK Broadband Co Ltd"": 8,
    ""British Telecommunications PLC"": 1,
    ""Beijing Guanghuan Xinwang Digital"": 3,
    ""ColocationX Ltd."": 6,
    ""China Telecom"": 1,
    ""CNC Group CHINA169 Shanghai Province Network"": 3,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 3,
    ""Google LLC"": 12,
    ""Horizon LLC"": 3,
    ""Censys, Inc."": 3,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""CHINANET Hubei province network"": 4,
    ""CNC Group CHINA169 Tianjin Province network"": 1,
    ""China Telecom (Group)"": 5,
    ""Xhost Internet Solutions LP"": 9,
    ""China Internet Network Information Center"": 11,
    ""Hengyang"": 4,
    ""Vodafone Network"": 4,
    ""Claro NXT Telecomunicacoes Ltda"": 1,
    ""Cloudie Limited"": 5,
    ""Chunghwa Telecom Co., Ltd."": 3,
    ""China Unicom CHINA169 Network"": 4,
    ""CHINANET Jiangx province IDC network"": 5,
    ""Aceville Pte.ltd"": 4,
    ""HOL"": 1,
    ""CLOUDFOREST CO., LTD"": 5,
    ""Akamai Technologies, Inc."": 4,
    ""EuroNet Internet"": 1,
    ""DigitalOcean, LLC"": 1,
    ""Ethiotelecom"": 1,
    ""DIGITALOCEAN"": 1,
    ""TELUS Communications Inc"": 2,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""OTEnet"": 1,
    ""China Unicom Chongqing Province Network"": 4
  },
  ""org"": {
    ""Contabo GmbH"": 54,
    ""China Mobile"": 8,
    ""VegaDigital Solutions"": 2,
    ""VH Global Limited"": 8,
    ""Chinanet SD"": 27,
    ""Chinanet FJ"": 12,
    ""Chinanet YN"": 38,
    ""Verizon Business"": 16,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Chinanet ZJ"": 9,
    ""Unknown"": 40,
    ""Tencent Cloud Computing"": 7,
    ""Fort Wayne Internet, LLC"": 16,
    ""Shanghai UCloud Information Technology Company Limited"": 13,
    ""Flyservers S.A"": 28,
    ""ONTAR-40 (Velcom INC)"": 2,
    ""Henan Telcom Union Technology Co., LTD"": 4,
    ""Chengdu Giant Times Technology Co., Ltd"": 13,
    ""Telekomunikasi Indonesia"": 2,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 4,
    ""Chinanet JS"": 11,
    ""Beijing yunchuang communication Technology Co."": 16,
    ""RIMA (Red IP Multi Acceso)"": 15,
    ""Chinanet GD"": 6,
    ""Cyber Internet Services Pakistan"": 4,
    ""Best Internet Solution XK"": 3,
    ""M247 LTD"": 2,
    ""Hangzhou xiaoshan public transportation co., LTD"": 7,
    ""Chinanet SN"": 7,
    ""Ningbo chaoji mamawangluojishu ltd"": 3,
    ""SK Broadband Co Ltd"": 8,
    ""Btnet"": 1,
    ""AWS EC2 (cn-north-1)"": 3,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""UAB Host Baltic"": 2,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""Horizon LLC"": 3,
    ""Censys, Inc"": 1,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""Chinanet HB"": 4,
    ""BeiJing QianJingShiJi Co., Ltd."": 1,
    ""Chinanet SH"": 4,
    ""Xhost Internet Solutions"": 4,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 13,
    ""Chinanet HN"": 4,
    ""Chinanet HE"": 3,
    ""NET Servi\u00e7os de Comunica\u00e7\u00e3o S.A."": 1,
    ""Netads Online Limited"": 5,
    ""Xhostis"": 2,
    ""Chunghwa Telecom Co. Ltd."": 3,
    ""Chinanet JX"": 5,
    ""Koumakis Emm. S.A."": 1,
    ""Censys, Inc."": 1,
    ""Cloudforest CO., LTD"": 5,
    ""Linode"": 4,
    ""Online Breedband B.V."": 1,
    ""DigitalOcean, LLC"": 2,
    ""Censys Inc"": 1,
    ""Colliers Macaulay Nicolls Inc"": 2,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Dmitriy Panchenko"": 3,
    ""Aliyun Computing Co., LTD"": 2,
    ""OTEnet S.A."": 1,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 1
  },
  ""regionName"": {
    ""England"": 56,
    ""Guangdong"": 27,
    ""Utah"": 2,
    ""Central and Western District"": 14,
    ""Shandong"": 27,
    ""Fujian"": 15,
    ""Yunnan"": 38,
    ""New Jersey"": 16,
    ""Zhejiang"": 20,
    ""Inner Mongolia"": 7,
    ""North West"": 10,
    ""Indiana"": 16,
    ""Beijing"": 47,
    ""Kaunas"": 28,
    ""New York"": 2,
    ""Henan"": 4,
    ""Sichuan"": 13,
    ""Jakarta"": 2,
    ""Shanghai"": 8,
    ""Tianjin"": 6,
    ""Jiangsu"": 11,
    ""Madrid"": 15,
    ""Sindh"": 4,
    ""Tashkent"": 3,
    ""Hesse"": 2,
    ""Harjumaa"": 3,
    ""Shanxi"": 5,
    ""Gyeongsangbuk-do"": 8,
    ""Virginia"": 3,
    ""North Holland"": 9,
    ""Vilnius"": 2,
    ""California"": 13,
    ""Moscow"": 3,
    ""Michigan"": 3,
    ""Hubei"": 5,
    ""Shaanxi"": 2,
    ""Hunan"": 4,
    ""Hebei"": 3,
    ""Tirana"": 4,
    ""Minas Gerais"": 1,
    ""Taichung City"": 3,
    ""Jiangxi"": 5,
    ""Attica"": 1,
    ""Bangkok"": 6,
    ""Georgia"": 4,
    ""Addis Ababa"": 1,
    ""Ontario"": 2,
    ""Central Singapore"": 1,
    ""Perm Krai"": 3,
    ""Thessaly"": 1,
    ""Chongqing"": 4
  },
  ""country"": {
    ""United Kingdom"": 56,
    ""China"": 251,
    ""United States"": 59,
    ""Hong Kong"": 14,
    ""Singapore"": 11,
    ""Lithuania"": 30,
    ""Indonesia"": 2,
    ""Spain"": 15,
    ""Pakistan"": 4,
    ""Uzbekistan"": 3,
    ""Germany"": 2,
    ""Estonia"": 3,
    ""South Korea"": 8,
    ""The Netherlands"": 9,
    ""Russia"": 6,
    ""Albania"": 4,
    ""Brazil"": 1,
    ""Taiwan"": 3,
    ""Greece"": 2,
    ""Thailand"": 6,
    ""Ethiopia"": 1,
    ""Canada"": 2
  },
  ""account"": {
    ""hello"": 65,
    ""142.93.8.59"": 368,
    ""(empty)"": 7,
    ""Test"": 16,
    ""Domain"": 11,
    ""lFznKxGEz"": 1,
    ""gVpEKd"": 1,
    ""sjbBwa"": 1,
    ""Administr"": 6,
    ""user"": 1,
    ""aJnzGFiaa"": 1,
    ""CUOjAv"": 1,
    ""jBCDBw"": 1,
    ""5r0knkai"": 4,
    ""beio"": 1,
    ""Administrator"": 1,
    ""HhNsQOAfO"": 1,
    ""tqDlHo"": 1,
    ""CaTHKy"": 1,
    ""ZomdsQfGQ"": 1,
    ""BTqWBB"": 1,
    ""ABsDLA"": 1
  },
  ""keyboard"": {
    ""Unknown"": 492
  },
  ""client_build"": {
    ""Unknown"": 492
  },
  ""client_name"": {
    ""Unknown"": 492
  },
  ""ip_type"": {
    ""hosting"": 145,
    ""mobile"": 17,
    ""Unknown"": 303,
    ""proxy"": 23,
    ""hosting & proxy"": 4
  }
}"
Qdw8jUjc,Google Appscript format batchs of  tabs within a Google Sheet,cedroid,JavaScript,Thursday 18th of January 2024 05:47:25 PM CDT,"/*
The success of the entire script, especially the formatting, hinges on the correct setup of the getColumnFormats() function. It's essential that the column names and their corresponding formats in this function accurately reflect the actual data structure in your sheets for the script to work effectively.

The script below is based on a google sheet that contains hotel reservations data but the column order and the cell formatting was not correct, the issue was happening with hundreds of tabs within the same sheet, modify the script according to your needs:

1. processSheets()
This is the main function that initiates the processing of all sheets in the active spreadsheet. It performs several key tasks:

- Retrieves all the sheets in the spreadsheet.
- Creates or accesses the 'Formatting Logs' sheet for tracking progress.
- Processes each sheet (up to 30 at a time for resource management).
- Logs the processing status (success or error) for each sheet.
- Displays a notification summarizing the number of sheets successfully processed and those with errors.

2. processSingleSheet(sheet, columnFormats)
Processes an individual sheet by:

- Checking if the sheet has any columns and rows.
- Sorting the columns alphabetically based on headers.
- Writing the sorted data back to the sheet.
- Applying formatting to each column based on predefined rules.
- Returning the status of processing (success or error with notes).

3. applyFormat(range, formatInfo)
- Applies formatting to a given range in a sheet. It uses the format information specified in the formatInfo parameter. The function switches between different types of data (date, text, number, currency) and applies the corresponding format.

4. logStatus(logSheet, sheet, status)
- Logs the processing status of each sheet in the 'Formatting Logs' sheet. It records the sheet name, a hyperlink to the sheet, the timestamp of processing, and notes on the status (success or error).

5. setupLogSheet(logSheet)
- Sets up the initial headers in the 'Formatting Logs' sheet for tracking. Headers include ""Sheet Name"", ""Hyperlink"", ""Timestamp"", ""Status"", and ""Status Notes"".

6. isSheetProcessed(logSheet, sheetName)
- Checks if a sheet has already been processed successfully. It prevents reprocessing of sheets that are already formatted.

7. getColumnFormats()
- Crucial for the entire script, this function returns a hardcoded object mapping column names to their respective data types and formats. It is essential that the user manually matches these names and formats with the actual column names present in the sheets. Failure to correctly match these will result in improper or failed formatting. The formats for each type of data (like date, text, number, currency) need to be predefined here.

If you need a test spreadsheet you can generate one using the script that I have written here: https://pastebin.com/nbhP4WxB


*/

function processSheets() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheets = ss.getSheets();
  var columnFormats = getColumnFormats();

  // Create or get the 'Formatting Logs' sheet
  var logSheet = ss.getSheetByName(""Formatting Logs"") || ss.insertSheet(""Formatting Logs"");
  // Set up log sheet headers
  setupLogSheet(logSheet);

  var processedCount = 0;
  var errorCount = 0;
  var successCount = 0;

  // Process each sheet
  sheets.forEach(function(sheet) {
    if (sheet.getName() !== ""Formatting Logs"" && !isSheetProcessed(logSheet, sheet.getName())) {
      var status = processSingleSheet(sheet, columnFormats);
      logStatus(logSheet, sheet, status);

      if (status.error) {
        errorCount++;
      } else {
        successCount++;
      }

      processedCount++;
      if (processedCount >= 30) {
        // Stop processing after 30 sheets
        return;
      }
    }
  });

  // Show notification after processing
  SpreadsheetApp.getUi().alert(
    'Processing completed. ' +
    'Success: ' + successCount + ', ' +
    'Errors: ' + errorCount
  );
}

function processSingleSheet(sheet, columnFormats) {
  var status = { error: false, notes: [] };
  var lastColumn = sheet.getLastColumn();
  var lastRow = sheet.getLastRow();

  // Check if the sheet has columns and rows
  if (lastColumn === 0 || lastRow === 0) {
    status.error = true;
    status.notes.push(""No columns or rows found in sheet."");
    return status;
  }

  // Get headers and sort them along with their data
  var headers = sheet.getRange(1, 1, 1, lastColumn).getValues()[0];
  var data = sheet.getRange(2, 1, lastRow - 1, lastColumn).getValues();

  // Create a combined array of headers and data for sorting
  var combined = headers.map(function(header, index) {
    return [header].concat(data.map(function(row) {
      return row[index];
    }));
  });

  // Sort the combined array alphabetically based on headers
  combined.sort(function(a, b) {
    return a[0].localeCompare(b[0]);
  });

  // Write the sorted data back to the sheet
  for (var col = 0; col < combined.length; col++) {
    sheet.getRange(1, col + 1, lastRow).setValues(combined[col].map(function(cell, index) {
      return [cell];
    }));
  }

  // Apply formats to the sorted columns and check for errors
  combined.forEach(function(column, index) {
    var header = column[0];
    if (columnFormats[header]) {
      try {
        var range = sheet.getRange(2, index + 1, lastRow - 1);
        applyFormat(range, columnFormats[header]);
      } catch (e) {
        status.error = true;
        status.notes.push(""Error in column: "" + header + "" - "" + e.message);
      }
    }
  });

  // Return processing status
  return status;
}

function applyFormat(range, formatInfo) {
  // Apply format based on type and specific format rules
  switch (formatInfo.type) {
    case ""date"":
      range.setNumberFormat(formatInfo.format);
      break;
    case ""text"":
      // Text formatting can be added here
      break;
    case ""number"":
      range.setNumberFormat(formatInfo.format);
      break;
    case ""currency"":
      range.setNumberFormat(formatInfo.format);
      break;
    // Add more cases as needed
  }
}

function logStatus(logSheet, sheet, status) {
  var timeStamp = new Date();
  var sheetUrl = sheet.getParent().getUrl() + ""#gid="" + sheet.getSheetId();
  var statusText = status.error ? ""Error"" : ""Success"";
  var notesText = status.notes.join(""\n"");

  // Append log entry
  logSheet.appendRow([sheet.getName(), sheetUrl, timeStamp, statusText, notesText]);
}

function setupLogSheet(logSheet) {
  // Setup headers for the log sheet
  logSheet.getRange(""A1:E1"").setValues([[""Sheet Name"", ""Hyperlink"", ""Timestamp"", ""Status"", ""Status Notes""]]);
}

function isSheetProcessed(logSheet, sheetName) {
  // Check if the sheet is already processed
  var data = logSheet.getDataRange().getValues();
  for (var i = 1; i < data.length; i++) {
    if (data[i][0] === sheetName && data[i][3] === ""Success"") {
      return true;
    }
  }
  return false;
}

function getColumnFormats() {
  // Hardcoded column names and their formats
  return {
    ""Date"": { type: ""date"", format: ""MM/dd/yyyy"" },
    ""Name"": { type: ""text"", format: ""none"" },
    ""Room"": { type: ""number"", format: ""0"" },
    ""Price"": { type: ""currency"", format: ""$#,##0.00"" },
    ""Check-in"": { type: ""date"", format: ""MM/dd/yyyy"" },
    ""Check-out"": { type: ""date"", format: ""MM/dd/yyyy"" },
    // Add more column formats as needed
  };
}
"
P9bZMQDH,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Thursday 18th of January 2024 05:43:56 PM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://net-drop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://net-drop.netlify.app/

769241"
RGGDTBbt,barrel,DyingSleeper,Lua,Thursday 18th of January 2024 05:30:27 PM CDT,"rot = 0
while true do
	turtle.select(1)
	repeat
		for i = 1,8 do
			turtle.select(i)
			state = turtle.suck()
			if not state then break end
		end
	until true

	if rot % 2 == 0 then
		turtle.turnRight()
	else
		turtle.turnLeft()
	end
	rot = rot + 1
	repeat
		for i = 1,16 do
			name = turtle.getItemDetail(i)
			if name then
				if name.name == ""minecraft:barrel"" then
					turtle.select(i)
					break
				end
			end
		end
		turtle.place()
	until true
	if rot % 2 == 0 then
		turtle.turnRight()
	else
		turtle.turnLeft()
	end
	rot = rot + 1
	
	assert(turtle.dig())
	
	if rot % 2 == 0 then
		turtle.turnRight()
	else
		turtle.turnLeft()
	end
	rot = rot + 1
	repeat
		for i = 1,16 do
			turtle.select(i)
			state = turtle.dropDown()
			if not state then break end
		end
	until true
end"
nbhP4WxB,Google Apps Script create fake data in multiple tabs,cedroid,JavaScript,Thursday 18th of January 2024 05:23:45 PM CDT,"/*
This script is ideal for demonstration purposes, showing how to automate the creation of multiple sheets with randomized data and manage sheets within a Google Spreadsheet programmatically used only to populate google sheets with random data in multiple tabs.

""createSampleSheets""
This function creates 20 new sheets in your current Google Sheets document. Each sheet is named ""SampleSheet"" followed by a number (1 through 20). The sheets are populated with shuffled columns and fake data, simulating hotel reservation information. The columns include ""Date"", ""Name"", ""Room"", ""Price"", ""Check-in"", and ""Check-out"".

Shuffling Columns: The column headers are shuffled in each sheet to create variability.
Fake Data Generation: Each column is filled with appropriate fake data. Dates are randomly generated between November 2023 and February 2024. Names are randomly generated as ""Guest"" followed by a number. Room numbers and prices are also randomly generated.

""shuffleArray""
This utility function takes an array and shuffles its elements in a random order. It's used in createSampleSheets to randomize the order of column headers in each new sheet.

""generateFakeData""
This function generates fake data appropriate to the type of data each column represents. For date-related columns (""Date"", ""Check-in"", and ""Check-out""), it creates random dates within a specified range (November 2023 to February 2024). For the ""Name"" column, it generates a guest name. For ""Room"", it produces a random room number, and for ""Price"", a random price value is generated.

""deleteAllSheetsExceptFirst""
This function deletes all sheets in the active Google Spreadsheet, except for the first sheet. This is particularly useful for cleaning up after testing or demonstrations, but should be used with caution to avoid unintentional deletion of important data.
*/

function createSampleSheets() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();

  // Define the column names
  var columnNames = [""Date"", ""Name"", ""Room"", ""Price"", ""Check-in"", ""Check-out""];

  // Create 20 sample sheets, you can generate more or less
  for (var i = 0; i < 20; i++) {
    var sheetName = ""SampleSheet"" + (i + 1);
    var sheet = ss.insertSheet(sheetName);

    // Shuffle the column names for each sheet
    var shuffledColumns = shuffleArray(columnNames.slice()); // Create a copy and shuffle it

    // Set the column names
    sheet.getRange(1, 1, 1, shuffledColumns.length).setValues([shuffledColumns]);

    // Fill with fake data
    for (var row = 2; row <= 21; row++) {
      for (var col = 1; col <= shuffledColumns.length; col++) {
        var fakeData = generateFakeData(shuffledColumns[col - 1]);
        sheet.getRange(row, col).setValue(fakeData);
      }
    }
  }
}

function shuffleArray(array) {
  for (var i = array.length - 1; i > 0; i--) {
    var j = Math.floor(Math.random() * (i + 1));
    var temp = array[i];
    array[i] = array[j];
    array[j] = temp;
  }
  return array;
}


function generateFakeData(columnName) {
  // Generate fake data based on the column name
  switch (columnName) {
    case ""Date"":
    case ""Check-in"":
    case ""Check-out"":
      // Generate a random date between November 2023 and February 2024
      var startDate = new Date(2023, 10, 1); // November 1, 2023
      var endDate = new Date(2024, 1, 28);   // February 28, 2024
      var randomDate = new Date(startDate.getTime() + Math.random() * (endDate.getTime() - startDate.getTime()));
      return Utilities.formatDate(randomDate, Session.getScriptTimeZone(), ""MM/dd/yyyy"");
    case ""Name"":
      return ""Guest "" + Math.floor(Math.random() * 100);
    case ""Room"":
      return Math.floor(Math.random() * 500) + 1; // Random room number
    case ""Price"":
      return (Math.random() * 300 + 50).toFixed(2); // Random price between 50 and 350
    default:
      return ""Unknown"";
  }
}

function deleteAllSheetsExceptFirst() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheets = ss.getSheets();

  // Loop through sheets and delete all except the first one
  for (var i = sheets.length - 1; i > 0; i--) {
    ss.deleteSheet(sheets[i]);
  }
}
"
5kQKim66,emacs configuration,pintcat,Lisp,Thursday 18th of January 2024 05:17:56 PM CDT,"(setq-default indent-tabs-mode nil)
(setq-default tab-width 4)
(setq indent-line-function 'insert-tab)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(completions-common-part ((t (:foreground ""royalblue2""))))
 '(custom-button-pressed-unraised ((t (:inherit custom-button-unraised :foreground ""magenta""))))
 '(custom-comment-tag ((t (:foreground ""royalblue2""))))
 '(custom-state ((t (:foreground ""olivedrab""))))
 '(custom-variable-obsolete ((t (:foreground ""dodgerblue""))))
 '(custom-variable-tag ((t (:foreground ""dodgerblue"" :weight bold))))
 '(escape-glyph ((t (:foreground ""chocolate""))))
 '(font-lock-builtin-face ((t (:foreground ""green""))))
 '(font-lock-comment-face ((t (:foreground ""brightred""))))
 '(font-lock-function-name-face ((t (:foreground ""royalblue1""))))
 '(font-lock-keyword-face ((t (:foreground ""mediumorchid""))))
 '(font-lock-string-face ((t (:foreground ""violetred2""))))
 '(font-lock-variable-name-face ((t (:foreground ""orange""))))
 '(homoglyph ((t (:foreground ""chocolate""))))
 '(link ((t (:foreground ""royalblue2"" :underline t))))
 '(link-visited ((t (:inherit link :foreground ""magenta2""))))
 '(minibuffer-prompt ((t (:foreground ""dodgerblue""))))
 '(nobreak-hyphen ((t (:foreground ""chocolate""))))
 '(tool-bar ((t (:foreground ""black"" :box (:line-width (1 . 1) :style released-button))))))
"
EKvRUHiP,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Thursday 18th of January 2024 05:06:29 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_169565.pdf
 
Working as of
18 January 2024"
1m8BZeHW,Untitled,f0f077,Python,Thursday 18th of January 2024 05:01:02 PM CDT,"Algorithms and Data Structures in Python (INTERVIEW Q&A)
A guide to implement data structures, graph algorithms and sorting algorithms from scratch with interview questions!
This course is about data structures, algorithms and graphs. We are going to implement the problems in Python programming language. I highly recommend typing out these data structures and algorithms several times on your own in order to get a good grasp of it.
for more:https://cuty.io/JiLNKcG32"
2TXiLVKV,Untitled,f0f077,Python,Thursday 18th of January 2024 04:55:03 PM CDT,"LEETCODE In Python: Algorithms Coding Interview Questions
Practice data structure and algorithms questions for interviews at FAANG companies like Google, Facebook, Apple & Amazon
LeetCode is essentially a huge repository of real interview questions asked by the most popular tech companies ( Google, Amazon, Facebook, Microsoft, and more ).

The problem with LeetCode is also its advantage, IT'S HUGE, so huge in fact that interviewers from the most popular companies often directly ask questions they find on LeetCode, So it's hard to navigate through the huge amount of problems to find those that really matter, 
for more:https://cuty.io/NYCz9vGMj"
cx1eVjzW,Count Puppeteer,ngatmuri,JavaScript,Thursday 18th of January 2024 04:51:42 PM CDT,"
const puppeteer = require('puppeteer');

(async () => {
    const browser = await puppeteer.launch();
    const page = await browser.newPage();
    await page.goto('URL_HALAMAN');

    let commentCount = 1;

    while (true) {
        // Ganti 'SELECTOR_INPUT' dengan selector input komentar
        await page.type('SELECTOR_INPUT', `Ini komentar ke-${commentCount}`);
        
        // Ganti 'SELECTOR_SUBMIT_BUTTON' dengan selector tombol submit
        await page.click('SELECTOR_SUBMIT_BUTTON');

        commentCount++;
        // Tambahkan delay atau kondisi berhenti jika perlu
    }

    await browser.close();
})();
```

Kamu bisa menyesuaikan kode di atas sesuai dengan struktur halaman web dan aksi yang diperlukan. Juga, pastikan untuk menambahkan delay atau kondisi berhenti untuk menghindari posting komentar terlalu cepat atau tanpa henti."
RBDBRBZQ,07.HotelRoom,IvanITD,C#,Thursday 18th of January 2024 04:40:27 PM CDT,"using System.Reflection;

string month = Console.ReadLine();
int overnightStayCount = int.Parse(Console.ReadLine());

double studio = 0.00;
double apartment = 0.00;

if (month == ""May"" || month == ""October"")
{
    studio = 50;
    studio *= overnightStayCount; // Price per night!
    apartment = 65;
    apartment *= overnightStayCount; // Price per night!


    if (overnightStayCount > 14)
    {
        studio -= (studio * 0.30); // За повече от 14 дни нощувки, намаление с 30%
        apartment -= (apartment * 0.10); // За повече от 14 дни нощувки, намаление с 10%, без значение от месеца!
    }
    else if(overnightStayCount > 7)
    {
        studio -= (studio * 0.05); // За повече от 7 дни нощувка, намаление с 5%
    }
     
}
else if (month == ""June"" || month == ""September"")
{
    studio = 75.20;
    studio *= overnightStayCount; // Price per night!
    apartment = 68.70;
    apartment *= overnightStayCount; // Price per night!

    if (overnightStayCount > 14)
    {
        studio -= (studio * 0.20); // За повече от 14 дни нощувки, намаление с 20%
        apartment -= (apartment * 0.10); // За повече от 14 дни нощувки, намаление с 10%, без значение от месеца!
    }
}
else if (month == ""July"" || month == ""August"")
{
    studio = 76;
    studio *= overnightStayCount; // Price per night!
    apartment = 77;
    apartment *= overnightStayCount; // Price per night!

    if (overnightStayCount > 14)
    {
        apartment -= (apartment * 0.10); // За повече от 14 дни нощувки, намаление с 10%, без значение от месеца!
    }
}

Console.WriteLine($""Apartment: {apartment:F2} lv."");
Console.WriteLine($""Studio: {studio:F2} lv."");"
8vqY0q3x,06.OperationsBetweenNumbers,IvanITD,C#,Thursday 18th of January 2024 04:39:34 PM CDT,"int N1 = int.Parse(Console.ReadLine());
int N2 = int.Parse(Console.ReadLine());
char symbol = char.Parse(Console.ReadLine());

double result = 0.00;

if (symbol == '+')
{
    result = N1 + N2;
    if (result % 2 == 0)
    {
        Console.WriteLine($""{N1} + {N2} = {result} - even"");
    }
    else
    {
        Console.WriteLine($""{N1} + {N2} = {result} - odd"");
    }
}
else if (symbol == '-')
{
    result = N1 - N2;
    if (result % 2 == 0)
    {
        Console.WriteLine($""{N1} - {N2} = {result} - even"");
    }
    else
    {
        Console.WriteLine($""{N1} - {N2} = {result} - odd"");
    }
}
else if (symbol == '*')
{
    result = N1 * N2;
    if (result % 2 == 0)
    {
        Console.WriteLine($""{N1} * {N2} = {result} - even"");
    }
    else
    {
        Console.WriteLine($""{N1} * {N2} = {result} - odd"");
    }
}
else if (symbol == '/')
{
    if (N1 == 0 || N2 == 0)
    {
        Console.WriteLine($""Cannot divide {N1} by zero"");
    }
    else
    {
        result = (double)N1 / N2;
        Console.WriteLine($""{N1} / {N2} = {result:F2}"");
    }
}
else if (symbol == '%')
{
    if (N1 == 0 || N2 == 0)
    {
        Console.WriteLine($""Cannot divide {N1} by zero"");
    }
    else
    {
        result = N1 % N2;
        Console.WriteLine($""{N1} % {N2} = {result}"");
    }
}
"
AaZ0npyV,Untitled,f0f077,Python,Thursday 18th of January 2024 04:33:18 PM CDT,"Data Structures and Algorithms Python: The Complete Bootcamp
DSA Basics To Advanced: Learn, Analyze, Implement Data Structures and Algorithms using Python With Interview Questions

Throughout the course, we will explore the most important Data Structures and Algorithms topics step-by-step:

1. Essential Concepts
Big O Notation
Memory
Logarithms
Recursion
for more:https://dz-linkk.com/xsy5R9"
Y3mtAGCX,Waschmaschinen-Meldung,gerd_r,JavaScript,Thursday 18th of January 2024 04:32:27 PM CDT,"[
    {
        ""id"": ""15fd152cd56064c5"",
        ""type"": ""comment"",
        ""z"": ""847cebbc0f5b04cd"",
        ""name"": ""Statusmeldung - Waschmaschine"",
        ""info"": """",
        ""x"": 150,
        ""y"": 40,
        ""wires"": []
    },
    {
        ""id"": ""c7967f83a2ec368c"",
        ""type"": ""server-state-changed"",
        ""z"": ""847cebbc0f5b04cd"",
        ""name"": ""Waschmaschine"",
        ""server"": ""b2e4926a.65b1d"",
        ""version"": 5,
        ""outputs"": 1,
        ""exposeAsEntityConfig"": """",
        ""entityId"": ""sensor.steckdose_waschmaschine_energy_power"",
        ""entityIdType"": ""exact"",
        ""outputInitially"": false,
        ""stateType"": ""str"",
        ""ifState"": """",
        ""ifStateType"": ""num"",
        ""ifStateOperator"": ""is"",
        ""outputOnlyOnStateChange"": false,
        ""for"": """",
        ""forType"": ""num"",
        ""forUnits"": ""seconds"",
        ""ignorePrevStateNull"": true,
        ""ignorePrevStateUnknown"": true,
        ""ignorePrevStateUnavailable"": true,
        ""ignoreCurrentStateUnknown"": true,
        ""ignoreCurrentStateUnavailable"": true,
        ""outputProperties"": [
            {
                ""property"": ""payload"",
                ""propertyType"": ""msg"",
                ""value"": """",
                ""valueType"": ""entityState""
            },
            {
                ""property"": ""data"",
                ""propertyType"": ""msg"",
                ""value"": """",
                ""valueType"": ""eventData""
            },
            {
                ""property"": ""topic"",
                ""propertyType"": ""msg"",
                ""value"": """",
                ""valueType"": ""triggerId""
            }
        ],
        ""x"": 100,
        ""y"": 80,
        ""wires"": [
            [
                ""118cf302b8737aec""
            ]
        ]
    },
    {
        ""id"": ""393e9ae62c2cee2e"",
        ""type"": ""change"",
        ""z"": ""847cebbc0f5b04cd"",
        ""name"": ""Sende Stop-Signal"",
        ""rules"": [
            {
                ""t"": ""set"",
                ""p"": ""payload"",
                ""pt"": ""msg"",
                ""to"": ""STOP"",
                ""tot"": ""str""
            }
        ],
        ""action"": """",
        ""property"": """",
        ""from"": """",
        ""to"": """",
        ""reg"": false,
        ""x"": 510,
        ""y"": 100,
        ""wires"": [
            [
                ""8a2cc0a9b0fc527f""
            ]
        ]
    },
    {
        ""id"": ""81612be05b9b5581"",
        ""type"": ""trigger"",
        ""z"": ""847cebbc0f5b04cd"",
        ""name"": """",
        ""op1"": """",
        ""op2"": ""0"",
        ""op1type"": ""nul"",
        ""op2type"": ""num"",
        ""duration"": ""5"",
        ""extend"": false,
        ""overrideDelay"": false,
        ""units"": ""min"",
        ""reset"": ""STOP"",
        ""bytopic"": ""all"",
        ""topic"": ""topic"",
        ""outputs"": 1,
        ""x"": 490,
        ""y"": 140,
        ""wires"": [
            [
                ""bb07d968206be2d9""
            ]
        ]
    },
    {
        ""id"": ""118cf302b8737aec"",
        ""type"": ""switch"",
        ""z"": ""847cebbc0f5b04cd"",
        ""name"": ""Power-Switch"",
        ""property"": ""payload"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""gt"",
                ""v"": ""3"",
                ""vt"": ""num""
            },
            {
                ""t"": ""lte"",
                ""v"": ""3"",
                ""vt"": ""num""
            }
        ],
        ""checkall"": ""false"",
        ""repair"": false,
        ""outputs"": 2,
        ""x"": 280,
        ""y"": 80,
        ""wires"": [
            [
                ""6624e79336e179e6""
            ],
            [
                ""8a2cc0a9b0fc527f""
            ]
        ]
    },
    {
        ""id"": ""be6cdbe7eb3be976"",
        ""type"": ""power-monitor"",
        ""z"": ""847cebbc0f5b04cd"",
        ""name"": ""Waschmaschine"",
        ""startthreshold"": ""1"",
        ""stopthreshold"": ""0"",
        ""startafter"": 1,
        ""stopafter"": 1,
        ""energydecimals"": 4,
        ""emitidle"": false,
        ""x"": 760,
        ""y"": 80,
        ""wires"": [
            [
                ""6946c87e56581e8f""
            ]
        ]
    },
    {
        ""id"": ""6946c87e56581e8f"",
        ""type"": ""switch"",
        ""z"": ""847cebbc0f5b04cd"",
        ""name"": ""PM - Event"",
        ""property"": ""payload.event"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""eq"",
                ""v"": ""start"",
                ""vt"": ""str""
            },
            {
                ""t"": ""eq"",
                ""v"": ""running"",
                ""vt"": ""str""
            },
            {
                ""t"": ""eq"",
                ""v"": ""stop"",
                ""vt"": ""str""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 3,
        ""x"": 930,
        ""y"": 80,
        ""wires"": [
            [
                ""d3ec410545ca357f"",
                ""b84fc34da1e9cf18"",
                ""7b6b4d39651d9133""
            ],
            [],
            [
                ""d3ec410545ca357f"",
                ""b84fc34da1e9cf18"",
                ""7b6b4d39651d9133""
            ]
        ]
    },
    {
        ""id"": ""6624e79336e179e6"",
        ""type"": ""junction"",
        ""z"": ""847cebbc0f5b04cd"",
        ""x"": 400,
        ""y"": 80,
        ""wires"": [
            [
                ""393e9ae62c2cee2e"",
                ""bb07d968206be2d9""
            ]
        ]
    },
    {
        ""id"": ""8a2cc0a9b0fc527f"",
        ""type"": ""junction"",
        ""z"": ""847cebbc0f5b04cd"",
        ""x"": 380,
        ""y"": 140,
        ""wires"": [
            [
                ""81612be05b9b5581""
            ]
        ]
    },
    {
        ""id"": ""bb07d968206be2d9"",
        ""type"": ""junction"",
        ""z"": ""847cebbc0f5b04cd"",
        ""x"": 660,
        ""y"": 80,
        ""wires"": [
            [
                ""be6cdbe7eb3be976""
            ]
        ]
    },
    {
        ""id"": ""b2e4926a.65b1d"",
        ""type"": ""server"",
        ""name"": ""Home Assistant"",
        ""version"": 5,
        ""addon"": false,
        ""rejectUnauthorizedCerts"": true,
        ""ha_boolean"": ""y|yes|true|on|home|open"",
        ""connectionDelay"": true,
        ""cacheJson"": true,
        ""heartbeat"": true,
        ""heartbeatInterval"": ""30"",
        ""areaSelector"": ""friendlyName"",
        ""deviceSelector"": ""friendlyName"",
        ""entitySelector"": ""friendlyName"",
        ""statusSeparator"": ""at: "",
        ""statusYear"": ""hidden"",
        ""statusMonth"": ""short"",
        ""statusDay"": ""numeric"",
        ""statusHourCycle"": ""h23"",
        ""statusTimeFormat"": ""h:m:s"",
        ""enableGlobalContextStore"": true
    }
]"
yJxVSMSX,Untitled,f0f077,Python,Thursday 18th of January 2024 04:30:03 PM CDT,"Python for Data Structures, Algorithms, and Interviews!
Get a kick start on your career and ace your coding interviews!
This course will teach you everything you need to know to get a great job in the software technology field, including:

Creating a great resume
Creating LinkedIn and GitHub profiles for recruiters to find
Building and leveraging a network for job opportunities
for more:https://dz-linkk.com/codWkK"
YinrDkU1,Mekanism fission reactor script,Terminator_NL,Lua,Thursday 18th of January 2024 03:54:41 PM CDT,"-- This function is required because the handle
-- to the fusion reactor can return nil after creation
function attempt(fun_name, if_true_do, if_false_do)
    reactor = peripheral.find(""fissionReactorLogicAdapter"")
    if reactor == nil then
        return false
    end
    
    if reactor[fun_name] == nil then
        return if_false_do()
    end
    result = reactor[fun_name]() 
    return if_true_do(result)
end


while not peripheral.find(""fissionReactorLogicAdapter"") do
    sleep(1)
    print(""Waiting for reactor to come online..."")
end

term.clear()
term.setCursorPos(1,1)
print(""Script is active."")

-- Steam percentage
target_level = 0.9

-- Coolant percentage
min_coolant = 0.9

while true do
    -- We assume the worst possible state
    steam_level = attempt(""getHeatedCoolantFilledPercentage"", function(level) return level end, function() return 0 end)
    coolant_level = attempt(""getCoolantFilledPercentage"", function(level) return level end, function() return 0 end)
    damage_level = attempt(""getDamagePercent"", function(damage) return damage end, function() return 100 end)
    waste_level = attempt(""getWasteFilledPercentage"",function(level) return level end, function() return 100 end)
    redstone_allowed = rs.getInput(""front"")
    
    should_run = steam_level < target_level and waste_level <= 0 and redstone_allowed and coolant_level > min_coolant and damage_level <= 0

    current_state = attempt(""getStatus"", function(status) return status end, function() return true end)
    
    term.setCursorPos(1,2)
    term.clearLine()
    if current_state ~= should_run then
        if should_run then
            attempt(""activate"", function(v) return nil end, function() return nil end)
            term.write(""Switched reactor status: on"")
        else
            attempt(""scram"", function(v) return nil end, function() return nil end)
            term.write(""Switched reactor status: off"")
        end
    else
        term.write(""Reactor is currently "" .. (current_state and ""running"" or ""stopped""))
    end
    sleep(1)
end
"
dLt2r1Yn,Untitled,Niko_Crawford,C#,Thursday 18th of January 2024 03:39:03 PM CDT,"// lazo start
            { DataName.YouDeletedLeader, ""{0} снял вас с поста лидера фракции"" },
            { DataName.YouGivedBanHammer, ""Вы получили банхаммер до {0}. Причина: {1}. До новых встреч!"" },
            { DataName.AdminReviveYou, ""Administrator {0} te je digao/oziveo."" },
            { DataName.AdminTeleportYou, ""Administrator {0} vas je teleportovao do sebe."" },
            { DataName.AdminSendYouToDemorgan, ""Отправил Вас в деморган на {0} {1}. Причина: {2}"" },
            { DataName.AdminReleasedYouFromDemorgan, ""Выпустил Вас из деморгана. Приятной игры и больше не нарушайте! :)"" },
            { DataName.AdminSendYouToSpawn, ""Телепортировал вас на спавн"" },
            { DataName.FuelPriceOfLiter, ""Цена за литр: {0}$"" },
            { DataName.ReportAnswer, ""odgovor na report"" },
            { DataName.PairAnimation, ""Парная анимация"" },
            { DataName.AirDrop, ""Груз"" },
            { DataName.HeliCrash, ""Крушение вертолета"" },
            { DataName.StartSoon, ""Скоро начнётся!"" },
            { DataName.AfterTenMinutes, ""za 10 minuta!"" },
            { DataName.HeliEventCoolMsgText, ""Над {0} пролетит {1} вертолёт, который передает сигнал бедствия."" },
            { DataName.TheState, ""drzava"" },
            { DataName.Race, ""Гонка"" },
            { DataName.ChallengeToRace, ""Вызов на гонку"" },
            { DataName.Win, ""Победа!"" },
            { DataName.Lose, ""Поражение :("" },
            { DataName.Hospital, ""Bolnica"" },
            { DataName.Healing, ""Lecenje"" },
            { DataName.Fine, ""Kazna"" },
            { DataName.SuccessPayment, ""Успешная оплата"" },
            { DataName.Fail, ""Отказ!"" },
            { DataName.YouPaidFine, ""Вы оплатили штраф в размере {0}$ за {1}"" },
            { DataName.PaidYourFine, ""{0} оплатил штраф в размере {1}$ за {2}"" },
            { DataName.YouDeclinePaidFine, ""Вы отказались платить штраф в размере {0}$ за {1}"" },
            { DataName.DeclinePaidYourFine, ""{0} отказался платить штраф в размере {1}$ за {2}"" },
            { DataName.Wasted, ""WASTED"" },
            { DataName.Arrest, ""Uhapsi"" },
            { DataName.ArrestYou, ""Игрок ({0}) посадил Вас на {1} минут"" },
            { DataName.YouArrest, ""Вы посадили игрока ({0}) на {1} минут"" },
            { DataName.Documents, ""Документы"" },
            { DataName.YouOfferGunLicence, ""Вы предложили купить лицензию на оружие игроку ({0}) за ${1}"" },
            { DataName.HandsUp, ""Поднять руки"" },
            { DataName.OfferYouHandsUp, ""Игрок ({0}) заставляет вас поднять руки. Вы желаете подчиниться требованиям и поднять руки? Y/N - принять/отклонить"" },
            { DataName.YouOfferHandsUp, ""Вы заставляете игрока ({0}) поднять руки."" },
            { DataName.Successfully, ""Uspesno"" },
            { DataName.CallingEmployee, ""Вызов сотрудника"" },
            { DataName.Capture, ""Капт"" },
            { DataName.Realtor, ""Риэлтор"" },
            { DataName.BuyInfo, ""Покупка информации"" },
            { DataName.RentTent, ""Аренда палатки"" },
            { DataName.Mechanic, ""Механик"" },
            { DataName.Faction, ""Organizacija"" },
            { DataName.Organization, ""Organizacija"" },
            { DataName.System, ""Система"" },
            { DataName.Family, ""Familija"" },
            { DataName.RewardForOnline, ""Награда за онлайн"" },
            { DataName.CreateFamily, ""Создание семьи"" },
            { DataName.ClearFamily, ""Семья распущена!"" },
            { DataName.SuccessFamilyCreate, ""Поздравляем Вас с регистрацией собственной семьи - {0}!"" },
            { DataName.SuccessClearFamily, ""Вы распустили семью, деньги были выданы на руки."" },
            { DataName.MatWar, ""MATSWAR"" },
            { DataName.WarForMats, ""Война за материалы!"" },
            { DataName.MatWarStartIn, ""В 20:00 начнется война за материалы! Фракции, приготовьтесь!"" },
            { DataName.GiveAdminAccessToAdmins, ""{0} ({1}) выдал {2} админ. права 1 уровня"" },
            { DataName.TakeAdminAccessToAdmins, ""{0} ({1}) снял с {2} админ. права"" },
            { DataName.GiveAdminRankToAdmins, ""{0} ({1}) выдал {2} {3} уровень админ. прав"" },
            { DataName.GiveVipToAdmins, ""{0} ({1}) выставил {2} статус {3} на {4} дней."" },
            { DataName.GiveLeaderToAdmins, ""{0} ({1}) выдал лидерку({2}) {3} ({4})"" }, // 2 - faction id, 3 - target name, 4 - target id
            { DataName.RequestGiveLeaderAcceptToAdmins, ""{0} ({1}) подтвердил запрос выдачи лидерки администратора {2}"" },
            { DataName.RequestGiveLeaderToAdmins, ""{0} выдал лидерку({1}) {2} ({3})"" },
            { DataName.TakeLeaderToAdmins, ""{0} ({1}) снял лидерку {2} ({3})"" },
            { DataName.DelPlayerWorkToAdmins, ""{0} ({1}) уволил с работы {2} ({3})"" },
            { DataName.DelPlayerFactionToAdmin, ""{0} ({1}) выкинул из фракции {2} ({3})"" },
            { DataName.SBanAlwaysToAdmins, ""{0} забанил игрока {1}({2}) без лишнего шума навсегда. Причина: {3}"" },
            { DataName.SBanTimeToAdmins, ""{0} забанил игрока {1}({2}) без лишнего шума на {3} дней. Причина: {4}"" },
            { DataName.KillPlayerToAdmins, ""{0} ({1}) убил игрока {2} ({3})"" },
            { DataName.RevivePlayerToAdmins, ""{0} ({1}) возродил игрока {2} ({3})"" },
            { DataName.SetHpToAdmins, ""{0} ({1}) выставил HP({2}) {3} ({4})"" },
            { DataName.TpMeToAdmins, ""{0} ({1}) телепортировал к себе {2} ({3})"" },
            { DataName.RequestGlobalAcceptToAdmins, ""{0} ({1}) подтвердил запрос на global({2})"" },
            { DataName.DelPlayerFactionToAdmins, ""{0} ({1}) уволил из фракции {2}"" },
            { DataName.SendCreatorToAdmins, ""{0} ({1}) отправил в creator {2} ({3})"" },
            { DataName.RequestSendCreatorAcceptToAdmins, ""{0} ({1}) подтвердил запрос смены внешности от администратора {2}"" },
            { DataName.RequestSendCreatorToAdmins, ""{0} отправил в creator {1} ({2})"" },
            { DataName.ChangeNameToAdmins, ""{0} ({1}) изменил имя {2} на {3}"" },
            { DataName.RequestChangeNameAcceptToAdmins, ""{0} ({1}) подтвердил запрос изменения администратора {2}"" },
            { DataName.RequestChangeNameToAdmins, ""{0} изменил имя {1} на {2}"" },
            { DataName.ChangeNameInOfflineToAdmins, ""{0} ({1}) изменил имя {2} на {3} в оффлайне"" },
            { DataName.RequestChangeNameInOfflineToAdmins, ""{0} изменил имя {1} на {2} в оффлайне"" },
            { DataName.TpToAdmins, ""{0} ({1}) телепортировался к {2} ({3})"" },
            { DataName.TpMeVehToAdmins, ""{0} ({1}) телепортировал машину к себе {2} ({3})"" },
            { DataName.TpVehWidthIdToAdmins, ""{0} ({1}) телепортировался к машине {2} ({3})"" },
            { DataName.TpVehWidthNumberToAdmins, ""{0} ({1}) телепортировался к машине {2} (ID: {3}; Number: {4})"" },
            { DataName.ChangeVehDimensionToAdmins, ""{0} ({1}) изменил dimension машины {2} ({3}) на {4}."" },
            { DataName.CheckDonateToAdmins, ""{0} ({1}) узнал количество RB у {2} ({3}) - {4}"" },
            { DataName.CheckVipToAdmins, ""{0} ({1}) узнал VIP-статус {2} ({3}) - {4}"" },
            { DataName.CheckLoginToAdmins, ""{0} ({1}) проверил логин {2} ({3}) - {4}"" },
            { DataName.BanLoginInOfflineIsOnlineToAdmins, ""{0} ({1}) в оффлайне забанил логин({2}) {3} ({4}) по причине {5}"" },
            { DataName.BanLoginInOfflineToAdmins, ""{0} ({1}) в оффлайне забанил логин({2}) по причине {3}"" },
            { DataName.UnBanLoginToAdmins, ""{0} ({1}) разбанил логин({2}"" },
            { DataName.GiveArmorToAdmins, ""{0} ({1}) выдал Armor({2}) {3} ({4})"" },
            { DataName.CheckGMToAdmins, ""{0} ({1}) проверил на GM {2} ({3})"" },
            { DataName.SlapToAdmins, ""{0} ({1}) подкинул {2} ({3})"" },
            { DataName.CheckMoneyToAdmins, ""{0} ({1}) проверил денежные средства {2} ({3})"" },
            { DataName.FreezeToAdmins, ""{0} ({1}) заморозил {2} ({3})"" },
            { DataName.UnFreezeToAdmins, ""{0} ({1}) разморозил {2} ({3})"" },
            { DataName.GiveGunToAdmins, ""{0} ({1}) выдал оружие ({2}|{3}) {4} ({5})"" }, // 2 - weapon name, 3 - weapon serial
            { DataName.GiveCarCouponToAdmins, ""{0} ({1}) выдал купон на машину ({2}) {3} ({4})"" },
            { DataName.TakeAllGunsToAdmins, ""{0} ({1}) забрал все оружия {2} ({3})"" },
            { DataName.CheckLastDeathDataToAdmins, ""{0} ({1}) проверил данные последней смерти {2} ({3})"" },
            { DataName.StartSpecToAdmins, ""{0} ({1}) начал слежение {2} ({3})"" },
            { DataName.EndSpecToAdmins, ""{0} ({1}) вышел из режима слежения"" },
            { DataName.GiveAmmoToAdmins, ""{0} ({1}) выдал патроны ({2}|{3}) {4} ({5})"" },
            { DataName.SetPlayerDimensionToAdmins, ""{0} ({1}) выставил Dimension({2}) {3} ({4})"" },
            { DataName.SpawnAllVehiclesToAdmins, ""{0} ({1}) отправил все машины на спавн ({2} шт."" },
            { DataName.SpawnVehicleToAdmins, ""{0} ({1}) отправил машину на спавн ({2})"" },
            { DataName.RepairVehicleToAdmins, ""{0} ({1}) починил машину ({2})"" },
            { DataName.RepairVehicleByIdToAdmins, ""{0} ({1}) je popravio vozilo ID ({2})"" },
            { DataName.CheckOfflineStatsToAdmins, ""{0} ({1}) je proverio offline /stats {2}"" },
            { DataName.CheckStatsToAdmins, ""{0} ({1}) je proverio /stats {2} ({3})"" },
            { DataName.CheckAdminListToAdmins, ""{0} ({1}) проверяет список администрации в сети"" },
            { DataName.CheckMediaListToAdmins, ""{0} ({1}) проверяет список медиа в сети"" },
            { DataName.UnWantedAdminToAdmins, ""{0} ({1}) je skinuo wanted {2} ({3})"" },
            { DataName.GiveAllLicencesToAdmins, ""{0} ({1}) je dao komplet dozvola igracu {2} ({3})"" },
            { DataName.TpCoordsToAdmins, ""{0} ({1}) se teleportovao do kordinate {2} {3} {4}"" },
            { DataName.FuelFillToAdmins, ""{0} ({1}) заправил машину ({2},{3}л)"" }, // 2 - vehicle id, 3 - fuel
            { DataName.GivePlayerLevelToAdmins, ""{0} ({1}) выдал {2} ({3}) {4} уровней"" },
            { DataName.DeleteAdminVehicleToAdmins, ""{0} ({1}) удалил админ-машину ({2})"" },
            { DataName.DeleteAllAdminVehiclesToAdmins, ""{0} ({1}) удалил все админ-машины"" },
            { DataName.DeleteAllOwnedAdminVehiclesToAdmins, ""{0} ({1}) удалил все свои админ-машины"" },
            { DataName.SpawnPlayerToAdmins, ""{0} ({1}) отправил на спавн {2} ({3})"" },
            { DataName.UpHealthToAdmins, ""{0} ({1}) повысил себе здоровье"" },
            { DataName.CreateVehicleToAdmins, ""{0} ({1}) создал машину({2},{3})"" }, // 2 - veh name, 3 - veh id
            { DataName.CreateManyVehiclesToAdmins, ""{0} ({1}) создал {2} машин({3})"" },
            { DataName.CheckVehicleOwnerToAdmins, ""{0} ({1}) проверяет владельца машины {2} ({3})"" },
            { DataName.ChangeWeatherToAdmins, ""{0} ({1}) je promenio vreme u ({2})"" },
            { DataName.ChangeGameTimeToAdmins, ""{0} ({1}) установил игровое время({2} {3} {4})"" }, // 2 - hour, 3 - minutes, 4 - seconds
            { DataName.FlipVehicleToAdmins, ""{0} ({1}) перевернул машину {2} ({3})"" },
            { DataName.CheckNickHistoryToAdmins, ""{0} ({1}) проверяет историю изменения имён {2} ({3})"" },
            { DataName.CheckNickHistoryByUIDToAdmins, ""{0} ({1}) проверяет историю изменения имён по UUID {2}"" },
            { DataName.ClearFactionToAdmins, ""{0} ({1}) очистил фракцию {2}"" },
            { DataName.TpHomeToAdmins, ""{0} ({1}) телепортировался к дому {2}"" },
            { DataName.TpBusinessToAdmins, ""{0} ({1}) телепортировался к бизнесу {2}"" },
            { DataName.AdminSMSToPlayer, ""{0} Administrator {1} ({2}): {3}"" },
            { DataName.LeaveFromSpecToPlayer, ""Prestao si specati."" },
            { DataName.GovMemberPhone, "" Телефон для связи: {0}"" },
            { DataName.YouUnBanInCapureAndBizWar, ""Administrator {0} ti je omogucio zauzimanje i BizWar."" },
            { DataName.YouLoadIPL, ""Вы подгрузили IPL: {0}"" },
            { DataName.YouUnLoadIPL, ""Вы выгрузили IPL: {0}"" },
            { DataName.YouEnableEffect, ""Omogucio si efekat: {0}"" },
            { DataName.YouDisableEffect, ""Onemogucio si efekat: {0}"" },
            { DataName.YouCanResetDeliveryPoint, ""Если вдруг вы сбили точку доставки, то напишите в чат /mypoint"" },
            { DataName.YouCanResetVehiclePoint, ""Если вдруг вы сбили координаты машины, то напишите в чат /mypoint"" },
            { DataName.ChangeVipAddDays, ""Так как у Вас уже был VIP статус, то вместо его замены Вам было начислено дополнительно {0} дней использования!"" },
            { DataName.YouNotSetPromoOnReg, ""~r~Вы не указывали промокод или реф.код при регистрации, но всё еще можете активировать любой из промокодов через телефон (M -> Подарок)."" },
            { DataName.PlayerOwnedBusiness, ""Игрок владеет бизнесом {0} (ID:{1})"" },
            { DataName.PlayerOwnedHouse, ""Игрок имеет недвижимость (ID{0}) стоимостью ${1} класса '{2}'"" },
            { DataName.PlayerLivingInHouse, ""Игрок заселен в дом (ID{0}) к {1} стоимостью ${2} класса '{3}'"" },
            { DataName.YouGiveToYou, ""Вы выдали себе {0}!"" },
            { DataName.TaxEnabled, ""Списывание налогов включено!"" },
            { DataName.TaxDisabled, ""Списывание налогов выключено!"" },
            { DataName.YouRefillBisinessProducts, ""~r~Вы полностью пополнили склад бизнеса!"" },
            { DataName.CantFindStock, ""~r~Склада такой фракции нет"" },
            { DataName.Mats, ""materijali"" },
            { DataName.Drugs, ""narkotici"" },
            { DataName.MedKits, ""kit za prvu pomoc"" },
            { DataName.Money, ""novac"" },
            { DataName.WarForMatsInProgress, ""~r~Война за маты уже идёт"" },
            { DataName.VMZNotInProgress, ""~r~ВЗМ еще не начат, он должен быть запущен."" },
            { DataName.SuccessHousePrice, ""~r~Вы успешно установили цену для домов - {0}"" },
            { DataName.SuccessHouseClearOwner, ""~r~Вы успешно очистили владельца у недвижимости {0}"" },
            { DataName.MustFactionVehicleForChange, ""Вы должны сидеть в машине фракции, которую хотите изменить"" },
            { DataName.SuccessChangeTunForFactionVeh, ""Вы изменили тюнинг этой машины для фракции."" },
            { DataName.SuccessChangeDataForFactionVeh, ""Вы изменили данные этой машины для фракции."" },
            { DataName.TruckerRadio, ""~y~[Рация дальнобойщиков] "" },
            { DataName.SilentSay, ""[Шепот] "" },
            { DataName.RewartLimit, ""Награда не может превышать выставленный лимит {0}."" },
            { DataName.CantEditReport, ""Report ne moze da se uredjuje."" },
            { DataName.YourReport, ""~o~Vase pitanje: {0}"" },
            { DataName.AdminAnswer, ""{0} Administrator {1} ({2}): {3}"" },
            { DataName.NeedNearSafe, ""~r~[Ошибка] ~w~Вы должны быть возле сейфа."" },
            { DataName.HeliCrashChatMessage, ""~o~[HeliCrash] Через 10 минут над {0} пролетит {1} вертолёт, который передает сигнал бедствия."" },
            { DataName.TankRoyaleEndWithoutWinner, ""~o~[Tank Royale] Мероприятие было завершено без победителя."" },
            { DataName.TankRoyaleLeftTanks, ""~o~[Tank Royale] В игре осталось {0} танков!"" },
            { DataName.TankRoyaleWinner, ""~o~[Tank Royale] Победитель {0} выжил с {1}HP и получил {2}$."" },
            { DataName.GandEndDelivery, ""Сдача машины: !{{#00FF00}}{0}$ ~w~были отправлены в общак банды и еще столько же тебе в карман. ({1} {2})"" },
            { DataName.FamilyEndDelivery, ""Сдача фургона: !{{#00FF00}}{0}$ ~w~были отправлены в общак группировки и еще столько же тебе в карман. ({1} {2})"" },
            { DataName.SetWantedToFaction, ""!{{#FF8C00}}[F] {0} объявил в розыск {1}. Причина: {2}"" },
            { DataName.YouCollectAllBearGiveItGranny, ""Вы собрали всех Мишек, отдайте их Бабушке Granny!"" },
            { DataName.YouCollectHalfBearSetWaypointToNext, ""Вы собрали 1/2 Мишек. Остался последний Мишка. На карте отмечено следующее примерное расположение последнего Мишки!"" },
            { DataName.InPhone, ""[U telefonu] {0}: {1}"" },
            { DataName.SomebodyTryHackCityHallDoorToFaction, ""Кто-то пытается взломать дверь в хранилище мэрии."" },
            { DataName.HouseSafeTryHackToFaction, ""Сейф №{0} по адресу {1} пытаются взломать."" },
            { DataName.OpenStockToFaction, ""{0} ({1}) je otvorio skladiste."" },
            { DataName.CloseStockToFaction, ""{0} ({1}) je zatvorio/la skladiste."" },
            { DataName.OpenSecondStockToFaction, ""{0} ({1}) открыл склад №2."" },
            { DataName.CloseSecondStockToFaction, ""{0} ({1}) закрыл склад №2."" },
            { DataName.PlayerLeaveFromFaction, ""{0} ({1}) уволился по собственному желанию."" },
            { DataName.FinePlayerToFaction, ""{0} оштрафовал {1} на {2}$. Причина: {3}"" },
            { DataName.ArrestPlayerToFaction, ""{0} посадил в КПЗ {1} ({2})"" },
            { DataName.UnArrestPlayerToFaction, ""{0} выпустил из КПЗ {1}"" },
            { DataName.SetVehicleWantedToFaction, ""{0} объявил транспортное средство [{1}] в розыск. Причина: {2}"" },
            { DataName.StartStreamToFaction, ""{0} ({1}) начал прямой эфир."" },
            { DataName.EndStreamToFaction, ""{0} ({1}) закончил прямой эфир."" },
            { DataName.AcceptCallFromHouseToFaction, ""{0} принял вызов из дома №{1}."" },
            { DataName.AcceptCallFromVehicleSirenToFaction, ""{0} принял вызов сигнализации машины №{1}."" },
            { DataName.AcceptCallFromSafeHackToFaction, ""{0} принял вызов по ограблению сейфа."" },
            { DataName.EnableCraftWeapon, ""{0} ({1}) разрешил крафт оружия."" },
            { DataName.DisableCraftWeapon, ""{0} ({1}) запретил крафт оружия."" },
            { DataName.EnableExtremeSituation, ""{0} объявил режим ЧП!!!"" },
            { DataName.DisableExtremeSituation, ""{1} отключил режим ЧП."" },
            { DataName.PutInStock, ""положил на склад"" },
            { DataName.TakeFromStork, ""взял со склада"" },
            { DataName.ActionDrinkBeerMan, ""бахнул пивка"" },
            { DataName.ActionDrinkBeerWoman, ""бахнула пивка"" },
            { DataName.ActionDrinkBottleMan, ""выпил бутылку {0}"" },
            { DataName.ActionDrinkBottleWoman, ""выпила бутылку {0}"" },
            { DataName.ActionDrinkMan, ""выпил {0}"" },
            { DataName.ActionDrinkWoman, ""выпила {0}"" },
            { DataName.ActionEatMan, ""je pojeo {0}"" },
            { DataName.ActionEatWoman, ""je pojela {0}"" },
            { DataName.ActionDrugsVariationOneMan, ""хапнул шмальца"" },
            { DataName.ActionDrugsVariationOneWoman, ""хапнула шмальца"" },
            { DataName.ActionDrugsVariationTwoMan, ""сделал хапку"" },
            { DataName.ActionDrugsVariationTwoWoman, ""сделала хапку"" },
            { DataName.ActionCocaineVariationOneMan, ""нюхнул дорожку"" },
            { DataName.ActionCocaineVariationOneWoman, ""нюхнула дорожку"" },
            { DataName.ActionCocaineVariationTwoMan, ""вмазал дорожку"" },
            { DataName.ActionCocaineVariationTwoWoman, ""вмазал дорожку"" },
            { DataName.ActionTakeItemMan, ""достал {0}"" },
            { DataName.ActionTakeItemWoman, ""достала {0}"" },
            { DataName.Microphone, ""mikrofon"" },
            { DataName.ActionBongVariationOneMan, ""задымил бонг"" },
            { DataName.ActionBongVariationOneWoman, ""задымила бонг"" },
            { DataName.ActionBongVariationTwoMan, ""сделал затяжику из бонга"" },
            { DataName.ActionBongVariationTwoWoman, ""сделала затяжику из бонга"" },
            { DataName.ActionUseMan, ""использовал {0}"" },
            { DataName.ActionUseWoman, ""использовала {0}"" },
            { DataName.ActionThrowMan, ""выбросил {0}"" },
            { DataName.ActionThrowWoman, ""выбросила {0}"" },
            { DataName.ActionPutMan, ""поставил {0}"" },
            { DataName.ActionPutWoman, ""поставила {0}"" },
            { DataName.ActionTransferMan, ""передал {0}"" },
            { DataName.ActionTransferWoman, ""передала {0}"" },
            { DataName.ActionRefillVehicleMan, ""je napunio vozilo"" },
            { DataName.ActionRefillVehicleWoman, ""je napunila vozilo"" },
            { DataName.ActionSeatBeltEnableMan, ""пристегнул ремень безопасности"" },
            { DataName.ActionSeatBeltEnableWoman, ""пристегнула ремень безопасности"" },
            { DataName.ActionSeatBeltDisableMan, ""отстегнул ремень безопасности"" },
            { DataName.ActionSeatBeltDisableWoman, ""отстегнула ремень безопасности"" },
            { DataName.ActionOpenVehTrunkMan, ""открыл багажник"" },
            { DataName.ActionOpenVehTrunkWoman, ""открыла багажник"" },
            { DataName.ActionCloseVehTrunkMan, ""закрыл багажник"" },
            { DataName.ActionCloseVehTrunkWoman, ""закрыла багажник"" },
            { DataName.ActionSeatInVehTrunkMan, ""залез в багажник"" },
            { DataName.ActionSeatInVehTrunkWoman, ""залезла в багажник"" },
            { DataName.ActionPullFromVehTrunkMan, ""вытащил {0} из багажника"" },
            { DataName.ActionPullFromVehTrunkWoman, ""вытащила {0} из багажника"" },
            { DataName.ActionChangeNumbers, ""меняет номера"" },
            { DataName.ActionLeaveFromVehTrunkMan, ""вылез из багажника"" },
            { DataName.ActionLeaveFromVehTrunkWoman, ""вылезла из багажника"" },
            { DataName.ActionOffEngineMan, ""je ugasio vozilo"" },
            { DataName.ActionOffEngineWoman, ""je ugasila vozilo"" },
            { DataName.ActionOnEngineMan, ""je upalio vozilo"" },
            { DataName.ActionOnEngineWoman, ""je upalila vozilo"" },
            { DataName.ActionHideItemMan, ""spremio {0}"" },
            { DataName.ActionHideItemWoman, ""spremila {0}"" },
            { DataName.ActionFinePlayerMan, ""выписал штраф для {{name}}"" },
            { DataName.ActionFinePlayerWoman, ""выписала штраф для {{name}}"" },
            { DataName.ActionArrestPlayerMan, ""поместил {{name}} в КПЗ"" },
            { DataName.ActionArrestPlayerWoman, ""поместила {{name}} в КПЗ"" },
            { DataName.ActionRemoveFromPrisonMan, ""освободил {{name}} из КПЗ"" },
            { DataName.ActionRemoveFromPrisonWoman, ""освободила {{name}} из КПЗ"" },
            { DataName.ActionFollowMan, ""je povukao {{name}} za sobom"" },
            { DataName.ActionFollowWoman, ""je povukla {{name}} za sobom"" },
            { DataName.ActionUnFollowMan, ""je pustio {{name}}"" },
            { DataName.ActionUnFollowWoman, ""je pustila {{name}}"" },
            { DataName.ActionPutInVehMan, ""открыл дверь и усадил {{name}} в машину"" },
            { DataName.ActionPutInVehWoman, ""открыла дверь и усадил {{name}} в машину"" },
            { DataName.ActionRemoveFromVehMan, ""открыл дверь и вытащил {{name}} из машины"" },
            { DataName.ActionRemoveFromVehWoman, ""открыла дверь и вытащил {{name}} из машины"" },
            { DataName.ActionOnSearchNotFoundMan, ""хорошенько обшарив {{name}}, ничего не нашёл"" },
            { DataName.ActionOnSearchNotFoundWoman, ""хорошенько обшарив {{name}}, ничего не нашла"" },
            { DataName.ActionOnSearchMoneyMan, ""хорошенько обшарив {{name}}, нашёл ${0}"" },
            { DataName.ActionOnSearchMoneyWoman, ""хорошенько обшарив {{name}}, нашла ${0}"" },
            { DataName.ActionStealWeaponMan, ""выкрал оружие у {{name}}"" },
            { DataName.ActionStealWeaponWoman, ""выкрала оружие у {{name}}"" },
            { DataName.ActionRemoveBagFromPlayerMan, ""снял мешок с {{name}}"" },
            { DataName.ActionRemoveBagFromPlayerWoman, ""сняла мешок с {{name}}"" },
            { DataName.ActionRemoveMaskFromPlayerMan, ""сорвал маску с {{name}}"" },
            { DataName.ActionRemoveMaskFromPlayerWoman, ""сорвала маску с {{name}}"" },
            { DataName.ActionEquipMaskOnPlayerMan, ""надел мешок на {{name}}"" },
            { DataName.ActionEquipMaskOnPlayerWoman, ""надела мешок на {{name}}"" },
            { DataName.ActionHandsUpMan, ""поднял руки"" },
            { DataName.ActionHandsUpWoman, ""подняла руки"" },
            { DataName.ActionAnyNotFound, ""Ничего нет при себе"" },
            { DataName.ActionManyMoneyFound, ""При себе большое количество денег"" },
            { DataName.ActionLittleMoneyFound, ""При себе ${0}"" },
            { DataName.ActionPetDeliverBall, ""Питомец принёс мячик."" },
            { DataName.ActionFeedPetMan, ""покормил питомца"" },
            { DataName.ActionFeedPetWoman, ""покормила питомца"" },
            { DataName.ActionPickItemMan, ""поднял {0}"" },
            { DataName.ActionPickItemWoman, ""подняла {0}"" },
            { DataName.ActionPickPartItemMan, ""поднял часть {0}"" },
            { DataName.ActionPickPartItemWoman, ""подняла часть {0}"" },
            { DataName.ActionWinMoneyMan, ""выиграл «{0}{1}!{{#d4d4d4}}» в количестве {2}$ из {3}."" }, // 0 - color, 1 - name, 2 - amount, 3 - case name
            { DataName.ActionWinMoneyWoman, ""выиграла «{0}{1}!{{#d4d4d4}}» в количестве {2}$ из {3}."" },
            { DataName.ActionWinDonateMan, ""выиграл «{0}{1}!{{#d4d4d4}}» в количестве {2}RB из {3}."" },
            { DataName.ActionWinDonateWoman, ""выиграла «{0}{1}!{{#d4d4d4}}» в количестве {2}RB из {3}."" },
            { DataName.ActionWinMan, ""выиграл «{0}{1}!{{#d4d4d4}}» из {2}."" },
            { DataName.ActionWinWoman, ""выиграла «{0}{1}!{{#d4d4d4}}» из {2}."" },
            { DataName.AdminLoginToAdmins, ""!{#FFB833}[A] {0} авторизовался ({1} lvl)"" },
            { DataName.RequestGiveLeaderDeleteToAdmins, ""Запрос на выдачу лидерки для {0} ({1}) удалён в связи с {2}."" },
            { DataName.RequestChangeSkinDeleteToAdmins, ""Запрос на смену внешности для {0} ({1}) удалён в связи с {2}."" },
            { DataName.TryOfflineRemoveHighAdminToAdmins, ""{0} ({1}) попытался снять {2} (offline), который имеет выше уровень администратора."" },
            { DataName.TryRemoveHighAdminToAdmins, ""{0} ({1}) попытался снять {2} ({3}), который имеет выше уровень администратора."" },
            { DataName.RequestSendSetLeaderToAdmins, ""Запрос от {0} ({1}) на выдачу лидерки({2}) для {3} ({4}). Чтобы подтвердить действие - введите: /setleader {4} {2}"" }, // This is not an error, it's just that there are repeated arguments
            { DataName.BanWordToAdmins, ""{0} ({1}) был снят системой за причину в наказании: {2}"" },
            { DataName.PunishCountBanToAdmins, ""{0} ({1}) был снят системой безопасности за превышение лимита наказаний"" },
            { DataName.TryBanMaxLevelAdminToAdmins, ""{0} ({1}) попытался забанить {2} ({3})."" },
            { DataName.BanAdminAndBanTooToAdmins, ""{0} ({1}) забанил {2} ({3}) и был забанен системой."" },
            { DataName.TryHardBanMaxLevelAdminToAdmins, ""{0} ({1}) попытался забанить хардом {2} ({3})."" },
            { DataName.HardBanAdminAndBanTooToAdmins, ""{0} ({1}) забанил хардом {2} ({3}) и был забанен системой."" },
            { DataName.TryBanOfflineToAdmins, ""{0} ({1}) попытался забанить {2} {3} (offline)."" },
            { DataName.BanOfflineAdminAndBanTooToAdmins, ""{0} ({1}) забанил {2} в оффлайне и был забанен системой."" },
            { DataName.UnBanToAdmins, ""{0} ({1}) снял бан {2}"" },
            { DataName.UnBanHardToAdmins, ""{0} ({1}) снял хардбан {2}"" },
            { DataName.UnBanIpToAdmins, ""{0} ({1}) разблокировал IP адрес: {2}"" },
            { DataName.TryKickHighAdminToAdmins, ""{0} ({1}) попытался кикнуть {2} ({3}), который имеет выше уровень администратора."" },
            { DataName.SilentKickToAdmins, ""{0} кикнул игрока {1} ({2}) без лишнего шума."" },
            { DataName.TryWarnHighAdminToAdmins, ""{0} ({1}) попытался предупредить {2} ({3}), который имеет выше уровень администратора."" },
            { DataName.ASMS, ""{0} ({1}) для {2} ({3}): {4}"" },
            { DataName.BanWordForGlobalToAdmins, ""{0} ({1}) был снят системой за причину в глобале: {2}"" },
            { DataName.RequestGlobalToAdmins, ""Запрос от {0} ({1}) на global({2}). Чтобы подтвердить действие - введите: /accept {3}"" },
            { DataName.RequestSendSendCreatorToAdmins, ""Запрос от {0} ({1}) на смену внешности {2}. Чтобы подтвердить действие - введите: /sendcreator {3}"" },
            { DataName.RequestSendChangeNameToAdmins, ""Запрос от {0} ({1}) на смену имени {2} -> {3}. Чтобы подтвердить действие - введите: /setname {2} {3}"" },
            { DataName.RequestSendChangeNameOffToAdmins, ""Запрос от {0} ({1}) на смену имени {2} -> {3}. Чтобы подтвердить действие - введите: /setnameoff {2} {3}"" },
            { DataName.StartWFMToAdminsMan, ""{0} запустил ВЗМ"" }, // War For Mats
            { DataName.StartWFMToAdminsWoman, ""{0} запустила ВЗМ"" },
            { DataName.CancelWFMToAdminsMan, ""{0} закончил ВЗМ"" },
            { DataName.CancelWFMToAdminsWoman, ""{0} закончила ВЗМ"" },
            { DataName.TryOfflineClearHighAdminToAdmins, ""{0} ({1}) попытался очистить {2} (offline), который имеет выше уровень администратора."" },
            { DataName.UnBanCaptureAndBizWarToAdmins, ""{0} ({1}) разблокировал в системах capture и bizwar персонажа {2} ({3})"" },
            { DataName.TryOfflineBanHighAdminToAdmins, ""{0} ({1}) попытался забанить {2} (offline), который имеет выше уровень администратора."" },
            { DataName.TryWriteGovBanWordToAdmins, ""{0} ({1}) попытался написать в гос.связь: {2}"" },
            { DataName.CreateRefCodeToAdmins, ""Игрок {0} ({1}) создал реф. код: {2}"" },
            { DataName.WriteActionToAdmins, ""Игрок {0} ({1}) написал в action: {2}"" },
            { DataName.PermSilentBanToAdmins, ""{0} пожизненно забанил игрока {1} без лишнего шума. Причина: {2}"" },
            { DataName.SilentBanToAdmins, ""{0} забанил игрока {1} на {2}д без лишнего шума. Причина: {3}"" }, // 2 - days
            { DataName.AnswerToAdmins, ""{0}({1}) для {2}({3}): {4}"" },
            { DataName.DisableSafeZoneToAdmins, ""{0} ({1}) выключил возможность драться и получать урон в зоне #{2}"" },
            { DataName.EnableSafeZoneToAdmins, ""{0} ({1}) включил возможность драться и получать урон в зоне #{2}"" },
            { DataName.InvokeCaptureToAdmins, ""{0} ({1}) из {2} спровоцировал capture за территорию {3}."" },
            { DataName.AdminDisconnectToAdmins, ""{0} отключился ({1} lvl)"" },

            // PUNISH IN CHAT TO ALL IF ENABLE
            { DataName.PunishmentMute, ""{0} выдал мут игроку {1} ({2}) на {3} {4}. Причина: {5}"" },
            { DataName.PunishmentUnMute, ""{0} снял мут с игрока {1} ({2})"" },
            { DataName.PunishmentOffMute, ""{0} выдал мут игроку {1} в оффлайне на {2} {3}. Причина: {4}"" },
            { DataName.PunishmentOffUnMute, ""{0} снял мут с игрока {1} в оффлайне."" },
            { DataName.PunishmentPermBan, ""{0} заблокировал персонажа {1}({2}) навсегда. Причина: {3}"" },
            { DataName.PunishmentBan, ""{0} заблокировал персонажа {1}({2}) на {3} дней. Причина: {4}."" },
            { DataName.PunishmentPermHardBan, ""{0} выдал пожизненный банхаммер игроку {1}({2}). Причина: {3}"" },
            { DataName.PunishmentHardBan, ""{0} выдал банхаммер игроку {1}({2}) на {3} дней. Причина: {4}"" },
            { DataName.PunishmentPermOffHardBan, ""{0} выдал пожизненный банхаммер игроку {1} в оффлайне. Причина: {2}"" },
            { DataName.PunishmentOffHardBan, ""{0} выдал банхаммер игроку {1} в оффлайне на {2} дней. Причина: {3}"" },
            { DataName.PunishmentPermOffBan, ""{0} заблокировал персонажа {1} в оффлайне навсегда. Причина: {2}"" },
            { DataName.PunishmentOffBan, ""{0} заблокировал персонажа {1} в оффлайне на {2} дней. Причина: {3}"" },
            { DataName.PunishmentKick, ""{0} кикнул игрока {1}({2}). Причина: {3}"" },
            { DataName.PunishmentWarn, ""{0} выдал предупреждение игроку {1}({2}). | {3}/3. Причина: {4}"" },
            { DataName.PunishmentDemorgan, ""{0} посадил в деморган {1}({2}) на {3} {4}. Причина: {5}"" },
            { DataName.PunishmentUnDemorgan, ""{0} выпустил из деморгана {1} ({2})"" },
            { DataName.PunishmentClear, ""{0} полностью обнулил персонажа {1}. Причина: {2}"" },
            { DataName.PunishmentPermBanCapureAndBizWar, ""{0} ограничил доступ к системам capture и bizwar персонажу {1}({2}) навсегда. Причина: {3}"" },
            { DataName.PunishmentPermOffBanCapureAndBizWar, ""{0} ограничил доступ к системам capture и bizwar персонажу {1} в оффлайне навсегда. Причина: {2}"" },
            { DataName.PunishmentOffDemorgan, ""{0} посадил в деморган {1} в оффлайне на {2} {3}. Причина: {4}"" },
            { DataName.PunishmentOffUnDemorgan, ""{0} выпустил из деморгана {1} в оффлайне"" },
            { DataName.PunishmentOffWarn, ""{0} выдал предупреждение игроку {1} в оффлайне | {2}/3. Причина: {3}"" },
            { DataName.PunishmentRageBan, ""{0} отпритонил игрока {1}({2})"" },

            { DataName.BanBySystemForAdminBan, ""Забанен системой за бан администратора {0}"" },
            { DataName.Attack, ""Нападение"" },
            { DataName.YourAttacked, ""На вас напали!"" },
            { DataName.War, ""Война"" },
            { DataName.Draw, ""Ничья"" },
            { DataName.YouPlayInDraw, ""Вы сыграли в ничью"" },
            { DataName.YouLoseTerritory, ""Вы проиграли войну и потеряли территорию :("" },
            { DataName.YouWinTerritory, ""Вы победили! Территория переходит под ваш контроль, поздравляем!"" },
            { DataName.YouWinDefenceTerritory, ""Вы удержали территорию! Поздравляем!"" },
            { DataName.YouLoseAttackTerritory, ""Вы проиграли! Территория остаётся у стороны защиты."" },
            // lazo end"
eqjmFr6h,Password validator,ifigazsi,Python,Thursday 18th of January 2024 03:15:12 PM CDT,"#### ITERATION 1 ####
import string

password = ""dfshtj54aA""
lowercase = {x for x in string.ascii_lowercase}
uppercase = {x for x in string.ascii_uppercase}
numbers = {str(x) for x in range(0, 10)}

length_ok = len(password) > 7
lowercase_ok = len(lowercase.intersection(password)) > 0
uppercase_ok = len(uppercase.intersection(password)) > 0
number_ok = len(numbers.intersection(password)) > 0

if length_ok and lowercase_ok and uppercase_ok and number_ok:
    print(""Password ok"")
else:
    print(""Password not ok"")

#### ITERATION 2 ####

password = ""dfshtj54aA""
lowercase_ok = len(set(string.ascii_lowercase).intersection(password)) > 0
uppercase_ok = len(set(string.ascii_uppercase).intersection(password)) > 0
number_ok = len({str(x) for x in range(0, 10)}.intersection(password)) > 0
result = ""Password ok"" if (len(password) > 7) + lowercase_ok + uppercase_ok + number_ok == 4 else ""Password not ok""
print(result)


#### ITERATION 3 aka VALLIONXD ####

password = ""dfshtjd4aDa""
lowercase_ok = any(c.islower() for c in password)
uppercase_ok = any(c.isupper() for c in password)
number_ok = any(c.isdigit() for c in password)
result = ""Password ok"" if (len(password) > 7) + lowercase_ok + uppercase_ok + number_ok == 4 else ""Password not ok""
print(result)


#### ITERATION 4 QUITE UGLY ####

password = ""dfshtjdaGa""
pwd = [ord(c) for c in password]
print(""Password ok"" if (len(pwd) > 7) and (47 < min(pwd) < 58) and (96 < max(pwd) < 123)
        and any(c.isupper() for c in password) else ""Password not ok"")
"
a15eQi3b,2048 game! (fixed),Sergey_Schcelov,C++,Thursday 18th of January 2024 02:55:24 PM CDT,"#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <ctime>

using namespace std;


int sum = 0;

int up(vector<vector<int>>& arr){
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 0; j < 3; ++j) {
                if (arr[j][i] == 0 && arr[j+1][i] != 0){
                    swap(arr[j][i], arr[j+1][i]);
                }
            }
        }
    }
    for (int j = 0; j < 4; j++) {
        for (int i = 0; i < 3; ++i) {
            if (arr[i][j] == arr[i+1][j]) {
                arr[i][j] += arr[i+1][j];
                sum += arr[i][j];
                arr[i+1][j] = 0;
            }
        }
    }
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 0; j < 3; ++j) {
                if (arr[j][i] == 0 && arr[j+1][i] != 0){
                    swap(arr[j][i], arr[j+1][i]);
                }
            }
        }
    }
}

int down(vector<vector<int>>& arr){
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 3; j >= 1; --j) {
                if (arr[j][i] == 0 && arr[j-1][i] != 0){
                    swap(arr[j][i], arr[j-1][i]);
                }
            }
        }
    }
    for (int j = 0; j < 4; j++) {
        for (int i = 3; i > 0; --i) {
            if (arr[i][j] == arr[i-1][j]) {
                arr[i][j] += arr[i-1][j];
                sum += arr[i][j];
                arr[i-1][j] = 0;
            }
        }
    }
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 3; j >= 1; --j) {
                if (arr[j][i] == 0 && arr[j-1][i] != 0){
                    swap(arr[j][i], arr[j-1][i]);
                }
            }
        }
    }
}

int left(vector<vector<int>>& arr){
    cout << ""PROVERKA\n"";
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 0; j < 3; ++j) {
                if (arr[i][j] == 0 && arr[i][j+1] != 0){
                    cout << arr[i][j] << ' ' << arr[i][j+1] << ' ' << i << ' ' << j << ""\n   "";
                    swap(arr[i][j], arr[i][j+1]);
                }
            }
        }
    }
    cout << '\n';
    for (int j = 0; j < 4; j++) {
        for (int i = 0; i < 3; ++i) {
            if (arr[j][i] == arr[j][i+1]) {
                arr[j][i] += arr[j][i + 1];
                sum += arr[j][i];
                arr[j][i + 1] = 0;
            }
        }
    }
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 0; j < 3; ++j) {
                if (arr[i][j] == 0 && arr[i][j+1] != 0){
                    swap(arr[i][j], arr[i][j+1]);
                }
            }
        }
    }
}

int right(vector<vector<int>>& arr){
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 3; j >= 1; --j) {
                if (arr[i][j] == 0 && arr[i][j-1] != 0){
                    swap(arr[i][j], arr[i][j-1]);
                }
            }
        }
    }
    for (int j = 0; j < 4; j++) {
        for (int i = 3; i > 0; --i) {
            if (arr[j][i] == arr[j][i-1]) {
                arr[j][i] += arr[j][i - 1];
                sum += arr[j][i];
                arr[j][i - 1] = 0;
            }
        }
    }
    for (int i = 0; i < 4; ++i) {
        for (int z = 0; z < 3; ++z) {
            for (int j = 3; j >= 1; --j) {
                if (arr[i][j] == 0 && arr[i][j-1] != 0){
                    swap(arr[i][j], arr[i][j-1]);
                }
            }
        }
    }
}

int do_we_have_free_place(vector<vector<int>>& arr){
    for (int i = 0; i < 4; ++i) {
        for (int j = 0; j < 4; ++j) {
            if (arr[i][j] == 0)
                return true;
        }
    }
    return false;
}

int is_not_finish(vector<vector<int>>& arr){
    for (int i = 0; i < 3; ++i) {
        if (arr[0][i] == arr[0][i+1])
            return true;
        if (arr[i][0] == arr[i+1][0])
            return true;
        if (arr[2-i][0] == arr[3-i][0])
            return true;
        if (arr[0][2-i] == arr[0][3-i])
            return true;
    }
    for (int i = 1; i < 3; ++i) {
        for (int j = 1; j < 3; ++j) {
            if (arr[i][j] == arr[i-1][j])
                return true;
            if (arr[i][j] == arr[i+1][j])
                return true;
            if (arr[i][j] == arr[i][j-1])
                return true;
            if (arr[i][j] == arr[i][j+1])
                return true;
        }
    }
    if (do_we_have_free_place(arr))
        return true;
    return false;
}

int getRandomNumber(int min, int max)
{
    static const double fraction = 1.0 / (static_cast<double>(RAND_MAX) + 1.0);
    return static_cast<int>(rand() * fraction * (max - min + 1) + min);
}

int random_2_or_4(){
    int returner = getRandomNumber(1,2);
    if (returner == 1)
        returner = 4;
    return returner;
}
void poyavlenie(vector<vector<int>>& arr){
    int sum_free = 0;
    for (int i = 0; i < 4; ++i) {
        for (int j = 0; j < 4; ++j) {
            if (arr[i][j] == 0)
                sum_free++;
        }
    }
    int random_number = getRandomNumber(0,sum_free);
    int nulls = 0;
    for (int i = 0; i < 4; ++i) {
        for (int j = 0; j < 4; ++j) {
            if (arr[i][j] == 0)
                nulls++;
            if (nulls == random_number){
                arr[i][j] = random_2_or_4();
                return;
            }
        }
    }
}

int main() {
    srand(static_cast<unsigned int>(time(0)));
    cout << ""Welcome to 2048 game!"" << ""\n"" << ""If you want to know the rules of the game then write 'rules' or write anything else."" << ""\n"";
    string begin;
    cin >> begin;
    if (begin == ""rules"" || begin == ""Rules"" || begin == ""RULES"")
        cout << ""Basically, 2048 game presents with a 4×4 grid. When you start the game, there will be two “tiles” on the grid, each displaying the number 2 or 4.\n You hit the arrow keys (or W,A,S,D) on your keyboard to move the tiles around — and also to generate new tiles, which will also be valued at 2 or 4.\n"";
    cout << ""Write anything when you are ready.\n"";
    string anything;
    cin >> anything;
    cout << ""Management:\nUp - w or W\nDown - s or S\nRight - d or D\nLeft - a or A\nLet's gooooooooooooooo!!!\n"";
    vector<vector<int>> tablo(4,{0,0,0,0});
    poyavlenie(tablo);
    poyavlenie(tablo);
    for (int i = 0; i < 4; ++i) {
        for (int j = 0; j < 4; ++j) {
            cout << tablo[i][j] << "" "";
        }
        cout << ""\n"";
    }

    while (is_not_finish(tablo)){
        string xod;
        cin >> xod;
        if (xod == ""W"" || xod == ""w"")
            up(tablo);
        else if (xod == ""D"" || xod == ""d"")
            right(tablo);
        else if (xod == ""A"" || xod == ""a"")
            left(tablo);
        else if (xod == ""S"" || xod == ""s"")
            down(tablo);
        else{
            cout << ""Please, enter normal keys.\n"";
            continue;
        }
        poyavlenie(tablo);

        for (int i = 0; i < 4; ++i) {
            for (int j = 0; j < 4; ++j) {
                cout << tablo[i][j] << "" "";
            }
            cout << ""\n"";
        }
        cout << ""Score: "" << sum << ""\n"";
    }
    cout << ""Good game, Well play!)))"";
}"
LdskszKW,Ultimate Beneficial Owner,wooptoo,Python,Thursday 18th of January 2024 02:54:13 PM CDT,"""""""
* Every company has a shareholding structure (a.k.a. beneficial owners).
* Beneficial owner can be either a individual person or another company.
* Beneficial owner is characterized by % percentage in ownership.
* Shareholding structures can be multi-layered (see examples below)
* Ownership is transitive, so if person X owns 100% of company A which
  owns 100% of company B, then, effectively, person X owns 100% of company B
* Your goal is to write code that finds all ultimate (direct & indirect)
  individual beneficial owners of a company & calculates their percentages of ownership.

---------------------------------------
Example 1:
- Input (beneficial owners):
           C
        /      \
     I1(40%)  I2(60%)

- Output (ultimate beneficial owners):
  I1 (40%), I2 (60%)
---------------------------------------
Example 2:
- Input (beneficial owners):
           C
        /      \
     C1(50%)  I1(50%)
     /    \
 I2(50%)  I3(50%)

- Output (ultimate beneficial owners):
  I1 (50%), I2 (25%), I3 (25%)
---------------------------------------
Example 3:
- Input (beneficial owners):
               C
            /      \
        C1(50%)  I1(50%)
        /    \
    C2(40%)  I1(60%)
    /     \
I2(10%) I3(90%)

- Output (ultimate beneficial owners):
  I1 (80%), I2 (2%), I3 (18%)
---------------------------------------
""""""


# Direct beneficial owner (aka shareholder) of a company.
# In case of corporate owner, ""registration_number"" field contains company identifier.
# In case of individual owner, ""registration_number"" is None.
# Ownership is a float [0, 1]
BeneficialOwner = tuple[
    str, str | None, float
]  # (name, registration_number, ownership)


# Ultimate beneficial owner of a company. Always an individual.
# Ownership is a float [0, 1]
UltimateBeneficialOwner = tuple[str, float]  # (name, ownership)


class BusinessRegisterClient:
    """"""
    A client that contains business register integration implementation.
    It has a method ""get_beneficial_owners()"" that returns a list of direct owners
    of a given company based on its registration number.
    """"""

    def get_beneficial_owners(
        self, registration_number: str
    ) -> list[BeneficialOwner]:
        # 3rd party API call
        # ASSUME IT'S ALREADY IMPLEMENTED
        ...


class UBOCalculator:
    """"""
    A class that finds a set of ultimate beneficial owners of a given company.
    """"""

    def __init__(self, br_client: BusinessRegisterClient):
        self.br_client = br_client

    def get_ultimate_beneficial_owners(
        self, registration_number: str
    ) -> set[UltimateBeneficialOwner]:
        # YOUR CODE GOES HERE
        ...
"
kJywKh38,shell_gpt-warp-issue,pastywhiteacct,Bash,Thursday 18th of January 2024 02:15:16 PM CDT,"# Shell-GPT integration ZSH v0.1
_sgpt_zsh() {
if [[ -n ""$BUFFER"" ]]; then
    _sgpt_prev_cmd=$BUFFER
    BUFFER+=""X ""
    zle -I && zle redisplay
    BUFFER=$(sgpt --shell <<< ""$_sgpt_prev_cmd"")
    zle end-of-line
fi
}
zle -N _sgpt_zsh
bindkey '^l' _sgpt_zsh
# Shell-GPT integration ZSH v0.1"
v6dK5qb3,sql-like.sql,Talilo,MySQL,Thursday 18th of January 2024 01:47:42 PM CDT,"-- https://learnsql.com.br/blog/como-usar-um-coringa-sql/
-- create
CREATE TABLE Tarefas (
  Id INTEGER PRIMARY KEY AUTO_INCREMENT,
  titulo TEXT NOT NULL,
  texto TEXT NOT NULL
);

-- insert
INSERT INTO Tarefas VALUES ( 0,'Cursps', 'fazer curso de hardware');
INSERT INTO Tarefas VALUES ( 0,'Cursos', 'fazer curso de SO');

-- fetch 
SELECT * FROM Tarefas where texto like ""%so"";
"
uQ79FXF1,Python Chat-GPT_Alexa v2,Manu-J,Python,Thursday 18th of January 2024 01:47:10 PM CDT,"import speech_recognition as sr
import pyttsx3
import pywhatkit
import datetime
import re
import webbrowser
import urllib.parse
import requests

listener = sr.Recognizer()
engine = pyttsx3.init()
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[2].id)

def talk(text):
    """"""Fonction pour faire parler l'assistant""""""
    engine.say(text)
    engine.runAndWait()

def take_command():
    """"""Fonction pour enregistrer la commande vocale""""""
    try:
        with sr.Microphone() as source:
            print('En écoute...')
            voice = listener.listen(source)
            # Reconnaissance vocale avec le modèle français
            command = listener.recognize_google(voice, language='fr-FR')
            command = command.lower()
            print(f'Commande reconnue : {command}')
            # Remplacement de ""alexa"" par une chaîne vide
            if 'alexa' in command:
                command = command.replace('alexa', '')
                print(f'Modification de la commande : {command}')
    except sr.UnknownValueError:
        print(""La reconnaissance vocale n'a pas pu comprendre l'audio."")
        return """"
    except sr.RequestError as e:
        print(f""Erreur lors de la requête à l'API de reconnaissance vocale : {e}"")
        return """"
    return command

def get_ip_address():
    """"""Fonction pour obtenir l'adresse IP à partir de l'API ipify""""""
    try:
        response = requests.get('https://api.ipify.org?format=json')
        data = response.json()
        ip_address = data.get('ip', 'Impossible de récupérer l\'adresse IP')
        return ip_address
    except Exception as e:
        print(f'Erreur lors de la récupération de l\'adresse IP : {e}')
        return 'Erreur'

def run_alexa():
    """"""Fonction principale de l'assistant""""""
    while True:
        command = take_command()
        if 'stop' in command:
            talk('Arrêt de l\'assistant. Au revoir !')
            break
        elif command:
            print(f'Traitement de la commande : {command}')
            if 'joue' in command:
                song = command.replace('joue', '')
                talk(f'En train de jouer {song}')
                pywhatkit.playonyt(song)
            elif 'heure' in command:
                time = datetime.datetime.now().strftime('%H:%M')
                talk(f'Il est actuellement {time}')
            elif 'calcul' in command:
                # Utilisation d'une expression régulière pour extraire les chiffres et l'opérateur
                match = re.search(r'\d+(\.\d+)?\s*([\+\-\*/x])\s*\d+(\.\d+)?', command)
                if match:
                    num1 = float(match.group(0).split(match.group(2))[0])
                    num2 = float(match.group(0).split(match.group(2))[1])
                    operator = match.group(2)

                    # Logique du calcul en fonction de l'opérateur
                    if operator in ['+', 'plus']:
                        result = num1 + num2
                    elif operator in ['-', 'moins']:
                        result = num1 - num2
                    elif operator in ['*', 'x', 'fois']:
                        result = num1 * num2
                    elif operator in ['/', 'divisé par']:
                        if num2 != 0:
                            result = num1 / num2
                        else:
                            talk('Division par zéro. Impossible de calculer.')
                            continue

                    # Vérifier si le résultat est un nombre entier
                    if result.is_integer():
                        result = int(result)

                    talk(f'Le résultat est {result}')
                else:
                    talk('Je n\'ai pas compris la commande de calcul.')
            elif 'recherche sur google' in command or 'cherche sur google' in command:
                # Extraire la partie de la commande après ""recherche google sur"" ou ""cherche sur google""
                search_query = re.sub(r'(recherche|cherche) sur google', '', command, flags=re.IGNORECASE).strip()
                if search_query:
                    # Formater la requête correctement avant de l'ajouter à l'URL
                    formatted_query = urllib.parse.quote(search_query)
                    url = f'https://www.google.com/search?q={formatted_query}'
                    webbrowser.open(url)
                    talk(f'Voici les résultats de la recherche Google pour {search_query}.')
                else:
                    talk('Je n\'ai pas compris la requête de recherche Google.')
            elif 'adresse ip' in command:
                # Appel à l'API pour obtenir l'adresse IP
                ip_address = get_ip_address()
                talk(f'Votre adresse IP est {ip_address}')
                print(f'Adresse IP : {ip_address}')
            else:
                talk('Commande non reconnue. Veuillez réessayer.')

if __name__ == ""__main__"":
    run_alexa()
"
MrxREvCR,Sort Frames by Audio Level,MD-Wade,Python,Thursday 18th of January 2024 01:02:14 PM CDT,"import tkinter as tk
from tkinter import filedialog

import numpy as np
from moviepy.video.compositing.concatenate import concatenate_videoclips
from moviepy.video.io.VideoFileClip import VideoFileClip


def browse_for_video_file():
    root = tk.Tk()
    root.withdraw()
    return filedialog.askopenfilename()

video = VideoFileClip(browse_for_video_file())

def calculate_audio_level(frame_audio):
    return np.mean(np.sqrt((frame_audio**2).sum(axis=1)))

frames_audio_levels = []
for frame_time in np.arange(0, video.duration, 1.0 / video.fps):
    frame = video.get_frame(frame_time)
    frame_audio_segment = video.audio.subclip(frame_time, frame_time + 1.0 / video.fps).to_soundarray(fps=22050)
    audio_level = calculate_audio_level(frame_audio_segment)
    frames_audio_levels.append((frame, audio_level, frame_time))
    print(f""Frame time: {frame_time}, audio level: {audio_level}"")

frames_audio_levels.sort(key=lambda x: x[1])

new_clips = []
for i, (_, _, frame_time) in enumerate(frames_audio_levels):
    if i != len(frames_audio_levels) - 2:
        clip = video.subclip(frame_time, frame_time + 1.0 / video.fps).set_start(i * 1.0 / video.fps)
        new_clips.append(clip)
        print(f""Processed clip {i+1}/{len(frames_audio_levels)}"")

final_clip = concatenate_videoclips(new_clips)
final_clip.write_videofile(""rearranged_video.mp4"")"
VknNMfXe,PATR Tunel,varli_ketanpl,C++,Thursday 18th of January 2024 12:43:22 PM CDT,"#include <LiquidCrystal.h>
#include <Arduino_FreeRTOS.h>
#include <semphr.h>
#include ""timers.h""

#define IN1 30
#define IN2 32

#define OUT1 40
#define OUT2 42

#define MAX 3

#define LED 24
#define BUTTON 26

#define SMOKEPIN 22

LiquidCrystal lcd(12, 11, 9, 8, 7, 6);

int carIn[] = { IN1, IN2 };
int carOut[] = { OUT1, OUT2 };

int carCount = 0;

bool full = false;
bool fire = false;
bool panick = false;
bool stopped = false;

void onEntrance(int* entrance);
void onExit(int* exit);

void printCarCount();
void printError();

void check(int* temp);

void panickEvent(int* temp);

void fireEvent(int* temp);

void setup() {
  Serial.begin(9600);
  lcd.begin(16, 2);
  lcd.noCursor();

  for (int i = 0; i < 2; i++) {
    pinMode(carIn[i], INPUT);
    pinMode(carOut[i], INPUT);
  }

  pinMode(LED, OUTPUT);
  pinMode(BUTTON, INPUT);

  lcd.setCursor(0, 0);
  lcd.print(""Car count:"");
  printCarCount();

  xTaskCreate(onEntrance, ""intrare1"", 128, &carIn[0], 1, NULL);
  xTaskCreate(onEntrance, ""intrare2"", 128, &carIn[1], 1, NULL);

  xTaskCreate(onExit, ""iesire1"", 128, &carOut[0], 1, NULL);
  xTaskCreate(onExit, ""iesire2"", 128, &carOut[1], 1, NULL);

  xTaskCreate(check, ""check"", 128, NULL, 1, NULL);

  xTaskCreate(panickEvent, ""panick"", 128, NULL, 1, NULL);
  xTaskCreate(fireEvent, ""fire"", 128, NULL, 1, NULL);
}

void loop() {
}

void onEntrance(int* entrance) {
  while (true) {
    int sensorData = digitalRead(*entrance);

    if (digitalRead(*entrance) == HIGH) {
      if (!stopped) {
        while (digitalRead(*entrance) == HIGH) {}
        carCount++;
        Serial.println(""Am intrat"");
        if (carCount == MAX) {
          full = true;
          digitalWrite(LED, HIGH);
        }

        printCarCount();
      } else {
        printError();
        delay(1000);
        printCarCount();
      }
    }
  }
}

void printError() {
  lcd.clear();
  lcd.setCursor(0, 0);

  if (full) {
    lcd.print(""Tunel plin!"");
    Serial.println(""Tunel plin!"");
  } else if (panick) {
    lcd.print(""Mod de panica activat!"");
    lcd.setCursor(0, 1);
    lcd.print(""Nu se intra!"");
    Serial.println(""Mod de panica activat! Nu se intra in tunel!"");
  } else {
    lcd.print(""Foc detectat!"");
    lcd.setCursor(0, 1);
    lcd.print(""Nu se intra!"");
    Serial.println(""Foc detectat! Nu se intra!"");
  }
}

void onExit(int* exit) {
  while (true) {
    if (digitalRead(*exit) == HIGH) {
      while (digitalRead(*exit) == HIGH) {}
      carCount--;
      Serial.println(""Am iesit"");
      if (carCount < MAX && full) {
        digitalWrite(LED, LOW);
        full = false;
      }

      printCarCount();
    }
  }
}

void printCarCount() {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(""Numar masini:"");
  lcd.setCursor(0, 1);
  lcd.print(carCount);
  Serial.print(""Numar masini: "");
  Serial.println(carCount);
}

void check(int* temp) {
  while (true) {
    stopped = full | fire | panick;
    delay(100);
  }
}

void panickEvent(int* temp) {
  while (true) {
    int x = digitalRead(BUTTON);

    if (x == HIGH) {
      panick = true;

      digitalWrite(LED, HIGH);

      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print(""Buton de panica"");
      lcd.setCursor(0, 1);
      lcd.print(""apasat!"");
      delay(2000);
      printCarCount();
      Serial.println(""Buton de panica apasat!"");
    }
  }
}

void fireEvent(int* temp) {
  while (true) {
    int x = digitalRead(SMOKEPIN);

    if (x == LOW) {
      fire = true;

      digitalWrite(LED, HIGH);

      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print(""Foc detectat!"");
      delay(2000);
      printCarCount();
    }
  }
}"
D2PAN5Jv,Adobe Stopper - Powershell command,atuburapaler,PowerShell,Thursday 18th of January 2024 12:25:02 PM CDT,"# Stop adobe services
Get-Service -DisplayName Adobe* | Stop-Service -Force -Confirm:$false

# Stop adobe processes
$Processes = Get-Process * | Where-Object { $_.CompanyName -match ""Adobe"" -or $_.Path -match ""Adobe"" }

Foreach ($Process in $Processes) {
    Stop-Process $Process -Force -ErrorAction SilentlyContinue
}"
bxkJRDj1,05.Journey,IvanITD,C#,Thursday 18th of January 2024 12:24:20 PM CDT,"double budget = double.Parse(Console.ReadLine());
string twoSeason = Console.ReadLine();

string destination = """";
string vacationType = """";
double percentFromBudget = 0.00;

if (twoSeason == ""summer"")
{
    if (budget <= 100)
    {
        destination = ""Bulgaria"";
        vacationType = ""Camp"";
        percentFromBudget = budget - (budget * 0.30);
    }
    else if (budget <= 1000)
    {
        destination = ""Balkans"";
        vacationType = ""Camp"";
        percentFromBudget = budget - (budget * 0.40);
    }
    else if (budget > 1000)
    {
        destination = ""Europe"";
        vacationType = ""Hotel"";
        percentFromBudget = budget - (budget * 0.90);
    }
}
else if (twoSeason == ""winter"")
{
    if (budget <= 100)
    {
        destination = ""Bulgaria"";
        vacationType = ""Hotel"";
        percentFromBudget = budget - (budget * 0.70);
    }
    else if (budget <= 1000)
    {
        destination = ""Balkans"";
        vacationType = ""Hotel"";
        percentFromBudget = budget - (budget * 0.80);
    }
    else if (budget > 1000)
    {
        destination = ""Europe"";
        vacationType = ""Hotel"";
        percentFromBudget = budget - (budget * 0.90);
    }
}

Console.WriteLine($""Somewhere in {destination} \n{vacationType} - {budget - percentFromBudget:F2}"");"
AhY7qgKj,04.FishingBoat,IvanITD,C#,Thursday 18th of January 2024 12:22:06 PM CDT,"int groupBudget = int.Parse(Console.ReadLine());
string season = Console.ReadLine();
int fishersAmount = int.Parse(Console.ReadLine());

double rentPrice = 0.00;

if (season == ""Spring"")
{
    rentPrice = 3000;

    if (fishersAmount <= 6)
    {
        rentPrice -= (rentPrice * 0.10);
    }
    else if (fishersAmount >= 7 && fishersAmount <= 11)
    {
        rentPrice -= (rentPrice * 0.15);
    }
    else if (fishersAmount > 12)
    {
        rentPrice -= (rentPrice * 0.25);
    }

    if (fishersAmount % 2 == 0)
    {
        rentPrice -= (rentPrice * 0.05);
    }
}
else if (season == ""Summer"")
{
    rentPrice = 4200;

    if (fishersAmount <= 6)
    {
        rentPrice -= (rentPrice * 0.10);
    }
    else if (fishersAmount >= 7 && fishersAmount <= 11)
    {
        rentPrice -= (rentPrice * 0.15);
    }
    else if (fishersAmount > 12)
    {
        rentPrice -= (rentPrice * 0.25);
    }

    if (fishersAmount % 2 == 0)
    {
        rentPrice -= (rentPrice * 0.05);
    }
}
else if (season == ""Autumn"")
{
    rentPrice = 4200;

    if (fishersAmount <= 6)
    {
        rentPrice -= (rentPrice * 0.10);
    }
    else if (fishersAmount >= 7 && fishersAmount <= 11)
    {
        rentPrice -= (rentPrice * 0.15);
    }
    else if (fishersAmount > 12)
    {
        rentPrice -= (rentPrice * 0.25);
    }
}
else if (season == ""Winter"")
{
    rentPrice = 2600;

    if (fishersAmount <= 6)
    {
        rentPrice -= (rentPrice * 0.10);
    }
    else if (fishersAmount >= 7 && fishersAmount <= 11)
    {
        rentPrice -= (rentPrice * 0.15);
    }
    else if (fishersAmount > 12)
    {
        rentPrice -= (rentPrice * 0.25);
    }

    if (fishersAmount % 2 == 0)
    {
        rentPrice -= (rentPrice * 0.05);
    }
}

if (groupBudget >= rentPrice)
{
    Console.WriteLine($""Yes! You have {groupBudget - rentPrice:F2} leva left."");
}
else if (groupBudget < rentPrice)
{
    Console.WriteLine($""Not enough money! You need {rentPrice - groupBudget:F2} leva."");
}

"
vmCxYBbL,Untitled,TakePen,AutoIt,Thursday 18th of January 2024 12:21:22 PM CDT,"[Dein Name]
[Deine Adresse]
[PLZ, Ort]
[E-Mail-Adresse]
[Telefonnummer]
[Datum]

Hannoversche Lebensversicherung AG
Service Center Leben
Postfach 21 21
30021 Hannover

Betreff: Auskunftsersuchen gemäß Art. 15 DSGVO

Sehr geehrte Damen und Herren,

ich hoffe, diese Anfrage erreicht Sie wohlauf. Ich, [Dein Name], habe kürzlich einen Brief von Ihrer Versicherung erhalten, der sich auf meine Person bezieht. Nach eingehender Prüfung des Schreibens ist mir jedoch nicht klar, aufgrund welcher Informationen Sie meine personenbezogenen Daten verarbeiten, da ich zuvor keinen Kontakt zu Ihrer Gesellschaft hatte.

Gemäß Art. 15 der Datenschutz-Grundverordnung (DSGVO) bitte ich Sie hiermit um umfassende Auskunft über die Verarbeitung meiner personenbezogenen Daten durch die Hannoversche Lebensversicherung AG. Insbesondere interessieren mich folgende Informationen:

    Die Zwecke der Verarbeitung meiner personenbezogenen Daten.
    Die Kategorien der verarbeiteten personenbezogenen Daten.
    Die Empfänger oder Kategorien von Empfängern, denen meine Daten offengelegt wurden oder noch offengelegt werden.
    Die geplante Dauer, für die meine personenbezogenen Daten gespeichert werden, oder, falls dies nicht möglich ist, die Kriterien für die Festlegung dieser Dauer.
    Das Bestehen eines Rechts auf Berichtigung oder Löschung meiner personenbezogenen Daten, eines Rechts auf Einschränkung der Verarbeitung durch den Verantwortlichen oder eines Widerspruchsrechts gegen diese Verarbeitung.
    Das Bestehen eines Beschwerderechts bei einer Aufsichtsbehörde.
    Informationen über die Herkunft der Daten, sofern diese nicht bei mir erhoben wurden.
    Das Bestehen einer automatisierten Entscheidungsfindung einschließlich Profiling gemäß Artikel 22 Absätze 1 und 4 DSGVO und – zumindest in diesen Fällen – aussagekräftige Informationen über die involvierte Logik sowie die Tragweite und die angestrebten Auswirkungen einer derartigen Verarbeitung für mich.

Ich bitte um schriftliche Mitteilung der oben genannten Informationen gemäß Art. 15 DSGVO innerhalb von 30 Tagen ab Erhalt dieses Schreibens. Sollten Sie nicht in der Lage sein, innerhalb dieser Frist zu antworten, bitte ich um unverzügliche Benachrichtigung unter Angabe der Gründe für die Verzögerung.

Bitte senden Sie die angeforderten Informationen an die oben angegebene Adresse oder, sofern elektronische Übermittlung möglich ist, an meine E-Mail-Adresse [Deine E-Mail-Adresse].

Vielen Dank für Ihr Verständnis und Ihre prompte Erledigung.

Mit freundlichen Grüßen,

[Deine Unterschrift (bei postalischer Übermittlung)]
[Dein Name]"
MJqSgY3X,Working CURL,AhmedSGaafer,Bash,Thursday 18th of January 2024 12:17:41 PM CDT,"curl --location 'https://www.penta-b.online/penta-migration-service/migrate/file/zip' \
--form 'file=@""/C:/Users/Ahmed/Downloads/someLayers.zip""' \
--form 'dbConnection[dbName]=""new_acud_staging""' \
--form 'dbConnection[dbHost]=""20.253.8.254""' \
--form 'dbConnection[username]=""postgres""' \
--form 'dbConnection[password]=""1uUpXh&727QVLGG""' \
--form 'dbConnection[schemaName]=""utility_telecom""' \
--form 'processColumn[key]=""operation_id""' \
--form 'processColumn[value]=""9082640""' \
--form 'columnMap[us_utility_network_node][network_uu]=""network_uuid""' \
--form 'columnMap[us_utility_network_node][network_no]=""network_node_name""' \
--form 'columnMap[us_utility_network_node][unique_bui]=""unique_building_code""' \
--form 'columnMap[us_utility_network_node][authority_]=""authority_role""' \
--form 'columnMap[us_utility_network_node][contractor]=""contractor_name""' \
--form 'columnMap[us_utility_network_node][consultant]=""consultant_name""' \
--form 'columnMap[us_utility_network_node][data_provi]=""data_provider""' \
--form 'columnMap[us_utility_network_node][last_data_]=""last_data_provider""' \
--form 'columnMap[us_utility_network_node][date_creat]=""date_created""' \
--form 'columnMap[us_utility_network_node][date_modif]=""date_modified""' \
--form 'columnMap[us_utility_network_node][number_of_]=""number_of_patch_panels_qbn""' \
--form 'columnMap[us_utility_network_node][number_o_1]=""number_of_patch_panels_ssn""' \
--form 'columnMap[us_utility_network_node][number_o_2]=""number_of_patch_panels_mesh""' \
--form 'columnMap[us_utility_network_node][number_o_3]=""number_of_patch_panels_peering""' \
--form 'columnMap[us_utility_network_node][size_of_pa]=""size_of_patch_panels""' \
--form 'columnMap[us_utility_network_node][size_of__1]=""size_of_patch_panels_qbn""' \
--form 'columnMap[us_utility_network_node][size_of__2]=""size_of_patch_panels_ssn""' \
--form 'columnMap[us_utility_network_node][size_of__3]=""size_of_patch_panels_mesh""' \
--form 'columnMap[us_utility_network_node][size_of__4]=""size_of_patch_panels_peering""' \
--form 'columnMap[us_utility_network_node][number_o_4]=""number_of_splitters""' \
--form 'columnMap[us_utility_network_node][splitter_t]=""splitter_type_id""' \
--form 'columnMap[us_utility_network_node][number_o_5]=""number_of_entry_duct_microducts""' \
--form 'columnMap[us_utility_network_node][number_o_6]=""number_of_entry_cables""' \
--form 'columnMap[us_utility_network_node][number_o_7]=""number_of_served_points""' \
--form 'columnMap[us_utility_network_node][number_o_8]=""number_of_user""' \
--form 'columnMap[us_utility_network_node][floor_leng]=""floor_length_m""' \
--form 'columnMap[us_utility_network_node][floor_widt]=""floor_width_m""' \
--form 'columnMap[us_utility_network_node][floor_area]=""floor_area_m_sq""' \
--form 'columnMap[us_utility_network_node][number_o_9]=""number_of_floors""' \
--form 'columnMap[us_utility_network_node][room_colum]=""room_columns""' \
--form 'columnMap[us_utility_network_node][type_of_dr]=""type_of_drawing_id""' \
--form 'columnMap[us_telecom_pipe][id]=""id""' \
--form 'columnMap[us_telecom_pipe][uuid]=""uuid""' \
--form 'columnMap[us_telecom_pipe][network_uu]=""network_uuid""' \
--form 'columnMap[us_telecom_pipe][contractor]=""contractor_name""' \
--form 'columnMap[us_telecom_pipe][consultant]=""consultant_name""' \
--form 'columnMap[us_telecom_pipe][data_provi]=""data_provider""' \
--form 'columnMap[us_telecom_pipe][last_data_]=""last_data_provider""' \
--form 'columnMap[us_telecom_pipe][date_creat]=""date_created""' \
--form 'columnMap[us_telecom_pipe][date_modif]=""date_modified""' \
--form 'columnMap[us_telecom_pipe][conduit_sp]=""conduit_specification_id""' \
--form 'columnMap[us_telecom_pipe][manufactur]=""manufacturer""' \
--form 'columnMap[us_telecom_pipe][calculated]=""calculated_length""' \
--form 'columnMap[us_telecom_pipe][comments]=""comments""' \
--form 'columnMap[us_telecom_pipe][current_st]=""current_status_id""' \
--form 'columnMap[us_telecom_pipe][start_node]=""start_node""' \
--form 'columnMap[us_telecom_pipe][start_no_1]=""start_node_name""' \
--form 'columnMap[us_telecom_pipe][end_node]=""end_node""' \
--form 'columnMap[us_telecom_pipe][end_node_n]=""end_node_name""' \
--form 'columnMap[us_telecom_pipe][pipe_mater]=""pipe_material_type_id""' \
--form 'columnMap[us_telecom_pipe][pipe_diame]=""pipe_diameter_id""' \
--form 'columnMap[us_telecom_pipe][pipe_color]=""pipe_color_id""' \
--form 'columnMap[us_telecom_pipe][bundle_uui]=""bundle_uuid""' \
--form 'columnMap[us_telecom_pipe][network_ty]=""network_type_id""' \
--form 'columnMap[us_telecom_pipe][type_of_dr]=""type_of_drawing_id""' \
--form 'columnMap[us_telecom_microduct_bundle][id]=""id""' \
--form 'columnMap[us_telecom_microduct_bundle][uuid]=""uuid""' \
--form 'columnMap[us_telecom_microduct_bundle][network_uu]=""network_uuid""' \
--form 'columnMap[us_telecom_microduct_bundle][contractor]=""contractor_name""' \
--form 'columnMap[us_telecom_microduct_bundle][consultant]=""consultant_name""' \
--form 'columnMap[us_telecom_microduct_bundle][data_provi]=""data_provider""' \
--form 'columnMap[us_telecom_microduct_bundle][last_data_]=""last_data_provider""' \
--form 'columnMap[us_telecom_microduct_bundle][date_creat]=""date_created""' \
--form 'columnMap[us_telecom_microduct_bundle][date_modif]=""date_modified""' \
--form 'columnMap[us_telecom_microduct_bundle][asset_id]=""asset_id""' \
--form 'columnMap[us_telecom_microduct_bundle][conduit_sp]=""conduit_specification_id""' \
--form 'columnMap[us_telecom_microduct_bundle][manufactur]=""manufacturer""' \
--form 'columnMap[us_telecom_microduct_bundle][calculated]=""calculated_length""' \
--form 'columnMap[us_telecom_microduct_bundle][comments]=""comments""' \
--form 'columnMap[us_telecom_microduct_bundle][current_st]=""current_status_id""' \
--form 'columnMap[us_telecom_microduct_bundle][microduct_]=""microduct_material_type_id""' \
--form 'columnMap[us_telecom_microduct_bundle][microduc_1]=""microduct_type_id""' \
--form 'columnMap[us_telecom_microduct_bundle][microduc_2]=""microduct_depth""' \
--form 'columnMap[us_telecom_microduct_bundle][microduc_3]=""microduct_height""' \
--form 'columnMap[us_telecom_microduct_bundle][microduc_4]=""microduct_color_id""' \
--form 'columnMap[us_telecom_microduct_bundle][start_node]=""start_node""' \
--form 'columnMap[us_telecom_microduct_bundle][start_no_1]=""start_node_name""' \
--form 'columnMap[us_telecom_microduct_bundle][end_node]=""end_node""' \
--form 'columnMap[us_telecom_microduct_bundle][end_node_n]=""end_node_name""' \
--form 'columnMap[us_telecom_microduct_bundle][microduc_5]=""microduct_id""' \
--form 'columnMap[us_telecom_microduct_bundle][network_ty]=""network_type_id""' \
--form 'columnMap[us_telecom_microduct_bundle][spacer_siz]=""spacer_size""' \
--form 'columnMap[us_telecom_microduct_bundle][conduit_uu]=""conduit_uuid""' \
--form 'columnMap[us_telecom_microduct_bundle][type_of_dr]=""type_of_drawing_id""' \
--form 'columnMap[us_telecom_microduct_bundle][microduc_6]=""microduct_width""' \
--form 'columnMap[us_telecom_microduct_bundle][label]=""label""' \
--form 'columnMap[us_telecom_conduit][id]=""id""' \
--form 'columnMap[us_telecom_conduit][uuid]=""uuid""' \
--form 'columnMap[us_telecom_conduit][network_uu]=""network_uuid""' \
--form 'columnMap[us_telecom_conduit][contractor]=""contractor_name""' \
--form 'columnMap[us_telecom_conduit][consultant]=""consultant_name""' \
--form 'columnMap[us_telecom_conduit][data_provi]=""data_provider""' \
--form 'columnMap[us_telecom_conduit][last_data_]=""last_data_provider""' \
--form 'columnMap[us_telecom_conduit][date_creat]=""date_created""' \
--form 'columnMap[us_telecom_conduit][date_modif]=""date_modified""' \
--form 'columnMap[us_telecom_conduit][asset_id]=""asset_id""' \
--form 'columnMap[us_telecom_conduit][conduit_sp]=""conduit_specification_id""' \
--form 'columnMap[us_telecom_conduit][manufactur]=""manufacturer""' \
--form 'columnMap[us_telecom_conduit][calculated]=""calculated_length""' \
--form 'columnMap[us_telecom_conduit][comments]=""comments""' \
--form 'columnMap[us_telecom_conduit][current_st]=""current_status_id""' \
--form 'columnMap[us_telecom_conduit][conduit_ca]=""conduit_casing_type_id""' \
--form 'columnMap[us_telecom_conduit][conduit_ma]=""conduit_material_type_id""' \
--form 'columnMap[us_telecom_conduit][conduit_si]=""conduit_size_id""' \
--form 'columnMap[us_telecom_conduit][conduit_de]=""conduit_depth""' \
--form 'columnMap[us_telecom_conduit][conduit_co]=""conduit_color_id""' \
--form 'columnMap[us_telecom_conduit][start_cham]=""start_chamber_uuid""' \
--form 'columnMap[us_telecom_conduit][conduit_ro]=""conduit_route""' \
--form 'columnMap[us_telecom_conduit][end_chambe]=""end_chamber_uuid""' \
--form 'columnMap[us_telecom_conduit][conduit_id]=""conduit_id""' \
--form 'columnMap[us_telecom_conduit][network_ty]=""network_type_id""' \
--form 'columnMap[us_telecom_conduit][start_node]=""start_node""' \
--form 'columnMap[us_telecom_conduit][start_no_1]=""start_node_name""' \
--form 'columnMap[us_telecom_conduit][end_node]=""end_node""' \
--form 'columnMap[us_telecom_conduit][end_node_n]=""end_node_name""' \
--form 'columnMap[us_telecom_conduit][type_of_dr]=""type_of_drawing_id""' \
--form 'columnMap[us_telecom_cable_indoor][id]=""id""' \
--form 'columnMap[us_telecom_cable_indoor][uuid]=""uuid""' \
--form 'columnMap[us_telecom_cable_indoor][network_uu]=""network_uuid""' \
--form 'columnMap[us_telecom_cable_indoor][contractor]=""contractor_name""' \
--form 'columnMap[us_telecom_cable_indoor][consultant]=""consultant_name""' \
--form 'columnMap[us_telecom_cable_indoor][data_provi]=""data_provider""' \
--form 'columnMap[us_telecom_cable_indoor][last_data_]=""last_data_provider""' \
--form 'columnMap[us_telecom_cable_indoor][date_creat]=""date_created""' \
--form 'columnMap[us_telecom_cable_indoor][date_modif]=""date_modified""' \
--form 'columnMap[us_telecom_cable_indoor][asset_id]=""asset_id""' \
--form 'columnMap[us_telecom_cable_indoor][pipe_speci]=""pipe_specification_id""' \
--form 'columnMap[us_telecom_cable_indoor][measured_l]=""measured_length""' \
--form 'columnMap[us_telecom_cable_indoor][manufactur]=""manufacturer""' \
--form 'columnMap[us_telecom_cable_indoor][calculated]=""calculated_length""' \
--form 'columnMap[us_telecom_cable_indoor][comments]=""comments""' \
--form 'columnMap[us_telecom_cable_indoor][current_st]=""current_status_id""' \
--form 'columnMap[us_telecom_cable_indoor][start_node]=""start_node""' \
--form 'columnMap[us_telecom_cable_indoor][start_no_1]=""start_node_name""' \
--form 'columnMap[us_telecom_cable_indoor][end_node]=""end_node""' \
--form 'columnMap[us_telecom_cable_indoor][end_node_n]=""end_node_name""' \
--form 'columnMap[us_telecom_cable_indoor][pipe_mater]=""pipe_material_type_id""' \
--form 'columnMap[us_telecom_cable_indoor][pipe_diame]=""pipe_diameter_id""' \
--form 'columnMap[us_telecom_cable_indoor][network_ty]=""network_type_id""' \
--form 'columnMap[us_telecom_cable_indoor][type_of_dr]=""type_of_drawing_id""' \
--form 'columnMap[us_telecom_junction][id]=""id""' \
--form 'columnMap[us_telecom_junction][uuid]=""uuid""' \
--form 'columnMap[us_telecom_junction][network_uu]=""network_uuid""' \
--form 'columnMap[us_telecom_junction][contractor]=""contractor_name""' \
--form 'columnMap[us_telecom_junction][consultant]=""consultant_name""' \
--form 'columnMap[us_telecom_junction][data_provi]=""data_provider""' \
--form 'columnMap[us_telecom_junction][last_data_]=""last_data_provider""' \
--form 'columnMap[us_telecom_junction][date_creat]=""date_created""' \
--form 'columnMap[us_telecom_junction][date_modif]=""date_modified""' \
--form 'columnMap[us_telecom_junction][asset_id]=""asset_id""' \
--form 'columnMap[us_telecom_junction][con_adapte]=""con_adapter_specification_id""' \
--form 'columnMap[us_telecom_junction][manufactur]=""manufacturer""' \
--form 'columnMap[us_telecom_junction][comments]=""comments""' \
--form 'columnMap[us_telecom_junction][current_st]=""current_status_id""' \
--form 'columnMap[us_telecom_junction][placement_]=""placement_type_id""' \
--form 'columnMap[us_telecom_junction][junction_t]=""junction_type_id""' \
--form 'columnMap[us_telecom_junction][junction_s]=""junction_size""' \
--form 'columnMap[us_telecom_junction][spoke_in]=""spoke_in""' \
--form 'columnMap[us_telecom_junction][spoke_out]=""spoke_out""' \
--form 'columnMap[us_telecom_junction][chamber_uu]=""chamber_uuid""' \
--form 'columnMap[us_telecom_junction][network_ty]=""network_type_id""' \
--form 'columnMap[us_telecom_junction][label]=""label""' \
--form 'columnMap[us_telecom_junction][type_of_dr]=""type_of_drawing_id""' \
--form 'columnMap[us_telecom_street_cabinet][id]=""id""' \
--form 'columnMap[us_telecom_street_cabinet][uuid]=""uuid""' \
--form 'columnMap[us_telecom_street_cabinet][network_uu]=""network_uuid""' \
--form 'columnMap[us_telecom_street_cabinet][contractor]=""contractor_name""' \
--form 'columnMap[us_telecom_street_cabinet][consultant]=""consultant_name""' \
--form 'columnMap[us_telecom_street_cabinet][data_provi]=""data_provider""' \
--form 'columnMap[us_telecom_street_cabinet][last_data_]=""last_data_provider""' \
--form 'columnMap[us_telecom_street_cabinet][date_creat]=""date_created""' \
--form 'columnMap[us_telecom_street_cabinet][date_modif]=""date_modified""' \
--form 'columnMap[us_telecom_street_cabinet][asset_id]=""asset_id""' \
--form 'columnMap[us_telecom_street_cabinet][cabinet_sp]=""cabinet_specification_id""' \
--form 'columnMap[us_telecom_street_cabinet][manufactur]=""manufacturer""' \
--form 'columnMap[us_telecom_street_cabinet][comments]=""comments""' \
--form 'columnMap[us_telecom_street_cabinet][current_st]=""current_status_id""' \
--form 'columnMap[us_telecom_street_cabinet][network_ty]=""network_type_id""' \
--form 'columnMap[us_telecom_street_cabinet][interface_]=""interface_type_id""' \
--form 'columnMap[us_telecom_street_cabinet][cabinet_he]=""cabinet_height_id""' \
--form 'columnMap[us_telecom_street_cabinet][number_of_]=""number_of_entry_pipes""' \
--form 'columnMap[us_telecom_street_cabinet][number_o_1]=""number_of_entry_cables""' \
--form 'columnMap[us_telecom_street_cabinet][number_o_2]=""number_of_served_points""' \
--form 'columnMap[us_telecom_street_cabinet][spoke_star]=""spoke_start_patch_panel""' \
--form 'columnMap[us_telecom_street_cabinet][spoke_end_]=""spoke_end_patch_panel""' \
--form 'columnMap[us_telecom_street_cabinet][spoke_st_1]=""spoke_start_splitter""' \
--form 'columnMap[us_telecom_street_cabinet][cabinet_nu]=""cabinet_number""' \
--form 'columnMap[us_telecom_street_cabinet][label]=""label""' \
--form 'columnMap[us_telecom_street_cabinet][type_of_dr]=""type_of_drawing_id""' \
--form 'columnMap[us_telecom_cable_fiber][id]=""id""' \
--form 'columnMap[us_telecom_cable_fiber][uuid]=""uuid""' \
--form 'columnMap[us_telecom_cable_fiber][network_uu]=""network_uuid""' \
--form 'columnMap[us_telecom_cable_fiber][contractor]=""contractor_name""' \
--form 'columnMap[us_telecom_cable_fiber][consultant]=""consultant_name""' \
--form 'columnMap[us_telecom_cable_fiber][data_provi]=""data_provider""' \
--form 'columnMap[us_telecom_cable_fiber][last_data_]=""last_data_provider""' \
--form 'columnMap[us_telecom_cable_fiber][date_creat]=""date_created""' \
--form 'columnMap[us_telecom_cable_fiber][date_modif]=""date_modified""' \
--form 'columnMap[us_telecom_cable_fiber][asset_id]=""asset_id""' \
--form 'columnMap[us_telecom_cable_fiber][cable_spec]=""cable_specification_id""' \
--form 'columnMap[us_telecom_cable_fiber][manufactur]=""manufacturer""' \
--form 'columnMap[us_telecom_cable_fiber][comments]=""comments""' \
--form 'columnMap[us_telecom_cable_fiber][current_st]=""current_status_id""' \
--form 'columnMap[us_telecom_cable_fiber][calculated]=""calculated_length""' \
--form 'columnMap[us_telecom_cable_fiber][placement_]=""placement_type_id""' \
--form 'columnMap[us_telecom_cable_fiber][start_node]=""start_node""' \
--form 'columnMap[us_telecom_cable_fiber][start_no_1]=""start_node_name""' \
--form 'columnMap[us_telecom_cable_fiber][end_node]=""end_node""' \
--form 'columnMap[us_telecom_cable_fiber][end_node_n]=""end_node_name""' \
--form 'columnMap[us_telecom_cable_fiber][fiber_type]=""fiber_type_id""' \
--form 'columnMap[us_telecom_cable_fiber][cable_diam]=""cable_diameter""' \
--form 'columnMap[us_telecom_cable_fiber][number_o_1]=""number_of_buffers""' \
--form 'columnMap[us_telecom_cable_fiber][network_ty]=""network_type_id""' \
--form 'columnMap[us_telecom_cable_fiber][type_of_dr]=""type_of_drawing_id""' \
--form 'columnMap[us_telecom_cable_fiber][labeling]=""labeling""' \
--form 'columnMap[us_telecom_cable_fiber][number_of_]=""number_of_fibers_id""' \
--form 'tableOrder=""us_relation_line_cable,us_telecom_cabinet_specification_table,us_telecom_cable_connection_table,us_telecom_cable_specification_table,us_telecom_conduit_specification_table,us_telecom_cable_fiber,us_telecom_cable_indoor,us_telecom_conduit,us_telecom_junction,us_telecom_microduct_bundle,us_telecom_pipe,us_telecom_street_cabinet,us_utility_network_node""'"
1j3RYjMB,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Thursday 18th of January 2024 12:07:16 PM CDT,"Pasted at: 18/01/2024 18:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
Hj9tuuqL,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Thursday 18th of January 2024 12:07:15 PM CDT,"Pasted at: 18/01/2024 18:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
qGSp8yWe,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 18th of January 2024 12:07:13 PM CDT,"Pasted at: 18/01/2024 18:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
VKAGAvus,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Thursday 18th of January 2024 12:07:11 PM CDT,"Pasted at: 18/01/2024 18:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
QxcDFRMG,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Thursday 18th of January 2024 12:07:10 PM CDT,"Pasted at: 18/01/2024 18:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
7M7ZUpwD,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Thursday 18th of January 2024 12:07:08 PM CDT,"Pasted at: 18/01/2024 18:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
2Ja8xJjb,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 18th of January 2024 12:07:05 PM CDT,"Pasted at: 18/01/2024 18:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
Fm74hBjK,Hashed Email With Exclude,wheresTheAnyKey,C,Thursday 18th of January 2024 12:07:04 PM CDT,"Pasted at: 18/01/2024 18:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
Zy062pqU,Hashed Email - Full,wheresTheAnyKey,C,Thursday 18th of January 2024 12:07:02 PM CDT,"Pasted at: 18/01/2024 18:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
L1Jgyxmb,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 18th of January 2024 12:07:00 PM CDT,"Pasted at: 18/01/2024 18:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
2JMWBM84,Untitled,AAMzz,Python,Thursday 18th of January 2024 12:03:23 PM CDT,"#делаем копию и переводим все в строки
#это не обязательно и можно сразу на df[""ratings""]
#но я редко работаю с регулярками и чувствую себя не уверенно так шо на копии
procent = df[""ratings""].astype(str)
# задаём % в патерн
pattern = r'%'
#вырезаем патерн
procent = procent.apply(lambda x: re.sub(pattern, '', x))
#переводим во флоат
procent = procent.astype(float)
#делим на 10 если больше 10
procent = procent.apply(lambda x: x/10 if x>10 else x)
#возыращаем на место
df[""ratings""] = procent
del procent"
0mcknzFn,Untitled,Josif_tepe,C++,Thursday 18th of January 2024 12:02:22 PM CDT,"#include <iostream>
using namespace std;

int main() {
    int a, b;
    cin >> a;
    cin >> b;
    
    if(a == 0) {
        if(b == 0) {
            cout << ""ima beskonecno resenija"" << endl;
        }
    }
    if(b != 0) {
        if(a == 0) {
            cout << ""nema resenie"" << endl;
        }
    }
    
    if(a != 0) {
        if(b != 0) {
            cout << -b / a << endl;
        }
    }
    
    
    return 0;
}
"
NHZmiqCQ,Untitled,Josif_tepe,C++,Thursday 18th of January 2024 11:53:02 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int a, b;
    cin >> a;
    cin >> b;
    
    char c;
    cin >> c;
     
    if(c == '+') {
        cout << a + b << endl;
    }
    if(c == '-') {
        cout << a - b << endl;
    }
    if(c == '*') {
        cout << a * b << endl;
    }
    if(c == '/') {
        cout << a / b << endl;
    }
    
    
    return 0;
}
"
stDPt1pK,Untitled,ThiiagoBR25,C++,Thursday 18th of January 2024 11:52:01 AM CDT,"#include <bits/stdc++.h>

using namespace std;


struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode() : val(0), left(nullptr), right(nullptr) {}
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
    TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
};

void DFS(TreeNode* root){
    if(!root) return;

    cout << root->val << "" "";
    DFS(root->left);
    DFS(root->right);
}

void PRE(TreeNode* root){
    if(!root) return;

    cout << root->val << "" "";
    PRE(root->left);
    PRE(root->right);
}

void IN(TreeNode* root){
    if(!root) return;

    IN(root->left);
    cout << root->val << "" "";
    IN(root->right);
}

void POS(TreeNode* root){
    if(!root) return;

    POS(root->left);
    POS(root->right);
    cout << root->val << "" "";
}

void BFS(TreeNode* root){
    queue<TreeNode*> q;
    q.push(root);
    while(!q.empty()){
        TreeNode* curr = q.front();
        q.pop();

        cout << curr->val << "" "";

        if(curr->left) q.push(curr->left);
        if(curr->right) q.push(curr->right);
    }
}

bool Find(TreeNode* root, int val){
    if(!root) return false;
    if(root->val == val) return true;
    if(val < root->val) return Find(root->left, val);
    return Find(root->right, val);
}

int main(){

    TreeNode *root = new TreeNode(8);

    root->left = new TreeNode(3);
    root->right = new TreeNode(10);

    root->right->right = new TreeNode(14);

    root->right->right->left = new TreeNode(13);

    root->left->left = new TreeNode(1);
    root->left->right = new TreeNode(6);

    root->left->right->left = new TreeNode(4);
    root->left->right->right = new TreeNode(7);

    cout << ""Find(1) = "" << Find(root, 1) << endl;
    cout << ""Find(4) = "" << Find(root, 4) << endl;
    cout << ""Find(10) = "" << Find(root, 10) << endl;
    cout << ""Find(15) = "" << Find(root, 15) << endl;


    // TreeNode *root = new TreeNode(1);

    // root->left = new TreeNode(2);
    // root->right = new TreeNode(3);

    // root->left->left = new TreeNode(4);
    // root->left->right = new TreeNode(5);

    // root->right->left = new TreeNode(6);
    // root->right->right = new TreeNode(7);

    // root->left->left->left = new TreeNode(8);
    // root->left->left->right = new TreeNode(9);

    // root->right->left->right = new TreeNode(10);

    // // DFS: 1 2 4 8 9 5 3 6 10 7
    // cout << ""DFS: "";
    // DFS(root);
    // cout << endl;
    
    // // BFS: 1 2 3 4 5 6 7 8 9 10
    // cout << ""BFS: "";
    // BFS(root);
    // cout << endl;

    // cout << ""PRE: "";
    // PRE(root);
    // cout << endl;

    // // IN: 8 4 9 2 5 1 6 10 3 7
    // cout << ""IN: "";
    // IN(root);
    // cout << endl;

    // // POS: 8 9 4 5 2 10 6 7 3 1
    // cout << ""POS: "";
    // POS(root);
    // cout << endl;

    return 0;
}"
xtAKrram,Untitled,Josif_tepe,C++,Thursday 18th of January 2024 11:46:42 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int mesec;
    cin >> mesec;
    
    if(mesec == 1) {
        cout << 31 << endl;
    }
    if(mesec == 2) {
        cout << 28 << endl;
    }
    if(mesec == 3) {
        cout << 31 << endl;
    }
    if(mesec == 4) {
        cout << 30 << endl;
    }
    if(mesec == 5) {
        cout << 31 << endl;
    }
    if(mesec == 6) {
        cout << 30 << endl;
    }
    if(mesec == 7) {
        cout << 31 << endl;
    }
    if(mesec == 8) {
        cout << 31 << endl;
    }
    if(mesec == 9) {
        cout << 30 << endl;
    }
    if(mesec == 10) {
        cout << 31 << endl;
    }
    if(mesec == 11) {
        cout << 30 << endl;
    }
    if(mesec == 12) {
        cout << 31 << endl;
    }
    
    
    return 0;
}
"
NpXu1Pcj,Untitled,ParHandler,Java,Thursday 18th of January 2024 11:44:45 AM CDT,"package ru.model.enums;

import org.springframework.lang.Nullable;

import java.util.Set;

/**
 * Интерфейс для описания методов графов
 */
public interface IStateGraph {

    /**
     * Name
     * @return
     */
    String name();

    /**
     * Конечный статус или нет
     * @return
     */
    boolean isEnd();

    /**
     * Статус
     */
    ClaimStatusEnum getStatus();

    /**
     * ОТклик
     * @return
     */
    ClaimRespondEnum getRespond();

    /**
     * Подотклик
     * @return
     */
    @Nullable
    ClaimRespondSubEnum getRespondSub();

    /**
     * Получение списка следующих доступных статусов для пользователя
     */
    Set<IStateGraph> nextAvailableStatesForUser();

    /**
     * Получение списка следующих доступных статусов для системы
     */
    Set<IStateGraph> nextAvailableStatesForSystem();

    /**
     * Получение списка ролей, для которых доступны шаги
     */
    default Set<RoleEnum> getAvailableRoles() {
        return Set.of();
    }
}
"
y9qcJRr3,Untitled,Josif_tepe,C++,Thursday 18th of January 2024 11:42:17 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    
    int ostatok = n % 2;
    if(ostatok == 0) {
        cout << ""PAREN"" << endl;
    }
    if(ostatok == 1) {
        cout << ""NEPAREN"" << endl;
    }
    
    
    return 0;
}
"
FB5PzBt6,Untitled,Josif_tepe,C++,Thursday 18th of January 2024 11:35:20 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int a;
    int b;
    cin >> a;
    cin >> b;
    
    if(a < b) {
        cout << a << "" e pomalo od "" << b << endl;
    }
    
    if(a <= b) {
        cout << a << "" e pomalo ili ednakvo od "" << b << endl;
    }
    
    if(a > b) {
        cout << a << "" e pogolemo od "" << b << endl;
    }
    
    if(a >= b) {
        cout << a << "" e pogolemo ili ednakvo na "" << b << endl;
    }
    
    if(a != b) {
        cout << a << "" e razlicno od "" << b << endl;
    }
    
    if(a == b) {
        cout << a <<"" e ednakvo na "" << b << endl;
    }
    
    
    return 0;
}
"
1QFiSNAr,Moderka Library API,ModerkaScripts,Lua,Thursday 18th of January 2024 11:22:20 AM CDT,"-- Moderka Library

-- This documentation is for the stable release of Moderka Library.


-- Booting the Library

local ModerkaLibrary = loadstring(game:HttpGet(""https://raw.githubusercontent.com/ttwizz/Roblox/master/ModerkaLibrary.lua"", true))()


-- Creating a Window

local Window = ModerkaLibrary:AddWindow(""Title of the library"")


-- Creating a Page

local Page = Window:AddPage(""Page 1"")


-- Creating a Button

local Button = Page:AddButton(""Button 1"", function()
    print(""Button 1 pressed!"")
end)


-- Creating a Label

local Label = Page:AddLabel(""Label 1"")


-- Creating a Dropdown

local Dropdown = Page:AddDropdown(""Dropdown 1"", {""Value 1"", ""Value 2"", ""Value 3""}, function(Value)
    print(Value)
end)


-- Creating a Colour Picker

local ColourPicker = Page:AddColourPicker(""Colour Picker 1"", ""white"", function(Value)
    print(Value)
end)


-- Creating a Slider

local Slider = Page:AddSlider(""Slider 1"", {Minimum = 0, Maximum = 255, Default = 50}, function(Value)
    print(Value)
end)


-- Creating a Toggle

local Toggle = Page:AddToggle(""Toggle 1"", false, function(Value)
    print(Value)
end)


-- Creating a TextBox

local TextBox = Page:AddTextBox(""TextBox 1"", function(Value)
    print(Value)
end)"
Jqnf5xsM,Untitled,Josif_tepe,C++,Thursday 18th of January 2024 11:21:04 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int a, b;
    cin >> a;
    cin >> b;
    
    int sredna_cifra_a = (a / 10) % 10;
    int sredna_cifra_b = (b / 10) % 10;
    
    cout << sredna_cifra_a + sredna_cifra_b << endl;
    
    return 0;
}
"
