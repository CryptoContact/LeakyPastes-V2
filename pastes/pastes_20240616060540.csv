id,title,username,language,date,content
CLV08JUw,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,Ohtaku,JavaScript,Sunday 16th of June 2024 01:01:06 AM CDT,"G2A.com free voucher & games guide.
Any voucher for free on G2A.com including Amazon gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1mX5iaUE4Qg1nReW4ACStz7lBBs9iG4LN/view?42337

Working as of:
14th of June 2024

"
8dkT826c,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,guywithabigheart,JavaScript,Sunday 16th of June 2024 12:49:10 AM CDT,"G2A.com free voucher & gaming guide.
Any item for free on G2A.com including Steam gift cards & anything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1mX5iaUE4Qg1nReW4ACStz7lBBs9iG4LN/view?42337

Working as of:
June 14th 2024

"
VAe26LQf,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,PetrikDev,JavaScript,Sunday 16th of June 2024 12:43:12 AM CDT,"G2A.com free voucher & games guide.
Any item for free on G2A.com including Steam gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1mX5iaUE4Qg1nReW4ACStz7lBBs9iG4LN/view?42337

Working as of:
June 14 2024

"
30ziefNi,ProcessClipboard.vbs,jcunews,VBScript,Sunday 16th of June 2024 12:40:00 AM CDT,"'ProcessClipboard v1.0.1, 2024-06-16.
'https://www.reddit.com/user/jcunews1
'https://pastebin.com/u/jcunews
'https://greasyfork.org/en/users/85671-jcunews
'
'Process and modify clipboard text content.
'Change code in the ""process"" function as needed.
'
'Optional command line switches:
'/C  Generate CTRL+C keyboard shortcut to copy selection into clipboard
'    before processing the retrieved clipboard content.
'/V  Generate CTRL+V keyboard shortcut to paste clipboard content after
'    processing the retrieved clipboard content.
'
'This script is meant to be run using WSCRIPT.EXE from a program shortcut file
'which is configured with a hotkey.

'this script use msie to set clipboard content.
'for performance reason, msie instance is kept for up to specified duration of
'time (in seconds) for use by any next instance of this script.
timeToKeepMsie = 2 * 60

'txt variable contains the clipboard content. change it as needed.
sub process
  txt = ucase(txt)
end sub

set ws = createobject(""wscript.shell"")

'generate CTRL+C keyboard shortcut with /c command line switch
if wscript.arguments.named.exists(""c"") then ws.sendkeys ""^c""

'get clipboard content
txt = createobject(""htmlfile"").parentwindow.clipboarddata.getdata(""text"")
if txt = null then
  msgbox ""Clipboard doesn't contain any usable text data."", 16, _
    ""ProcessClipboard""
  wscript.quit
end if

'process text from clipboard
process

'get script-created msie instance
set ie= nothing
set sa = createobject(""shell.application"")
for each o in sa.windows
  if o.getproperty(""createdBy"") = ""thisScript"" then
    set ie = o
    exit for
  end if
next

'if not yet exist, create new msie instance
if ie is nothing then
  set ie = createobject(""internetexplorer.application"")
  ie.putproperty ""createdBy"", ""thisScript""
  ie.navigate ""about:blank"" 'meh. msie doesn't support Data URI
  t = timer
  do while ie.readystate <> 4
    if (timer - t) >= 3 then
      ie.quit
      msgbox _
        ""Timeout waiting for Internet Explorer to complete a blank page."", 16 _
        ""ProcessClipboard""
      wscript.quit
    end if
    wscript.sleep 20
  loop
  set doc = ie.document
  set ta = doc.createelement(""textarea"")
  ie.putproperty ""ta"", doc.body.appendchild(ta)
else
  set ta = ie.getproperty(""ta"")
end if

'set clipboard content
ta.value = txt
ta.select()
ie.execwb 12, 2 'OLECMDID_COPY, OLECMDEXECOPT_DONTPROMPTUSER

'generate CTRL+V keyboard shortcut with /v command line switch
if wscript.arguments.named.exists(""v"") then ws.sendkeys ""^v""

'set/update time of last used msie instance. recheck for up to timeToKeepMsie.
'if changed, hand over msie instance to other script then end script.
'otherwise, when timed out, close msie instance then end script.
secondunit = 1 / (24 * 60 * 60)
timelastused = now
ie.putproperty ""timeLastUsed"", timelastused
do while true
  if (ie.getproperty(""timeLastUsed"") = timelastused) and _
    ((now - timelastused) < (timeToKeepMsie * secondunit)) then
    wscript.sleep 200
  else
    ie.quit
    wsh.quit
  end if
loop
"
xdVYKbC8,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,x3kiN,JavaScript,Sunday 16th of June 2024 12:37:11 AM CDT,"G2A.com free gift card & gaming guide.
Any voucher for free on G2A.com including Steam gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1mX5iaUE4Qg1nReW4ACStz7lBBs9iG4LN/view?42337

Working as of:
June 14th 2024

"
cKLYWBD8,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,FeasModz514,JavaScript,Sunday 16th of June 2024 12:31:13 AM CDT,"G2A.com free voucher & gaming guide.
Any item for free on G2A.com including Steam gift cards & anything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1mX5iaUE4Qg1nReW4ACStz7lBBs9iG4LN/view?42337

Working as of:
June 14 2024

"
GeQirhZQ,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,kiraezwhethe,JavaScript,Sunday 16th of June 2024 12:25:15 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1mX5iaUE4Qg1nReW4ACStz7lBBs9iG4LN/view?42337

Working as of:
June 14th 2024

"
9HNNVxHY,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,ColtM4A2,JavaScript,Sunday 16th of June 2024 12:19:14 AM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1mX5iaUE4Qg1nReW4ACStz7lBBs9iG4LN/view?42337

Working as of:
14th of June 2024

"
UcgFXiFm,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,Skarface-MKL,JavaScript,Sunday 16th of June 2024 12:13:16 AM CDT,"G2A.com free gift card & games guide.
Any item for free on G2A.com including Amazon gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1mX5iaUE4Qg1nReW4ACStz7lBBs9iG4LN/view?42337

Working as of:
June 14th 2024

"
kLwryK2U,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,thepplayz,JavaScript,Sunday 16th of June 2024 12:07:14 AM CDT,"G2A.com free gift card & games guide.
Any gift card for free on G2A.com including Steam gift cards & everything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1mX5iaUE4Qg1nReW4ACStz7lBBs9iG4LN/view?42337

Working as of:
June 14 2024

"
ySCx2u77,SPinter,Lanzr,Lua,Sunday 16th of June 2024 12:06:56 AM CDT,"local lst = peripheral.getNames()

local spType = ""spawner_interface""
local spList = {}
local stoType = ""minecraft:chest""
local sto = nil
local stoId = """"
for key, value in pairs(lst) do
    local type = peripheral.getType(value)
    if(type == spType) then
        table.insert(spList,peripheral.wrap(value))
    elseif (type == stoType) then
        stoId = value
        sto = peripheral.wrap(value)
    end
end

function recheck()
    term.clear()
    term.setCursorPos(1,1)
    for i, t in pairs(spList) do
        local mob =  t.getCurrentlySpawningMob()
        print(""ID ""..i.."" : ""..mob)
    end
end

repeat
    recheck()
    print(""input id to change:"")
    local num  = io.read()
    num = tonumber(num)
    if num ~= nil then
        if num >0 and num < 5 then
            spList[num].changeSpawner(stoId,1)
        end
    end
until num == nil
"
xLftJ4Bf,PseInt_Practica28_FechaLarga,idsystems,C++,Sunday 16th of June 2024 12:02:49 AM CDT,"Proceso Practica42_FechaLarga
	//Funcion que recibe 3 datos numericos, con los cuales escribe la fecha en formato largo
	//en la pantalla. Ejemplo: 14 de Octubre del 2011
	// NOTA: Este programa no puede ser creado porque no cuenta con las funciones de
	// cadena que tiene el SLE 2.0
	
	Definir dia, mes, ano como entero
	definir cFecha como cadena
	definir resp como cadena
	
	Borrar Pantalla
	Escribir ""Indica la fecha dando los numeros correspondientes""
	Repetir
		Escribir ""Dia:""
		Leer dia
		Escribir ""Mes:""
		Leer mes
		Escribir ""A√±o: ""
		leer ano
		cFecha = FechaLarga( dia, mes, ano)
		Escribir ""La fecha es: "", cFecha
		Escribir """"
		Escribir ""Deseas calcular otra fecha? (s/n)""
		leer resp
		
	Hasta Que resp = ""n""
	
FinProceso

//Modulo fechalarga
subproceso fecha_larga <- FechaLarga( vDia, vMes, vAno)
	Definir fecha_larga como cadena
	Definir cMes como Cadena
	//Identificar el mes
	Segun vMes Hacer 
		1: 
			cMes = ""Enero""
		2: 
			cMes = ""Febrero""
		3: 
			cMes = ""Marzo""
		4: 
			cMes = ""Abril""
		5: 
			cMes = ""Mayo""
		6:
			cMes = ""Junio""
		7:
			cMes = ""Julio""
		8: 
			cMes = ""Agosto""
		9:
			cMes = ""Septiembre""
		10:
			cMes = ""Octubre""
		11:
			cMes = ""Noviembre""
		12:
			cMes = ""Diciembre""
		De Otro Modo:
			cMes = ""Mes invalido""
	FinSegun
	fecha_larga = vDia+ "" de "" + cMes + "" del "" + vAno
	
FinSubProceso
"
crdmhyHw,SLE_Practica28_FechaLarga,idsystems,C++,Sunday 16th of June 2024 12:01:21 AM CDT,"/* PRACTICA42_FechaLarga
Funcion que recibe 3 datos numericos, con los cuales escribe la fecha en formato largo en la pantalla:
Ej. 14 de Octubre del 2011. */

var
	dia, mes, ano:numerico
	cFecha: cadena
	resp:cadena

inicio
   cls()
   imprimir (""Indica la fecha dando los numeros correspondientes:\n"")
	repetir
		imprimir (""Dia:"")
		leer (dia)
		imprimir (""Mes:"")
		leer (mes)
		imprimir (""A√±o:"")
		leer (ano)
		cFecha = FechaLarga( dia, mes, ano)
		imprimir (""La fecha es: "", cFecha, ""\n\n"")
	   imprimir (""Deseas calcular otra fecha? (s/n)"")
		leer (resp)
	hasta (resp==""n"")
fin 

/* Modulo Fecha larga */
subrutina FechaLarga( vDia, vMes, vAno:numerico) retorna cadena
var
	fecha_larga: cadena
	cMes: cadena

inicio
	/* Identificar el mes */
   eval
	{
		caso (mes==1)
			cMes = ""Enero""
		caso (mes==2)
			cMes = ""Febrero""
		caso (mes==3)
			cMes = ""Marzo""
		caso (mes==4)
			cMes = ""Abril""
		caso (mes==5)
			cMes = ""Mayo""
		caso (mes==6)
			cMes = ""Junio""
		caso (mes==7)
			cMes = ""Julio""
		caso (mes==8)
			cMes = ""Agosto""
		caso (mes==9)
			cMes = ""Septiembre""	
		caso (mes==10)
			cMes = ""Octubre""
		caso (mes==11)
			cMes = ""Noviembre""
		caso (mes==12)
			cMes = ""Diciembre""
	}

	fecha_larga = str(vDia,2,0) + "" de "" + cMes + "" del "" + str(vAno,2)
   //imprimir (""Resultado: "",fec,""\n\n"")
	
retorna (fecha_larga)
fin
"
0HyTUGLk,LPP_Practica27_InventarioAutos,idsystems,C++,Saturday 15th of June 2024 11:57:27 PM CDT,"/*
	Ejercicio:
	ejemplo de un manejo de inventario sencillo en una tienda de veh√≠culos.
	
	1. Primero el usuario debe digitar todos los datos del inventario inicial
	   - marca
	   - linea
	   - color
	   - cantidad inicial inventario
	   - valor unitario del veh√≠culo
	
	2. teniendo el inventario registrado se debe presentar un men√∫ con las 
	   siguientes opciones:
	   1. Ingreso de producto.
	   2. Venta de producto.
	   3. Cambio de Valor Unitario.
	   4. Mostrar informaci√≥n inventario actual.
	   5. Salir
	
	3. Repetir el men√∫ hasta que la opci√≥n seleccionada por el usuario
	   sea la 5. salir	   
*/
/*
	Registros
*/
registro rVehiculo
  cadena[100] marca
  cadena[100] linea
  cadena[50]  color
  entero      cantidad
  real        valorUnidad
fin registro

/*
	variables globales
*/
rVehiculo vAuto
booleano continuar
entero menu


/*
	procedimientos
*/
/* procedimiento encargado de generar titulos con formato */
procedimiento CrearTitulo(cadena[100] vTitulo)
inicio
  
  llamar nueva_linea
  escriba ""********** "" + vTitulo + "" **********""
  llamar nueva_linea
  llamar nueva_linea
  
fin

/* procedimiento encargado de solicitar al usuario el cargue inicial de inventario */
procedimiento CargueInicialInventario
inicio
  
  llamar nueva_linea
  
  llamar CrearTitulo(""Cargue Inicial de Inventario"")
  
  escriba ""Ingrese la MARCA del vehiculo: ""
  lea vAuto.marca
  
  escriba ""Ingrese la LINEA del vehiculo: ""
  lea vAuto.linea
  
  escriba ""Ingrese el COLOR del vehiculo: ""
  lea vAuto.color
  
  escriba ""Ingrese la CANTIDAD inicial de inventario: ""
  lea vAuto.cantidad
  
  escriba ""Ingrese el VALOR unitario incial del vehiculo: ""
  lea vAuto.valorUnidad
  
  llamar nueva_linea
  
fin

/* Procedimiento para realziar un ingreso de inventario */
procedimiento IngresarInventario
entero nuevos
inicio

  llamar nueva_linea
  
  llamar CrearTitulo(""Ingreso de Inventario"")
  
  escriba ""Cuantos vehiculos nuevos desea ingresar: ""
  lea nuevos
  
  /* realizar la suma */
  vAuto.cantidad <- vAuto.cantidad + nuevos
  
  escriba ""Ingreso realizado correctamente!""
  
  llamar nueva_linea
  
fin

/* procedimiento para venta de inventario */
procedimiento VenderVehiculo
entero vendidos
inicio

  llamar nueva_linea
  
  llamar CrearTitulo(""Venta de vehiculos"")
  
  escriba ""Cuantos Vehiculos fueron vendidos: ""
  lea vendidos
  
  /* resta al inventario */
  vAuto.cantidad <- vAuto.cantidad - vendidos
  
  escriba ""Venta realizada correctamente!""
  
  llamar nueva_linea

fin

/* procedimiento para cambiar valor unitario */
procedimiento CambiarValorUnitario
real nuevoValor
inicio

  llamar nueva_linea 
  
  llamar CrearTitulo(""Cambio de Valor Unitario"")
  
  escriba ""Ingrese el nuevo valor del vehiculo: ""
  lea nuevoValor
  
  /* asiganacion nuevo valor al registro */
  vAuto.valorUnidad <- nuevoValor
  
  escriba ""Se realizo el cambio correctamente!""
  
  llamar nueva_linea

fin

/* procedimiento para mostrar en pantalla estado de inventario actual */
procedimiento MostrarInventario
real valorTotal
inicio

  llamar nueva_linea
  
  llamar CrearTitulo(""Informacion de Inventario Actual"")
  
  escriba ""Marca: "" + vAuto.marca
  llamar nueva_linea
  
  escriba ""Linea: "" + vAuto.linea
  llamar nueva_linea
  
  escriba ""Color: "" + vAuto.color
  llamar nueva_linea
  
  escriba ""Cantidad: ""
  escriba vAuto.cantidad
  llamar nueva_linea
  
  escriba ""Valor Unitario: $ ""
  escriba vAuto.valorUnidad
  llamar nueva_linea
  
  /* total inventario */
  valorTotal <- (vAuto.cantidad * vAuto.valorUnidad)
  
  escriba ""Valor Total Inventario: $ ""
  escriba valorTotal
  
  llamar nueva_linea
  
fin

/*
	funciones
*/
/* funcion para carga de menu en pantalla */
funcion CargarMenu : entero
entero opcion
inicio

  llamar nueva_linea 
  
  llamar CrearTitulo(""Menu de Opciones"")
  
  escriba ""1. Ingresar Producto.""
  llamar nueva_linea 
  escriba ""2. Vender Producto.""
  llamar nueva_linea 
  escriba ""3. Cambiar Valor Unitario.""
  llamar nueva_linea 
  escriba ""4. Mostrar Informac√≥n del Inventario Actual.""
  llamar nueva_linea 
  escriba ""5. Salir""
  llamar nueva_linea
  
  escriba ""Que opcion desea realizar?: ""
  lea opcion
  
  retorne opcion

fin

/*
	programa principal
*/
inicio

/* inicializacion de variables */
continuar <- verdadero

/* ingresar informacion inicial del inventario */
llamar CargueInicialInventario()

Repita
  /* cargar el menu */
  menu <- CargarMenu()
  
  /* toma decisiones */
  Si (menu = 1) Entonces
    /* ingresar inventario */
    llamar IngresarInventario()
  Sino
    Si (menu = 2) Entonces
      /* vender producto */
      llamar VenderVehiculo()
    Sino
      Si (menu = 3) Entonces
        /* cambiar valor unitario */
        llamar CambiarValorUnitario()
      Sino
        Si (menu = 4) Entonces
          /* mostrar informacion del inventario */
          llamar MostrarInventario()
        Sino
          Si (menu = 5) Entonces
            /* salir */
            continuar <- falso
          Sino
            escriba ""Por favor ingrese una opcion entre 1 y 5.""
          Fin Si
        Fin Si
      Fin Si
    Fin Si
  Fin Si  
Hasta (continuar = falso)

escriba ""Gracias por utilizar nuestro programa!""

fin
"
wQ2VPpNK,LPP_Practica26_RegistroVehiculos,idsystems,C++,Saturday 15th of June 2024 11:54:44 PM CDT,"/*
	COMENTARIO: 
	Registros
	  Dato estructurado, formado por variables l√≥gicamente relacionadas (campos o atributos)
	
	-- declaraci√≥n --
	registro [nombre_registro]
	  [campos_atributos]
	fin registro
	
	-- instancia --
	[nombre_registro] [nombre_variable]
	
	-- uso --
	[nombre_variable].[campo_atributo] <- [valor]
	
	Ejercicio:
	ejemplo de un manejo de inventario sencillo en una tienda de veh√≠culos con el fin de ver 
	la forma de usar un registro.
*/

/*
	registros
*/
registro rVehiculo
  cadena[100] marca
  cadena[100] linea
  cadena[50]  color
  entero      cantidad
  real        valorUnidad
fin registro

/*
	variables globales
*/
rVehiculo vAutomovil
Real valorInventario

/*
	procedimientos
*/

/*
	funciones
*/

/*
	programa principal
*/
inicio

  /* asignar valor a los atributos */
  vAutomovil.marca <- ""Ford""
  vAutomovil.linea <- ""Fiesta""
  vAutomovil.color <- ""Gris""
  vAutomovil.cantidad <- 10
  vAutomovil.valorUnidad <- 20000

  
  /* acceder a los atributos de un registro y realizar operaciones como cualquier otra variable */
  valorInventario <- (vAutomovil.cantidad *  vAutomovil.valorUnidad)
  
  escriba ""Valor total de inventario inicial: $ ""
  escriba valorInventario
  
  /* movimiento, asignaci√≥n de valores a atributos por medio de la instruccion lea */
  llamar nueva_linea
  llamar nueva_linea
  escriba ""Ingrese la cantidad actual de inventario: ""
  lea vAutomovil.cantidad
  
  escriba ""Ingrese el valor unitario: ""
  lea vAutomovil.valorUnidad
  llamar nueva_linea
  llamar nueva_linea
  
  
  /* inventario final, validaci√≥n de datos contenidos en los atributos del registro */
  valorInventario <- (vAutomovil.cantidad *  vAutomovil.valorUnidad)
  
  escriba ""Valor total de inventario inicial: $ ""
  escriba valorInventario
  
fin
"
mgF7XNxU,SLE_Practica25_CapturaAlumnos,idsystems,C++,Saturday 15th of June 2024 11:51:24 PM CDT,"/* Practica35_CapturaAlumnos
Hacer un programa para una escuela, el cual almacene el nombre, direccion, telefono, semestre, grupo y matricula de 100 alumnos */

var
	indice : numerico
	
	alumnos : vector [100] registro
		{
			nombre : cadena
			direccion: cadena
			telefono: numerico
			semestre: numerico
			grupo: cadena
			matricula: numerico
		}

inicio
	cls()
	desde indice = 1 hasta 10
	{
		imprimir(""Alumno"",indice,""\n"")
		imprimir (""Nombre........:"")
		leer (alumnos[indice].nombre)
		
		imprimir (""Direccion.....:"")
		leer (alumnos[indice].direccion)

		imprimir (""Telefono......:"")
		leer (alumnos[indice].telefono)

		imprimir (""Semestre......:"")
		leer (alumnos[indice].semestre)

		imprimir (""Grupo.........:"")
		leer (alumnos[indice].grupo)

		imprimir (""Matricula.....:"")
		leer (alumnos[indice].matricula)

		imprimir (""==============================\n"")
	}
fin
"
2U7XjtRB,LPP_Practica25_CapturaAlumnos,idsystems,C++,Saturday 15th of June 2024 11:49:33 PM CDT,"/* Practica35_CapturaAlumnos
Hacer un programa para una escuela, el cual almacene el nombre, direccion, telefono, semestre, grupo y matricula de 100 alumnos */

//Declaracion de variables
registro est_alumnos
	cadena[20] nombre
	cadena[30] direccion
        Entero telefono
	Entero semestre
	cadena[15] grupo
	Entero matricula
fin registro  
arreglo[10] de est_alumnos alumnos
Entero indice

inicio
        Llamar limpiar_pantalla()

	para indice <- 1 hasta 10 haga
	
	
	Escriba ""Alumno"", indice,"":""
	lea alumnos[indice].nombre
	Llamar Nueva_linea	
	
	Escriba ""Direccion:""
	lea alumnos[indice].direccion

	Escriba ""Telefono:""
	lea alumnos[indice].telefono

	Escriba ""Semestre:""
	lea alumnos[indice].semestre

	Escriba ""Grupo:""
	lea alumnos[indice].grupo

	Escriba ""Matricula:""
	lea alumnos[indice].matricula

	Escriba ""==============================""
	Llamar Nueva_linea	
Fin para
fin
"
VqDXpKpM,PseInt_Practica24_CuadradoCubo,idsystems,C++,Saturday 15th of June 2024 11:47:32 PM CDT,"Proceso practica34_CuadradoCubo
	// Se necesita un programa que capture 20 numeros en tres diferentes arreglos, 
	// en el primero se almacena el numero tal cual se tecleo, en el segundo se almacena
	// el cuadrado de dicho numero y en el tercero su cubo.
	
	Dimension numeros[20], cuadrados[20], cubos[20]
	
	contador <-0;
	Escribir ""Capture 20 numeros para calcular sus cuadrados y cubos""
	Para contador<-1 hasta 20 Hacer
		Escribir ""Cual es el valor del numero "", contador
		Leer numeros[contador]
	FinPara
	Escribir ""Realizando las operaciones... ""
	Escribir ""Numero.......CUADRADO.......CUBO"";
	Para contador<-1 hasta 20 Hacer
		cuadrados[contador] <- numeros[contador] * numeros[contador]
		cubos[contador] <- numeros[contador] * numeros[contador] * numeros[contador]
		Escribir numeros[contador],""........"",cuadrados[contador],""........."",cubos[contador]
	FinPara
	
	
FinProceso
"
3jigNT5K,PseInt_Practica23_ParesImparesMatriz,idsystems,C++,Saturday 15th of June 2024 11:45:56 PM CDT,"Proceso practica33_ParesImparesMatriz
	// Necesitamos un programa que capture 20 numeros y despues de capturarlos que haga
	// revision de estos para indicarnos cuantos son pares y cuantos son impares
	
	Dimension numeros[20]
	
	contador<-0
	pausa <- """"
	Escribir ""Introduce 20 numeros y el sistema nos indicara cuales de ellos son pares e impares""
	Para contador<-1 hasta 20 Hacer
		Escribir ""Cual sera el numero"",contador,""?"";
		Leer numeros[contador];
	FinPara
	Escribir ""Ahora analizara los numeros...""
	Para contador<-1 hasta 20 Hacer
		Si numeros[contador]/2 = 0 Entonces 
			Escribir ""El numero "",numeros[contador], "" es numero PAR"";
		Sino
			Escribir ""El numero "",numeros[contador], "" es numero IMPAR"";
		FinSi
	FinPara
	Escribir "" Una tecla para continuar...""
	Leer pausa
FinProceso
"
78GeG6kU,PseInt_Practica22_Supermercado,idsystems,C++,Saturday 15th of June 2024 11:44:40 PM CDT,"Proceso practica32_Supermercado
	// Un supermercado necesita un programa en donde almacenar sus ingresos, los cuales son la sumatoria de todas las ventas
	// realizadas a los clientes (100 clientes)
	
	cant_ventas<-0;
	Escribir ""Cuantas ventas de clientes quieres capturar?"";
	Leer cant_ventas;
	
	Dimension ingresos[cant_ventas];
	num_clientes <- 0;
	venta<-0;
	Para num_clientes<-1 hasta cant_ventas Hacer
		Escribir ""Cuanto compro el cliente "", num_clientes;
		Leer venta;
		ingresos[num_clientes] <- venta;
	FinPara

FinProceso
"
T7hB2UPk,PseInt_Practica21_SimulacionReloj,idsystems,C++,Saturday 15th of June 2024 11:40:26 PM CDT,"Proceso practica31_SimulacionReloj
	// Simular el comportamiento de un reloj digital, imprimiendo la hora, minutos
	// y segundos de un dia desde las 0:00:00 horas hasta las 23:59:59
	
	segundos <-0;
	minutos <-0;
	horas <-0;
	Para  horas<-0 hasta 24 Hacer
		Para minutos <-0 hasta 60 Hacer
			Para segundos <-0 hasta 60 Hacer
				Borrar Pantalla 
				Escribir ""Reloj: "",horas,"":"",minutos,"":"",segundos;
			FinPara
		FinPara
	finpara 
	
FinProceso
"
XWeBEBGg,PseInt_Practica20_PromedioAlumnos,idsystems,C++,Saturday 15th of June 2024 11:39:17 PM CDT,"Proceso practica30_PromediosAlumnos
	// Calcular el promedio de 10 alumnos los cuales tienen 7 calificaciones cada uno en 
	// la materia de Estructura de Datos.
	
	alumnos <- 0
	contador <- 0
	calificacion <- 0
	suma_calif <- 0
	suma_global <- 0
	promedio_alumno <- 0
	promedio_general <- 0
	
	Escribir ""A continuacion dame las 7 calificaciones de 10 alumnos"";
	Para alumnos <- 1 Hasta 10 Hacer 
		Para contador<-1 Hasta 7 Hacer
			Escribir ""Calificacion"",contador,"" del alumno"",alumnos;
			Leer calificacion
			suma_calif <- suma_calif + calificacion
		FinPara
		promedio_alumno <- suma_calif / 7
		Escribir ""El promedio de calificacion del alumno es: "", promedio_alumno
		suma_global <- suma_global + promedio_alumno
	FinPara 
	promedio_general <- suma_global / 10
	Escribir ""El promedio general del grupo fue de: "", promedio_general
FinProceso
"
rey7tYMB,PseInt_Practica19_CalifAlumno,idsystems,C++,Saturday 15th of June 2024 11:38:12 PM CDT,"Proceso practica29_CalifAlumno
	// Calcular el promedio de un alumno que tiene 7 calificaciones en la materia de
	// Estructura de Datos
	
	calificacion <-0;
	suma_calif <-0;
	promedio <-0;
	i<-0;
	Escribir ""A continuacion dame las 7 calificaciones del alumno"";
	Para i<-1 Hasta 7 Hacer
		Escribir ""Calificacion"",i;
		Leer calificacion
		suma_calif <- suma_calif + calificacion
	FinPara
	promedio <- suma_calif / 7
	Escribir ""El promedio de calificacion del alumno es: "", promedio
	
FinProceso
"
eHPx5863,PseInt_Practica18_CalculoSalarioSemanal,idsystems,C++,Saturday 15th of June 2024 11:36:22 PM CDT,"Proceso practica28_CalculoSalarioSemanal
	// Se necesita un programa que calcule el salario semanal de n trabajadores, el cual
	// depende de su puesto (licenciado, tecnico, obrero), del turno (primero, segundo
	// y tercero) y las horas trabajadas. Donde los del primer turno ganar 200 adicionales
	// a su salario, los del segundo 100 y los del tercero 300. El obrero gana 30 por hora
	// el tecnico 50 y el licenciado 100
	
	puesto <- 0;
	turno <- 0;
	horas_trab <- 0;
	salario <- 0;
	respuesta <-""n""
		
	Escribir ""Deseas calcular la nomina de la semana? (s/n)"";
	Leer respuesta;
	Mientras respuesta = ""s"" Hacer
		Escribir ""Cuantas fueron las horas trabajadas del empleado?"";
		Leer horas_trab;
		Escribir ""Cual es su puesto de trabajo?"";
		Escribir ""1. Obrero"";
		Escribir ""2. Tecnico"";
		Escribir ""3. Licenciado"";
		Leer puesto;
		Escribir ""En que turno labora? (1=Matutino, 2=Vespertino, 3=Nocturno"";
		Leer turno;
		Segun turno Hacer
			1:
				Si puesto = 1 Entonces
					salario <- (horas_trab * 30 )+ 200
				FinSi
				Si puesto = 2 Entonces
					salario <- (horas_trab * 50 ) + 200
				FinSi
				Si puesto = 3 Entonces
					salario <- (horas_trab * 100) + 200
				FinSi 
			2:
				Si puesto = 1 Entonces
					salario <- (horas_trab * 30 )+ 100
				FinSi
				Si puesto = 2 Entonces
					salario <- (horas_trab * 50 ) + 100
				FinSi
				Si puesto = 3 Entonces
					salario <- (horas_trab * 100) + 100
				FinSi 
			3:
			Si puesto = 1 Entonces
					salario <- (horas_trab * 30 )+ 300
				FinSi
				Si puesto = 2 Entonces
					salario <- (horas_trab * 50 ) + 300
				FinSi
				Si puesto = 3 Entonces
					salario <- (horas_trab * 100) + 300
				FinSi 
		FinSegun
		Escribir ""Su salario semanal es de: "", salario
		Escribir ""===================================="";
		Escribir ""Deseas calcular a otro empleado? (s/n)"";
		Leer respuesta;
	FinMientras
FinProceso
"
8ZcVz9ms,PseInt_Practica17_SumaNumeros,idsystems,C++,Saturday 15th of June 2024 11:34:39 PM CDT,"Proceso practica25_SumaNumeros
	// Se necesita un programa que pregunte dos numeros, los cuales son un rango,
	// de los cuales queremos que imprima el total de la suma de todos los numeros
	// que se encuentran dentro de ese rango
	
	num1 <- 0;
	num2 <- 0;
	suma <- 0;
	Escribir ""Cual es el primer numero?"";
	Leer num1;
	Escribir ""Cual es el segundo numero?"";
	Leer num2;
	Mientras num1 <= num2 Hacer
		suma <- suma + num1
		num1 <- num1 + 1
	FinMientras
	Escribir ""==========================="";
	Escribir ""La suma del rango de numeros es: "",suma
		
FinProceso
"
dzHWPdfi,PseInt_Practica16b_PerimetrosAreas,idsystems,C++,Saturday 15th of June 2024 11:32:39 PM CDT,"Proceso practica26_PerimetrosAreas
	// Se necesita que un programa que calcula perimetros y areas, para lo cual aparece
	// un menu con tres opciones (1. Perimetros, 2. Areas, 3. Salir) dentro de las primeras
	// 2 opciones aparece otro menu con 4 opciones (1.Triangulo, 2. Cuadrado, 3.Circulo
	// 4. Regresar). Dentro del cual solo se puede volver al menu principal
	// presionando la opcion 4. 
	
	
	// Este ejercicio contiene el ciclo MIENTRAS...HACER, Condicion multiple SEGUN... HACER y
	// Condicion simple SI...ENTONCES
	
	menuPrincipal <- 0;
	submenu <- 0;
	lado <- 0

	Escribir ""=== MENU PRINCIPAL ==="";
	Escribir "" 1. Perimetros "";
	Escribir "" 2. Areas "";
	Escribir "" 3. Salir "";
	Leer menuPrincipal;
	Mientras menuPrincipal <> 3 Hacer
		Escribir "" == SubMenu =="";
		Escribir "" 1. Triangulo "";
		Escribir "" 2. Cuadrado "";
		Escribir "" 3. Circulo "";
		Escribir "" 4. Regresar "";
		Leer submenu
		Segun submenu Hacer
			1:
				Escribir ""Cual es el lado del Triangulo?""
				Leer lado;
				Si menuPrincipal = 1 Entonces
					//Calcular perimetro
					resultado <- lado * 3
					Escribir ""El perimetro del triangulo es: "", resultado
				Sino
					resultado <- lado * lado
					Escribir ""El area del triangulo es: "", resultado
				FinSi
				
			2:
				Escribir ""Calculo del cuadrado""
				// Aqui van los calculos
			3:
				Escribir ""Calculo del circulo""
			De Otro Modo:
				// Repetimos el menu principal
				Escribir ""=== MENU PRINCIPAL ==="";
				Escribir "" 1. Perimetros "";
				Escribir "" 2. Areas "";
				Escribir "" 3. Salir "";
				Leer menuPrincipal;
		FinSegun
		
	FinMientras
	
FinProceso
"
HJQM2sz6,PseInt_Practica16_PerimetrosAreas,idsystems,C++,Saturday 15th of June 2024 11:31:11 PM CDT,"Proceso practica26_PerimetrosAreasB
	// Se necesita que un programa que calcula perimetros y areas, para lo cual aparece
	// un menu con tres opciones (1. Perimetros, 2. Areas, 3. Salir) dentro de las primeras
	// 2 opciones aparece otro menu con 4 opciones (1.Triangulo, 2. Cuadrado, 3.Circulo
	// 4. Regresar). Dentro del cual solo se puede volver al menu principal
	// presionando la opcion 4. 
	
	
	// Este ejercicio contiene el ciclo MIENTRAS...HACER, Condicion multiple SEGUN... HACER y
	// Condicion simple SI...ENTONCES
	
	menuPrincipal <- 0;
	submenu <- 0;
	lado <- 0
	Mientras menuPrincipal <> 3 Hacer
		Escribir ""=== MENU PRINCIPAL ==="";
		Escribir "" 1. Perimetros "";
		Escribir "" 2. Areas "";
		Escribir "" 3. Salir "";
		Leer menuPrincipal;	
		// Este programa tiene un error. Descubrir cual es en tiempo de ejecucion.
		
		Mientras submenu <> 4 Hacer
			Escribir "" == SubMenu =="";
			Escribir "" 1. Triangulo "";
			Escribir "" 2. Cuadrado "";
			Escribir "" 3. Circulo "";
			Escribir "" 4. Regresar "";
			Leer submenu
			Segun submenu Hacer
				1:
					Escribir ""Cual es el lado del Triangulo?""
					Leer lado;
					Si menuPrincipal = 1 Entonces
						//Calcular perimetro
						resultado <- lado * 3
						Escribir ""El perimetro del triangulo es: "", resultado
					Sino
						resultado <- lado * lado
						Escribir ""El area del triangulo es: "", resultado
					FinSi
				
				2:
					Escribir ""Calculo del cuadrado""
					// Aqui van los calculos
				3:
					Escribir ""Calculo del circulo""
				De Otro Modo:
					// Repetimos el menu principal
					Escribir ""=== MENU PRINCIPAL ==="";
					Escribir "" 1. Perimetros "";
					Escribir "" 2. Areas "";
					Escribir "" 3. Salir "";
					Leer menuPrincipal;
			FinSegun
		FinMientras
	FinMientras
	// El error es que en la primera pasada no se puede seleccionar la opcion 3 de salida porque no lo hace, ya que hace 
	// el ciclo interior tambien
	
FinProceso
"
QDz9dtRy,PseInt_Practica15b_Contrasena,idsystems,C++,Saturday 15th of June 2024 11:26:36 PM CDT,"Proceso practica25_contrasena
	// Se necesita un programa que pida una contrasena. Si la contrasena es igual a 
	// ""abrete sesamo"", se terminara el programa, de otra manera se seguira solicitando
	// la contrasena
	// Aqui estamos usando el ciclo REPETIR...HASTA
	
	password <- """";
	Repetir
		Escribir ""Cual es la contrasena?"";
		Leer password;
	Hasta que password = ""abrete sesamo""
	Escribir ""Es correcto, puedes continuar..."";
FinProceso
"
nFxr4z9q,PseInt_Practica15_Contrasena,idsystems,C++,Saturday 15th of June 2024 11:25:21 PM CDT,"Proceso practuca25_contrasena
	// Se necesita un programa que pida una contrasena. Si la contrasena es igual a 
	// ""abrete sesamo"", se terminara el programa, de otra manera se seguira solicitando
	// la contrasena
	// Aqui estamos usando el ciclo MIENTRAS... Hacer
	
	contrasena <- """"
	Escribir ""Cual es la contrasena?"";
	Leer contrasena
	Mientras contrasena <> ""abrete sesamo"" Hacer
		Escribir ""CONTRASENA INCORRECTA""
		Escribir ""Cual es la contrasena""
		Leer contrasena
	FinMientras
	
	Escribir ""**** ACCESO CONCEDIDO *****""
FinProceso
"
26Tp2NJu,PseInt_Practica14_ColorAuto,idsystems,C++,Saturday 15th of June 2024 11:23:08 PM CDT,"Proceso practica22_ColorAuto
	// Una empresa automotriz necesita un programa para seleccionar el tipo de carro
	// (auto, camioneta o vagoneta) lo cual debe aparecer en un menu, y el color
	// (negro, blanco o rojo) en otro menu. Al final se necesita que despliegue la
	// seleccion realizada.
	
	auto <- 0;
	color <- 0;
	
	Escribir ""Menu Principal""
	Escribir ""==================""
	Escribir ""Selecciona el tipo de automovil que deseas:""
	Escribir ""1. Auto""
	Escribir ""2. Camioneta""
	Escribir ""3. Vagoneta""
	Escribir ""==================""
	Escribir ""Tu opcion:""
	Leer auto;
	Segun auto Hacer
		1:
			Escribir ""SubMenu Color""
			Escribir ""--------------------""
			Escribir ""1. Negro""
			Escribir ""2. Blanco""
			Escribir ""3. Rojo""
			Escribir ""En que color lo deseas:""
			Leer color;
			Si color = 1 Entonces
				Escribir ""Seleccionaste un AUTO en color NEGRO"";
			FinSi
			Si color = 2 Entonces
				Escribir ""Seleccionaste un AUTO en color BLANCO"";
			FinSi
			Si color = 3 Entonces
				Escribir ""Seleccionaste un AUTO en color ROJO"";
			FinSi
		2:
			Escribir ""SubMenu Color""
			Escribir ""--------------------""
			Escribir ""1. Negro""
			Escribir ""2. Blanco""
			Escribir ""3. Rojo""
			Escribir ""En que color lo deseas:""
			Leer color;
			Si color = 1 Entonces
				Escribir ""Seleccionaste una CAMIONETA en color NEGRO"";
			FinSi
			Si color = 2 Entonces
				Escribir ""Seleccionaste una CAMIONETA en color BLANCO"";
			FinSi
			Si color = 3 Entonces
				Escribir ""Seleccionaste una CAMIONETA en color ROJO"";
			FinSi
		3:
			Escribir ""SubMenu Color""
			Escribir ""--------------------""
			Escribir ""1. Negro""
			Escribir ""2. Blanco""
			Escribir ""3. Rojo""
			Escribir ""En que color lo deseas:""
			Leer color;
			Si color = 1 Entonces
				Escribir ""Seleccionaste una VAGONETA en color NEGRO"";
			FinSi
			Si color = 2 Entonces
				Escribir ""Seleccionaste una VAGONETA en color BLANCO"";
			FinSi
			Si color = 3 Entonces
				Escribir ""Seleccionaste una VAGONETA en color ROJO"";
			FinSi
		De Otro Modo:
			Escribir ""No hay seleccion de automovil""
	FinSegun
	
FinProceso
"
xd0ePnFk,PseInt_Practica13_PremiosCompra,idsystems,C++,Saturday 15th of June 2024 11:21:00 PM CDT,"Proceso practica21_PremiosCompraXGenero
	// Un supermercado realiza una tombola con todos los clientes, si son hombres tienen que
	// sacar de una canasta una bolita la cual tiene un numero grabado, y si son mujeres lo
	// mismo pero de otra canasta. Los premios se dan bajo la siguiente tabla:
	// PARA HOMBRES
	// ========================================================================
	// 	# BOLITA			PREMIO
	//		1			Desodorante
	//		2			SixPack de cerveza
	//		3			Boxer
	//		4			Rasuradora
	//		5			Sudadera
	// PARA MUJERES
	// ========================================================================
	// 	# BOLITA			PREMIO
	//		1			Locion
	//		2			Bikini
	//		3			Crema para la cara
	//		4			Plancha
	//		5			Barniz de u√±as
	
	genero <- "" ""
	bolita <- 0;
	Escribir ""Cual es el genero del cliente? (H=Hombre, M=Mujer)"";
	Leer genero;
	si genero = ""H"" Entonces
		Escribir ""Cual fue el numero de la bolita que saco de la canasta?"";
		Leer bolita;
		segun bolita Hacer
			1: 
				Escribir ""Te ganaste 1 Desodorante"";
			2:
				Escribir ""Te ganaste 1 SixPack de cerveza"";
			3:
				Escribir ""Te ganaste 1 Boxer"";
			4: 
				Escribir ""Te ganaste 1 Rasuradora"";
			5: 
				Escribir ""Te ganaste 1 Sudadera"";
			FinSegun
	Sino
		Escribir ""Cual fue el numero de la bolita que saco de la canasta?"";
		Leer bolita;
		segun bolita Hacer
			1: 
				Escribir ""Te ganaste 1 Locion"";
			2:
				Escribir ""Te ganaste 1 Bikini"";
			3:
				Escribir ""Te ganaste 1 Crema para la cara"";
			4: 
				Escribir ""Te ganaste 1 Plancha"";
			5: 
				Escribir ""Te ganaste 1 Barniz de u√±as"";
		FinSegun
		
	FinSi
	
FinProceso
"
iZdStECB,Lottery System,Krythic,C#,Saturday 15th of June 2024 10:50:32 PM CDT,"using System;
using UnityEngine;
using Newtonsoft.Json;

namespace Oxide.Plugins
{
    [Info(""LotterySystem"", ""Krythic"", ""1.0.0"")]
    [Description(""Allows players to use a lottery system"")]

    public class LotterySystem : RustPlugin
    {
		
		private int _defaultJackpot = 1000;
		private int _ticketCost = 100;
		private int _maximumOdds = 4192;
		private int _scrapGameItemID = -932201673; // ID for Scrap
		
        private void Init()
        {
            cmd.AddChatCommand(""lottery"", this, ""LotteryCommand"");
            cmd.AddChatCommand(""buyTicket"", this, ""BuyLotteryTicketCommand"");
        }

        private int NextRoll(int min, int max)
        {
            return UnityEngine.Random.Range(min, max + 1);
        }

        private void LotteryCommand(BasePlayer player, string command, string[] args)
        {
            LoadConfig();
            Puts($""{player.displayName} displayed the Lottery info."");
            SendReply(player,
                ""[Lottery System]\n"" +
                ""Creator: Krythic\n"" +
                ""v1.0.0\n"" +
                ""Current Jackpot: \n"" +
                ""  "" + config.jackpot + "" scrap \n"" +
                ""Type /buyTicket to buy a lottery ticket for 100 scrap.""
            );
        }

        private void BuyLotteryTicketCommand(BasePlayer player, string command, string[] args)
        {
			LoadConfig();
            if (HasEnoughScrap(player, _ticketCost))
            {
                Puts($""{player.displayName} purchased a lottery ticket..."");
                bool lotteryResult = NextRoll(1, _maximumOdds) == 1;
                if (lotteryResult)
                {
                    // The Player won the lottery
                    PrintToChat(""[Lottery] "" + $""{player.displayName} purchased a lottery ticket..."");
					PrintToChat(""[Lottery] "" + $""{player.displayName} won a jackpot of "" + config.jackpot + "" Scrap!"");
                    Puts($""{player.displayName} won a jackpot of "" + config.jackpot + "" Scrap!"");
                    GiveScrap(player, config.jackpot);
                    config.jackpot = _defaultJackpot; // Reset the jackpot after giving the player their winnings
                    SaveConfig();
                }
                else
                {
					// The Player did not win the lottery
					TakeScrap(player, _ticketCost);
                    PrintToChat(""[Lottery] "" + $""{player.displayName} purchased a lottery ticket..."");
					PrintToChat(""[Lottery] "" + $""{player.displayName} did not win."");
                    Puts($""{player.displayName} did not win the lottery."");
                    config.jackpot += _ticketCost;
					PrintToChat(""[Lottery] The current jackpot is now: "" + config.jackpot + "" Scrap."");
                    SaveConfig();
                }
            }
            else
            {
                SendReply(player, ""[Lottery System] You do not have enough scrap to buy a lottery ticket."");
            }
        }

        private bool HasEnoughScrap(BasePlayer player, int amount)
        {
            int scrapAmount = player.inventory.GetAmount(_scrapGameItemID);
            return scrapAmount >= amount;
        }

        private void TakeScrap(BasePlayer player, int amount)
        {
            player.inventory.Take(null, _scrapGameItemID, amount);
        }

        private void GiveScrap(BasePlayer player, int amount)
        {
            player.inventory.GiveItem(ItemManager.CreateByItemID(_scrapGameItemID, amount));
        }

        #region Config

        private ConfigData config = new ConfigData();

        private class ConfigData
        {
            [JsonProperty(PropertyName = ""Jackpot"")]
            public int jackpot = 0;
        }

        protected override void LoadConfig()
        {
            base.LoadConfig();

            try
            {
                config = Config.ReadObject<ConfigData>();

                if (config == null) LoadDefaultConfig();
            }
            catch
            {
                PrintError(""Configuration file is corrupt, check your config file at https://jsonlint.com/!"");
                LoadDefaultConfig();
                return;
            }

            SaveConfig();
        }

        protected override void LoadDefaultConfig() => config = new ConfigData();

        protected override void SaveConfig() => Config.WriteObject(config);

        #endregion
    }
}"
XEKeBgjN,Untitled,35657,C++,Saturday 15th of June 2024 10:02:04 PM CDT,"#include <iostream>
#include <vector>
#include <fstream>
#include <Windows.h>




int main()
{
    // –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é –Ω–∞ –≤–≤–æ–¥ –∏ –Ω–∞ –≤—ã–≤–æ–¥ (–æ—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –∏–∑-–∑–∞ —ç—Ç–æ–≥–æ)
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    srand(time(NULL));
    setlocale(LC_ALL, ""ru"");
    std::ofstream fout;
    fout.open(""dictionary.txt"");

    std::vector<std::string> dictionary;

    if (!fout.is_open())
    {
        std::cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << std::endl;
    }
    else
    {
        fout << ""–ª–µ—Ç–æ "";
        fout << ""—Ä–∞–±–æ—Ç–∞ "";
        fout << ""–∑–≤–µ–∑–¥–∞ "";
        fout.close();
    }


    std::ifstream fin;

    std::string str;

    fin.open(""dictionary.txt"");

    if (!fin.is_open())
    {
        std::cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << std::endl;
    }
    else
    {
        fin >> str;

        // –∑–¥–µ—Å—å –ª—É—á—à–µ —Å–¥–µ–ª–∞—Ç—å —Ü–∏–∫–ª–æ–º —á–µ–º —Ç—Ä–∏ —Ä–∞–∑–∞ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å
        dictionary.push_back(str);
        fin >> str;
        dictionary.push_back(str);
        fin >> str;
        dictionary.push_back(str);
        fin.close();
    }




    // –∑–¥–µ—Å—å –≤ –≤–µ–∫—Ç–æ—Ä–µ —Ç—Ä–∏ —ç–ª–µ–º–µ–Ω—Ç–∞, –∏—Ö –∏–Ω–¥–µ–∫—Å—ã 0, 1, 2 –∞ –±–µ—Ä–µ—Ç—Å—è –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ 4, —ç—Ç–æ 0, 1, 2, 3
    std::string word = dictionary[rand() % (dictionary.size() + 1)]; 


    std::string word_shown(word);

    for (int i = 0; i < word.size(); i++)
    {
        word_shown[i] = '*';
    }

    int endgame = 6;

    char letter;



    int mistake = 0;

    while (endgame > mistake)
    {
        mistake++;
        std::cout << word_shown << std::endl;
        std::cin >> letter;
        for (int i = 0; i < word.size(); i++)
        {

            if (word_shown[i] == '*')
            {
                if (word[i] == letter)
                {
                    word_shown[i] = letter;
                    // –∑–¥–µ—Å—å –Ω–µ —Å–æ–≤—Å–µ–º –≤–µ—Ä–Ω–æ, –µ—Å–ª–∏ –≤ —Å–ª–æ–≤–µ –Ω–∞–ø—Ä–∏–º–µ—Ä –¥–≤–µ –±—É–∫–≤—ã 'a' mistake —É–º–µ–Ω—å—à–∏—Ç—Å—è –¥–≤–∞–∂–¥—ã, mistake –ª—É—á—à–µ –º–µ–Ω—è—Ç—å—Å—è –≤ —Ü–∏–∫–ª–µ while - —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –µ—Å–ª–∏ —Ç–∞–∫–æ–π –±—É–∫–≤—ã –Ω–µ—Ç –∏ –Ω–µ –º–µ–Ω—è—Ç—å—Å—è –µ—Å–ª–∏ –±—É–∫–≤–∞ –µ—Å—Ç—å
                    mistake--;
                }
            }

        }

    }


}"
WQvQzpdu,Untitled,35657,C++,Saturday 15th of June 2024 09:30:24 PM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>

using namespace std;

class String {

public:

	String() : size_(0), capacity_(15), str_(new char[capacity_]) {}

	explicit String(const int string_capacity) : size_(0), capacity_(string_capacity), str_(new char[capacity_]) {}

	String(const char* new_string) : size_(strlen(new_string)), capacity_(size_ + 1), str_(new char[capacity_]) {
		strcpy(str_, new_string);}

	String(const String& other) : size_(other.size_), capacity_(other.capacity_), str_(new char[capacity_]) {
		strcpy(str_, other.str_);}

	String& operator=(const String& other) {
		if (&other != this) {
			size_ = other.size_;
			capacity_ = other.capacity_;
			delete[] str_;
			str_ = new char[capacity_];
			strcpy(str_, other.str_);
		}
		return *this;
	}

	void set_string(const char* new_string) {
		int new_space = strlen(new_string) + 1;
		if (capacity_ < new_space) {
			delete[] str_;
			capacity_ = new_space;
			str_ = new char[capacity_];
		}
		strcpy(str_, new_string);
		size_ = capacity_ - 1;
	}

	const char* get_string() {
		return str_;
	}

	void set_char(const int index, const char ch) {
		if (index < 0 || index >= size_) {
			cout << ""–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–Ω–¥–µ–∫—Å"" << endl;
			return;
		}
		str_[index] = ch;
	}

	char get_char(const int index) const {
		if (index < 0 || index >= size_) {
			cout << ""–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–Ω–¥–µ–∫—Å"" << endl;
		}
		return str_[index];
	}

	int size() const {
		return size_;
	}

	int capacity() const {
		return capacity_;
	}

	~String() {
		delete[] str_;
	}


private:
	int size_;
	int capacity_;
	char* str_;
};


int main() {
	setlocale(LC_ALL, ""ru"");

	String str1;

	String str2(30);

	String str3(""–ü—Ä–∏–≤–µ—Ç"");

	cout << str3.get_string() << endl;

	str3.set_string(""–ù–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞"");

	cout << str3.get_string() << endl;

	str1.set_string(""–ï—â–µ –æ–¥–Ω–∞ –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞"");

	cout << str1.get_string() << endl;

	String str4(str3);

	cout << str4.get_string() << endl;
	
	str4 = str1;

	cout << str1.get_string() << endl;

	cout << str4.get_string() << endl;

}
"
Z5jVmyXL,kua help,kobe23xx,JavaScript,Saturday 15th of June 2024 08:59:17 PM CDT,"
Support: https://discord.gg/kuabot, Prefix: .
Command Syntax: () = required argument, [] = optional argument

Configuration



guildedit name  - Modify the guild name.
guildedit banner - Update the server banner.
guildedit permissions - Adjust guild permissions.
guildedit icon  -  Change the guild icon.

modlogs

modlog enable - Activate modlogs in a specific channel.
modlog disable  - Deactivate modlogs in the designated channel.
modlog status - Check the current status of modlogs.
modlog clear -  Clear the modlogs.
modlog setup - Set up modlogs in a specific channel.

autorole

autorole enable -  Enable autorole for new members with the <role> role.
autorole disable - Disable autorole for new members.
autorole status - Check the current status of autorole settings.
autorole list - List the roles configured for autorole.
"
DdQQDTFc,Vlogger,Tc14,Python,Saturday 15th of June 2024 08:11:50 PM CDT,"from datetime import date, timedelta

DAYS_IN_YEAR = 365
DAYS_IN_CYCLE = DAYS_IN_YEAR * 4 + 1
LEAP_DAY = 59 # Feb 29th
CYCLE_START = date(2024, 1, 1)

def valid(interval, startDay):

    currentDay = startDay
    VloggedDay = [False] * DAYS_IN_YEAR
    VloggedLeapDay = False

    for _ in range(DAYS_IN_YEAR + 1):
        if currentDay < LEAP_DAY:
            VloggedDay[currentDay % DAYS_IN_YEAR] = True
        elif currentDay > LEAP_DAY:
            VloggedDay[(currentDay - 1) % DAYS_IN_YEAR] = True
        else:
            VloggedLeapDay = True

        currentDay += interval
        currentDay %= DAYS_IN_CYCLE

    return all(VloggedDay) and VloggedLeapDay

for interval in range(2, 45 + 1):
    for startDay in range(DAYS_IN_CYCLE):
        if valid(interval, startDay):
            print(f""{interval:>2}"", CYCLE_START + timedelta(days=startDay))

# Output:
#
#  2 2024-02-29
#  2 2026-03-01
#  3 2024-02-29
#  3 2025-03-01
#  4 2024-02-29
#  4 2024-03-01
# 20 2024-02-29
# 20 2024-03-01
# 20 2024-03-02
# 20 2024-03-03
# 20 2024-03-04
# 20 2024-03-05
# 34 2025-03-01
# 34 2025-03-02
# 34 2025-03-03
# 34 2025-03-04
# 34 2025-03-05
# 34 2025-03-06
# 34 2025-03-07
# 34 2025-03-08
"
0S1CSzbL,DESKTOP_RECODER.pyw,Najeebsk,Python,Saturday 15th of June 2024 07:48:15 PM CDT,"import sys
import subprocess
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QLabel, QVBoxLayout, QWidget
from PyQt5.QtCore import QThread, pyqtSignal, pyqtSlot

class Recorder(QThread):
    changeStatus = pyqtSignal(str)

    def __init__(self, ffmpeg_path):
        super().__init__()
        self.recording = False
        self.process = None
        self.ffmpeg_path = ffmpeg_path

    def run(self):
        self.recording = True
        command = [
            self.ffmpeg_path,
            '-y',  # Overwrite output file if it exists
            '-f', 'gdigrab',
            '-framerate', '20',
            '-i', 'desktop',  # Capture the entire desktop
            '-c:v', 'libx264',
            '-preset', 'ultrafast',
            'output.mp4'
        ]
        
        try:
            self.process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
            self.changeStatus.emit(""Recording started..."")

            while self.recording:
                output = self.process.stderr.readline()
                if output == '' and self.process.poll() is not None:
                    break
                if output:
                    print(output.strip())

            if self.process.poll() is None:
                self.process.terminate()
                self.process.wait()
            self.changeStatus.emit(""Recording stopped and saved to output.mp4."")
        except Exception as e:
            self.changeStatus.emit(f""Error: {e}"")
            self.recording = False

    def stop_recording(self):
        self.recording = False
        if self.process and self.process.poll() is None:
            self.process.terminate()
            self.process.wait()

class App(QMainWindow):
    def __init__(self, ffmpeg_path):
        super().__init__()
        self.setWindowTitle(""Desktop Video Recorder"")
        self.setGeometry(100, 100, 400, 200)

        self.recorder = None
        self.ffmpeg_path = ffmpeg_path

        self.initUI()

    def initUI(self):
        self.status_label = QLabel(""Press Start to begin recording the desktop."", self)
        self.status_label.resize(400, 50)

        self.start_button = QPushButton(""Start Recording"", self)
        self.start_button.clicked.connect(self.start_recording)

        self.stop_button = QPushButton(""Stop Recording"", self)
        self.stop_button.clicked.connect(self.stop_recording)
        self.stop_button.setEnabled(False)

        layout = QVBoxLayout()
        layout.addWidget(self.status_label)
        layout.addWidget(self.start_button)
        layout.addWidget(self.stop_button)

        container = QWidget()
        container.setLayout(layout)
        self.setCentralWidget(container)

    def start_recording(self):
        self.recorder = Recorder(self.ffmpeg_path)
        self.recorder.changeStatus.connect(self.updateStatus)
        self.recorder.start()
        self.start_button.setEnabled(False)
        self.stop_button.setEnabled(True)

    def stop_recording(self):
        if self.recorder:
            self.recorder.stop_recording()
            self.recorder.wait()
            self.stop_button.setEnabled(False)
            self.start_button.setEnabled(True)

    @pyqtSlot(str)
    def updateStatus(self, message):
        self.status_label.setText(message)
        print(message)  # Print to console for debugging

if __name__ == '__main__':
    ffmpeg_path = r'C:\CMDER\APP\ffmpeg.exe'  # Update with your ffmpeg path
    app = QApplication(sys.argv)
    ex = App(ffmpeg_path)
    ex.show()
    sys.exit(app.exec_())
"
GdZRuDMj,HexCompiler,Lanzr,Lua,Saturday 15th of June 2024 07:43:07 PM CDT,"--[[
    * a  mineCraft HexCasting Mod Compiler, can compile the hCode in game and output to the focus
    * need mod Ôºö Ducky peripheral
    * author : Lanzr
]]
local path = arg[1]
if(path == nil) then
    print(""#param 1 : filePath"")
    return
end
if(fs.exists(path) == false) then
    print(""file ""..path.."" is not exist!"")
    return
end

local inf = io.open(path,""r"") -- the source_code filename
local codeStr = inf.read(inf,""*all"")
inf.close(inf)

local fPort = peripheral.find(""focal_port"")

local lastIndex = 0
local index = -1
local leftBrackIndex = nil

local hexlist = {} -- the final table use to output

local funcKey = nil
local funcMap = {}

function genRegex(str) return ""^[ ]*""..str..""[ ]*$"" end

local preMap = {
    [""include""] = genRegex(""@include[ ]+([%w_]+)""),
    [""func""] = genRegex(""@func[ ]+([%w_]+)""),
}
local hexMap = { -- add pattern table to this table
    [""me""] = {[""startDir""]=""EAST"",[""angles""]=""qaq""},
    [""{""] = {[""startDir""]=""WEST"",[""angles""]=""qqq""},
    [""}""] = {[""startDir""]=""EAST"",[""angles""]=""eee""},
    [""pos""] = {[""startDir""]=""EAST"",[""angles""]=""aa""},
    [""sight""] = {[""startDir""]=""EAST"",[""angles""]=""wa""},
    [""unpack""] = {[""startDir""]=""NORTH_WEST"",[""angles""]=""qwaeawq""},
    [""+""] = {[""startDir""]=""NORTH_EAST"",[""angles""]=""waaw""},
    [""-""] = {[""startDir""]=""NORTH_WEST"",[""angles""]=""wddw""},
    [""*""] = {[""startDir""]=""SOUTH_EAST"",[""angles""]=""waqaw""},
    [""dig""] = {[""startDir""]=""EAST"",[""angles""]=""qaqqqqq""},
    [""get_block""] = {[""startDir""]=""EAST"",[""angles""]=""wqaawdd""},
}

local NumMap = {
    [0] = {[""startDir""]=""SOUTH_EAST"",[""angles""]=""aqaa""},
    [""+1""] = (function () return ""w"" end),
    [""*2""] = (function () return ""a"" end)
}

local regMap = {
    [genRegex(""([{}>%*%+-=<])"")] = (function (cStr)
        table.insert(hexlist,hexMap[cStr])
    return true end),
    [genRegex(""rm[ ]+(%d+)"")] = (function (cStr)
        addRMPattern(cStr)
    return true end),
    [genRegex(""(-?[%d]+)"")] = (function (cStr)
        addNumPattern(tonumber(cStr))
    return true end),
    [genRegex(""([%a_]+[%w_]*)"")] = (function (cStr)
        local t = hexMap[cStr]
        if t == nil then
            return false
        end
        table.insert(hexlist,t)
    return true end),
    [genRegex(""([%a_]+[%w_]*)%(%)"")] = (function (cStr)
        parseStr(funcMap[cStr])
    return true end)
}

function addNumPattern(num)
    local numPattern = {}
    local opers = {}
    local size = 0
    local rem = num > 0 and num or -num
    local numStr = ""aqaa""
    numPattern[""startDir""] = ""SOUTH_EAST""
    repeat
        if rem % 2 == 0 then
            table.insert(opers, ""*2"")
            rem = rem / 2
        else
            table.insert(opers,""+1"")
            rem = rem -1
        end
        size = size +1
    until  rem < 1  
    for i = size, 1, -1 do
        numStr = numStr..NumMap[opers[i]]()
    end
    numPattern[""angles""] = numStr
    if num < 0 then
        table.insert(hexlist,NumMap[0])
        table.insert(hexlist,numPattern)
        table.insert(hexlist,hexMap[""-""])
    else 
        table.insert(hexlist,numPattern)
    end
end

function addRMPattern(rmPos)
    local rmPattern = {}
    local angleStr = """"
    local pos = tonumber(rmPos)
    rmPattern[""startDir""] = ""EAST""
    if (pos > 1) then
        for i=1,pos-1,1 do
            angleStr = angleStr..""w""
        end
        angleStr = angleStr..""ea""
    else
        angleStr = ""a""
    end
    rmPattern[""angles""] = angleStr
    table.insert(hexlist,rmPattern)
end
 
function parseStr(str)
    local lastIndex = 0
    local index = -1
    local cut = """"
    local lineIndex = 0
    while ( index ~= nil) do
        local syntaxFlag = true;
        lineIndex = lineIndex + 1
        index = string.find(str,""\n"", index + 1);
        if( index ~= nil) then
            cut = string.sub(str,lastIndex+1, index-1)
        else
            cut = string.sub(str,lastIndex+1, index);
        end
        -- comment check
        repeat
            lastIndex = index 
            local commentPos = string.find(cut,""#"")
            if commentPos ~= nil then
                cut = string.sub(cut, 1,commentPos-1)
            end
            -- preExp regMap
            -- include check
            if (string.match(cut,preMap[""include""])) then
                local cStr = string.match(cut,preMap[""include""])
                local inf = io.open(cStr,""r"") -- the source_code filename
                local subStr = inf.read(inf,""*all"")
                inf.close(inf)
                parseStr(subStr)
                break
            end
            -- func check
            if (string.match(cut,genRegex(""@func[ ]+([%w_]+)""))~= nil) then
                local cStr = string.match(cut,preMap[""func""])
                funcMap[cStr] = """"
                funcKey = cStr
                break
            elseif(string.match(cut,genRegex(""@end""))) then
                funcKey = nil
                break
            else
                if(funcKey ~= nil) then
                    funcMap[funcKey] = funcMap[funcKey]..cut..""\n""
                    break
                end
            end
            -- common regMap
            for key, cb in pairs(regMap) do
                if (string.match(cut,key)~= nil) then
                    local cStr = string.match(cut,key)
                    syntaxFlag = cb(cStr)
                    break
                end   
            end
        until true
        if syntaxFlag ~= true then
            print(""Line ""..lineIndex.."" : ""..cut.."" is illegal syntax"")
        end
    end

    -- out put final hexlist    
    if(fPort ~= nil) then
        fPort.writeIota(hexlist)
        return
    end
end

function mainloop()
    parseStr(codeStr)
 end
 mainloop()
 "
gvXTUxT2,MailSlurp - Inbox,J2897,Python,Saturday 15th of June 2024 07:41:37 PM CDT,"#!python3
import mailslurp_client
import os

""""""
This Python script is used to create a new inbox in the MailSlurp API. MailSlurp is a cloud-based email service that allows developers to send, receive, and manage emails programmatically.

Here's a breakdown of what the script does:

    1. It imports the `mailslurp_client` library, which is used to interact with the MailSlurp API.
    2. It imports the `os` library, which is used to access the `MAILSLURP_API_KEY` environment variable.
    3. It creates a `mailslurp_client.Configuration` object, which is used to set the API key for the MailSlurp API. The API key is retrieved from the `MAILSLURP_API_KEY` environment variable.
    4. It creates an instance of the `ApiClient` class, passing the `configuration` object as a parameter. This sets up the API client with the API key.
    5. It creates an instance of the `InboxControllerApi` class, which is used to manage inboxes in the MailSlurp API.
    6. It calls the `create_inbox` method on the `InboxControllerApi` object to create a new inbox.
    7. The script does not store the created inbox in a variable, so the new inbox is not accessible after the script finishes running.

This script can be used as a starting point for building more complex applications that interact with the MailSlurp API.
""""""

# Create a MailSlurp configuration
configuration = mailslurp_client.Configuration()
configuration.api_key['x-api-key'] = os.getenv(""MAILSLURP_API_KEY"")

with mailslurp_client.ApiClient(configuration) as api_client:
    # Create an inbox
    inbox_controller = mailslurp_client.InboxControllerApi(api_client)
    inbox = inbox_controller.create_inbox()
"
mZ9LF87v,üéÅG2A.com Free Gift Card Guide June 2024 NEWüéÅ,ssss50ws,GetText,Saturday 15th of June 2024 07:33:52 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here;
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
16 June 2024"
t5dYQ26S,MailSlurp - Receive,J2897,Python,Saturday 15th of June 2024 07:32:00 PM CDT,"#!python3
import mailslurp_client
import os

""""""
This script is designed to:

    1. Connect to the MailSlurp API using an API key stored in the `MAILSLURP_API_KEY` environment variable.
    2. Retrieve an inbox with a specific ID (`inbox_id`).
    3. Wait for a specified number of emails (`email_num`) to arrive in the inbox.
    4. Fetch the full email content for each email in the inbox.
    5. Print the subject and body of each email.

The script uses the `wait_for_email_count` method to wait for the specified number of emails to arrive in the inbox.

This method takes the following parameters:

    - `count`: The number of emails to wait for.
    - `inbox_id`: The ID of the inbox to monitor.
    - `timeout`: The time in milliseconds to wait for the emails to arrive.
    - `unread_only`: A boolean indicating whether to only consider unread emails.

If the script times out waiting for the emails to arrive, it prints a message indicating that there are not enough emails in the inbox for the specified `email_num`.

If any other error occurs, the script prints an error message with the exception details.
""""""

# Create a MailSlurp configuration
configuration = mailslurp_client.Configuration()
configuration.api_key['x-api-key'] = os.getenv(""MAILSLURP_API_KEY"")
inbox_id = ""XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX""
password = ""XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX""
email_num = 2   # Number of emails to fetch
wait = 1        # Timeout in minutes

try:
    with mailslurp_client.ApiClient(configuration) as api_client:
        inbox_controller = mailslurp_client.InboxControllerApi(api_client)
        inbox = inbox_controller.get_inbox(inbox_id)  # Replace with your inbox ID

        # Wait for multiple emails to arrive in the inbox
        wait_for_controller = mailslurp_client.WaitForControllerApi(api_client)
        emails = wait_for_controller.wait_for_email_count(
            count=email_num,
            inbox_id=inbox.id,
            timeout=wait*60*1000, # Milliseconds
            unread_only=False
        )

        # Create an instance of EmailControllerApi
        email_controller = mailslurp_client.EmailControllerApi(api_client)

        for email_preview in emails:
            # Fetch the full email using its ID
            email = email_controller.get_email(email_id=email_preview.id)
            print(email.subject)
            print(email.body)

except mailslurp_client.exceptions.ApiException as e:
    if e.status == 408:
        print(f""Request timed out: There are not enough emails in the inbox for 'email_num' set to {email_num}."")
    else:
        print(f""An error occurred: {e}"")
"
g6fTYr4L,# tk_ReLu_With_Matrix_Test.py,here2share,Python,Saturday 15th of June 2024 07:29:03 PM CDT,"# tk_ReLu_With_Matrix_Test.py ZZZ unable to make this ""learn""

import tkinter as tk
import random
import math
import string

ww = 1200
hh = 600

root = tk.Tk()
root.title(""tk ReLu With Matrix Test"")
root.geometry(f""{ww}x{hh}+10+10"")

scrollbar = tk.Scrollbar(root)
scrollbar.pack(side=tk.RIGHT, fill=tk.Y)

canvas = tk.Canvas(root, width=ww, height=hh, bg=""black"", yscrollcommand=scrollbar.set)
canvas.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)

scrollbar.config(command=canvas.yview)

def dot(a, b):
	return [[sum(x * y for x, y in zip(row, col)) for col in zip(*b)] for row in a]

def transpose(matrix):
	return list(zip(*matrix))

def leaky_relu(matrix):
	return [[max(0.01 * x, x) for x in row] for row in matrix]

def square_diff(matrix1, matrix2):
	return sum((x - y) ** 2 for row1, row2 in zip(matrix1, matrix2) for x, y in zip(row1, row2))

def create_random_matrix(rows, cols):
	return [[random.uniform(-1, 1) for _ in range(cols)] for _ in range(rows)]

def backpropagation(x, y):
	global grad_w2, grad_w1
	h = dot(x, w1)
	h_relu = leaky_relu(h)
	y_pred = dot(h_relu, w2)
	grad_y_pred = [[2 * (yp - yt) for yp, yt in zip(yp_row, yt_row)] for yp_row, yt_row in zip(y_pred, y)]
	grad_w2 = dot(transpose(h_relu), grad_y_pred)
	grad_h_relu = dot(grad_y_pred, transpose(w2))
	grad_h = [[ghr if h_val > 0 else 0.01 * ghr for ghr, h_val in zip(ghr_row, h_row)] for ghr_row, h_row in zip(grad_h_relu, h)]
	grad_w1 = dot(transpose(x), grad_h)

def compute_gain(x, y):
	global h_relu, h, y_pred, gain
	h = dot(x, w1)
	h_relu = leaky_relu(h)
	y_pred = dot(h_relu, w2)
	gain = square_diff(y_pred, y)
	gain_col.append(gain)

encode_factor = 1 / 62
encode_index = dict((s, ((i + 1) * encode_factor)) for (i, s) in enumerate(string.digits + string.ascii_letters))
def encode_input(data):
	encoded = []
	for char in data:
		encoded.append(encode_index[char])
	return encoded

def softmax(x):
	max_val = max(x)
	exps = [math.exp(val - max_val) for val in x]
	sum_exps = sum(exps)
	return [exp / sum_exps for exp in exps]

def euclidean_distance(v1, v2):
	return math.sqrt(sum((a - b) ** 2 for a, b in zip(v1, v2)))

def predict(data):
	encoded_data = encode_input(data)
	x = [encoded_data]
	h = dot(x, w1)
	h_relu = leaky_relu(h)
	y_pred = dot(h_relu, w2)[0]

	normalized_predictions = softmax(y_pred)

	min_distance = float('inf')
	nearest_category = None

	distances = []
	for category in range(1, 6):
		target_vector = all_target_weights[category]
		distance = euclidean_distance(normalized_predictions, target_vector)
		distances += [(100 - distance, category)]
		if distance < min_distance:
			min_distance = distance
			nearest_category = category

	prediction = nearest_category

	confidence = max(normalized_predictions)

	return prediction, confidence, distances

N, D_in, H, D_out = 10, 25, 12, 5  # Adjusted D_out for 5 categories
w1 = create_random_matrix(D_in, H)
w2 = create_random_matrix(H, D_out)
learning_rate = 0.002
gain_col = []
w1_changes = [[0 for _ in range(H)] for _ in range(D_in)]
w2_changes = [[0 for _ in range(D_out)] for _ in range(H)]

j = 255 / 400
a = [int(i * j) for i in range(400)]
b = [0 for _ in range(300)]
red = a[::-1] + b + b
green = b + b + a
blue = b + a + b
get_color = [f'#{r:02X}{g:02X}{b:02X}' for r, g, b in zip(red, green, blue)]

def get_color_from_weight(weight, target_weight):
	diff = abs(weight - target_weight)
	diff = 1 - max(0, min(1, diff))
	return get_color[int(diff * 999)]

# Training Data
def shuffle_mixed_case(s):
	mixed = [c.lower() if random.random() < 0.5 else c.upper() for c in s]
	random.shuffle(mixed)
	return ''.join(mixed)

def category_1():
	digits = ''.join(random.choices(string.digits, k=7))
	combined = digits + 'yellow'
	combined += ''.join(random.choices(string.ascii_letters, k=(25 - len(combined))))
	return shuffle_mixed_case(combined)

def category_2():
	digits = ''.join(random.choices(string.digits, k=9))
	combined = digits + 'helloworld'
	combined += ''.join(random.choices(string.ascii_letters, k=(25 - len(combined))))
	return shuffle_mixed_case(combined)

def category_3():
	combined = 'python3407'
	combined += ''.join(random.choices(string.ascii_letters + string.digits, k=(25 - len(combined))))
	return shuffle_mixed_case(combined)

def category_4():
	combined = 'thankyou12345'
	combined += ''.join(random.choices(string.ascii_letters + string.digits, k=(25 - len(combined))))
	return shuffle_mixed_case(combined)

def category_5():
	s = []
	for i in range(12):
		s.append(random.choice(string.ascii_letters))
		s.append(random.choice(string.digits))
	s.append(random.choice(string.ascii_letters))
	return ''.join(s)

def generate_training_data(category=None):
	if category not in (1, 2, 3, 4, 5):
		category = random.randint(1, 5)
	if category == 1:
		return category_1()
	elif category == 2:
		return category_2()
	elif category == 3:
		return category_3()
	elif category == 4:
		return category_4()
	elif category == 5:
		return category_5()

def update_canvas(i):
	cell_width = 20
	cell_height = 20
	num_cols = 25

	encoded_data = encode_input(data)

	target_weights = [all_target_weights[correct_category][N] for N in range(25)]

	for j, char in enumerate(data):
		color_value = get_color_from_weight(encoded_data[j], target_weights[j])
		x0 = j * cell_width
		y0 = i * cell_height
		x1 = x0 + cell_width
		y1 = y0 + cell_height
		canvas.create_rectangle(x0, y0, x1, y1, fill=color_value, outline=""gray"")
		canvas.create_text(x0 + 10, y0 + 10, text=char, fill=""white"")

	is_correct = prediction == correct_category
	result_text = f""Y [{correct_category}] "" if is_correct else f""N [{correct_category}] ""
	progress.append(100 if is_correct else 0)
	progress.pop(0)
	gain = sum(progress) / 500
	gain_text = f""{gain:.2f}% gain""
	canvas.create_text(num_cols * cell_width + 30, i * cell_height + 10, text=result_text, fill=""white"", anchor=tk.W)
	canvas.create_text(num_cols * cell_width + 80, i * cell_height + 10, text=gain_text, fill=""white"", anchor=tk.W)
	k = 2
	for distance, idx in distances:
		canvas.create_text(num_cols * cell_width + (95 * k), i * cell_height + 10, text=f""{idx}: {distance:.5f}%"", fill=""white"", anchor=tk.W)
		k += 1

	canvas.config(scrollregion=(0, 0, ww, (i + 1) * cell_height + cell_height))

	root.update()

number_of_data = 5000
categories = [1, 2, 3, 4, 5] * (number_of_data // 5)
random.shuffle(categories)

training_data = [(generate_training_data(category), category) for category in categories]
training_inputs = [encode_input(data[0]) for data in training_data]
training_labels = [[1 if i + 1 == data[1] else 0 for i in range(D_out)] for data in training_data]
progress = [0 for i in range(500)]

all_target_weights = {
	1: [0.6 for _ in range(25)],
	2: [0.3 for _ in range(25)],
	3: [0.00 for _ in range(25)],
	4: [-0.3 for _ in range(25)],
	5: [-0.6 for _ in range(25)]
}

batch_size = 30
num_batches = len(categories) // batch_size

# Training loop
line = 0
for epoch in range(100):  # Number of epochs
	for batch in range(num_batches):
		x_batch = training_inputs[batch * batch_size:(batch + 1) * batch_size]
		y_batch = training_labels[batch * batch_size:(batch + 1) * batch_size]

		compute_gain(x_batch, y_batch)
		backpropagation(x_batch, y_batch)

		for i in range(batch_size):
			data, correct_category = training_data[batch * batch_size + i]
			prediction, confidence, distances = predict(data)
			update_canvas(line)
			line += 1
			for n in range(25):
				all_target_weights[correct_category][n] += learning_rate * (training_labels[batch * batch_size + i][correct_category - 1] - sum(w1[n]))

		for i in range(D_in):
			for j in range(H):
				w1[i][j] -= learning_rate * grad_w1[i][j]
				w1_changes[i][j] += learning_rate * grad_w1[i][j]
		for i in range(H):
			for j in range(D_out):
				w2[i][j] -= learning_rate * grad_w2[i][j]
				w2_changes[i][j] += learning_rate * grad_w2[i][j]

root.mainloop()
"
KWQY91KR,2024-06-15_stats.json,rdp_snitch,JSON,Saturday 15th of June 2024 07:18:20 PM CDT,"{
  ""ip"": {
    ""104.248.154.46"": 39,
    ""120.89.61.252"": 6,
    ""174.138.30.111"": 3,
    ""91.238.181.71"": 3,
    ""164.92.104.215"": 6,
    ""96.51.53.164"": 6,
    ""198.235.24.50"": 9,
    ""45.227.254.55"": 6,
    ""194.165.16.72"": 6,
    ""64.124.50.139"": 6,
    ""187.137.198.132"": 3,
    ""45.227.254.26"": 6,
    ""206.168.34.37"": 3,
    ""80.66.66.250"": 15,
    ""185.170.144.3"": 6,
    ""118.122.144.137"": 6,
    ""104.152.52.231"": 3,
    ""198.235.24.253"": 9,
    ""139.180.199.157"": 3,
    ""167.179.37.82"": 3,
    ""80.94.95.114"": 6,
    ""118.193.59.41"": 3,
    ""125.22.110.189"": 6,
    ""103.121.74.4"": 3,
    ""58.218.199.219"": 15,
    ""147.185.132.171"": 9,
    ""194.165.16.37"": 6,
    ""194.165.16.10"": 6,
    ""196.92.1.191"": 84,
    ""12.226.206.131"": 210,
    ""95.92.172.88"": 150,
    ""51.68.199.76"": 36,
    ""80.15.116.13"": 30,
    ""24.75.245.107"": 15,
    ""72.167.34.126"": 30,
    ""139.99.194.253"": 39,
    ""196.206.164.27"": 105,
    ""136.24.37.18"": 252,
    ""80.153.67.94"": 48,
    ""45.5.94.6"": 54,
    ""103.130.212.203"": 51,
    ""70.39.90.254"": 108,
    ""12.193.127.18"": 111,
    ""38.170.237.45"": 102,
    ""15.235.187.94"": 24,
    ""206.72.195.26"": 39,
    ""186.67.171.6"": 66,
    ""89.165.2.25"": 93,
    ""13.68.227.67"": 72,
    ""196.92.1.190"": 114,
    ""107.172.73.131"": 48,
    ""98.142.244.243"": 45,
    ""123.58.207.87"": 24,
    ""23.94.167.52"": 36,
    ""104.128.189.74"": 36,
    ""104.218.165.55"": 15,
    ""149.202.172.186"": 33,
    ""192.210.149.190"": 57,
    ""193.112.251.135"": 21,
    ""24.229.251.123"": 21,
    ""95.136.11.137"": 48,
    ""43.132.186.70"": 27,
    ""104.200.32.169"": 39,
    ""201.212.3.108"": 42,
    ""80.124.119.50"": 51,
    ""103.195.31.188"": 48,
    ""93.159.194.33"": 51,
    ""202.134.162.131"": 15,
    ""54.37.51.226"": 36,
    ""52.157.201.49"": 12,
    ""104.218.165.34"": 9,
    ""51.38.161.248"": 45,
    ""165.154.174.124"": 9,
    ""80.14.17.35"": 24,
    ""57.128.195.167"": 18,
    ""154.85.49.240"": 72,
    ""43.153.99.114"": 18,
    ""200.37.0.238"": 6,
    ""184.70.84.114"": 18,
    ""193.112.134.231"": 6,
    ""38.170.237.41"": 18,
    ""197.216.3.130"": 3,
    ""80.13.106.84"": 24,
    ""61.81.115.70"": 3,
    ""158.51.14.114"": 6,
    ""194.165.16.73"": 6,
    ""45.144.226.68"": 6,
    ""103.145.58.228"": 6,
    ""187.157.89.218"": 3,
    ""223.166.31.100"": 3,
    ""205.210.31.162"": 9
  },
  ""asn"": {
    ""AS14061"": 48,
    ""AS9658"": 6,
    ""AS49434"": 3,
    ""AS6327"": 24,
    ""AS396982"": 36,
    ""AS267784"": 12,
    ""AS48721"": 24,
    ""AS6461"": 6,
    ""AS8151"": 6,
    ""AS398324"": 3,
    ""AS51765"": 15,
    ""AS197414"": 6,
    ""AS4134"": 21,
    ""AS14987"": 3,
    ""AS20473"": 3,
    ""AS9902"": 3,
    ""AS204428"": 6,
    ""AS135377"": 60,
    ""AS9498"": 6,
    ""AS134886"": 3,
    ""AS6713"": 198,
    ""AS7018"": 321,
    ""AS2860"": 150,
    ""AS16276"": 231,
    ""AS3215"": 78,
    ""AS13395"": 15,
    ""AS398101"": 30,
    ""AS36903"": 105,
    ""AS19165"": 252,
    ""AS3320"": 48,
    ""AS28419"": 54,
    ""AS135953"": 51,
    ""AS46844"": 108,
    ""AS48635"": 120,
    ""AS19318"": 39,
    ""AS27651"": 66,
    ""AS39501"": 93,
    ""AS8075"": 84,
    ""AS36352"": 141,
    ""AS215415"": 45,
    ""AS20278"": 36,
    ""AS45090"": 27,
    ""AS3737"": 21,
    ""AS12353"": 48,
    ""AS132203"": 45,
    ""AS33548"": 39,
    ""AS7303"": 42,
    ""AS15557"": 51,
    ""AS134612"": 48,
    ""AS196838"": 51,
    ""AS132296"": 15,
    ""AS55967"": 72,
    ""AS6147"": 6,
    ""AS11259"": 3,
    ""AS4766"": 3,
    ""AS398465"": 6,
    ""AS213035"": 6,
    ""AS997"": 6,
    ""AS17621"": 3
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 48,
    ""Eastern Telecommunications Philippines, Inc."": 6,
    ""Datacenter location PAR1 France"": 3,
    ""Shaw Communications Inc."": 24,
    ""Google LLC"": 36,
    ""Flyservers S.A."": 36,
    ""Zayo Bandwidth"": 6,
    ""Uninet S.A. de C.V."": 6,
    ""Censys, Inc."": 3,
    ""Oy Crea Nova Hosting Solution Ltd"": 15,
    ""Xhost Internet Solutions LP"": 6,
    ""Chinanet"": 21,
    ""Rethem Hosting LLC"": 3,
    ""The Constant Company, LLC"": 3,
    ""NeocomISP Limited"": 3,
    ""SS-Net"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 36,
    ""Bharti Airtel"": 6,
    ""Super Sonic Broadband Pvt. Ltd"": 3,
    ""Itissalat Al-MAGHRIB"": 198,
    ""AT&T Services, Inc."": 321,
    ""NOS COMUNICACOES S.A"": 150,
    ""OVH SAS"": 231,
    ""France Telecom Orange"": 30,
    ""Smart City Networks"": 15,
    ""GoDaddy.com, LLC"": 30,
    ""IP ADSL MarocTelecom"": 105,
    ""Webpass Inc."": 252,
    ""Deutsche Telekom AG"": 48,
    ""Se\u00f1al Interactiva, S.A De C.V"": 54,
    ""P815"": 51,
    ""Sharktech"": 108,
    ""Cldin B.V."": 120,
    ""Interserver"": 39,
    ""Entel Chile S.A."": 66,
    ""NGS-DC"": 93,
    ""Microsoft Corporation"": 84,
    ""HostPapa"": 141,
    ""Velcom"": 45,
    ""Nexeon Technologies, Inc."": 36,
    ""Zenlayer Inc"": 24,
    ""Shenzhen Tencent Computer Systems Company Limited"": 45,
    ""PenTeleData Inc."": 21,
    ""Vodafone Portugal"": 48,
    ""Aceville Pte.ltd"": 27,
    ""Unwired Broadband, LLC"": 39,
    ""Telecom Argentina S.A."": 42,
    ""Societe Francaise Du Radiotelephone - SFR SA"": 51,
    ""PT Atria Teknologi Indonesia"": 48,
    ""TRING"": 51,
    ""Seven Star Digital Network Private Limited"": 15,
    ""France Telecom"": 48,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 72,
    ""Telefonica del Peru S.A.A."": 6,
    ""Angola Telecom"": 3,
    ""Korea Telecom"": 3,
    ""Rackdog, LLC"": 6,
    ""Des Capital B.V."": 6,
    ""23 Tai Seng Drive Singapore"": 6,
    ""China Unicom Shanghai Province Network"": 3
  },
  ""org"": {
    ""DigitalOcean, LLC"": 48,
    ""Eastern Telecommunications Philippines, Inc"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 3,
    ""Shaw Communications Inc"": 24,
    ""Palo Alto Networks, Inc"": 36,
    ""UAB Host Baltic"": 12,
    ""Flyservers S.A"": 24,
    ""Microsoft Corporation"": 6,
    ""UNINET"": 3,
    ""Censys Inc"": 3,
    ""Xhost Internet Solutions"": 15,
    ""Xhostis"": 6,
    ""Chinanet SC"": 6,
    ""Rethem Hosting LLC"": 3,
    ""TYO Vultr"": 3,
    ""NeocomISP Limited"": 3,
    ""Unmanaged LTD"": 6,
    ""Ucloud Information Technology (hk) Limited"": 27,
    ""Bharti Airtel Ltd"": 6,
    ""Super Sonic Broadband Pvt Ltd"": 3,
    ""Chinanet JS"": 15,
    ""Office National des Postes et Telecommunications ONPT (Maroc Telecom) / IAM"": 198,
    ""ATT SERVICES INC - PEGACM-MD"": 210,
    ""NOS Comunicacoes S.A."": 150,
    ""OVH Ltd"": 36,
    ""Unknown"": 528,
    ""SAFE Credit Union Convention Center"": 15,
    ""GoDaddy.com, LLC"": 30,
    ""OVH Australia PTY LTD"": 39,
    ""Webpass Inc"": 252,
    ""Deutsche Telekom AG"": 48,
    ""Se\u00f1al Interactiva, S.A De C.V"": 54,
    ""Sharktech"": 108,
    ""ATT SERVICES INC- PEG"": 111,
    ""ServerMania Inc"": 120,
    ""OVH Singapore PTE. LTD"": 24,
    ""hostingsource.com"": 39,
    ""Entel Chile S.A"": 66,
    ""Neda Gostar Saba Data Transfer Company"": 93,
    ""Microsoft Azure Cloud (eastus)"": 72,
    ""ColoCrossing"": 105,
    ""Ipxo LLC"": 45,
    ""365 Group LLC"": 36,
    ""UCLOUD"": 24,
    ""OVH"": 33,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 27,
    ""PenTeleData House Account"": 21,
    ""Vodafone Portugal - Communicacoes Pessoais S.A."": 48,
    ""Unwired Broadband"": 39,
    ""Telecom Argentina S.A"": 42,
    ""7 STAR Dot Com Pvt. Ltd"": 15,
    ""chen zexin"": 36,
    ""Microsoft Azure Cloud (westeurope)"": 12,
    ""Kota Komputer Wendy"": 45,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 9,
    ""OVH Sp. z o. o"": 18,
    ""Tencent Cloud Computing"": 18,
    ""UniRed Red Interna"": 6,
    ""AngolaTelecomPublic"": 3,
    ""Kornet"": 3,
    ""AB E-Commerce, LLC"": 6,
    ""Serverion BV"": 6,
    ""Uninet S.A. de C.V."": 3
  },
  ""regionName"": {
    ""Central Singapore"": 63,
    ""Metro Manila"": 6,
    ""South West"": 3,
    ""\u00cele-de-France"": 132,
    ""California"": 705,
    ""Alberta"": 24,
    ""Vilnius"": 12,
    ""Kaunas"": 24,
    ""Washington"": 6,
    ""Sonora"": 3,
    ""Illinois"": 12,
    ""Uusimaa"": 15,
    ""North Holland"": 189,
    ""Sichuan"": 6,
    ""Tokyo"": 3,
    ""Phnom Penh"": 3,
    ""Sofia-Capital"": 6,
    ""Hesse"": 3,
    ""West Bengal"": 6,
    ""Maharashtra"": 18,
    ""Jiangsu"": 15,
    ""Casablanca-Settat"": 198,
    ""Lisbon"": 198,
    ""England"": 93,
    ""Arizona"": 30,
    ""New South Wales"": 39,
    ""Souss-Massa"": 105,
    ""Saxony"": 48,
    ""Coahuila"": 54,
    ""Hanoi"": 51,
    ""Colorado"": 108,
    ""Texas"": 111,
    ""New Jersey"": 39,
    ""Santiago Metropolitan"": 66,
    ""Tehran"": 93,
    ""Virginia"": 72,
    ""New York"": 84,
    ""Florida"": 36,
    ""Hauts-de-France"": 114,
    ""Guangdong"": 27,
    ""Pennsylvania"": 21,
    ""Central and Western District"": 27,
    ""Buenos Aires F.D."": 42,
    ""Jakarta"": 48,
    ""Durr\u00ebs County"": 51,
    ""Mazovia"": 18,
    ""Lima Province"": 6,
    ""Luanda Province"": 3,
    ""Daejeon"": 3,
    ""North West"": 6,
    ""Mexico City"": 3,
    ""Shanghai"": 3
  },
  ""country"": {
    ""Singapore"": 72,
    ""Philippines"": 6,
    ""France"": 246,
    ""United States"": 1224,
    ""Canada"": 24,
    ""Lithuania"": 36,
    ""Mexico"": 60,
    ""Finland"": 15,
    ""The Netherlands"": 57,
    ""China"": 51,
    ""Japan"": 3,
    ""Cambodia"": 3,
    ""Bulgaria"": 6,
    ""Germany"": 51,
    ""India"": 24,
    ""Morocco"": 303,
    ""Portugal"": 198,
    ""United Kingdom"": 93,
    ""Australia"": 39,
    ""Vietnam"": 51,
    ""Netherlands"": 132,
    ""Chile"": 66,
    ""Iran"": 93,
    ""Hong Kong"": 27,
    ""Argentina"": 42,
    ""Indonesia"": 48,
    ""Albania"": 51,
    ""Poland"": 18,
    ""Peru"": 6,
    ""Angola"": 3,
    ""South Korea"": 3
  },
  ""account"": {
    ""hello"": 93,
    ""Administr"": 24,
    ""kfcuIpuoI"": 3,
    ""xbBkoP"": 3,
    ""edgtmg"": 3,
    ""Test"": 63,
    ""(empty)"": 12,
    ""nmap"": 3,
    ""GyfkouYIb"": 3,
    ""kcvtwq"": 3,
    ""eReGkf"": 3,
    ""Administrator"": 3,
    ""deVJPJfJH"": 3,
    ""TYxANF"": 3,
    ""kumvDn"": 3,
    ""142.93.8.59"": 2817,
    ""QMhPYyoAl"": 3,
    ""Rpenwq"": 3,
    ""IzXthL"": 3
  },
  ""keyboard"": {
    ""Unknown"": 3051
  },
  ""client_build"": {
    ""Unknown"": 3051
  },
  ""client_name"": {
    ""Unknown"": 3051
  },
  ""ip_type"": {
    ""hosting"": 795,
    ""Unknown"": 1938,
    ""hosting & proxy"": 270,
    ""proxy"": 12,
    ""mobile & proxy"": 36
  }
}"
UmtZvSFh,2024-06-15_stats.json,rdp_snitch,JSON,Saturday 15th of June 2024 07:16:07 PM CDT,"{
  ""ip"": {
    ""104.248.154.46"": 26,
    ""120.89.61.252"": 4,
    ""174.138.30.111"": 2,
    ""91.238.181.71"": 2,
    ""164.92.104.215"": 4,
    ""96.51.53.164"": 4,
    ""198.235.24.50"": 6,
    ""45.227.254.55"": 4,
    ""194.165.16.72"": 4,
    ""64.124.50.139"": 4,
    ""187.137.198.132"": 2,
    ""45.227.254.26"": 4,
    ""206.168.34.37"": 2,
    ""80.66.66.250"": 10,
    ""185.170.144.3"": 4,
    ""118.122.144.137"": 4,
    ""104.152.52.231"": 2,
    ""198.235.24.253"": 6,
    ""139.180.199.157"": 2,
    ""167.179.37.82"": 2,
    ""80.94.95.114"": 4,
    ""118.193.59.41"": 2,
    ""125.22.110.189"": 4,
    ""103.121.74.4"": 2,
    ""58.218.199.219"": 10,
    ""147.185.132.171"": 6,
    ""194.165.16.37"": 4,
    ""194.165.16.10"": 4,
    ""196.92.1.191"": 56,
    ""12.226.206.131"": 140,
    ""95.92.172.88"": 100,
    ""51.68.199.76"": 24,
    ""80.15.116.13"": 20,
    ""24.75.245.107"": 10,
    ""72.167.34.126"": 20,
    ""139.99.194.253"": 26,
    ""196.206.164.27"": 70,
    ""136.24.37.18"": 168,
    ""80.153.67.94"": 32,
    ""45.5.94.6"": 36,
    ""103.130.212.203"": 34,
    ""70.39.90.254"": 72,
    ""12.193.127.18"": 74,
    ""38.170.237.45"": 68,
    ""15.235.187.94"": 16,
    ""206.72.195.26"": 26,
    ""186.67.171.6"": 44,
    ""89.165.2.25"": 62,
    ""13.68.227.67"": 48,
    ""196.92.1.190"": 76,
    ""107.172.73.131"": 32,
    ""98.142.244.243"": 30,
    ""123.58.207.87"": 16,
    ""23.94.167.52"": 24,
    ""104.128.189.74"": 24,
    ""104.218.165.55"": 10,
    ""149.202.172.186"": 22,
    ""192.210.149.190"": 38,
    ""193.112.251.135"": 14,
    ""24.229.251.123"": 14,
    ""95.136.11.137"": 32,
    ""43.132.186.70"": 18,
    ""104.200.32.169"": 26,
    ""201.212.3.108"": 28,
    ""80.124.119.50"": 34,
    ""103.195.31.188"": 32,
    ""93.159.194.33"": 34,
    ""202.134.162.131"": 10,
    ""54.37.51.226"": 24,
    ""52.157.201.49"": 8,
    ""104.218.165.34"": 6,
    ""51.38.161.248"": 30,
    ""165.154.174.124"": 6,
    ""80.14.17.35"": 16,
    ""57.128.195.167"": 12,
    ""154.85.49.240"": 48,
    ""43.153.99.114"": 12,
    ""200.37.0.238"": 4,
    ""184.70.84.114"": 12,
    ""193.112.134.231"": 4,
    ""38.170.237.41"": 12,
    ""197.216.3.130"": 2,
    ""80.13.106.84"": 16,
    ""61.81.115.70"": 2,
    ""158.51.14.114"": 4,
    ""194.165.16.73"": 4,
    ""45.144.226.68"": 4,
    ""103.145.58.228"": 4,
    ""187.157.89.218"": 2,
    ""223.166.31.100"": 2,
    ""205.210.31.162"": 6
  },
  ""asn"": {
    ""AS14061"": 32,
    ""AS9658"": 4,
    ""AS49434"": 2,
    ""AS6327"": 16,
    ""AS396982"": 24,
    ""AS267784"": 8,
    ""AS48721"": 16,
    ""AS6461"": 4,
    ""AS8151"": 4,
    ""AS398324"": 2,
    ""AS51765"": 10,
    ""AS197414"": 4,
    ""AS4134"": 14,
    ""AS14987"": 2,
    ""AS20473"": 2,
    ""AS9902"": 2,
    ""AS204428"": 4,
    ""AS135377"": 40,
    ""AS9498"": 4,
    ""AS134886"": 2,
    ""AS6713"": 132,
    ""AS7018"": 214,
    ""AS2860"": 100,
    ""AS16276"": 154,
    ""AS3215"": 52,
    ""AS13395"": 10,
    ""AS398101"": 20,
    ""AS36903"": 70,
    ""AS19165"": 168,
    ""AS3320"": 32,
    ""AS28419"": 36,
    ""AS135953"": 34,
    ""AS46844"": 72,
    ""AS48635"": 80,
    ""AS19318"": 26,
    ""AS27651"": 44,
    ""AS39501"": 62,
    ""AS8075"": 56,
    ""AS36352"": 94,
    ""AS215415"": 30,
    ""AS20278"": 24,
    ""AS45090"": 18,
    ""AS3737"": 14,
    ""AS12353"": 32,
    ""AS132203"": 30,
    ""AS33548"": 26,
    ""AS7303"": 28,
    ""AS15557"": 34,
    ""AS134612"": 32,
    ""AS196838"": 34,
    ""AS132296"": 10,
    ""AS55967"": 48,
    ""AS6147"": 4,
    ""AS11259"": 2,
    ""AS4766"": 2,
    ""AS398465"": 4,
    ""AS213035"": 4,
    ""AS997"": 4,
    ""AS17621"": 2
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 32,
    ""Eastern Telecommunications Philippines, Inc."": 4,
    ""Datacenter location PAR1 France"": 2,
    ""Shaw Communications Inc."": 16,
    ""Google LLC"": 24,
    ""Flyservers S.A."": 24,
    ""Zayo Bandwidth"": 4,
    ""Uninet S.A. de C.V."": 4,
    ""Censys, Inc."": 2,
    ""Oy Crea Nova Hosting Solution Ltd"": 10,
    ""Xhost Internet Solutions LP"": 4,
    ""Chinanet"": 14,
    ""Rethem Hosting LLC"": 2,
    ""The Constant Company, LLC"": 2,
    ""NeocomISP Limited"": 2,
    ""SS-Net"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 24,
    ""Bharti Airtel"": 4,
    ""Super Sonic Broadband Pvt. Ltd"": 2,
    ""Itissalat Al-MAGHRIB"": 132,
    ""AT&T Services, Inc."": 214,
    ""NOS COMUNICACOES S.A"": 100,
    ""OVH SAS"": 154,
    ""France Telecom Orange"": 20,
    ""Smart City Networks"": 10,
    ""GoDaddy.com, LLC"": 20,
    ""IP ADSL MarocTelecom"": 70,
    ""Webpass Inc."": 168,
    ""Deutsche Telekom AG"": 32,
    ""Se\u00f1al Interactiva, S.A De C.V"": 36,
    ""P815"": 34,
    ""Sharktech"": 72,
    ""Cldin B.V."": 80,
    ""Interserver"": 26,
    ""Entel Chile S.A."": 44,
    ""NGS-DC"": 62,
    ""Microsoft Corporation"": 56,
    ""HostPapa"": 94,
    ""Velcom"": 30,
    ""Nexeon Technologies, Inc."": 24,
    ""Zenlayer Inc"": 16,
    ""Shenzhen Tencent Computer Systems Company Limited"": 30,
    ""PenTeleData Inc."": 14,
    ""Vodafone Portugal"": 32,
    ""Aceville Pte.ltd"": 18,
    ""Unwired Broadband, LLC"": 26,
    ""Telecom Argentina S.A."": 28,
    ""Societe Francaise Du Radiotelephone - SFR SA"": 34,
    ""PT Atria Teknologi Indonesia"": 32,
    ""TRING"": 34,
    ""Seven Star Digital Network Private Limited"": 10,
    ""France Telecom"": 32,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 48,
    ""Telefonica del Peru S.A.A."": 4,
    ""Angola Telecom"": 2,
    ""Korea Telecom"": 2,
    ""Rackdog, LLC"": 4,
    ""Des Capital B.V."": 4,
    ""23 Tai Seng Drive Singapore"": 4,
    ""China Unicom Shanghai Province Network"": 2
  },
  ""org"": {
    ""DigitalOcean, LLC"": 32,
    ""Eastern Telecommunications Philippines, Inc"": 4,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""Shaw Communications Inc"": 16,
    ""Palo Alto Networks, Inc"": 24,
    ""UAB Host Baltic"": 8,
    ""Flyservers S.A"": 16,
    ""Microsoft Corporation"": 4,
    ""UNINET"": 2,
    ""Censys Inc"": 2,
    ""Xhost Internet Solutions"": 10,
    ""Xhostis"": 4,
    ""Chinanet SC"": 4,
    ""Rethem Hosting LLC"": 2,
    ""TYO Vultr"": 2,
    ""NeocomISP Limited"": 2,
    ""Unmanaged LTD"": 4,
    ""Ucloud Information Technology (hk) Limited"": 18,
    ""Bharti Airtel Ltd"": 4,
    ""Super Sonic Broadband Pvt Ltd"": 2,
    ""Chinanet JS"": 10,
    ""Office National des Postes et Telecommunications ONPT (Maroc Telecom) / IAM"": 132,
    ""ATT SERVICES INC - PEGACM-MD"": 140,
    ""NOS Comunicacoes S.A."": 100,
    ""OVH Ltd"": 24,
    ""Unknown"": 352,
    ""SAFE Credit Union Convention Center"": 10,
    ""GoDaddy.com, LLC"": 20,
    ""OVH Australia PTY LTD"": 26,
    ""Webpass Inc"": 168,
    ""Deutsche Telekom AG"": 32,
    ""Se\u00f1al Interactiva, S.A De C.V"": 36,
    ""Sharktech"": 72,
    ""ATT SERVICES INC- PEG"": 74,
    ""ServerMania Inc"": 80,
    ""OVH Singapore PTE. LTD"": 16,
    ""hostingsource.com"": 26,
    ""Entel Chile S.A"": 44,
    ""Neda Gostar Saba Data Transfer Company"": 62,
    ""Microsoft Azure Cloud (eastus)"": 48,
    ""ColoCrossing"": 70,
    ""Ipxo LLC"": 30,
    ""365 Group LLC"": 24,
    ""UCLOUD"": 16,
    ""OVH"": 22,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 18,
    ""PenTeleData House Account"": 14,
    ""Vodafone Portugal - Communicacoes Pessoais S.A."": 32,
    ""Unwired Broadband"": 26,
    ""Telecom Argentina S.A"": 28,
    ""7 STAR Dot Com Pvt. Ltd"": 10,
    ""chen zexin"": 24,
    ""Microsoft Azure Cloud (westeurope)"": 8,
    ""Kota Komputer Wendy"": 30,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""OVH Sp. z o. o"": 12,
    ""Tencent Cloud Computing"": 12,
    ""UniRed Red Interna"": 4,
    ""AngolaTelecomPublic"": 2,
    ""Kornet"": 2,
    ""AB E-Commerce, LLC"": 4,
    ""Serverion BV"": 4,
    ""Uninet S.A. de C.V."": 2
  },
  ""regionName"": {
    ""Central Singapore"": 42,
    ""Metro Manila"": 4,
    ""South West"": 2,
    ""\u00cele-de-France"": 88,
    ""California"": 470,
    ""Alberta"": 16,
    ""Vilnius"": 8,
    ""Kaunas"": 16,
    ""Washington"": 4,
    ""Sonora"": 2,
    ""Illinois"": 8,
    ""Uusimaa"": 10,
    ""North Holland"": 126,
    ""Sichuan"": 4,
    ""Tokyo"": 2,
    ""Phnom Penh"": 2,
    ""Sofia-Capital"": 4,
    ""Hesse"": 2,
    ""West Bengal"": 4,
    ""Maharashtra"": 12,
    ""Jiangsu"": 10,
    ""Casablanca-Settat"": 132,
    ""Lisbon"": 132,
    ""England"": 62,
    ""Arizona"": 20,
    ""New South Wales"": 26,
    ""Souss-Massa"": 70,
    ""Saxony"": 32,
    ""Coahuila"": 36,
    ""Hanoi"": 34,
    ""Colorado"": 72,
    ""Texas"": 74,
    ""New Jersey"": 26,
    ""Santiago Metropolitan"": 44,
    ""Tehran"": 62,
    ""Virginia"": 48,
    ""New York"": 56,
    ""Florida"": 24,
    ""Hauts-de-France"": 76,
    ""Guangdong"": 18,
    ""Pennsylvania"": 14,
    ""Central and Western District"": 18,
    ""Buenos Aires F.D."": 28,
    ""Jakarta"": 32,
    ""Durr\u00ebs County"": 34,
    ""Mazovia"": 12,
    ""Lima Province"": 4,
    ""Luanda Province"": 2,
    ""Daejeon"": 2,
    ""North West"": 4,
    ""Mexico City"": 2,
    ""Shanghai"": 2
  },
  ""country"": {
    ""Singapore"": 48,
    ""Philippines"": 4,
    ""France"": 164,
    ""United States"": 816,
    ""Canada"": 16,
    ""Lithuania"": 24,
    ""Mexico"": 40,
    ""Finland"": 10,
    ""The Netherlands"": 38,
    ""China"": 34,
    ""Japan"": 2,
    ""Cambodia"": 2,
    ""Bulgaria"": 4,
    ""Germany"": 34,
    ""India"": 16,
    ""Morocco"": 202,
    ""Portugal"": 132,
    ""United Kingdom"": 62,
    ""Australia"": 26,
    ""Vietnam"": 34,
    ""Netherlands"": 88,
    ""Chile"": 44,
    ""Iran"": 62,
    ""Hong Kong"": 18,
    ""Argentina"": 28,
    ""Indonesia"": 32,
    ""Albania"": 34,
    ""Poland"": 12,
    ""Peru"": 4,
    ""Angola"": 2,
    ""South Korea"": 2
  },
  ""account"": {
    ""hello"": 62,
    ""Administr"": 16,
    ""kfcuIpuoI"": 2,
    ""xbBkoP"": 2,
    ""edgtmg"": 2,
    ""Test"": 42,
    ""(empty)"": 8,
    ""nmap"": 2,
    ""GyfkouYIb"": 2,
    ""kcvtwq"": 2,
    ""eReGkf"": 2,
    ""Administrator"": 2,
    ""deVJPJfJH"": 2,
    ""TYxANF"": 2,
    ""kumvDn"": 2,
    ""142.93.8.59"": 1878,
    ""QMhPYyoAl"": 2,
    ""Rpenwq"": 2,
    ""IzXthL"": 2
  },
  ""keyboard"": {
    ""Unknown"": 2034
  },
  ""client_build"": {
    ""Unknown"": 2034
  },
  ""client_name"": {
    ""Unknown"": 2034
  },
  ""ip_type"": {
    ""hosting"": 530,
    ""Unknown"": 1292,
    ""hosting & proxy"": 180,
    ""proxy"": 8,
    ""mobile & proxy"": 24
  }
}"
7KnRmUTa,2024-06-15_stats.json,rdp_snitch,JSON,Saturday 15th of June 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""104.248.154.46"": 13,
    ""120.89.61.252"": 2,
    ""174.138.30.111"": 1,
    ""91.238.181.71"": 1,
    ""164.92.104.215"": 2,
    ""96.51.53.164"": 2,
    ""198.235.24.50"": 3,
    ""45.227.254.55"": 2,
    ""194.165.16.72"": 2,
    ""64.124.50.139"": 2,
    ""187.137.198.132"": 1,
    ""45.227.254.26"": 2,
    ""206.168.34.37"": 1,
    ""80.66.66.250"": 5,
    ""185.170.144.3"": 2,
    ""118.122.144.137"": 2,
    ""104.152.52.231"": 1,
    ""198.235.24.253"": 3,
    ""139.180.199.157"": 1,
    ""167.179.37.82"": 1,
    ""80.94.95.114"": 2,
    ""118.193.59.41"": 1,
    ""125.22.110.189"": 2,
    ""103.121.74.4"": 1,
    ""58.218.199.219"": 5,
    ""147.185.132.171"": 3,
    ""194.165.16.37"": 2,
    ""194.165.16.10"": 2,
    ""196.92.1.191"": 28,
    ""12.226.206.131"": 70,
    ""95.92.172.88"": 50,
    ""51.68.199.76"": 12,
    ""80.15.116.13"": 10,
    ""24.75.245.107"": 5,
    ""72.167.34.126"": 10,
    ""139.99.194.253"": 13,
    ""196.206.164.27"": 35,
    ""136.24.37.18"": 84,
    ""80.153.67.94"": 16,
    ""45.5.94.6"": 18,
    ""103.130.212.203"": 17,
    ""70.39.90.254"": 36,
    ""12.193.127.18"": 37,
    ""38.170.237.45"": 34,
    ""15.235.187.94"": 8,
    ""206.72.195.26"": 13,
    ""186.67.171.6"": 22,
    ""89.165.2.25"": 31,
    ""13.68.227.67"": 24,
    ""196.92.1.190"": 38,
    ""107.172.73.131"": 16,
    ""98.142.244.243"": 15,
    ""123.58.207.87"": 8,
    ""23.94.167.52"": 12,
    ""104.128.189.74"": 12,
    ""104.218.165.55"": 5,
    ""149.202.172.186"": 11,
    ""192.210.149.190"": 19,
    ""193.112.251.135"": 7,
    ""24.229.251.123"": 7,
    ""95.136.11.137"": 16,
    ""43.132.186.70"": 9,
    ""104.200.32.169"": 13,
    ""201.212.3.108"": 14,
    ""80.124.119.50"": 17,
    ""103.195.31.188"": 16,
    ""93.159.194.33"": 17,
    ""202.134.162.131"": 5,
    ""54.37.51.226"": 12,
    ""52.157.201.49"": 4,
    ""104.218.165.34"": 3,
    ""51.38.161.248"": 15,
    ""165.154.174.124"": 3,
    ""80.14.17.35"": 8,
    ""57.128.195.167"": 6,
    ""154.85.49.240"": 24,
    ""43.153.99.114"": 6,
    ""200.37.0.238"": 2,
    ""184.70.84.114"": 6,
    ""193.112.134.231"": 2,
    ""38.170.237.41"": 6,
    ""197.216.3.130"": 1,
    ""80.13.106.84"": 8,
    ""61.81.115.70"": 1,
    ""158.51.14.114"": 2,
    ""194.165.16.73"": 2,
    ""45.144.226.68"": 2,
    ""103.145.58.228"": 2,
    ""187.157.89.218"": 1,
    ""223.166.31.100"": 1,
    ""205.210.31.162"": 3
  },
  ""asn"": {
    ""AS14061"": 16,
    ""AS9658"": 2,
    ""AS49434"": 1,
    ""AS6327"": 8,
    ""AS396982"": 12,
    ""AS267784"": 4,
    ""AS48721"": 8,
    ""AS6461"": 2,
    ""AS8151"": 2,
    ""AS398324"": 1,
    ""AS51765"": 5,
    ""AS197414"": 2,
    ""AS4134"": 7,
    ""AS14987"": 1,
    ""AS20473"": 1,
    ""AS9902"": 1,
    ""AS204428"": 2,
    ""AS135377"": 20,
    ""AS9498"": 2,
    ""AS134886"": 1,
    ""AS6713"": 66,
    ""AS7018"": 107,
    ""AS2860"": 50,
    ""AS16276"": 77,
    ""AS3215"": 26,
    ""AS13395"": 5,
    ""AS398101"": 10,
    ""AS36903"": 35,
    ""AS19165"": 84,
    ""AS3320"": 16,
    ""AS28419"": 18,
    ""AS135953"": 17,
    ""AS46844"": 36,
    ""AS48635"": 40,
    ""AS19318"": 13,
    ""AS27651"": 22,
    ""AS39501"": 31,
    ""AS8075"": 28,
    ""AS36352"": 47,
    ""AS215415"": 15,
    ""AS20278"": 12,
    ""AS45090"": 9,
    ""AS3737"": 7,
    ""AS12353"": 16,
    ""AS132203"": 15,
    ""AS33548"": 13,
    ""AS7303"": 14,
    ""AS15557"": 17,
    ""AS134612"": 16,
    ""AS196838"": 17,
    ""AS132296"": 5,
    ""AS55967"": 24,
    ""AS6147"": 2,
    ""AS11259"": 1,
    ""AS4766"": 1,
    ""AS398465"": 2,
    ""AS213035"": 2,
    ""AS997"": 2,
    ""AS17621"": 1
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 16,
    ""Eastern Telecommunications Philippines, Inc."": 2,
    ""Datacenter location PAR1 France"": 1,
    ""Shaw Communications Inc."": 8,
    ""Google LLC"": 12,
    ""Flyservers S.A."": 12,
    ""Zayo Bandwidth"": 2,
    ""Uninet S.A. de C.V."": 2,
    ""Censys, Inc."": 1,
    ""Oy Crea Nova Hosting Solution Ltd"": 5,
    ""Xhost Internet Solutions LP"": 2,
    ""Chinanet"": 7,
    ""Rethem Hosting LLC"": 1,
    ""The Constant Company, LLC"": 1,
    ""NeocomISP Limited"": 1,
    ""SS-Net"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 12,
    ""Bharti Airtel"": 2,
    ""Super Sonic Broadband Pvt. Ltd"": 1,
    ""Itissalat Al-MAGHRIB"": 66,
    ""AT&T Services, Inc."": 107,
    ""NOS COMUNICACOES S.A"": 50,
    ""OVH SAS"": 77,
    ""France Telecom Orange"": 10,
    ""Smart City Networks"": 5,
    ""GoDaddy.com, LLC"": 10,
    ""IP ADSL MarocTelecom"": 35,
    ""Webpass Inc."": 84,
    ""Deutsche Telekom AG"": 16,
    ""Se\u00f1al Interactiva, S.A De C.V"": 18,
    ""P815"": 17,
    ""Sharktech"": 36,
    ""Cldin B.V."": 40,
    ""Interserver"": 13,
    ""Entel Chile S.A."": 22,
    ""NGS-DC"": 31,
    ""Microsoft Corporation"": 28,
    ""HostPapa"": 47,
    ""Velcom"": 15,
    ""Nexeon Technologies, Inc."": 12,
    ""Zenlayer Inc"": 8,
    ""Shenzhen Tencent Computer Systems Company Limited"": 15,
    ""PenTeleData Inc."": 7,
    ""Vodafone Portugal"": 16,
    ""Aceville Pte.ltd"": 9,
    ""Unwired Broadband, LLC"": 13,
    ""Telecom Argentina S.A."": 14,
    ""Societe Francaise Du Radiotelephone - SFR SA"": 17,
    ""PT Atria Teknologi Indonesia"": 16,
    ""TRING"": 17,
    ""Seven Star Digital Network Private Limited"": 5,
    ""France Telecom"": 16,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 24,
    ""Telefonica del Peru S.A.A."": 2,
    ""Angola Telecom"": 1,
    ""Korea Telecom"": 1,
    ""Rackdog, LLC"": 2,
    ""Des Capital B.V."": 2,
    ""23 Tai Seng Drive Singapore"": 2,
    ""China Unicom Shanghai Province Network"": 1
  },
  ""org"": {
    ""DigitalOcean, LLC"": 16,
    ""Eastern Telecommunications Philippines, Inc"": 2,
    ""ThinkTech Technology Industrial CO. Limited"": 1,
    ""Shaw Communications Inc"": 8,
    ""Palo Alto Networks, Inc"": 12,
    ""UAB Host Baltic"": 4,
    ""Flyservers S.A"": 8,
    ""Microsoft Corporation"": 2,
    ""UNINET"": 1,
    ""Censys Inc"": 1,
    ""Xhost Internet Solutions"": 5,
    ""Xhostis"": 2,
    ""Chinanet SC"": 2,
    ""Rethem Hosting LLC"": 1,
    ""TYO Vultr"": 1,
    ""NeocomISP Limited"": 1,
    ""Unmanaged LTD"": 2,
    ""Ucloud Information Technology (hk) Limited"": 9,
    ""Bharti Airtel Ltd"": 2,
    ""Super Sonic Broadband Pvt Ltd"": 1,
    ""Chinanet JS"": 5,
    ""Office National des Postes et Telecommunications ONPT (Maroc Telecom) / IAM"": 66,
    ""ATT SERVICES INC - PEGACM-MD"": 70,
    ""NOS Comunicacoes S.A."": 50,
    ""OVH Ltd"": 12,
    ""Unknown"": 176,
    ""SAFE Credit Union Convention Center"": 5,
    ""GoDaddy.com, LLC"": 10,
    ""OVH Australia PTY LTD"": 13,
    ""Webpass Inc"": 84,
    ""Deutsche Telekom AG"": 16,
    ""Se\u00f1al Interactiva, S.A De C.V"": 18,
    ""Sharktech"": 36,
    ""ATT SERVICES INC- PEG"": 37,
    ""ServerMania Inc"": 40,
    ""OVH Singapore PTE. LTD"": 8,
    ""hostingsource.com"": 13,
    ""Entel Chile S.A"": 22,
    ""Neda Gostar Saba Data Transfer Company"": 31,
    ""Microsoft Azure Cloud (eastus)"": 24,
    ""ColoCrossing"": 35,
    ""Ipxo LLC"": 15,
    ""365 Group LLC"": 12,
    ""UCLOUD"": 8,
    ""OVH"": 11,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 9,
    ""PenTeleData House Account"": 7,
    ""Vodafone Portugal - Communicacoes Pessoais S.A."": 16,
    ""Unwired Broadband"": 13,
    ""Telecom Argentina S.A"": 14,
    ""7 STAR Dot Com Pvt. Ltd"": 5,
    ""chen zexin"": 12,
    ""Microsoft Azure Cloud (westeurope)"": 4,
    ""Kota Komputer Wendy"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""OVH Sp. z o. o"": 6,
    ""Tencent Cloud Computing"": 6,
    ""UniRed Red Interna"": 2,
    ""AngolaTelecomPublic"": 1,
    ""Kornet"": 1,
    ""AB E-Commerce, LLC"": 2,
    ""Serverion BV"": 2,
    ""Uninet S.A. de C.V."": 1
  },
  ""regionName"": {
    ""Central Singapore"": 21,
    ""Metro Manila"": 2,
    ""South West"": 1,
    ""\u00cele-de-France"": 44,
    ""California"": 235,
    ""Alberta"": 8,
    ""Vilnius"": 4,
    ""Kaunas"": 8,
    ""Washington"": 2,
    ""Sonora"": 1,
    ""Illinois"": 4,
    ""Uusimaa"": 5,
    ""North Holland"": 63,
    ""Sichuan"": 2,
    ""Tokyo"": 1,
    ""Phnom Penh"": 1,
    ""Sofia-Capital"": 2,
    ""Hesse"": 1,
    ""West Bengal"": 2,
    ""Maharashtra"": 6,
    ""Jiangsu"": 5,
    ""Casablanca-Settat"": 66,
    ""Lisbon"": 66,
    ""England"": 31,
    ""Arizona"": 10,
    ""New South Wales"": 13,
    ""Souss-Massa"": 35,
    ""Saxony"": 16,
    ""Coahuila"": 18,
    ""Hanoi"": 17,
    ""Colorado"": 36,
    ""Texas"": 37,
    ""New Jersey"": 13,
    ""Santiago Metropolitan"": 22,
    ""Tehran"": 31,
    ""Virginia"": 24,
    ""New York"": 28,
    ""Florida"": 12,
    ""Hauts-de-France"": 38,
    ""Guangdong"": 9,
    ""Pennsylvania"": 7,
    ""Central and Western District"": 9,
    ""Buenos Aires F.D."": 14,
    ""Jakarta"": 16,
    ""Durr\u00ebs County"": 17,
    ""Mazovia"": 6,
    ""Lima Province"": 2,
    ""Luanda Province"": 1,
    ""Daejeon"": 1,
    ""North West"": 2,
    ""Mexico City"": 1,
    ""Shanghai"": 1
  },
  ""country"": {
    ""Singapore"": 24,
    ""Philippines"": 2,
    ""France"": 82,
    ""United States"": 408,
    ""Canada"": 8,
    ""Lithuania"": 12,
    ""Mexico"": 20,
    ""Finland"": 5,
    ""The Netherlands"": 19,
    ""China"": 17,
    ""Japan"": 1,
    ""Cambodia"": 1,
    ""Bulgaria"": 2,
    ""Germany"": 17,
    ""India"": 8,
    ""Morocco"": 101,
    ""Portugal"": 66,
    ""United Kingdom"": 31,
    ""Australia"": 13,
    ""Vietnam"": 17,
    ""Netherlands"": 44,
    ""Chile"": 22,
    ""Iran"": 31,
    ""Hong Kong"": 9,
    ""Argentina"": 14,
    ""Indonesia"": 16,
    ""Albania"": 17,
    ""Poland"": 6,
    ""Peru"": 2,
    ""Angola"": 1,
    ""South Korea"": 1
  },
  ""account"": {
    ""hello"": 31,
    ""Administr"": 8,
    ""kfcuIpuoI"": 1,
    ""xbBkoP"": 1,
    ""edgtmg"": 1,
    ""Test"": 21,
    ""(empty)"": 4,
    ""nmap"": 1,
    ""GyfkouYIb"": 1,
    ""kcvtwq"": 1,
    ""eReGkf"": 1,
    ""Administrator"": 1,
    ""deVJPJfJH"": 1,
    ""TYxANF"": 1,
    ""kumvDn"": 1,
    ""142.93.8.59"": 939,
    ""QMhPYyoAl"": 1,
    ""Rpenwq"": 1,
    ""IzXthL"": 1
  },
  ""keyboard"": {
    ""Unknown"": 1017
  },
  ""client_build"": {
    ""Unknown"": 1017
  },
  ""client_name"": {
    ""Unknown"": 1017
  },
  ""ip_type"": {
    ""hosting"": 265,
    ""Unknown"": 646,
    ""hosting & proxy"": 90,
    ""proxy"": 4,
    ""mobile & proxy"": 12
  }
}"
gDP0DV1z,ü§ëG2A.com Free Gift Card Guide June 2024 NEWü§ë,x2w,GetText,Saturday 15th of June 2024 06:59:34 PM CDT,"G2A.com free gift card & games updated guide
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here;
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
16 June 2024"
2PmdwDGY,MailSlurp - Send,J2897,Python,Saturday 15th of June 2024 06:52:39 PM CDT,"#!python3
import mailslurp_client
import os

""""""
This Python script uses the MailSlurp service. Here's a brief explanation:

    1. It initializes an `InboxControllerApi` object to interact with the MailSlurp API.
    2. It retrieves a specific inbox using the provided `inbox_id`.
    3. It extracts the email address associated with that inbox.
 
The script then sends an email:

    1. It creates an email message with a subject and body.
    2. It connects to MailSlurp's SMTP server and logs in with your credentials.
    3. It then sends the email.

Note: Sending is blocked on free accounts, and trials cannot email non-mailslurp email addresses.
""""""

# Create a MailSlurp configuration
configuration = mailslurp_client.Configuration()
configuration.api_key['x-api-key'] = os.getenv(""MAILSLURP_API_KEY"")
inbox_id = ""XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX""
password = ""XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX""
to_address = ""name@example.com""

# Extract the email address associated with the inbox
with mailslurp_client.ApiClient(configuration) as api_client:
    inbox_controller = mailslurp_client.InboxControllerApi(api_client)
    inbox = inbox_controller.get_inbox(inbox_id)
    my_email_address = inbox.email_address

print(""My email address:"", my_email_address)

# Send an email to the MailSlurp email address
import smtplib
from email.mime.text import MIMEText

msg = MIMEText(""Hello from MailSlurp!"")
msg['Subject'] = ""Test email from MailSlurp""
msg['From'] = my_email_address
msg['To'] = to_address

server = smtplib.SMTP('mxslurp.click', 2525)
server.starttls()
server.login(my_email_address, password)
server.sendmail(to_address, my_email_address, msg.as_string())
server.quit()
"
iciQCjsN,showcase,SAVExTHEM,Lua,Saturday 15th of June 2024 06:45:32 PM CDT,"--SCRIPT I MADE ALONG WITH A GUI MENU FOR SWITCHING WEAPONS IN AND OUT OF A PLAYER'S BACKPACK/LOADOUT (LOCAL END)

local event = game.ReplicatedStorage.CHANGELOADOUT --remote event for changing a user's loadout
local plr = game.Players.LocalPlayer
local button = plr.PlayerGui:WaitForChild(""ChangeLoadout""):WaitForChild(""ChangeLoadout"") --button for showing list of buttons for each weapon
local menu = button.Parent.Menu --main frame, with all the buttons as children

button.MouseButton1Click:Connect(function() --enabling and disabling the menu along with the buttons for each weapon
	if menu.Visible == false then
		menu.Visible = true --make the frame visible
		for i, v in pairs(menu:GetChildren()) do --cycle through each weapon button and make it visible
			if v:IsA(""TextButton"") then
				v.Visible = true
			end
		end
	else
		menu.Visible = false --same thing here, but when they press the original button it closes the menu out
		for i, v in pairs(menu:GetChildren()) do
			if v:IsA(""TextButton"") then
				v.Visible = false
			end
		end
	end
end)

local tools = game.ReplicatedStorage:WaitForChild(""Tools""):GetChildren() --list of weapons that will be cloned into the player's inventory upon selection


local function fireEvent(chosen) --fires to the server to change the player's loadout; chosen = weapon that was clicked
	event:FireServer(chosen)
end

menu.Flashbang.MouseButton1Click:Connect(function()
	fireEvent(""Flashbang"")
end)

menu.HK33.MouseButton1Click:Connect(function()
	fireEvent(""HK33"")
end)

menu.HK416.MouseButton1Click:Connect(function()
	fireEvent(""HK416"")
end)

menu.Knife.MouseButton1Click:Connect(function()
	fireEvent(""Knife"")
end)

menu.M18.MouseButton1Click:Connect(function()
	fireEvent(""M18"")
end)

menu.M67.MouseButton1Click:Connect(function()
	fireEvent(""M67"")
end)

menu.M870.MouseButton1Click:Connect(function()
	fireEvent(""M870"")
end)

menu.MP5.MouseButton1Click:Connect(function()
	fireEvent(""MP5"")
end)

menu.R700.MouseButton1Click:Connect(function()
	fireEvent(""R700"")
end)

menu.USP.MouseButton1Click:Connect(function()
	fireEvent(""USP"")
end)

-- SERVER END

local event = game.ReplicatedStorage.CHANGELOADOUT
local tools = game.ReplicatedStorage.Tools


event.OnServerEvent:Connect(function(player, chosen) --player who fired, weapon selected
	local backpack = player.Backpack
	if not backpack:FindFirstChild(chosen) then --if the item isn't already in their backpack, clone it and put it in there
		local clone = tools[chosen]:Clone()
		clone.Parent = backpack
	else
		backpack:FindFirstChild(chosen):Destroy() --if it's already there, remove it (deselecting)
	end
end)"
9W55j36H,Dice Roller,Krythic,C#,Saturday 15th of June 2024 06:45:25 PM CDT,"using System;
using UnityEngine;

namespace Oxide.Plugins
{
    [Info(""DiceRoller"", ""Krythic"", ""1.0.0"")]
    [Description(""Allows players to roll a number between 1 and 100 using /roll"")]

    public class DiceRoller : RustPlugin
    {
		
		private void Init()
        {
			cmd.AddChatCommand(""roll"", this, ""RollCommand"");
			cmd.AddChatCommand(""dice"", this, ""DiceRollerInfoCommand"");
        }
		
		private int NextRoll(int min, int max)
		{
			return UnityEngine.Random.Range(min,max + 1);
		}
		
		private void BroadcastResult(string message)
		{
			Puts(message);
			PrintToChat(""[Dice Roller] "" + message);
			
		}
		
		private void DiceRollerInfoCommand(BasePlayer player, string command, string[] args)
        {
			Puts($""{player.displayName} displayed the DiceRoller info."");
			SendReply(player,
				""[Dice Roller Info]\n""+
				""Creator: Krythic\n"" +
				""v1.0.0\n"" +
				""Commands\n"" +
				""/dice (Displays this information)\n"" + 
				""/roll (Rolls a D100)\n"" + 
				""/roll d4 (Rolls a D4)\n"" + 
				""/roll d6 (Rolls a D6)\n"" + 
				""/roll d8 (Rolls a D8)\n"" +
				""/roll d10 (Rolls a D10)\n"" +
				""/roll d12 (Rolls a D12)\n"" +
				""/roll d20 (Rolls a D20)\n"" +
				""/roll d100 (Rolls a D100)\n""
			);
		}
		
		
        private void RollCommand(BasePlayer player, string command, string[] args)
        {
			if(args != null && args.Length > 0){
				if(args[0].Equals(""d4""))
				{
					int d4Result = NextRoll(1,4);
					BroadcastResult($""{player.displayName} rolled a d4, and got a {d4Result}!"");
					return;
				}
				if(args[0].Equals(""d6""))
				{
					int d6Result = NextRoll(1,6);
					BroadcastResult($""{player.displayName} rolled a d6, and got a {d6Result}!"");
					return;
				}
				if(args[0].Equals(""d8""))
				{
					int d8Result = NextRoll(1,8);
					BroadcastResult($""{player.displayName} rolled a d8, and got a {d8Result}!"");
					return;
				}
				if(args[0].Equals(""d10""))
				{
					int d10Result = NextRoll(1,10);
					BroadcastResult($""{player.displayName} rolled a d10, and got a {d10Result}!"");
					return;
				}
				if(args[0].Equals(""d12""))
				{
					int d12Result = NextRoll(1,12);
					BroadcastResult($""{player.displayName} rolled a d12, and got a {d12Result}!"");
					return;
				}
				if(args[0].Equals(""d20""))
				{
					int d20Result = NextRoll(1,20);
					BroadcastResult($""{player.displayName} rolled a d20, and got a {d20Result}!"");
					return;
				}
				if(args[0].Equals(""d100""))
				{
					int d100Result = NextRoll(1,100);
					BroadcastResult($""{player.displayName} rolled a d100, and got a {d100Result}!"");
					return;
				}
				
			}else{
				// Generate a random number between 1 and 100
				int roll = NextRoll(1,100);
				BroadcastResult($""{player.displayName} rolled a d100, and got a {roll}!"");
			}
            
        }
    }
}"
JejCNS5i,PlacablePreset-Starter1 11:29:25 PM,1fruitydevin,Lua,Saturday 15th of June 2024 06:29:26 PM CDT,"1,2969|{!  A P l a c a b l e s!# : [!# 1 | 2 8 , 2 5 . 9!: , - 7 1 ,!? 0 ,!B!B!A!C!G!2 -!E 3 9!C | 1!# ,!1!O 9 . 5!6!8 9 5 4!< 7!M!F!D!@!G!b!I!B - 5 2!N!P A!R A!2 1 2!V!X . 8 7!j - 8!`!d!H!|!E |!J!< 1 5!D!O!Q!S 5!8!v 3!t!:!M!h 7 . 4 5 6!|!F!?## -!a#!!g 1 0!] 0#(!m!S 6!U 0!v!6#7!h!8 3!z#8!}#;#=#; 9#7#C!l!n!2 8 0!9 4!] 2#L#+#4#.!e#R#?!d#>!< 8!W#X#)!o | 9 1 . 0 2 7!6#3 8 6#: 5#3 1 6#n!}!E!<#i#'#; 7!5#o#E#q 1$0!V#`#K!< 6 4!u 4$,$%!c#S#j#; 6!j$-#Z!O 0#t 4 6#x#b$5#^ 0 7#x#g$&$=$)!g 6$,#D$C!q#^ 4 3!W$J!=#^ 5 8#B$;#:$(!N#;!i!k#p!p!4 . 1!>$4!=#3#G$$$&$Q$g#C#;#5$k$.!p 3$7 4 9#a#L#m . 2 2#f$e$'#$$>!g#O$}$X!L .!w$^#L 9 3%)$b#Q$x%/$S!< 2!M$B!S 1$[!9#7$_#@!r#I$:$w$<$y#k -%+%3%F 4$ #/!;#<$1#m$A%-$R$h#?$O$W%W!U!q!5%K 2#t%_%>%Q%@%c#l%V$/%$!V$j%K 3%m$E%o$f%q#C%f%u 8 .$@%8#$ 4!r$|$P%p#<%0 ,%D&#!p$G . 3 6#.%K!i&6#J&-%~&/%A$!%t&4!r 6%J#L$!%M%=&>%.&@%r%*&C!O#O#4%$$r$p#^%*%,%P&?#T!B%z&Q 1 3%; 2%|%K$N%)$@%}&M&^ ,!L&a#w!V 8%j&H 8%;#+#W%a%R##&,&3!O%l#u 0$^!Y%[ 1!z$o#~&k%b$z!B 5#f&~$0%;!Z&G#$%%&<!a!c%?&N'. ,#6&a 0 6&6$[&V 9&% 3%|&L'-#k$H&Q'G#4#J$_&e#t$U$v';&.&m$U&Q&s&&#V%Z#1&e$7%z$d&[&l&0!_&Q!_#u$J!7!9%!%B'$!V'['K&{!B#{&Q#G&&%C#/#G'r!8#~$O&z& #k%%'z$a'R#L'c&&$9','w&1$V#Y#*#t!L&(%T#v%w'W#9'h&A#I&Q%H#v!j%K!:&6'}'v('##$0$A&~$]$2!?(F(#'j(J'=#k$Y&Q$n#I&9&H 9$a 7&Z'X&]&0!q%e(5#q'! 1!M'o 7$j#<$c!V$p(1(K!K#n'2(##w!t%l#:$p#3#s':(>'L(L&*'A&6!; 2$7!i!]#< 7#^$N)$#h(v!@%X'z#4'j),!V!w#$&8&&#+(u(W(L'@%E(j'Q%J!8)/#%$7$6%`'g)&!E 5&2(i 2$D!9$c!6&%%X!x'^!q!W!J!u'N!g$a'J'X$a!G)c#{ 7%S'(#')V!O&%#%(m&%#+)b&h!v#W(/!x)f%6'u%p)2$#!d)})o#]%t)W#b!u(o)[!V%['{&F$f*!%O)}$;)c$6$d)c 7$U*))q#p)W#d%X)v*1#1#d*/#^ 9(b&M&X!7)5*O'f!9(b*@*+ |$U%I#a)w%['0(/#n!9'`#;$L$q%?$L*#*K#V*V)G)W 8#t(g*0)T*H%;$U%D*b*S#@$d!F)c#@$v*x*l&#)W#s#4!j'I#4#|!<*D)T!C*T&Z%)),*9*O+ *L 3+#)r%L'**r*^)]&F+/ 9)P&<%D'X)c!L+C+B+9*B!O!q)*(E*]#1)@%z$O*.*S$9%,*|$Z'y!D+V+K$.)W!q'U()$n*s$5#H(I%6$N*'$@+E+Z&&+1$N)n#S***m' !U&**F+g!='C*E+/#G*S!>$:+p!w!a'_ 4+`!n+b(P!z(R+Q#l$7$!$,&&)h)2*L+4!u+m$E,,!#+b 4#t!7$I,2 -+B#4(A+[+1!v*{)k#^!v+ +X,? A,A(T+P*G#$$E,I#B+D*'+B,;+B+C#O 9,T,A&%$+&9,F$0(7+U#w+6++%P)c#V+1,p,g!O#&)d+{'''!&F*w*z,`(),s*j&y#^*z,x#%(7+=#1&b%m++)c 0&7-$+o)k+p-4 6-+,z$],X+|%G!r!w)/-)&K+A+]+F*K&s,O'* 8-+$9#u$]-.#$&;!z!5)c%C*S!Z$$+p!Z$:-X%%-O$7!7,|-/$@*!#1$Z,J+A!q,b%G-L 4#I-+%5#s,E,Y)0*p*>$'$2-(!u 3(%+p&v+E)c![-;+u*A+a&R)-+++f''$+&6$6-|&8*'+s,;$N-`#^&8-+$n*L-w-@(r!:)b)2%l+m-%-I'_$$*=%l.>!r&e-f'7)2![-|*7 6)h+p.X%`)l-+%G'_.R#<!Z)Y-D. +E$a$3-&-}-L.%-+$M$o*P.0'b 0-))(,t&P+^,e,;+H-L,c,x(G$p,1-x&e&w+@,t*S%!%`+p%!%,/*,x')&f,F&e'C'},t-K+^#%&y+p#%.;)Y-N.**W'l$0%J)w'q(:#3%z&H*''$/--L'$/0!f#$+v+$*X!U#&%j)w( /J(H#.,t!;* $M(>+^'B/@#0,x.X&6-n.s'r'C.!#x/9/@/?$;-E&y/t,x,z#m*[/&#A%)(l-|!Z/0#^%z/f+/'I/i'0,x&*&6&o/o(:*K,B0%.y-|.}%P0(#P* / /C+w%!'Q/%-@*L%)*/)l&U* '0/w!V!4.m%$,x*-#|,k-x(l'U$3*=0=.5&B0;&&#%-L$+,f0@/W(l%6$^'H 5(~%((`.E.K0b.G0_,%-L$u-O$o)8&q*o!x$p&%'G/s.<0^-|0c0M$+(%*:$!/2'p(E$ +3-y%610.i/y,P&o0_&v1)140/)d%j$ *M#<$601-W0(,a0>08,)1F09+J0e)r1#)v-T#N+.+G+.0>-R0_%:0'&6)T,T+8![0h&V 3-B!W':0;!H)o)B)G+8#]%<&V0!*P1f)i1h#;$J1k |%((9-01a1r1}%S1W&#1_)w1o#t1e!~1s# ${.+!n1l/Y'a#$$1*/1}2)/T*M)G,+)1%6&U$n&c-/%*$2#.25!b2+#?1j&#,+$H)A(E'&-/(;$U!?2D#81i(x(i,+%:0x)J*b2@'d-R2S!e2U%t2J)!(^#$.!$o++2a1t2G2V#p 5 |(o!u+.%y&%#m2R2626#k.U)G-;2K#w'6#<&q$G!]2l2F'?#B&#-;#V$o%:21%]!8#%!j3)!@2|3,(i3 0~)>$_.d#52C2z2E38##2}&#)n#~(/%j2N220~$|37/T3G(i)n&v1n%K0$3Q(X( )G)n'8.r&H(P243C2T(L3]3H$D)j%k.P2(3D1~&|)U#p3_&X1z%|3Z#S#&%t)n.2*/3?#73x!g)13{*X&%3a&)!81q3e2b#;2!3T1x&w&V#`!s4##$)>3^ |*_3~&H(A47!y!A3i(b3W!U&8)b$04+3n%o4.!g*o*W*&%y)-2*4T/T4A%t-N*>!s%k,i4K&-4M#l4B)r 7%&,Z4!4-2m4b4X*X'C0i&&-{%]#x4@4O+w'83v4^4U2{#;4u&#-N#@.T1b)j4t4c+L'^1z&54,3o4{4N5'.,.X32)M1n5&*W%H4=2h4n4z3o%S4})r&;59%]$73d5-5=4|50!n-N0k&V$n5,4L4j4W294;20%k(#5<3f5/2d |,B3W&H'!5E5P3*5R2I1x3u1o!U5O4`5Q5?#p,+#{4[3M,G5%4i5d5n$.,+003v'C5b5l5w5I!#2X5h%K005k/w5m6# A,f( 'o#04g465v3E5Z)G,f+&4)%]4y473r$~#X#A1b4S47)Z)G$0*X4S*-%l4H2A4_6*5d0^!O | [!0!!!$ o w e r! 6V'? 0 ] ,6U!# R o t a t e Y6]!Q6`6b6l A6e6g6i X6p&n6` ]$l!2*M+)%$/a$Y1|64/T(`!k6S6c6W6Y6[6^#&6a7)6r6h6j6v6n706f726u6^'I ]6y$~!21B3~)t$022,C6N1g6P3z#X7(6p P6X6Z6v7.6o6V716i6k6^756p7T e79!Q7;7=#Z*C4n,:&c'9$5%;.!!A'p7j'q-)0$-3-K*}7j/c'D-j'p0o$M+8##6E&3#C(`0h#.+)!L-/'(%I7v'G15$o4e0M$p.]-J.)'x3:$l1l%;-p&q'c2h%m1F!u7o0K*J*$)=,L(l#k7|(i&b2r3k5`2%6D84$~+82=&H8'6)7G65 ,8G$l2J&d3v5u5F5Y8X8O#Z1l5W3X#t5~6O8W8Y$~5p4y3?4J5X4a8l#Z,+1`5B)a557$((2-!1#C0k4[3b!U8i8V7%8}!o2J8f&H9!8U4U8|&C#C2s8x$36=9)!q4;,i'E%C2t&)0(&B.'*J8>.&$L#v-|.u$A2]+/*o*w#~'1##*&6F)W00#%$I#3*>(~'!!z-!49.e!|-39G7s)Z*}8-9b)W9Q2o$~*n!Y'y&q0k#:+&.!*a'G.f$p'f#h8,.f8*%r9R&3)W/l.X/[&&&)!r*L1D)=*a9M/Q9G9h+A7t:.(a9P!B: 8H2q9!#~#a!U 8({3%!8 0*c-E7v$M9u9e$Z+3*K'B.m())c,B1!9{'M9k#Z2q'{.D&n(7/84I&6(A/98+9x8.490%#{:T&C2q#@/71z)<7F909j:i2r#t!;%z):4H.u#4.U/*+/-4+U7m:2)~$o*5//-|*~0%$]:h6F2q.21c6w0x9Z*u(U%)06.'9J:4!9:M:J*59I09(0)206:5;,&32q(r#&(R#30k)L5{:M9f-Z6E.J9}* 9x;E:99:%6:C;13'&)7h8-:5*':4.J:?*'9O;W$l::&%2Q#y%):0#@'U;f*%.E.5.j8B)O.7$#;i$~3 1z:v9/3p:7:U!1-;:?)d#x+)(},Z)t'N)l:O$Z(t;P-|&*,^(`-~9V:})>:a;|#Z<(4(< 5W47:8#p,f;)60,}!{8`4a<F9l$D$7#J8$,}2w.f<7.~-l1I;<<6),<?!#)n/l#5!5:v#&0|&7!9&K;6*5$j,P0$:L)|&*;>:00(;A2<7j;h:q6F#>:w#K;6/s%G'C*i(d(?%r$!8c!S#<%6#m#/:]%5%+)P=')R!@3h8H#!!r![$I'&7 +)1 )C&m$p6>$C=-!z(E5`!r&c(%)Q(2)0=+#q*}'%9K%]%;&*(=)5)D#?)e/W%T#40a$n$c=#%X2j/a&X)(0>:e1I1:;69i#?/V)r -&w88)w0O#<%5#&#L-E/i/:)i)Y:b$b,x --d,:.0=?*K)F#u<4$g%~*j.h>.+t=q9)9i%;!v-?,}&J,6&b1D0%#s*Q*b*'>?>&%M>),l+N*L,^%*-D0%-{*g+0*'>N,T2q%T*Y0};(-5#M'C#v<m9g9F#f9D9H9G>2:}%|)l0r-|:<)o0r&3)n$]'4)/%l'C$!#:!73V-r=h1a-3$_.<.6-30a>h? 7j&F;$.u:+(o8F'1 2$l>r9=$+!x6K!u&v%B)T.<.!09?+;$!Z9H-p?'$L'(+A)89F.f1c |&#>W!4$Z$+>[*H4D$#.f:<>f>d:.:1>h9F*5:?+p>n?M=:4e):*5&b/s#6:B.w(a.f.u?Y8?'#9J61?^.V>l9B,+$i(N!l6a!#!% a y6Z N a m!,!.!0!o p!& y b o h y$l!( I v i i n!#?} A@%@'!- A!/!# M o d u!& r   S6g g e#p T a l l   L a n6i r@9$. F l o o@H G r i@Q#p B6X@R R!' k#p S a k u r a   B!& c k  7M t@l@n@p@r R e d@x6f@eA!#p@T@V6Z@Y!n C o uA*6[$. P6h o!&@IA/ p#p C@U n oA,!# B i gA8 uA:$. D@p i@UAEAG!n M u s h r@^ mAM#p G@!  A< k@M$.@f u q u e t   O f  6e s@($. C r y s6g@R B@P l@: }"
