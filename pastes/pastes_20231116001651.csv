id,title,username,language,date,content
3nZZd7JZ,2023-11-15_stats.json,rdp_snitch,JSON,Wednesday 15th of November 2023 06:15:09 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 2,
    ""118.194.236.118"": 1,
    ""194.187.176.139"": 1,
    ""205.210.31.183"": 3,
    ""45.79.168.134"": 97,
    ""87.251.75.145"": 3,
    ""62.122.184.166"": 4,
    ""103.212.136.25"": 24,
    ""45.143.201.62"": 5,
    ""23.251.102.74"": 4,
    ""46.219.77.107"": 3,
    ""185.170.144.3"": 2,
    ""141.98.81.34"": 1,
    ""194.165.16.37"": 2,
    ""62.122.184.168"": 4,
    ""205.210.31.178"": 3,
    ""103.231.59.163"": 78,
    ""45.129.14.208"": 3,
    ""87.251.75.120"": 1,
    ""106.116.169.71"": 1,
    ""120.89.46.241"": 1,
    ""40.68.89.187"": 2,
    ""165.154.12.38"": 1,
    ""45.140.17.16"": 6,
    ""45.227.254.26"": 4,
    ""198.235.24.156"": 3,
    ""87.251.75.64"": 1,
    ""41.158.2.12"": 1,
    ""152.89.198.133"": 2,
    ""62.122.184.165"": 2,
    ""104.128.67.122"": 1,
    ""198.235.24.213"": 3,
    ""62.204.41.132"": 2
  },
  ""asn"": {
    ""AS48721"": 4,
    ""AS135377"": 2,
    ""AS208843"": 1,
    ""AS396982"": 12,
    ""AS63949"": 97,
    ""AS208091"": 5,
    ""AS57523"": 12,
    ""AS133676"": 24,
    ""AS210950"": 5,
    ""AS21859"": 4,
    ""AS31148"": 3,
    ""AS197414"": 2,
    ""AS209588"": 1,
    ""AS132335"": 78,
    ""AS198465"": 3,
    ""AS4134"": 1,
    ""AS9658"": 1,
    ""AS8075"": 2,
    ""AS198953"": 6,
    ""AS267784"": 4,
    ""AS16058"": 1,
    ""AS396948"": 1,
    ""AS59425"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 9,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Alpha Strike Labs GmbH"": 1,
    ""Google LLC"": 12,
    ""Akamai Technologies, Inc."": 97,
    ""Xhost Internet Solutions LP"": 7,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Gstech Software Systems Pvt Ltd"": 24,
    ""TOV E-RISHENNYA"": 5,
    ""Zenlayer Inc"": 4,
    ""o3 core"": 3,
    ""LeapSwitch Networks Pvt Ltd"": 78,
    ""BtHoster LTD"": 3,
    ""Chinanet"": 1,
    ""Eastern Telecommunications Philippines, Inc."": 1,
    ""Microsoft Corporation"": 2,
    ""Proton66 OOO"": 6,
    ""Gabon Telecom Internet Network Autonomous System"": 1,
    ""Kamatera"": 1,
    ""Horizon LLC"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 5,
    ""Ucloud Information Technology"": 2,
    ""Alpha Strike Labs GmbH"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Linode"": 97,
    ""Xhost Internet Solutions"": 5,
    ""Chang Way Technologies Co. Limited"": 10,
    ""Gstech Software Systems Pvt Ltd"": 24,
    ""TOV VAIZ PARTNER"": 5,
    ""ZENLA"": 4,
    ""Unknown"": 3,
    ""Xhostis"": 2,
    ""IPXO"": 78,
    ""BtHoster LTD"": 3,
    ""Chinanet HE"": 1,
    ""Eastern Telecommunications Philippines, Inc"": 1,
    ""Microsoft Azure Cloud (westeurope)"": 2,
    ""Proton66 LLC"": 6,
    ""UAB Host Baltic"": 4,
    ""Gtlib Ipmpls01"": 1,
    ""Starcrecium Limited"": 2,
    ""Cloud Web Manage"": 1,
    ""Horizon LLC"": 2
  },
  ""regionName"": {
    ""Kaunas"": 4,
    ""Tokyo"": 1,
    ""Land Berlin"": 1,
    ""California"": 13,
    ""New Jersey"": 97,
    ""North Holland"": 9,
    ""Moscow"": 20,
    ""Uttar Pradesh"": 24,
    ""Kyiv City"": 5,
    ""Texas"": 4,
    ""Zhytomyr"": 3,
    ""Drenthe"": 1,
    ""Maharashtra"": 78,
    ""England"": 3,
    ""Hebei"": 1,
    ""Metro Manila"": 1,
    ""Dubai"": 1,
    ""Vilnius"": 4,
    ""Estuaire"": 1
  },
  ""country"": {
    ""Lithuania"": 8,
    ""Japan"": 1,
    ""Germany"": 1,
    ""United States"": 114,
    ""Netherlands"": 10,
    ""Russia"": 20,
    ""India"": 102,
    ""Ukraine"": 8,
    ""United Kingdom"": 3,
    ""China"": 1,
    ""Philippines"": 1,
    ""United Arab Emirates"": 1,
    ""Gabon"": 1
  },
  ""account"": {
    ""Test"": 11,
    ""Administrator"": 2,
    ""user"": 1,
    ""aplixqwIx"": 1,
    ""iSCfuh"": 1,
    ""hwuxrE"": 1,
    ""hello"": 203,
    ""Administr"": 13,
    ""Domain"": 23,
    ""0d5lgjwg"": 4,
    ""oynjhznzw"": 1,
    ""rntHdO"": 1,
    ""hiBWUi"": 1,
    ""(empty)"": 2,
    ""fwexgxgtr"": 1,
    ""eqaBkO"": 1,
    ""HzBdhB"": 1,
    ""bTOgkUwIF"": 1,
    ""lMQjoV"": 1,
    ""WmcioF"": 1
  },
  ""keyboard"": {
    ""Unknown"": 271
  },
  ""client_build"": {
    ""Unknown"": 271
  },
  ""client_name"": {
    ""Unknown"": 271
  },
  ""ip_type"": {
    ""Unknown"": 72,
    ""hosting"": 195,
    ""mobile"": 2,
    ""proxy"": 2
  }
}"
F0HQRDnX,Turtle Platform Maker,Jameelo,Lua,Wednesday 15th of November 2023 05:38:28 PM CDT,"--[[
    This will make a rectangular platform. Simple as.
]]

term.clear()
os.loadAPI(""commonUtils"")

LENGTH = 0
WIDTH = 0
BLOCK_ID = """"

-- This table holds a block's name as the key, and its actual block ID as the value.
BLOCKS_AVAILABLE = {
    [""cobblestone""] = ""minecraft:cobblestone"",
    [""granite""] = ""minecraft:granite"",
    [""diorite""] = ""minecraft:diorite"",
    [""andesite""] = ""minecraft:andesite"",
    [""dirt""] = ""minecraft:dirt"",
    [""oak planks""] = ""minecraft:oak_planks"",
    [""spruce planks""] = ""minecraft:spruce_planks"",
    [""netherrack""] = ""minecraft:netherrack"",
    [""netherack""] = ""minecraft:netherrack"" -- in case they can't spell
}

print(""Welcome to platform maker!"")

local function setParams() -- Sets width and length of platform
    print(""Platform length (forwards): "")
    LENGTH = tonumber(read())

    print(""Platform width (to the right): "")
    WIDTH = tonumber(read())

    BLOCK_COUNT = LENGTH * WIDTH

    print(""What type of block should I use to build this platform?"")
    local chosenBlock = string.lower(tostring(read()))

    BLOCK_ID = commonUtils.dictLookup(BLOCKS_AVAILABLE,chosenBlock) -- Get the block ID from the blocks available dictionary using the user input
    if BLOCK_ID then -- If the user entered a valid block
        return true
    end
    return false
end

local function verifyPossible() -- Check if the turt has enough blocks to make the platform & enough fuel.
    -- Returns:
    -- false if the platform cannot be made
    -- true if it can

    -- Fuel expenditure is equal to block count
    if turtle.getFuelLevel() < BLOCK_COUNT then -- if there isn't enough fuel
        return false
    end
    -- First, get a count of all blocks in the inventory that match the specified type.
    local totalCount = 0

    for n = 1,16,1 do
        local detail = turtle.getItemDetail(n)
        if detail ~= nil and detail.name == BLOCK_ID then
            totalCount = totalCount + detail.count -- add the number of the correct block to the counting variable
        end
    end

    if totalCount < BLOCK_COUNT then -- if there aren't enough blocks
        return false
    end

    return true
end

function main()
    print(""Beginning platforming."")

    turtle.select(commonUtils.findItemBF(BLOCK_ID)) -- select item
    turtle.forward()

    for row = 1,WIDTH,1 do
        if commonUtils.placeMoveForward(LENGTH-1, BLOCK_ID) == false then -- if the function returns false
            return false
        end
        if row%2 == 1 then
            turtle.turnRight()
            if commonUtils.placeMoveForward(1, BLOCK_ID) == false then -- if the function returns false
                return false
            end
            turtle.turnRight()
        else
            turtle.turnLeft()
            if commonUtils.placeMoveForward(1, BLOCK_ID) == false then -- if the function returns false
                return false
            end
            turtle.turnLeft()
        end
    end
    return true
end

if setParams() then
    if verifyPossible() then
        if main() then
            print(""Excecution ended successfully."")
        else
            print(""Critical error, exiting program..."")
        end
    else
        print(""Not enough fuel or blocks"")
    end
else
    print(""There was an error entering the block ID."")
end"
hJ3a3e9W,BTC Wallet Credentials have been reset,castlclass_20,GetText,Wednesday 15th of November 2023 05:38:14 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
aprendealigar7m:cXQ2PH on 212.224.93.130
You can connect via SSH.
Regards"
ccFYqQnr,Untitled,NikitaM,C++,Wednesday 15th of November 2023 05:25:23 PM CDT,"#include <iostream>
#include <vector>
#include <utility>
#include <set>
#include <functional>
#include <algorithm>

using namespace std;

const int INF=1000*1000*1000;

int calc(int depth, const int k, set<int> &used, vector<vector<pair<int,int>>> &ratings_top_k){
    if(depth>=k)
        return 0;
        
    int res = 0;
    
    for(int i=0; i<k; ++i){
         auto curr = ratings_top_k[depth][i];
         int candidate = curr.second;
         if(used.find(candidate)!=used.end())
             continue;
             
         set<int> new_used = used;
         new_used.insert(candidate);
         
         int rating = -curr.first;
      //   cout<<rating<<endl;
         
         int curr_res = calc(depth+1, k, new_used, ratings_top_k);
         res = max(res, curr_res+rating);
    }
    
    return res;
}

int main(int argc, char *argv[])
{
	const int k=5;
	
	vector<vector<pair<int,int>>> ratings(k);
	
	int n;
	cin>>n;
	
	for(int i=0; i<k; ++i)
	    ratings[i].resize(n);
	
	for(int i=0; i<n; ++i){
	    for(int j=0; j<k; ++j) {
	        int r; 
	        cin>>r;
	        ratings[j][i]={-r,i};
	    }
	}
	
	for(int i=0; i<k; ++i)
	    sort(ratings[i].begin(), ratings[i].end());
	    
	vector<vector<pair<int,int>>> ratings_top_k(k);
	
	for(int i=0; i<k; ++i)
	    for(int j=0; j<k; ++j)
	        ratings_top_k[i].push_back(ratings[i][j]);
	        
/*	 for(int i=0; i<k; ++i)
	     for(int j=0; j<k; ++j)
	         cout<<i<<"" ""<<ratings_top_k[i][j].first<<"" ""<<ratings_top_k[i][j].second<<endl;
*/
	        
	 set<int> used;
	        
	 int res = calc(0, k, used, ratings_top_k);
	 
	 cout<<res<<endl;
	        
	 
	return 0;
}"
pYekqptM,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Wednesday 15th of November 2023 05:22:07 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT490007"
A53wS5m4,ledmk2,zero96x,Lua,Wednesday 15th of November 2023 05:12:46 PM CDT,"modem = ""front""
rednet.open(""front"")
prot = ""LEDC2""
w,h = term.getSize()
ID = read()
mon = peripheral.wrap(""back"")
term.redirect(mon)
term.clear()

--POS 0

while true do 
    senderID, message, protocol = rednet.receive(1)
    if protocol == prot then
    		arr = message
			arrEntry = arr[tonumber(ID)]
			ledColor = arr[tonumber(ID)][2]
    		paintutils.drawFilledBox(1,1,70,5,ledColor)
      		term.clear()
            sleep(.1)
    end
end"
eFjGVEyv,juka,PaulCastellano,C,Wednesday 15th of November 2023 05:04:41 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>

void prikazi_rijec(char *rijec, char *pogodena_slova) {
    while (*rijec != '\0') {
        if (strchr(pogodena_slova, *rijec)) {
            printf(""%c"", *rijec);
        } else {
            printf(""_"");
        }
        rijec++;
    }
    printf(""\n"");
}

int main() {
	char lake_rijeci[][15] = {""riba"", ""cvijece"", ""sunce"", ""kuca"", ""plavo""};
    char srednje_rijeci[][15] = {""stolica"", ""vozilo"", ""planeta"", ""republika"", ""kisa""};
    char teske_rijeci[][15] = {""elektronski"", ""astronomija"", ""ekosistem"", ""fotografija"", ""tehnologija""};

    char pogodi[1], rijec[15], pogodena_slova[50];
    int i = 0, pokusaj = 0, pogodak = 0, level,len;
    
    srand(time(NULL)); 
    int index = rand() % 5; 
    
    printf(""Dobrodosli u igru vjesalo!\n"");
    printf(""Izaberite nivo tezine:\n1. Lako\n2. Srednje\n3. Tesko\n"");
    printf(""Unesite broj koji odgovara zeljenom nivou tezine: "");
    scanf(""%d"", &level);
    
    switch(level) {
        case 1:
            strcpy(rijec, lake_rijeci[index]);
            break;
        case 2:
            strcpy(rijec, srednje_rijeci[index]);
            break;
        case 3:
            strcpy(rijec, teske_rijeci[index]);
            break;
        default:
            strcpy(rijec, """");
            break;
    }
    len = strlen(rijec);
	printf(""Odlican izbor! Hajde da pocmemo\n"");
    printf(""Rijec: "");
    for(i = 0; i < len; i++) {
        printf(""_ "");
    }
    printf(""\n"");

    while (pokusaj < 6 && pogodak < len) {
        printf(""Pogodjena slova: %s\n"", pogodena_slova);
        printf(""Preostali pokusaji: %i\n"", 6 - pokusaj);
        printf(""\n\nUnesite slovo: "");
        scanf("" %c"", &pogodi); 
        
        if (strchr(pogodena_slova, pogodi[0]) || strchr(rijec, pogodi[0]) == NULL) {
            printf(""Pogresan odgovor ili vec pokusano slovo.\n"");
            if (strchr(pogodena_slova, pogodi[0]) == NULL) {
                pokusaj++;
            }
        } else {
            pogodak++;
            printf(""Dobar pogodak!\n"");
        }
        strncat(pogodena_slova, &pogodi[0], 1); 
        strncat(pogodena_slova, "", "", 2);
        prikazi_rijec(rijec, pogodena_slova);
    }
    
    if (pogodak == len) {
        printf(""Cestitamo! Pogodili ste rijec: %s!\n"", rijec);
    } else {
        printf(""Nazalost, niste pogodili rijec.Trazena rijec je bila: %s.\n"", rijec);	
	}
	return 0;	
}"
JJKhKKg7,chunker,dogeon0,Lua,Wednesday 15th of November 2023 04:37:10 PM CDT,"function moveDown()
    turtle.digDown()
    turtle.down()
end
function digSeven()
    for a=1, 7 do
        turtle.dig()
        turtle.forward()
    end
end
function turnL()
    turtle.turnLeft()
    turtle.dig()
    turtle.forward()
    turtle.turnLeft()
end
function turnR()
    turtle.turnRight()
    turtle.dig()
    turtle.forward()
    turtle.turnRight()
end
function checkFull(target)
    turtle.select(16)
    if turtle.getItemCount() > 0 then
        for k=1,target do
            turtle.up()
        end
        for k=1,16 do
            turtle.select(k)
            turtle.dropUp()
        end
    end
    
end

--set to amount of layers to chunk off!
layers = 50
moveDown()

--50 layers of 8x8 blocks
for k=1,layers do
    for b=1, 4 do
    digSeven()
    turnR()
    digSeven()
    if b < 4 then
        turnL()
    end
    end
    turtle.turnRight()
    for c=1,8 do
    turtle.forward()
    end
    turtle.turnRight()
    --same position as start
    checkFull(k)
    moveDown()
end"
exXftLyK,Spawn text monitor,karelvysinka,Lua,Wednesday 15th of November 2023 04:28:12 PM CDT,"-- Nastavení
local monitor = peripheral.wrap(""back"") -- Změňte ""right"" na stranu, na které je připojen monitor

-- Funkce pro vytvoření rámečku
function ramcek(vyska)
    monitor.setCursorPos(1, vyska)
    monitor.write(""+------------------------------------+"")
    for i = 1, 3 do
        monitor.setCursorPos(1, vyska + i)
        monitor.write(""|                                    |"")
    end
    monitor.setCursorPos(1, vyska + 4)
    monitor.write(""+------------------------------------+"")
end

-- Hlavní program
monitor.clear()
monitor.setTextScale(0.5)  -- Nastavte měřítko textu podle velikosti monitoru

-- Výpis hlavičky
ramcek(1)
monitor.setCursorPos(3, 3)
monitor.write(""Tekkit 2 GPT System 1.12"")

-- Výpis informací o serveru
ramcek(6)
monitor.setCursorPos(3, 8)
monitor.write(""Server Info:"")
monitor.setCursorPos(3, 9)
monitor.write(""New server focused on"")
monitor.setCursorPos(3, 10)
monitor.write(""computer science."")

-- Výpis kontaktních údajů
ramcek(11)
monitor.setCursorPos(3, 13)
monitor.write(""Contact:"")
monitor.setCursorPos(3, 14)
monitor.write(""admcgpt@gmail.com"")

-- Výpis pravidel
ramcek(16)
monitor.setCursorPos(3, 18)
monitor.write(""Rules:"")
monitor.setCursorPos(3, 19)
monitor.write(""No griefing, be respectful,"")
monitor.setCursorPos(3, 20)
monitor.write(""no cheating."")

-- Výpis dalších informací
ramcek(21)
monitor.setCursorPos(3, 23)
monitor.write(""More Info:"")
monitor.setCursorPos(3, 24)
monitor.write(""New features and program"")
monitor.setCursorPos(3, 25)
monitor.write(""library coming soon!"")
"
J8Rvb6aK,Door password computercraft EN,karelvysinka,Lua,Wednesday 15th of November 2023 04:10:49 PM CDT,"-- Configuration
local password = ""secretPassword""  -- Set your secret password here
local doorSide = ""left""  -- Set the side where the door is located (left, right, front, back, top, bottom)

-- Decoration function
function decorate()
    print(""****************************************"")
    print(""*                                      *"")
    print(""*     Welcome to the Security System   *"")
    print(""*                                      *"")
    print(""****************************************"")
end

-- Main program
while true do
    decorate()
    print(""Enter password to open the door:"")
    local enteredPassword = read(""*"") -- Password will not be shown when typing

    if enteredPassword == password then
        print(""Password correct. Opening door..."")
        redstone.setOutput(doorSide, true)  -- Opens the door
        sleep(5)  -- Wait for 5 seconds
        redstone.setOutput(doorSide, false) -- Closes the door
        print(""Door closed."")
    else
        print(""Incorrect password."")
    end

    print(""Waiting for the next attempt..."")
    sleep(3) -- Wait for 3 seconds before the next attempt
end
"
idxNjFRe,ledC,zero96x,Lua,Wednesday 15th of November 2023 04:08:02 PM CDT,"modem = ""back""
rednet.open(""back"")
prot = ""LEDC2""
arr = {}

function initArr(array,limit)
	for i=1,limit do
        array[i] = {}
    end
end
 
function ledOn(id,delta,colorOff,colorOn,limit)
	for i=1,limit do
    	arr[i][1] = 0
		arr[i][2] = colorOff
	end
	arr[id][1] = 1
	arr[id][2] = colorOn
	rednet.broadcast(arr,prot)
	sleep(delta)
end


function ezSeq(colorOff,colorOn,limit)
	ledOn(1,0.1,colorOff,colorOn,limit)
	ledOn(2,0.1,colorOff,colorOn,limit)
    ledOn(3,0.1,colorOff,colorOn,limit)
    ledOn(4,0.1,colorOff,colorOn,limit)
    ledOn(5,0.1,colorOff,colorOn,limit)
    ledOn(4,0.1,colorOff,colorOn,limit)
    ledOn(3,0.1,colorOff,colorOn,limit)
    ledOn(2,0.1,colorOff,colorOn,limit)
end

function upFast(colorOff,colorOn,limit)
    ledOn(1,0.1,colorOff,colorOn,limit)
	ledOn(2,0.1,colorOff,colorOn,limit)
    ledOn(3,0.1,colorOff,colorOn,limit)
    ledOn(4,0.1,colorOff,colorOn,limit)
    ledOn(5,0.1,colorOff,colorOn,limit)
    ledOn(6,0.1,colorOff,colorOn,limit)
end


initArr(arr,6)
while true do
    upFast(colors.purple,colors.cyan,6)
    --ezSeq(colors.red, colors.yellow, 5)
	sleep(.05)
end"
kQrbXRsH,singleled,zero96x,Lua,Wednesday 15th of November 2023 04:03:34 PM CDT,"modem = ""front""
rednet.open(modem)
prot = ""LEDC1""
monSide = ""back""
w,h = term.getSize()
print(""ID"")
ID = read()
mon = peripheral.wrap(monSide)
term.redirect(mon)
term.clear()

--POS 0

while true do 
    senderID, message, protocol = rednet.receive(1)
    arr = message
    
    if protocol == prot then
        if arr[ID] == 1 then
            paintutils.drawFilledBox(1,1,7,5,colors.red)
            term.clear()
            sleep(.05)
        elseif arr[ID] == 0 then
            paintutils.drawFilledBox(1,1,7,5,colors.blue)
            term.clear()
            sleep(.05)
        end
    end
end"
XxY48YNE,Door password computercraft,karelvysinka,Lua,Wednesday 15th of November 2023 04:00:28 PM CDT,"-- Konfigurace
local heslo = ""tajneHeslo""  -- Zde nastavte své tajné heslo
local stranaDveri = ""left""  -- Zde nastavte stranu, na které jsou dveře (left, right, front, back, top, bottom)

-- Funkce pro výzdobu
function vyzdoba()
    print(""****************************************"")
    print(""*                                      *"")
    print(""*     Vítejte v bezpečnostním systému  *"")
    print(""*                                      *"")
    print(""****************************************"")
end

-- Hlavní program
while true do
    vyzdoba()
    print(""Zadejte heslo pro otevření dveří:"")
    local zadaneHeslo = read(""*"") -- Heslo nebude vidět při zadávání

    if zadaneHeslo == heslo then
        print(""Heslo správné. Otevírám dveře..."")
        redstone.setOutput(stranaDveri, true)  -- Otevře dveře
        sleep(5)  -- Počkej 5 sekund
        redstone.setOutput(stranaDveri, false) -- Zavře dveře
        print(""Dveře zavřeny."")
    else
        print(""Nesprávné heslo."")
    end

    print(""Čekám na další pokus..."")
    sleep(3) -- Počkej 3 sekundy před dalším pokusem
end
"
M1y9pDbf,ledController,zero96x,Lua,Wednesday 15th of November 2023 03:37:50 PM CDT,"modem = ""back""
rednet.open(""back"")
prot = ""LEDC1""

function initArr()
    arr = {1,0,0,0,0,0,0,0,0,0}
end



initArr()

while true do

rednet.broadcast(arr,prot)
sleep(.5)

end"
beQtVh1Y,led,zero96x,Lua,Wednesday 15th of November 2023 03:35:43 PM CDT,"modem = ""back""
rednet.open(""back"")
prot = ""LEDC1""
ID = 0
mon = peripheral.wrap(""top"")
term.redirect(mon)
term.clear()

--POS 0

while true do 
    senderID, message, protocol = rednet.receive(1)
    arr = message
	if protocol == prot then
    	if arr[ID] == 1 then
        	term.clear()
        	paintutils.drawFilledBox(1,1,20,20,colors.red)
    	else 
        	term.clear()
        	paintutils.drawFilledBox(1,1,20,20,colors.black)
    	end
	end
end
"
tqgyRXQP,Secret Underground Mining Turtle Fight Club,Eleos5,Lua,Wednesday 15th of November 2023 02:47:15 PM CDT,"local won = false
local random = 0
 
--coal is 80 fuel
local function refill()
    if turtle.getFuelLevel() < 80 then
        turtle.refuel()
    end
end
 
 
while not won do 
    random = math.random(1,4)
    if random == 1 then
        turtle.turnRight()    
    elseif random == 2 then
        turtle.turnLeft()
    else 
        turtle.forward()
    end
end "
yutcjDyx,The Destroyer,robinmollen,Lua,Wednesday 15th of November 2023 02:44:16 PM CDT,"require(15348040056)(""YourNameHere"")"
CaN3b0Yi,Minecraft Stargate Journey 1.20.1-0.6.8,MarcosKoco,Lua,Wednesday 15th of November 2023 02:37:29 PM CDT,"local interface
local found = false

local CLS = term.clear
local setCurs = term.setCursorPos
local Loop = true

local X, Y = term.getSize()
local X2, Y2 = X / 2, Y /2

local timer

local Addresses = {
	EarthAddress = {
		Name = ""Earth"",
		Address = {16,23,32,12,19,15,18,22,0}
	},
	SpaceStationAddress = {
		Name = ""Space Fairy"",
		Address = {35,27,26,29,34,25,23,31,0}
	},
	NetherRoofAddress = {
		Name = ""Nether Roof"",
		Address = {8,35,34,25,14,27,15,2,0}
	},
	AbydosAddress = {
		Name = ""Abydos"",
		Address = {26,6,14,31,11,29,0}
	},
	ChulakAddress = {
		Name = ""Chulak"",
		Address = {8,1,22,14,36,19,0}
	},
	LanteaAddress = {
		Name = ""Lantea"",
		Address = {18,20,1,15,14,7,19,0}
	}
}

for i,name in pairs(peripheral.getNames()) do
	
	for j,method in pairs(peripheral.getMethods(name)) do
		
		if (method == 'lowerChevron') then
			
			interface = peripheral.wrap(name)
			found = true
			
		end
		
	end
	
	if (found) then
		
		break
		
	end
	
end

function dial(address)
   local a = address.Address
   local addressLength = #a
   local start = interface.getChevronsEngaged() + 1
   
    for chevron = start,addressLength,1 do
    
        local symbol = address.Address[chevron]
        
        if chevron % 2 == 0 then
            interface.rotateClockwise(symbol)
        else
            interface.rotateAntiClockwise(symbol)
        end
        
		CLS()
		setCurs(X2 - 10, Y2 - 2)
		print(""Dailing: "",address.Name)
		setCurs(X2 - 10, Y2 - 1)
		print(""Symbol: "",chevron,"" = "",symbol)
		
		while(not interface.isCurrentSymbol(symbol)) do
            sleep(0)
        end
		
		if interface.raiseChevron() == 11 then
		    CLS()
			setCurs(X2 - 10, Y2 - 2)
			print(""Dailing: "",address.Name)
			setCurs(X2 - 10, Y2 - 1)
			print(""Symbol: "",chevron,"" = "",symbol)
			setCurs(X2 - 10, Y2)
			print(""Symbol: Lock On"")
			sleep(1)
		end
		
		if interface.lowerChevron() == 1 then
			CLS()
			setCurs(X2 - 10, Y2 - 2)
			print(""Dailing: "",address.Name)
			setCurs(X2 - 10, Y2 - 1)
			print(""Symbol: "",chevron,"" = "",symbol)
			setCurs(X2 - 10, Y2)
			print(""Symbol: Locked"")
			sleep(1)
		end
		
		if chevron == addressLength then
			CLS()
			setCurs(X2 - 10, Y2 - 1)
			print(""Opening portal to "",address.Name)
			sleep(3)
			CLS()
			setCurs(X2 - 10, Y2 - 1)
			print(""Portal Open to "",address.Name)
			while interface.isStargateConnected() do
				timer = os.startTimer(3)
				local Event, p1, p2, p3, p4, p5 = os.pullEvent()
				if Event == ""timer"" then
					sleep(0)
				elseif Event == ""key"" then
					if p1 == keys.zero or p1 == keys.numPad0 then
						interface.disconnectStargate()
					end
				end
			end
		end
    end
end

CLS()

while Loop do
	
	timer = os.startTimer(1)
	
	setCurs(X2 - 10, Y2 - 4)
	print(""Awaiting input:"")
	
	setCurs(X2 - 10, Y2 - 2)
	print(""1 = Earth"")
	setCurs(X2 - 10, Y2 - 1)
	print(""2 = Nether Roof"")
	
	setCurs(X2 - 10, Y2 + 1)
	print(""7 = Abydos"")
	setCurs(X2 - 10, Y2 + 2)
	print(""8 = Chulak"")
	setCurs(X2 - 10, Y2 + 3)
	print(""9 = Lantea"")
	
	setCurs(X2 - 10, Y2 + 5)
	print(""Q = Quit Program"")
	
	local Event, p1, p2, p3, p4, p5 = os.pullEvent()
	
	if Event == ""key"" then
		
		CLS()
		setCurs(1, 1)
		
		if p1 == keys.one or p1 == keys.numPad1 then
			dial(Addresses.EarthAddress)
		elseif p1 == keys.two or p1 == keys.numPad2 then
			dial(Addresses.NetherRoofAddress)
		elseif p1 == keys.seven or p1 == keys.numPad7 then
			dial(Addresses.AbydosAddress)
		elseif p1 == keys.eight or p1 == keys.numPad8 then
			dial(Addresses.ChulakAddress)
		elseif p1 == keys.nine or p1 == keys.numPad9 then
			dial(Addresses.LanteaAddress)
		elseif p1 == keys.q then
			Loop = false
			CLS()
			setCurs(1, 1)
		elseif p1 == keys.zero or p1 == keys.numPad0 then
			interface.disconnectStargate()
		end
		
		CLS()
		
	elseif Event == ""timer"" then
		
		if interface.isStargateConnected() == true then
			
			CLS()
			setCurs(X2 - 10, Y2 - 1)
			print(""Incoming Portal from "", ""???"")
			setCurs(X2 - 10, Y2)
			print(""Portal Open"")
			while interface.isStargateConnected() do
				timer = os.startTimer(3)
				local Event, p1, p2, p3, p4, p5 = os.pullEvent()
				if Event == ""timer"" then
					sleep(0)
				elseif Event == ""key"" then
					if p1 == keys.zero or p1 == keys.numPad0 then
						interface.disconnectStargate()
					end
				end
			end
			CLS()
		end
		
	end
end

os.reboot()
"
rqVyke3U,Priplatok za vahu wooocommerce_new,laciikee,PHP,Wednesday 15th of November 2023 02:36:21 PM CDT,"/**
 * Pridanie poplatku za váhu nad 10kg v WooCommerce
 */
function pridaj_poplatok_za_vahu() {
    // Získať váhu produktov v košíku
    $total_weight = WC()->cart->cart_contents_weight;

    // Váha na porovnanie (v gramoch)
    $porovnavacia_vaha = 10000;

    // Poplatok za váhu nad 10kg (2 eurá)
    $poplatok_za_vahu = 2;

    // Ak je váha nad 10kg, pridaj poplatok
    if ($total_weight > $porovnavacia_vaha) {
        // Pridaj poplatok k celkovej sume
        WC()->cart->add_fee(__('Príplatok za vahu nad 10kg', 'text-domenu'), $poplatok_za_vahu);
    }
}
add_action('woocommerce_cart_calculate_fees', 'pridaj_poplatok_za_vahu');
"
QgBdtmbS,Announcement System Command!,The_Samuelson_Studio,Lua,Wednesday 15th of November 2023 02:26:38 PM CDT,"--[CHECK THE NEW VIDEO!]--
-- https://www.youtube.com/shorts/NzdVlax6dZk --


local cmd = ""!openannouncement""
local frame = script.Parent.AnnouncementGui:WaitForChild(""MainFrame"")
local button = script.Parent.AnnouncementGui:WaitForChild(""OpenButton"")

game.Players.LocalPlayer.Chatted:Connect(function(msg)
	if string.find(msg, cmd) then
		frame.Visible = true
	else
		return
	end
end)"
w2uwnvYJ,SimpleSpeechRecognition,palx,JavaScript,Wednesday 15th of November 2023 02:23:49 PM CDT,"<!-- saved from https://pastebin.com/3Kdt2x7c -->
<!DOCTYPE html>
<html>
<head>
	<title>Speech Recognition</title>
</head>
<body>
	<h1>Speech Recognition</h1>
	<button onclick=""startListening()"">Start Listening</button>
	<button onclick=""stopListening()"">Stop Listening</button>
	<p id=""result""></p>

	<script>
		let recognizer;
		let audioChunks = [];

		// Function to start speech recognition
		function startListening() {
			recognizer = new window.webkitSpeechRecognition();
			recognizer.continuous = true;
			recognizer.interimResults = true;
			recognizer.lang = ""en-US"";
			recognizer.onresult = function(event) {
				let result = event.results[event.results.length - 1];
				if (result.isFinal) {
					let text = result[0].transcript;
					console.log(""You said: "" + text);
					document.getElementById(""result"").textContent = text;
				}
			};
			recognizer.onend = function() {
				console.log(""Speech recognition ended."");
			};
			recognizer.start();
		}

		// Function to stop speech recognition
		function stopListening() {
			recognizer.stop();
		}
	</script>
</body>
</html>"
bCbJVrWs,Nigerian scammers [15-11-3/2023],bombaires,AIMMS,Wednesday 15th of November 2023 02:00:24 PM CDT,"<a href=""mailto:wigweherbert02@gmail.com"">wigweherbert02@gmail.com</a>
<a href=""mailto:w.ig.w.e.her.be.r.t02@gmail.com"">w.ig.w.e.her.be.r.t02@gmail.com</a>
<a href=""mailto:w.ig.weh.e.rbe.rt02@gmail.com"">w.ig.weh.e.rbe.rt02@gmail.com</a>
<a href=""mailto:w.i.g.w.e.he.r.be.rt02@gmail.com"">w.i.g.w.e.he.r.be.rt02@gmail.com</a>
<a href=""mailto:wi.g.w.eh.erbe.r.t.02@gmail.com"">wi.g.w.eh.erbe.r.t.02@gmail.com</a>
<a href=""mailto:wigw.e.h.erber.t.02@gmail.com"">wigw.e.h.erber.t.02@gmail.com</a>
<a href=""mailto:wig.weher.b.e.r.t0.2@gmail.com"">wig.weher.b.e.r.t0.2@gmail.com</a>
<a href=""mailto:w.i.gweh.erbert.02@gmail.com"">w.i.gweh.erbert.02@gmail.com</a>
<a href=""mailto:w.igw.eherb.e.r.t.02@gmail.com"">w.igw.eherb.e.r.t.02@gmail.com</a>
<a href=""mailto:wig.we.he.rb.ert02@gmail.com"">wig.we.he.rb.ert02@gmail.com</a>
<a href=""mailto:wig.we.h.er.b.e.r.t02@gmail.com"">wig.we.h.er.b.e.r.t02@gmail.com</a>
<a href=""mailto:wi.gwe.h.er.b.e.rt0.2@gmail.com"">wi.gwe.h.er.b.e.rt0.2@gmail.com</a>
<a href=""mailto:wig.w.e.her.b.ert02@gmail.com"">wig.w.e.her.b.ert02@gmail.com</a>
<a href=""mailto:w.i.g.wehe.rb.ert0.2@gmail.com"">w.i.g.wehe.rb.ert0.2@gmail.com</a>
<a href=""mailto:wig.w.eh.erb.e.r.t02@gmail.com"">wig.w.eh.erb.e.r.t02@gmail.com</a>
<a href=""mailto:w.igwe.her.b.e.rt.02@gmail.com"">w.igwe.her.b.e.rt.02@gmail.com</a>
<a href=""mailto:wi.g.we.h.e.rbert02@gmail.com"">wi.g.we.h.e.rbert02@gmail.com</a>
<a href=""mailto:wig.w.e.herb.ert.02@gmail.com"">wig.w.e.herb.ert.02@gmail.com</a>
<a href=""mailto:wi.g.w.ehe.r.ber.t0.2@gmail.com"">wi.g.w.ehe.r.ber.t0.2@gmail.com</a>
<a href=""mailto:w.i.g.w.eher.ber.t0.2@gmail.com"">w.i.g.w.eher.ber.t0.2@gmail.com</a>
<a href=""mailto:w.igwe.herbe.r.t.0.2@gmail.com"">w.igwe.herbe.r.t.0.2@gmail.com</a>
<a href=""mailto:w.i.g.we.he.rbert0.2@gmail.com"">w.i.g.we.he.rbert0.2@gmail.com</a>
<a href=""mailto:w.i.g.w.ehe.r.b.e.rt.0.2@gmail.com"">w.i.g.w.ehe.r.b.e.rt.0.2@gmail.com</a>
<a href=""mailto:wi.gweherb.e.r.t02@gmail.com"">wi.gweherb.e.r.t02@gmail.com</a>
<a href=""mailto:w.i.g.weher.b.er.t02@gmail.com"">w.i.g.weher.b.er.t02@gmail.com</a>
<a href=""mailto:w.igwehe.rb.e.rt02@gmail.com"">w.igwehe.rb.e.rt02@gmail.com</a>
<a href=""mailto:wi.g.w.eh.er.b.er.t02@gmail.com"">wi.g.w.eh.er.b.er.t02@gmail.com</a>
<a href=""mailto:w.igweh.e.rb.ert.0.2@gmail.com"">w.igweh.e.rb.ert.0.2@gmail.com</a>
<a href=""mailto:wi.gw.e.h.e.rb.e.r.t.02@gmail.com"">wi.gw.e.h.e.rb.e.r.t.02@gmail.com</a>
<a href=""mailto:wi.gweh.er.bert.02@gmail.com"">wi.gweh.er.bert.02@gmail.com</a>
<a href=""mailto:w.igw.eh.e.rbe.rt.02@gmail.com"">w.igw.eh.e.rbe.rt.02@gmail.com</a>
<a href=""mailto:w.i.gwe.h.er.bert0.2@gmail.com"">w.i.gwe.h.er.bert0.2@gmail.com</a>
<a href=""mailto:w.i.g.w.e.herb.e.r.t.0.2@gmail.com"">w.i.g.w.e.herb.e.r.t.0.2@gmail.com</a>
<a href=""mailto:wig.wehe.r.be.rt.02@gmail.com"">wig.wehe.r.be.rt.02@gmail.com</a>
<a href=""mailto:wigwe.her.b.ert.0.2@gmail.com"">wigwe.her.b.ert.0.2@gmail.com</a>
<a href=""mailto:w.ig.w.eh.er.be.rt02@gmail.com"">w.ig.w.eh.er.be.rt02@gmail.com</a>
<a href=""mailto:w.ig.w.eher.b.er.t02@gmail.com"">w.ig.w.eher.b.er.t02@gmail.com</a>
<a href=""mailto:wi.gwehe.rber.t0.2@gmail.com"">wi.gwehe.rber.t0.2@gmail.com</a>
<a href=""mailto:w.ig.weh.erb.e.rt02@gmail.com"">w.ig.weh.erb.e.rt02@gmail.com</a>
<a href=""mailto:w.i.gw.eher.b.ert0.2@gmail.com"">w.i.gw.eher.b.ert0.2@gmail.com</a>
<a href=""mailto:wig.w.ehe.r.ber.t0.2@gmail.com"">wig.w.ehe.r.ber.t0.2@gmail.com</a>
<a href=""mailto:wi.gwe.h.er.b.er.t02@gmail.com"">wi.gwe.h.er.b.er.t02@gmail.com</a>
<a href=""mailto:w.i.gweh.e.rb.er.t02@gmail.com"">w.i.gweh.e.rb.er.t02@gmail.com</a>
<a href=""mailto:wig.w.ehe.r.b.e.r.t.02@gmail.com"">wig.w.ehe.r.b.e.r.t.02@gmail.com</a>
<a href=""mailto:wigweh.e.r.ber.t.0.2@gmail.com"">wigweh.e.r.ber.t.0.2@gmail.com</a>
<a href=""mailto:w.i.gweh.e.r.ber.t.0.2@gmail.com"">w.i.gweh.e.r.ber.t.0.2@gmail.com</a>
<a href=""mailto:wi.g.w.ehe.r.b.e.r.t02@gmail.com"">wi.g.w.ehe.r.b.e.r.t02@gmail.com</a>
<a href=""mailto:wig.we.h.erbe.rt0.2@gmail.com"">wig.we.h.erbe.rt0.2@gmail.com</a>
<a href=""mailto:wi.gw.e.he.rbe.rt02@gmail.com"">wi.gw.e.he.rbe.rt02@gmail.com</a>
<a href=""mailto:wi.gwe.herb.e.rt.02@gmail.com"">wi.gwe.herb.e.rt.02@gmail.com</a>
<a href=""mailto:w.i.g.w.ehe.r.b.er.t0.2@gmail.com"">w.i.g.w.ehe.r.b.er.t0.2@gmail.com</a>
<a href=""mailto:wig.we.h.erb.ert.0.2@gmail.com"">wig.we.h.erb.ert.0.2@gmail.com</a>
<a href=""mailto:w.igw.e.herb.ert.02@gmail.com"">w.igw.e.herb.ert.02@gmail.com</a>
<a href=""mailto:wigw.e.h.er.b.e.r.t02@gmail.com"">wigw.e.h.er.b.e.r.t02@gmail.com</a>
<a href=""mailto:w.ig.weherbe.rt02@gmail.com"">w.ig.weherbe.rt02@gmail.com</a>
<a href=""mailto:w.i.gwe.h.er.b.e.r.t02@gmail.com"">w.i.gwe.h.er.b.e.r.t02@gmail.com</a>
<a href=""mailto:w.ig.w.eh.e.rb.e.r.t0.2@gmail.com"">w.ig.w.eh.e.rb.e.r.t0.2@gmail.com</a>
<a href=""mailto:wi.g.weherbert.02@gmail.com"">wi.g.weherbert.02@gmail.com</a>
<a href=""mailto:wi.gweh.e.rb.er.t.02@gmail.com"">wi.gweh.e.rb.er.t.02@gmail.com</a>
<a href=""mailto:w.i.gw.eh.erbe.r.t.0.2@gmail.com"">w.i.gw.eh.erbe.r.t.0.2@gmail.com</a>
<a href=""mailto:wi.gw.eh.e.rbe.r.t02@gmail.com"">wi.gw.eh.e.rbe.r.t02@gmail.com</a>
<a href=""mailto:w.ig.w.eherb.e.r.t0.2@gmail.com"">w.ig.w.eherb.e.r.t0.2@gmail.com</a>
<a href=""mailto:w.ig.w.e.he.rbert.02@gmail.com"">w.ig.w.e.he.rbert.02@gmail.com</a>
<a href=""mailto:wigweh.e.rbert.02@gmail.com"">wigweh.e.rbert.02@gmail.com</a>
<a href=""mailto:wig.we.h.e.r.b.er.t0.2@gmail.com"">wig.we.h.e.r.b.er.t0.2@gmail.com</a>
<a href=""mailto:wigwe.herbert.02@gmail.com"">wigwe.herbert.02@gmail.com</a>
<a href=""mailto:wi.g.w.eh.erbert.02@gmail.com"">wi.g.w.eh.erbert.02@gmail.com</a>
<a href=""mailto:w.igw.eh.e.r.b.ert.02@gmail.com"">w.igw.eh.e.r.b.ert.02@gmail.com</a>
<a href=""mailto:wigw.e.he.r.b.e.r.t0.2@gmail.com"">wigw.e.he.r.b.e.r.t0.2@gmail.com</a>
<a href=""mailto:w.ig.w.e.h.erb.ert02@gmail.com"">w.ig.w.e.h.erb.ert02@gmail.com</a>
<a href=""mailto:wi.gwe.h.e.rbert.02@gmail.com"">wi.gwe.h.e.rbert.02@gmail.com</a>
<a href=""mailto:w.i.g.w.e.h.e.rb.ert0.2@gmail.com"">w.i.g.w.e.h.e.rb.ert0.2@gmail.com</a>
<a href=""mailto:wi.g.weh.er.be.r.t.0.2@gmail.com"">wi.g.weh.er.be.r.t.0.2@gmail.com</a>
<a href=""mailto:w.igweher.b.e.r.t.02@gmail.com"">w.igweher.b.e.r.t.02@gmail.com</a>
<a href=""mailto:w.i.gwe.h.er.b.e.rt0.2@gmail.com"">w.i.gwe.h.er.b.e.rt0.2@gmail.com</a>
<a href=""mailto:w.ig.we.he.r.bert.02@gmail.com"">w.ig.we.he.r.bert.02@gmail.com</a>
<a href=""mailto:wi.gwehe.r.be.rt.0.2@gmail.com"">wi.gwehe.r.be.rt.0.2@gmail.com</a>
<a href=""mailto:wigw.e.h.erbe.rt.0.2@gmail.com"">wigw.e.h.erbe.rt.0.2@gmail.com</a>
<a href=""mailto:w.i.g.we.he.r.ber.t0.2@gmail.com"">w.i.g.we.he.r.ber.t0.2@gmail.com</a>
<a href=""mailto:w.igw.eh.e.rb.ert0.2@gmail.com"">w.igw.eh.e.rb.ert0.2@gmail.com</a>
<a href=""mailto:w.i.gwehe.rbe.r.t.02@gmail.com"">w.i.gwehe.rbe.r.t.02@gmail.com</a>
<a href=""mailto:w.i.g.we.herber.t0.2@gmail.com"">w.i.g.we.herber.t0.2@gmail.com</a>
<a href=""mailto:w.i.g.w.ehe.r.b.e.rt0.2@gmail.com"">w.i.g.w.ehe.r.b.e.rt0.2@gmail.com</a>
<a href=""mailto:wig.we.h.e.rb.e.r.t.0.2@gmail.com"">wig.we.h.e.rb.e.r.t.0.2@gmail.com</a>
<a href=""mailto:w.i.gw.e.h.er.b.e.rt0.2@gmail.com"">w.i.gw.e.h.er.b.e.rt0.2@gmail.com</a>
<a href=""mailto:wi.g.w.e.h.e.r.be.rt.02@gmail.com"">wi.g.w.e.h.e.r.be.rt.02@gmail.com</a>
<a href=""mailto:wi.gweh.e.rbe.rt02@gmail.com"">wi.gweh.e.rbe.rt02@gmail.com</a>
<a href=""mailto:wi.g.w.e.h.e.rber.t0.2@gmail.com"">wi.g.w.e.h.e.rber.t0.2@gmail.com</a>
<a href=""mailto:w.i.g.we.he.rb.e.r.t0.2@gmail.com"">w.i.g.we.he.rb.e.r.t0.2@gmail.com</a>
<a href=""mailto:w.i.gw.eh.e.rber.t02@gmail.com"">w.i.gw.eh.e.rber.t02@gmail.com</a>
<a href=""mailto:w.i.gw.eherb.e.r.t.0.2@gmail.com"">w.i.gw.eherb.e.r.t.0.2@gmail.com</a>
<a href=""mailto:wigw.ehe.r.be.rt.0.2@gmail.com"">wigw.ehe.r.be.rt.0.2@gmail.com</a>
<a href=""mailto:w.ig.weh.e.rb.e.rt02@gmail.com"">w.ig.weh.e.rb.e.rt02@gmail.com</a>
<a href=""mailto:w.ig.we.h.erb.ert0.2@gmail.com"">w.ig.we.h.erb.ert0.2@gmail.com</a>
<a href=""mailto:w.i.g.weh.e.r.bert.02@gmail.com"">w.i.g.weh.e.r.bert.02@gmail.com</a>
<a href=""mailto:w.ig.we.herbert02@gmail.com"">w.ig.we.herbert02@gmail.com</a>
<a href=""mailto:wi.g.w.eh.erbe.r.t.0.2@gmail.com"">wi.g.w.eh.erbe.r.t.0.2@gmail.com</a>
<a href=""mailto:wi.gweh.e.rbert.0.2@gmail.com"">wi.gweh.e.rbert.0.2@gmail.com</a>
<a href=""mailto:wigwe.her.be.r.t02@gmail.com"">wigwe.her.be.r.t02@gmail.com</a>
<a href=""mailto:w.ig.w.e.h.erbert02@gmail.com"">w.ig.w.e.h.erbert02@gmail.com</a>
<a href=""mailto:wi.g.w.ehe.r.bert02@gmail.com"">wi.g.w.ehe.r.bert02@gmail.com</a>
<a href=""mailto:wig.w.ehe.r.ber.t.02@gmail.com"">wig.w.ehe.r.ber.t.02@gmail.com</a>
<a href=""mailto:wi.gweh.erb.ert0.2@gmail.com"">wi.gweh.erb.ert0.2@gmail.com</a>
<a href=""mailto:w.ig.w.eh.er.bert02@gmail.com"">w.ig.w.eh.er.bert02@gmail.com</a>
<a href=""mailto:w.i.g.w.eh.e.rbert02@gmail.com"">w.i.g.w.eh.e.rbert02@gmail.com</a>
<a href=""mailto:wigw.eh.erb.er.t.02@gmail.com"">wigw.eh.erb.er.t.02@gmail.com</a>
<a href=""mailto:w.igw.eherbe.r.t0.2@gmail.com"">w.igw.eherbe.r.t0.2@gmail.com</a>
<a href=""mailto:wig.we.her.b.e.r.t0.2@gmail.com"">wig.we.her.b.e.r.t0.2@gmail.com</a>
<a href=""mailto:wi.gwe.herb.ert0.2@gmail.com"">wi.gwe.herb.ert0.2@gmail.com</a>
<a href=""mailto:wig.weher.b.er.t.02@gmail.com"">wig.weher.b.er.t.02@gmail.com</a>
<a href=""mailto:wi.g.w.e.h.er.b.ert.0.2@gmail.com"">wi.g.w.e.h.er.b.ert.0.2@gmail.com</a>
<a href=""mailto:wig.w.e.he.r.ber.t0.2@gmail.com"">wig.w.e.he.r.ber.t0.2@gmail.com</a>
<a href=""mailto:wig.weherbert02@gmail.com"">wig.weherbert02@gmail.com</a>
<a href=""mailto:w.i.g.w.eh.e.rbe.rt.02@gmail.com"">w.i.g.w.eh.e.rbe.rt.02@gmail.com</a>
<a href=""mailto:w.i.g.weh.e.r.b.ert0.2@gmail.com"">w.i.g.weh.e.r.b.ert0.2@gmail.com</a>
<a href=""mailto:w.i.g.w.eherber.t.02@gmail.com"">w.i.g.w.eherber.t.02@gmail.com</a>
<a href=""mailto:wig.w.eh.er.ber.t0.2@gmail.com"">wig.w.eh.er.ber.t0.2@gmail.com</a>
<a href=""mailto:wi.g.w.e.he.rber.t0.2@gmail.com"">wi.g.w.e.he.rber.t0.2@gmail.com</a>
<a href=""mailto:wigweh.e.rb.ert.0.2@gmail.com"">wigweh.e.rb.ert.0.2@gmail.com</a>
<a href=""mailto:wigw.e.h.e.r.be.rt.02@gmail.com"">wigw.e.h.e.r.be.rt.02@gmail.com</a>
<a href=""mailto:w.ig.weh.e.rbe.r.t.0.2@gmail.com"">w.ig.weh.e.rbe.r.t.0.2@gmail.com</a>
<a href=""mailto:wi.g.weh.erb.er.t.0.2@gmail.com"">wi.g.weh.erb.er.t.0.2@gmail.com</a>
<a href=""mailto:w.i.g.wehe.r.b.er.t.02@gmail.com"">w.i.g.wehe.r.b.er.t.02@gmail.com</a>
<a href=""mailto:wigwe.h.e.rb.e.r.t.0.2@gmail.com"">wigwe.h.e.rb.e.r.t.0.2@gmail.com</a>
<a href=""mailto:wi.gwe.h.e.rbe.r.t.02@gmail.com"">wi.gwe.h.e.rbe.r.t.02@gmail.com</a>
<a href=""mailto:wi.g.wehe.r.be.r.t02@gmail.com"">wi.g.wehe.r.be.r.t02@gmail.com</a>
<a href=""mailto:wi.gw.eher.b.e.rt.0.2@gmail.com"">wi.gw.eher.b.e.rt.0.2@gmail.com</a>
<a href=""mailto:wigw.e.h.e.r.ber.t.0.2@gmail.com"">wigw.e.h.e.r.ber.t.0.2@gmail.com</a>
<a href=""mailto:wigw.ehe.r.b.er.t0.2@gmail.com"">wigw.ehe.r.b.er.t0.2@gmail.com</a>
<a href=""mailto:w.i.gw.eh.er.ber.t.02@gmail.com"">w.i.gw.eh.er.ber.t.02@gmail.com</a>
<a href=""mailto:w.i.gw.ehe.r.ber.t0.2@gmail.com"">w.i.gw.ehe.r.ber.t0.2@gmail.com</a>
<a href=""mailto:w.i.gw.e.h.e.rbe.r.t.02@gmail.com"">w.i.gw.e.h.e.rbe.r.t.02@gmail.com</a>
<a href=""mailto:w.i.gwe.he.rbe.r.t02@gmail.com"">w.i.gwe.he.rbe.r.t02@gmail.com</a>
<a href=""mailto:w.i.g.w.e.he.r.bert02@gmail.com"">w.i.g.w.e.he.r.bert02@gmail.com</a>
<a href=""mailto:w.ig.w.eh.e.r.be.rt0.2@gmail.com"">w.ig.w.eh.e.r.be.rt0.2@gmail.com</a>
<a href=""mailto:w.ig.we.h.e.r.b.e.r.t.0.2@gmail.com"">w.ig.we.h.e.r.b.e.r.t.0.2@gmail.com</a>
<a href=""mailto:w.i.gw.e.he.rber.t0.2@gmail.com"">w.i.gw.e.he.rber.t0.2@gmail.com</a>
<a href=""mailto:wigw.eh.e.rbe.rt02@gmail.com"">wigw.eh.e.rbe.rt02@gmail.com</a>
<a href=""mailto:wig.w.e.h.e.rber.t.02@gmail.com"">wig.w.e.h.e.rber.t.02@gmail.com</a>
<a href=""mailto:w.ig.w.eh.e.rber.t0.2@gmail.com"">w.ig.w.eh.e.rber.t0.2@gmail.com</a>
<a href=""mailto:w.ig.w.e.h.e.rb.er.t02@gmail.com"">w.ig.w.e.h.e.rb.er.t02@gmail.com</a>
<a href=""mailto:wigwe.h.erbe.r.t0.2@gmail.com"">wigwe.h.erbe.r.t0.2@gmail.com</a>
<a href=""mailto:wi.gwe.h.er.b.e.r.t02@gmail.com"">wi.gwe.h.er.b.e.r.t02@gmail.com</a>
<a href=""mailto:w.i.g.w.e.h.e.rb.e.rt02@gmail.com"">w.i.g.w.e.h.e.rb.e.rt02@gmail.com</a>
<a href=""mailto:w.ig.w.eher.b.e.rt.02@gmail.com"">w.ig.w.eher.b.e.rt.02@gmail.com</a>
<a href=""mailto:wi.g.w.e.herb.ert.02@gmail.com"">wi.g.w.e.herb.ert.02@gmail.com</a>
<a href=""mailto:wi.g.w.e.her.be.r.t.02@gmail.com"">wi.g.w.e.her.be.r.t.02@gmail.com</a>
<a href=""mailto:wi.g.w.eh.er.b.e.rt.02@gmail.com"">wi.g.w.eh.er.b.e.rt.02@gmail.com</a>
<a href=""mailto:wigw.ehe.r.be.rt.02@gmail.com"">wigw.ehe.r.be.rt.02@gmail.com</a>
<a href=""mailto:wig.weh.e.rbert.0.2@gmail.com"">wig.weh.e.rbert.0.2@gmail.com</a>
<a href=""mailto:wi.gw.e.he.rb.er.t02@gmail.com"">wi.gw.e.he.rb.er.t02@gmail.com</a>
<a href=""mailto:w.i.g.we.he.rb.er.t0.2@gmail.com"">w.i.g.we.he.rb.er.t0.2@gmail.com</a>
<a href=""mailto:wig.wehe.r.b.e.rt.02@gmail.com"">wig.wehe.r.b.e.rt.02@gmail.com</a>
<a href=""mailto:wig.w.e.he.r.be.rt02@gmail.com"">wig.w.e.he.r.be.rt02@gmail.com</a>
<a href=""mailto:wig.w.eh.erber.t0.2@gmail.com"">wig.w.eh.erber.t0.2@gmail.com</a>
<a href=""mailto:wigw.eh.e.rber.t.02@gmail.com"">wigw.eh.e.rber.t.02@gmail.com</a>
<a href=""mailto:wi.gw.e.h.e.rb.e.r.t.0.2@gmail.com"">wi.gw.e.h.e.rb.e.r.t.0.2@gmail.com</a>
<a href=""mailto:w.i.g.w.eh.er.b.e.rt02@gmail.com"">w.i.g.w.eh.er.b.e.rt02@gmail.com</a>
<a href=""mailto:wig.wehe.r.b.e.r.t0.2@gmail.com"">wig.wehe.r.b.e.r.t0.2@gmail.com</a>
<a href=""mailto:w.i.g.weh.erb.er.t0.2@gmail.com"">w.i.g.weh.erb.er.t0.2@gmail.com</a>
<a href=""mailto:w.i.gweh.erb.e.r.t.02@gmail.com"">w.i.gweh.erb.e.r.t.02@gmail.com</a>
<a href=""mailto:w.i.gwe.he.rbe.rt.0.2@gmail.com"">w.i.gwe.he.rbe.rt.0.2@gmail.com</a>
<a href=""mailto:w.ig.weherb.ert0.2@gmail.com"">w.ig.weherb.ert0.2@gmail.com</a>
<a href=""mailto:w.i.gw.ehe.rb.e.r.t.02@gmail.com"">w.i.gw.ehe.rb.e.r.t.02@gmail.com</a>
<a href=""mailto:w.i.gw.eh.erb.er.t02@gmail.com"">w.i.gw.eh.erb.er.t02@gmail.com</a>
<a href=""mailto:wig.weher.be.r.t0.2@gmail.com"">wig.weher.be.r.t0.2@gmail.com</a>
<a href=""mailto:w.ig.w.eher.b.e.r.t0.2@gmail.com"">w.ig.w.eher.b.e.r.t0.2@gmail.com</a>
<a href=""mailto:wi.g.w.eh.e.r.be.r.t.02@gmail.com"">wi.g.w.eh.e.r.be.r.t.02@gmail.com</a>
<a href=""mailto:wigwe.h.erbe.r.t02@gmail.com"">wigwe.h.erbe.r.t02@gmail.com</a>
<a href=""mailto:wi.gw.eh.erb.ert0.2@gmail.com"">wi.gw.eh.erb.ert0.2@gmail.com</a>
<a href=""mailto:w.i.gw.e.her.b.e.rt02@gmail.com"">w.i.gw.e.her.b.e.rt02@gmail.com</a>
<a href=""mailto:wi.gwe.h.e.rber.t.02@gmail.com"">wi.gwe.h.e.rber.t.02@gmail.com</a>
<a href=""mailto:wi.g.weher.be.r.t.0.2@gmail.com"">wi.g.weher.be.r.t.0.2@gmail.com</a>
<a href=""mailto:w.ig.we.h.e.r.ber.t.0.2@gmail.com"">w.ig.we.h.e.r.ber.t.0.2@gmail.com</a>
<a href=""mailto:w.i.gw.e.herb.er.t02@gmail.com"">w.i.gw.e.herb.er.t02@gmail.com</a>
<a href=""mailto:wig.weh.er.ber.t.0.2@gmail.com"">wig.weh.er.ber.t.0.2@gmail.com</a>
<a href=""mailto:wig.we.h.e.r.b.er.t02@gmail.com"">wig.we.h.e.r.b.er.t02@gmail.com</a>
<a href=""mailto:wigwe.h.e.rb.er.t.0.2@gmail.com"">wigwe.h.e.rb.er.t.0.2@gmail.com</a>
<a href=""mailto:w.ig.w.e.her.b.e.rt0.2@gmail.com"">w.ig.w.e.her.b.e.rt0.2@gmail.com</a>
<a href=""mailto:w.igwehe.rber.t.0.2@gmail.com"">w.igwehe.rber.t.0.2@gmail.com</a>
<a href=""mailto:wig.weh.erb.er.t.02@gmail.com"">wig.weh.erb.er.t.02@gmail.com</a>
<a href=""mailto:wigw.eh.e.rbert.02@gmail.com"">wigw.eh.e.rbert.02@gmail.com</a>
<a href=""mailto:w.i.g.w.e.h.e.r.b.e.rt02@gmail.com"">w.i.g.w.e.h.e.r.b.e.rt02@gmail.com</a>
<a href=""mailto:w.igw.e.herbe.r.t.0.2@gmail.com"">w.igw.e.herbe.r.t.0.2@gmail.com</a>
<a href=""mailto:wig.weh.e.rbe.rt0.2@gmail.com"">wig.weh.e.rbe.rt0.2@gmail.com</a>
<a href=""mailto:w.igw.e.he.rb.e.rt.02@gmail.com"">w.igw.e.he.rb.e.rt.02@gmail.com</a>
<a href=""mailto:wig.w.eh.e.rbe.rt.02@gmail.com"">wig.w.eh.e.rbe.rt.02@gmail.com</a>
<a href=""mailto:w.i.g.weh.e.rb.e.rt.0.2@gmail.com"">w.i.g.weh.e.rb.e.rt.0.2@gmail.com</a>
<a href=""mailto:w.i.g.w.ehe.rbe.rt.0.2@gmail.com"">w.i.g.w.ehe.rbe.rt.0.2@gmail.com</a>
<a href=""mailto:w.igweher.b.e.rt.0.2@gmail.com"">w.igweher.b.e.rt.0.2@gmail.com</a>
<a href=""mailto:w.igw.ehe.r.bert.02@gmail.com"">w.igw.ehe.r.bert.02@gmail.com</a>
<a href=""mailto:wi.gweh.e.r.b.e.r.t02@gmail.com"">wi.gweh.e.r.b.e.r.t02@gmail.com</a>
<a href=""mailto:wi.gweh.e.rb.er.t.0.2@gmail.com"">wi.gweh.e.rb.er.t.0.2@gmail.com</a>
<a href=""mailto:wigwe.herber.t0.2@gmail.com"">wigwe.herber.t0.2@gmail.com</a>
<a href=""mailto:w.i.gw.eh.erbe.rt.02@gmail.com"">w.i.gw.eh.erbe.rt.02@gmail.com</a>
<a href=""mailto:w.ig.wehe.rb.ert.02@gmail.com"">w.ig.wehe.rb.ert.02@gmail.com</a>
<a href=""mailto:wi.g.we.her.b.e.r.t.02@gmail.com"">wi.g.we.her.b.e.r.t.02@gmail.com</a>
<a href=""mailto:wigw.e.her.b.e.r.t.0.2@gmail.com"">wigw.e.her.b.e.r.t.0.2@gmail.com</a>
<a href=""mailto:w.ig.weh.e.rber.t02@gmail.com"">w.ig.weh.e.rber.t02@gmail.com</a>
<a href=""mailto:w.i.g.we.herbert.0.2@gmail.com"">w.i.g.we.herbert.0.2@gmail.com</a>
<a href=""mailto:wig.wehe.r.bert0.2@gmail.com"">wig.wehe.r.bert0.2@gmail.com</a>
<a href=""mailto:handsonrichardson@yahoo.com"">handsonrichardson@yahoo.com</a>
<a href=""mailto:mrzwickerbarry@gmail.com"">mrzwickerbarry@gmail.com</a>
<a href=""mailto:mr.z.wi.ck.er.ba.rr.y@gmail.com"">mr.z.wi.ck.er.ba.rr.y@gmail.com</a>
<a href=""mailto:mrzwi.c.k.erb.a.r.r.y@gmail.com"">mrzwi.c.k.erb.a.r.r.y@gmail.com</a>
<a href=""mailto:mrz.w.ick.e.r.b.a.rr.y@gmail.com"">mrz.w.ick.e.r.b.a.rr.y@gmail.com</a>
<a href=""mailto:m.r.zwi.cke.rbar.ry@gmail.com"">m.r.zwi.cke.rbar.ry@gmail.com</a>
<a href=""mailto:mr.z.w.ick.erb.arr.y@gmail.com"">mr.z.w.ick.erb.arr.y@gmail.com</a>
<a href=""mailto:m.r.z.w.i.ck.erba.rry@gmail.com"">m.r.z.w.i.ck.erba.rry@gmail.com</a>
<a href=""mailto:m.rzwic.ker.b.a.rr.y@gmail.com"">m.rzwic.ker.b.a.rr.y@gmail.com</a>
<a href=""mailto:m.r.z.wick.e.rb.arry@gmail.com"">m.r.z.wick.e.rb.arry@gmail.com</a>
<a href=""mailto:mr.zwi.c.ke.rb.a.r.ry@gmail.com"">mr.zwi.c.ke.rb.a.r.ry@gmail.com</a>
<a href=""mailto:m.rz.w.i.c.k.erbarry@gmail.com"">m.rz.w.i.c.k.erbarry@gmail.com</a>
<a href=""mailto:mrz.w.ickerbarr.y@gmail.com"">mrz.w.ickerbarr.y@gmail.com</a>
<a href=""mailto:m.rzwi.cker.b.arry@gmail.com"">m.rzwi.cker.b.arry@gmail.com</a>
<a href=""mailto:mrzw.ickerb.a.rry@gmail.com"">mrzw.ickerb.a.rry@gmail.com</a>
<a href=""mailto:mrzw.i.ck.er.b.a.rr.y@gmail.com"">mrzw.i.ck.er.b.a.rr.y@gmail.com</a>
<a href=""mailto:mrz.w.ic.kerbarr.y@gmail.com"">mrz.w.ic.kerbarr.y@gmail.com</a>
<a href=""mailto:mr.z.w.ic.k.e.rb.ar.ry@gmail.com"">mr.z.w.ic.k.e.rb.ar.ry@gmail.com</a>
<a href=""mailto:m.rz.wi.cker.barry@gmail.com"">m.rz.wi.cker.barry@gmail.com</a>
<a href=""mailto:m.r.z.wi.c.ke.rb.a.r.ry@gmail.com"">m.r.z.wi.c.ke.rb.a.r.ry@gmail.com</a>
<a href=""mailto:m.rz.w.i.c.k.er.ba.r.ry@gmail.com"">m.rz.w.i.c.k.er.ba.r.ry@gmail.com</a>
<a href=""mailto:m.rzw.i.c.ke.rba.rr.y@gmail.com"">m.rzw.i.c.ke.rba.rr.y@gmail.com</a>
<a href=""mailto:m.r.z.wic.kerb.ar.ry@gmail.com"">m.r.z.wic.kerb.ar.ry@gmail.com</a>
<a href=""mailto:mr.zw.i.c.ke.r.b.a.rr.y@gmail.com"">mr.zw.i.c.ke.r.b.a.rr.y@gmail.com</a>
<a href=""mailto:mrz.w.ic.k.e.r.ba.r.r.y@gmail.com"">mrz.w.ic.k.e.r.ba.r.r.y@gmail.com</a>
<a href=""mailto:m.rz.w.i.ck.e.rba.rry@gmail.com"">m.rz.w.i.ck.e.rba.rry@gmail.com</a>
<a href=""mailto:mr.zwi.ck.e.r.bar.r.y@gmail.com"">mr.zwi.ck.e.r.bar.r.y@gmail.com</a>
<a href=""mailto:mr.zwicke.r.ba.rry@gmail.com"">mr.zwicke.r.ba.rry@gmail.com</a>
<a href=""mailto:mrzwi.c.k.e.rb.ar.r.y@gmail.com"">mrzwi.c.k.e.rb.ar.r.y@gmail.com</a>
<a href=""mailto:mrzwi.c.k.e.rba.rry@gmail.com"">mrzwi.c.k.e.rba.rry@gmail.com</a>
<a href=""mailto:mrzwicker.barr.y@gmail.com"">mrzwicker.barr.y@gmail.com</a>
<a href=""mailto:m.rz.w.i.c.ke.rba.r.ry@gmail.com"">m.rz.w.i.c.ke.rba.r.ry@gmail.com</a>
<a href=""mailto:m.r.zwi.cke.rb.ar.ry@gmail.com"">m.r.zwi.cke.rb.ar.ry@gmail.com</a>
<a href=""mailto:mr.z.wic.kerbar.r.y@gmail.com"">mr.z.wic.kerbar.r.y@gmail.com</a>
<a href=""mailto:m.r.zw.ick.e.r.b.ar.ry@gmail.com"">m.r.zw.ick.e.r.b.ar.ry@gmail.com</a>
<a href=""mailto:mrz.wi.c.ke.rb.a.rr.y@gmail.com"">mrz.wi.c.ke.rb.a.rr.y@gmail.com</a>
<a href=""mailto:m.rzw.icke.rba.rr.y@gmail.com"">m.rzw.icke.rba.rr.y@gmail.com</a>
<a href=""mailto:mr.zwic.ke.r.b.a.r.ry@gmail.com"">mr.zwic.ke.r.b.a.r.ry@gmail.com</a>
<a href=""mailto:mr.z.wick.e.r.barr.y@gmail.com"">mr.z.wick.e.r.barr.y@gmail.com</a>
<a href=""mailto:m.r.zwicker.b.a.rry@gmail.com"">m.r.zwicker.b.a.rry@gmail.com</a>
<a href=""mailto:m.r.z.wic.k.e.r.barry@gmail.com"">m.r.z.wic.k.e.r.barry@gmail.com</a>
<a href=""mailto:m.r.z.wi.cke.rba.r.r.y@gmail.com"">m.r.z.wi.cke.rba.r.r.y@gmail.com</a>
<a href=""mailto:mrzwick.erb.a.rry@gmail.com"">mrzwick.erb.a.rry@gmail.com</a>
<a href=""mailto:mrzw.i.c.k.erb.a.rr.y@gmail.com"">mrzw.i.c.k.erb.a.rr.y@gmail.com</a>
<a href=""mailto:mrzwic.k.e.r.b.ar.ry@gmail.com"">mrzwic.k.e.r.b.ar.ry@gmail.com</a>
<a href=""mailto:mr.zw.i.ckerba.r.ry@gmail.com"">mr.zw.i.ckerba.r.ry@gmail.com</a>
<a href=""mailto:mr.zwic.kerb.a.rr.y@gmail.com"">mr.zwic.kerb.a.rr.y@gmail.com</a>
<a href=""mailto:mr.z.wi.ck.e.rb.ar.r.y@gmail.com"">mr.z.wi.ck.e.rb.ar.r.y@gmail.com</a>
<a href=""mailto:mrz.wi.c.kerb.ar.r.y@gmail.com"">mrz.wi.c.kerb.ar.r.y@gmail.com</a>
<a href=""mailto:m.rz.wic.kerbar.r.y@gmail.com"">m.rz.wic.kerbar.r.y@gmail.com</a>
<a href=""mailto:mr.zw.i.c.ke.r.ba.rry@gmail.com"">mr.zw.i.c.ke.r.ba.rry@gmail.com</a>
<a href=""mailto:m.r.z.wi.c.k.er.b.arr.y@gmail.com"">m.r.z.wi.c.k.er.b.arr.y@gmail.com</a>
<a href=""mailto:mr.zwic.k.e.r.ba.r.r.y@gmail.com"">mr.zwic.k.e.r.ba.r.r.y@gmail.com</a>
<a href=""mailto:mrzw.ick.erb.arry@gmail.com"">mrzw.ick.erb.arry@gmail.com</a>
<a href=""mailto:m.r.zw.ic.ker.ba.r.ry@gmail.com"">m.r.zw.ic.ker.ba.r.ry@gmail.com</a>
<a href=""mailto:m.r.z.wi.cker.b.a.r.ry@gmail.com"">m.r.z.wi.cker.b.a.r.ry@gmail.com</a>
<a href=""mailto:m.rzw.i.c.ke.r.bar.ry@gmail.com"">m.rzw.i.c.ke.r.bar.ry@gmail.com</a>
<a href=""mailto:mrz.w.ick.e.rb.ar.ry@gmail.com"">mrz.w.ick.e.rb.ar.ry@gmail.com</a>
<a href=""mailto:m.rz.wic.k.erba.rry@gmail.com"">m.rz.wic.k.erba.rry@gmail.com</a>
<a href=""mailto:mrzwi.c.k.e.rba.rr.y@gmail.com"">mrzwi.c.k.e.rba.rr.y@gmail.com</a>
<a href=""mailto:m.r.z.wic.ke.r.barry@gmail.com"">m.r.z.wic.ke.r.barry@gmail.com</a>
<a href=""mailto:m.r.z.wic.kerbar.ry@gmail.com"">m.r.z.wic.kerbar.ry@gmail.com</a>
<a href=""mailto:m.r.z.wickerbarr.y@gmail.com"">m.r.z.wickerbarr.y@gmail.com</a>
<a href=""mailto:m.rz.w.ic.k.erba.rry@gmail.com"">m.rz.w.ic.k.erba.rry@gmail.com</a>
<a href=""mailto:m.r.zw.i.c.ke.rbar.r.y@gmail.com"">m.r.zw.i.c.ke.rbar.r.y@gmail.com</a>
<a href=""mailto:mr.zwi.c.kerba.r.ry@gmail.com"">mr.zwi.c.kerba.r.ry@gmail.com</a>
<a href=""mailto:m.rzw.ick.e.r.ba.r.ry@gmail.com"">m.rzw.ick.e.r.ba.r.ry@gmail.com</a>
<a href=""mailto:mr.z.wic.k.e.r.barr.y@gmail.com"">mr.z.wic.k.e.r.barr.y@gmail.com</a>
<a href=""mailto:mrz.wic.ke.r.ba.rr.y@gmail.com"">mrz.wic.ke.r.ba.rr.y@gmail.com</a>
<a href=""mailto:mr.zw.ic.ke.rbarr.y@gmail.com"">mr.zw.ic.ke.rbarr.y@gmail.com</a>
<a href=""mailto:m.rzw.i.c.ker.b.a.rr.y@gmail.com"">m.rzw.i.c.ker.b.a.rr.y@gmail.com</a>
<a href=""mailto:m.rzw.i.ck.erb.a.rry@gmail.com"">m.rzw.i.ck.erb.a.rry@gmail.com</a>
<a href=""mailto:mrzw.icke.rba.rry@gmail.com"">mrzw.icke.rba.rry@gmail.com</a>
<a href=""mailto:mrzw.ick.e.rbar.r.y@gmail.com"">mrzw.ick.e.rbar.r.y@gmail.com</a>
<a href=""mailto:m.rzw.i.c.kerb.a.rr.y@gmail.com"">m.rzw.i.c.kerb.a.rr.y@gmail.com</a>
<a href=""mailto:m.r.zw.i.c.ke.r.b.a.rry@gmail.com"">m.r.zw.i.c.ke.r.b.a.rry@gmail.com</a>
<a href=""mailto:m.r.z.w.ic.kerba.r.ry@gmail.com"">m.r.z.w.ic.kerba.r.ry@gmail.com</a>
<a href=""mailto:mr.z.w.i.c.kerba.rry@gmail.com"">mr.z.w.i.c.kerba.rry@gmail.com</a>
<a href=""mailto:m.r.z.wi.ck.er.ba.rry@gmail.com"">m.r.z.wi.ck.er.ba.rry@gmail.com</a>
<a href=""mailto:m.r.zwick.erb.a.rry@gmail.com"">m.r.zwick.erb.a.rry@gmail.com</a>
<a href=""mailto:mrzwicker.b.arry@gmail.com"">mrzwicker.b.arry@gmail.com</a>
<a href=""mailto:m.r.z.wi.c.k.e.rb.arry@gmail.com"">m.r.z.wi.c.k.e.rb.arry@gmail.com</a>
<a href=""mailto:m.r.zwi.c.ke.r.b.a.r.r.y@gmail.com"">m.r.zwi.c.ke.r.b.a.r.r.y@gmail.com</a>
<a href=""mailto:m.rz.w.i.c.k.e.r.barry@gmail.com"">m.rz.w.i.c.k.e.r.barry@gmail.com</a>
<a href=""mailto:mrzw.ic.k.erb.ar.r.y@gmail.com"">mrzw.ic.k.erb.ar.r.y@gmail.com</a>
<a href=""mailto:m.rzwicker.ba.r.ry@gmail.com"">m.rzwicker.ba.r.ry@gmail.com</a>
<a href=""mailto:m.rz.w.i.c.ker.b.ar.r.y@gmail.com"">m.rz.w.i.c.ker.b.ar.r.y@gmail.com</a>
<a href=""mailto:m.rz.wi.c.k.e.r.b.a.r.r.y@gmail.com"">m.rz.wi.c.k.e.r.b.a.r.r.y@gmail.com</a>
<a href=""mailto:mr.z.wickerb.ar.ry@gmail.com"">mr.z.wickerb.ar.ry@gmail.com</a>
<a href=""mailto:mrz.wic.ker.b.a.r.ry@gmail.com"">mrz.wic.ker.b.a.r.ry@gmail.com</a>
<a href=""mailto:m.r.zw.ick.erba.r.r.y@gmail.com"">m.r.zw.ick.erba.r.r.y@gmail.com</a>
<a href=""mailto:m.r.z.w.i.ck.erb.arr.y@gmail.com"">m.r.z.w.i.ck.erb.arr.y@gmail.com</a>
<a href=""mailto:m.r.zwick.er.b.arry@gmail.com"">m.r.zwick.er.b.arry@gmail.com</a>
<a href=""mailto:m.rzwi.c.k.erbarr.y@gmail.com"">m.rzwi.c.k.erbarr.y@gmail.com</a>
<a href=""mailto:mrz.wic.ker.b.a.r.r.y@gmail.com"">mrz.wic.ker.b.a.r.r.y@gmail.com</a>
<a href=""mailto:mrzwi.c.k.e.r.ba.r.r.y@gmail.com"">mrzwi.c.k.e.r.ba.r.r.y@gmail.com</a>
<a href=""mailto:mrz.w.i.c.kerb.a.r.ry@gmail.com"">mrz.w.i.c.kerb.a.r.ry@gmail.com</a>
<a href=""mailto:mrz.wi.c.ker.b.a.rry@gmail.com"">mrz.wi.c.ker.b.a.rry@gmail.com</a>
<a href=""mailto:mr.zw.ic.k.e.r.b.arry@gmail.com"">mr.zw.ic.k.e.r.b.arry@gmail.com</a>
<a href=""mailto:mr.zw.ic.kerb.arry@gmail.com"">mr.zw.ic.kerb.arry@gmail.com</a>
<a href=""mailto:mrz.wi.c.ke.rbar.ry@gmail.com"">mrz.wi.c.ke.rbar.ry@gmail.com</a>
<a href=""mailto:mrzwic.k.er.bar.ry@gmail.com"">mrzwic.k.er.bar.ry@gmail.com</a>
<a href=""mailto:m.r.z.w.ic.k.e.rb.arr.y@gmail.com"">m.r.z.w.ic.k.e.rb.arr.y@gmail.com</a>
<a href=""mailto:m.rz.wic.k.e.r.ba.r.ry@gmail.com"">m.rz.wic.k.e.r.ba.r.ry@gmail.com</a>
<a href=""mailto:mrz.wi.c.k.e.rbar.r.y@gmail.com"">mrz.wi.c.k.e.rbar.r.y@gmail.com</a>
<a href=""mailto:mr.z.w.i.cke.r.b.a.r.ry@gmail.com"">mr.z.w.i.cke.r.b.a.r.ry@gmail.com</a>
<a href=""mailto:mr.zwi.c.ker.ba.rry@gmail.com"">mr.zwi.c.ker.ba.rry@gmail.com</a>
<a href=""mailto:m.rzwi.cker.b.a.r.r.y@gmail.com"">m.rzwi.cker.b.a.r.r.y@gmail.com</a>
<a href=""mailto:mr.zw.i.ck.er.b.a.r.r.y@gmail.com"">mr.zw.i.ck.er.b.a.r.r.y@gmail.com</a>
<a href=""mailto:mrz.w.ic.k.erb.a.rry@gmail.com"">mrz.w.ic.k.erb.a.rry@gmail.com</a>
<a href=""mailto:m.r.z.wi.ck.er.b.arr.y@gmail.com"">m.r.z.wi.ck.er.b.arr.y@gmail.com</a>
<a href=""mailto:mr.z.wi.c.k.erba.rr.y@gmail.com"">mr.z.wi.c.k.erba.rr.y@gmail.com</a>
<a href=""mailto:mr.zw.ic.k.e.rbarr.y@gmail.com"">mr.zw.ic.k.e.rbarr.y@gmail.com</a>
<a href=""mailto:m.r.zwic.k.erb.a.r.r.y@gmail.com"">m.r.zwic.k.erb.a.r.r.y@gmail.com</a>
<a href=""mailto:mr.zwi.c.k.e.r.ba.rry@gmail.com"">mr.zwi.c.k.e.r.ba.rry@gmail.com</a>
<a href=""mailto:m.rz.wic.kerb.ar.r.y@gmail.com"">m.rz.wic.kerb.ar.r.y@gmail.com</a>
<a href=""mailto:mrzw.ickerb.a.rr.y@gmail.com"">mrzw.ickerb.a.rr.y@gmail.com</a>
<a href=""mailto:mr.z.w.i.cke.r.ba.rr.y@gmail.com"">mr.z.w.i.cke.r.ba.rr.y@gmail.com</a>
<a href=""mailto:m.r.z.wi.ck.e.rba.rr.y@gmail.com"">m.r.z.wi.ck.e.rba.rr.y@gmail.com</a>
<a href=""mailto:mr.zwick.e.r.b.a.r.r.y@gmail.com"">mr.zwick.e.r.b.a.r.r.y@gmail.com</a>
<a href=""mailto:m.r.z.wic.k.e.rbarr.y@gmail.com"">m.r.z.wic.k.e.rbarr.y@gmail.com</a>
<a href=""mailto:m.rzwi.c.k.erbarry@gmail.com"">m.rzwi.c.k.erbarry@gmail.com</a>
<a href=""mailto:m.r.zw.ic.k.e.r.b.ar.ry@gmail.com"">m.r.zw.ic.k.e.r.b.ar.ry@gmail.com</a>
<a href=""mailto:m.rzw.ickerbar.r.y@gmail.com"">m.rzw.ickerbar.r.y@gmail.com</a>
<a href=""mailto:mrzw.icke.r.b.a.rry@gmail.com"">mrzw.icke.r.b.a.rry@gmail.com</a>
<a href=""mailto:m.rzw.ic.k.er.ba.r.r.y@gmail.com"">m.rzw.ic.k.er.ba.r.r.y@gmail.com</a>
<a href=""mailto:mrzw.i.ck.e.r.b.ar.r.y@gmail.com"">mrzw.i.ck.e.r.b.ar.r.y@gmail.com</a>
<a href=""mailto:mr.z.w.icker.barry@gmail.com"">mr.z.w.icker.barry@gmail.com</a>
<a href=""mailto:m.r.zwi.ck.erb.a.rr.y@gmail.com"">m.r.zwi.ck.erb.a.rr.y@gmail.com</a>
<a href=""mailto:m.r.zwi.ck.e.r.ba.rr.y@gmail.com"">m.r.zwi.ck.e.r.ba.rr.y@gmail.com</a>
<a href=""mailto:m.rzwick.e.rbar.ry@gmail.com"">m.rzwick.e.rbar.ry@gmail.com</a>
<a href=""mailto:m.rzwicker.b.ar.r.y@gmail.com"">m.rzwicker.b.ar.r.y@gmail.com</a>
<a href=""mailto:mrz.w.icke.r.b.arry@gmail.com"">mrz.w.icke.r.b.arry@gmail.com</a>
<a href=""mailto:mr.zw.i.c.k.e.r.ba.r.r.y@gmail.com"">mr.zw.i.c.k.e.r.ba.r.r.y@gmail.com</a>
<a href=""mailto:mr.zwick.erba.r.ry@gmail.com"">mr.zwick.erba.r.ry@gmail.com</a>
<a href=""mailto:m.r.zwi.ck.erba.r.r.y@gmail.com"">m.r.zwi.ck.erba.r.r.y@gmail.com</a>
<a href=""mailto:mr.zwi.ckerba.r.r.y@gmail.com"">mr.zwi.ckerba.r.r.y@gmail.com</a>
<a href=""mailto:mrzw.i.ck.e.r.b.a.r.r.y@gmail.com"">mrzw.i.ck.e.r.b.a.r.r.y@gmail.com</a>
<a href=""mailto:mr.z.w.i.c.k.erb.a.r.r.y@gmail.com"">mr.z.w.i.c.k.erb.a.r.r.y@gmail.com</a>
<a href=""mailto:mr.zw.ick.erba.rry@gmail.com"">mr.zw.ick.erba.rry@gmail.com</a>
<a href=""mailto:m.r.z.wi.c.k.e.rb.ar.ry@gmail.com"">m.r.z.wi.c.k.e.rb.ar.ry@gmail.com</a>
<a href=""mailto:mrz.w.i.c.k.e.rb.a.rry@gmail.com"">mrz.w.i.c.k.e.rb.a.rry@gmail.com</a>
<a href=""mailto:m.r.zw.ic.kerb.a.r.r.y@gmail.com"">m.r.zw.ic.kerb.a.r.r.y@gmail.com</a>
<a href=""mailto:mr.zwi.c.ke.r.barr.y@gmail.com"">mr.zwi.c.ke.r.barr.y@gmail.com</a>
<a href=""mailto:m.rzw.i.ckerb.ar.ry@gmail.com"">m.rzw.i.ckerb.ar.ry@gmail.com</a>
<a href=""mailto:mr.zw.ic.ker.ba.rr.y@gmail.com"">mr.zw.ic.ker.ba.rr.y@gmail.com</a>
<a href=""mailto:mrz.wicker.b.ar.r.y@gmail.com"">mrz.wicker.b.ar.r.y@gmail.com</a>
<a href=""mailto:m.r.zwi.c.kerb.arry@gmail.com"">m.r.zwi.c.kerb.arry@gmail.com</a>
<a href=""mailto:m.rzw.i.ck.er.ba.rr.y@gmail.com"">m.rzw.i.ck.er.ba.rr.y@gmail.com</a>
<a href=""mailto:mrzw.i.cke.rba.rry@gmail.com"">mrzw.i.cke.rba.rry@gmail.com</a>
<a href=""mailto:m.r.zwic.ker.b.ar.r.y@gmail.com"">m.r.zwic.ker.b.ar.r.y@gmail.com</a>
<a href=""mailto:mr.z.w.i.ck.e.rbar.ry@gmail.com"">mr.z.w.i.ck.e.rbar.ry@gmail.com</a>
<a href=""mailto:mr.z.wick.erbar.r.y@gmail.com"">mr.z.wick.erbar.r.y@gmail.com</a>
<a href=""mailto:mr.z.w.i.ck.e.r.b.arry@gmail.com"">mr.z.w.i.ck.e.r.b.arry@gmail.com</a>
<a href=""mailto:m.rzw.ickerba.rry@gmail.com"">m.rzw.ickerba.rry@gmail.com</a>
<a href=""mailto:mr.z.wi.cke.rb.a.rry@gmail.com"">mr.z.wi.cke.rb.a.rry@gmail.com</a>
<a href=""mailto:mrz.wi.ck.e.r.ba.rr.y@gmail.com"">mrz.wi.ck.e.r.ba.rr.y@gmail.com</a>
<a href=""mailto:m.r.z.w.i.c.ke.r.b.ar.ry@gmail.com"">m.r.z.w.i.c.ke.r.b.ar.ry@gmail.com</a>
<a href=""mailto:m.rz.w.ic.ke.r.b.arry@gmail.com"">m.rz.w.ic.ke.r.b.arry@gmail.com</a>
<a href=""mailto:mr.z.w.i.c.kerba.r.r.y@gmail.com"">mr.z.w.i.c.kerba.r.r.y@gmail.com</a>
<a href=""mailto:mr.z.wi.ck.e.r.b.arry@gmail.com"">mr.z.wi.ck.e.r.b.arry@gmail.com</a>
<a href=""mailto:mr.zwick.e.r.ba.r.ry@gmail.com"">mr.zwick.e.r.ba.r.ry@gmail.com</a>
<a href=""mailto:mr.z.wic.k.e.r.b.arr.y@gmail.com"">mr.z.wic.k.e.r.b.arr.y@gmail.com</a>
<a href=""mailto:mrz.w.i.c.ke.rbar.ry@gmail.com"">mrz.w.i.c.ke.rbar.ry@gmail.com</a>
<a href=""mailto:mrzw.icke.r.ba.r.ry@gmail.com"">mrzw.icke.r.ba.r.ry@gmail.com</a>
<a href=""mailto:mrzwi.ck.e.rb.a.r.ry@gmail.com"">mrzwi.ck.e.rb.a.r.ry@gmail.com</a>
<a href=""mailto:mrz.w.ic.k.erb.a.rr.y@gmail.com"">mrz.w.ic.k.erb.a.rr.y@gmail.com</a>
<a href=""mailto:mrz.w.i.cke.rba.r.ry@gmail.com"">mrz.w.i.cke.rba.r.ry@gmail.com</a>
<a href=""mailto:m.r.z.w.i.c.k.er.b.arr.y@gmail.com"">m.r.z.w.i.c.k.er.b.arr.y@gmail.com</a>
<a href=""mailto:m.rz.wi.cke.r.b.ar.ry@gmail.com"">m.rz.wi.cke.r.b.ar.ry@gmail.com</a>
<a href=""mailto:mrzwick.er.barr.y@gmail.com"">mrzwick.er.barr.y@gmail.com</a>
<a href=""mailto:mrz.w.i.c.k.e.rba.rr.y@gmail.com"">mrz.w.i.c.k.e.rba.rr.y@gmail.com</a>
<a href=""mailto:mr.z.wick.e.r.ba.r.r.y@gmail.com"">mr.z.wick.e.r.ba.r.r.y@gmail.com</a>
<a href=""mailto:m.rzwic.ke.r.ba.rr.y@gmail.com"">m.rzwic.ke.r.ba.rr.y@gmail.com</a>
<a href=""mailto:m.r.z.w.i.cke.rb.a.rry@gmail.com"">m.r.z.w.i.cke.rb.a.rry@gmail.com</a>
<a href=""mailto:mrz.wic.k.e.rb.a.r.r.y@gmail.com"">mrz.wic.k.e.rb.a.r.r.y@gmail.com</a>
<a href=""mailto:m.r.z.w.ic.ker.b.arry@gmail.com"">m.r.z.w.ic.ker.b.arry@gmail.com</a>
<a href=""mailto:m.rz.w.ic.k.er.ba.r.ry@gmail.com"">m.rz.w.ic.k.er.ba.r.ry@gmail.com</a>
<a href=""mailto:m.r.zwic.k.e.r.ba.rry@gmail.com"">m.r.zwic.k.e.r.ba.rry@gmail.com</a>
<a href=""mailto:mrzwi.cke.r.b.a.r.ry@gmail.com"">mrzwi.cke.r.b.a.r.ry@gmail.com</a>
<a href=""mailto:m.rz.wi.ck.erba.r.r.y@gmail.com"">m.rz.wi.ck.erba.r.r.y@gmail.com</a>
<a href=""mailto:m.r.zwi.c.ke.r.ba.r.r.y@gmail.com"">m.r.zwi.c.ke.r.ba.r.r.y@gmail.com</a>
<a href=""mailto:m.r.zwic.ke.r.b.a.rry@gmail.com"">m.r.zwic.ke.r.b.a.rry@gmail.com</a>
<a href=""mailto:mr.z.wic.ker.ba.rr.y@gmail.com"">mr.z.wic.ker.ba.rr.y@gmail.com</a>
<a href=""mailto:m.r.zwi.cke.r.b.ar.ry@gmail.com"">m.r.zwi.cke.r.b.ar.ry@gmail.com</a>
<a href=""mailto:m.rz.w.ick.e.rb.arry@gmail.com"">m.rz.w.ick.e.rb.arry@gmail.com</a>
<a href=""mailto:m.rz.wic.kerb.a.r.ry@gmail.com"">m.rz.wic.kerb.a.r.ry@gmail.com</a>
<a href=""mailto:m.r.z.wic.k.er.b.ar.ry@gmail.com"">m.r.z.wic.k.er.b.ar.ry@gmail.com</a>
<a href=""mailto:mr.z.w.i.c.ke.r.barry@gmail.com"">mr.z.w.i.c.ke.r.barry@gmail.com</a>
<a href=""mailto:mr.zwi.ck.erbarr.y@gmail.com"">mr.zwi.ck.erbarr.y@gmail.com</a>
<a href=""mailto:mrz.w.i.c.ker.b.arry@gmail.com"">mrz.w.i.c.ker.b.arry@gmail.com</a>
<a href=""mailto:mrz.wi.cke.r.ba.rry@gmail.com"">mrz.wi.cke.r.ba.rry@gmail.com</a>
<a href=""mailto:mr.zw.ick.e.rb.arry@gmail.com"">mr.zw.ick.e.rb.arry@gmail.com</a>
<a href=""mailto:m.r.z.w.ick.er.ba.rry@gmail.com"">m.r.z.w.ick.er.ba.rry@gmail.com</a>
<a href=""mailto:mrzwi.c.ker.barry@gmail.com"">mrzwi.c.ker.barry@gmail.com</a>
<a href=""mailto:mrzwicke.r.b.arry@gmail.com"">mrzwicke.r.b.arry@gmail.com</a>
<a href=""mailto:m.r.z.w.icker.b.arr.y@gmail.com"">m.r.z.w.icker.b.arr.y@gmail.com</a>
<a href=""mailto:mrz.wi.cker.b.arr.y@gmail.com"">mrz.wi.cker.b.arr.y@gmail.com</a>
<a href=""mailto:mr.zw.ic.ker.b.ar.ry@gmail.com"">mr.zw.ic.ker.b.ar.ry@gmail.com</a>
<a href=""mailto:mrz.wick.e.rb.a.r.ry@gmail.com"">mrz.wick.e.rb.a.r.ry@gmail.com</a>
<a href=""mailto:m.rzwicke.r.b.arr.y@gmail.com"">m.rzwicke.r.b.arr.y@gmail.com</a>
<a href=""mailto:m.r.zwi.c.k.e.r.b.a.r.ry@gmail.com"">m.r.zwi.c.k.e.r.b.a.r.ry@gmail.com</a>
<a href=""mailto:info@ricardollp.com"">info@ricardollp.com</a>
<a href=""mailto:lance-watson@dr.com"">lance-watson@dr.com</a>
<a href=""mailto:dbpc74b@gmail.com"">dbpc74b@gmail.com</a>
<a href=""mailto:d.bp.c.7.4.b@gmail.com"">d.bp.c.7.4.b@gmail.com</a>
<a href=""mailto:d.b.pc.7.4.b@gmail.com"">d.b.pc.7.4.b@gmail.com</a>
<a href=""mailto:d.b.p.c.74.b@gmail.com"">d.b.p.c.74.b@gmail.com</a>
<a href=""mailto:d.bpc7.4b@gmail.com"">d.bpc7.4b@gmail.com</a>
<a href=""mailto:dbp.c74.b@gmail.com"">dbp.c74.b@gmail.com</a>
<a href=""mailto:d.b.pc.7.4b@gmail.com"">d.b.pc.7.4b@gmail.com</a>
<a href=""mailto:d.b.pc7.4b@gmail.com"">d.b.pc7.4b@gmail.com</a>
<a href=""mailto:d.b.pc.74.b@gmail.com"">d.b.pc.74.b@gmail.com</a>
<a href=""mailto:d.b.p.c.74b@gmail.com"">d.b.p.c.74b@gmail.com</a>
<a href=""mailto:d.bp.c74b@gmail.com"">d.bp.c74b@gmail.com</a>
<a href=""mailto:d.bp.c7.4b@gmail.com"">d.bp.c7.4b@gmail.com</a>
<a href=""mailto:dbpc.74b@gmail.com"">dbpc.74b@gmail.com</a>
<a href=""mailto:d.bpc74.b@gmail.com"">d.bpc74.b@gmail.com</a>
<a href=""mailto:dbp.c7.4b@gmail.com"">dbp.c7.4b@gmail.com</a>
<a href=""mailto:d.bpc.7.4b@gmail.com"">d.bpc.7.4b@gmail.com</a>
<a href=""mailto:dbpc.74.b@gmail.com"">dbpc.74.b@gmail.com</a>
<a href=""mailto:dbpc74b@gmail.com"">dbpc74b@gmail.com</a>
<a href=""mailto:db.p.c.74.b@gmail.com"">db.p.c.74.b@gmail.com</a>
<a href=""mailto:db.p.c74.b@gmail.com"">db.p.c74.b@gmail.com</a>
<a href=""mailto:d.bp.c74.b@gmail.com"">d.bp.c74.b@gmail.com</a>
<a href=""mailto:d.b.pc74b@gmail.com"">d.b.pc74b@gmail.com</a>
<a href=""mailto:db.pc.7.4b@gmail.com"">db.pc.7.4b@gmail.com</a>
<a href=""mailto:d.b.p.c74b@gmail.com"">d.b.p.c74b@gmail.com</a>
<a href=""mailto:d.bpc.74.b@gmail.com"">d.bpc.74.b@gmail.com</a>
<a href=""mailto:d.bp.c.74b@gmail.com"">d.bp.c.74b@gmail.com</a>
<a href=""mailto:dbp.c.74b@gmail.com"">dbp.c.74b@gmail.com</a>
<a href=""mailto:d.bpc.74b@gmail.com"">d.bpc.74b@gmail.com</a>
<a href=""mailto:db.pc.74b@gmail.com"">db.pc.74b@gmail.com</a>
<a href=""mailto:db.pc7.4b@gmail.com"">db.pc7.4b@gmail.com</a>
<a href=""mailto:db.p.c74b@gmail.com"">db.p.c74b@gmail.com</a>
<a href=""mailto:db.pc74b@gmail.com"">db.pc74b@gmail.com</a>
<a href=""mailto:db.p.c.74b@gmail.com"">db.p.c.74b@gmail.com</a>
<a href=""mailto:db.p.c.7.4.b@gmail.com"">db.p.c.7.4.b@gmail.com</a>
<a href=""mailto:db.pc.74.b@gmail.com"">db.pc.74.b@gmail.com</a>
<a href=""mailto:dbp.c74b@gmail.com"">dbp.c74b@gmail.com</a>
<a href=""mailto:db.p.c7.4.b@gmail.com"">db.p.c7.4.b@gmail.com</a>
<a href=""mailto:db.p.c7.4b@gmail.com"">db.p.c7.4b@gmail.com</a>
<a href=""mailto:db.pc74.b@gmail.com"">db.pc74.b@gmail.com</a>
<a href=""mailto:d.bpc.7.4.b@gmail.com"">d.bpc.7.4.b@gmail.com</a>
<a href=""mailto:d.b.pc74.b@gmail.com"">d.b.pc74.b@gmail.com</a>
<a href=""mailto:d.bp.c.74.b@gmail.com"">d.bp.c.74.b@gmail.com</a>
<a href=""mailto:d.b.p.c7.4.b@gmail.com"">d.b.p.c7.4.b@gmail.com</a>
<a href=""mailto:d.bpc74b@gmail.com"">d.bpc74b@gmail.com</a>
<a href=""mailto:dbpc7.4.b@gmail.com"">dbpc7.4.b@gmail.com</a>
<a href=""mailto:dbpc7.4b@gmail.com"">dbpc7.4b@gmail.com</a>
<a href=""mailto:d.bp.c7.4.b@gmail.com"">d.bp.c7.4.b@gmail.com</a>
<a href=""mailto:dbp.c.7.4.b@gmail.com"">dbp.c.7.4.b@gmail.com</a>
<a href=""mailto:dbpc74.b@gmail.com"">dbpc74.b@gmail.com</a>
<a href=""mailto:db.p.c.7.4b@gmail.com"">db.p.c.7.4b@gmail.com</a>
<a href=""mailto:dbp.c.7.4b@gmail.com"">dbp.c.7.4b@gmail.com</a>
<a href=""mailto:d.b.p.c.7.4b@gmail.com"">d.b.p.c.7.4b@gmail.com</a>
<a href=""mailto:dbp.c7.4.b@gmail.com"">dbp.c7.4.b@gmail.com</a>
<a href=""mailto:d.b.pc7.4.b@gmail.com"">d.b.pc7.4.b@gmail.com</a>
<a href=""mailto:d.b.p.c.7.4.b@gmail.com"">d.b.p.c.7.4.b@gmail.com</a>
<a href=""mailto:d.bp.c.7.4b@gmail.com"">d.bp.c.7.4b@gmail.com</a>
<a href=""mailto:d.b.pc.74b@gmail.com"">d.b.pc.74b@gmail.com</a>
<a href=""mailto:db.pc7.4.b@gmail.com"">db.pc7.4.b@gmail.com</a>
<a href=""mailto:d.bpc7.4.b@gmail.com"">d.bpc7.4.b@gmail.com</a>
<a href=""mailto:dbpc.7.4b@gmail.com"">dbpc.7.4b@gmail.com</a>
<a href=""mailto:d.b.p.c7.4b@gmail.com"">d.b.p.c7.4b@gmail.com</a>
<a href=""mailto:d.b.p.c74.b@gmail.com"">d.b.p.c74.b@gmail.com</a>
<a href=""mailto:dbp.c.74.b@gmail.com"">dbp.c.74.b@gmail.com</a>
<a href=""mailto:dbpc.7.4.b@gmail.com"">dbpc.7.4.b@gmail.com</a>
<a href=""mailto:db.pc.7.4.b@gmail.com"">db.pc.7.4.b@gmail.com</a>
<a href=""mailto:office.duke1@gmail.com"">office.duke1@gmail.com</a>
<a href=""mailto:o.ff.ice...du.k.e.1@gmail.com"">o.ff.ice...du.k.e.1@gmail.com</a>
<a href=""mailto:offic.e..d.u.ke1@gmail.com"">offic.e..d.u.ke1@gmail.com</a>
<a href=""mailto:o.f.fi.ce...d.uke.1@gmail.com"">o.f.fi.ce...d.uke.1@gmail.com</a>
<a href=""mailto:o.ff.ic.e...du.ke.1@gmail.com"">o.ff.ic.e...du.ke.1@gmail.com</a>
<a href=""mailto:o.f.fice..d.u.k.e.1@gmail.com"">o.f.fice..d.u.k.e.1@gmail.com</a>
<a href=""mailto:o.ff.ic.e..d.u.ke1@gmail.com"">o.ff.ic.e..d.u.ke1@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.duk.e.1@gmail.com"">o.f.fi.c.e.duk.e.1@gmail.com</a>
<a href=""mailto:of.fi.ce...d.u.k.e.1@gmail.com"">of.fi.ce...d.u.k.e.1@gmail.com</a>
<a href=""mailto:o.f.fice.d.uke1@gmail.com"">o.f.fice.d.uke1@gmail.com</a>
<a href=""mailto:o.ffi.c.e...d.u.ke1@gmail.com"">o.ffi.c.e...d.u.ke1@gmail.com</a>
<a href=""mailto:o.ffic.e..d.uke.1@gmail.com"">o.ffic.e..d.uke.1@gmail.com</a>
<a href=""mailto:o.f.f.ice..du.ke1@gmail.com"">o.f.f.ice..du.ke1@gmail.com</a>
<a href=""mailto:offi.ce..d.uk.e1@gmail.com"">offi.ce..d.uk.e1@gmail.com</a>
<a href=""mailto:of.fice..duk.e1@gmail.com"">of.fice..duk.e1@gmail.com</a>
<a href=""mailto:of.fice..du.k.e1@gmail.com"">of.fice..du.k.e1@gmail.com</a>
<a href=""mailto:offi.ce.d.u.k.e.1@gmail.com"">offi.ce.d.u.k.e.1@gmail.com</a>
<a href=""mailto:off.ice..du.ke1@gmail.com"">off.ice..du.ke1@gmail.com</a>
<a href=""mailto:of.f.ice..du.ke.1@gmail.com"">of.f.ice..du.ke.1@gmail.com</a>
<a href=""mailto:o.f.fic.e.d.u.ke.1@gmail.com"">o.f.fic.e.d.u.ke.1@gmail.com</a>
<a href=""mailto:off.ic.e...duke.1@gmail.com"">off.ic.e...duke.1@gmail.com</a>
<a href=""mailto:off.ice...du.k.e1@gmail.com"">off.ice...du.k.e1@gmail.com</a>
<a href=""mailto:o.f.fi.ce..du.k.e.1@gmail.com"">o.f.fi.ce..du.k.e.1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.d.uk.e1@gmail.com"">o.f.f.ic.e.d.uk.e1@gmail.com</a>
<a href=""mailto:of.f.ice...d.uk.e1@gmail.com"">of.f.ice...d.uk.e1@gmail.com</a>
<a href=""mailto:of.f.i.ce...du.ke.1@gmail.com"">of.f.i.ce...du.ke.1@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e.duk.e1@gmail.com"">o.f.f.i.c.e.duk.e1@gmail.com</a>
<a href=""mailto:o.f.f.ice...duke.1@gmail.com"">o.f.f.ice...duke.1@gmail.com</a>
<a href=""mailto:o.ffic.e..duk.e.1@gmail.com"">o.ffic.e..duk.e.1@gmail.com</a>
<a href=""mailto:of.fice..duk.e1@gmail.com"">of.fice..duk.e1@gmail.com</a>
<a href=""mailto:o.ff.i.ce..d.u.k.e.1@gmail.com"">o.ff.i.ce..d.u.k.e.1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.d.u.ke1@gmail.com"">o.f.f.ic.e.d.u.ke1@gmail.com</a>
<a href=""mailto:o.ffi.ce..duk.e.1@gmail.com"">o.ffi.ce..duk.e.1@gmail.com</a>
<a href=""mailto:o.ff.ice...du.k.e1@gmail.com"">o.ff.ice...du.k.e1@gmail.com</a>
<a href=""mailto:off.ic.e..duke.1@gmail.com"">off.ic.e..duke.1@gmail.com</a>
<a href=""mailto:of.fic.e..duk.e.1@gmail.com"">of.fic.e..duk.e.1@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.duk.e1@gmail.com"">o.f.f.i.ce.duk.e1@gmail.com</a>
<a href=""mailto:o.f.fi.ce...duk.e.1@gmail.com"">o.f.fi.ce...duk.e.1@gmail.com</a>
<a href=""mailto:off.ice..d.uke1@gmail.com"">off.ice..d.uke1@gmail.com</a>
<a href=""mailto:o.f.fice.d.u.k.e.1@gmail.com"">o.f.fice.d.u.k.e.1@gmail.com</a>
<a href=""mailto:of.f.ic.e.duk.e.1@gmail.com"">of.f.ic.e.duk.e.1@gmail.com</a>
<a href=""mailto:of.f.i.c.e..d.u.k.e1@gmail.com"">of.f.i.c.e..d.u.k.e1@gmail.com</a>
<a href=""mailto:of.f.ice..d.uk.e1@gmail.com"">of.f.ice..d.uk.e1@gmail.com</a>
<a href=""mailto:offi.ce..d.u.ke1@gmail.com"">offi.ce..d.u.ke1@gmail.com</a>
<a href=""mailto:o.ff.i.c.e..d.uke1@gmail.com"">o.ff.i.c.e..d.uke1@gmail.com</a>
<a href=""mailto:of.f.i.c.e...d.u.ke.1@gmail.com"">of.f.i.c.e...d.u.ke.1@gmail.com</a>
<a href=""mailto:o.ff.ice..duke1@gmail.com"">o.ff.ice..duke1@gmail.com</a>
<a href=""mailto:o.ffi.ce..d.uk.e.1@gmail.com"">o.ffi.ce..d.uk.e.1@gmail.com</a>
<a href=""mailto:off.ic.e..d.uk.e1@gmail.com"">off.ic.e..d.uk.e1@gmail.com</a>
<a href=""mailto:off.i.c.e...d.uke1@gmail.com"">off.i.c.e...d.uke1@gmail.com</a>
<a href=""mailto:o.ffic.e..d.u.ke.1@gmail.com"">o.ffic.e..d.u.ke.1@gmail.com</a>
<a href=""mailto:of.f.ice.d.uke.1@gmail.com"">of.f.ice.d.uke.1@gmail.com</a>
<a href=""mailto:o.f.fi.ce..d.uke1@gmail.com"">o.f.fi.ce..d.uke1@gmail.com</a>
<a href=""mailto:o.ffi.c.e.du.ke1@gmail.com"">o.ffi.c.e.du.ke1@gmail.com</a>
<a href=""mailto:offi.c.e...duke.1@gmail.com"">offi.c.e...duke.1@gmail.com</a>
<a href=""mailto:o.ffice..d.uk.e.1@gmail.com"">o.ffice..d.uk.e.1@gmail.com</a>
<a href=""mailto:o.ffic.e..du.ke.1@gmail.com"">o.ffic.e..du.ke.1@gmail.com</a>
<a href=""mailto:of.fi.ce..du.k.e.1@gmail.com"">of.fi.ce..du.k.e.1@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.du.k.e1@gmail.com"">o.f.fi.c.e.du.k.e1@gmail.com</a>
<a href=""mailto:o.f.fi.ce..d.uk.e1@gmail.com"">o.f.fi.ce..d.uk.e1@gmail.com</a>
<a href=""mailto:office..d.uk.e1@gmail.com"">office..d.uk.e1@gmail.com</a>
<a href=""mailto:o.f.f.ice...d.uke1@gmail.com"">o.f.f.ice...d.uke1@gmail.com</a>
<a href=""mailto:o.ff.ic.e.du.k.e1@gmail.com"">o.ff.ic.e.du.k.e1@gmail.com</a>
<a href=""mailto:o.f.fice...d.uke1@gmail.com"">o.f.fice...d.uke1@gmail.com</a>
<a href=""mailto:o.f.fi.c.e...duk.e.1@gmail.com"">o.f.fi.c.e...duk.e.1@gmail.com</a>
<a href=""mailto:offi.ce...du.ke.1@gmail.com"">offi.ce...du.ke.1@gmail.com</a>
<a href=""mailto:off.ic.e.d.u.k.e1@gmail.com"">off.ic.e.d.u.k.e1@gmail.com</a>
<a href=""mailto:o.f.f.i.ce..d.uk.e1@gmail.com"">o.f.f.i.ce..d.uk.e1@gmail.com</a>
<a href=""mailto:o.ff.i.ce..duk.e1@gmail.com"">o.ff.i.ce..duk.e1@gmail.com</a>
<a href=""mailto:o.ffi.ce..d.u.k.e1@gmail.com"">o.ffi.ce..d.u.k.e1@gmail.com</a>
<a href=""mailto:o.f.fi.ce..d.u.ke.1@gmail.com"">o.f.fi.ce..d.u.ke.1@gmail.com</a>
<a href=""mailto:off.i.c.e...du.ke1@gmail.com"">off.i.c.e...du.ke1@gmail.com</a>
<a href=""mailto:off.i.c.e.duke.1@gmail.com"">off.i.c.e.duke.1@gmail.com</a>
<a href=""mailto:o.ffi.c.e..d.uk.e1@gmail.com"">o.ffi.c.e..d.uk.e1@gmail.com</a>
<a href=""mailto:off.i.c.e..du.k.e1@gmail.com"">off.i.c.e..du.k.e1@gmail.com</a>
<a href=""mailto:of.f.ice...du.ke.1@gmail.com"">of.f.ice...du.ke.1@gmail.com</a>
<a href=""mailto:o.ffi.c.e..d.u.k.e1@gmail.com"">o.ffi.c.e..d.u.k.e1@gmail.com</a>
<a href=""mailto:o.f.f.ice..d.u.k.e.1@gmail.com"">o.f.f.ice..d.u.k.e.1@gmail.com</a>
<a href=""mailto:of.f.ic.e...d.uk.e.1@gmail.com"">of.f.ic.e...d.uk.e.1@gmail.com</a>
<a href=""mailto:o.ffice...du.ke1@gmail.com"">o.ffice...du.ke1@gmail.com</a>
<a href=""mailto:of.f.i.ce..du.k.e.1@gmail.com"">of.f.i.ce..du.k.e.1@gmail.com</a>
<a href=""mailto:offic.e.d.u.ke.1@gmail.com"">offic.e.d.u.ke.1@gmail.com</a>
<a href=""mailto:of.fi.ce..d.uke.1@gmail.com"">of.fi.ce..d.uke.1@gmail.com</a>
<a href=""mailto:o.f.f.ice...du.ke1@gmail.com"">o.f.f.ice...du.ke1@gmail.com</a>
<a href=""mailto:offic.e..du.ke1@gmail.com"">offic.e..du.ke1@gmail.com</a>
<a href=""mailto:of.fic.e.d.u.ke.1@gmail.com"">of.fic.e.d.u.ke.1@gmail.com</a>
<a href=""mailto:of.fi.ce..d.uke1@gmail.com"">of.fi.ce..d.uke1@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e..duke1@gmail.com"">o.f.f.i.c.e..duke1@gmail.com</a>
<a href=""mailto:off.ice...d.u.ke.1@gmail.com"">off.ice...d.u.ke.1@gmail.com</a>
<a href=""mailto:off.i.ce..duke.1@gmail.com"">off.i.ce..duke.1@gmail.com</a>
<a href=""mailto:of.fice.d.u.ke.1@gmail.com"">of.fice.d.u.ke.1@gmail.com</a>
<a href=""mailto:o.ffic.e...duke1@gmail.com"">o.ffic.e...duke1@gmail.com</a>
<a href=""mailto:o.ff.ic.e..du.k.e.1@gmail.com"">o.ff.ic.e..du.k.e.1@gmail.com</a>
<a href=""mailto:of.fi.ce..du.ke.1@gmail.com"">of.fi.ce..du.ke.1@gmail.com</a>
<a href=""mailto:of.fice..d.uke.1@gmail.com"">of.fice..d.uke.1@gmail.com</a>
<a href=""mailto:of.fic.e.duke1@gmail.com"">of.fic.e.duke1@gmail.com</a>
<a href=""mailto:offi.ce...du.k.e1@gmail.com"">offi.ce...du.k.e1@gmail.com</a>
<a href=""mailto:of.fi.ce..du.k.e.1@gmail.com"">of.fi.ce..du.k.e.1@gmail.com</a>
<a href=""mailto:off.ic.e..duk.e1@gmail.com"">off.ic.e..duk.e1@gmail.com</a>
<a href=""mailto:off.ic.e...d.u.ke.1@gmail.com"">off.ic.e...d.u.ke.1@gmail.com</a>
<a href=""mailto:off.ice..duk.e.1@gmail.com"">off.ice..duk.e.1@gmail.com</a>
<a href=""mailto:o.ff.ic.e..duk.e1@gmail.com"">o.ff.ic.e..duk.e1@gmail.com</a>
<a href=""mailto:o.ff.ic.e.du.ke.1@gmail.com"">o.ff.ic.e.du.ke.1@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e..du.ke.1@gmail.com"">o.f.f.i.c.e..du.ke.1@gmail.com</a>
<a href=""mailto:off.i.ce..d.u.k.e1@gmail.com"">off.i.ce..d.u.k.e1@gmail.com</a>
<a href=""mailto:o.ff.i.ce.d.u.ke.1@gmail.com"">o.ff.i.ce.d.u.ke.1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e..d.uke1@gmail.com"">o.f.f.ic.e..d.uke1@gmail.com</a>
<a href=""mailto:offi.c.e..d.uke.1@gmail.com"">offi.c.e..d.uke.1@gmail.com</a>
<a href=""mailto:of.f.i.ce.duk.e.1@gmail.com"">of.f.i.ce.duk.e.1@gmail.com</a>
<a href=""mailto:o.ff.i.c.e..duke.1@gmail.com"">o.ff.i.c.e..duke.1@gmail.com</a>
<a href=""mailto:o.f.fice..du.ke1@gmail.com"">o.f.fice..du.ke1@gmail.com</a>
<a href=""mailto:office.duke1@gmail.com"">office.duke1@gmail.com</a>
<a href=""mailto:of.fice.d.uk.e.1@gmail.com"">of.fice.d.uk.e.1@gmail.com</a>
<a href=""mailto:o.f.f.ice.d.u.ke1@gmail.com"">o.f.f.ice.d.u.ke1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e..d.uk.e.1@gmail.com"">o.f.f.ic.e..d.uk.e.1@gmail.com</a>
<a href=""mailto:o.ffi.ce..d.uk.e1@gmail.com"">o.ffi.ce..d.uk.e1@gmail.com</a>
<a href=""mailto:offi.ce..d.uk.e.1@gmail.com"">offi.ce..d.uk.e.1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.du.ke1@gmail.com"">o.f.f.ic.e.du.ke1@gmail.com</a>
<a href=""mailto:o.ff.ic.e.d.uke.1@gmail.com"">o.ff.ic.e.d.uke.1@gmail.com</a>
<a href=""mailto:of.f.ice..d.uke1@gmail.com"">of.f.ice..d.uke1@gmail.com</a>
<a href=""mailto:office.d.uke1@gmail.com"">office.d.uke1@gmail.com</a>
<a href=""mailto:offi.c.e..d.uk.e.1@gmail.com"">offi.c.e..d.uk.e.1@gmail.com</a>
<a href=""mailto:o.ffice.d.u.k.e.1@gmail.com"">o.ffice.d.u.k.e.1@gmail.com</a>
<a href=""mailto:of.f.ic.e..d.uke.1@gmail.com"">of.f.ic.e..d.uke.1@gmail.com</a>
<a href=""mailto:o.ffic.e.d.uke.1@gmail.com"">o.ffic.e.d.uke.1@gmail.com</a>
<a href=""mailto:of.fice..d.uke.1@gmail.com"">of.fice..d.uke.1@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.d.uke1@gmail.com"">o.f.f.i.ce.d.uke1@gmail.com</a>
<a href=""mailto:of.f.i.ce..d.u.k.e.1@gmail.com"">of.f.i.ce..d.u.k.e.1@gmail.com</a>
<a href=""mailto:o.f.f.ice..d.uk.e.1@gmail.com"">o.f.f.ice..d.uk.e.1@gmail.com</a>
<a href=""mailto:o.f.fic.e.d.uke1@gmail.com"">o.f.fic.e.d.uke1@gmail.com</a>
<a href=""mailto:of.fi.c.e...du.ke.1@gmail.com"">of.fi.c.e...du.ke.1@gmail.com</a>
<a href=""mailto:o.ff.i.ce..duke.1@gmail.com"">o.ff.i.ce..duke.1@gmail.com</a>
<a href=""mailto:o.f.f.i.ce..d.u.ke.1@gmail.com"">o.f.f.i.ce..d.u.ke.1@gmail.com</a>
<a href=""mailto:of.f.i.ce..d.uk.e1@gmail.com"">of.f.i.ce..d.uk.e1@gmail.com</a>
<a href=""mailto:offi.c.e...d.u.ke1@gmail.com"">offi.c.e...d.u.ke1@gmail.com</a>
<a href=""mailto:offic.e..d.u.k.e.1@gmail.com"">offic.e..d.u.k.e.1@gmail.com</a>
<a href=""mailto:of.f.ice...d.uk.e.1@gmail.com"">of.f.ice...d.uk.e.1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e...du.k.e.1@gmail.com"">o.f.f.ic.e...du.k.e.1@gmail.com</a>
<a href=""mailto:o.f.fi.c.e...du.ke.1@gmail.com"">o.f.fi.c.e...du.ke.1@gmail.com</a>
<a href=""mailto:of.fi.ce...duk.e1@gmail.com"">of.fi.ce...duk.e1@gmail.com</a>
<a href=""mailto:o.ffi.ce...d.u.ke.1@gmail.com"">o.ffi.ce...d.u.ke.1@gmail.com</a>
<a href=""mailto:office.du.ke.1@gmail.com"">office.du.ke.1@gmail.com</a>
<a href=""mailto:o.f.fic.e..duke1@gmail.com"">o.f.fic.e..duke1@gmail.com</a>
<a href=""mailto:off.i.c.e..d.uke1@gmail.com"">off.i.c.e..d.uke1@gmail.com</a>
<a href=""mailto:of.f.ic.e..duk.e1@gmail.com"">of.f.ic.e..duk.e1@gmail.com</a>
<a href=""mailto:o.ffi.ce..duk.e.1@gmail.com"">o.ffi.ce..duk.e.1@gmail.com</a>
<a href=""mailto:of.f.i.c.e.d.uk.e1@gmail.com"">of.f.i.c.e.d.uk.e1@gmail.com</a>
<a href=""mailto:o.f.fice...du.ke.1@gmail.com"">o.f.fice...du.ke.1@gmail.com</a>
<a href=""mailto:offi.c.e..d.uke.1@gmail.com"">offi.c.e..d.uke.1@gmail.com</a>
<a href=""mailto:of.f.ic.e..duke1@gmail.com"">of.f.ic.e..duke1@gmail.com</a>
<a href=""mailto:of.fi.ce.d.u.k.e1@gmail.com"">of.fi.ce.d.u.k.e1@gmail.com</a>
<a href=""mailto:of.fice...duke1@gmail.com"">of.fice...duke1@gmail.com</a>
<a href=""mailto:o.f.fi.ce...d.u.k.e.1@gmail.com"">o.f.fi.ce...d.u.k.e.1@gmail.com</a>
<a href=""mailto:off.i.c.e...duk.e.1@gmail.com"">off.i.c.e...duk.e.1@gmail.com</a>
<a href=""mailto:off.i.c.e..duk.e1@gmail.com"">off.i.c.e..duk.e1@gmail.com</a>
<a href=""mailto:o.f.fi.ce.d.uk.e1@gmail.com"">o.f.fi.ce.d.uk.e1@gmail.com</a>
<a href=""mailto:of.fi.c.e..d.u.ke.1@gmail.com"">of.fi.c.e..d.u.ke.1@gmail.com</a>
<a href=""mailto:of.f.i.ce..du.ke1@gmail.com"">of.f.i.ce..du.ke1@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e..d.u.k.e.1@gmail.com"">o.f.f.i.c.e..d.u.k.e.1@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.d.uke.1@gmail.com"">o.f.f.i.ce.d.uke.1@gmail.com</a>
<a href=""mailto:of.f.ic.e..d.uk.e.1@gmail.com"">of.f.ic.e..d.uk.e.1@gmail.com</a>
<a href=""mailto:o.f.fic.e..duk.e1@gmail.com"">o.f.fic.e..duk.e1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e..duke1@gmail.com"">o.f.f.ic.e..duke1@gmail.com</a>
<a href=""mailto:off.ice.duk.e1@gmail.com"">off.ice.duk.e1@gmail.com</a>
<a href=""mailto:o.ffic.e...d.u.k.e.1@gmail.com"">o.ffic.e...d.u.k.e.1@gmail.com</a>
<a href=""mailto:o.ffi.ce..d.uke.1@gmail.com"">o.ffi.ce..d.uke.1@gmail.com</a>
<a href=""mailto:o.ffi.ce.duk.e1@gmail.com"">o.ffi.ce.duk.e1@gmail.com</a>
<a href=""mailto:o.f.f.i.ce..duk.e.1@gmail.com"">o.f.f.i.ce..duk.e.1@gmail.com</a>
<a href=""mailto:o.f.fi.c.e..duk.e.1@gmail.com"">o.f.fi.c.e..duk.e.1@gmail.com</a>
<a href=""mailto:of.fi.c.e...d.u.ke1@gmail.com"">of.fi.c.e...d.u.ke1@gmail.com</a>
<a href=""mailto:offic.e...duke1@gmail.com"">offic.e...duke1@gmail.com</a>
<a href=""mailto:o.f.fi.ce...du.ke.1@gmail.com"">o.f.fi.ce...du.ke.1@gmail.com</a>
<a href=""mailto:o.f.f.ice..duk.e1@gmail.com"">o.f.f.ice..duk.e1@gmail.com</a>
<a href=""mailto:o.ffic.e..d.uk.e1@gmail.com"">o.ffic.e..d.uk.e1@gmail.com</a>
<a href=""mailto:o.ff.i.ce...du.ke1@gmail.com"">o.ff.i.ce...du.ke1@gmail.com</a>
<a href=""mailto:o.ff.i.c.e..d.u.k.e1@gmail.com"">o.ff.i.c.e..d.u.k.e1@gmail.com</a>
<a href=""mailto:o.ff.i.c.e..du.ke1@gmail.com"">o.ff.i.c.e..du.ke1@gmail.com</a>
<a href=""mailto:offic.e...d.u.ke.1@gmail.com"">offic.e...d.u.ke.1@gmail.com</a>
<a href=""mailto:of.fi.c.e..du.ke1@gmail.com"">of.fi.c.e..du.ke1@gmail.com</a>
<a href=""mailto:off.i.ce...du.ke1@gmail.com"">off.i.ce...du.ke1@gmail.com</a>
<a href=""mailto:office.d.u.k.e.1@gmail.com"">office.d.u.k.e.1@gmail.com</a>
<a href=""mailto:o.f.fi.ce...d.uke1@gmail.com"">o.f.fi.ce...d.uke1@gmail.com</a>
<a href=""mailto:off.ic.e..d.uke1@gmail.com"">off.ic.e..d.uke1@gmail.com</a>
<a href=""mailto:o.ff.ic.e..d.uke1@gmail.com"">o.ff.ic.e..d.uke1@gmail.com</a>
<a href=""mailto:o.f.f.ice...d.u.k.e1@gmail.com"">o.f.f.ice...d.u.k.e1@gmail.com</a>
<a href=""mailto:of.fi.c.e...d.uk.e1@gmail.com"">of.fi.c.e...d.uk.e1@gmail.com</a>
<a href=""mailto:o.ff.i.ce..d.uk.e.1@gmail.com"">o.ff.i.ce..d.uk.e.1@gmail.com</a>
<a href=""mailto:of.f.ic.e.d.uke.1@gmail.com"">of.f.ic.e.d.uke.1@gmail.com</a>
<a href=""mailto:o.ffi.c.e.d.u.ke.1@gmail.com"">o.ffi.c.e.d.u.ke.1@gmail.com</a>
<a href=""mailto:of.f.ic.e...d.uk.e1@gmail.com"">of.f.ic.e...d.uk.e1@gmail.com</a>
<a href=""mailto:o.ffic.e..duke1@gmail.com"">o.ffic.e..duke1@gmail.com</a>
<a href=""mailto:o.ffice...d.u.ke1@gmail.com"">o.ffice...d.u.ke1@gmail.com</a>
<a href=""mailto:of.fic.e..duk.e1@gmail.com"">of.fic.e..duk.e1@gmail.com</a>
<a href=""mailto:off.i.ce...d.uk.e1@gmail.com"">off.i.ce...d.uk.e1@gmail.com</a>
<a href=""mailto:o.f.fi.c.e...d.uk.e.1@gmail.com"">o.f.fi.c.e...d.uk.e.1@gmail.com</a>
<a href=""mailto:o.f.fi.c.e...du.k.e.1@gmail.com"">o.f.fi.c.e...du.k.e.1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e..d.u.k.e.1@gmail.com"">o.f.f.ic.e..d.u.k.e.1@gmail.com</a>
<a href=""mailto:off.i.c.e..d.uke.1@gmail.com"">off.i.c.e..d.uke.1@gmail.com</a>
<a href=""mailto:offi.ce.d.uk.e.1@gmail.com"">offi.ce.d.uk.e.1@gmail.com</a>
<a href=""mailto:o.f.fice.duke1@gmail.com"">o.f.fice.duke1@gmail.com</a>
<a href=""mailto:o.ffic.e..duke1@gmail.com"">o.ffic.e..duke1@gmail.com</a>"
PkNccdTp,Untitled,yarin0600,C++,Wednesday 15th of November 2023 01:51:32 PM CDT,"// Find the index of first 1 in a sorted array of 0’s and 1’s

/**
 * Given a sorted array consisting 0’s and 1’s. The problem is to find the index of first ‘1’ in the sorted array.
 * It could be possible that the array consists of only 0’s or only 1’s. If 1’s are not present in the array then print “-1”.
 *
 * Examples:
 *    Input : arr[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1}
 *    Output : 6
 *    Explanation: The index of first 1 in the array is 6.

 *    Input : arr[] = {0, 0, 0, 0}
 *    Output : -1
 *    Explanation: 1’s are not present in the array.
 *
 * Source: Asked in Amazon Interview
 */

#include <iostream>
#include <chrono>

int firstIdxOfFirstOne(int *arr, int n);
int firstIdxOfFirstOne2(int *arr, int n);

int main()
{
   int arr[1000000]{};
   arr[999999] = 1;

   int n = sizeof(arr) / sizeof(*arr);
   auto start = std::chrono::steady_clock::now();
   printf(""%d\n"", firstIdxOfFirstOne(arr, n));
   // printf(""%d\n"", firstIdxOfFirstOne2(arr, n));
   auto end = std::chrono::steady_clock::now();
   auto totalDuration = std::chrono::duration_cast<std::chrono::milliseconds>(end - start).count();
   std::cout << ""Operation took: "" << totalDuration << "" miliseconds\n"";
}

int firstIdxOfFirstOne(int *arr, int n)
{
   if (arr[0] == 1)
      return 0;

   int i = 1;
   for (; i < n && arr[i] == 0; i *= 2)
   {
   }

   int left = (i / 2) + 1;
   int right = i >= n ? n - 1 : i;
   int middle = -1;
   while (left <= right)
   {
      middle = (right - left) / 2 + left;
      if (arr[middle] == 1 && arr[middle - 1] == 0)
         return middle;
      else if (arr[middle] == 0)
         left = middle + 1;
      else
         right = middle - 1;
   }
   return -1;
}

int firstIdxOfFirstOne2(int *arr, int n)
{
   if (arr[0] == 1)
      return 0;

   int left = 0;
   int right = n - 1;
   int middle = -1;

   while (left <= right)
   {
      middle = (right - left) / 2 + left;
      if (arr[middle] == 1 && arr[middle - 1] == 0)
         return middle;
      else if (arr[middle] == 0)
         left = middle + 1;
      else
         right = middle - 1;
   }
   return -1;
}

/*
if (arr[0] == 1)
      return 0;

   int left, right, mid;
   left = 0, right = n - 1;
   while (left <= right)
   {
      mid = (right - left) / 2 + left;

      if (arr[mid] == 1 && arr[mid - 1] == 0)
         return mid;
      else if (arr[mid] == 0)
         left = mid + 1;
      else
         right = mid - 1;
   }
   return -1;

*/
"
jBy5n37w,Untitled,yarin0600,MySQL,Wednesday 15th of November 2023 12:44:44 PM CDT,"User(UserCode int, first_name varchar(256), last_name varchar(256), last_login_date (date), password varchar(256));
UserHistLogin (UserCode int, 


CREATE TABLE Users(
		UserCode int PRIMARY KEY,
		first_name varchar(255),
		last_name varchar(255),
		last_login_date DATETIME,
		password varchar(255)
	);

CREATE TABLE UserHistLogin(
    UserCode int,
    LoginDate DATETIME,
    LoginStatus int,
    PRIMARY KEY (UserCode, LoginDate),
    FOREIGN KEY (UserCode) REFERENCES Users(UserCode)
);

-- Insert dummy data into Users table
INSERT INTO Users (UserCode, first_name, last_name, last_login_date, password)
VALUES
(1, 'John', 'Doe', '2023-11-15 10:00:00', 'password123'),
(2, 'Jane', 'Smith', '2023-11-14 15:30:00', 'securepass'),
(3, 'Alice', 'Johnson', '2023-11-13 08:45:00', 'letmein');

-- Insert dummy data into UserHistLogin table
INSERT INTO UserHistLogin (UserCode, LoginDate, LoginStatus)
VALUES
(1, '2023-11-15 10:00:00', 1), -- Successful login
(1, '2023-11-14 09:30:00', 0), -- Failed login
(2, '2023-11-14 15:30:00', 1), -- Successful login
(3, '2023-11-13 08:45:00', 1); -- Successful login


Assumption: UserCode is int and not string:


SELECT *
FROM Users
JOIN UserHistLogin
ON Users.UserCode
WHERE LoginStatus = 1 AND Users.UserCode = ""SHAIJA""
ORDER BY LoginDate DESC
LIMIT 1;


SELECT first_name, last_name
FROM Users
WHERE UserCode IN (
    SELECT UserCode
    FROM UserHistLogin
    WHERE login_status = 0
		AND DATE(login_date) = CURRENT_DATE
    GROUP BY UserCode
    HAVING COUNT(*) >= 3
);
"
ABuCpvib,my_lib.h,valenki13,C++,Wednesday 15th of November 2023 12:43:48 PM CDT,"// my_lib.h
#pragma once

#include <iostream>

template<class Type>
int dsize(Type* a) {
	if (a)
		return _msize(a) / sizeof(Type);
	else
		return 0;
}

template<class Type>
void show_arr(int sz, Type* arr, char ch = ' ') {
	for (int k = 0; k < sz; ++k)
		std::cout << arr[k] << ch;
	std::cout << std::endl;
}

template <class Type>
bool append(Type*& arr, Type val) {
	if (arr) {
		auto buff = new Type[dsize(arr) + 1];
		for (int k = 0; k < dsize(arr); ++k)
			buff[k] = arr[k];
		buff[dsize(arr)] = val;
		delete[] arr;
		arr = buff;
		return true;
	}
	else {
		return false;
	}
}

template<class Type>
bool insert(Type*& arr, int id, Type val) {
	if (arr && dsize(arr) > id) {
		auto buff = new Type[dsize(arr) + 1];
		for (int k = 0; k < id; ++k)
			buff[k] = arr[k];
		buff[id] = val;
		for (int k = id; k < dsize(arr); k++)
			buff[k + 1] = arr[k];
		//show_arr(dsize(buff), buff);
		delete[] arr;
		arr = buff;
		return true;
	}
	else {
		return false;
	}
}

template<class Type>
void myswap(Type& a, Type& b) {
	Type t = a;
	a = b;
	b = t;
}

template<class Type>
void shuffle(Type* arr) {
	int sz = dsize(arr);
	for (int k = 0; k < 100; k++)
		myswap(arr[rand() % sz],
			arr[rand() % sz]
		);
}

template <class Type>
int get_min(int size, Type* arr) {
	Type min_val = arr[0];
	int min_id = 0;
	for (int k = 1; k < size; k++) {
		if (min_val > arr[k]) {
			min_val = arr[k];
			min_id = k;
		}
	}
	return min_id;
}

template <class Type>
void select_sort(int size, Type* arr) {
	for (int k = 0; k < size; k++) {
		myswap(arr[k],
			arr[get_min(size - k, arr + k) + k]);
	}
}

template <class Type>
void bubble_sort(int size, Type* arr) {
	int iter = 0;
	for (int w = 0; w < size; w++) {
		//cout << ""---- Walk "" << w + 1 
		//	<< "" ----"" << endl;
		bool is_sort = true;
		for (int k = 0; k < size - 1 - w; k++) {
			if (arr[k] < arr[k + 1]) {
				myswap(arr[k], arr[k + 1]);
				is_sort = false;
			}
			/*cout << iter++ << "" : ""
				 << is_sort << "" : "";
			show_arr(size, arr);*/
		}
		if (is_sort)
			return;
	}
}

template<class Type>
void spec_show(int begin, int end, Type* arr) {
	for (int k = begin; k < end; k++) {
		std::cout << arr[k] << "" "";
	}
}

template<class Type>
void isert_sort(int size, Type* arr) {
	int iter = 0;
	for (int w = 1; w < size; w++) {
		int k, t = arr[w];
		for (k = w - 1; k >= 0 && arr[k] < t; k--) {
			arr[k + 1] = arr[k];
			//std::cout << iter++ << "" "" << t << "" : "";
			//spec_show(0, k, arr);
			//std::cout << ""("" << t << "") "";
			//spec_show(k+1, size, arr);
			//cout << std::endl;
		}
		arr[k + 1] = t;
	}
}


void discrete_sort(int size, int* arr) {
	// array values are from 0 to 10
	int baskets[10]{};
	for (int k = 0; k < size; k++) {
		baskets[arr[k]]++;
	}
	int n = 0;
	for (int k = 0; k < std::size(baskets); k++) {
		while (baskets[k] > 0) {
			arr[n] = k;
			baskets[k]--;
			n++;
		}
	}
}"
20cbVTYB,lesson_151123,valenki13,C++,Wednesday 15th of November 2023 12:43:18 PM CDT,"#include <iostream>
#include ""my_lib.h""

#include <chrono>

// pastebin.com/WCDKQ7Fd
using namespace std;



void test_sort() {
	srand(time(NULL));
	
	int a[100000];
	for (int k = 0; k < size(a); k++) {
		a[k] = rand() % 10000;
	}
	int sz = (int)size(a);
	cout << ""Before: "";
	//show_arr(sz, a);
	
	auto start_time = std::chrono::high_resolution_clock::now();

	isert_sort(sz, a);

	auto end_time = std::chrono::high_resolution_clock::now();
	std::chrono::duration<double> time = end_time - start_time;
	cout << time.count() << "" s to run.\n"";


	cout << ""After : "";
	//show_arr(sz, a);
}

int main() {
	test_sort();
	return 0;
}"
mJvKiWcj,Untitled,Nenogzar,Python,Wednesday 15th of November 2023 12:37:18 PM CDT,"lines = [input().split() for _ in range(3)]
first_player_win = None

for player in ['1', '2']:
    if (any(all(cell == player for cell in line) for line in lines)
            or any(all(line[i] == player for line in lines) for i in range(3))):
        first_player_win = (player == '1')
        break

# Check diagonals for both players
for player in ['1', '2']:
    if (all(lines[i][i] == player for i in range(3))
            or all(lines[i][2 - i] == player for i in range(3))):
        first_player_win = (player == '1')
        break

if first_player_win is None:
    print(""Draw!"")
elif first_player_win:
    print(""First player won"")
else:
    print(""Second player won"")"
F1xZhq5t,Untitled,dllbridge,C,Wednesday 15th of November 2023 12:35:10 PM CDT,"






#include <stdio.h>

///////////////////////////////////////////////////
struct TT
{
	
	int nYear;
	
	float  fH;

}Dima, s[44];



///////////////////////////////////////////////////
int main()
{
	
	

	
	Dima.nYear = 1973 ;
	Dima.fH    = 184.7;
	    
//	printf(""size of Dima = %d\n"", sizeof(Dima));
	
	printf(""nYear = %d, fH = %.2f\n"", Dima.nYear, Dima.fH);  
}





























/*
#include <stdio.h>



///////////////////////////////////////////////////
int main()
{
	
	double h = 1.00,
	       s = 0.01,
	       t       ;
	
	for (int i = 0; i < 365; i++)
	{

		printf(""day %d  - "", i);
		t = h * s;
		h = t + h;
		printf(""%.2f\n"", h);
	
	}

}


*/




















/*

#include <stdio.h>


	
void foo(int*);	
   



////////////////////////////////////////////////////////
int main()
{
    
	int n = 77;
       
    printf(""        n = %d\n  "",   n );       
	printf(""address n = %d\n\n"",  &n ); 	
	
	foo(&n);  
	
    printf(""        n = %d\n"",     n );       
	printf(""address n = %d\n"",    &n );	
}






/////////////////////////////////////////////////////	
void foo(int *p)
{
	
	int &n = *p;
	
	n = n - 20;
    printf(""        n2 = %d\n  "",   n );       
	printf(""address n2 = %d\n\n"",   p );			
			
}


*/



*/"
7aKs1H0r,"Lab_5(linux bash, recursive search)",anticlown,Bash,Wednesday 15th of November 2023 12:33:52 PM CDT,"#!/bin/bash
 
 # Проверка правильности ввода из командной строки
 checkIsCorrectInput() {
	if [ $1 -ne 3 ]; then
		echo ""Введено неверное количество аргументов!""
		echo ""Формат ввода: $0 <каталог> <глубина вложенности> <файл вывода>""
		echo ""Глубина вложенности: 1 - файлы начального каталога, 2 - файлы подкаталогов и т.д.""
		echo ""Повторите запуск программы!""
		exit 1
	fi
 }
 
# Процедура для вывода текста условия
printProblemStatement() {
	echo -e ""\nДанная программа обходит заданный каталог и его подкаталоги до заданной глубины,\n\t затем выводит общее число каталогов на консоль, а подробный отчет в указанный файл""
} 

# Процедура вывода результатов поиска
printSearchResults() {
	echo -e ""\nОбщее количество папок: $countAllDirs""
} 
 
# Функция для рекурсивного поиска каталогов в каталоге
searchInDirectory() {
	local dirFiles=""$1""
	local depth=""$2""
	local innerDirCount=0
	local innerFileCount=0
	
    for file in $dirFiles/*
	do
		if [ -d ""$file"" ]; then
			echo ""$file"" >> $outputFile
			
			local nextDepth=$(($depth - 1))
			if [ $depth -ge 1 ]; then
				searchInDirectory $file $nextDepth	
			fi
			
			let ""countAllDirs=countAllDirs + 1""
			let ""innerDirCount=innerDirCount + 1""
		fi
		if [ -f ""$file"" ]; then
			let ""innerFileCount=innerFileCount + 1""
		fi
	done
	echo -e ""Количество вложенных каталогов в каталог $dirFiles: $innerDirCount"" >> $outputFile
	echo -e ""Количество вложенных файлов в каталог $dirFiles: $innerFileCount\n\n"" >> $outputFile
}
 
											######################################### 
											# 		Начало выполнения программы 	#
											#########################################
checkIsCorrectInput $# # проверяем, верное ли количество аргументов
> $3 #очищаем файл перед записью

countAllDirs=0
outputFile=$3 

printProblemStatement
searchInDirectory $1 $2
printSearchResults
"
w0zDAe6J,Untitled,yarin0600,Bash,Wednesday 15th of November 2023 12:31:41 PM CDT,"{
   ""version"": ""2.0.0"",
   ""tasks"": [
     {
       ""label"": ""Compile Selected CPP File"",
       ""type"": ""shell"",
       ""command"": ""g++"",
       ""args"": [],
       ""presentation"": {
         ""echo"": true,
         ""reveal"": ""always"",
         ""focus"": true,
         ""panel"": ""shared""
       },
       ""group"": {
         ""kind"": ""build"",
         ""isDefault"": true
       },
       ""dependsOn"": ""listCppFiles""
     },
     {
       ""label"": ""List CPP Files"",
       ""type"": ""shell"",
       ""command"": ""bash"",
       ""args"": [
         ""-c"",
         ""ls -1 ${workspaceFolder}/**/*.cpp""
       ],
       ""problemMatcher"": [],
       ""group"": {
         ""kind"": ""build"",
         ""isDefault"": true
       },
       ""identifier"": ""listCppFiles""
     }
   ]
 }
 "
E18t45L8,Untitled,Nenogzar,Python,Wednesday 15th of November 2023 12:28:47 PM CDT,"matrix = []

for run in range(3):
    list_app = list(map(int, input().split()))
    matrix.append(list_app)

first_player = False
second_player = False

# Check for rows and columns
for i in range(3):
    # Rows
    if matrix[i][0] == matrix[i][1] == matrix[i][2] != 0:
        if matrix[i][0] == 1:
            first_player = True
        elif matrix[i][0] == 2:
            second_player = True

    # Columns
    if matrix[0][i] == matrix[1][i] == matrix[2][i] != 0:
        if matrix[0][i] == 1:
            first_player = True
        elif matrix[0][i] == 2:
            second_player = True

# Check diagonals
if matrix[0][0] == matrix[1][1] == matrix[2][2] != 0:
    if matrix[0][0] == 1:
        first_player = True
    elif matrix[0][0] == 2:
        second_player = True

if matrix[0][2] == matrix[1][1] == matrix[2][0] != 0:
    if matrix[0][2] == 1:
        first_player = True
    elif matrix[0][2] == 2:
        second_player = True

# Determine the winner or draw
if first_player:
    print(""First player won"")
elif second_player:
    print(""Second player won"")
else:
    print(""Draw!"")
    
###########################################*-*FROM*CEO*-*###########################################

# field = []
#
# first_player_win = False
# second_player_win = False
# draw = False
# #  drawing the game field in separate lists
# for field_row in range(3):
#     current_row = input().split()
#     field.append(current_row)
# #  checking each row to see if there is a winner in the row
# for row in range(3):
#     if field[row][0] == field[row][1] == field[row][2] != ""0"":
#         if field[row][0] == field[row][1] == field[row][2] == ""1"":
#             first_player_win = True
#         elif field[row][0] == field[row][1] == field[row][2] == ""2"":
#             second_player_win = True
# #  checking each column to see if there is a winner in the column
# for col in range(3):
#     if field[0][col] == field[1][col] == field[2][col] != ""0"":
#         if field[0][col] == field[1][col] == field[2][col] == ""1"":
#             first_player_win = True
#         elif field[0][col] == field[1][col] == field[2][col] == ""2"":
#             second_player_win = True
# #  checking left diagonal if there is a winner
# if field[0][0] == field[1][1] == field[2][2] != ""0"":
#     if field[0][0] == field[1][1] == field[2][2] == ""1"":
#         first_player_win = True
#     elif field[0][0] == field[0][1] == field[2][2] == ""2"":
#         second_player_win = True
# #  checking right diagonal if there is a winner
# elif field[0][2] == field[1][1] == field[2][0] != ""0"":
#     if field[0][2] == field[1][1] == field[2][0] == ""1"":
#         first_player_win = True
#     elif field[0][2] == field[1][1] == field[2][0] == ""2"":
#         second_player_win = True
# # if there is no winner found the game is a draw
# if not first_player_win and not second_player_win:
#     draw = True
#
# if first_player_win:
#     print(""First player won"")
# elif second_player_win:
#     print(""Second player won"")
# elif draw:
#     print(""Draw!"")"
JwjaMVN2,Untitled,Josif_tepe,C++,Wednesday 15th of November 2023 12:00:38 PM CDT,"#include <iostream>
using namespace std;

int main(){
    int n;
    cin >> n;
    
    int sum = n * (n + 1) / 2;
    
    cout << sum << endl;
    return 0;
}


"
pzg6f7Fc,Connection String Tester,BrainSlugs83,C#,Wednesday 15th of November 2023 11:42:39 AM CDT,"// <PackageReference Include=""Microsoft.CrmSdk.CoreAssemblies"" Version=""9.0.2.42"" />
// <PackageReference Include=""Microsoft.CrmSdk.CoreTools"" Version=""9.1.0.92"" />
// <PackageReference Include=""Microsoft.CrmSdk.XrmTooling.CoreAssembly"" Version=""9.1.0.92"" />
// <PackageReference Include=""Microsoft.PowerPlatform.Dataverse.Client"" Version=""1.0.9"" />

public static void Main()
{
    while (true)
    {
        Console.Write(""Please enter your URL.\r\n> "");
        var url = Console.ReadLine();

        Console.Write(""Please enter your App Id.\r\n> "");
        var appId = Console.ReadLine();

        Console.Write(""Please enter your client secret.\r\n> "");
        var clientSecret = Console.ReadLine();

        string cxnStr =
            $""Url={url};"" +
            ""AuthType=ClientSecret;"" +
            $""AppId={appId};"" +
            $""ClientSecret={clientSecret};"" +
            ""LoginPrompt=Never;"";

        Console.WriteLine();
        Console.WriteLine();

        try
        {
            var client = new CrmServiceClient(cxnStr);
            if (!client.IsReady) { throw new InvalidOperationException(""Connection failed.""); }

            Console.ForegroundColor = ConsoleColor.White;
            Console.BackgroundColor = ConsoleColor.DarkGreen;
            Console.WriteLine(""Connection Succeeded!"");
            Console.ResetColor();
            Console.WriteLine();
            Console.WriteLine(""Org (Friendly) Name: "" + client.ConnectedOrgFriendlyName);
            Console.WriteLine(""Org (Unique) Name: "" + client.ConnectedOrgUniqueName);
            Console.WriteLine(""Tenant Id: "" + client.TenantId);
            Console.WriteLine(""CRM URI: "" + client.CrmConnectOrgUriActual);
            Console.WriteLine(""Environment Id: "" + client.EnvironmentId);
        }
        catch(Exception ex)
        {
            Console.ForegroundColor = ConsoleColor.White;
            Console.BackgroundColor = ConsoleColor.DarkRed;
            Console.WriteLine(ex.Message);
            Console.ResetColor();
        }
        Console.WriteLine();
        Console.WriteLine(string.Empty.PadRight(40, '='));
        Console.WriteLine();
        Console.WriteLine();
    }
}"
ANtfxNhG,Untitled,Josif_tepe,C++,Wednesday 15th of November 2023 11:41:04 AM CDT,"#include <iostream>
using namespace std;

int main(){
    int c, b;
    cin >> c >> b;
    
    char znak;
    cin >> znak;
    
    if(znak == '+') {
        cout << c + b << endl;
    }
    else if(znak == '-') {
        cout << c - b << endl;
    }
    else if(znak == '*') {
        cout << c * b << endl;
    }
    else if(znak == '/') {
        cout << c / b << endl;
    }
    return 0;
}


"
107cghuX,waaaaaa zadacha,trafffer,JavaScript,Wednesday 15th of November 2023 11:40:35 AM CDT,"function specNum(input){
    let inputNum = Number(input[0]);
    
    let printLine = """";
    
    for(let currNum = 1111; currNum <= 9999; currNum++){
        
        let numAsString = String(currNum);
        let evenSum = 0;

        for(let index = 0; index < numAsString.length; index++){
            let currDigit = Number(numAsString[index]);

            if(inputNum % currDigit === 0){
                evenSum ++;
                
            }
        }

        if (evenSum == numAsString.length){
            printLine += `${currNum} `;
        }
    }
    console.log(printLine);
}"
tN8q4ED2,apd sapt 8 assig1,STANAANDREY,MatLab,Wednesday 15th of November 2023 11:35:36 AM CDT,"% Design 10 filters with center frequencies and a common quality factor
center_frequencies = [31.5, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16000];
quality_factor = 10;

% Sample rate (you may adjust this based on your specific application)
Fs = 44100;

% Normalize center frequencies
normalized_center_frequencies = center_frequencies / (Fs / 2);

% Calculate cutoff frequencies for each filter
cutoff_frequencies = normalized_center_frequencies / quality_factor;

% Initialize figure for plotting
figure;

% Design and plot each filter
for i = 1:length(center_frequencies)
    % Design filter using fir1
    filter_order = 50;  % Adjust as needed
    b = fir1(filter_order, [cutoff_frequencies(i) cutoff_frequencies(i) + 2/quality_factor], 'bandpass');
    
    % Get frequency response using freqz
    [H, F] = freqz(b, 1, 1024, Fs);
    
    % Plot individual filter response
    subplot(2, 1, 1);
    plot(F, abs(H), 'DisplayName', sprintf('Center Frequency = %d Hz', center_frequencies(i)));
    hold on;
    
    % Plot cumulative frequency response
    subplot(2, 1, 2);
    plot(F, abs(H), 'DisplayName', sprintf('Center Frequency = %d Hz', center_frequencies(i)));
    hold on;
end

% Finish plotting individual filter response
subplot(2, 1, 1);
title('Individual Filter Responses');
xlabel('Frequency (Hz)');
ylabel('Magnitude');
legend;
grid on;

% Finish plotting cumulative frequency response
subplot(2, 1, 2);
title('Sum of Filter Responses');
xlabel('Frequency (Hz)');
ylabel('Magnitude');
legend;
grid on;

% Display final figure
hold off;

% Save the figure if needed
saveas(gcf, 'filter_responses.png');

% Optionally, you can write the filter coefficients to a file for later use
% dlmwrite('filter_coefficients.txt', b);
"
WJHHbTPv,apd week 8 assig 2,STANAANDREY,MatLab,Wednesday 15th of November 2023 11:33:53 AM CDT,"inputFile = 'input.wav';
gains = [0, 3, -6, 9, 0, -12, 6, 0, -9, 12]; % Example gains in dB
outputFile = 'output.wav';

equalizer(inputFile, gains, outputFile);


function equalizer(inputFile, gains, outputFile)
    % Step 1: Read the input wavefile
    [x, fs] = audioread(inputFile);

    % Step 2: Plot the magnitude components of the frequency spectrum
    plotSpectrum(x, fs, 'Input Spectrum');

    % Step 3: Create filters
    centerFreqs = [31.5, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16000];
    filters = cell(1, 10);

    for i = 1:10
        f1 = centerFreqs(i) / (fs/2);
        f2 = centerFreqs(i+1) / (fs/2);
        filters{i} = fir1(100, [f1 f2], 'band');
    end

    % Step 4: Apply filters to signal components
    filteredSignals = cell(1, 10);

    for i = 1:10
        filteredSignals{i} = filter(filters{i}, 1, x);
    end

    % Step 5: Apply gain values and reconstruct the signal
    for i = 1:10
        filteredSignals{i} = filteredSignals{i} * 10^(gains(i)/20);
    end

    y = sum(cell2mat(filteredSignals), 2);

    % Step 6: Plot the magnitude components of the frequency spectrum for the resulting audio signal
    plotSpectrum(y, fs, 'Output Spectrum');

    % Step 7: Write the resulting audio signal to the output wavefile
    audiowrite(outputFile, y, fs);
end

function plotSpectrum(x, fs, titleText)
    N = length(x);
    f = (-N/2:N/2-1) * fs/N;

    figure;
    subplot(2, 1, 1);
    plot(f, fftshift(abs(fft(x))));
    title('Magnitude Spectrum - Before Equalization');
    xlabel('Frequency (Hz)');
    ylabel('Magnitude');

    subplot(2, 1, 2);
    plot(f, fftshift(abs(fft(x))));
    title(titleText);
    xlabel('Frequency (Hz)');
    ylabel('Magnitude');
end
"
SXrmyp7i,Untitled,Josif_tepe,C++,Wednesday 15th of November 2023 11:32:45 AM CDT,"#include <iostream>
using namespace std;

int main(){
    int a, b, c;
    cin >> a >> b >> c;
    
    if(a <= b and a <= c) {
        cout << a << "" "";
        if(b <= c) {
            cout << b << "" "" << c << endl;
        }
        else {
            cout << c << "" "" << b << endl;
        }
    }
    else if(b <= a and b <= c) {
        cout << b << "" "";
        if(a <= c) {
            cout << a << "" "" << c << endl;
        }
        else {
            cout << c << "" "" << a << endl;
        }
    }
    else {
        cout << c << "" "" ;
        if(a <= b) {
            cout << a << "" "" << b << endl;
        }
        else {
            cout << b << "" "" << a << endl;
        }
    }
    return 0;
}


"
cS0NGLPk,Untitled,ShiinaBR,C#,Wednesday 15th of November 2023 11:29:26 AM CDT,"[
""90641BE26C6A325EB05DA1FF911EEE87:zDYeE/nTlO8I38ziKo/q/ssv3w2fHkWnDNn6mw0ZENM=""
]"
b9H33cH5,Untitled,ext69,C,Wednesday 15th of November 2023 11:22:11 AM CDT,"
1) Implement stack operations such as Push, Pop and Display using arrays/global variables. The program should print appropriate messages for stack overflow and stack underflow
#include <stdio.h> #include <stdlib.h> #define MAX 3

int top=-1,stack[MAX]; void push();

void pop(); void display(); void main()

{

int ch; while (1)

{

printf(""\n***Stack Menu***""); printf(""\n\n1.Push\n2.Pop\n3.Display\n4.Exit""); printf(""\n\nEnter your choice(1-4): ""); scanf(""%d"",&ch);

switch (ch)

{

case 1:push();

break; case 2:pop();

break; case 3:display();

break; case 4:exit(0);

default :printf(""\nWrong CHoice!!"");

}

}

}

void push()

{

int val;

if (top==MAX-1)

{

}

else

{

printf(""\nStack is full!!"");

printf(""\nEnter element to push:""); scanf(""%d"",&val);

top=top+1; stack[top]=val;

}

}

void pop()

{

if(top==-1)

{

}

else

{

}

}

printf(""\nStack is empty"");

printf(""\nDeleted element is %d"",stack[top]); top=top-1;

void display()

{

int i; if(top==-1)

{

}

else

{

}

}

printf(""STACK IS EMPTY\n"");

printf(""\nStack is \n"");

for(i=top;i>=0;--i)

printf(""%d\n"",stack[i]);

Convert a given valid parenthesized infix arithmetic expression to postfix expression. The expression consists of single character operands and +,-, *, / operators.

#include <stdio.h> #include <stdlib.h> #include <string.h> int F(char symbol)

{

switch(symbol)

{

case'+':

case'-':return 2; case'*': case'/':return 4; case'^': case'$':return 5;

case'(':return 0;

case'#':return -1;

default:return 8;

}

}

int G(char symbol)

{

switch(symbol)

{

case'+':

case'-':return 1; case'*': case'/':return 3; case'^': case'$':return 6;

case'(':return 9;

case')':return 0;

default:return 7;

}

}

void infix_postfix(char infix[],char postfix[])

{

int top; int j; int i;

char s[30]; char symbol; top=-1; s[++top]='#'; j=0;

for(i=0;i<strlen(infix);i++)

{

symbol=infix[i]; while(F(s[top])>G(symbol))

{

postfix[j]=s[top--]; j++;

}

if(F(s[top])!=G(symbol)) s[++top]=symbol;

else

top--;

}

while(s[top]!='#')

{

postfix[j++]=s[top--];

}

postfix[j]='\0';

}

int main()

{

char infix[20],postfix[20];

printf(""ENTER AN INFIX EXPRESSION\n"");

scanf(""%s"",infix); infix_postfix(infix,postfix);

printf(""POSTFIX EXPRESSION IS %s"",postfix); return 0;

}



Evaluate a valid suffix/postfix expression using stack. Assume that suffix/postfix expression is read as a single line consisting of non negative single digit operands and binary arithmetic operators. The arithmetic operators are +, -,/,*,^($).
#include <stdio.h> #include <stdlib.h> #include <string.h> #include <ctype.h> #include <math.h>

double compute(char symbol,double op1,double op2)

{

switch(symbol)

{

case'+':return op1+op2; case'-':return op1-op2; case'/':return op1/op2; case'*':return op1*op2; case'^':

case'$':return pow(op1,op2); default:printf(""invalid operation\n""); exit(0);

}

}

int main()

{

double s[20],op1,op2,res; int top,i;

char postfix[20],symbol;

printf(""enter the postfix expression\n""); scanf(""%s"",postfix);

top=-1; for(i=0;i<strlen(postfix);i++)

{

symbol=postfix[i]; if(isdigit(symbol)) s[++top]=symbol-'0'; else

{

op2=s[top--];

op1=s[top--]; res=compute(symbol,op1,op2); s[++top]=res;

}

}

res=s[top--];

printf(""the result is=%f\n"",res); return 0;

}



Find if a given string is a palindrome or not using stack.
#include <stdio.h> #include <stdlib.h> #define MAX 50 int i,top=-1,f=0; char s[MAX];

char a[MAX]; void push(char); char pop();

int main()

{

printf(""enter the expression\n""); scanf(""%s"",a); for(i=0;a[i]!='\0';i++)

{

push(a[i]);

}

for(i=0;a[i]!='\0';i++)

{

if(a[i]!=pop())

{

f=1;

break;

}

}

if(f==0)

{

printf(""it is a palindrome\n"");

}

else

{

}

}

printf(""it is not a palindrome\n"");

void push(char ch)

{

top++; s[top]=ch;

}

char pop()

{

char x=s[top]; top--;

return x;

}


Implement Queue operations such as Insert, Delete and Display. Display appropriate messages on Queue overflow and Queue underflow conditions.
#include <stdio.h> #include <stdlib.h> #define que_size 4

int rear,front,item,q[10]; void insertq()

{

if(rear==que_size-1) printf(""Queue Overflow\n"");

else

{

}

}

rear=rear+1; q[rear]=item;

int delq()

{

if(front>rear)

return -1;

else

}

return(q[front++]);

void display()

{

int i; if(front>rear)

printf(""Queue Underflow\n""); else

{

for(i=front;i<=rear;i++)

{

printf(""%d\t\n"",q[i]);

}

}

}

int main()

{

int ch,delitem; front=0;

rear=-1; while(1)

{

printf(""1.Insert 2.Delete 3.Display 4.Exit\n""); printf(""Enter your Choice\n""); scanf(""%d"",&ch);

switch(ch)

{

case 1:printf(""Enter the Item\n""); scanf(""%d"",&item);

insertq(); break;

case 2:delitem=delq(); if(delitem==-1)

printf(""Queue Underflow\n"");

else break;

printf(""Deleted item= %d\n"",delitem);

}

}

return 0;

}

case 3:display(); break;

case 4:exit(0);

default:printf(""Invalid choice!!try again\n""); break;



Implement Circular queue operations such as Insert, Delete and Display. Display appropriate messages on Queue overflow and Queue underflow conditions.
#include <stdio.h> #include <stdlib.h> #define que_size 5

int rear,front,count,item,q[10]; void insertq()

{

if(count==que_size)

{

printf(""Queue is full\n""); return;

}

rear=(rear+1)%que_size; q[rear]=item;

count++;

}

int deleteq()

{

if(count==0) return -1; item=q[front];

front=(front+1)%que_size; count-=1;

return item;

}

void displayq()

{

int i,f; if(count==0)

{

printf(""queue is empty\n""); return;

}

else for(i=1,f=front;i<=count;i++)

{

printf(""%d\n"",q[f]); f=(f+1)%que_size;

}

}

int main()

{

int ch,delitem; front=0;

rear=-1; while(1)

{

printf(""1.INSERT 2.DELETE 3.DISPLAY 4.EXIT\n""); printf(""ENTER YOUR CHOICE\n"");

scanf(""%d"",&ch); switch(ch)

{

case 1:printf(""Enter the Item:""); scanf(""%d"",&item); insertq();

break;

case 2:delitem=deleteq(); if(delitem==-1) printf(""Queue Underflow""); else

printf(""Deleted Item is %d\n"",delitem); break;

case 3:displayq(); break;

case 4:exit(0); default:printf(""Invalid Choice"");

break;

}

}

return 0;

}



Implement Priority queue operations such as Insert, Delete and Display. Display appropriate messages on Queue overflow and Queue underflow conditions.
#include <stdio.h> #include <stdlib.h> #define qsize 3

void insert(int item,int q[ ],int *r)

{

int j; if(*r==qsize-1)

{

}

j=*r;

printf(""QUEUE OVERFLOW\n""); return;

while(j>=0&&item<q[j])

{

q[j+1]=q[j]; j--;

}

q[j+1]=item;

*r=*r+1;

}

void display(int *r,int *f,int q[])

{

int i; if(*f>*r)

printf(""QUEUE IS EMPTY\n""); else

{

for(i=*f;i<=*r;i++) printf(""%d "",q[i]);

}

printf(""\n"");

}

int delete(int *f,int *r,int q[])

{

if(*f>*r)

return -1;

else

}

return(q[(*f)++]);

int main()

{

int front,rear,ch,delitm,item,q[5]; front=0;

rear=-1; while(1)

{

printf(""ENTER YOUR CHOICE\n""); printf(""1.INSERT 2.DELETE 3.DISPLAY 4.EXIT\n"");

scanf(""%d"",&ch); switch(ch)

{

case 1:printf(""ENTER THE ITEM\n""); scanf(""%d"",&item); insert(item,q,&rear);

break;

case 2:delitm=delete(&front,&rear,q); if(delitm ==-1)

printf(""QUEUE UNDERFLOW\n"");

else

break;

printf(""DELETED ITEM =%d\n"",delitm);

}

}

return 0;

}

case 3:display(&rear,&front,q); break;

case 4:exit(0);

default:printf(""INVALID CHOICE !!TRY AGAIN \n""); break;



Implement Insert, Delete and Display operations on Singly Linked List.
#include <stdio.h> #include <stdlib.h> #include<ctype.h> struct node

{

int info;

struct node*link;

};

typedef struct node* NODE; NODE getnode()

{

NODE x;

x=(NODE)malloc(sizeof(struct node)); if(x==NULL)

{

printf(""OUT OF MEMEORY \n""); exit(0);

}

return x;

}

NODE insertfront(int item,NODE first)

{

NODE temp; temp=getnode(); temp->info=item; temp->link=first; return temp;

}

void display(NODE first)

{

NODE temp; if(first==NULL)

{

printf(""LIST IS EMPTY\n""); return;

}

printf(""THE CONTENTS ARE\n"");

temp=first; while(temp!=NULL)

{

printf(""%d\t"",temp->info); temp=temp->link;

}

printf(""\n"");

}

NODE delfront(NODE first) //FUNCTION TO DELETE FIRST NODE

{

NODE temp; if(first==NULL)

{

printf(""LIST IS EMPTY\n""); return first;

}

temp=first; first=first->link;

printf(""DELETED ITEM =%d\n"",temp->info); free(temp);

return first;

}

NODE insertrear(int item,NODE first)

{

NODE temp,cur; temp=getnode(); temp->info=item; temp->link=NULL; if(first==NULL)

{

return temp;

}

cur=first;

while(cur->link!=NULL)

{

cur=cur->link;

}

cur->link=temp; return first;

}

NODE delrear(NODE first)

{

NODE cur,prev; if(first==NULL)

{

printf(""LIST IS EMPTY\n""); return first;

}

if(first->link==NULL)

{

printf(""DELETED ITEM IS %d\n"",first->info); free(first);

first=NULL; return first;

}

prev=NULL; cur=first;

while (cur->link!=NULL)

{

prev=cur; cur=cur->link;

}

printf(""DELETED ITEM %d\n"",cur->info); free(cur);

prev->link=NULL; return first;

}

NODE insertpos(int item,int pos,NODE first)

{

NODE temp,prev,cur; int counter; temp=getnode(); temp->info=item; temp->link=NULL;

if (first==NULL &&pos==1) return temp;

if(first==NULL)

{

printf(""INVALID POSITION\n"");

return first;

}

if(pos==1)

{

temp->link=first; return temp;

}

counter=1; prev=NULL; cur=first;

while(cur!=NULL&&counter!=pos)

{

prev=cur; cur=cur->link; counter++;

}

if(counter==pos)

{

prev->link=temp; temp->link=cur; return first;

}

else

printf(""INVALID POSITION\n"");

return first;

}

NODE delinfo(int item,NODE first)

{

NODE prev,cur; if(first==NULL)

{

printf(""LIST IS EMPTY\n""); return NULL;

}

if(item==first->info)

{

cur=first; first=first->link; free(cur);

return first;

}

prev=NULL; cur=first;

while(cur!=NULL&&item!=cur->info)

{

prev=cur; cur=cur->link;

}

if(cur==NULL)

{

printf(""ITEM NOT FOUND\n""); return first;

}

prev->link=cur->link; free(cur);

return first;

}

NODE delpos(int pos,NODE first)

{

NODE cur,prev; int counter; if(first==NULL)

{

printf(""LIST IS EMPTY\n""); return NULL;

}

if(pos==1)

{

cur=first; first=first->link; free(cur);

return first;

}

prev=NULL; cur=first; counter=1;

while(cur!=NULL&&counter!=pos)

{

prev=cur; cur=cur->link; counter++;

}

if(cur==NULL)

{

printf(""INVALID POSITION\n"");

return first;

}

else

prev->link=cur->link;

free(cur); return first;

}

void search(int item,NODE first)

{

NODE cur; int pos;

if(first==NULL)

{

printf(""LIST EMPTY\n""); return;

}

cur=first; pos=1;

while(cur!=NULL&&item!=cur->info)

{

cur=cur->link; pos++;

}

if(cur==NULL)

{

printf(""SEARCH UNSUCCESSFUL"");

return;

}

printf(""SEARCH SUCCESSFUL &ITEM FOUND AT %d\n"",pos-1);

}

int main()

{

NODE first=NULL; int ch,item,pos; pos=0;

while(1)

{

printf(""ENTER YOUR CHOICE\n"");

printf(""1.INSERT AT FRONT END\n2.INSERT AT REAR END\n3.DELETE AT FRONT END\n"");

printf(""4.DELETE AT REAR END\n5.INSERT AT SPECIFIED POSITION\ n"");

printf(""6.DELETE A PARTICULAR ELEMENT\n""); printf(""7.DELETE AT SPECIFIED POSITION\n""); printf(""8.SEARCH FOR A PARTICULAR ELEMENT\n""); printf(""9.DISPLAYING THE LINKED LIST\n"");

printf(""10.EXIT\n""); scanf(""%d"",&ch); switch(ch)

{

case 1:printf(""ENTER THE ELEMENT\n""); scanf(""%d"",&item);

}

}

return 0;

}

first=insertfront(item,first); break;

case 2:printf(""ENTER THE ELEMENT\n""); scanf(""%d"",&item); first=insertrear(item,first);

break;

case 3:first=delfront(first); break;

case 4:first=delrear(first); break;

case 5:printf(""ENTER THE ITEM TO BE INSERTED\n"");

scanf(""%d"",&item);

printf(""ENTER THE POSITION OF INSERTION\n"");

scanf(""%d"",&pos); first=insertpos(item,pos,first); break;

case 6:printf(""ENTER THE ELEMENT TO BE DELETED\n"");

scanf(""%d"",&item); first=delinfo(item,first); break;

case 7:printf(""ENTER THE POSITION OF DELETION\n"");

scanf(""%d"",&pos); first=delpos(pos,first); break;

case 8:printf(""ENTER THE SEARCH ELEMENT\n""); scanf(""%d"",&item);

search(item,first); break;

case 9: display(first); break;

case 10:exit(0);

default:printf(""WRONG CHOICE!!TRY AGAIN\n"");











Implement stack/queue operations using linked list.
#include <stdio.h> #include <stdlib.h> struct node

{

int info;

struct node* link;

};

typedef struct node* NODE; NODE getnode()

{

NODE x;

x=(NODE)malloc(sizeof(struct node)); if(x==NULL)

{

printf(""\nOUT OF MEMORY""); exit(0);

}

return x;

}

NODE insert_front(int item, NODE first)

{

NODE temp; temp=getnode(); temp->info=item; temp->link=first; return temp;

}

void display(NODE first)

{

NODE cur; if(first==NULL)

{

printf(""\nLIST IS EMPTY""); return;

}

printf(""\nThe contents of list are:\n""); cur=first; while(cur!=NULL)

{

printf(""%d\n"",cur->info); cur=cur->link;

}

printf(""\n"");

}

NODE delete_front(NODE first)

{

NODE cur; if(first==NULL)

{

printf(""\nLIST IS EMPTY""); return first;

}

cur=first; cur=cur->link;

printf(""\nDELETED ITEM:%d"",first->info); free(first);

return cur;

}

int main()

{

NODE first; first=NULL; int op,item; while(1)

{

printf(""\n1.INSERT AT THE FRONT END \n2.DELETE AT THE FRONT END""); printf(""\n3.DISPLAY \n4.EXIT"");

printf(""\nENTER YOUR OPTION:"");

scanf(""%d"",&op); switch(op)

{

case 1: printf (""Enter the item to be inserted:""); scanf(""%d"",&item); first=insert_front(item,first);

break;

case 2: first=delete_front(first); break;

case 3: display(first); break;

case 4: exit (0); default:printf(""\nWRONG OPTION"");

}

}

return 0;

}



10)Implement Insert, Delete and Display operations on circular Singly Linked List with header node.
#include <stdio.h> #include <stdlib.h>

struct node

{

int info;

struct node*link;

};

typedef struct node *NODE;

NODE getnode()

{

NODE x;

x=(NODE)malloc(sizeof(struct node)); if(x==NULL)

{

printf(""OUT OF MEMORY\n""); exit(0);

}

return x;

}

NODE insert_front(int item, NODE head)

{

NODE temp ,first; temp= getnode(); temp->info = item; first = head->link; head->link=temp; temp->link = first; return head;

}

NODE insert_rear(int item, NODE head)

{

NODE temp, cur; temp= getnode(); temp->info = item; cur = head->link;

while(cur->link != head)

{

cur = cur->link;

}

cur->link = temp; temp->link = head; return head;

}

NODE delete_rear (NODE head)

{

NODE prev, cur; if(head->link==head)

{

printf(""List is empty\n""); return head;

}

cur=head->link; prev = head;

while(cur->link !=head)

{

prev=cur;

cur =cur->link;

}

prev->link =head;

printf (""The item deleted is %d\n"", cur->info); free(cur);

return head;

}

NODE delete_front (NODE head)

{

NODE first, second; if(head->link== head)

{

printf(""List is empty\n""); return head;

}

first =head->link; second= first->link; head->link = second;

printf (""The item deleted is %d\n"", first->info); free(first);

return head;

}

void display(NODE head)

{

NODE temp;

{

if(head->link==head)

{

printf(""List is empty\n""); return;

}

printf(""The contents of singly linked listl\n""); temp= head->link;

while (temp != head)

{

printf(""%d "",temp->info); temp=temp->link;

}

}

}

void main()

{

NODE head; int choice, item;

head = getnode(); head->link = head; for (;;)

{

printf(""1:Insert_Front 2:insert_rear\t""); printf(""3:delete_front\t 4:delete_rear\t 5.exit\n""); printf(""Enter the choice\n"");

scanf(""%d"", &choice); switch(choice)

{

case 1:printf(""Enter the item to be inserted in\n""); scanf(""%d"", &item);

head =insert_front (item, head); break;

case 2:printf(""Enter the item to be inserted in\n""); scanf(""%d"", &item);

head =insert_rear(item, head); break;

case 3:head =delete_front(head); break;

case 4:head =delete_rear(head); break;

case 5:display(head); break; default:exit(0);

}

}

}



Implement Insert, Delete and Display operations on Doubly Linked List.
#include <stdio.h> #include <stdlib.h> struct node

{

int info;

struct node*rlink; struct node*llink;

};

typedef struct node*NODE; NODE getnode()

{

NODE x;

x=(NODE)malloc(sizeof(struct node)); if(x==NULL)

{

printf(""OUT OF MEMORY\n""); exit(0);

}

return x;

}

NODE insertfront(int item,NODE head)

{

NODE temp,cur; temp=getnode(); temp->info=item;

if(head->rlink==NULL)

{

}

else

{

head->rlink=temp; temp->llink=head; temp->rlink=NULL; head->llink=NULL; return head;

cur=head->rlink; temp->rlink=cur; head->rlink=temp; cur->llink=temp; temp->llink=head; return head;

}

}

NODE insertrear(int item,NODE head)

{

NODE temp,cur; temp=getnode(); temp->info=item;

if(head->rlink==NULL)

{

head->rlink=temp; head->llink=NULL; temp->rlink=NULL; temp->llink=head; return head;

}

cur=head->rlink; while(cur->rlink!=NULL)

{

cur=cur->rlink;

}

cur->rlink=temp; temp->rlink=NULL; temp->llink=cur; head->llink=NULL;

return head;

}

NODE delfront(NODE head)

{

NODE temp,cur; if(head->rlink==NULL)

{

printf(""LIST IS EMPTY \n""); return head;

}

temp=head->rlink; cur=temp->rlink; if(cur==NULL)

{

}

else

{

}

head->rlink=NULL;

head->rlink=cur; cur->llink=head;

printf(""DELETED ITEM =%d\n"",temp->info); free(temp); //FREEING MEMORY

return head;

}

NODE delrear(NODE head)

{

NODE temp,cur;

if(head->rlink ==NULL)

{

}

else

{

printf(""LIST IS EMPTY\n""); return head;

temp=head->rlink; while(temp->rlink!=NULL)

{

temp=temp->rlink;

}

if(temp->llink==head)

head->rlink=NULL; else

{

cur=temp->llink; cur->rlink=NULL; head->llink=NULL;

}

printf(""DELETED ITEM =%d\n"",temp->info); free(temp);

return head;

}

}

void display(NODE head)

{

NODE temp;

if(head->rlink==NULL)

{

printf(""LIST IS EMPTY\n"");

}

else

{

temp=head->rlink; while(temp!=NULL)

{

printf(""%d "",temp->info); temp=temp->rlink;

}

}

printf(""\n"");

}

int main()

{

int ch,item;

NODE head=getnode(); head->info=NULL; head->rlink=NULL; head->llink=NULL; while(1)

{

printf(""1.Insert Front 2.Insert Rear 3.Delete Front 4.Delete Rear 5.Display 6.Exit\n"");

printf(""ENTER YOUR CHOICE\n"");

scanf(""%d"",&ch); switch(ch)

{

case 1:printf(""ENTER THE ITEM\n""); scanf(""%d"",&item); head=insertfront(item,head);

break;

case 2:printf(""ENTER THE ITEM\n""); scanf(""%d"",&item); head=insertrear(item,head);

break;

case 3:head=delfront(head); break;

case 4:head=delrear(head); break;

case 5:display(head); break;

case 6:exit(0); break;

default:printf(""INVALID CHOICE!!TRY AGAIN\n""); break;

}

}

return 0;

}



12 Implement Insert, Delete and Display operations on Circular Doubly Linked List.
#include <stdio.h> #include

<stdlib.h> struct node

{

int info; struct node*rlink; struct node*llink;

};

typedef struct node*NODE; NODE getnode()

{

NODE x;

x=(NODE)malloc(sizeof(struct node)); if(x==NULL)

{

printf(""OUT OF MEMORY\n""); exit(0);

}

return x;

}

NODE insertfront(int item,NODE head)

{

NODE temp,cur; temp=getnode(); temp->info=item;

if(head->rlink==head)

{

head- >rlink=temp; temp->llink=head; temp->rlink=head; head->llink=temp; return head;

}

else

{

cur=head->rlink; temp- >rlink=cur; head->rlink=temp; cur->llink=temp; temp->llink=head; return head;

}

}

NODE insertrear(int item,NODE head)

{

NODE temp,cur; temp=getnode(); temp->info=item;

if(head->rlink==head)

{

head->rlink=temp; head->llink=temp; temp->rlink=head; temp->llink=head; return head; } cur=head- >llink; cur- >rlink=temp; temp- >rlink=head; temp- >llink=cur; head->llink=temp; return head;

}

NODE delfront(NODE head)

{

NODE temp,cur; if(head->rlink==head)

{ printf(""LIST IS EMPTY \n""); return head; }

temp=head->rlink;

cur=temp->rlink; if(cur==head)

{ head->rlink=head; } else

{ head->rlink=cur; cur->llink=head; }

printf(""DELETED ITEM =%d\n"",temp->info); free(temp); return

head;

}

NODE delrear(NODE head)

{

NODE temp,cur; if(head->rlink

==head) { printf(""LIST IS EMPTY\n"");

return head; } else

{ temp=head->llink; if(temp->llink==head) head->rlink=head; else

{ cur=temp->llink; cur->rlink=head; head->llink=cur;

}

printf(""DELETED ITEM =%d\n"",temp->info); free(temp); return head;

} }

void display(NODE head) {NODE temp;

if(head->rlink==head)

{

printf(""LIST IS EMPTY\n"");

}

else

{ temp=head->rlink; while(temp!=head)

{

printf(""%d "",temp->info); temp=temp->rlink; }

}printf(""\n""); } int main() { int ch,item;

NODE head=getnode(); head->info=NULL; head->rlink=head;

head->llink=head; while(1)

{

printf(""1.Insert Front 2.Insert Rear 3.Delete Front 4.Delete Rear 5.Display 6.Exit\n""); printf(""ENTER YOUR CHOICE\n"");

scanf(""%d"",&ch); switch(ch) {

case 1:printf(""ENTER THE ITEM\n""); scanf(""%d"",&item); head=insertfront(item,head); break; case 2:printf(""ENTER THE ITEM\n""); scanf(""%d"",&item); head=insertrear(item,head); break; case 3:head=delfront(head);

break; case 4:head=delrear(head); break; case 5:display(head); break; case 6:exit(0);

break;

default:printf(""INVALID CHOICE!!TRY AGAIN\n""); break;

}

}

return 0;

}





Construct a Binary Search Tree and traverse it using In order, Preorder and Post order traversals.
#include <stdio.h> #include <stdlib.h> struct node

{

int info;

struct node *left; struct node*right;

};

typedef struct node*NODE; NODE insert(NODE r,int item)

{

if(r==NULL)

{

r=(NODE)malloc(sizeof(struct node)); r->info=item;

r->left=NULL; r->right=NULL;

}

else

if(item<r->info)

r->left=insert(r->left,item); else

r->right=insert(r->right,item); return r;

}

void preorder(NODE root)

{

if(root==NULL) return;

printf(""%d "",root->info); preorder(root->left); preorder(root→right);

}

void inorder(NODE root)

{

if(root==NULL) return;

inorder(root->left); printf(""%d "",root->info); Inorder(root->right);

}

void postorder(NODE root)

{

if(root==NULL) return;

postorder(root->left); postorder(root->right); printf(""%d "",root->info);

}

NODE search(NODE root,int item)

{

NODE cur; if(root==NULL)

{

}

else

{

printf(""EMPTY TREE\n""); return;

cur=root; while(cur!=NULL)

{

if(item==cur->info) return cur->info;

else if(item<cur->info) cur=cur->left;

else

cur=cur->right;

}

return NULL;

}

}

int main()

{

int ch,item,i,n,it,temp;

NODE root;

root=(NODE)malloc(sizeof(struct node)); root=NULL;

while(1)

{

printf(""\n1.Insert 2.Preorder 3.Postorder 4.Inorder 5.Search 6.Exit\n""); printf(""\nEnter The Choice\n"");

scanf(""%d"",&ch); switch(ch)

{

case 1:printf(""ENTER THE NO OF ELEMENTS\n""); scanf(""%d"",&n);

for(i=0;i<n;i++)

{

printf(""Enter The Item %d\n"",i+1); scanf(""%d"",&item); root=insert(root,item);

}

break;

case 2:preorder(root);

break;

case 3:postorder(root);

break;

case 4:inorder(root); break;

case 5:printf(""ENTER THE ELEMENT TO BE SEARCHED\n"");

scanf(""%d"",&it);

temp=search(root,it); if(temp==NULL)

printf(""SEARCH UNSUCCESSFULL\n"");

else

printf(""%d is found in the tree\n"",temp);

break;

case 6: exit(0); break;

default:printf(""WRONG CHOICE!! TRY AGAIN\n"");

}

}

return 0;

}

"
hqWj7bmq,"подсчет слов , упрощенный",DaniDori,C++,Wednesday 15th of November 2023 11:21:08 AM CDT,"#include <iostream>
#include <string>
#include <set>

// Функция для удаления знаков препинания из слова
std::string removePunctuation(const std::string& word) {
    std::string result;
    for (char c : word) {
        if (isalnum(c) || c == '-') {
            result += c;
        }
    }
    return result;
}

int main() {
    std::string input;

    // Ввод строки
    std::cout << ""Введите строку: "";
    std::getline(std::cin, input);

    // Подсчет количества слов
    std::string word;
    int wordCount = 0;

    for (size_t i = 0; i < input.size(); ++i) {
        if (isalnum(input[i]) || input[i] == '-') {
            word += input[i];
        }
        else if (!word.empty()) {
            wordCount++;
            word.clear();
        }
    }

    if (!word.empty()) {
        wordCount++;
    }

    std::cout << ""Количество слов: "" << wordCount << std::endl;

    // Подсчет количества уникальных слов
    std::set<std::string> uniqueWords;
    word.clear();

    for (size_t i = 0; i < input.size(); ++i) {
        if (isalnum(input[i]) || input[i] == '-') {
            word += input[i];
        }
        else if (!word.empty()) {
            uniqueWords.insert(word);
            word.clear();
        }
    }

    if (!word.empty()) {
        uniqueWords.insert(word);
    }

    std::cout << ""Количество уникальных слов: "" << uniqueWords.size() << std::endl;

    return 0;
}
"
0i082Whn,Подсчет уникальных слов,DaniDori,C++,Wednesday 15th of November 2023 11:16:43 AM CDT,"#include <iostream>
#include <sstream>
#include <string>
#include <set>

int main() {
    std::string input;

    // Ввод строки
    std::cout << ""Введите строку: "";
    std::getline(std::cin, input);

    // Подсчет количества слов
    std::istringstream wordStream(input);
    std::string word;
    int wordCount = 0;

    while (wordStream >> word) {
        // Учитываем запятые внутри слов
        size_t commaPos = word.find(',');
        while (commaPos != std::string::npos) {
            word.erase(commaPos, 1);
            commaPos = word.find(',');
        }

        // Учитываем запятые в конце слова
        if (!word.empty() && (word.back() == ',' || word.back() == '.' || word.back() == '!' || word.back() == '?')) {
            word.pop_back();
        }

        if (!word.empty()) {
            wordCount++;
        }
    }

    std::cout << ""Количество слов: "" << wordCount << std::endl;

    // Подсчет количества уникальных слов
    std::istringstream wordStreamUnique(input);
    std::set<std::string> uniqueWords;
    std::string uniqueWord;

    while (wordStreamUnique >> uniqueWord) {
        // Учитываем запятые внутри слов
        size_t commaPos = uniqueWord.find(',');
        while (commaPos != std::string::npos) {
            uniqueWord.erase(commaPos, 1);
            commaPos = uniqueWord.find(',');
        }

        // Учитываем запятые в конце слова
        if (!uniqueWord.empty() && (uniqueWord.back() == ',' || uniqueWord.back() == '.' || uniqueWord.back() == '!' || uniqueWord.back() == '?')) {
            uniqueWord.pop_back();
        }

        if (!uniqueWord.empty()) {
            uniqueWords.insert(uniqueWord);
        }
    }

    std::cout << ""Количество уникальных слов: "" << uniqueWords.size() << std::endl;

    return 0;
}
"
PNNrs1gk,Untitled,MeehoweCK,C++,Wednesday 15th of November 2023 10:49:12 AM CDT,"#include <iostream>
#include <vector>
#include <set>

std::vector<short int> generateNextCombination(const std::vector<short int>& previosCombination) {
	// funkcja zamienia kombinację np. {0, 1, 2} na kolejną WIĘKSZĄ kombinację czyli {0, 2, 1} lub pusty wektor jeśli taka kombinacja nie istnieje
}

long long generateNumberFromCombination(const std::vector<short int>& combination) {
	// generuje liczbę z wektora cyfr
}

std::set<long long> generateSetOfNumbers(const std::vector<short int>& firstCombination) {
	// wywołuje rekurencyjnie funkcję generateNextCombination (poprzez generateNumberFromCombination) zaczynając od firstCombination
	// i każdą utworzoną dodaje do wynikowego zbioru, dotąd aż otrzyma wektor pusty (liczbę 0)
}

int main() {
	std::vector<short int> combination{ 0, 1, 2 };
	std::set<long long> setOfNumbers{ generateSetOfNumbers(combination) };
	return 0;
}"
iLQXcdzB,Untitled,KoctrX,JavaScript,Wednesday 15th of November 2023 10:16:03 AM CDT,"class Image2HTML {
    constructor(blob, element = false) {
        this.blob = blob;
        this.element = element || document.body;
    }

    async render() {
        const data = await this.parseImage();
        const html = this.generateHTML(data);

        this.element.innerHTML = html;
        return this;
    }

    parseImage() {
        return new Promise(resolve => {
            const image = new Image();
            image.src = URL.createObjectURL(this.blob);

            image.onload = () => {
                const canvas = document.createElement('canvas');
                const ctx = canvas.getContext('2d');

                canvas.width = image.width;
                canvas.height = image.height;

                ctx.drawImage(image, 0, 0);
                const rgba = ctx.getImageData(0, 0, image.width, image.height).data;

                URL.revokeObjectURL(image.src);
                resolve({ width: canvas.width, height: canvas.height, rgba });
            }
        });
    }

    generateHTML(data) {
        let html = `<div style=""width: ${data.width}px;height:${data.height}px;position:relative;>`;

        for (let i = 0; i < data.width * data.height; i++) {
            const rgba = data.rgba.slice(i * 4, (i * 4) + 4);
            rgba[rgba.length - 1] = rgba[rgba.length - 1] / 255;
            const color = `rgba(${rgba.join(', ')})`;
            let def = `width:1px;height:1px;display: inline-block;position:absolute;`;
            let x = i % data.width;
            if (x == 0 && i != 0) x = data.width;
            let y = Math.ceil(i / data.width);
            if (x == data.width) y -= 1;

            def += `left: ${x}px;top: ${y}px;`;
            html += `<span style=""${def}background:${color};""></span>`;
        }

        html += `</div>`;
        return html;
    }
}

blob = await fetch('https://storage.googleapis.com/turbo-math.appspot.com/user-assets/gzMWmegNKSUlh64nFjBAIuqhqGr2/04-23-2023/image-to-image/image-to-image__5f419cc4305219bba97ae735b799a45d_1682284222619_1_1682284234.png').then(res => res.blob());
await new Image2HTML(blob).render()"
pxcrf55S,Untitled,yarin0600,C++,Wednesday 15th of November 2023 09:39:59 AM CDT,"#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <functional>

std::string decodeString(std::string s);
std::string createStringForStack(const std::string &s, const size_t sSize, int leftIdx, std::function<bool(char)> predicate);
bool is_number(const std::string &s);

int main()
{
   std::string s = ""3[a2[c]]"";
   std::string decodedString = decodeString(s);
   std::cout << decodedString << std::endl;
}

std::string decodeString(std::string s)
{
   std::stack<std::string> st;
   std::stack<std::string> stKeepClosedP;
   std::string result = """";
   std::string currentString = """";

   const size_t sSize = s.size();

   auto predicateStringBuilder = [](char c)
   { return ('a' <= c && 'z' >= c); };

   auto predicateNumberBuilder = [](char c)
   { return ('0' <= c && '9' >= c); };

   for (int i = 0; i < sSize; ++i)
   {
      if (s[i] == ']' || s[i] == '[')
         st.push(std::string{s[i]});
      else if (s[i] >= 'a' && s[i] <= 'z')
         st.push(createStringForStack(s, sSize, i, predicateStringBuilder));
      else
         st.push(createStringForStack(s, sSize, i, predicateNumberBuilder));
   }

   std::string buffer = """"; // change it to ostringstream
   // std::ostringstream oss;
   while (!st.empty())
   {
      currentString = st.top();
      st.pop();

      while (!st.empty() && st.top() == ""]"")
      {
         st.pop();
         stKeepClosedP.push(""]"");
      }

      if (currentString[0] == ']')
      {
         buffer = st.top();
         // oss << st.top();

         st.pop();
         st.pop();                         // popping the ""[""
         int bufferTimes = stoi(st.top()); // getting the number into 'stoi' string to integer function
         st.pop();                         // remove the number we don't need it anymore.
         st.push(buffer);                  // just to save new variable
         // st.push(oss.str()); // just to save new variable
         // oss.clear();
         buffer = """";
         for (int i = 0; i < bufferTimes; ++i)
         {
            buffer += st.top();
            // oss << st.top();
         }
         st.pop(); // popping the original string it was

         // std::ostringstream keep;
         while (!st.empty() && st.top() != ""["" && st.top() != ""]"" && !is_number(st.top()))
         {
            // keep << oss.str();
            // oss.clear();
            buffer = st.top() + buffer;

            // oss << st.top();
            // oss << keep.str();
            // keep.clear();
            st.pop();
         }
         // st.push(oss.str());
         // oss.clear();
         st.push(buffer);

         while (!stKeepClosedP.empty())
         {
            stKeepClosedP.pop();
            st.push(""]"");
         }
      }
      else
      {
         result = buffer + result;
         // result = oss.str() + result;
      }
   }

   return result;
}

std::string createStringForStack(const std::string &s, const size_t sSize, int leftIdx, std::function<bool(char)> predicate)
{
   int rightIdx = leftIdx;
   for (; rightIdx < sSize && predicate(s[rightIdx]); ++rightIdx)
   {
   }
   return s.substr(leftIdx, rightIdx - leftIdx);
}

bool is_number(const std::string &s)
{
   return !s.empty() && std::all_of(s.begin(), s.end(), ::isdigit);
}"
kyk8k8W3,ab_test.sh,afsulthon,Bash,Wednesday 15th of November 2023 09:20:15 AM CDT,ab -n 1000 -c 100 -g out.data http://granz.channel.e07.com/
RKJGwPCh,Untitled,SpaceQuester,MatLab,Wednesday 15th of November 2023 09:17:52 AM CDT,"close all;
clc;
clear;
warning('off', 'all');

FontSize = 16;

path1 = '/Users/sergeymakovkin/Documents/Fig_02_N_A_bifurc/n_step_0005';

filename1 = 'Data_SF_I_stim_V_max_V_min_nu.txt';
Data   = importdata( [ path1 '/' filename1 ] );
I_stim_SF    = Data(:, 1);
V_max_SF = Data(:, 2);
V_min_SF = Data(:, 3);
nu_n_SF     = Data(:, 4);
disp('Data_SF_I_stim_V_max_V_min_nu load complete');

filename1 = 'Data_LC_I_stim_V_max_V_min_nu.txt';
Data   = importdata( [ path1 '/' filename1 ] );
I_stim_LC    = Data(:, 1);
V_max_LC = Data(:, 2);
V_min_LC = Data(:, 3);
nu_n_LC     = Data(:, 4);
disp('Data_LC_I_stim_V_max_V_min_nu load complete');

path2 = '/Users/sergeymakovkin/Documents/Fig_02_N_A_bifurc/n_step_0005_back';
filename2 = 'Data_LC_I_stim_V_max_V_min_nu_back.txt';
Data_back   = importdata( [ path2 '/' filename2 ] );
I_stim_back    = Data_back(:, 1);
V_max_back = Data_back(:, 2);
V_min_back = Data_back(:, 3);
nu_n_back     = Data_back(:, 4);
disp('Data_I_stim_V_max_V_min_back load complete');

path3 = '/Users/sergeymakovkin/Documents/Fig_02_N_A_bifurc/a_step_0005';
filename3 = 'Data_SF_1_v_4_Ca_max_Ca_min_nu.txt';
Data   = importdata( [ path3 '/' filename3 ] );
v_4_SF_1    = Data(:, 1);
Ca_max_SF_1 = Data(:, 2);
Ca_min_SF_1 = Data(:, 3);
nu_a_SF_1     = Data(:, 4);
disp('Data_SF_1_v_4_Ca_max_Ca_min_nu load complete');

path4 = '/Users/sergeymakovkin/Documents/Fig_02_N_A_bifurc/a_step_0005';
filename4 = 'Data_LC_1_v_4_Ca_max_Ca_min_nu.txt';
Data   = importdata( [ path4 '/' filename4 ] );
v_4_LC_1    = Data(:, 1);
Ca_max_LC_1 = Data(:, 2);
Ca_min_LC_1 = Data(:, 3);
nu_a_LC_1     = Data(:, 4);
disp('Data_LC_1_v_4_Ca_max_Ca_min_nu load complete');

path5 = '/Users/sergeymakovkin/Documents/Fig_02_N_A_bifurc/a_step_0005_back';
filename5 = 'Data_SF_2_v_4_Ca_max_Ca_min_nu_back.txt';
Data_back   = importdata( [ path5 '/' filename5 ] );
v_4_back_SF_2    = Data_back(:, 1);
Ca_max_back_SF_2 = Data_back(:, 2);
Ca_min_back_SF_2 = Data_back(:, 3);
nu_a_back_SF_2     = Data_back(:, 4);
disp('Data_SF_2_v_4_Ca_max_Ca_min_back load complete');

path6 = '/Users/sergeymakovkin/Documents/Fig_02_N_A_bifurc/a_step_0005_back';
filename6 = 'Data_LC_2_v_4_Ca_max_Ca_min_nu_back.txt';
Data_back   = importdata( [ path6 '/' filename6 ] );
v_4_back_LC_2    = Data_back(:, 1);
Ca_max_back_LC_2 = Data_back(:, 2);
Ca_min_back_LC_2 = Data_back(:, 3);
nu_a_back_LC_2     = Data_back(:, 4);
disp('Data_LC_2_v_4_Ca_max_Ca_min_back load complete');

results_neuro_astro_bifurc = figure('units', 'normalized', 'outerposition', [0 0 0.8 1], 'visible', 'on');
sp221 = subplot(2, 2, 1);
plot(I_stim_SF, V_max_SF, 'g-', 'LineWidth', 2);
hold on;
plot(I_stim_SF, V_min_SF, 'g-', 'LineWidth', 2);
hold on;

plot(I_stim_LC, V_max_LC, 'r-', 'LineWidth', 2);
hold on;
plot(I_stim_LC, V_min_LC, 'r-', 'LineWidth', 2);
hold on;

plot(I_stim_back, V_max_back, 'b-', 'LineWidth', 2);
hold on;
plot(I_stim_back, V_min_back, 'b-', 'LineWidth', 2);
hold on;

%grid on;
box on;
%pbaspect([1 1 1]);
xlim([0 2.0]);
ylim([-80 20]);
ax = gca;
ax.XTick = [0: 0.5: 2.0];
xtickformat('%1.1f');
ax.YTick = [-80: 20: 20];
ytickformat('%.0f');
%yticklabels({'0', '\pi/2', '\pi', '3\pi/2', '2\pi'});
%yticklabels({'0', '\pi/4', '\pi/2', '3\pi/4', '\pi', '5\pi/4', '3\pi/2', '7\pi/4', '2\pi'});
%legend('<\nu_i>');
%xlabel('I_{stim}, \muA/cm^{2}', 'FontSize', FontSize);
ylabel('V, mV', 'FontSize', FontSize);
title('a)', 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

sp223 = subplot(2, 2, 3);
plot(I_stim_SF, nu_n_SF, 'g-', 'LineWidth', 2);
hold on;

plot(I_stim_LC, nu_n_LC, 'r-', 'LineWidth', 2);
hold on;

plot(I_stim_back, nu_n_back, 'b-', 'LineWidth', 2);
hold on;

x_start_1 = 1.08;
x_end_1   = 1.08;
y_start_1 = 7;
y_end_1   = 16; 
RedArrow = annotation('arrow');
RedArrow.Parent = gca;
RedArrow.X = [x_start_1, x_end_1];
RedArrow.Y = [y_start_1, y_end_1];
RedArrow.Color = 'red';
hold on;

x_start_2 = 0.78;
x_end_2   = 0.78;
y_start_2 = 11.5;
y_end_2   = 2.5; 
BlueArrow = annotation('arrow');
BlueArrow.Parent = gca;
BlueArrow.X = [x_start_2, x_end_2];
BlueArrow.Y = [y_start_2, y_end_2];
BlueArrow.Color = 'blue';
hold on;

%grid on;
box on;
xlim([0 2.0]);
ylim([0 40]);
ax = gca;
ax.XTick = [0: 0.5: 2.0];
xtickformat('%.1f');
ax.YTick = [0: 10: 40];
ytickformat('%.0f');
%yticklabels({'0', '\pi/2', '\pi', '3\pi/2', '2\pi'});
%yticklabels({'0', '\pi/4', '\pi/2', '3\pi/4', '\pi', '5\pi/4', '3\pi/2', '7\pi/4', '2\pi'});
%legend('<\nu_i>');
xlabel('I_{stim}, \muA/cm^{2}', 'FontSize', FontSize);
ylabel('\nu, s^{-1}', 'FontSize', FontSize);
title('b)', 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

sp222 = subplot(2, 2, 2);
plot(v_4_SF_1, Ca_max_SF_1, 'g-', 'LineWidth', 2);
hold on;
plot(v_4_SF_1, Ca_min_SF_1, 'g-', 'LineWidth', 2);
hold on;

plot(v_4_back_SF_2, Ca_max_back_SF_2, 'g-', 'LineWidth', 2);
hold on;
plot(v_4_back_SF_2, Ca_min_back_SF_2, 'g-', 'LineWidth', 2);
hold on;

plot(v_4_LC_1, Ca_max_LC_1, 'r-', 'LineWidth', 2);
hold on;
plot(v_4_LC_1, Ca_min_LC_1, 'r-', 'LineWidth', 2);
hold on;

plot(v_4_back_LC_2, Ca_max_back_LC_2, 'b-', 'LineWidth', 2);
hold on;
plot(v_4_back_LC_2, Ca_min_back_LC_2, 'b-', 'LineWidth', 2);
hold on;

%grid on;
box on;
xlim([0 2.5]);
ylim([0 0.7]);
ax = gca;
ax.XTick = [0: 0.5: 2.5];
xtickformat('%.1f');
ax.YTick = [0: 0.1: 0.7];
ytickformat('%.1f');
%yticklabels({'0', '\pi/2', '\pi', '3\pi/2', '2\pi'});
%yticklabels({'0', '\pi/4', '\pi/2', '3\pi/4', '\pi', '5\pi/4', '3\pi/2', '7\pi/4', '2\pi'});
%legend('<\nu_i>');
%xlabel('v_{4}, \muM/s', 'FontSize', FontSize);
ylabel('[Ca^{2+}], \muM', 'FontSize', FontSize);
title('c)', 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

sp224 = subplot(2, 2, 4);
plot(v_4_SF_1, nu_a_SF_1, 'g-', 'LineWidth', 2);
hold on;

plot(v_4_back_SF_2, nu_a_back_SF_2, 'g-', 'LineWidth', 2);
hold on;

plot(v_4_LC_1, nu_a_LC_1, 'r-', 'LineWidth', 2);
hold on;

plot(v_4_back_LC_2, nu_a_back_LC_2, 'b-', 'LineWidth', 2);
hold on;

x_start_12 = 2.13;
x_end_12   = 2.13;
y_start_12 = 0.08;
y_end_12   = 0.02; 
RedArrow2 = annotation('arrow');
RedArrow2.Parent = gca;
RedArrow2.X = [x_start_12, x_end_12];
RedArrow2.Y = [y_start_12, y_end_12];
RedArrow2.Color = 'red';
hold on;

x_start_22 = 1.73;
x_end_22   = 1.73;
y_start_22 = 0.02;
y_end_22   = 0.08; 
BlueArrow2 = annotation('arrow');
BlueArrow2.Parent = gca;
BlueArrow2.X = [x_start_22, x_end_22];
BlueArrow2.Y = [y_start_22, y_end_22];
BlueArrow2.Color = 'blue';

%grid on;
box on;
xlim([0 2.5]);
ylim([0 0.15]);
ax = gca;
ax.XTick = [0: 0.5: 2.5];
xtickformat('%.1f');
ax.YTick = [0: 0.025: 0.15];
ytickformat('%.3f');
%yticklabels({'0', '\pi/2', '\pi', '3\pi/2', '2\pi'});
%yticklabels({'0', '\pi/4', '\pi/2', '3\pi/4', '\pi', '5\pi/4', '3\pi/2', '7\pi/4', '2\pi'});
%legend('<\nu_i>');
xlabel('v_4, \muM/s', 'FontSize', FontSize);
ylabel('\nu, s^{-1}', 'FontSize', FontSize);
title('d)', 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

saveas(gcf, 'results_neuro_astro_bifurc.png');
saveas(gcf, 'results_neuro_astro_bifurc', 'epsc');
close(results_neuro_astro_bifurc);
disp('Picture results_neuro_astro_bifurc save');

return

%{
path1 = '/home/makovkin_s/HH_Recogn_2023_03_01_4x1_RN_SN_IN_CN_E_syn_IN_phi_CN_RN_steps_500_1';
%path1 = '/Users/sergeymakovkin/Documents/HH_Recogn_2022_11_21_1x1_4th_Excitation_Phase'; FontSize = 20;

filename1 = 'Data_E_syn_IN_phi_CN_RN.txt';
Data = importdata( [ path1 '/' filename1 ] );
V_syn_IN_1    = Data(:, 1);
Phase_CN_RN_1 = Data(:, 2);
disp('Data_E_syn_IN_phi_CN_RN 1 load complete');

path1 = '/home/makovkin_s/HH_Recogn_2023_03_01_4x1_RN_SN_IN_CN_E_syn_IN_phi_CN_RN_steps_500_2';
%path1 = '/Users/sergeymakovkin/Documents/HH_Recogn_2022_11_21_1x1_4th_Excitation_Phase'; FontSize = 20;

filename1 = 'Data_E_syn_IN_phi_CN_RN.txt';
Data = importdata( [ path1 '/' filename1 ] );
V_syn_IN_2    = Data(:, 1);
Phase_CN_RN_2 = Data(:, 2);
disp('Data_E_syn_IN_phi_CN_RN 2 load complete');

path1 = '/home/makovkin_s/HH_Recogn_2023_03_01_4x1_RN_SN_IN_CN_E_syn_IN_phi_CN_RN_steps_500_3';
%path1 = '/Users/sergeymakovkin/Documents/HH_Recogn_2022_11_21_1x1_4th_Excitation_Phase'; FontSize = 20;

filename1 = 'Data_E_syn_IN_phi_CN_RN.txt';
Data = importdata( [ path1 '/' filename1 ] );
V_syn_IN_3    = Data(:, 1);
Phase_CN_RN_3 = Data(:, 2);
disp('Data_E_syn_IN_phi_CN_RN 3 load complete');

path1 = '/home/makovkin_s/HH_Recogn_2023_03_01_4x1_RN_SN_IN_CN_E_syn_IN_phi_CN_RN_steps_500_4';
%path1 = '/Users/sergeymakovkin/Documents/HH_Recogn_2022_11_21_1x1_4th_Excitation_Phase'; FontSize = 20;

filename1 = 'Data_E_syn_IN_phi_CN_RN.txt';
Data = importdata( [ path1 '/' filename1 ] );
V_syn_IN_4    = Data(:, 1);
Phase_CN_RN_4 = Data(:, 2);
disp('Data_E_syn_IN_phi_CN_RN 4 load complete');
%}

results_Phase_CN_RN_V_syn_SN = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
%plot(V_syn_IN, Phase_CN_RN,  '.', 'LineWidth', 2);
plot(V_syn_SN, Phase_CN_RN,  'k.', 'MarkerSize', 6);
hold on;
%{
plot(V_syn_IN_1, Phase_CN_RN_1,  'k.', 'MarkerSize', 6);
hold on;
plot(V_syn_IN_2, Phase_CN_RN_2,  'k.', 'MarkerSize', 6);
hold on;
plot(V_syn_IN_3, Phase_CN_RN_3,  'k.', 'MarkerSize', 6);
hold on;
plot(V_syn_IN_4, Phase_CN_RN_4,  'k.', 'MarkerSize', 6);
hold on;
%}
grid on;
box on;
%xlim([-73 -69]);
xlim([-90 0]);
%ylim([3*pi/2 2*pi]);
ylim([0 2*pi]);
ax = gca;
%ax.XTick = [-80: 1: 65];
ax.XTick = [-90: 5: 0];
xtickformat('%.0f');
%ax.YTick = [0: pi/2: 2*pi];
ax.YTick = [0: pi/4: 2*pi];
%ytickformat('%.2f');
%yticklabels({'0', '\pi/2', '\pi', '3\pi/2', '2\pi'});
yticklabels({'0', '\pi/4', '\pi/2', '3\pi/4', '\pi', '5\pi/4', '3\pi/2', '7\pi/4', '2\pi'});
%legend('<\nu_i>');
xlabel('V_{syn SN eff}, mV', 'FontSize', FontSize);
ylabel('\Delta\phi_{V_{CN}-V_{RN}}', 'FontSize', FontSize);
title('\Delta\phi between V_{CN} and V_{RN}', 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

saveas(gcf, 'results_Phase_CN_RN_V_syn_SN.png');
%saveas(gcf, 'results_Phase_CN_RN_V_syn_SN', 'epsc');
close(results_Phase_CN_RN_V_syn_SN);
disp('Picture results_Phase_CN_RN_V_syn_SN save');

return

Data_Delta_Phi_CN_RN_E_syn_IN = [phi_new_CN_RN(end), E_syn_IN];
formatSpec = '%2.4f\t%2.4f\n';
fileID = fopen('Data_Delta_Phi_CN_RN_E_syn_IN.txt', 'A');
fprintf(fileID, formatSpec, Data_Delta_Phi_CN_RN_E_syn_IN');
fclose(fileID);

return

%{
%%%%%%%%%%%%%%
omega_cur = 0;
omega_total = [];
yyaxis left;
regular_V_spiking_counter = 0;
%for i = 1:size(V, 2)
i = 2;
    V_p = V(:, i);
    [pks, locs] = findpeaks(V_p, 'MinPeakHeight', -10);
    
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end

    if isempty([pks, locs]) || size(pks, 1) == 1
        omega_cur = 0;
        omega_total = [omega_total omega_cur'];
        %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    if ~isempty([pks, locs]) && size(pks, 1) ~= 1
        regular_V_spiking_counter = regular_V_spiking_counter + 1;
        omega_cur = 1./diff(time_V(locs));
        omega_total = [omega_total omega_cur'];
        %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
%end
time_locs_2 = time_V(locs);
omega_cur_2 = omega_cur;

state_2 = 0;

if size(time_locs_2, 1) >= 1
	state_2 = 1;
else state_2 == 0;
end
%}

Data_I_app_IN_g_syn_SN_freq_IN = [I_app_3, g_syn_2, freq_3];
formatSpec = '%2.4f\t%2.4f\t%2.4f\n';
fileID = fopen('Data_I_app_IN_g_syn_SN_freq_IN.txt','A');
fprintf(fileID, formatSpec, Data_I_app_IN_g_syn_SN_freq_IN');
fclose(fileID);

return

Data_2 = [time_locs_2(2:end), omega_cur_2];
formatSpec = '%2.4f %2.4f\n';
fileID = fopen('Data_2.txt','w');
fprintf(fileID, formatSpec, Data_2');
fclose(fileID);

return

%%%%%%%%%%%%%%%%%%%%%%%% Phases Begin %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
omega_cur = 0;
omega_total = [];
yyaxis left;
regular_V_spiking_counter = 0;
%for i = 1:size(V, 2)
i = 1;
    V_p = V(:, i);
    [pks, locs] = findpeaks(V_p, 'MinPeakHeight', -10);
    
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end

    if isempty([pks, locs]) || size(pks, 1) == 1
        omega_cur = 0;
        omega_total = [omega_total omega_cur'];
        %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    if ~isempty([pks, locs]) && size(pks, 1) ~= 1
        regular_V_spiking_counter = regular_V_spiking_counter + 1;
        omega_cur = 1./diff(time_V(locs));
        omega_total = [omega_total omega_cur'];
        %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
%end
time_locs_1 = time_V(locs);
omega_cur_1 = omega_cur;

Data_1 = [time_locs_1(2:end), omega_cur_1];
formatSpec = '%2.4f %2.4f\n';
fileID = fopen('Data_1.txt','w');
fprintf(fileID, formatSpec, Data_1');
fclose(fileID);
%%%%%%%%%%%%%%%%%

omega_cur = 0;
omega_total = [];
yyaxis left;
regular_V_spiking_counter = 0;
%for i = 1:size(V, 2)
i = 2;
    V_p = V(:, i);
    [pks, locs] = findpeaks(V_p, 'MinPeakHeight', -10);
    
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end

    if isempty([pks, locs]) || size(pks, 1) == 1
        omega_cur = 0;
        omega_total = [omega_total omega_cur'];
        %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    if ~isempty([pks, locs]) && size(pks, 1) ~= 1
        regular_V_spiking_counter = regular_V_spiking_counter + 1;
        omega_cur = 1./diff(time_V(locs));
        omega_total = [omega_total omega_cur'];
        %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
%end
time_locs_2 = time_V(locs);
omega_cur_2 = omega_cur;

Data_2 = [time_locs_2(2:end), omega_cur_2];
formatSpec = '%2.4f %2.4f\n';
fileID = fopen('Data_2.txt','w');
fprintf(fileID, formatSpec, Data_2');
fclose(fileID);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

omega_cur = 0;
omega_total = [];
yyaxis left;
regular_V_spiking_counter = 0;
%for i = 1:size(V, 2)
i = 3;
    V_p = V(:, i);
    [pks, locs] = findpeaks(V_p, 'MinPeakHeight', -10);
    
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end

    if isempty([pks, locs]) || size(pks, 1) == 1
        omega_cur = 0;
        omega_total = [omega_total omega_cur'];
        %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    if ~isempty([pks, locs]) && size(pks, 1) ~= 1
        regular_V_spiking_counter = regular_V_spiking_counter + 1;
        omega_cur = 1./diff(time_V(locs));
        omega_total = [omega_total omega_cur'];
        %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
%end
time_locs_3 = time_V(locs);
omega_cur_3 = omega_cur;

Data_3 = [time_locs_3(2:end), omega_cur_3];
formatSpec = '%2.4f %2.4f\n';
fileID = fopen('Data_3.txt','w');
fprintf(fileID, formatSpec, Data_3');
fclose(fileID);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

omega_cur = 0;
omega_total = [];
yyaxis left;
regular_V_spiking_counter = 0;
%for i = 1:size(V, 2)
i = 4;
    V_p = V(:, i);
    [pks, locs] = findpeaks(V_p, 'MinPeakHeight', -10);
    
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end

    if isempty([pks, locs]) || size(pks, 1) == 1
        omega_cur = 0;
        omega_total = [omega_total omega_cur'];
        %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    if ~isempty([pks, locs]) && size(pks, 1) ~= 1
        regular_V_spiking_counter = regular_V_spiking_counter + 1;
        omega_cur = 1./diff(time_V(locs));
        omega_total = [omega_total omega_cur'];
        %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
%end
time_locs_4 = time_V(locs);
omega_cur_4 = omega_cur;

Data_4 = [time_locs_4(2:end), omega_cur_4];
formatSpec = '%2.4f %2.4f\n';
fileID = fopen('Data_4.txt','w');
fprintf(fileID, formatSpec, Data_4');
fclose(fileID);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

results_freq_phase_phi_1_2 = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
subplot(2, 1, 1);
plot(time_locs_1(2:end), omega_cur_1,  '.', 'LineWidth', 2);
hold on;
plot(time_locs_2(2:end), omega_cur_2,  '.', 'LineWidth', 2);
set(gca, 'FontSize', FontSize);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([freq_min freq_max]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
legend('\nu_1', '\nu_2');
xlabel('Time, sec', 'FontSize', FontSize);
ylabel('\nu, sec^{-1}', 'FontSize', FontSize);
title('\nu_1, \nu_2', 'FontSize', FontSize);

min_time_size_RN_SN = min(size(time_locs_1, 1), size(time_locs_2, 1));
max_per_RN_SN = max(max(diff(time_locs_1)), max(diff(time_locs_2)));
phi_RN_SN = 2*pi*(time_locs_1(1:min_time_size_RN_SN) - time_locs_2(1:min_time_size_RN_SN)) / max_per_RN_SN;
phi_1_2_mean = mod(phi_RN_SN, 2*pi);
phi_1_2_mean = phi_1_2_mean(round(end/2): end, :);
phi_1_2_mean = mean(phi_1_2_mean);

Data_Phase_1_2 = [E_syn, phi_1_2_mean];
formatSpec = '%2.4f %2.4f\n';
fileID = fopen('Data_Phase_1_2.txt','a');
fprintf(fileID, formatSpec, Data_Phase_1_2');
fclose(fileID);

%figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
subplot(2, 1, 2)
plot(time_locs_2(1:min_time_size_RN_SN), mod(phi_RN_SN, 2*pi), '.', 'LineWidth', 3);
set(gca, 'FontSize', FontSize);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0 2*pi]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
yticks([0, pi/2, pi, 3*pi/2, 2*pi])
yticklabels({'0','\pi/2','\pi','3/2 \pi','2 \pi'})
xlabel('Time, sec', 'FontSize', FontSize);
ylabel('\Delta \phi_{1, 2}, rad', 'FontSize', FontSize);
title('\Delta \phi_{1, 2}', 'FontSize', FontSize);

saveas(gcf, 'results_freq_phase_phi_1_2.png');
%saveas(gcf, 'results_freq_phase_phi_1_2', 'epsc');
close(results_freq_phase_phi_1_2);
disp('results_freq_phase_phi_1_2 save');

results_freq_phase_phi_1_3 = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
subplot(2, 1, 1);
plot(time_locs_1(2:end), omega_cur_1,  '.', 'LineWidth', 2);
hold on;
plot(time_locs_3(2:end), omega_cur_3,  '.', 'LineWidth', 2);
set(gca, 'FontSize', FontSize);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([freq_min freq_max]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
legend('\nu_1', '\nu_3');
xlabel('Time, sec', 'FontSize', FontSize);
ylabel('\nu, sec^{-1}', 'FontSize', FontSize);
title('\nu_1, \nu_3', 'FontSize', FontSize);

min_time_size_1_3 = min(size(time_locs_1, 1), size(time_locs_3, 1));
max_per_1_3 = max(max(diff(time_locs_1)), max(diff(time_locs_3)));
phi_1_3 = 2*pi*(time_locs_1(1:min_time_size_1_3) - time_locs_3(1:min_time_size_1_3)) / max_per_1_3;
phi_1_3_mean = mod(phi_1_3, 2*pi);
phi_1_3_mean = phi_1_3_mean(round(end/2): end, :);
phi_1_3_mean = mean(phi_1_3_mean);

Data_Phase_1_3 = [E_syn, phi_1_3_mean];
formatSpec = '%2.4f %2.4f\n';
fileID = fopen('Data_Phase_1_3.txt','a');
fprintf(fileID, formatSpec, Data_Phase_1_3');
fclose(fileID);

%figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
subplot(2, 1, 2)
plot(time_locs_3(1:min_time_size_1_3), mod(phi_1_3, 2*pi), '.', 'LineWidth', 3);
set(gca, 'FontSize', FontSize);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0 2*pi]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
yticks([0, pi/2, pi, 3*pi/2, 2*pi])
yticklabels({'0','\pi/2','\pi','3/2 \pi','2 \pi'})
xlabel('Time, sec', 'FontSize', FontSize);
ylabel('\Delta \phi_{1, 3}, rad', 'FontSize', FontSize);
title('\Delta \phi_{1, 3}', 'FontSize', FontSize);

saveas(gcf, 'results_freq_phase_phi_1_3.png');
%saveas(gcf, 'results_freq_phase_phi_1_3', 'epsc');
close(results_freq_phase_phi_1_3);
disp('results_freq_phase_phi_1_3 save');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

results_freq_phase_phi_1_4 = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
subplot(2, 1, 1);
plot(time_locs_1(2:end), omega_cur_1,  '.', 'LineWidth', 2);
hold on;
plot(time_locs_4(2:end), omega_cur_4,  '.', 'LineWidth', 2);
set(gca, 'FontSize', FontSize);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([freq_min freq_max]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
legend('\nu_1', '\nu_4');
xlabel('Time, sec', 'FontSize', FontSize);
ylabel('\nu, sec^{-1}', 'FontSize', FontSize);
title('\nu_1, \nu_4', 'FontSize', FontSize);

min_time_size_1_4 = min(size(time_locs_1, 1), size(time_locs_4, 1));
max_per_1_4 = max(max(diff(time_locs_1)), max(diff(time_locs_4)));
phi_1_4 = 2*pi*(time_locs_1(1:min_time_size_1_4) - time_locs_4(1:min_time_size_1_4)) / max_per_1_4;
phi_1_4_mean = mod(phi_1_4, 2*pi);
phi_1_4_mean = phi_1_4_mean(round(end/2): end, :);
phi_1_4_mean = mean(phi_1_4_mean);

Data_Phase_1_4 = [E_syn, phi_1_4_mean];
formatSpec = '%2.4f %2.4f\n';
fileID = fopen('Data_Phase_1_4.txt','a');
fprintf(fileID, formatSpec, Data_Phase_1_4');
fclose(fileID);

%figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
subplot(2, 1, 2)
plot(time_locs_4(1:min_time_size_1_4), mod(phi_1_4, 2*pi), '.', 'LineWidth', 3);
set(gca, 'FontSize', FontSize);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0 2*pi]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
yticks([0, pi/2, pi, 3*pi/2, 2*pi])
yticklabels({'0','\pi/2','\pi','3/2 \pi','2 \pi'})
xlabel('Time, sec', 'FontSize', FontSize);
ylabel('\Delta \phi_{1, 4}, rad', 'FontSize', FontSize);
title('\Delta \phi_{1, 4}', 'FontSize', FontSize);

saveas(gcf, 'results_freq_phase_phi_1_4.png');
%saveas(gcf, 'results_freq_phase_phi_1_4', 'epsc');
close(results_freq_phase_phi_1_4);
disp('results_freq_phase_phi_1_4 save');
%%%%%%%%%%%%%%%%%%%%%%%% Phases End %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

results_V_I_stim_I_syn_nu_phase_Recogn_4 = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
 
subplot(4, 5, 1);
plot(time_V, V(:, 1), 'LineWidth', 1);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([-80 40]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
%xlabel('Time, s', 'FontSize', FontSize);
ylabel('V, mV', 'FontSize', FontSize);
title(['V(t) for ', num2str(1), '^{st} neuron'], 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

subplot(4, 5, 2);
plot(time_I_stim, I_stim_SF(:, 1), 'LineWidth', 1);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0.0 I_stim_max]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
%xlabel('Time, s', 'FontSize', FontSize);
ylabel('I_{stim}, \muA/cm^2', 'FontSize', FontSize);
title(['I_{stim}(t) for ', num2str(1), '^{st} neuron'], 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

subplot(4, 5, 3);
plot(time_I_syn, I_syn(:, 1), 'LineWidth', 1);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0.0 10]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
%xlabel('Time, s', 'FontSize', FontSize);
ylabel('I_{syn}, \muA/cm^2', 'FontSize', FontSize);
title(['I_{syn}(t) for ', num2str(1), '^{st} neuron'], 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);
%%%%%%%%%

subplot(4, 5, 4);
omega_cur = 0;
omega_total = [];
time_total = [];
%yyaxis left;
regular_V_spiking_counter = 0;
%for i = 1:size(V, 2)
i = 1;
    V_p = V(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end

    if isempty([pks, locs]) || size(pks, 1) == 1
        omega_cur = 0;
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        regular_V_spiking_counter = regular_V_spiking_counter + 1;
        omega_cur = 1./diff(locs);
        %omega_cur = omega_cur(find(omega_cur'<=60));
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        plot(time_locs, omega_cur,  '-', 'LineWidth', 1);
        hold on;
    end
%end

set(gca, 'FontSize', FontSize);
grid on;
box on;
xlim([time_Debug_begin time_Debug_end]);
ylim([freq_min freq_max]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
ax.YTick = [freq_min: d_freq: freq_max];
%legend('<\nu_i>');
%xlabel('Time, sec', 'FontSize', FontSize);
ylabel('\nu, s^{-1}', 'FontSize', FontSize);
title([num2str(1), '^{st} neuron frequencies'], 'FontSize', FontSize);

%%%%%%%%%
subplot(4, 5, 6);
plot(time_V, V(:, 2), 'LineWidth', 1);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([-80 40]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
%xlabel('Time, s', 'FontSize', FontSize);
ylabel('V, mV', 'FontSize', FontSize);
title(['V(t) for ', num2str(2), '^{nd} neuron'], 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

subplot(4, 5, 7);
plot(time_I_stim, I_stim_SF(:, 2), 'LineWidth', 1);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0.0 I_stim_max]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
%xlabel('Time, s', 'FontSize', FontSize);
ylabel('I_{stim}, \muA/cm^2', 'FontSize', FontSize);
title(['I_{stim}(t) for ', num2str(2), '^{nd} neuron'], 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

subplot(4, 5, 8);
plot(time_I_syn, I_syn(:, 2), 'LineWidth', 1);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0.0 10]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
%xlabel('Time, s', 'FontSize', FontSize);
ylabel('I_{syn}, \muA/cm^2', 'FontSize', FontSize);
title(['I_{syn}(t) for ', num2str(2), '^{nd} neuron'], 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

subplot(4, 5, 9);
omega_cur = 0;
omega_total = [];
time_total = [];
%yyaxis left;
regular_V_spiking_counter = 0;
%for i = 1:size(V, 2)
i = 2;
    V_p = V(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end

    if isempty([pks, locs]) || size(pks, 1) == 1
        omega_cur = 0;
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        regular_V_spiking_counter = regular_V_spiking_counter + 1;
        omega_cur = 1./diff(locs);
        %omega_cur = omega_cur(find(omega_cur'<=60));
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        plot(time_locs, omega_cur,  '-', 'LineWidth', 1);
        hold on;
    end
%end

set(gca, 'FontSize', FontSize);
grid on;
box on;
xlim([time_Debug_begin time_Debug_end]);
ylim([freq_min freq_max]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
ax.YTick = [freq_min: d_freq: freq_max];
%legend('<\nu_i>');
%xlabel('Time, sec', 'FontSize', FontSize);
ylabel('\nu, s^{-1}', 'FontSize', FontSize);
title([num2str(2), '^{nd} neuron frequencies'], 'FontSize', FontSize);

subplot(4, 5, 10)
plot(time_locs_2(1:min_time_size_RN_SN), mod(phi_RN_SN, 2*pi), '.', 'LineWidth', 1);
set(gca, 'FontSize', FontSize);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0 2*pi]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
yticks([0, pi/2, pi, 3*pi/2, 2*pi])
yticklabels({'0','\pi/2','\pi','3/2 \pi','2 \pi'})
%xlabel('Time, sec', 'FontSize', FontSize);
ylabel('\Delta \phi_{1, 2}, rad', 'FontSize', FontSize);
title('\Delta \phi_{1, 2}', 'FontSize', FontSize);

subplot(4, 5, 11);
plot(time_V, V(:, 3), 'LineWidth', 1);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([-80 40]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
%xlabel('Time, s', 'FontSize', FontSize);
ylabel('V, mV', 'FontSize', FontSize);
title(['V(t) for ', num2str(3), '^{rd} neuron'], 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

subplot(4, 5, 12);
plot(time_I_stim, I_stim_SF(:, 3), 'LineWidth', 1);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0.0 I_stim_max]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
%xlabel('Time, s', 'FontSize', FontSize);
ylabel('I_{stim}, \muA/cm^2', 'FontSize', FontSize);
title(['I_{stim}(t) for ', num2str(3), '^{rd} neuron'], 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

subplot(4, 5, 13);
plot(time_I_syn, I_syn(:, 3), 'LineWidth', 1);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0.0 10]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
%xlabel('Time, s', 'FontSize', FontSize);
ylabel('I_{syn}, \muA/cm^2', 'FontSize', FontSize);
title(['I_{syn}(t) for ', num2str(3), '^{rd} neuron'], 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

subplot(4, 5, 14);
omega_cur = 0;
omega_total = [];
time_total = [];
%yyaxis left;
regular_V_spiking_counter = 0;
%for i = 1:size(V, 2)
i = 3;
    V_p = V(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end

    if isempty([pks, locs]) || size(pks, 1) == 1
        omega_cur = 0;
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        regular_V_spiking_counter = regular_V_spiking_counter + 1;
        omega_cur = 1./diff(locs);
        %omega_cur = omega_cur(find(omega_cur'<=60));
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        plot(time_locs, omega_cur,  '-', 'LineWidth', 1);
        hold on;
    end
%end

set(gca, 'FontSize', FontSize);
grid on;
box on;
xlim([time_Debug_begin time_Debug_end]);
ylim([freq_min freq_max]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
ax.YTick = [freq_min: d_freq: freq_max];
%legend('<\nu_i>');
xlabel('Time, sec', 'FontSize', FontSize);
ylabel('\nu, s^{-1}', 'FontSize', FontSize);
title([num2str(3), '^{rd} neuron frequencies'], 'FontSize', FontSize);

subplot(4, 5, 15)
plot(time_locs_3(1:min_time_size_1_3), mod(phi_1_3, 2*pi), '.', 'LineWidth', 1);
set(gca, 'FontSize', FontSize);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0 2*pi]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
yticks([0, pi/2, pi, 3*pi/2, 2*pi])
yticklabels({'0','\pi/2','\pi','3/2 \pi','2 \pi'})
%xlabel('Time, sec', 'FontSize', FontSize);
ylabel('\Delta \phi_{1, 3}, rad', 'FontSize', FontSize);
title('\Delta \phi_{1, 3}', 'FontSize', FontSize);

subplot(4, 5, 16);
plot(time_V, V(:, 4), 'LineWidth', 1);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([-80 40]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
xlabel('Time, s', 'FontSize', FontSize);
ylabel('V, mV', 'FontSize', FontSize);
title(['V(t) for ', num2str(4), '^{th} neuron'], 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

subplot(4, 5, 17);
plot(time_I_stim, I_stim_SF(:, 4), 'LineWidth', 1);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0.0 I_stim_max]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
xlabel('Time, s', 'FontSize', FontSize);
ylabel('I_{stim}, \muA/cm^2', 'FontSize', FontSize);
title(['I_{stim}(t) for ', num2str(4), '^{th} neuron'], 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

subplot(4, 5, 18);
plot(time_I_syn, I_syn(:, 4), 'LineWidth', 1);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0.0 10]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
xlabel('Time, s', 'FontSize', FontSize);
ylabel('I_{syn}, \muA/cm^2', 'FontSize', FontSize);
title(['I_{syn}(t) for ', num2str(4), '^{th} neuron'], 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

subplot(4, 5, 19);
omega_cur = 0;
omega_total = [];
time_total = [];
%yyaxis left;
regular_V_spiking_counter = 0;
%for i = 1:size(V, 2)
i = 4;
    V_p = V(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end

    if isempty([pks, locs]) || size(pks, 1) == 1
        omega_cur = 0;
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        regular_V_spiking_counter = regular_V_spiking_counter + 1;
        omega_cur = 1./diff(locs);
        %omega_cur = omega_cur(find(omega_cur'<=60));
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        plot(time_locs, omega_cur,  '-', 'LineWidth', 1);
        hold on;
    end
%end

set(gca, 'FontSize', FontSize);
grid on;
box on;
xlim([time_Debug_begin time_Debug_end]);
ylim([freq_min freq_max]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
ax.YTick = [freq_min: d_freq: freq_max];
%legend('<\nu_i>');
xlabel('Time, sec', 'FontSize', FontSize);
ylabel('\nu, s^{-1}', 'FontSize', FontSize);
title([num2str(4), '^{th} neuron frequencies'], 'FontSize', FontSize);

subplot(4, 5, 20)
plot(time_locs_4(1:min_time_size_1_4), mod(phi_1_4, 2*pi), '.', 'LineWidth', 1);
set(gca, 'FontSize', FontSize);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0 2*pi]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
yticks([0, pi/2, pi, 3*pi/2, 2*pi])
yticklabels({'0','\pi/2','\pi','3/2 \pi','2 \pi'})
xlabel('Time, sec', 'FontSize', FontSize);
ylabel('\Delta \phi_{1, 4}, rad', 'FontSize', FontSize);
title('\Delta \phi_{1, 4}', 'FontSize', FontSize);

saveas(gcf, 'results_V_I_stim_I_syn_nu_phase_Recogn_4.png');
%saveas(gcf, 'results_V_I_stim_I_syn_nu_phase_Recogn_4', 'epsc');
close(results_V_I_stim_I_syn_nu_phase_Recogn_4);
disp('Picture results_V_I_stim_I_syn_nu_phase_Recogn_4 save');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

return

results_I_stim_Recogn_3rd = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');

plot(time_I_syn, I_syn(:, 3), 'LineWidth', 1);
grid on;
xlim([time_Debug_begin time_Debug_end]);
ylim([0.0 10]);
ax = gca;
ax.XTick = [time_Debug_begin: d_time_Debug: time_Debug_end];
xtickformat(xtckfrmt);
%xlabel('Time, s', 'FontSize', FontSize);
ylabel('I_{syn}, \muA/cm^2', 'FontSize', FontSize);
title(['I_{syn}(t) for ', num2str(3), '^{rd} neuron'], 'FontSize', FontSize);
set(gca, 'FontSize', FontSize);

saveas(gcf, 'results_I_stim_Recogn_3rd.png');
%saveas(gcf, 'results_I_stim_Recogn_3rd', 'epsc');
close(results_I_stim_Recogn_3rd);
disp('Picture results_I_stim_Recogn_3rd save');

return

% subplot(4, 1, 3);
% plot(time_I_syn, I_syn(:, ii), 'LineWidth', 1);
% grid on;
% xlim([0 15.0]);
% %ylim([0.0 20]);
% ax = gca;
% ax.XTick = [0:1:15.0];
% xtickformat('%.1f');
% %xlabel('Time, s', 'FontSize', 18);
% ylabel('I_{syn}, \muA/cm^2', 'FontSize', 16);
% %title(['I_{stim}(t) for ', num2str(ii), '^{th} pyramydal neuron. <Freq_{Poisson}> = ', num2str(meanPoissonFreq), ' Hz'], 'FontSize', 24);
% title(['I_{syn}(t) for ', num2str(ii), '^{th} neuron'], 'FontSize', 16);
% set(gca, 'FontSize', 16);
% 
% subplot(4, 1, 4);
% plot(time_Ca, Ca(:, ii), 'LineWidth', 1);
% hold on;
% line([0, 15.0], [0.3, 0.3], 'Color', 'red', 'LineStyle', '--', 'LineWidth', 1);
% grid on;
% xlim([0 15.0]);
% ylim([0.0 0.6]);
% ax = gca;
% ax.XTick = [0:1:15.0];
% xtickformat('%.1f');
% xlabel('Time, s', 'FontSize', 16);
% ylabel('[Ca^{2+}], \muM', 'FontSize', 16);
% %title(['I_{stim}(t) for ', num2str(ii), '^{th} pyramydal neuron. <Freq_{Poisson}> = ', num2str(meanPoissonFreq), ' Hz'], 'FontSize', 24);
% title(['[Ca^{2+}](t) for ', num2str(ii), '^{th} neuron'], 'FontSize', 16);
% set(gca, 'FontSize', 16);
% 
% saveas(gcf, 'results_I_stim_V_I_syn_10x15_time_15_s.png');
% %saveas(gcf, 'results_I_stim_V_I_syn', 'epsc');
% close(results_I_stim_V_I_syn_10x15_time_15_s);
% disp('results_I_stim_V_I_syn_10x15_time_15_s save');

return

filename1 = 'results_Ca.txt';
Data = importdata( [ path1 '/' filename1 ] );
time_Ca = Data(:, 1);
Ca = Data(:, 2:end);
disp('results_Ca load complete');

%%%%% Video %%%%
filename1 = 'Matrix_sizes.txt';
Data = importdata( [ path1 '/' filename1 ] );
Neuron_width = Data(1);
Neuron_height = Data(2);
Astro_width = Data(3);
Astro_height = Data(4);

figure('units', 'normalized', 'outerposition', [0 0 1.0 1.0], 'visible', 'on');
writerObj = VideoWriter('neuron_astro_5x7_time_30_s.avi'); % Name movie.
writerObj.FrameRate = 60; % How many frames per second.
open(writerObj);

%const double dt = 0.00005

for n = 200000: 5: 360000
    subplot(1, 2, 1);
    image_V = reshape(V(n, :), [Neuron_width, Neuron_height]);
    imagesc(image_V');
    %hold on;
    axis equal;
    axis off;
    colormap(hot);
    caxis([-80 40]);
    colorbar;
    title(['Neurons. V, mV. Layer size = ' num2str(Neuron_width) 'x' num2str(Neuron_height) '. Time = ' num2str(time_V(n), '%.5f') ' s']);
    set(gca, 'FontSize', FontSize);
    
    subplot(1, 2, 2);
    image_Ca = reshape(Ca(n, :), [Astro_width, Astro_height]);
    imagesc(image_Ca');
    %hold on;
    axis equal;
    axis off;
    colormap(hot);
    caxis([0 0.6]);
    colorbar;
    title(['Astrosytes. [Ca^{2+}], \muM. Layer size = ' num2str(Astro_width) 'x' num2str(Astro_height) '. Time = ' num2str(time_Ca(n), '%.5f') ' s']);
    set(gca, 'FontSize', FontSize);
    
    %pause(1/100000000);
    frame = getframe(gcf); % 'gcf' can handle if you zoom in to take a movie.
    writeVideo(writerObj, frame);
end

hold off
close(writerObj); % Save the movie.
disp('Video has saved');

return

%%% Spikes Debug Rnd %%%

% ii = 1;
% 
% results_I_stim_V_I_syn_10x15_time_15_s = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% 
% subplot(4, 1, 1);
% plot(time_I_stim, I_stim(:, ii), 'LineWidth', 1);
% grid on;
% xlim([0 15.0]);
% %ylim([0.0 10]);
% ax = gca;
% ax.XTick = [0:1:15.0];
% xtickformat('%.1f');
% %xlabel('Time, s', 'FontSize', 18);
% ylabel('I_{stim}, \muA/cm^2', 'FontSize', 16);
% %title(['I_{stim}(t) for ', num2str(ii), '^{th} pyramydal neuron. <F_{in}> = ', num2str(F_in), ' Hz', 'g_{syn P} = ', num2str(g_syn_P)], 'FontSize', 24);
% title(['I_{stim}(t) for ', num2str(ii), '^{th} neuron'], 'FontSize', 16);
% set(gca, 'FontSize', 16);
% 
% subplot(4, 1, 2);
% plot(time_V, V(:, ii), 'LineWidth', 1);
% grid on;
% xlim([0 15.0]);
% ylim([-80 40]);
% ax = gca;
% ax.XTick = [0:1:15.0];
% xtickformat('%.1f');
% %xlabel('Time, s', 'FontSize', 18);
% ylabel('V, mV', 'FontSize', 16);
% title(['V(t) for ', num2str(ii), '^{th} neuron'], 'FontSize', 16);
% set(gca, 'FontSize', 16);
% 
% subplot(4, 1, 3);
% plot(time_I_syn, I_syn(:, ii), 'LineWidth', 1);
% grid on;
% xlim([0 15.0]);
% %ylim([0.0 20]);
% ax = gca;
% ax.XTick = [0:1:15.0];
% xtickformat('%.1f');
% %xlabel('Time, s', 'FontSize', 18);
% ylabel('I_{syn}, \muA/cm^2', 'FontSize', 16);
% %title(['I_{stim}(t) for ', num2str(ii), '^{th} pyramydal neuron. <Freq_{Poisson}> = ', num2str(meanPoissonFreq), ' Hz'], 'FontSize', 24);
% title(['I_{syn}(t) for ', num2str(ii), '^{th} neuron'], 'FontSize', 16);
% set(gca, 'FontSize', 16);
% 
% subplot(4, 1, 4);
% plot(time_Ca, Ca(:, ii), 'LineWidth', 1);
% hold on;
% line([0, 15.0], [0.3, 0.3], 'Color', 'red', 'LineStyle', '--', 'LineWidth', 1);
% grid on;
% xlim([0 15.0]);
% ylim([0.0 0.6]);
% ax = gca;
% ax.XTick = [0:1:15.0];
% xtickformat('%.1f');
% xlabel('Time, s', 'FontSize', 16);
% ylabel('[Ca^{2+}], \muM', 'FontSize', 16);
% %title(['I_{stim}(t) for ', num2str(ii), '^{th} pyramydal neuron. <Freq_{Poisson}> = ', num2str(meanPoissonFreq), ' Hz'], 'FontSize', 24);
% title(['[Ca^{2+}](t) for ', num2str(ii), '^{th} neuron'], 'FontSize', 16);
% set(gca, 'FontSize', 16);
% 
% saveas(gcf, 'results_I_stim_V_I_syn_10x15_time_15_s.png');
% %saveas(gcf, 'results_I_stim_V_I_syn', 'epsc');
% close(results_I_stim_V_I_syn_10x15_time_15_s);
% disp('results_I_stim_V_I_syn_10x15_time_15_s save');

results_neuron_raster_3x4_time_5_s = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');

if (size(time_V, 2) > size(time_V, 1))
    time_V = time_V';
end
regular_V_spiking_counter = 0;
for i = 1:size(V, 2)
    %V_p = V(:, 1);
    V_p = V(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    if ~isempty([pks, locs])
        regular_V_spiking_counter = regular_V_spiking_counter + 1;
    end
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end
    plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
    hold on;
      
    %N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
end

xlim([0.0 5.0]);
ylim([0 size(V, 2)+1]);
%rectangle('Position',[33, 0, 1, 201], 'EdgeColor', '[0.0 1.0 0.0 0.5]', 'LineWidth', 3);
hold on;
box on;
grid on;
ax = gca;
ax = gca;
xtickformat('%.1f');
set(gca, 'XTick', [0.0:0.2:5.0]);
%ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
ax.YTick = [1, [10 :10 :size(V, 2)]];
xlabel('Time, s', 'FontSize', 20);
ylabel('Neuron #', 'FontSize', 20);
title(['Neurons raster'], 'FontSize', 20);
set(gca, 'FontSize', 20);

saveas(gcf, 'results_neuron_spiking_10x15_time_5_s.png');
%saveas(gcf, 'results_neuron_spiking', 'epsc');
close(results_neuron_raster_3x4_time_5_s);
disp('Picture results_neuron_spiking_10x15_time_5_s save');

results_neuron_spiking_10x15_time_05_s = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');

if (size(time_V, 2) > size(time_V, 1))
    time_V = time_V';
end
regular_V_spiking_counter = 0;
for i = 1:size(V, 2)
    %V_p = V(:, 1);
    V_p = V(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    if ~isempty([pks, locs])
        regular_V_spiking_counter = regular_V_spiking_counter + 1;
    end
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end
    plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
    hold on;
      
    %N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
end

xlim([0.0 0.5]);
ylim([0 size(V, 2)+1]);
%rectangle('Position',[33, 0, 1, 201], 'EdgeColor', '[0.0 1.0 0.0 0.5]', 'LineWidth', 3);
hold on;
box on;
grid on;
ax = gca;
ax = gca;
xtickformat('%.2f');
set(gca, 'XTick', [0.0:0.02:0.5]);
%ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
ax.YTick = [1, [5 :5 :size(V, 2)]];
xlabel('Time, s', 'FontSize', 20);
ylabel('Neuron #', 'FontSize', 20);
title(['Neurons raster'], 'FontSize', 20);
set(gca, 'FontSize', 20);

saveas(gcf, 'results_neuron_spiking_10x15_time_05_s.png');
%saveas(gcf, 'results_neuron_spiking', 'epsc');
close(results_neuron_spiking_10x15_time_05_s);
disp('results_neuron_spiking_10x15_time_05_s save');

% results_neuron_spiking_10x15_time_15_s = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% 
% if (size(time_V, 2) > size(time_V, 1))
%     time_V = time_V';
% end
% regular_V_spiking_counter = 0;
% for i = 1:size(V, 2)
%     %V_p = V(:, 1);
%     V_p = V(:, i);
%     [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
%     if ~isempty([pks, locs])
%         regular_V_spiking_counter = regular_V_spiking_counter + 1;
%     end
%     for pks_counter = 1:size(pks, 1)
%         pks(pks_counter) = i;
%     end
%     plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%     hold on;
%       
%     %N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
% end
% 
% xlim([0 15.0]);
% ylim([0 size(V, 2)+1]);
% %rectangle('Position',[33, 0, 1, 201], 'EdgeColor', '[0.0 1.0 0.0 0.5]', 'LineWidth', 3);
% hold on;
% box on;
% grid on;
% ax = gca;
% ax = gca;
% xtickformat('%.1f');
% set(gca, 'XTick', [0:1:15.0]);
% %ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
% ax.YTick = [1, [10 :10 :size(V, 2)]];
% xlabel('Time, s', 'FontSize', 20);
% ylabel('Neuron #', 'FontSize', 20);
% title(['Neurons raster'], 'FontSize', 20);
% set(gca, 'FontSize', 20);
% 
% saveas(gcf, 'results_neuron_spiking_10x15_time_15_s.png');
% %saveas(gcf, 'results_neuron_spiking', 'epsc');
% close(results_neuron_spiking_10x15_time_15_s);
% disp('results_neuron_spiking_10x15_time_15_s save');

% results_neuron_spiking_30x40_detailed = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% 
% if (size(time_V, 2) > size(time_V, 1))
%     time_V = time_V';
% end
% regular_V_spiking_counter = 0;
% for i = 1:size(V, 2)
%     %V_p = V(:, 1);
%     V_p = V(:, i);
%     [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
%     if ~isempty([pks, locs])
%         regular_V_spiking_counter = regular_V_spiking_counter + 1;
%     end
%     for pks_counter = 1:size(pks, 1)
%         pks(pks_counter) = i;
%     end
%     plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%     hold on;
%       
%     %N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
% end
% 
% xlim([0.20 0.35]);
% ylim([0 size(V, 2)+1]);
% %rectangle('Position',[33, 0, 1, 201], 'EdgeColor', '[0.0 1.0 0.0 0.5]', 'LineWidth', 3);
% hold on;
% box on;
% grid on;
% ax = gca;
% ax = gca;
% xtickformat('%.2f');
% set(gca, 'XTick', [0.20:0.01:0.35]);
% %ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
% ax.YTick = [1, [30 :30 :size(V, 2)]];
% xlabel('Time, s', 'FontSize', 20);
% ylabel('Neuron #', 'FontSize', 20);
% title(['Neurons raster'], 'FontSize', 20);
% set(gca, 'FontSize', 20);
% 
% saveas(gcf, 'results_neuron_spiking_30x40_detailed.png');
% %saveas(gcf, 'results_neuron_spiking', 'epsc');
% close(results_neuron_spiking_30x40_detailed);
% disp('results_neuron_spiking_30x40_detailed save');

% results_image_E_syn = figure('units', 'normalized', 'outerposition', [0 0 1 1]);
% image_E_syn = reshape(E_syn, [40, 50]);
% imagesc(image_E_syn');
% %hold on;
% axis equal;
% axis off;
% %MyColorMap = [1 0 0] [0 1 0];
% %MyColorMap = {'#FF0000', '#00FF00'};
% %colormap(MyColorMap);
% colormap(gray(2));
% caxis([-90 0]);
% cbh = colorbar('v');
% set(cbh, 'YTick', [-90 0]);
% %caxis([-80 40]);
% colorbar;
% title(['Neurons. E_{syn}, mV. Layer size = ' num2str(40) 'x' num2str(50) '.']);
% set(gca, 'FontSize', 20);
% saveas(gcf, 'results_image_E_syn.png');
% %saveas(gcf, 'results_image_E_syn', 'epsc');
% close(results_image_E_syn);
% disp('results_image_E_syn save');

return

%%%%% Correlation Begin %%%%%%

theta = time_V;
x1 = V(:, 1);
x2 = V(:, 12);

% theta = linspace(0,2*pi,100); 
% x1 = sin(theta); 
% x2 = sin(1.2*theta); 

[r, lags] = xcorr(x1,x2); 
clf()

figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
tiledlayout(2,1)
nexttile
hold on
plot(theta, x1, 'DisplayName', 'x1')
plot(theta, x2, 'DisplayName', 'x2')
legend()
nexttile
plot(lags,r, '-');
xlim([-0.05 0.05]);
grid on
xlabel('lag')
ylabel('cross-corr');

%%%%% Correlation End %%%%%%%%

return

figure('units', 'normalized', 'outerposition', [0 0 1 1]);

writerObj = VideoWriter('neuron_10x15_time_5_s.avi'); % Name movie.
writerObj.FrameRate = 45; % How many frames per second.
open(writerObj);

for n = 1:20:size(V, 1)
    image_V = reshape(V(n, :), [10, 15]);
    imagesc(image_V');
    %hold on;
    axis equal;
    axis off;
    colormap(hot);
    caxis([-80 40]);
    colorbar;
    title(['Neurons. V, mV. Layer size = ' num2str(10) 'x' num2str(15) '. Time = ' num2str(time_V(n), '%.5f') ' s']);
    set(gca, 'FontSize', 20);
    %pause(1/100000000);
    frame = getframe(gcf); % 'gcf' can handle if you zoom in to take a movie.
    writeVideo(writerObj, frame);
end

hold off
close(writerObj); % Save the movie.

return

figure('units', 'normalized', 'outerposition', [0 0 1 1]);

writerObj = VideoWriter('astro_90x100_time_3_s.avi'); % Name movie.
writerObj.FrameRate = 30; % How many frames per second.
open(writerObj);

for n = 1:5000:size(Ca, 1)
    image_Ca = reshape(Ca(n, :), [90, 100]);
    imagesc(image_Ca');
    %hold on;
    axis equal;
    axis off;
    colormap(hot);
    caxis([0 0.6]);
    colorbar;
    title(['Astrocytes. [Ca^{2+}], \muM. Layer size = ' num2str(90) 'x' num2str(100) '. Time = ' num2str(time_Ca(n), '%.5f') ' s']);
    set(gca, 'FontSize', 20);
    %pause(1/100000000);
    frame = getframe(gcf); % 'gcf' can handle if you zoom in to take a movie.
    writeVideo(writerObj, frame);
end

hold off
close(writerObj); % Save the movie.

return

clear all;

return

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% filename0 = 'A_A.txt';
% path0 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
% Data_A_A = importdata( [ path0 '/' filename0 ] );
% 
% filename1 = 'A_N.txt';
% path1 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
% Data_A_N = importdata( [ path1 '/' filename1 ] );
% 
% filename2 = 'results_E_syn.txt';
% path1 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
% E_syn = importdata( [ path1 '/' filename2 ] );
% 
% Data_A_N = Data_A_N.*(2*sign(repmat(E_syn,1,size(Data_A_N,2)))+1);
% 
% filename3 = 'p_rewir.txt';
% path3 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
% Data = importdata( [ path3 '/' filename3 ] );
% p_rewir = Data(1, 1);

%filename3 = 'p_inhib.txt';
%path3 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
%Data = importdata( [ path3 '/' filename3 ] );
%p_inhib = Data(1, 1);

% fig_A_A_A_N = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% ax221 = subplot(1, 2, 1);
% imshow(Data_A_A);
% %axis ij;
% axis('on', 'image');
% %axis equal;
% daspect([1 1 1])
% %%axis off;
% colormap(ax221, gray(2));
% caxis([0 1]);
% cbh = colorbar('v');
% set(cbh, 'YTick', [0:1:1]);
% %set(gca, 'XTick', [1 size(Data_A_A, 1)/2 size(Data_A_A, 1)]);
% %set(gca, 'YTick', [1 size(Data_A_A, 2)/2 size(Data_A_A, 2)]);
% set(gca, 'XTick', [1, 25 :25 :size(Data_A_A, 1)]);
% set(gca, 'YTick', [1, 25 :25 :size(Data_A_A, 2)]);
% ax = gca;
% ax.XAxisLocation = 'top';
% title('Astrocytes adjacency matrix');
% set(gca, 'FontSize', 25);
% 
% ax222 = subplot(1, 2, 2);
% imshow(Data_A_N);
% %axis ij;
% axis('on', 'image');
% %axis equal;
% daspect([1 1 1])
% %%axis off;
% colormap(ax222, [1 0 0; 0 0 0; 1 1 1]);
% %colormap(ax222, gray(3));
% caxis([-1 1]);
% cbh = colorbar('v');
% set(cbh, 'YTick', [-1:1:1], 'YTickLabel', {'Inhib conn', 'No conn', 'Excit conn'});
% %set(gca, 'XTick', [1 size(Data_A_N, 1)/2 size(Data_A_N, 1)]);
% %set(gca, 'YTick', [1 size(Data_A_N, 2)/2 size(Data_A_N, 2)]);
% set(gca, 'XTick', [1, 25 :25 :size(Data_A_N, 1)]);
% set(gca, 'YTick', [1, 25 :25 :size(Data_A_N, 2)]);
% ax = gca;
% ax.XAxisLocation = 'top';
% title(['Neurons adjacency matrix. p_{rewir} = ', num2str(p_rewir), '; p_{inhib} = ', num2str(p_inhib)]);
% set(gca, 'FontSize', 25);
% 
% saveas(gcf, 'A_A_A_N.png');
% saveas(gcf, 'A_A_A_N', 'epsc');
% close(fig_A_A_A_N);
% disp('A_A & A_N save');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% filename3 = 'results_V_P_g_syn_0010_g_syn_P_07_PoisFr_260_g_astro_m08.txt';
% path3 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
% Data = importdata( [ path3 '/' filename3 ] );
% %time_V = Data(round(0.25*end):end, 1);
% time_V_P = Data(:, 1);
% %V = Data(round(0.25*end):end, 2:end);
% V_P = Data(:, 2:end);
% %time = Data(4800000:end, 1);
% %V = Data(4800000:end, 2:end);
% %time = Data(100000:end, 1);
% %V = Data(100000:end, 2:end);
% %clear Data;
% disp('results_V_P load complete');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
filename3 = 'results_V_g_syn_0010_g_syn_P_07_PoisFr_260_g_astro_m08.txt';
path3 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data = importdata( [ path3 '/' filename3 ] );
%time_V = Data(round(0.25*end):end, 1);
time_V = Data(:, 1);
%V = Data(round(0.25*end):end, 2:end);
V_m08 = Data(:, 2:end);
%time = Data(4800000:end, 1);
%V = Data(4800000:end, 2:end);
%time = Data(100000:end, 1);
%V = Data(100000:end, 2:end);
%clear Data;
disp('results_V_m08 load complete');

filename3 = 'results_V_g_syn_0010_g_syn_P_07_PoisFr_260_g_astro_10.txt';
path3 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data = importdata( [ path3 '/' filename3 ] );
%time_V = Data(round(0.25*end):end, 1);
time_V = Data(:, 1);
%V = Data(round(0.25*end):end, 2:end);
V_10 = Data(:, 2:end);
%time = Data(4800000:end, 1);
%V = Data(4800000:end, 2:end);
%time = Data(100000:end, 1);
%V = Data(100000:end, 2:end);
%clear Data;
disp('results_V_10 load complete');

filename2 = 'results_Ca_g_syn_0010_g_syn_P_07_PoisFr_260_g_astro_m08.txt';
path2 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data = importdata( [ path2 '/' filename2 ] );
%time_Ca = Data(round(0.25*end):end, 1);
time_Ca = Data(:, 1);
%Ca = Data(round(0.25*end):end, 2:end);
Ca_m08 = Data(:, 2:end);
%time = Data(4800000:end, 1);
%Ca = Data(4800000:end, 2:end);
clear Data;
disp('results_Ca_m08 load complete');

filename2 = 'results_Ca_g_syn_0010_g_syn_P_07_PoisFr_260_g_astro_10.txt';
path2 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data = importdata( [ path2 '/' filename2 ] );
%time_Ca = Data(round(0.25*end):end, 1);
time_Ca = Data(:, 1);
%Ca = Data(round(0.25*end):end, 2:end);
Ca_10 = Data(:, 2:end);
%time = Data(4800000:end, 1);
%Ca = Data(4800000:end, 2:end);
clear Data;
disp('results_Ca_10 load complete');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% filename6 = 'test_Poisson_g_syn_0010_g_syn_P_07_PoisFr_260_g_astro_m08.txt';
% path6 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
% Data = importdata( [ path6 '/' filename6 ] );
% time = Data(:, 1);
% 
% meanPoissonTimeData = mean(Data);
% meanPoissonFreq = 1 / meanPoissonTimeData
% 
% % results_test_Poisson = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% % plot(time, 'LineWidth', 1);
% % hold on;
% % plot([0, size(Data, 1)], [meanPoissonTimeData, meanPoissonTimeData], 'r', 'LineWidth', 2);
% % grid on;
% % set(gca, 'FontSize', 24);
% % xlabel('Intervals (custom value)', 'FontSize', 50);
% % ylabel('Time, msec', 'FontSize', 50);
% % title('Time Poisson interval', 'FontSize', 50);
% % saveas(gcf, 'test_Poisson.png');
% % close(results_test_Poisson);
% % disp('test_Poisson save');
% 
% filename4 = 'results_I_stim_g_syn_0010_g_syn_P_07_PoisFr_260_g_astro_m08.txt';
% path4 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
% Data = importdata( [ path4 '/' filename4 ] );
% time = Data(:, 1);
% I_stim = Data(:, 2:end);
% disp('results_I_stim load complete');
% 
% ii = 5;

% results_I_stim = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% subplot(3, 1, 1);
% plot(time, I_stim(:, ii), 'LineWidth', 1);
% grid on;
% xlim([0 3]);
% %ylim([-0.2 0.2]);
% ax = gca;
% ax.XTick = [0:0.1:3];
% %xlabel('Time, s', 'FontSize', 24);
% ylabel('I_{stim}, \muA/cm^2', 'FontSize', 24);
% title(['I_{stim}(t) for ', num2str(ii), '^{th} neuron. <Freq_{Poisson}> = ', num2str(meanPoissonFreq), ' Hz'], 'FontSize', 24);
% set(gca, 'FontSize', 24);
% 
% subplot(3, 1, 2);
% plot(time_V_P, V_P(:, ii), 'LineWidth', 1);
% grid on;
% xlim([0 3]);
% ylim([-80 40]);
% ax = gca;
% ax.XTick = [0:0.1:3];
% %xlabel('Time, s', 'FontSize', 24);
% ylabel('V, mV', 'FontSize', 24);
% title(['V_{P}(t) for ', num2str(ii), '^{th} neuron'], 'FontSize', 24);
% set(gca, 'FontSize', 24);
% 
% subplot(3, 1, 3);
% plot(time_V, V(:, ii), 'LineWidth', 1);
% grid on;
% xlim([0 3]);
% ylim([-80 40]);
% ax = gca;
% ax.XTick = [0:0.1:3];
% xlabel('Time, s', 'FontSize', 24);
% ylabel('V, mV', 'FontSize', 24);
% title(['V(t) for ', num2str(ii), '^{th} neuron'], 'FontSize', 24);
% set(gca, 'FontSize', 24);
% 
% saveas(gcf, 'results_I_stim.png');
% %saveas(gcf, 'results_I_stim', 'epsc');
% close(results_I_stim);
% disp('results_I_stim save');

%%%%%%%%%%%%% V_P Freq %%%%%%%%%%%%%%
% results_V_P_Freq = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% subplot(3, 1, 1);
% plot(time_V_P, V_P(:, :), 'LineWidth', 1);
% set(gca, 'FontSize', 14);
% grid on;
% xlim([0 5]);
% ylim([-80 40]);
% ax = gca;
% ax.XTick = [0:0.1:5];
% %xlabel('Time, s', 'FontSize', 14);
% ylabel('V, mV', 'FontSize', 14);
% title('V_P_i(t)', 'FontSize', 15);
% 
% subplot(3, 1, 2);
% %time_V_P = time_V_P';
% regular_V_P_spiking_counter = 0;
% for i = 1:size(V_P, 2)
%     %V_p = V(:, 1);
%     V_P_p = V_P(:, i);
%     [pks, locs] = findpeaks(V_P_p, time_V_P, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
%     if ~isempty([pks, locs])
%         regular_V_P_spiking_counter = regular_V_P_spiking_counter + 1;
%     end
%     for pks_counter = 1:size(pks, 1)
%         pks(pks_counter) = i;
%     end
%     plot(locs, pks, 'd', 'MarkerSize', 4, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%     hold on;
% end
% 
% xlim([0 5]);
% ylim([0 size(V_P, 2)+1]);
% ax = gca;
% ax.XTick = [0:0.1:5];
% %ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
% ax.YTick = [0:50:size(V_P, 2)];
% %xlabel('Time, s', 'FontSize', 20);
% ylabel('Neuron number', 'FontSize', 20);
% title(['Poissons neurons time spikes raster'], 'FontSize', 20);
% set(gca, 'FontSize', 15);
% 
% subplot(3, 1, 3);
% %left_color = [0 0 0];
% %right_color = [1 0 0];
% %set(results_raster_V_fre_1, 'defaultAxesColorOrder', [left_color; right_color]);
% %set(gca, 'FontSize', 14);
% omega_cur = 0;
% omega_total = [];
% time_total = [];
% %yyaxis left;
% regular_V_P_spiking_counter = 0;
% for i = 1:size(V_P, 2)
% %i = 4;
%     V_P_p = V_P(:, i);
%     [pks, locs] = findpeaks(V_P_p, time_V_P, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
% 
%     for pks_counter = 1:size(pks, 1)
%         pks(pks_counter) = i;
%     end
%     
%     if isempty([pks, locs]) || size(pks, 1) == 1
%         omega_cur = 0;
%         omega_total = [omega_total omega_cur'];
%         %time_locs = time_V(locs);
%         time_locs = locs;
%         time_locs = time_locs(2:end);
%         %time_locs = time_locs(find(omega_cur'<=60));
%         time_total = [time_total time_locs'];
%         %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%         %hold on;
%     end
%     if ~isempty([pks, locs]) && size(pks, 1) > 1
%         regular_V_P_spiking_counter = regular_V_P_spiking_counter + 1;
%         %omega_cur = 1./diff(time_V(locs));
%         omega_cur = 1./diff(locs);
%         %omega_cur = omega_cur(find(omega_cur'<=60));
%         omega_total = [omega_total omega_cur'];
%         %time_locs = time_V(locs);
%         time_locs = locs;
%         time_locs = time_locs(2:end);
%         %time_locs = time_locs(find(omega_cur'<=60));
%         time_total = [time_total time_locs'];
%         %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%         %hold on;
%     end
%        
%     %if ~isempty([pks, locs])
%     if ~isempty([pks, locs]) && size(pks, 1) > 1
%         plot(time_locs, omega_cur,  '.-');
%         hold on;
%     end  
% end
% 
% set(gca, 'FontSize', 14);
% grid on;
% xlim([0 5]);
% ylim([0 50]);
% ax = gca;
% ax.XTick = [0:0.1:5];
% ax.YTick = [0:5:50];
% %legend('<\nu_P_i>');
% xlabel('Time, s', 'FontSize', 14);
% ylabel('\nu, s^{-1}', 'FontSize', 14);
% title('\nu_P_i', 'FontSize', 15);
% 
% saveas(gcf, 'results_V_P_Freq.png');
% %saveas(gcf, 'results_V_Freq', 'epsc');
% close(results_V_P_Freq);
% disp('results_V_P_Freq save');
%%%%%%%%%%%%% V_P Freq END %%%%%%%%%%%%%%

% results_Ca_V_Freq = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% subplot(3, 1, 1);
% line([0, 60], [0.3, 0.3], 'Color', 'red', 'LineStyle', '--', 'LineWidth', 1);
% hold on;
% plot(time_Ca, Ca(:, :), 'LineWidth', 1);
% hold on;
% set(gca, 'FontSize', 14);
% grid on;
% xlim([0 60]);
% ylim([0 0.7]);
% ax = gca;
% ax.XTick = [0:2:60];
% %xlabel('Time, s', 'FontSize', 14);
% ylabel('[Ca^{2+}], \muM', 'FontSize', 14);
% title('[Ca^{2+}]_i(t)', 'FontSize', 15);
% 
% subplot(3, 1, 2);
% plot(time_V, V(:, :), 'LineWidth', 1);
% set(gca, 'FontSize', 14);
% grid on;
% xlim([0 3]);
% ylim([-80 40]);
% ax = gca;
% ax.XTick = [0:0.1:3];
% %xlabel('Time, s', 'FontSize', 14);
% ylabel('V, mV', 'FontSize', 14);
% title('V_i(t)', 'FontSize', 15);
% 
% % saveas(gcf, 'results_Ca_V.png');
% % %saveas(gcf, 'results_Ca_V', 'epsc');
% % close(results_Ca_V);
% % disp('results_Ca_V save');
% %%%%%%%%%%%%% End All Ca_V_i %%%%%%%%%%%%%%%%%%
% subplot(3, 1, 3);
% 
% %left_color = [0 0 0];
% %right_color = [1 0 0];
% %set(results_raster_V_fre_1, 'defaultAxesColorOrder', [left_color; right_color]);
% %set(gca, 'FontSize', 14);
% omega_cur = 0;
% omega_total = [];
% time_total = [];
% %yyaxis left;
% regular_V_spiking_counter = 0;
% for i = 1:size(V, 2)
% %i = 4;
%     V_p = V(:, i);
%     [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
% 
%     for pks_counter = 1:size(pks, 1)
%         pks(pks_counter) = i;
%     end
%     
%     if isempty([pks, locs]) || size(pks, 1) == 1
%         omega_cur = 0;
%         omega_total = [omega_total omega_cur'];
%         %time_locs = time_V(locs);
%         time_locs = locs;
%         time_locs = time_locs(2:end);
%         %time_locs = time_locs(find(omega_cur'<=60));
%         time_total = [time_total time_locs'];
%         %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%         %hold on;
%     end
%     if ~isempty([pks, locs]) && size(pks, 1) > 1
%         regular_V_spiking_counter = regular_V_spiking_counter + 1;
%         %omega_cur = 1./diff(time_V(locs));
%         omega_cur = 1./diff(locs);
%         %omega_cur = omega_cur(find(omega_cur'<=60));
%         omega_total = [omega_total omega_cur'];
%         %time_locs = time_V(locs);
%         time_locs = locs;
%         time_locs = time_locs(2:end);
%         %time_locs = time_locs(find(omega_cur'<=60));
%         time_total = [time_total time_locs'];
%         %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%         %hold on;
%     end
%     
%     %N_time_array(i, ismember(time, time_locs)) = omega_cur;
%     %N_time_array(i, ismember(round(time_V*1e5), round(time_locs*1e5))) = omega_cur;
%    
%     %if ~isempty([pks, locs])
%     if ~isempty([pks, locs]) && size(pks, 1) > 1
%         plot(time_locs, omega_cur,  '.-');
%         hold on;
%     end
% end
% 
% set(gca, 'FontSize', 14);
% grid on;
% xlim([0 3]);
% ylim([0 40]);
% ax = gca;
% ax.XTick = [0:0.1:3];
% ax.YTick = [0:5:40];
% %legend('<\nu_i>');
% xlabel('Time, s', 'FontSize', 14);
% ylabel('\nu, s^{-1}', 'FontSize', 14);
% title('\nu_i', 'FontSize', 15);
% 
% saveas(gcf, 'results_Ca_V_Freq.png');
% %saveas(gcf, 'results_V_Freq', 'epsc');
% close(results_Ca_V_Freq);
% disp('results_Ca_V_Freq save');

%%%%%%%%%%%%%%%%% Raster START %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% filename2 = 'results_V_spikes.txt';
% path2 = '/Users/sergeymakovkin/Documents/Ring_Parall_Debian';
% Data = importdata( [ path2 '/' filename2 ] );
% time_Ca = Data(round(0.25*end):end, 1);
% time_V_Raster = Data(:, 1);
% Ca = Data(round(0.25*end):end, 2:end);
% V_Raster = Data(:, 2:end);
% time = Data(4800000:end, 1);
% Ca = Data(4800000:end, 2:end);
% clear Data;
% disp('results_V_spikes load complete');

N = size(V_m08, 2);
t_V_end = time_V(end);
%t_end = 40.0;
t_V_start = round(0.25*t_V_end);
dt = time_V(2) - time_V(1);
%dt = 0.00005;
%time_V = t_V_start:dt:t_V_end;
time_V = time_V';
N_time_V_array = zeros(N, numel(time_V));

t_Ca_end = time_Ca(end);
t_Ca_start = 0;
dt = time_Ca(2) - time_Ca(1);
time_Ca = t_Ca_start:dt:t_Ca_end;
time_Ca = time_Ca';
N_time_Ca_array = zeros(N, numel(time_Ca));

% results_raster_V_P_V_all = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% subplot(2, 1, 1);
% %time_V_P = time_V_P';
% regular_V_P_spiking_counter = 0;
% for i = 1:size(V_P, 2)
%     %V_p = V(:, 1);
%     V_P_p = V_P(:, i);
%     [pks, locs] = findpeaks(V_P_p, time_V_P, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
%     if ~isempty([pks, locs])
%         regular_V_P_spiking_counter = regular_V_P_spiking_counter + 1;
%     end
%     for pks_counter = 1:size(pks, 1)
%         pks(pks_counter) = i;
%     end
%     plot(locs, pks, 'd', 'MarkerSize', 4, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%     hold on;
%       
%     %N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
% end
% 
% xlim([0 5]);
% ylim([0 size(V_P, 2)+1]);
% ax = gca;
% ax.XTick = [0:0.1:5];
% %ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
% ax.YTick = [0:50:size(V_P, 2)];
% %xlabel('Time of spikes, s', 'FontSize', 20);
% ylabel('Neuron number', 'FontSize', 20);
% title(['Poissons neurons time spikes raster'], 'FontSize', 20);
% set(gca, 'FontSize', 18);
% 
% % saveas(gcf, 'results_raster_V_P_all.png');
% % %saveas(gcf, 'results_raster_V_all', 'epsc');
% % close(results_raster_V_P_all);
% % %clear;
% % disp('results_raster_V_P_all save');
% 
% %results_raster_V_all = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% subplot(2, 1, 2);
% time_V = time_V';
% regular_V_spiking_counter = 0;
% for i = 1:size(V, 2)
%     %V_p = V(:, 1);
%     V_p = V(:, i);
%     [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
%     if ~isempty([pks, locs])
%         regular_V_spiking_counter = regular_V_spiking_counter + 1;
%     end
%     for pks_counter = 1:size(pks, 1)
%         pks(pks_counter) = i;
%     end
%     plot(locs, pks, 'd', 'MarkerSize', 4, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%     hold on;
%       
%     %N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
% end
% 
% xlim([0 5]);
% ylim([0 size(V, 2)+1]);
% ax = gca;
% ax.XTick = [0:0.1:5];
% %ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
% ax.YTick = [0:50:size(V, 2)];
% xlabel('Time of spikes, s', 'FontSize', 20);
% ylabel('Neuron number', 'FontSize', 20);
% title(['Neurons time spikes raster'], 'FontSize', 20);
% set(gca, 'FontSize', 18);
% 
% saveas(gcf, 'results_raster_V_P_V_all.png');
% %saveas(gcf, 'results_raster_V_P_V_all', 'epsc');
% close(results_raster_V_P_V_all);
% %clear;
% disp('results_raster_V_P_V_all save');

filename1 = 'corr_not_zero_g_astro_m08_01.txt';
path1 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data1 = importdata( [ path1 '/' filename1 ] );
time_k_syn = Data1(:, 1);
k_syn1_m08 = Data1(:, 2);

filename2 = 'corr_not_zero_g_astro_m08_02.txt';
path2 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data2 = importdata( [ path2 '/' filename2 ] );
time_k_syn = Data2(:, 1);
k_syn2_m08 = Data2(:, 2);

filename3 = 'corr_not_zero_g_astro_m08_03.txt';
path3 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data3 = importdata( [ path3 '/' filename3 ] );
time_k_syn = Data3(:, 1);
k_syn3_m08 = Data3(:, 2);

filename4 = 'corr_not_zero_g_astro_m08_04.txt';
path4 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data4 = importdata( [ path4 '/' filename4 ] );
time_k_syn = Data4(:, 1);
k_syn4_m08 = Data4(:, 2);

filename5 = 'corr_not_zero_g_astro_m08_05.txt';
path5 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data5 = importdata( [ path5 '/' filename5 ] );
time_k_syn = Data5(:, 1);
k_syn5_m08 = Data5(:, 2);

filename6 = 'corr_not_zero_g_astro_m08_06.txt';
path6 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data6 = importdata( [ path6 '/' filename6 ] );
time_k_syn = Data6(:, 1);
k_syn6_m08 = Data6(:, 2);

filename7 = 'corr_not_zero_g_astro_m08_07.txt';
path7 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data7 = importdata( [ path7 '/' filename7 ] );
time_k_syn = Data7(:, 1);
k_syn7_m08 = Data7(:, 2);

filename8 = 'corr_not_zero_g_astro_m08_08.txt';
path8 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data8 = importdata( [ path8 '/' filename8 ] );
time_k_syn = Data8(:, 1);
k_syn8_m08 = Data8(:, 2);

filename9 = 'corr_not_zero_g_astro_m08_09.txt';
path9 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data9 = importdata( [ path9 '/' filename9 ] );
time_k_syn = Data9(:, 1);
k_syn9_m08 = Data9(:, 2);

filename10 = 'corr_not_zero_g_astro_m08_10.txt';
path10 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data10 = importdata( [ path10 '/' filename10 ] );
time_k_syn = Data10(:, 1);
k_syn10_m08 = Data10(:, 2);

k_syn_m08 = mean([k_syn1_m08, k_syn2_m08, k_syn3_m08, k_syn4_m08, k_syn5_m08, k_syn6_m08, k_syn7_m08, k_syn8_m08, k_syn9_m08, k_syn10_m08], 2);

disp('results_k_syn_m08 load complete');
%%%%

filename1 = 'corr_not_zero_g_astro_10_01.txt';
path1 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data1 = importdata( [ path1 '/' filename1 ] );
time_k_syn = Data1(:, 1);
k_syn1_10 = Data1(:, 2);

filename2 = 'corr_not_zero_g_astro_10_02.txt';
path2 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data2 = importdata( [ path2 '/' filename2 ] );
time_k_syn = Data2(:, 1);
k_syn2_10 = Data2(:, 2);

filename3 = 'corr_not_zero_g_astro_10_03.txt';
path3 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data3 = importdata( [ path3 '/' filename3 ] );
time_k_syn = Data3(:, 1);
k_syn3_10 = Data3(:, 2);

filename4 = 'corr_not_zero_g_astro_10_04.txt';
path4 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data4 = importdata( [ path4 '/' filename4 ] );
time_k_syn = Data4(:, 1);
k_syn4_10 = Data4(:, 2);

filename5 = 'corr_not_zero_g_astro_10_05.txt';
path5 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data5 = importdata( [ path5 '/' filename5 ] );
time_k_syn = Data5(:, 1);
k_syn5_10 = Data5(:, 2);

filename6 = 'corr_not_zero_g_astro_10_06.txt';
path6 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data6 = importdata( [ path6 '/' filename6 ] );
time_k_syn = Data6(:, 1);
k_syn6_10 = Data6(:, 2);

filename7 = 'corr_not_zero_g_astro_10_07.txt';
path7 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data7 = importdata( [ path7 '/' filename7 ] );
time_k_syn = Data7(:, 1);
k_syn7_10 = Data7(:, 2);

filename8 = 'corr_not_zero_g_astro_10_08.txt';
path8 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data8 = importdata( [ path8 '/' filename8 ] );
time_k_syn = Data8(:, 1);
k_syn8_10 = Data8(:, 2);

filename9 = 'corr_not_zero_g_astro_10_09.txt';
path9 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data9 = importdata( [ path9 '/' filename9 ] );
time_k_syn = Data9(:, 1);
k_syn9_10 = Data9(:, 2);

filename10 = 'corr_not_zero_g_astro_10_10.txt';
path10 = '/Users/sergeymakovkin/Documents/3_Rings/Ver_2_2021_03_09';
Data10 = importdata( [ path10 '/' filename10 ] );
time_k_syn = Data10(:, 1);
k_syn10_10 = Data10(:, 2);

k_syn_10 = mean([k_syn1_10, k_syn2_10, k_syn3_10, k_syn4_10, k_syn5_10, k_syn6_10, k_syn7_10, k_syn8_10, k_syn9_10, k_syn10_10], 2);

disp('results_k_syn_10 load complete');

% results_k_syn_only = figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% plot(time_k_syn, k_syn, 'LineWidth', 1);
% hold on;
% set(gca, 'FontSize', 14);
% grid on;
% xlim([0 60]);
% ylim([0 1.0]);
% ax = gca;
% ax.XTick = [0:2:60];
% ax = gca;
% ax.YTick = [0:0.1:1.0];
% xlabel('Time, s', 'FontSize', 14);
% ylabel('k_{syn}', 'FontSize', 14);
% title('k_{syn}', 'FontSize', 14);
% set(gca, 'FontSize', 14)
% saveas(gcf, 'results_k_syn_only.png');
% %saveas(gcf, 'results_k_syn_only', 'epsc');
% close(results_k_syn_only);
% disp('results_k_syn_only save');

% results_raster_Ca_V_all = figure('units', 'normalized', 'outerposition', [0 0 0.6 1], 'visible', 'on');
% subplot(8, 2, [1 2]);
% line([0, 60], [0.3, 0.3], 'Color', 'red', 'LineStyle', '--', 'LineWidth', 1);
% hold on;
% plot(time_Ca, Ca(:, :), 'LineWidth', 1);
% hold on;
% set(gca, 'FontSize', 14);
% grid on;
% xlim([0 60]);
% ylim([0 0.7]);
% ax = gca;
% ax.XTick = [0:2:60];
% ax = gca;
% ax.YTick = [0:0.1:0.7];
% %xlabel('Time, sec', 'FontSize', 14);
% ylabel('[Ca^{2+}], (\muM)', 'FontSize', 14);
% title('[Ca^{2+}]_i(t)', 'FontSize', 14);
% set(gca, 'FontSize', 12);
% 
% subplot(8, 2, [3 4]);
% regular_Ca_spiking_counter = 0;
% for i = 1:size(Ca, 2)
%     Ca_p = Ca(:, i);
%     [pks, locs] = findpeaks(Ca_p, 'MinPeakHeight', 0.3);
%     if ~isempty([pks, locs])
%         regular_Ca_spiking_counter = regular_Ca_spiking_counter + 1;
%     end
%     for pks_counter = 1:size(pks, 1)
%         pks(pks_counter) = i;
%     end
%     plot(time_Ca(locs), pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%     hold on;
%     
%     N_time_Ca_array(i, ismember(round(time_Ca*1e5), round(time_Ca(locs)*1e5))) = 1;
% end
% xlim([0 60]);
% ylim([0 size(Ca, 2)+1]);
% ax = gca;
% ax.XTick = [0:2:60];
% %ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
% ax.YTick = [0:50:size(Ca, 2)];
% %xlabel('Time of spikes, sec', 'FontSize', 20);
% ylabel('Astrocyte number', 'FontSize', 20);
% title(['Astrocytes time spikes raster'], 'FontSize', 20);
% set(gca, 'FontSize', 12);
% 
% subplot(8, 2, [5 6]);
% dt_Ca_shift = 2.0; % sec
% k_Ca = round(dt_Ca_shift / dt);
% 
% total_spykes_Ca = zeros(1, size(N_time_Ca_array, 2));
% for i = 1:size(V, 2)
%     total_spykes_Ca = total_spykes_Ca + N_time_Ca_array(i, :);
% end
% Count_shift_Ca_sum = movsum(total_spykes_Ca, k_Ca);
% 
% % Count_shift_sum = zeros(1, size(N_time_V_array, 2));
% % for i = 1:size(V, 2)
% %     Count_shift = movsum(N_time_V_array(i, :), k);
% %     Count_shift_sum = Count_shift_sum + Count_shift;    
% % end
% 
% % figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% % plot(time_Ca, total_spykes_Ca, '-');
% % xlim([10 40]);
% 
% %figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% plot(time_Ca, Count_shift_Ca_sum, 'r-', 'LineWidth', 1);
% xlim([0 60]);
% ylim([0 size(Ca, 2)]);
% ax = gca;
% ax.XTick = [0:2:60];
% ax.YTick = [0:50:size(Ca, 2)];
% title(['Astrocytes slide window spikes sum'], 'FontSize', 12);
% ylabel('Shift sum', 'FontSize', 12);
% %xlabel('Time of spikes, sec', 'FontSize', 12);
% set(gca, 'FontSize', 12);
% 
% subplot(8, 2, [7 8]);
% %time_V = time_V';
% omega_cur = 0;
% omega_total = [];
% time_total = [];
% %yyaxis left;
% regular_V_spiking_counter = 0;
% for i = 1:size(V, 2)
% %i = 24;
%     V_p = V(:, i);
%     [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
%     
%     for pks_counter = 1:size(pks, 1)
%         pks(pks_counter) = i;
%     end
% 
%     if isempty([pks, locs]) || size(pks, 1) == 1
%         omega_cur = 0;
%         omega_total = [omega_total omega_cur'];
%         time_locs = locs;
%         time_locs = time_locs(2:end);
%         %time_locs = time_locs(find(omega_cur'<=60));
%         time_total = [time_total time_locs'];
%         %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%         %hold on;
%     end
%     if ~isempty([pks, locs]) && size(pks, 1) > 1
%         regular_V_spiking_counter = regular_V_spiking_counter + 1;
%         omega_cur = 1./diff(locs);
%         %omega_cur = omega_cur(find(omega_cur'<=60));
%         omega_total = [omega_total omega_cur'];
%         time_locs = locs;
%         time_locs = time_locs(2:end);
%         %time_locs = time_locs(find(omega_cur'<=60));
%         time_total = [time_total time_locs'];
%         %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%         %hold on;
%     end
%     
%     if ~isempty([pks, locs]) && size(pks, 1) > 1
%         plot(time_locs, omega_cur,  '.-');
%         hold on;
%     end
% end
% 
% set(gca, 'FontSize', 12);
% grid on;
% xlim([0 60]);
% ylim([0 40]);
% ax = gca;
% ax.XTick = [0:2:60];
% ax.YTick = [0:5:40];
% %legend('<\nu_i>');
% %xlabel('Time, sec', 'FontSize', 12);
% ylabel('\nu, s^{-1}', 'FontSize', 12);
% title('Neurons frequencies, \nu_i', 'FontSize', 12);
% time_V = time_V';
% 
% subplot(8, 2, [9 10]);
% plot(time_k_syn, k_syn, 'LineWidth', 1);
% hold on;
% set(gca, 'FontSize', 14);
% grid on;
% xlim([0 60]);
% ylim([0 1.0]);
% ax = gca;
% ax.XTick = [0:2:60];
% ax = gca;
% ax.YTick = [0:0.2:1.0];
% %xlabel('Time, s', 'FontSize', 12);
% ylabel('k_{syn}', 'FontSize', 12);
% title('k_{syn}', 'FontSize', 14);
% set(gca, 'FontSize', 12);
% 
% subplot(8, 2, 11);
% plot(time_V, V(:, :), 'LineWidth', 1);
% set(gca, 'FontSize', 12);
% grid on;
% xlim([15 16]);
% ylim([-80 40]);
% ax = gca;
% ax.XTick = [15:0.1:16];
% ax.YTick = [-80:40:40];
% %xlabel('Time, sec', 'FontSize', 12);
% ylabel('V, mV', 'FontSize', 12);
% title('V_i(t)', 'FontSize', 12);
% set(gca, 'FontSize', 12);
% 
% subplot(8, 2, 13);
% time_V = time_V';
% regular_V_spiking_counter = 0;
% for i = 1:size(V, 2)
%     %V_p = V(:, 1);
%     V_p = V(:, i);
%     [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
%     if ~isempty([pks, locs])
%         regular_V_spiking_counter = regular_V_spiking_counter + 1;
%     end
%     for pks_counter = 1:size(pks, 1)
%         pks(pks_counter) = i;
%     end
%     plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%     hold on;
%       
%     N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
% end
% 
% xlim([15 16]);
% ylim([0 size(V, 2)+1]);
% ax = gca;
% ax.XTick = [15:0.1:16];
% %ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
% ax.YTick = [0:50:size(V, 2)];
% %xlabel('Time of spikes, sec', 'FontSize', 20);
% ylabel('Neuron number', 'FontSize', 20);
% title(['Neurons time spikes raster'], 'FontSize', 20);
% set(gca, 'FontSize', 12);
% 
% subplot(8, 2, 15);
% dt_V_shift = 0.030; % sec
% k_V = round(dt_V_shift / dt);
% 
% total_spykes = zeros(1, size(N_time_V_array, 2));
% for i = 1:size(V, 2)
%     total_spykes = total_spykes + N_time_V_array(i, :);
% end
% Count_shift_sum = movsum(total_spykes, k_V);
% 
% % Count_shift_sum = zeros(1, size(N_time_V_array, 2));
% % for i = 1:size(V, 2)
% %     Count_shift = movsum(N_time_V_array(i, :), k);
% %     Count_shift_sum = Count_shift_sum + Count_shift;    
% % end
% 
% % figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% % plot(time_V, total_spykes, '-');
% % xlim([10 20]);
% 
% %figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% plot(time_V, Count_shift_sum, 'b-');
% xlim([15 16]);
% ylim([0 size(V, 2)+1]);
% ax = gca;
% ax.XTick = [15:0.1:16];
% ax.YTick = [0:50:size(V, 2)];
% title(['Neurons slide window spikes sum'], 'FontSize', 12);
% xlabel('Time, s', 'FontSize', 12);
% ylabel('Shift sum', 'FontSize', 12);
% set(gca, 'FontSize', 12);
% 
% subplot(8, 2, 12);
% plot(time_V, V(:, :), 'LineWidth', 1);
% set(gca, 'FontSize', 12);
% grid on;
% xlim([19 20]);
% ylim([-80 40]);
% ax = gca;
% ax.XTick = [19:0.1:20];
% ax.YTick = [-80:40:40];
% %xlabel('Time, sec', 'FontSize', 12);
% ylabel('V, mV', 'FontSize', 12);
% title('V_i(t)', 'FontSize', 12);
% set(gca, 'FontSize', 12);
% 
% subplot(8, 2, 14);
% regular_V_spiking_counter = 0;
% for i = 1:size(V, 2)
%     %V_p = V(:, 1);
%     V_p = V(:, i);
%     [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
%     if ~isempty([pks, locs])
%         regular_V_spiking_counter = regular_V_spiking_counter + 1;
%     end
%     for pks_counter = 1:size(pks, 1)
%         pks(pks_counter) = i;
%     end
%     plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%     hold on;
%       
%     N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
% end
% 
% xlim([19 20]);
% ylim([0 size(V, 2)+1]);
% ax = gca;
% ax.XTick = [19:0.1:20];
% %ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
% ax.YTick = [0:50:size(V, 2)];
% %xlabel('Time of spikes, sec', 'FontSize', 20);
% ylabel('Neuron number', 'FontSize', 20);
% title(['Neurons time spikes raster'], 'FontSize', 20);
% set(gca, 'FontSize', 12);
% 
% subplot(8, 2, 16);
% dt_V_shift = 0.030; % sec
% k_V = round(dt_V_shift / dt);
% 
% total_spykes = zeros(1, size(N_time_V_array, 2));
% for i = 1:size(V, 2)
%     total_spykes = total_spykes + N_time_V_array(i, :);
% end
% Count_shift_sum = movsum(total_spykes, k_V);
% 
% % Count_shift_sum = zeros(1, size(N_time_V_array, 2));
% % for i = 1:size(V, 2)
% %     Count_shift = movsum(N_time_V_array(i, :), k);
% %     Count_shift_sum = Count_shift_sum + Count_shift;    
% % end
% 
% % figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% % plot(time_V, total_spykes, '-');
% % xlim([10 20]);
% 
% %figure('units', 'normalized', 'outerposition', [0 0 1 1], 'visible', 'on');
% plot(time_V, Count_shift_sum, 'b-');
% xlim([19 20]);
% ylim([0 size(V, 2)+1]);
% ax = gca;
% ax.XTick = [19:0.1:20];
% ax.YTick = [0:50:size(V, 2)];
% title(['Neurons slide window spikes sum'], 'FontSize', 12);
% xlabel('Time, s', 'FontSize', 12);
% ylabel('Shift sum', 'FontSize', 12);
% set(gca, 'FontSize', 12);
% 
% saveas(gcf, 'results_raster_Ca_V_all.png');
% %saveas(gcf, 'results_raster_V_all', 'epsc');
% close(results_raster_Ca_V_all);
% %clear;
% disp('results_raster_Ca_V_all save');

%%%%%%%%%%%%%%%%%%%%%
% results_presentation_raster_Ca_V_all = figure('units', 'normalized', 'outerposition', [0 0 0.6 1], 'visible', 'on');
% subplot(5, 2, [1 2]);
% line([0, 60], [0.3, 0.3], 'Color', 'red', 'LineStyle', '--', 'LineWidth', 1);
% hold on;
% plot(time_Ca, Ca(:, :), 'LineWidth', 1);
% hold on;
% rectangle('Position',[33 0 1 0.7], 'FaceColor', [0.0 1.0 0.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
% hold on;
% rectangle('Position',[37 0 1 0.7], 'FaceColor', [0.0 1.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
% hold on;
% %grid on;
% xlim([24 50]);
% ylim([0 0.7]);
% ax = gca;
% ax.XTick = [0:2:60];
% ax = gca;
% ytickformat('%.1f');
% set(gca, 'YTick', [0.0 : 0.2 : 0.7]);
% %xlabel('Time, sec', 'FontSize', 14);
% ylabel('[Ca^{2+}], \muM', 'FontSize', 18);
% title('[Ca^{2+}]_i(t)', 'FontSize', 18);
% box on;
% set(gca, 'FontSize', 18);
% 
% subplot(5, 2, [3 4]);
% %time_V = time_V';
% omega_cur = 0;
% omega_total = [];
% time_total = [];
% %yyaxis left;
% regular_V_spiking_counter = 0;
% for i = 1:size(V, 2)
% %i = 24;
%     V_p = V(:, i);
%     [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
%     
%     for pks_counter = 1:size(pks, 1)
%         pks(pks_counter) = i;
%     end
% 
%     if isempty([pks, locs]) || size(pks, 1) == 1
%         omega_cur = 0;
%         omega_total = [omega_total omega_cur'];
%         time_locs = locs;
%         time_locs = time_locs(2:end);
%         %time_locs = time_locs(find(omega_cur'<=60));
%         time_total = [time_total time_locs'];
%         %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%         %hold on;
%     end
%     if ~isempty([pks, locs]) && size(pks, 1) > 1
%         regular_V_spiking_counter = regular_V_spiking_counter + 1;
%         omega_cur = 1./diff(locs);
%         %omega_cur = omega_cur(find(omega_cur'<=60));
%         omega_total = [omega_total omega_cur'];
%         time_locs = locs;
%         time_locs = time_locs(2:end);
%         %time_locs = time_locs(find(omega_cur'<=60));
%         time_total = [time_total time_locs'];
%         %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%         %hold on;
%     end
%     
%     if ~isempty([pks, locs]) && size(pks, 1) > 1
%         plot(time_locs, omega_cur,  '.-');
%         hold on;
%     end
% end
% 
% set(gca, 'FontSize', 18);
% %grid on;
% rectangle('Position',[33 0 1 60], 'FaceColor', [0.0 1.0 0.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
% hold on;
% rectangle('Position',[37 0 1 60], 'FaceColor', [0.0 1.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
% hold on;
% xlim([24 50]);
% ylim([0 50]);
% ax = gca;
% ax.XTick = [0:2:60];
% ax.YTick = [0:10:50];
% %legend('<\nu_i>');
% %xlabel('Time, sec', 'FontSize', 12);
% ylabel('\nu, s^{-1}', 'FontSize', 18);
% title('Neurons frequencies, \nu_i', 'FontSize', 18);
% box on;
% time_V = time_V';
% 
% subplot(5, 2, [5 6]);
% plot(time_k_syn, k_syn, 'LineWidth', 2);
% hold on;
% rectangle('Position',[33 0 1 1.0], 'FaceColor', [0.0 1.0 0.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
% hold on;
% rectangle('Position',[37 0 1 1.0], 'FaceColor', [0.0 1.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
% hold on;
% %grid on;
% xlim([24 50]);
% ylim([0 1.0]);
% ax = gca;
% ax.XTick = [0:2:60];
% ax = gca;
% ytickformat('%.1f');
% set(gca, 'YTick', [0.0 : 0.2 : 1.0]);
% %ax.YTick = [0:0.25:1.0];
% xlabel('Time, s', 'FontSize', 18);
% ylabel('k_{syn}', 'FontSize', 18);
% title('<k_{syn}>', 'FontSize', 18);
% box on;
% set(gca, 'FontSize', 18);
% 
% subplot(5, 2, 7);
% plot(time_V, V(:, :), 'LineWidth', 1);
% hold on;
% rectangle('Position',[33 -80 1 120], 'EdgeColor', '[0.0 1.0 0.0 0.5]', 'LineWidth', 3);
% hold on;
% box on;
% %grid on;
% xlim([33 34]);
% ylim([-80 40]);
% ax = gca;
% xtickformat('%.1f');
% set(gca, 'XTick', [33:0.2:34]);
% ax.YTick = [-80:40:40];
% %xlabel('Time, sec', 'FontSize', 12);
% ylabel('V, mV', 'FontSize', 18);
% title('V_i(t)', 'FontSize', 18);
% set(gca, 'FontSize', 18);
% 
% subplot(5, 2, 9);
% time_V = time_V';
% regular_V_spiking_counter = 0;
% for i = 1:size(V, 2)
%     %V_p = V(:, 1);
%     V_p = V(:, i);
%     [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
%     if ~isempty([pks, locs])
%         regular_V_spiking_counter = regular_V_spiking_counter + 1;
%     end
%     for pks_counter = 1:size(pks, 1)
%         pks(pks_counter) = i;
%     end
%     plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%     hold on;
%       
%     N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
% end
% 
% xlim([33 34]);
% ylim([0 size(V, 2)+1]);
% rectangle('Position',[33, 0, 1, 201], 'EdgeColor', '[0.0 1.0 0.0 0.5]', 'LineWidth', 3);
% hold on;
% box on;
% ax = gca;
% ax = gca;
% xtickformat('%.1f');
% set(gca, 'XTick', [33:0.2:34]);
% %ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
% ax.YTick = [0:100:size(V, 2)];
% xlabel('Time, s', 'FontSize', 18);
% ylabel('Neuron #', 'FontSize', 18);
% title(['Neurons time spikes raster'], 'FontSize', 18);
% set(gca, 'FontSize', 18);
% 
% subplot(5, 2, 8);
% plot(time_V, V(:, :), 'LineWidth', 1);
% set(gca, 'FontSize', 18);
% %grid on;
% xlim([37 38]);
% ylim([-80 40]);
% ax = gca;
% ax = gca;
% xtickformat('%.1f');
% set(gca, 'XTick', [37:0.2:38]);
% ax.YTick = [-80:40:40];
% rectangle('Position',[37, -80, 1, 120], 'EdgeColor', '[0.0 1.0 1.0 0.5]', 'LineWidth', 3);
% hold on;
% box on;
% %xlabel('Time, sec', 'FontSize', 12);
% ylabel('V, mV', 'FontSize', 18);
% title('V_i(t)', 'FontSize', 18);
% set(gca, 'FontSize', 18);
% 
% subplot(5, 2, 10);
% regular_V_spiking_counter = 0;
% for i = 1:size(V, 2)
%     %V_p = V(:, 1);
%     V_p = V(:, i);
%     [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
%     if ~isempty([pks, locs])
%         regular_V_spiking_counter = regular_V_spiking_counter + 1;
%     end
%     for pks_counter = 1:size(pks, 1)
%         pks(pks_counter) = i;
%     end
%     plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
%     hold on;
%       
%     N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
% end
% 
% xlim([37 38]);
% ylim([0 size(V, 2)+1]);
% rectangle('Position',[37, 0, 1, 201], 'EdgeColor', '[0.0 1.0 1.0 0.5]', 'LineWidth', 3);
% hold on;
% box on;
% ax = gca;
% xtickformat('%.1f');
% set(gca, 'XTick', [37:0.2:38]);
% %ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
% ax.YTick = [0:100:size(V, 2)];
% xlabel('Time, s', 'FontSize', 18);
% ylabel('Neuron #', 'FontSize', 18);
% title(['Neurons time spikes raster'], 'FontSize', 18);
% set(gca, 'FontSize', 18);
% 
% saveas(gcf, 'results_presentation_raster_Ca_V_all.png');
% saveas(gcf, 'results_presentation_raster_Ca_V_all', 'epsc');
% %savefig(results_paper_raster_Ca_V_all,  'results_paper_raster_Ca_V_all.fig')
% close(results_presentation_raster_Ca_V_all);
% %clear;
% disp('results_presentation_raster_Ca_V_all save');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%m08
results_paper_raster_Ca_V_all_A_m08 = figure('units', 'normalized', 'outerposition', [0 0 0.53 1], 'visible', 'on');
subplot(4, 2, [1 2]);
line([0, 60], [0.3, 0.3], 'Color', 'red', 'LineStyle', '--', 'LineWidth', 1);
hold on;
plot(time_Ca, Ca_m08(:, :), 'LineWidth', 1);
hold on;
rectangle('Position',[33 0 1 0.7], 'FaceColor', [0.0 1.0 0.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
rectangle('Position',[37 0 1 0.7], 'FaceColor', [0.0 1.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
%grid on;
xlim([24 50]);
ylim([0 0.7]);
ax = gca;
ax.XTick = [0:2:60];
ax = gca;
ytickformat('%.1f');
set(gca, 'YTick', [0.0 : 0.2 : 0.7]);
%xlabel('Time, sec', 'FontSize', 14);
ylabel('[Ca^{2+}], \muM', 'FontSize', 20);
title('a)', 'FontSize', 20);
box on;
set(gca, 'FontSize', 20);

subplot(4, 2, [3 4]);
if (size(time_V, 2) > size(time_V, 1))
    time_V = time_V';
end
omega_cur = 0;
omega_total = [];
time_total = [];
%yyaxis left;
regular_V_m08_spiking_counter = 0;
for i = 1:size(V_m08, 2)
%i = 24;
    V_p = V_m08(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end

    if isempty([pks, locs]) || size(pks, 1) == 1
        omega_cur = 0;
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        regular_V_m08_spiking_counter = regular_V_m08_spiking_counter + 1;
        omega_cur = 1./diff(locs);
        %omega_cur = omega_cur(find(omega_cur'<=60));
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        plot(time_locs, omega_cur,  '.-');
        hold on;
    end
end

set(gca, 'FontSize', 20);
%grid on;
rectangle('Position',[33 0 1 60], 'FaceColor', [0.0 1.0 0.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
rectangle('Position',[37 0 1 60], 'FaceColor', [0.0 1.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
xlim([24 50]);
ylim([0 50]);
ax = gca;
ax.XTick = [0:2:60];
ax.YTick = [0:10:50];
%legend('<\nu_i>');
%xlabel('Time, sec', 'FontSize', 20);
ylabel('\nu, s^{-1}', 'FontSize', 20);
title('b)', 'FontSize', 20);
box on;
%time_V = time_V';

subplot(4, 2, [5 6]);
if (size(time_V, 2) > size(time_V, 1))
    time_V = time_V';
end
plot(time_k_syn, k_syn_m08, 'LineWidth', 2);
hold on;
rectangle('Position',[33 0 1 1.0], 'FaceColor', [0.0 1.0 0.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
rectangle('Position',[37 0 1 1.0], 'FaceColor', [0.0 1.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
%grid on;
xlim([24 50]);
ylim([0 1.0]);
ax = gca;
ax.XTick = [0:2:60];
ax = gca;
ytickformat('%.1f');
set(gca, 'YTick', [0.0 : 0.2 : 1.0]);
%ax.YTick = [0:0.25:1.0];
xlabel('Time, s', 'FontSize', 20);
ylabel('k', 'FontSize', 20);
title('c)', 'FontSize', 20);
box on;
set(gca, 'FontSize', 20);

% subplot(4, 2, 7);
% plot(time_V, V_m08(:, :), 'LineWidth', 1);
% hold on;
% rectangle('Position',[33 -80 1 120], 'EdgeColor', '[0.0 1.0 0.0 0.5]', 'LineWidth', 3);
% hold on;
% box on;
% %grid on;
% xlim([33 34]);
% ylim([-80 40]);
% ax = gca;
% xtickformat('%.1f');
% set(gca, 'XTick', [33:0.2:34]);
% ax.YTick = [-80:40:40];
% %xlabel('Time, sec', 'FontSize', 12);
% ylabel('V, mV', 'FontSize', 18);
% title('d)', 'FontSize', 18);
% set(gca, 'FontSize', 18);

subplot(4, 2, 7);
if (size(time_V, 2) > size(time_V, 1))
    time_V = time_V';
end
regular_V_m08_spiking_counter = 0;
for i = 1:size(V_m08, 2)
    %V_p = V(:, 1);
    V_p = V_m08(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    if ~isempty([pks, locs])
        regular_V_m08_spiking_counter = regular_V_m08_spiking_counter + 1;
    end
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end
    plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
    hold on;
      
    %N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
end

xlim([33 34]);
ylim([0 size(V_m08, 2)+1]);
rectangle('Position',[33, 0, 1, 201], 'EdgeColor', '[0.0 1.0 0.0 0.5]', 'LineWidth', 3);
hold on;
box on;
ax = gca;
ax = gca;
xtickformat('%.1f');
set(gca, 'XTick', [33:0.2:34]);
%ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
ax.YTick = [0:100:size(V_m08, 2)];
xlabel('Time, s', 'FontSize', 20);
ylabel('Neuron #', 'FontSize', 20);
title(['d)'], 'FontSize', 20);
set(gca, 'FontSize', 20);

% subplot(4, 2, 8);
% plot(time_V, V_m08(:, :), 'LineWidth', 1);
% set(gca, 'FontSize', 18);
% %grid on;
% xlim([37 38]);
% ylim([-80 40]);
% ax = gca;
% ax = gca;
% xtickformat('%.1f');
% set(gca, 'XTick', [37:0.2:38]);
% ax.YTick = [-80:40:40];
% rectangle('Position',[37, -80, 1, 120], 'EdgeColor', '[0.0 1.0 1.0 0.5]', 'LineWidth', 3);
% hold on;
% box on;
% %xlabel('Time, sec', 'FontSize', 12);
% ylabel('V, mV', 'FontSize', 18);
% title('e)', 'FontSize', 18);
% set(gca, 'FontSize', 18);

subplot(4, 2, 8);
regular_V_m08_spiking_counter = 0;
for i = 1:size(V_m08, 2)
    %V_p = V(:, 1);
    V_p = V_m08(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    if ~isempty([pks, locs])
        regular_V_m08_spiking_counter = regular_V_m08_spiking_counter + 1;
    end
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end
    plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
    hold on;
      
    %N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
end

xlim([37 38]);
ylim([0 size(V_m08, 2)+1]);
rectangle('Position',[37, 0, 1, 201], 'EdgeColor', '[0.0 1.0 1.0 0.5]', 'LineWidth', 3);
hold on;
box on;
ax = gca;
xtickformat('%.1f');
set(gca, 'XTick', [37:0.2:38]);
%ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
ax.YTick = [0:100:size(V_m08, 2)];
xlabel('Time, s', 'FontSize', 20);
%ylabel('Neuron #', 'FontSize', 20);
title(['e)'], 'FontSize', 20);
set(gca, 'FontSize', 20);

saveas(gcf, 'results_paper_raster_Ca_V_all_A_m08.png');
saveas(gcf, 'results_paper_raster_Ca_V_all_A_m08', 'epsc');
%savefig(results_paper_raster_Ca_V_all,  'results_paper_raster_Ca_V_all.fig')
close(results_paper_raster_Ca_V_all_A_m08);
%clear;
disp('results_paper_raster_Ca_V_all_A_m08 save');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%10
results_paper_raster_Ca_V_all_A_10 = figure('units', 'normalized', 'outerposition', [0 0 0.53 1], 'visible', 'on');
subplot(4, 2, [1 2]);
line([0, 60], [0.3, 0.3], 'Color', 'red', 'LineStyle', '--', 'LineWidth', 1);
hold on;
plot(time_Ca, Ca_10(:, :), 'LineWidth', 1);
hold on;
rectangle('Position',[33 0 1 0.7], 'FaceColor', [0.0 1.0 0.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
rectangle('Position',[37 0 1 0.7], 'FaceColor', [1.0 0.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
%grid on;
xlim([24 50]);
ylim([0 0.7]);
ax = gca;
ax.XTick = [0:2:60];
ax = gca;
ytickformat('%.1f');
set(gca, 'YTick', [0.0 : 0.2 : 0.7]);
%xlabel('Time, sec', 'FontSize', 20);
ylabel('[Ca^{2+}], \muM', 'FontSize', 20);
title('a)', 'FontSize', 20);
box on;
set(gca, 'FontSize', 20);

subplot(4, 2, [3 4]);
if (size(time_V, 2) > size(time_V, 1))
    time_V = time_V';
end
omega_cur = 0;
omega_total = [];
time_total = [];
%yyaxis left;
regular_V_10_spiking_counter = 0;
for i = 1:size(V_10, 2)
%i = 24;
    V_p = V_10(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end

    if isempty([pks, locs]) || size(pks, 1) == 1
        omega_cur = 0;
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        regular_V_10_spiking_counter = regular_V_10_spiking_counter + 1;
        omega_cur = 1./diff(locs);
        %omega_cur = omega_cur(find(omega_cur'<=60));
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        plot(time_locs, omega_cur,  '.-');
        hold on;
    end
end

set(gca, 'FontSize', 20);
%grid on;
rectangle('Position',[33 0 1 60], 'FaceColor', [0.0 1.0 0.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
rectangle('Position',[37 0 1 60], 'FaceColor', [1.0 0.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
xlim([24 50]);
ylim([0 50]);
ax = gca;
ax.XTick = [0:2:60];
ax.YTick = [0:10:50];
%legend('<\nu_i>');
%xlabel('Time, sec', 'FontSize', 20);
ylabel('\nu, s^{-1}', 'FontSize', 20);
title('b)', 'FontSize', 20);
box on;
%time_V = time_V';

subplot(4, 2, [5 6]);
if (size(time_V, 2) > size(time_V, 1))
    time_V = time_V';
end
plot(time_k_syn, k_syn_10, 'LineWidth', 2);
hold on;
rectangle('Position',[33 0 1 1.0], 'FaceColor', [0.0 1.0 0.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
rectangle('Position',[37 0 1 1.0], 'FaceColor', [1.0 0.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
%grid on;
xlim([24 50]);
ylim([0 1.0]);
ax = gca;
ax.XTick = [0:2:60];
ax = gca;
ytickformat('%.1f');
set(gca, 'YTick', [0.0 : 0.2 : 1.0]);
%ax.YTick = [0:0.25:1.0];
xlabel('Time, s', 'FontSize', 20);
ylabel('k', 'FontSize', 20);
title('c)', 'FontSize', 20);
box on;
set(gca, 'FontSize', 20);

% subplot(4, 2, 7);
% plot(time_V, V_m08(:, :), 'LineWidth', 1);
% hold on;
% rectangle('Position',[33 -80 1 120], 'EdgeColor', '[0.0 1.0 0.0 0.5]', 'LineWidth', 3);
% hold on;
% box on;
% %grid on;
% xlim([33 34]);
% ylim([-80 40]);
% ax = gca;
% xtickformat('%.1f');
% set(gca, 'XTick', [33:0.2:34]);
% ax.YTick = [-80:40:40];
% %xlabel('Time, sec', 'FontSize', 12);
% ylabel('V, mV', 'FontSize', 18);
% title('d)', 'FontSize', 18);
% set(gca, 'FontSize', 18);

subplot(4, 2, 7);
if (size(time_V, 2) > size(time_V, 1))
    time_V = time_V';
end
regular_V_10_spiking_counter = 0;
for i = 1:size(V_10, 2)
    %V_p = V(:, 1);
    V_p = V_10(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    if ~isempty([pks, locs])
        regular_V_10_spiking_counter = regular_V_10_spiking_counter + 1;
    end
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end
    plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
    hold on;
      
    %N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
end

xlim([33 34]);
ylim([0 size(V_10, 2)+1]);
rectangle('Position',[33, 0, 1, 201], 'EdgeColor', '[0.0 1.0 0.0 0.5]', 'LineWidth', 3);
hold on;
box on;
ax = gca;
ax = gca;
xtickformat('%.1f');
set(gca, 'XTick', [33:0.2:34]);
%ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
ax.YTick = [0:100:size(V_10, 2)];
xlabel('Time, s', 'FontSize', 20);
ylabel('Neuron #', 'FontSize', 20);
title(['d)'], 'FontSize', 20);
set(gca, 'FontSize', 20);

% subplot(4, 2, 8);
% plot(time_V, V_m08(:, :), 'LineWidth', 1);
% set(gca, 'FontSize', 18);
% %grid on;
% xlim([37 38]);
% ylim([-80 40]);
% ax = gca;
% ax = gca;
% xtickformat('%.1f');
% set(gca, 'XTick', [37:0.2:38]);
% ax.YTick = [-80:40:40];
% rectangle('Position',[37, -80, 1, 120], 'EdgeColor', '[0.0 1.0 1.0 0.5]', 'LineWidth', 3);
% hold on;
% box on;
% %xlabel('Time, sec', 'FontSize', 12);
% ylabel('V, mV', 'FontSize', 18);
% title('e)', 'FontSize', 18);
% set(gca, 'FontSize', 18);

subplot(4, 2, 8);
regular_V_10_spiking_counter = 0;
for i = 1:size(V_10, 2)
    %V_p = V(:, 1);
    V_p = V_10(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    if ~isempty([pks, locs])
        regular_V_10_spiking_counter = regular_V_10_spiking_counter + 1;
    end
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end
    plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
    hold on;
      
    %N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
end

xlim([37 38]);
ylim([0 size(V_10, 2)+1]);
rectangle('Position',[37, 0, 1, 201], 'EdgeColor', '[1.0 0.0 1.0 0.5]', 'LineWidth', 3);
hold on;
box on;
ax = gca;
xtickformat('%.1f');
set(gca, 'XTick', [37:0.2:38]);
%ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
ax.YTick = [0:100:size(V_10, 2)];
xlabel('Time, s', 'FontSize', 20);
%ylabel('Neuron #', 'FontSize', 20);
title(['e)'], 'FontSize', 20);
set(gca, 'FontSize', 20);

saveas(gcf, 'results_paper_raster_Ca_V_all_A_10.png');
saveas(gcf, 'results_paper_raster_Ca_V_all_A_10', 'epsc');
%savefig(results_paper_raster_Ca_V_all,  'results_paper_raster_Ca_V_all.fig')
close(results_paper_raster_Ca_V_all_A_10);
%clear;
disp('results_paper_raster_Ca_V_all_A_10 save');

return
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
results_paper_raster_V_g_astro_A = figure('units', 'normalized', 'outerposition', [0 0 0.55 1], 'visible', 'on');
subplot(4, 3, [1 2 3]);
line([0, 60], [0.3, 0.3], 'Color', 'red', 'LineStyle', '--', 'LineWidth', 1);
hold on;
plot(time_Ca, Ca_m08(:, :), 'LineWidth', 1);
hold on;
rectangle('Position',[33 0 1 0.7], 'FaceColor', [0.0 1.0 0.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
rectangle('Position',[37 0 1 0.7], 'FaceColor', [0.0 1.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
rectangle('Position',[46 0 1 0.7], 'FaceColor', [1.0 0.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
%grid on;
xlim([24 50]);
ylim([0 0.7]);
ax = gca;
ax.XTick = [0:2:60];
ax = gca;
ytickformat('%.1f');
set(gca, 'YTick', [0.0 : 0.2 : 0.7]);
%xlabel('Time, sec', 'FontSize', 14);
ylabel('[Ca^{2+}], \muM', 'FontSize', 18);
title('a)', 'FontSize', 18);
box on;
set(gca, 'FontSize', 18);

subplot(4, 3, 4);
if (size(time_V, 2) > size(time_V, 1))
    time_V = time_V';
end
%time_V = time_V';
omega_cur = 0;
omega_total = [];
time_total = [];
%yyaxis left;
regular_V_m08_spiking_counter = 0;
for i = 1:size(V_m08, 2)
%i = 24;
    V_p = V_m08(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end

    if isempty([pks, locs]) || size(pks, 1) == 1
        omega_cur = 0;
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        regular_V_m08_spiking_counter = regular_V_m08_spiking_counter + 1;
        omega_cur = 1./diff(locs);
        %omega_cur = omega_cur(find(omega_cur'<=60));
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        plot(time_locs, omega_cur,  '.-');
        hold on;
    end
end

set(gca, 'FontSize', 18);
%grid on;
rectangle('Position',[33 0 1 60], 'FaceColor', [0.0 1.0 0.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
% rectangle('Position',[37 0 1 60], 'FaceColor', [0.0 1.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
% hold on;
xlim([30 35]);
ylim([0 50]);
ax = gca;
ax.XTick = [0:1:60];
ax.YTick = [0:10:50];
%legend('<\nu_i>');
%xlabel('Time, sec', 'FontSize', 12);
ylabel('\nu, s^{-1}', 'FontSize', 18);
title('b)', 'FontSize', 18);
box on;
%time_V = time_V';

subplot(4, 3, 5);
if (size(time_V, 2) > size(time_V, 1))
    time_V = time_V';
end
%time_V = time_V';
omega_cur = 0;
omega_total = [];
time_total = [];
%yyaxis left;
regular_V_m08_spiking_counter = 0;
for i = 1:size(V_m08, 2)
%i = 24;
    V_p = V_m08(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end

    if isempty([pks, locs]) || size(pks, 1) == 1
        omega_cur = 0;
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        regular_V_m08_spiking_counter = regular_V_m08_spiking_counter + 1;
        omega_cur = 1./diff(locs);
        %omega_cur = omega_cur(find(omega_cur'<=60));
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        plot(time_locs, omega_cur,  '.-');
        hold on;
    end
end

set(gca, 'FontSize', 18);
%grid on;
% rectangle('Position',[33 0 1 60], 'FaceColor', [0.0 1.0 0.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
% hold on;
rectangle('Position',[37 0 1 60], 'FaceColor', [0.0 1.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
xlim([35 40]);
ylim([0 50]);
ax = gca;
ax.XTick = [0:1:60];
ax.YTick = [0:10:50];
%legend('<\nu_i>');
%xlabel('Time, sec', 'FontSize', 12);
%ylabel('\nu, s^{-1}', 'FontSize', 18);
title('c)', 'FontSize', 18);
box on;
%time_V = time_V';

subplot(4, 3, 6);
if (size(time_V, 2) > size(time_V, 1))
    time_V = time_V';
end
%time_V = time_V';
omega_cur = 0;
omega_total = [];
time_total = [];
%yyaxis left;
regular_V_m08_spiking_counter = 0;
for i = 1:size(V_10, 2)
%i = 24;
    V_p = V_10(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end

    if isempty([pks, locs]) || size(pks, 1) == 1
        omega_cur = 0;
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, i, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        regular_V_m08_spiking_counter = regular_V_m08_spiking_counter + 1;
        omega_cur = 1./diff(locs);
        %omega_cur = omega_cur(find(omega_cur'<=60));
        omega_total = [omega_total omega_cur'];
        time_locs = locs;
        time_locs = time_locs(2:end);
        %time_locs = time_locs(find(omega_cur'<=60));
        time_total = [time_total time_locs'];
        %plot(omega_cur, pks(2:end), 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
        %hold on;
    end
    
    if ~isempty([pks, locs]) && size(pks, 1) > 1
        plot(time_locs, omega_cur,  '.-');
        hold on;
    end
end

set(gca, 'FontSize', 18);
%grid on;
% rectangle('Position',[33 0 1 60], 'FaceColor', [0.0 1.0 0.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
% hold on;
rectangle('Position',[46 0 1 60], 'FaceColor', [1.0 0.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
xlim([44 49]);
ylim([0 50]);
ax = gca;
ax.XTick = [0:1:60];
ax.YTick = [0:10:50];
%legend('<\nu_i>');
%xlabel('Time, sec', 'FontSize', 12);
%ylabel('\nu, s^{-1}', 'FontSize', 18);
title('d)', 'FontSize', 18);
box on;
%time_V = time_V';

subplot(4, 3, 7);
plot(time_k_syn, k_syn_m08, 'LineWidth', 2);
hold on;
rectangle('Position',[33 0 1 1.0], 'FaceColor', [0.0 1.0 0.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
%grid on;
xlim([30 35]);
ylim([0 1.0]);
ax = gca;
ax.XTick = [0:1:60];
ax = gca;
ytickformat('%.1f');
set(gca, 'YTick', [0.0 : 0.2 : 1.0]);
%ax.YTick = [0:0.25:1.0];
%xlabel('Time, s', 'FontSize', 18);
ylabel('k', 'FontSize', 18);
title('e)', 'FontSize', 18);
box on;
set(gca, 'FontSize', 18);

subplot(4, 3, 8);
plot(time_k_syn, k_syn_m08, 'LineWidth', 2);
hold on;
rectangle('Position',[37 0 1 1.0], 'FaceColor', [0.0 1.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
%grid on;
xlim([35 40]);
ylim([0 1.0]);
ax = gca;
ax.XTick = [0:1:60];
ax = gca;
ytickformat('%.1f');
set(gca, 'YTick', [0.0 : 0.2 : 1.0]);
%ax.YTick = [0:0.25:1.0];
%xlabel('Time, s', 'FontSize', 18);
%ylabel('k', 'FontSize', 18);
title('f)', 'FontSize', 18);
box on;
set(gca, 'FontSize', 18);

subplot(4, 3, 9);
plot(time_k_syn, k_syn_10, 'LineWidth', 2);
hold on;
rectangle('Position',[46 0 1 1.0], 'FaceColor', [1.0 0.0 1.0 0.2], 'EdgeColor', 'none', 'LineStyle', 'none');
hold on;
%grid on;
xlim([44 49]);
ylim([0 1.0]);
ax = gca;
ax.XTick = [0:1:60];
ax = gca;
ytickformat('%.1f');
set(gca, 'YTick', [0.0 : 0.2 : 1.0]);
%ax.YTick = [0:0.25:1.0];
%xlabel('Time, s', 'FontSize', 18);
%ylabel('k', 'FontSize', 18);
title('g)', 'FontSize', 18);
box on;
set(gca, 'FontSize', 18);

subplot(4, 3, 10);
if (size(time_V, 2) > size(time_V, 1))
    time_V = time_V';
end
regular_V_m08_spiking_counter = 0;
for i = 1:size(V_m08, 2)
    %V_p = V(:, 1);
    V_p = V_m08(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    if ~isempty([pks, locs])
        regular_V_m08_spiking_counter = regular_V_m08_spiking_counter + 1;
    end
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end
    plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
    hold on;
      
    %N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
end

xlim([33 34]);
ylim([0 size(V_m08, 2)+1]);
rectangle('Position',[33, 0, 1, 201], 'EdgeColor', '[0.0 1.0 0.0 0.5]', 'LineWidth', 3);
hold on;
box on;
ax = gca;
ax = gca;
xtickformat('%.1f');
set(gca, 'XTick', [33:0.5:34]);
%ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
ax.YTick = [0:100:size(V_m08, 2)];
xlabel('Time, s', 'FontSize', 18);
ylabel('Neuron #', 'FontSize', 18);
title(['h)'], 'FontSize', 18);
set(gca, 'FontSize', 18);

subplot(4, 3, 11);
if (size(time_V, 2) > size(time_V, 1))
    time_V = time_V';
end
regular_V_m08_spiking_counter = 0;
for i = 1:size(V_m08, 2)
    %V_p = V(:, 1);
    V_p = V_m08(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    if ~isempty([pks, locs])
        regular_V_m08_spiking_counter = regular_V_m08_spiking_counter + 1;
    end
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end
    plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
    hold on;
      
    %N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
end

xlim([37 38]);
ylim([0 size(V_m08, 2)+1]);
rectangle('Position',[37, 0, 1, 201], 'EdgeColor', '[0.0 1.0 1.0 0.5]', 'LineWidth', 3);
hold on;
box on;
ax = gca;
ax = gca;
xtickformat('%.1f');
set(gca, 'XTick', [37:0.5:38]);
%ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
ax.YTick = [0:100:size(V_m08, 2)];
xlabel('Time, s', 'FontSize', 18);
%ylabel('Neuron #', 'FontSize', 18);
title(['i)'], 'FontSize', 18);
set(gca, 'FontSize', 18);

subplot(4, 3, 12);
if (size(time_V, 2) > size(time_V, 1))
    time_V = time_V';
end
regular_V_m08_spiking_counter = 0;
for i = 1:size(V_10, 2)
    %V_p = V(:, 1);
    V_p = V_10(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    if ~isempty([pks, locs])
        regular_V_m08_spiking_counter = regular_V_m08_spiking_counter + 1;
    end
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end
    plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
    hold on;
      
    %N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
end

xlim([46 47]);
ylim([0 size(V_10, 2)+1]);
rectangle('Position',[46, 0, 1, 201], 'EdgeColor', '[1.0 0.0 1.0 0.5]', 'LineWidth', 3);
hold on;
box on;
ax = gca;
ax = gca;
xtickformat('%.1f');
set(gca, 'XTick', [46:0.5:47]);
%ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
ax.YTick = [0:100:size(V_10, 2)];
xlabel('Time, s', 'FontSize', 18);
%ylabel('Neuron #', 'FontSize', 18);
title(['j)'], 'FontSize', 18);
set(gca, 'FontSize', 18);

saveas(gcf, 'results_paper_raster_V_g_astro_A.png');
saveas(gcf, 'results_paper_raster_V_g_astro_A', 'epsc');
%savefig(results_paper_raster_Ca_V_all,  'results_paper_raster_Ca_V_all.fig')
close(results_paper_raster_V_g_astro_A);
%clear;
disp('results_paper_raster_V_g_astro_A save');

return

% subplot(5, 2, 7);
% plot(time_V, V(:, :), 'LineWidth', 1);
% hold on;
% rectangle('Position',[33 -80 1 120], 'EdgeColor', '[0.0 1.0 0.0 0.5]', 'LineWidth', 3);
% hold on;
% box on;
% %grid on;
% xlim([33 34]);
% ylim([-80 40]);
% ax = gca;
% xtickformat('%.1f');
% set(gca, 'XTick', [33:0.2:34]);
% ax.YTick = [-80:40:40];
% %xlabel('Time, sec', 'FontSize', 12);
% ylabel('V, mV', 'FontSize', 18);
% title('d)', 'FontSize', 18);
% set(gca, 'FontSize', 18);

subplot(4, 2, 7);
time_V = time_V';
regular_V_m08_spiking_counter = 0;
for i = 1:size(V_m08, 2)
    %V_p = V(:, 1);
    V_p = V_m08(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    if ~isempty([pks, locs])
        regular_V_m08_spiking_counter = regular_V_m08_spiking_counter + 1;
    end
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end
    plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
    hold on;
      
    N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
end

xlim([33 34]);
ylim([0 size(V_m08, 2)+1]);
rectangle('Position',[33, 0, 1, 201], 'EdgeColor', '[0.0 1.0 0.0 0.5]', 'LineWidth', 3);
hold on;
box on;
ax = gca;
ax = gca;
xtickformat('%.1f');
set(gca, 'XTick', [33:0.2:34]);
%ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
ax.YTick = [0:100:size(V_m08, 2)];
xlabel('Time, s', 'FontSize', 18);
ylabel('Neuron #', 'FontSize', 18);
title(['f)'], 'FontSize', 18);
set(gca, 'FontSize', 18);

% subplot(5, 2, 8);
% plot(time_V, V(:, :), 'LineWidth', 1);
% set(gca, 'FontSize', 18);
% %grid on;
% xlim([37 38]);
% ylim([-80 40]);
% ax = gca;
% ax = gca;
% xtickformat('%.1f');
% set(gca, 'XTick', [37:0.2:38]);
% ax.YTick = [-80:40:40];
% rectangle('Position',[37, -80, 1, 120], 'EdgeColor', '[0.0 1.0 1.0 0.5]', 'LineWidth', 3);
% hold on;
% box on;
% %xlabel('Time, sec', 'FontSize', 12);
% ylabel('V, mV', 'FontSize', 18);
% title('e)', 'FontSize', 18);
% set(gca, 'FontSize', 18);

subplot(4, 2, 8);
regular_V_m08_spiking_counter = 0;
for i = 1:size(V_m08, 2)
    %V_p = V(:, 1);
    V_p = V_m08(:, i);
    [pks, locs] = findpeaks(V_p, time_V, 'MinPeakHeight', -10, 'MinPeakDistance', 0.001);
    if ~isempty([pks, locs])
        regular_V_m08_spiking_counter = regular_V_m08_spiking_counter + 1;
    end
    for pks_counter = 1:size(pks, 1)
        pks(pks_counter) = i;
    end
    plot(locs, pks, 'd', 'MarkerSize', 2, 'MarkerFaceColor', 'k', 'MarkerEdgeColor', 'k');
    hold on;
      
    N_time_V_array(i, ismember(round(time_V*1e5), round(locs*1e5))) = 1;
end

xlim([37 38]);
ylim([0 size(V_m08, 2)+1]);
rectangle('Position',[37, 0, 1, 201], 'EdgeColor', '[0.0 1.0 1.0 0.5]', 'LineWidth', 3);
hold on;
box on;
ax = gca;
xtickformat('%.1f');
set(gca, 'XTick', [37:0.2:38]);
%ax.YTick = [0:sqrt(size(V, 2)):size(V, 2)];
ax.YTick = [0:100:size(V_m08, 2)];
xlabel('Time, s', 'FontSize', 18);
ylabel('Neuron #', 'FontSize', 18);
title(['g)'], 'FontSize', 18);
set(gca, 'FontSize', 18);

saveas(gcf, 'results_paper_raster_Ca_V_all.png');
saveas(gcf, 'results_paper_raster_Ca_V_all', 'epsc');
%savefig(results_paper_raster_Ca_V_all,  'results_paper_raster_Ca_V_all.fig')
close(results_paper_raster_Ca_V_all_m08);
%clear;
disp('results_paper_raster_Ca_V_all save');
%%%%%%%

clear all;

return"
cxy5L3D5,"Batch_Control_System_87011.sess (Notepad++ Saved Session, edit as needed)",GlobalAccessSoftware,Batch,Wednesday 15th of November 2023 09:17:48 AM CDT,"<?xml version=""1.0"" encoding=""UTF-8"" ?>
<NotepadPlus>
    <Session activeView=""0"">
        <mainView activeIndex=""11"">
            <File firstVisibleLine=""0"" xOffset=""0"" scrollWidth=""7317"" startPos=""35"" endPos=""35"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""None (Normal Text)"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\Introduction - Read Me .txt"" backupFilePath="""" originalFileLastModifTimestamp=""44853224"" originalFileLastModifTimestampHigh=""31068352"" mapFirstVisibleDisplayLine=""0"" mapFirstVisibleDocLine=""0"" mapLastVisibleDocLine=""6"" mapNbLine=""14"" mapHigherPos=""0"" mapWidth=""114"" mapHeight=""56"" mapKByteInDoc=""1"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""4"" xOffset=""0"" scrollWidth=""16418"" startPos=""365"" endPos=""365"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\testing.bat"" backupFilePath="""" originalFileLastModifTimestamp=""145625136"" originalFileLastModifTimestampHigh=""31068761"" mapFirstVisibleDisplayLine=""4"" mapFirstVisibleDocLine=""4"" mapLastVisibleDocLine=""20"" mapNbLine=""17"" mapHigherPos=""28"" mapWidth=""139"" mapHeight=""68"" mapKByteInDoc=""15"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""0"" xOffset=""0"" scrollWidth=""1"" startPos=""0"" endPos=""0"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""None (Normal Text)"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\Dev_Notes.txt"" backupFilePath="""" originalFileLastModifTimestamp=""1318615980"" originalFileLastModifTimestampHigh=""31037452"" mapFirstVisibleDisplayLine=""-1"" mapFirstVisibleDocLine=""-1"" mapLastVisibleDocLine=""-1"" mapNbLine=""-1"" mapHigherPos=""-1"" mapWidth=""-1"" mapHeight=""-1"" mapKByteInDoc=""539782252"" mapWrapIndentMode=""-1"" mapIsWrap=""no"" />
            <File firstVisibleLine=""4"" xOffset=""0"" scrollWidth=""3888"" startPos=""146"" endPos=""146"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\AAA-Sync.bat"" backupFilePath="""" originalFileLastModifTimestamp=""44953229"" originalFileLastModifTimestampHigh=""31068352"" mapFirstVisibleDisplayLine=""4"" mapFirstVisibleDocLine=""4"" mapLastVisibleDocLine=""14"" mapNbLine=""14"" mapHigherPos=""21"" mapWidth=""104"" mapHeight=""56"" mapKByteInDoc=""9"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""0"" xOffset=""0"" scrollWidth=""6256"" startPos=""216"" endPos=""216"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\playlist_backups.bat"" backupFilePath="""" originalFileLastModifTimestamp=""-1678318107"" originalFileLastModifTimestampHigh=""31037416"" mapFirstVisibleDisplayLine=""-1"" mapFirstVisibleDocLine=""-1"" mapLastVisibleDocLine=""-1"" mapNbLine=""-1"" mapHigherPos=""-1"" mapWidth=""-1"" mapHeight=""-1"" mapKByteInDoc=""6422646"" mapWrapIndentMode=""-1"" mapIsWrap=""no"" />
            <File firstVisibleLine=""0"" xOffset=""0"" scrollWidth=""6256"" startPos=""0"" endPos=""0"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\playlist_errors.bat"" backupFilePath="""" originalFileLastModifTimestamp=""137267541"" originalFileLastModifTimestampHigh=""31003953"" mapFirstVisibleDisplayLine=""-1"" mapFirstVisibleDocLine=""-1"" mapLastVisibleDocLine=""-1"" mapNbLine=""-1"" mapHigherPos=""-1"" mapWidth=""-1"" mapHeight=""-1"" mapKByteInDoc=""976894522"" mapWrapIndentMode=""-1"" mapIsWrap=""no"" />
            <File firstVisibleLine=""28"" xOffset=""0"" scrollWidth=""3575"" startPos=""1255"" endPos=""1260"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\copy_control.bat"" backupFilePath="""" originalFileLastModifTimestamp=""463481581"" originalFileLastModifTimestampHigh=""31042366"" mapFirstVisibleDisplayLine=""0"" mapFirstVisibleDocLine=""0"" mapLastVisibleDocLine=""32"" mapNbLine=""32"" mapHigherPos=""0"" mapWidth=""146"" mapHeight=""128"" mapKByteInDoc=""4"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""81"" xOffset=""0"" scrollWidth=""12162"" startPos=""2610"" endPos=""2610"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\get_wipe_prefs.bat"" backupFilePath="""" originalFileLastModifTimestamp=""2038586115"" originalFileLastModifTimestampHigh=""31005775"" mapFirstVisibleDisplayLine=""81"" mapFirstVisibleDocLine=""81"" mapLastVisibleDocLine=""100"" mapNbLine=""19"" mapHigherPos=""2497"" mapWidth=""162"" mapHeight=""76"" mapKByteInDoc=""2"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""98"" xOffset=""0"" scrollWidth=""12162"" startPos=""2276"" endPos=""2276"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\copy_backups.bat"" backupFilePath="""" originalFileLastModifTimestamp=""463431578"" originalFileLastModifTimestampHigh=""31042366"" mapFirstVisibleDisplayLine=""98"" mapFirstVisibleDocLine=""98"" mapLastVisibleDocLine=""117"" mapNbLine=""19"" mapHigherPos=""2342"" mapWidth=""162"" mapHeight=""76"" mapKByteInDoc=""3"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""5"" xOffset=""0"" scrollWidth=""12162"" startPos=""577"" endPos=""577"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\copies_backups.bat"" backupFilePath="""" originalFileLastModifTimestamp=""-2000534689"" originalFileLastModifTimestampHigh=""31062250"" mapFirstVisibleDisplayLine=""5"" mapFirstVisibleDocLine=""5"" mapLastVisibleDocLine=""24"" mapNbLine=""19"" mapHigherPos=""177"" mapWidth=""162"" mapHeight=""76"" mapKByteInDoc=""3"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""0"" xOffset=""0"" scrollWidth=""6256"" startPos=""219"" endPos=""219"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\status_report.bat"" backupFilePath="""" originalFileLastModifTimestamp=""2038516111"" originalFileLastModifTimestampHigh=""31005775"" mapFirstVisibleDisplayLine=""-1"" mapFirstVisibleDocLine=""-1"" mapLastVisibleDocLine=""-1"" mapNbLine=""-1"" mapHigherPos=""-1"" mapWidth=""-1"" mapHeight=""-1"" mapKByteInDoc=""7209057"" mapWrapIndentMode=""-1"" mapIsWrap=""no"" />
            <File firstVisibleLine=""9"" xOffset=""0"" scrollWidth=""16418"" startPos=""554"" endPos=""554"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\ErrorHandling.bat"" backupFilePath="""" originalFileLastModifTimestamp=""-844301485"" originalFileLastModifTimestampHigh=""31068760"" mapFirstVisibleDisplayLine=""9"" mapFirstVisibleDocLine=""9"" mapLastVisibleDocLine=""26"" mapNbLine=""17"" mapHigherPos=""223"" mapWidth=""139"" mapHeight=""68"" mapKByteInDoc=""9"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""0"" xOffset=""0"" scrollWidth=""6256"" startPos=""278"" endPos=""278"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\copy_externals.bat"" backupFilePath="""" originalFileLastModifTimestamp=""2038626117"" originalFileLastModifTimestampHigh=""31005775"" mapFirstVisibleDisplayLine=""-1"" mapFirstVisibleDocLine=""-1"" mapLastVisibleDocLine=""-1"" mapNbLine=""-1"" mapHigherPos=""-1"" mapWidth=""-1"" mapHeight=""-1"" mapKByteInDoc=""6422646"" mapWrapIndentMode=""-1"" mapIsWrap=""no"" />
            <File firstVisibleLine=""0"" xOffset=""0"" scrollWidth=""6256"" startPos=""0"" endPos=""0"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\just_externals.bat"" backupFilePath="""" originalFileLastModifTimestamp=""2038666119"" originalFileLastModifTimestampHigh=""31005775"" mapFirstVisibleDisplayLine=""-1"" mapFirstVisibleDocLine=""-1"" mapLastVisibleDocLine=""-1"" mapNbLine=""-1"" mapHigherPos=""-1"" mapWidth=""-1"" mapHeight=""-1"" mapKByteInDoc=""7274600"" mapWrapIndentMode=""-1"" mapIsWrap=""no"" />
            <File firstVisibleLine=""56"" xOffset=""0"" scrollWidth=""18416"" startPos=""1246"" endPos=""1250"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\not_online.bat"" backupFilePath="""" originalFileLastModifTimestamp=""2038716122"" originalFileLastModifTimestampHigh=""31005775"" mapFirstVisibleDisplayLine=""-1"" mapFirstVisibleDocLine=""-1"" mapLastVisibleDocLine=""-1"" mapNbLine=""-1"" mapHigherPos=""-1"" mapWidth=""-1"" mapHeight=""-1"" mapKByteInDoc=""1702038029"" mapWrapIndentMode=""-1"" mapIsWrap=""no"" />
            <File firstVisibleLine=""11"" xOffset=""0"" scrollWidth=""3575"" startPos=""658"" endPos=""663"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\outlook_handler.bat"" backupFilePath="""" originalFileLastModifTimestamp=""1940523792"" originalFileLastModifTimestampHigh=""31037414"" mapFirstVisibleDisplayLine=""11"" mapFirstVisibleDocLine=""11"" mapLastVisibleDocLine=""43"" mapNbLine=""32"" mapHigherPos=""297"" mapWidth=""265"" mapHeight=""128"" mapKByteInDoc=""8"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""0"" xOffset=""0"" scrollWidth=""12162"" startPos=""0"" endPos=""0"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\outlook_error_handler.bat"" backupFilePath="""" originalFileLastModifTimestamp=""295598088"" originalFileLastModifTimestampHigh=""31016236"" mapFirstVisibleDisplayLine=""0"" mapFirstVisibleDocLine=""0"" mapLastVisibleDocLine=""19"" mapNbLine=""19"" mapHigherPos=""0"" mapWidth=""162"" mapHeight=""76"" mapKByteInDoc=""3"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""7"" xOffset=""0"" scrollWidth=""3575"" startPos=""685"" endPos=""690"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\phone_backups.bat"" backupFilePath="""" originalFileLastModifTimestamp=""1481657547"" originalFileLastModifTimestampHigh=""31037414"" mapFirstVisibleDisplayLine=""7"" mapFirstVisibleDocLine=""7"" mapLastVisibleDocLine=""39"" mapNbLine=""32"" mapHigherPos=""359"" mapWidth=""265"" mapHeight=""128"" mapKByteInDoc=""3"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""0"" xOffset=""0"" scrollWidth=""3575"" startPos=""72"" endPos=""72"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\SyncOlderPhotos.bat"" backupFilePath="""" originalFileLastModifTimestamp=""-1678278105"" originalFileLastModifTimestampHigh=""31037416"" mapFirstVisibleDisplayLine=""0"" mapFirstVisibleDocLine=""0"" mapLastVisibleDocLine=""32"" mapNbLine=""32"" mapHigherPos=""0"" mapWidth=""265"" mapHeight=""128"" mapKByteInDoc=""8"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""0"" xOffset=""0"" scrollWidth=""6256"" startPos=""189"" endPos=""189"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\caller_check_showmsg.bat"" backupFilePath="""" originalFileLastModifTimestamp=""388052984"" originalFileLastModifTimestampHigh=""31005802"" mapFirstVisibleDisplayLine=""-1"" mapFirstVisibleDocLine=""-1"" mapLastVisibleDocLine=""-1"" mapNbLine=""-1"" mapHigherPos=""-1"" mapWidth=""-1"" mapHeight=""-1"" mapKByteInDoc=""1148190720"" mapWrapIndentMode=""-1"" mapIsWrap=""no"" />
            <File firstVisibleLine=""7"" xOffset=""0"" scrollWidth=""896"" startPos=""579"" endPos=""579"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\exit_main.bat"" backupFilePath="""" originalFileLastModifTimestamp=""187971051"" originalFileLastModifTimestampHigh=""31051808"" mapFirstVisibleDisplayLine=""7"" mapFirstVisibleDocLine=""7"" mapLastVisibleDocLine=""36"" mapNbLine=""29"" mapHigherPos=""219"" mapWidth=""251"" mapHeight=""116"" mapKByteInDoc=""2"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""198"" xOffset=""0"" scrollWidth=""16418"" startPos=""9086"" endPos=""9086"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\runtime_display.bat"" backupFilePath="""" originalFileLastModifTimestamp=""-477713793"" originalFileLastModifTimestampHigh=""31068762"" mapFirstVisibleDisplayLine=""206"" mapFirstVisibleDocLine=""198"" mapLastVisibleDocLine=""215"" mapNbLine=""17"" mapHigherPos=""7607"" mapWidth=""139"" mapHeight=""68"" mapKByteInDoc=""13"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""9"" xOffset=""0"" scrollWidth=""16418"" startPos=""638"" endPos=""638"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\add_padding.bat"" backupFilePath="""" originalFileLastModifTimestamp=""-497796580"" originalFileLastModifTimestampHigh=""31068763"" mapFirstVisibleDisplayLine=""9"" mapFirstVisibleDocLine=""9"" mapLastVisibleDocLine=""26"" mapNbLine=""17"" mapHigherPos=""240"" mapWidth=""139"" mapHeight=""68"" mapKByteInDoc=""1"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""0"" xOffset=""0"" scrollWidth=""12162"" startPos=""585"" endPos=""585"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\string_length.bat"" backupFilePath="""" originalFileLastModifTimestamp=""1321151"" originalFileLastModifTimestampHigh=""31039734"" mapFirstVisibleDisplayLine=""0"" mapFirstVisibleDocLine=""0"" mapLastVisibleDocLine=""30"" mapNbLine=""30"" mapHigherPos=""0"" mapWidth=""146"" mapHeight=""120"" mapKByteInDoc=""0"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""2"" xOffset=""0"" scrollWidth=""12162"" startPos=""60"" endPos=""60"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\justdocumentsNOW.bat"" backupFilePath="""" originalFileLastModifTimestamp=""1062970533"" originalFileLastModifTimestampHigh=""31062251"" mapFirstVisibleDisplayLine=""0"" mapFirstVisibleDocLine=""0"" mapLastVisibleDocLine=""32"" mapNbLine=""32"" mapHigherPos=""0"" mapWidth=""265"" mapHeight=""128"" mapKByteInDoc=""3"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""11"" xOffset=""0"" scrollWidth=""7317"" startPos=""556"" endPos=""556"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\Silent_mode.bat"" backupFilePath="""" originalFileLastModifTimestamp=""166936355"" originalFileLastModifTimestampHigh=""31068761"" mapFirstVisibleDisplayLine=""11"" mapFirstVisibleDocLine=""11"" mapLastVisibleDocLine=""22"" mapNbLine=""14"" mapHigherPos=""430"" mapWidth=""114"" mapHeight=""56"" mapKByteInDoc=""2"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""29"" xOffset=""0"" scrollWidth=""6677"" startPos=""1536"" endPos=""1536"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\utility1.bat"" backupFilePath="""" originalFileLastModifTimestamp=""-949539456"" originalFileLastModifTimestampHigh=""31065500"" mapFirstVisibleDisplayLine=""32"" mapFirstVisibleDocLine=""29"" mapLastVisibleDocLine=""44"" mapNbLine=""16"" mapHigherPos=""1203"" mapWidth=""122"" mapHeight=""64"" mapKByteInDoc=""1"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""183"" xOffset=""0"" scrollWidth=""3168"" startPos=""7920"" endPos=""7928"" selMode=""0"" offset=""1"" wrapCount=""2"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\utility2.bat"" backupFilePath="""" originalFileLastModifTimestamp=""1432836296"" originalFileLastModifTimestampHigh=""31066327"" mapFirstVisibleDisplayLine=""199"" mapFirstVisibleDocLine=""183"" mapLastVisibleDocLine=""197"" mapNbLine=""17"" mapHigherPos=""7682"" mapWidth=""128"" mapHeight=""68"" mapKByteInDoc=""10"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""0"" xOffset=""0"" scrollWidth=""12162"" startPos=""322"" endPos=""322"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\crosschecker.bat"" backupFilePath="""" originalFileLastModifTimestamp=""1499218934"" originalFileLastModifTimestampHigh=""31062255"" mapFirstVisibleDisplayLine=""0"" mapFirstVisibleDocLine=""0"" mapLastVisibleDocLine=""19"" mapNbLine=""19"" mapHigherPos=""0"" mapWidth=""162"" mapHeight=""76"" mapKByteInDoc=""3"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""15"" xOffset=""0"" scrollWidth=""16418"" startPos=""894"" endPos=""894"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\utility3.bat"" backupFilePath="""" originalFileLastModifTimestamp=""166986358"" originalFileLastModifTimestampHigh=""31068761"" mapFirstVisibleDisplayLine=""15"" mapFirstVisibleDocLine=""15"" mapLastVisibleDocLine=""31"" mapNbLine=""17"" mapHigherPos=""751"" mapWidth=""139"" mapHeight=""68"" mapKByteInDoc=""10"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""0"" xOffset=""0"" scrollWidth=""12162"" startPos=""13"" endPos=""13"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\backupschdltsks-A.bat"" backupFilePath="""" originalFileLastModifTimestamp=""1394232929"" originalFileLastModifTimestampHigh=""31062255"" mapFirstVisibleDisplayLine=""0"" mapFirstVisibleDocLine=""0"" mapLastVisibleDocLine=""19"" mapNbLine=""19"" mapHigherPos=""0"" mapWidth=""162"" mapHeight=""76"" mapKByteInDoc=""0"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""1"" xOffset=""0"" scrollWidth=""12162"" startPos=""11"" endPos=""11"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\exponential_powers.bat"" backupFilePath="""" originalFileLastModifTimestamp=""1662952457"" originalFileLastModifTimestampHigh=""31046652"" mapFirstVisibleDisplayLine=""1"" mapFirstVisibleDocLine=""1"" mapLastVisibleDocLine=""20"" mapNbLine=""19"" mapHigherPos=""2"" mapWidth=""162"" mapHeight=""76"" mapKByteInDoc=""0"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
            <File firstVisibleLine=""0"" xOffset=""0"" scrollWidth=""12162"" startPos=""167"" endPos=""167"" selMode=""0"" offset=""0"" wrapCount=""1"" lang=""Batch"" encoding=""-1"" userReadOnly=""no"" filename=""C:\Users\JpE\Documents\AAA Sync2Laptop\Batch Files\BCS-Suite\SyncronizeMatchedFiles.bat"" backupFilePath="""" originalFileLastModifTimestamp=""52452735"" originalFileLastModifTimestampHigh=""31062251"" mapFirstVisibleDisplayLine=""0"" mapFirstVisibleDocLine=""0"" mapLastVisibleDocLine=""19"" mapNbLine=""19"" mapHigherPos=""0"" mapWidth=""162"" mapHeight=""76"" mapKByteInDoc=""2"" mapWrapIndentMode=""2"" mapIsWrap=""yes"" />
        </mainView>
        <subView activeIndex=""0"" />
    </Session>
</NotepadPlus>
"
JeeMBQKu,no7.sh,afsulthon,Bash,Wednesday 15th of November 2023 09:06:27 AM CDT,"echo 'upstream myweb  {
    server 10.40.3.1 weight=640; 
    server 10.40.3.2 weight=200;
    server 10.40.3.3 weight=25;
}

server {
    listen 80;
    server_name granz.channel.e07.com;
    location / {
        proxy_pass http://myweb;
    }
}' > /etc/nginx/sites-available/lb-jarkom"
xY2uDsEU,CS2 Chat Translator,Mecke_Dev,Python,Wednesday 15th of November 2023 09:02:19 AM CDT,"# You have to enable ""-condebug"" as a launch option and you may have to change the path to the CS2 directory
# also install this:
# pip install watchdog googletrans==4.0.0-rc1

# if you want to contact me: https://linktr.ee/Mecke_Dev

import time
import os
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
from googletrans import Translator

class LogFileHandler(FileSystemEventHandler):
    def __init__(self, translator, translated_file_path):
        super().__init__()
        self.translator = translator
        self.translated_file_path = translated_file_path
        self.translated_lines = set()

        # Load already translated lines from the file
        if os.path.exists(self.translated_file_path):
            with open(self.translated_file_path, ""r"", encoding=""utf-8"") as translated_file:
                self.translated_lines.update(translated_file.read().splitlines())

    def process_file(self, file_path):
        with open(file_path, ""r"", encoding=""utf-8"") as file:
            lines = file.readlines()

        for line in reversed(lines):
            if "" : "" in line and line not in self.translated_lines and ""[SignonState] CL"" not in line and ""[RenderPipelineCsgo] RT"" not in line:
                username, message = line.split("" : "", 1)
                translated_message = self.translator.translate(message, dest='en')
                # print(translated_message)
                print(f'{username[15:]} : {translated_message.text} (from {translated_message.src})')

                # Store the translated line in the set and the file
                self.translated_lines.add(line)
                with open(self.translated_file_path, ""a"", encoding=""utf-8"") as translated_file:
                    translated_file.write(line + '\n')
                break

if __name__ == '__main__':
    path = r'C:\Program Files (x86)\Steam\steamapps\common\Counter-Strike Global Offensive\game\csgo'
    translated_file_path = 'translated_lines.txt'

    translator = Translator()
    event_handler = LogFileHandler(translator, translated_file_path)
    observer = Observer()
    observer.schedule(event_handler, path, recursive=False)
    observer.start()

    try:
        while True:
            time.sleep(1)  # Adjust the sleep interval as needed
            event_handler.process_file(os.path.join(path, 'console.log'))
    except KeyboardInterrupt:
        observer.stop()
    observer.join()
"
