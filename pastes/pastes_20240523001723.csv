id,title,username,language,date,content
PXbpRnQp,2024-05-22_stats.json,rdp_snitch,JSON,Wednesday 22nd of May 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""139.59.119.78"": 13,
    ""152.42.170.9"": 17,
    ""206.189.91.241"": 10,
    ""206.189.83.211"": 14,
    ""146.190.87.212"": 6,
    ""146.190.91.124"": 11,
    ""152.42.241.81"": 15,
    ""152.42.184.218"": 5,
    ""165.232.161.240"": 10,
    ""146.190.83.197"": 3,
    ""146.190.83.71"": 7,
    ""152.42.178.221"": 4,
    ""104.248.147.80"": 9,
    ""128.199.218.126"": 12,
    ""128.199.219.77"": 10,
    ""104.248.149.190"": 8,
    ""152.42.241.22"": 250,
    ""159.223.92.210"": 252,
    ""188.166.210.48"": 225,
    ""143.198.195.113"": 224,
    ""152.42.254.243"": 209,
    ""152.42.241.3"": 231,
    ""152.42.241.20"": 224,
    ""146.190.95.33"": 8,
    ""188.166.215.223"": 253,
    ""188.166.222.177"": 221,
    ""45.227.254.8"": 2,
    ""185.170.144.3"": 5,
    ""45.227.254.55"": 2,
    ""169.150.209.215"": 1,
    ""80.66.76.130"": 1,
    ""188.166.236.0"": 331,
    ""178.128.60.13"": 320,
    ""188.166.238.49"": 336,
    ""157.230.244.48"": 309,
    ""188.166.232.15"": 277,
    ""68.183.224.49"": 307,
    ""188.166.248.81"": 275,
    ""206.189.159.59"": 305,
    ""94.232.46.148"": 1,
    ""68.183.226.174"": 336,
    ""185.198.69.18"": 1,
    ""167.94.145.106"": 1,
    ""194.165.16.78"": 2,
    ""198.235.24.84"": 3,
    ""103.56.7.131"": 4,
    ""87.251.75.145"": 3,
    ""87.251.75.64"": 1,
    ""64.124.50.139"": 2,
    ""45.227.254.9"": 3,
    ""36.91.222.100"": 2,
    ""185.198.69.22"": 1,
    ""120.27.142.130"": 2,
    ""103.75.186.158"": 1,
    ""87.251.75.120"": 2,
    ""152.32.235.78"": 1,
    ""1.55.55.178"": 1,
    ""198.235.24.55"": 3,
    ""213.109.202.230"": 8,
    ""66.115.149.35"": 1,
    ""157.97.121.72"": 1,
    ""138.207.247.21"": 1,
    ""103.56.6.112"": 1,
    ""91.238.181.71"": 2,
    ""194.165.16.37"": 4,
    ""103.120.18.135"": 4,
    ""2.57.149.92"": 1,
    ""112.4.139.162"": 1,
    ""187.157.89.218"": 1,
    ""116.140.196.215"": 1,
    ""173.237.25.68"": 5,
    ""198.235.24.170"": 3,
    ""167.94.146.63"": 1,
    ""139.162.27.10"": 163,
    ""205.210.31.180"": 3
  },
  ""asn"": {
    ""AS14061"": 5047,
    ""AS267784"": 7,
    ""AS197414"": 5,
    ""AS212238"": 1,
    ""AS208091"": 7,
    ""AS212482"": 1,
    ""AS57523"": 2,
    ""AS398705"": 2,
    ""AS48721"": 6,
    ""AS396982"": 12,
    ""AS140599"": 5,
    ""AS6461"": 2,
    ""AS7713"": 2,
    ""AS37963"": 2,
    ""AS135905"": 1,
    ""AS135377"": 1,
    ""AS18403"": 1,
    ""AS208312"": 9,
    ""AS46562"": 1,
    ""AS396356"": 1,
    ""AS11776"": 1,
    ""AS49434"": 2,
    ""AS131939"": 4,
    ""AS56046"": 1,
    ""AS8151"": 1,
    ""AS4837"": 1,
    ""AS7979"": 5,
    ""AS63949"": 163
  },
  ""isp"": {
    ""DIGITALOCEAN"": 13,
    ""DigitalOcean, LLC"": 5034,
    ""Flyservers S.A."": 13,
    ""Xhost Internet Solutions LP"": 13,
    ""Datacamp Limited"": 1,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Censys, Inc."": 2,
    ""Google LLC"": 12,
    ""Comfac Corporation"": 5,
    ""Zayo Bandwidth"": 2,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Addresses CNNIC"": 2,
    ""Inet software one member company limited"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""FPT Telecom Company"": 1,
    ""Red Byte LLC"": 9,
    ""Performive LLC"": 1,
    ""Consumer-Network"": 1,
    ""Breezeline"": 1,
    ""Datacenter location PAR1 France"": 2,
    ""IPS INC"": 4,
    ""China Mobile Communications Corporation"": 1,
    ""Uninet S.A. de C.V."": 1,
    ""China Unicom CHINA169 Network"": 1,
    ""Servers.com, Inc."": 5,
    ""LINODE"": 163
  },
  ""org"": {
    ""DigitalOcean, LLC"": 2783,
    ""Digital Ocean"": 26,
    ""Digitalocean"": 2238,
    ""UAB Host Baltic"": 7,
    ""Xhostis"": 5,
    ""DataCamp Limited"": 1,
    ""Xhost Internet Solutions"": 7,
    ""Dmitriy Panchenko"": 1,
    ""Chang Way Technologies Co. Limited"": 11,
    ""Censys, Inc."": 2,
    ""Flyservers S.A"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""Comfac Corporation"": 5,
    ""Microsoft Corporation"": 2,
    ""Telekomunikasi Indonesia"": 2,
    ""Aliyun Computing Co., LTD"": 2,
    ""Inet software one member company limited"": 1,
    ""Ucloud Information Technology"": 1,
    ""Vietnam Internet Network Information Center"": 1,
    ""Total server solutions LLC"": 1,
    ""Unknown"": 1,
    ""Breezeline"": 1,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""IPS Inc"": 4,
    ""China Mobile Communications Corporation"": 1,
    ""Uninet S.A. de C.V."": 1,
    ""China United Network Communications Corporation Limited"": 1,
    ""Servers.com, Inc."": 5,
    ""Linode, LLC"": 163
  },
  ""regionName"": {
    ""South West"": 5027,
    ""Central Singapore"": 20,
    ""Vilnius"": 7,
    ""North Holland"": 12,
    ""Hesse"": 3,
    ""Perm Krai"": 1,
    ""Moscow"": 10,
    ""Kaunas"": 6,
    ""California"": 13,
    ""Metro Manila"": 5,
    ""Virginia"": 2,
    ""Jakarta"": 2,
    ""Zhejiang"": 2,
    ""Hanoi"": 1,
    ""B\u1eafc Ninh Province"": 1,
    ""Washington"": 1,
    ""New Jersey"": 1,
    ""Pennsylvania"": 1,
    ""\u00cele-de-France"": 2,
    ""Tokyo"": 4,
    ""Lesser Poland"": 1,
    ""Jiangsu"": 1,
    ""Mexico City"": 1,
    ""Beijing"": 1,
    ""Texas"": 5,
    ""North West"": 163
  },
  ""country"": {
    ""Singapore"": 5210,
    ""Lithuania"": 13,
    ""The Netherlands"": 12,
    ""Germany"": 3,
    ""Russia"": 11,
    ""United States"": 23,
    ""Philippines"": 5,
    ""Indonesia"": 2,
    ""China"": 4,
    ""Vietnam"": 2,
    ""France"": 2,
    ""Japan"": 4,
    ""Poland"": 1,
    ""Mexico"": 1
  },
  ""account"": {
    ""142.93.8.59"": 5047,
    ""Test"": 21,
    ""Administr"": 15,
    ""(empty)"": 9,
    ""bKxsFuEbE"": 1,
    ""atjqgY"": 1,
    ""LgEtQX"": 1,
    ""hello"": 181,
    ""Domain"": 7,
    ""Administrator"": 1,
    ""tFZsoEOkc"": 1,
    ""jDJjwk"": 1,
    ""Acddjw"": 1,
    ""wCReqVOvG"": 1,
    ""mHFqMA"": 1,
    ""cpSIPM"": 1,
    ""bfpTehswQ"": 1,
    ""pjWwGD"": 1,
    ""PEssNn"": 1
  },
  ""keyboard"": {
    ""Unknown"": 5293
  },
  ""client_build"": {
    ""Unknown"": 5293
  },
  ""client_name"": {
    ""Unknown"": 5293
  },
  ""ip_type"": {
    ""hosting & proxy"": 1250,
    ""hosting"": 3984,
    ""Unknown"": 45,
    ""proxy"": 12,
    ""mobile"": 2
  }
}"
Rk8gYZij,aa,selfharm,Python,Wednesday 22nd of May 2024 07:15:08 PM CDT,"from flask import Flask, render_template, request, jsonify
import discum
import time
import random
import threading

app = Flask(__name__)

try:
    DT = open(""token.txt"", ""r"").read().strip()
except FileNotFoundError:
    print(""token.txt not found"")
    exit()

raids = [
    {""name"": ""Last Wish"", ""big"": ""489911398025920513"", ""small"": ""1080056128240631869""},
    {""name"": ""Deep Stone Crypt"", ""big"": ""780123659183849492"", ""small"": ""1080056027912876062""},
    {""name"": ""Vault Of Glass"", ""big"": ""894652222523203645"", ""small"": ""1080056025182392331""},
    {""name"": ""Garden Of Salvation"", ""big"": ""628624111165374494"", ""small"": ""1080056183072751636""},
    {""name"": ""Vow Of The Disciple"", ""big"": ""949726571973992508"", ""small"": ""1080055964897660959""},
    {""name"": ""Kings Fall"", ""big"": ""1004189641966092430"", ""small"": ""1080055833850806312""},
    {""name"": ""Crotas End"", ""big"": ""1134068958706815016"", ""small"": ""1140402589758927009""}
]

lfg_message = """"
running = False
message_ids = {""big"": [], ""small"": []}

bot = discum.Client(token=DT)

def send_messages(big_channel_id, small_channel_id):
    global running
    while running:
        time.sleep(random.uniform(1.3, 2.0))
        res1 = bot.sendMessage(small_channel_id, lfg_message)
        message_ids[""small""].append(res1.json()['id'])
        time.sleep(random.uniform(0.45, 0.70))
        res2 = bot.sendMessage(big_channel_id, lfg_message)
        message_ids[""big""].append(res2.json()['id'])
        time.sleep(random.randint(28, 30))
        bot.deleteMessage(small_channel_id, res1.json()['id'])
        message_ids[""small""].remove(res1.json()['id'])
        time.sleep(random.randint(1, 2))
        bot.deleteMessage(big_channel_id, res2.json()['id'])
        message_ids[""big""].remove(res2.json()['id'])

@app.route('/')
def index():
    return render_template('index.html', raids=raids)


@app.route('/start_lfg', methods=['POST'])
def start_lfg():
    global lfg_message, running
    data = request.json
    selected_raid = raids[int(data['selectedRaid'])]
    lfg_amount = data['lfgAmount']
    lfg_message = f""LF{lfg_amount}M fresh KWTD dm for invite :)""
    
    running = True
    threading.Thread(target=send_messages, args=(selected_raid['big'], selected_raid['small'])).start()
    
    return jsonify({""status"": ""LFG started""})

@app.route('/stop_lfg', methods=['POST'])
def stop_lfg():
    global running
    running = False
    for msg_id in message_ids[""small""]:
        bot.deleteMessage(raids[int(request.json['selectedRaid'])]['small'], msg_id)
    for msg_id in message_ids[""big""]:
        bot.deleteMessage(raids[int(request.json['selectedRaid'])]['big'], msg_id)
    message_ids[""small""].clear()
    message_ids[""big""].clear()
    return jsonify({""status"": ""LFG stopped""})

if __name__ == '__main__':
    app.run(debug=True)
"
9PFa0N9u,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Wednesday 22nd of May 2024 07:13:06 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_905987.pdf

Working as of:
23 May 2024"
Z35yrjp6,Tutorial,Bacon_Script,Lua,Wednesday 22nd of May 2024 07:12:35 PM CDT,Paste your script here
EPaJ7LZZ,2024_lista_ex3_soma_linhas_colunas,gpsgiraldi,C,Wednesday 22nd of May 2024 06:17:00 PM CDT,"#include <stdio.h>

int main()
{

    int i,j;
//preenchendo uma matriz 3x3 com inteiros
//resultante
    int mat[3][3];
    int somaLinha,somaColuna;
    
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            scanf(""%i"",&mat[i][j]);
        }
    }
    printf(""\n"");
//lendo a matriz
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            printf(""%i "",mat[i][j]);
        }
    printf(""\n"");
    }
//iniciando a soma das linhas
    somaLinha=0;
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            somaLinha=somaLinha+mat[i][j];
        }
        printf(""\nA soma da linha %i equivale a %i"",i,somaLinha);
        somaLinha=0;
    }
    printf(""\n"");
//iniciando a soma das colunas
    somaColuna=0;
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            somaColuna=somaColuna+mat[j][i];
        }
        printf(""\nA soma da coluna %i equivale a %i"",i,somaColuna);
        somaColuna=0;
    }
}
"
T88wuHVx,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Wednesday 22nd of May 2024 06:13:53 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
23 May 2024"
zck1gu0R,DJ,jburkhar21,Lua,Wednesday 22nd of May 2024 05:56:47 PM CDT,"local speaker = peripheral.find(""speaker"")

local t, dt = 0, 500 / 48000
while true do
    local buffer = {}
    for i = 1, 128 * 1024 do
        buffer[i] = math.floor(math.sin(t) * 127)
        t = (t + dt) % (math.pi * 2)
    end

    while not speaker.playAudio(buffer) do
        os.pullEvent(""speaker_audio_empty"")
    end
end"
3AQd7HdA,Pastebin.ai - #1 Pastebin Alternative,xxsa,PHP,Wednesday 22nd of May 2024 05:52:51 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
..
......................................
..."
8Kz84LSF,2024_matriz_identidade,gpsgiraldi,C,Wednesday 22nd of May 2024 05:29:45 PM CDT,"#include <stdio.h>
 
int main()
{
    int n,i,j;
//matriz quadrada indentidade    
        printf(""Insira o tamanho da matriz nxn \n"");
        scanf(""%i"",&n);
        
    int mat[n][n];
//atribuição    
        for(i=0;i<n;i++){    
            for(j=0;j<n;j++){
                if(i==j){
                    mat[i][j]=1;
                }
                else{
                    mat[i][j]=0;
                }
            }
        }    
//saída        
        for(i=0;i<n;i++){
            for(j=0;j<n;j++){
                printf(""%i "",mat[i][j]);
            }
        printf(""\n"");
        }
    return 0;
}"
6Fq1K4m5,Turtle connection,Randomaytion13,Lua,Wednesday 22nd of May 2024 05:14:40 PM CDT,"local http = require(""http"")

local function sendToServer(data)
    local response = http.post(""http://localhost:3000/turtle"", textutils.serialize(data))
    if response then
        print(response.readAll())
    else
        print(""Failed to connect to server"")
    end
end

while true do
    local command = http.get(""http://localhost:3000/command"")
    if command then
        local cmd = command.readAll()
        if cmd == ""forward"" then
            turtle.forward()
        elseif cmd == ""back"" then
            turtle.back()
        end
        sendToServer({x = turtle.getPosition().x, y = turtle.getPosition().y, z = turtle.getPosition().z})
    end
    os.sleep(1)
end
"
uhqH6CS5,codes_1,Catsher,Python,Wednesday 22nd of May 2024 04:27:24 PM CDT,"class Symbol:
    def __init__(self, c: str) -> None:
        if c not in ['0', '1']:
            raise Exception(""Не входит в поле"")
        self.symbol = c

    def __add__(a, b):
        if not isinstance(b, Symbol):
            raise Exception(""Нельзя складывать символ и невесть что"")
        
        a_i = int(a.symbol)
        b_i = int(b.symbol)

        return Symbol(str((a_i + b_i) % 2))

class CodeVector:
    def __init__(self, symbols: list[Symbol]) -> None:
        self.symbols: list[Symbol] = symbols

    def __str__(self) -> str:
        return "" "".join([s.symbol for s in self.symbols])
    
    def from_string(s: str) -> ""CodeVector"":
        return CodeVector(symbols=[Symbol(c=c) for c in s])
    
    def __getitem__(obj, k):
        if not isinstance(k, int):
            raise Exception(""Неправильная индексация"")
        
        return obj.symbols[k]
    

def inf_vector_to_code(v: CodeVector) -> CodeVector:
    summ0: Symbol = v[0] + v[1] + v[3] + v[4] + v[6] + v[8] + v[10]
    summ1: Symbol = v[0] + v[2] + v[3] + v[4] + v[5] + v[9] + v[10]
    summ2: Symbol = v[1] + v[2] + v[3] + v[7] + v[8] + v[10] + v[10]
    summ3: Symbol = v[4] + v[5] + v[6] + v[7] + v[8] + v[9] + v[10]

    p0 = Symbol('0') if summ0.symbol == '0' else Symbol('1')
    p1 = Symbol('0') if summ1.symbol == '0' else Symbol('1')
    p2 = Symbol('0') if summ2.symbol == '0' else Symbol('1')
    p3 = Symbol('0') if summ3.symbol == '0' else Symbol('1')

    final_string: str = f""{p0.symbol}{p1.symbol}{v[0].symbol}{p2.symbol}{v[1].symbol}{v[2].symbol}{v[3].symbol}{p3.symbol}{v[4].symbol}{v[5].symbol}{v[6].symbol}{v[7].symbol}{v[8].symbol}{v[9].symbol}{v[10].symbol}""
    return CodeVector.from_string(final_string)

inf_v = CodeVector.from_string(""10001010111"")
print(inf_vector_to_code(inf_v))"
UBMBt8Ap,Open-DTU-1-WR-2,NittyGritty,JSON,Wednesday 22nd of May 2024 04:17:54 PM CDT,"<!DOCTYPE html>
<!--[if lt IE 7]> <html class=""no-js ie6 oldie"" lang=""en-US""> <![endif]-->
<!--[if IE 7]>    <html class=""no-js ie7 oldie"" lang=""en-US""> <![endif]-->
<!--[if IE 8]>    <html class=""no-js ie8 oldie"" lang=""en-US""> <![endif]-->
<!--[if gt IE 8]><!--> <html class=""no-js"" lang=""en-US""> <!--<![endif]-->
<head>


<title>pastebin.com | 522: Connection timed out</title>
<meta charset=""UTF-8"" />
<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"" />
<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" />
<meta name=""robots"" content=""noindex, nofollow"" />
<meta name=""viewport"" content=""width=device-width,initial-scale=1"" />
<link rel=""stylesheet"" id=""cf_styles-css"" href=""/cdn-cgi/styles/main.css"" />


</head>
<body>
<div id=""cf-wrapper"">
    <div id=""cf-error-details"" class=""p-0"">
        <header class=""mx-auto pt-10 lg:pt-6 lg:px-8 w-240 lg:w-full mb-8"">
            <h1 class=""inline-block sm:block sm:mb-2 font-light text-60 lg:text-4xl text-black-dark leading-tight mr-2"">
              <span class=""inline-block"">Connection timed out</span>
              <span class=""code-label"">Error code 522</span>
            </h1>
            <div>
               Visit <a href=""https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_522&utm_campaign=pastebin.com"" target=""_blank"" rel=""noopener noreferrer"">cloudflare.com</a> for more information.
            </div>
            <div class=""mt-3"">2024-05-23 00:16:58 UTC</div>
        </header>
        <div class=""my-8 bg-gradient-gray"">
            <div class=""w-240 lg:w-full mx-auto"">
                <div class=""clearfix md:px-8"">
                  
<div id=""cf-browser-status"" class="" relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center"">
  <div class=""relative mb-10 md:m-0"">
    
    <span class=""cf-icon-browser block md:hidden h-20 bg-center bg-no-repeat""></span>
    <span class=""cf-icon-ok w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4""></span>
    
  </div>
  <span class=""md:block w-full truncate"">You</span>
  <h3 class=""md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3"">
    
    Browser
    
  </h3>
  <span class=""leading-1.3 text-2xl text-green-success"">Working</span>
</div>

<div id=""cf-cloudflare-status"" class="" relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center"">
  <div class=""relative mb-10 md:m-0"">
    <a href=""https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_522&utm_campaign=pastebin.com"" target=""_blank"" rel=""noopener noreferrer"">
    <span class=""cf-icon-cloud block md:hidden h-20 bg-center bg-no-repeat""></span>
    <span class=""cf-icon-ok w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4""></span>
    </a>
  </div>
  <span class=""md:block w-full truncate"">Ashburn</span>
  <h3 class=""md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3"">
    <a href=""https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_522&utm_campaign=pastebin.com"" target=""_blank"" rel=""noopener noreferrer"">
    Cloudflare
    </a>
  </h3>
  <span class=""leading-1.3 text-2xl text-green-success"">Working</span>
</div>

<div id=""cf-host-status"" class=""cf-error-source relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center"">
  <div class=""relative mb-10 md:m-0"">
    
    <span class=""cf-icon-server block md:hidden h-20 bg-center bg-no-repeat""></span>
    <span class=""cf-icon-error w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4""></span>
    
  </div>
  <span class=""md:block w-full truncate"">pastebin.com</span>
  <h3 class=""md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3"">
    
    Host
    
  </h3>
  <span class=""leading-1.3 text-2xl text-red-error"">Error</span>
</div>

                </div>
            </div>
        </div>

        <div class=""w-240 lg:w-full mx-auto mb-8 lg:px-8"">
            <div class=""clearfix"">
                <div class=""w-1/2 md:w-full float-left pr-6 md:pb-10 md:pr-0 leading-relaxed"">
                    <h2 class=""text-3xl font-normal leading-1.3 mb-4"">What happened?</h2>
                    <p>The initial connection between Cloudflare's network and the origin web server timed out. As a result, the web page can not be displayed.</p>
                </div>
                <div class=""w-1/2 md:w-full float-left leading-relaxed"">
                    <h2 class=""text-3xl font-normal leading-1.3 mb-4"">What can I do?</h2>
                          <h3 class=""text-15 font-semibold mb-2"">If you're a visitor of this website:</h3>
      <p class=""mb-6"">Please try again in a few minutes.</p>

      <h3 class=""text-15 font-semibold mb-2"">If you're the owner of this website:</h3>
      <p><span>Contact your hosting provider letting them know your web server is not completing requests. An Error 522 means that the request was able to connect to your web server, but that the request didn't finish. The most likely cause is that something on your server is hogging resources.</span> <a rel=""noopener noreferrer"" href=""https://support.cloudflare.com/hc/en-us/articles/200171906-Error-522"">Additional troubleshooting information here.</a></p>
                </div>
            </div>
        </div>

        <div class=""cf-error-footer cf-wrapper w-240 lg:w-full py-10 sm:py-4 sm:px-8 mx-auto text-center sm:text-left border-solid border-0 border-t border-gray-300"">
  <p class=""text-13"">
    <span class=""cf-footer-item sm:block sm:mb-1"">Cloudflare Ray ID: <strong class=""font-semibold"">8880dbc2cefb82ed</strong></span>
    <span class=""cf-footer-separator sm:hidden"">&bull;</span>
    <span id=""cf-footer-item-ip"" class=""cf-footer-item hidden sm:block sm:mb-1"">
      Your IP:
      <button type=""button"" id=""cf-footer-ip-reveal"" class=""cf-footer-ip-reveal-btn"">Click to reveal</button>
      <span class=""hidden"" id=""cf-footer-ip"">74.249.13.179</span>
      <span class=""cf-footer-separator sm:hidden"">&bull;</span>
    </span>
    <span class=""cf-footer-item sm:block sm:mb-1""><span>Performance &amp; security by</span> <a rel=""noopener noreferrer"" href=""https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_522&utm_campaign=pastebin.com"" id=""brand_link"" target=""_blank"">Cloudflare</a></span>
    
  </p>
  <script>(function(){function d(){var b=a.getElementById(""cf-footer-item-ip""),c=a.getElementById(""cf-footer-ip-reveal"");b&&""classList""in b&&(b.classList.remove(""hidden""),c.addEventListener(""click"",function(){c.classList.add(""hidden"");a.getElementById(""cf-footer-ip"").classList.remove(""hidden"")}))}var a=document;document.addEventListener&&a.addEventListener(""DOMContentLoaded"",d)})();</script>
</div><!-- /.error-footer -->


    </div>
</div>
</body>
</html>
"
KbZEXujE,Open-DTU-1-WR-1,NittyGritty,JSON,Wednesday 22nd of May 2024 04:17:09 PM CDT,"[
    {
        ""id"": ""67b46672db338c88"",
        ""type"": ""tab"",
        ""label"": ""Open-DTU-1-WR-1"",
        ""disabled"": false,
        ""info"": """",
        ""env"": []
    },
    {
        ""id"": ""a7d81fce6977777b"",
        ""type"": ""mqtt in"",
        ""z"": ""67b46672db338c88"",
        ""name"": """",
        ""topic"": ""/home/JW/solar/#"",
        ""qos"": ""2"",
        ""datatype"": ""auto-detect"",
        ""broker"": ""1aee3213a7893e0e"",
        ""nl"": false,
        ""rap"": true,
        ""rh"": 0,
        ""inputs"": 0,
        ""x"": 140,
        ""y"": 380,
        ""wires"": [
            [
                ""7735ef1888d288bb"",
                ""731d9e4919b5d353"",
                ""a357d504ee519fca""
            ]
        ]
    },
    {
        ""id"": ""07621bc29bdd8cde"",
        ""type"": ""switch"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Wechselspannungsseite: BKW 1"",
        ""property"": ""topic"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""cont"",
                ""v"": ""/0/current"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/0/efficiency"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/0/frequency"",
                ""vt"": ""str""
            },
            {
                ""t"": ""regex"",
                ""v"": ""/0/power$"",
                ""vt"": ""str"",
                ""case"": false
            },
            {
                ""t"": ""cont"",
                ""v"": ""/0/powerdc"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/0/powerfactor"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/0/reactivepower"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/0/temperature"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/0/voltage"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/0/yieldday"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/0/yieldtotal"",
                ""vt"": ""str""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 11,
        ""x"": 830,
        ""y"": 1500,
        ""wires"": [
            [],
            [],
            [],
            [
                ""e13d6c236e06609a"",
                ""eb0cb62d875d9e34""
            ],
            [],
            [],
            [],
            [],
            [],
            [
                ""c50f6485785730c1""
            ],
            [
                ""708616d4e74aa85e""
            ]
        ]
    },
    {
        ""id"": ""2b52c2a59e9c8f0b"",
        ""type"": ""switch"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Moduldaten: BKW 1"",
        ""property"": ""topic"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""cont"",
                ""v"": ""/1/current"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/1/power"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/1/voltage"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/1/yieldday"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/1/yieldtotal"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/2/current"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/2/power"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/2/voltage"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/2/yieldday"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/2/yieldtotal"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/3/current"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/3/power"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/3/voltage"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/3/yieldday"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/3/yieldtotal"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/4/current"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/4/power"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/4/voltage"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/4/yieldday"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/4/yieldtotal"",
                ""vt"": ""str""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 20,
        ""x"": 840,
        ""y"": 720,
        ""wires"": [
            [
                ""f2888baf32f9757e""
            ],
            [
                ""eca0027d19a10001""
            ],
            [
                ""02cf87cead824b86""
            ],
            [
                ""5067959f63aef55b""
            ],
            [],
            [
                ""1e3fefcb16c2a580""
            ],
            [
                ""e81221ad5770f1f1""
            ],
            [
                ""dfb38b3d0a716c38""
            ],
            [
                ""d0607948bb69ef79""
            ],
            [],
            [
                ""3b5754dfd699b1ea""
            ],
            [
                ""1d313db997788c54""
            ],
            [
                ""59f0b16502b687bc""
            ],
            [
                ""41559b22ee47d5ce""
            ],
            [],
            [
                ""f6a3e3e155f0684f""
            ],
            [
                ""8059a3b5b4265775""
            ],
            [
                ""85a670d34e40b084""
            ],
            [
                ""4777aa1e61a119e3""
            ],
            []
        ]
    },
    {
        ""id"": ""a357d504ee519fca"",
        ""type"": ""switch"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""DTU-Daten"",
        ""property"": ""topic"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""cont"",
                ""v"": ""/ip"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/hostname"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/rssi"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/uptime"",
                ""vt"": ""str""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 4,
        ""x"": 770,
        ""y"": 360,
        ""wires"": [
            [
                ""33c62c6a178ea499""
            ],
            [
                ""61341a44a869d262""
            ],
            [
                ""458d77308b829c5a""
            ],
            [
                ""81fd6527fef968bd""
            ]
        ]
    },
    {
        ""id"": ""49067a2d23f31022"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""459aaa63cf88a451"",
        ""order"": 3,
        ""width"": 0,
        ""height"": 0,
        ""name"": """",
        ""label"": ""Gesamtproduktion"",
        ""format"": ""{{msg.payload}} kWh"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1230,
        ""y"": 1580,
        ""wires"": []
    },
    {
        ""id"": ""e13d6c236e06609a"",
        ""type"": ""ui_gauge"",
        ""z"": ""67b46672db338c88"",
        ""name"": """",
        ""group"": ""459aaa63cf88a451"",
        ""order"": 1,
        ""width"": ""0"",
        ""height"": ""0"",
        ""gtype"": ""gage"",
        ""title"": ""Momentanleistung"",
        ""label"": ""W"",
        ""format"": ""{{value}}"",
        ""min"": 0,
        ""max"": ""2000"",
        ""colors"": [
            ""#00b500"",
            ""#e6e600"",
            ""#ca3838""
        ],
        ""seg1"": """",
        ""seg2"": """",
        ""className"": """",
        ""x"": 1230,
        ""y"": 1420,
        ""wires"": []
    },
    {
        ""id"": ""c50f6485785730c1"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""459aaa63cf88a451"",
        ""order"": 4,
        ""width"": 0,
        ""height"": 0,
        ""name"": """",
        ""label"": ""Tagesproduktion"",
        ""format"": ""{{msg.payload}} Wh"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1220,
        ""y"": 1540,
        ""wires"": []
    },
    {
        ""id"": ""eca0027d19a10001"",
        ""type"": ""ui_gauge"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Panel 1: Momentanleistung"",
        ""group"": ""110d22d6abec3911"",
        ""order"": 1,
        ""width"": 0,
        ""height"": 0,
        ""gtype"": ""gage"",
        ""title"": ""Momentanleistung P1"",
        ""label"": ""Watt"",
        ""format"": ""{{value}}"",
        ""min"": 0,
        ""max"": ""400"",
        ""colors"": [
            ""#00b500"",
            ""#e6e600"",
            ""#ca3838""
        ],
        ""seg1"": """",
        ""seg2"": """",
        ""className"": """",
        ""x"": 1260,
        ""y"": 500,
        ""wires"": []
    },
    {
        ""id"": ""02cf87cead824b86"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""110d22d6abec3911"",
        ""order"": 2,
        ""width"": 0,
        ""height"": 0,
        ""name"": ""Panel 1: Spannung"",
        ""label"": ""Spannung"",
        ""format"": ""{{msg.payload}} Volt"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1230,
        ""y"": 580,
        ""wires"": []
    },
    {
        ""id"": ""f2888baf32f9757e"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""110d22d6abec3911"",
        ""order"": 3,
        ""width"": 0,
        ""height"": 0,
        ""name"": ""Panel 1: Strom"",
        ""label"": ""Strom"",
        ""format"": ""{{msg.payload}} Ampere"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1220,
        ""y"": 460,
        ""wires"": []
    },
    {
        ""id"": ""e81221ad5770f1f1"",
        ""type"": ""ui_gauge"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Panel 2: Momentanleistung"",
        ""group"": ""110d22d6abec3911"",
        ""order"": 6,
        ""width"": 0,
        ""height"": 0,
        ""gtype"": ""gage"",
        ""title"": ""Momentanleistung P2"",
        ""label"": ""Watt"",
        ""format"": ""{{value}}"",
        ""min"": 0,
        ""max"": ""400"",
        ""colors"": [
            ""#00b500"",
            ""#e6e600"",
            ""#ca3838""
        ],
        ""seg1"": """",
        ""seg2"": """",
        ""className"": """",
        ""x"": 1260,
        ""y"": 720,
        ""wires"": []
    },
    {
        ""id"": ""dfb38b3d0a716c38"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""110d22d6abec3911"",
        ""order"": 7,
        ""width"": 0,
        ""height"": 0,
        ""name"": ""Panel 2: Spannung"",
        ""label"": ""Spannung"",
        ""format"": ""{{msg.payload}} Volt"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1230,
        ""y"": 800,
        ""wires"": []
    },
    {
        ""id"": ""1e3fefcb16c2a580"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""110d22d6abec3911"",
        ""order"": 8,
        ""width"": 0,
        ""height"": 0,
        ""name"": ""Panel 2: Strom"",
        ""label"": ""Strom"",
        ""format"": ""{{msg.payload}} Ampere"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1220,
        ""y"": 680,
        ""wires"": []
    },
    {
        ""id"": ""5067959f63aef55b"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""110d22d6abec3911"",
        ""order"": 4,
        ""width"": 0,
        ""height"": 0,
        ""name"": ""Panel 1: Tagesproduktion"",
        ""label"": ""Tagesproduktion"",
        ""format"": ""{{msg.payload}} Wh"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1250,
        ""y"": 620,
        ""wires"": []
    },
    {
        ""id"": ""d0607948bb69ef79"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""110d22d6abec3911"",
        ""order"": 9,
        ""width"": 0,
        ""height"": 0,
        ""name"": ""Panel 2: Tagesproduktion"",
        ""label"": ""Tagesproduktion"",
        ""format"": ""{{msg.payload}} Wh"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1250,
        ""y"": 840,
        ""wires"": []
    },
    {
        ""id"": ""eb0cb62d875d9e34"",
        ""type"": ""ui_chart"",
        ""z"": ""67b46672db338c88"",
        ""name"": """",
        ""group"": ""459aaa63cf88a451"",
        ""order"": 2,
        ""width"": 0,
        ""height"": 0,
        ""label"": ""Leistungsverlauf"",
        ""chartType"": ""line"",
        ""legend"": ""false"",
        ""xformat"": ""HH:mm:ss"",
        ""interpolate"": ""linear"",
        ""nodata"": """",
        ""dot"": false,
        ""ymin"": ""0"",
        ""ymax"": ""2000"",
        ""removeOlder"": ""12"",
        ""removeOlderPoints"": """",
        ""removeOlderUnit"": ""3600"",
        ""cutout"": 0,
        ""useOneColor"": false,
        ""useUTC"": false,
        ""colors"": [
            ""#1f77b4"",
            ""#aec7e8"",
            ""#ff7f0e"",
            ""#2ca02c"",
            ""#98df8a"",
            ""#d62728"",
            ""#ff9896"",
            ""#9467bd"",
            ""#c5b0d5""
        ],
        ""outputs"": 1,
        ""useDifferentColor"": false,
        ""className"": """",
        ""x"": 1220,
        ""y"": 1460,
        ""wires"": [
            []
        ]
    },
    {
        ""id"": ""61341a44a869d262"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""8a2b7e69bc92a27a"",
        ""order"": 2,
        ""width"": ""0"",
        ""height"": ""0"",
        ""name"": ""Hostname"",
        ""label"": ""Hostname"",
        ""format"": ""{{msg.payload}}"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1210,
        ""y"": 320,
        ""wires"": []
    },
    {
        ""id"": ""33c62c6a178ea499"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""8a2b7e69bc92a27a"",
        ""order"": 3,
        ""width"": ""0"",
        ""height"": ""0"",
        ""name"": ""IP-Adresse"",
        ""label"": ""IP-Adresse"",
        ""format"": ""{{msg.payload}}"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1210,
        ""y"": 280,
        ""wires"": []
    },
    {
        ""id"": ""7735ef1888d288bb"",
        ""type"": ""switch"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""WR-Namen"",
        ""property"": ""topic"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""cont"",
                ""v"": ""/name"",
                ""vt"": ""str""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 1,
        ""x"": 770,
        ""y"": 300,
        ""wires"": [
            [
                ""f35d012dc5b68713""
            ]
        ]
    },
    {
        ""id"": ""458d77308b829c5a"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""8a2b7e69bc92a27a"",
        ""order"": 4,
        ""width"": ""0"",
        ""height"": ""0"",
        ""name"": ""WLAN-Signalstärke"",
        ""label"": ""WLAN-Signalstärke"",
        ""format"": ""{{msg.payload}} dBm"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1230,
        ""y"": 360,
        ""wires"": []
    },
    {
        ""id"": ""f35d012dc5b68713"",
        ""type"": ""join"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Namen zusammenfügen"",
        ""mode"": ""custom"",
        ""build"": ""string"",
        ""property"": ""payload"",
        ""propertyType"": ""msg"",
        ""key"": ""topic"",
        ""joiner"": "", "",
        ""joinerType"": ""str"",
        ""accumulate"": false,
        ""timeout"": ""1"",
        ""count"": """",
        ""reduceRight"": false,
        ""reduceExp"": """",
        ""reduceInit"": """",
        ""reduceInitType"": """",
        ""reduceFixup"": """",
        ""x"": 810,
        ""y"": 240,
        ""wires"": [
            [
                ""a91e9ebe137a015a""
            ]
        ]
    },
    {
        ""id"": ""a91e9ebe137a015a"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""d"": true,
        ""group"": ""8a2b7e69bc92a27a"",
        ""order"": 5,
        ""width"": 0,
        ""height"": 0,
        ""name"": ""Bediente Wechselrichter"",
        ""label"": ""Bediente Wechselrichter"",
        ""format"": ""{{msg.payload}}"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1250,
        ""y"": 240,
        ""wires"": []
    },
    {
        ""id"": ""731d9e4919b5d353"",
        ""type"": ""switch"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Wechselrichter-Seriennummer"",
        ""property"": ""topic"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""cont"",
                ""v"": ""116162810751"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""116183924145"",
                ""vt"": ""str""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 2,
        ""x"": 450,
        ""y"": 820,
        ""wires"": [
            [
                ""2b52c2a59e9c8f0b"",
                ""07621bc29bdd8cde"",
                ""dd36e82b2c28f357"",
                ""8654a9845731a2a8""
            ],
            [
                ""bf81db276f9dc887"",
                ""8235fbcdd150b8c9""
            ]
        ]
    },
    {
        ""id"": ""1d313db997788c54"",
        ""type"": ""ui_gauge"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Panel 3: Momentanleistung"",
        ""group"": ""ce3549f1898bdf0b"",
        ""order"": 1,
        ""width"": 0,
        ""height"": 0,
        ""gtype"": ""gage"",
        ""title"": ""Momentanleistung P3"",
        ""label"": ""Watt"",
        ""format"": ""{{value}}"",
        ""min"": 0,
        ""max"": ""400"",
        ""colors"": [
            ""#00b500"",
            ""#e6e600"",
            ""#ca3838""
        ],
        ""seg1"": """",
        ""seg2"": """",
        ""className"": """",
        ""x"": 1260,
        ""y"": 940,
        ""wires"": []
    },
    {
        ""id"": ""59f0b16502b687bc"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""ce3549f1898bdf0b"",
        ""order"": 2,
        ""width"": 0,
        ""height"": 0,
        ""name"": ""Panel 3: Spannung"",
        ""label"": ""Spannung"",
        ""format"": ""{{msg.payload}} Volt"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1230,
        ""y"": 1020,
        ""wires"": []
    },
    {
        ""id"": ""3b5754dfd699b1ea"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""ce3549f1898bdf0b"",
        ""order"": 3,
        ""width"": 0,
        ""height"": 0,
        ""name"": ""Panel 3: Strom"",
        ""label"": ""Strom"",
        ""format"": ""{{msg.payload}} Ampere"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1220,
        ""y"": 900,
        ""wires"": []
    },
    {
        ""id"": ""41559b22ee47d5ce"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""ce3549f1898bdf0b"",
        ""order"": 4,
        ""width"": 0,
        ""height"": 0,
        ""name"": ""Panel 3: Tagesproduktion"",
        ""label"": ""Tagesproduktion"",
        ""format"": ""{{msg.payload}} Wh"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1250,
        ""y"": 1060,
        ""wires"": []
    },
    {
        ""id"": ""8059a3b5b4265775"",
        ""type"": ""ui_gauge"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Panel 4: Momentanleistung"",
        ""group"": ""ce3549f1898bdf0b"",
        ""order"": 5,
        ""width"": 0,
        ""height"": 0,
        ""gtype"": ""gage"",
        ""title"": ""Momentanleistung P4"",
        ""label"": ""Watt"",
        ""format"": ""{{value}}"",
        ""min"": 0,
        ""max"": ""400"",
        ""colors"": [
            ""#00b500"",
            ""#e6e600"",
            ""#ca3838""
        ],
        ""seg1"": """",
        ""seg2"": """",
        ""className"": """",
        ""x"": 1260,
        ""y"": 1160,
        ""wires"": []
    },
    {
        ""id"": ""85a670d34e40b084"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""ce3549f1898bdf0b"",
        ""order"": 6,
        ""width"": 0,
        ""height"": 0,
        ""name"": ""Panel 4: Spannung"",
        ""label"": ""Spannung"",
        ""format"": ""{{msg.payload}} Volt"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1230,
        ""y"": 1240,
        ""wires"": []
    },
    {
        ""id"": ""f6a3e3e155f0684f"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""ce3549f1898bdf0b"",
        ""order"": 7,
        ""width"": 0,
        ""height"": 0,
        ""name"": ""Panel 4: Strom"",
        ""label"": ""Strom"",
        ""format"": ""{{msg.payload}} Ampere"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1220,
        ""y"": 1120,
        ""wires"": []
    },
    {
        ""id"": ""4777aa1e61a119e3"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""ce3549f1898bdf0b"",
        ""order"": 8,
        ""width"": 0,
        ""height"": 0,
        ""name"": ""Panel 4: Tagesproduktion"",
        ""label"": ""Tagesproduktion"",
        ""format"": ""{{msg.payload}} Wh"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1250,
        ""y"": 1280,
        ""wires"": []
    },
    {
        ""id"": ""774ddfbab4253231"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""8a2b7e69bc92a27a"",
        ""order"": 1,
        ""width"": ""0"",
        ""height"": ""0"",
        ""name"": """",
        ""label"": ""Uptime: "",
        ""format"": ""{{msg.payload}}"",
        ""layout"": ""row-spread"",
        ""className"": """",
        ""x"": 1200,
        ""y"": 400,
        ""wires"": []
    },
    {
        ""id"": ""dd36e82b2c28f357"",
        ""type"": ""switch"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Status Display"",
        ""property"": ""topic"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""cont"",
                ""v"": ""/reachable"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/producing"",
                ""vt"": ""str""
            },
            {
                ""t"": ""cont"",
                ""v"": ""/last_update"",
                ""vt"": ""str""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 3,
        ""x"": 780,
        ""y"": 1780,
        ""wires"": [
            [
                ""9a055110d5a0a95e""
            ],
            [
                ""be479ffc4936d189"",
                ""153723416ff79191""
            ],
            [
                ""af7e46b147d1da2a""
            ]
        ]
    },
    {
        ""id"": ""9a055110d5a0a95e"",
        ""type"": ""ui_led"",
        ""z"": ""67b46672db338c88"",
        ""order"": 2,
        ""group"": ""2a952f6bd293d8ca"",
        ""width"": ""0"",
        ""height"": ""0"",
        ""label"": ""Reachable"",
        ""labelPlacement"": ""left"",
        ""labelAlignment"": ""left"",
        ""colorForValue"": [
            {
                ""color"": ""#ff0000"",
                ""value"": ""0"",
                ""valueType"": ""num""
            },
            {
                ""color"": ""#008000"",
                ""value"": ""1"",
                ""valueType"": ""num""
            }
        ],
        ""allowColorForValueInMessage"": false,
        ""shape"": ""square"",
        ""showGlow"": true,
        ""name"": ""Reachable"",
        ""x"": 1210,
        ""y"": 1660,
        ""wires"": [],
        ""icon"": ""node-red/light.svg""
    },
    {
        ""id"": ""be479ffc4936d189"",
        ""type"": ""ui_led"",
        ""z"": ""67b46672db338c88"",
        ""order"": 1,
        ""group"": ""2a952f6bd293d8ca"",
        ""width"": ""0"",
        ""height"": ""0"",
        ""label"": ""Producing"",
        ""labelPlacement"": ""left"",
        ""labelAlignment"": ""left"",
        ""colorForValue"": [
            {
                ""color"": ""#ff0000"",
                ""value"": ""0"",
                ""valueType"": ""num""
            },
            {
                ""color"": ""#008000"",
                ""value"": ""1"",
                ""valueType"": ""num""
            }
        ],
        ""allowColorForValueInMessage"": false,
        ""shape"": ""square"",
        ""showGlow"": true,
        ""name"": ""Producing"",
        ""x"": 1200,
        ""y"": 1760,
        ""wires"": [],
        ""icon"": ""node-red/alert.svg""
    },
    {
        ""id"": ""f2a7318464db2f10"",
        ""type"": ""debug"",
        ""z"": ""67b46672db338c88"",
        ""name"": """",
        ""active"": true,
        ""tosidebar"": false,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 1210,
        ""y"": 1880,
        ""wires"": []
    },
    {
        ""id"": ""551d18d5e0a9f085"",
        ""type"": ""moment"",
        ""z"": ""67b46672db338c88"",
        ""name"": """",
        ""topic"": """",
        ""input"": ""payload"",
        ""inputType"": ""msg"",
        ""inTz"": ""ETC/GMT"",
        ""adjAmount"": ""0"",
        ""adjType"": ""hours"",
        ""adjDir"": ""subtract"",
        ""format"": ""dd DD. MMMM YYYY HH:mm:ss "",
        ""locale"": ""de_DE"",
        ""output"": """",
        ""outputType"": ""msg"",
        ""outTz"": ""Europe/Berlin"",
        ""x"": 1160,
        ""y"": 1840,
        ""wires"": [
            [
                ""f2a7318464db2f10"",
                ""9d372935bfd1ab7a""
            ]
        ]
    },
    {
        ""id"": ""9d372935bfd1ab7a"",
        ""type"": ""ui_text"",
        ""z"": ""67b46672db338c88"",
        ""group"": ""2a952f6bd293d8ca"",
        ""order"": 4,
        ""width"": ""4"",
        ""height"": 2,
        ""name"": ""Last Update"",
        ""label"": ""last update"",
        ""format"": ""{{msg.payload}}"",
        ""layout"": ""col-center"",
        ""className"": """",
        ""x"": 1210,
        ""y"": 1800,
        ""wires"": []
    },
    {
        ""id"": ""af7e46b147d1da2a"",
        ""type"": ""function"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Convert to ms"",
        ""func"": ""var DateTime = msg.payload * 1000;\nreturn {payload:DateTime};"",
        ""outputs"": 1,
        ""noerr"": 0,
        ""initialize"": """",
        ""finalize"": """",
        ""libs"": [],
        ""x"": 960,
        ""y"": 1840,
        ""wires"": [
            [
                ""551d18d5e0a9f085""
            ]
        ]
    },
    {
        ""id"": ""81fd6527fef968bd"",
        ""type"": ""function"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Convert to \""h m s\"""",
        ""func"": ""var seconds = msg.payload;\nvar h = Math.floor(seconds / (60 * 60));\nvar m = Math.floor(seconds % (60 * 60) / 60);\nvar s = Math.floor(seconds % 60 / 1);\nvar hms = h + \""h \"" + m + \""m \"" + s + \""s\"";\n\nnode.status({\n    fill: \""blue\"", shape: \""ring\"", text: \""Uptime: \"" + hms\n});\n\nreturn {payload:hms};"",
        ""outputs"": 1,
        ""noerr"": 0,
        ""initialize"": """",
        ""finalize"": """",
        ""libs"": [],
        ""x"": 1030,
        ""y"": 400,
        ""wires"": [
            [
                ""774ddfbab4253231""
            ]
        ]
    },
    {
        ""id"": ""708616d4e74aa85e"",
        ""type"": ""function"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""round up"",
        ""func"": ""var kWh = msg.payload;\nvar kWh1 = parseFloat(kWh.toFixed(1));\nreturn {payload:kWh1};"",
        ""outputs"": 1,
        ""noerr"": 0,
        ""initialize"": """",
        ""finalize"": """",
        ""libs"": [],
        ""x"": 1080,
        ""y"": 1620,
        ""wires"": [
            [
                ""49067a2d23f31022""
            ]
        ]
    },
    {
        ""id"": ""a41f365b540aab2e"",
        ""type"": ""comment"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Dashboard DTU 1: GS"",
        ""info"": """",
        ""x"": 160,
        ""y"": 200,
        ""wires"": []
    },
    {
        ""id"": ""3ed472415d59252f"",
        ""type"": ""comment"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Dashboard Panel 1 - 4"",
        ""info"": """",
        ""x"": 160,
        ""y"": 580,
        ""wires"": []
    },
    {
        ""id"": ""288b23a279db5e93"",
        ""type"": ""comment"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Dashboard BKW1: HM-1500 GS"",
        ""info"": """",
        ""x"": 170,
        ""y"": 1520,
        ""wires"": []
    },
    {
        ""id"": ""9b311c3f11b2edab"",
        ""type"": ""comment"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Dashboard WR-Status"",
        ""info"": """",
        ""x"": 160,
        ""y"": 1720,
        ""wires"": []
    },
    {
        ""id"": ""bf81db276f9dc887"",
        ""type"": ""link out"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Open-DTU-WR-2-Out"",
        ""mode"": ""link"",
        ""links"": [
            ""2b68ad87487c88dc""
        ],
        ""x"": 685,
        ""y"": 900,
        ""wires"": []
    },
    {
        ""id"": ""17a4c555694b5d00"",
        ""type"": ""join"",
        ""z"": ""67b46672db338c88"",
        ""name"": """",
        ""mode"": ""custom"",
        ""build"": ""object"",
        ""property"": ""payload"",
        ""propertyType"": ""msg"",
        ""key"": ""topic"",
        ""joiner"": ""\\n"",
        ""joinerType"": ""str"",
        ""accumulate"": false,
        ""timeout"": ""3"",
        ""count"": """",
        ""reduceRight"": false,
        ""reduceExp"": """",
        ""reduceInit"": """",
        ""reduceInitType"": """",
        ""reduceFixup"": """",
        ""x"": 270,
        ""y"": 1120,
        ""wires"": [
            [
                ""4a876dd3052e804d"",
                ""ee70914d74c5b307""
            ]
        ]
    },
    {
        ""id"": ""4de39906772d3736"",
        ""type"": ""function"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""function 2"",
        ""func"": ""// /home/JW/solar/116162810751/0/yieldtotal -> 0yieldtotal\n// /home/JW/solar/116162810751/4/power -> 4power\nvar words = msg.topic.split('/');\nvar Serial = (words[4]);\nvar Panel = (words[5]);\nvar FieldName = (words[6]);\nFieldName = FieldName + Panel ;\nmsg.topic=FieldName;\nmsg.Serial= Serial;\nreturn msg;"",
        ""outputs"": 1,
        ""noerr"": 0,
        ""initialize"": """",
        ""finalize"": """",
        ""libs"": [],
        ""x"": 260,
        ""y"": 1060,
        ""wires"": [
            [
                ""17a4c555694b5d00"",
                ""b7d52756a7f01d12""
            ]
        ]
    },
    {
        ""id"": ""4a876dd3052e804d"",
        ""type"": ""function"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""function 3"",
        ""func"": ""var Serial = msg.Serial;\n\nvar power0 = msg.payload.power0;\nvar power1 = msg.payload.power1;\nvar power2 = msg.payload.power2;\nvar power3 = msg.payload.power3;\nvar power4 = msg.payload.power4;\n\nvar yieldday0 = msg.payload.yieldday0;\nvar yieldday1 = msg.payload.yieldday1;\nvar yieldday2 = msg.payload.yieldday2;\nvar yieldday3 = msg.payload.yieldday3;\nvar yieldday4 = msg.payload.yieldday4;\n\nvar yieldtotal0 = msg.payload.yieldtotal0;\nvar yieldtotal1 = msg.payload.yieldtotal1;\nvar yieldtotal2 = msg.payload.yieldtotal2;\nvar yieldtotal3 = msg.payload.yieldtotal3;\nvar yieldtotal4 = msg.payload.yieldtotal4;\n\nvar voltage0 = msg.payload.voltage0;\nvar voltage1 = msg.payload.voltage1;\nvar voltage2 = msg.payload.voltage2;\nvar voltage3 = msg.payload.voltage3;\nvar voltage4 = msg.payload.voltage4;\n\nvar current0 = msg.payload.current0;\nvar current1 = msg.payload.current1;\nvar current2 = msg.payload.current2;\nvar current3 = msg.payload.current3;\nvar current4 = msg.payload.current4;\n\n// Values from WR only (output to Grid)\nvar Temp = msg.payload.temperature0;\nvar Voltage = msg.payload.voltage0;\nvar Freq = msg.payload.frequency0;\n\nvar Influx = [{\n    Serial: Serial,\n\n    Power0: power0,\n    Power1: power1,\n    Power2: power2,\n    Power3: power3,\n    Power4: power4,\n\n    YieldDay0: yieldday0,\n    YieldDay1: yieldday1,\n    YieldDay2: yieldday2,\n    YieldDay3: yieldday3,\n    YieldDay4: yieldday4,\n\n    YieldTotal0: yieldtotal0,\n    YieldTotal1: yieldtotal1,\n    YieldTotal2: yieldtotal2,\n    YieldTotal3: yieldtotal3,\n    YieldTotal4: yieldtotal4,\n\n    Voltage0: voltage0,\n    Voltage1: voltage1,\n    Voltage2: voltage2,\n    Voltage3: voltage3,\n    Voltage4: voltage4,\n\n    Current0: current0,\n    Current1: current1,\n    Current2: current2,\n    Current3: current3,\n    Current4: current4,\n\n    Temp: Temp,\n    Voltage: Voltage,\n    Freq: Freq\n\n}]\n\nnode.status({\n    fill: \""blue\"", shape: \""ring\"", text: Serial + \"" \""\n});\n\nvar Influx1 = { payload: Influx };\nvar time = Date.now();\nvar Time1 = { payload: time };\n\nreturn [Influx1, Time1];\n\n"",
        ""outputs"": 2,
        ""noerr"": 0,
        ""initialize"": """",
        ""finalize"": """",
        ""libs"": [],
        ""x"": 260,
        ""y"": 1180,
        ""wires"": [
            [
                ""0e5a2761cc02ce2f"",
                ""021a0677dc11cef7""
            ],
            [
                ""fd4f2368225e8e13""
            ]
        ]
    },
    {
        ""id"": ""0e5a2761cc02ce2f"",
        ""type"": ""debug"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""debug 16"",
        ""active"": false,
        ""tosidebar"": true,
        ""console"": false,
        ""tostatus"": false,
        ""complete"": ""false"",
        ""statusVal"": """",
        ""statusType"": ""auto"",
        ""x"": 460,
        ""y"": 1160,
        ""wires"": []
    },
    {
        ""id"": ""021a0677dc11cef7"",
        ""type"": ""link out"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""WR-1-Influx-Out"",
        ""mode"": ""link"",
        ""links"": [
            ""33ccdd9af5d41741""
        ],
        ""x"": 415,
        ""y"": 1200,
        ""wires"": []
    },
    {
        ""id"": ""b7d52756a7f01d12"",
        ""type"": ""debug"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""debug 17"",
        ""active"": false,
        ""tosidebar"": true,
        ""console"": false,
        ""tostatus"": false,
        ""complete"": ""true"",
        ""targetType"": ""full"",
        ""statusVal"": """",
        ""statusType"": ""auto"",
        ""x"": 460,
        ""y"": 1000,
        ""wires"": []
    },
    {
        ""id"": ""ee70914d74c5b307"",
        ""type"": ""debug"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""debug 18"",
        ""active"": false,
        ""tosidebar"": true,
        ""console"": false,
        ""tostatus"": false,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": """",
        ""statusType"": ""auto"",
        ""x"": 460,
        ""y"": 1080,
        ""wires"": []
    },
    {
        ""id"": ""1dd479370234a46e"",
        ""type"": ""join"",
        ""z"": ""67b46672db338c88"",
        ""name"": """",
        ""mode"": ""custom"",
        ""build"": ""object"",
        ""property"": ""payload"",
        ""propertyType"": ""msg"",
        ""key"": ""topic"",
        ""joiner"": ""\\n"",
        ""joinerType"": ""str"",
        ""accumulate"": false,
        ""timeout"": ""3"",
        ""count"": """",
        ""reduceRight"": false,
        ""reduceExp"": """",
        ""reduceInit"": """",
        ""reduceInitType"": """",
        ""reduceFixup"": """",
        ""x"": 750,
        ""y"": 1120,
        ""wires"": [
            [
                ""43c6426e3b12901c"",
                ""6a469cbaba841203""
            ]
        ]
    },
    {
        ""id"": ""d03113ef9277bbcc"",
        ""type"": ""function"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""function 4"",
        ""func"": ""// /home/JW/solar/116162810751/0/yieldtotal -> 0yieldtotal\n// /home/JW/solar/116162810751/4/power -> 4power\nvar words = msg.topic.split('/');\nvar Serial = (words[4]);\nvar Panel = (words[5]);\nvar FieldName = (words[6]);\nFieldName = FieldName + Panel;\nmsg.topic = FieldName;\nmsg.Serial = Serial;\nreturn msg;"",
        ""outputs"": 1,
        ""noerr"": 0,
        ""initialize"": """",
        ""finalize"": """",
        ""libs"": [],
        ""x"": 740,
        ""y"": 1060,
        ""wires"": [
            [
                ""1dd479370234a46e"",
                ""490bccec8509d8b8""
            ]
        ]
    },
    {
        ""id"": ""43c6426e3b12901c"",
        ""type"": ""function"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""function 5"",
        ""func"": ""var Serial = msg.Serial;\n\nvar power0 = msg.payload.power0;\nvar power1 = msg.payload.power1;\nvar power2 = msg.payload.power2;\nvar power3 = msg.payload.power3;\nvar power4 = msg.payload.power4;\n\nvar yieldday0 = msg.payload.yieldday0;\nvar yieldday1 = msg.payload.yieldday1;\nvar yieldday2 = msg.payload.yieldday2;\nvar yieldday3 = msg.payload.yieldday3;\nvar yieldday4 = msg.payload.yieldday4;\n\nvar yieldtotal0 = msg.payload.yieldtotal0;\nvar yieldtotal1 = msg.payload.yieldtotal1;\nvar yieldtotal2 = msg.payload.yieldtotal2;\nvar yieldtotal3 = msg.payload.yieldtotal3;\nvar yieldtotal4 = msg.payload.yieldtotal4;\n\nvar voltage0 = msg.payload.voltage0;\nvar voltage1 = msg.payload.voltage1;\nvar voltage2 = msg.payload.voltage2;\nvar voltage3 = msg.payload.voltage3;\nvar voltage4 = msg.payload.voltage4;\n\nvar current0 = msg.payload.current0;\nvar current1 = msg.payload.current1;\nvar current2 = msg.payload.current2;\nvar current3 = msg.payload.current3;\nvar current4 = msg.payload.current4;\n\n// Values from WR only (output to Grid)\nvar Temp = msg.payload.temperature0;\nvar Voltage = msg.payload.voltage0;\nvar Freq = msg.payload.frequency0;\n\nvar Influx = [{\n    Serial: Serial,\n\n    Power0: power0,\n    Power1: power1,\n    Power2: power2,\n    Power3: power3,\n    Power4: power4,\n\n    YieldDay0: yieldday0,\n    YieldDay1: yieldday1,\n    YieldDay2: yieldday2,\n    YieldDay3: yieldday3,\n    YieldDay4: yieldday4,\n\n    YieldTotal0: yieldtotal0,\n    YieldTotal1: yieldtotal1,\n    YieldTotal2: yieldtotal2,\n    YieldTotal3: yieldtotal3,\n    YieldTotal4: yieldtotal4,\n\n    Voltage0: voltage0,\n    Voltage1: voltage1,\n    Voltage2: voltage2,\n    Voltage3: voltage3,\n    Voltage4: voltage4,\n\n    Current0: current0,\n    Current1: current1,\n    Current2: current2,\n    Current3: current3,\n    Current4: current4,\n\n    Temp: Temp,\n    Voltage: Voltage,\n    Freq: Freq\n\n}]\n\nnode.status({\n    fill: \""blue\"", shape: \""ring\"", text: Serial + \"" \""\n});\n\nvar Influx1 = { payload: Influx };\nvar time = Date.now();\nvar Time1 = { payload: time };\n\nreturn [Influx1, Time1];\n\n"",
        ""outputs"": 2,
        ""noerr"": 0,
        ""initialize"": """",
        ""finalize"": """",
        ""libs"": [],
        ""x"": 740,
        ""y"": 1180,
        ""wires"": [
            [
                ""173bc3bef4216221"",
                ""02bc127bc7371a0f""
            ],
            [
                ""4dd518daec4282be""
            ]
        ]
    },
    {
        ""id"": ""173bc3bef4216221"",
        ""type"": ""debug"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Influx-DB-Out"",
        ""active"": false,
        ""tosidebar"": true,
        ""console"": false,
        ""tostatus"": false,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": """",
        ""statusType"": ""auto"",
        ""x"": 940,
        ""y"": 1160,
        ""wires"": []
    },
    {
        ""id"": ""02bc127bc7371a0f"",
        ""type"": ""link out"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""WR-2-Influx-Out"",
        ""mode"": ""link"",
        ""links"": [
            ""33ccdd9af5d41741""
        ],
        ""x"": 885,
        ""y"": 1200,
        ""wires"": []
    },
    {
        ""id"": ""490bccec8509d8b8"",
        ""type"": ""debug"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""debug 20"",
        ""active"": false,
        ""tosidebar"": true,
        ""console"": false,
        ""tostatus"": false,
        ""complete"": ""true"",
        ""targetType"": ""full"",
        ""statusVal"": """",
        ""statusType"": ""auto"",
        ""x"": 920,
        ""y"": 1020,
        ""wires"": []
    },
    {
        ""id"": ""6a469cbaba841203"",
        ""type"": ""debug"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""debug 21"",
        ""active"": false,
        ""tosidebar"": true,
        ""console"": false,
        ""tostatus"": false,
        ""complete"": ""true"",
        ""targetType"": ""full"",
        ""statusVal"": """",
        ""statusType"": ""auto"",
        ""x"": 920,
        ""y"": 1080,
        ""wires"": []
    },
    {
        ""id"": ""153723416ff79191"",
        ""type"": ""function"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Store \""Producing\"" as Global Variable"",
        ""func"": ""var Producing = msg.payload;\nglobal.set(\""WR1-Producing\"", Producing)\n\nnode.status({\n    fill: \""blue\"", shape: \""ring\"", text: \""Producing: \""+ Producing\n});\n\nreturn msg;"",
        ""outputs"": 1,
        ""noerr"": 0,
        ""initialize"": """",
        ""finalize"": """",
        ""libs"": [],
        ""x"": 1290,
        ""y"": 1700,
        ""wires"": [
            []
        ]
    },
    {
        ""id"": ""8654a9845731a2a8"",
        ""type"": ""switch"",
        ""z"": ""67b46672db338c88"",
        ""name"": """",
        ""property"": ""WR1-Producing"",
        ""propertyType"": ""global"",
        ""rules"": [
            {
                ""t"": ""eq"",
                ""v"": ""1"",
                ""vt"": ""num""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 1,
        ""x"": 270,
        ""y"": 1000,
        ""wires"": [
            [
                ""4de39906772d3736""
            ]
        ]
    },
    {
        ""id"": ""8235fbcdd150b8c9"",
        ""type"": ""switch"",
        ""z"": ""67b46672db338c88"",
        ""name"": """",
        ""property"": ""WR1-Producing"",
        ""propertyType"": ""global"",
        ""rules"": [
            {
                ""t"": ""eq"",
                ""v"": ""1"",
                ""vt"": ""str""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 1,
        ""x"": 730,
        ""y"": 1000,
        ""wires"": [
            [
                ""d03113ef9277bbcc""
            ]
        ]
    },
    {
        ""id"": ""fd4f2368225e8e13"",
        ""type"": ""moment"",
        ""z"": ""67b46672db338c88"",
        ""name"": """",
        ""topic"": """",
        ""input"": ""payload"",
        ""inputType"": ""msg"",
        ""inTz"": ""ETC/GMT"",
        ""adjAmount"": ""0"",
        ""adjType"": ""hours"",
        ""adjDir"": ""subtract"",
        ""format"": ""dd DD. MMMM YYYY HH:mm:ss "",
        ""locale"": ""de_DE"",
        ""output"": """",
        ""outputType"": ""msg"",
        ""outTz"": ""Europe/Berlin"",
        ""x"": 500,
        ""y"": 1240,
        ""wires"": [
            [
                ""24c162118cc9b596""
            ]
        ]
    },
    {
        ""id"": ""24c162118cc9b596"",
        ""type"": ""debug"",
        ""z"": ""67b46672db338c88"",
        ""name"": """",
        ""active"": false,
        ""tosidebar"": true,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 470,
        ""y"": 1280,
        ""wires"": []
    },
    {
        ""id"": ""4dd518daec4282be"",
        ""type"": ""moment"",
        ""z"": ""67b46672db338c88"",
        ""name"": """",
        ""topic"": """",
        ""input"": ""payload"",
        ""inputType"": ""msg"",
        ""inTz"": ""ETC/GMT"",
        ""adjAmount"": ""0"",
        ""adjType"": ""hours"",
        ""adjDir"": ""subtract"",
        ""format"": ""dd DD. MMMM YYYY HH:mm:ss "",
        ""locale"": ""de_DE"",
        ""output"": """",
        ""outputType"": ""msg"",
        ""outTz"": ""Europe/Berlin"",
        ""x"": 960,
        ""y"": 1240,
        ""wires"": [
            [
                ""f756a4e84b28890f""
            ]
        ]
    },
    {
        ""id"": ""f756a4e84b28890f"",
        ""type"": ""debug"",
        ""z"": ""67b46672db338c88"",
        ""name"": """",
        ""active"": false,
        ""tosidebar"": true,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 930,
        ""y"": 1280,
        ""wires"": []
    },
    {
        ""id"": ""7c9e67f106d6c33f"",
        ""type"": ""influxdb out"",
        ""z"": ""67b46672db338c88"",
        ""influxdb"": ""5eb30425.ba7dbc"",
        ""name"": ""JW (local)"",
        ""measurement"": ""Werte"",
        ""precision"": """",
        ""retentionPolicy"": """",
        ""database"": """",
        ""retentionPolicyV18Flux"": """",
        ""org"": """",
        ""bucket"": """",
        ""x"": 820,
        ""y"": 60,
        ""wires"": []
    },
    {
        ""id"": ""33ccdd9af5d41741"",
        ""type"": ""link in"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""Influx-All-In"",
        ""links"": [
            ""e9ebc005ec9d3a49"",
            ""6df4b532721b259e"",
            ""3b2fe42d8352705c"",
            ""b57b6d6933cc9b82"",
            ""15deadbca4d5b209"",
            ""021a0677dc11cef7"",
            ""02bc127bc7371a0f""
        ],
        ""x"": 605,
        ""y"": 60,
        ""wires"": [
            [
                ""7c9e67f106d6c33f""
            ]
        ]
    },
    {
        ""id"": ""706f124bcaf5c0ad"",
        ""type"": ""comment"",
        ""z"": ""67b46672db338c88"",
        ""name"": ""write to Influx DB"",
        ""info"": """",
        ""x"": 140,
        ""y"": 60,
        ""wires"": []
    },
    {
        ""id"": ""1aee3213a7893e0e"",
        ""type"": ""mqtt-broker"",
        ""name"": """",
        ""broker"": ""192.168.123.16"",
        ""port"": ""1883"",
        ""clientid"": """",
        ""autoConnect"": true,
        ""usetls"": false,
        ""protocolVersion"": ""4"",
        ""keepalive"": ""60"",
        ""cleansession"": true,
        ""autoUnsubscribe"": true,
        ""birthTopic"": """",
        ""birthQos"": ""0"",
        ""birthPayload"": """",
        ""birthMsg"": {},
        ""closeTopic"": """",
        ""closeQos"": ""0"",
        ""closePayload"": """",
        ""closeMsg"": {},
        ""willTopic"": """",
        ""willQos"": ""0"",
        ""willPayload"": """",
        ""willMsg"": {},
        ""userProps"": """",
        ""sessionExpiry"": """"
    },
    {
        ""id"": ""459aaa63cf88a451"",
        ""type"": ""ui_group"",
        ""name"": ""BKW: HM-1500 GS-WR-1"",
        ""tab"": ""e7a466ecbe93e634"",
        ""order"": 3,
        ""disp"": true,
        ""width"": ""5"",
        ""collapse"": false,
        ""className"": """"
    },
    {
        ""id"": ""110d22d6abec3911"",
        ""type"": ""ui_group"",
        ""name"": ""Panel 1 + 2-WR-1"",
        ""tab"": ""e7a466ecbe93e634"",
        ""order"": 4,
        ""disp"": true,
        ""width"": ""4"",
        ""collapse"": false,
        ""className"": """"
    },
    {
        ""id"": ""8a2b7e69bc92a27a"",
        ""type"": ""ui_group"",
        ""name"": ""DTU: GS-WR-1"",
        ""tab"": ""e7a466ecbe93e634"",
        ""order"": 1,
        ""disp"": true,
        ""width"": ""5"",
        ""collapse"": false,
        ""className"": """"
    },
    {
        ""id"": ""ce3549f1898bdf0b"",
        ""type"": ""ui_group"",
        ""name"": ""Panel 3 + 4-WR-1"",
        ""tab"": ""e7a466ecbe93e634"",
        ""order"": 5,
        ""disp"": true,
        ""width"": ""4"",
        ""collapse"": false,
        ""className"": """"
    },
    {
        ""id"": ""2a952f6bd293d8ca"",
        ""type"": ""ui_group"",
        ""name"": ""WR-Status-WR-1"",
        ""tab"": ""e7a466ecbe93e634"",
        ""order"": 2,
        ""disp"": true,
        ""width"": ""4"",
        ""collapse"": false,
        ""className"": """"
    },
    {
        ""id"": ""5eb30425.ba7dbc"",
        ""type"": ""influxdb"",
        ""hostname"": ""192.168.178.4"",
        ""port"": ""8086"",
        ""protocol"": ""http"",
        ""database"": ""JW01"",
        ""name"": ""JW01"",
        ""usetls"": false,
        ""tls"": """",
        ""influxdbVersion"": ""1.x"",
        ""url"": """",
        ""rejectUnauthorized"": false
    },
    {
        ""id"": ""e7a466ecbe93e634"",
        ""type"": ""ui_tab"",
        ""name"": ""Solardaten WR-1"",
        ""icon"": ""dashboard"",
        ""order"": 1,
        ""disabled"": false,
        ""hidden"": false
    }
]"
mq5ujcjx,ChemicalTankInstaller,advtech,Lua,Wednesday 22nd of May 2024 04:08:51 PM CDT,"-- Installer Script: installer.lua
local function detectPeripheralType()
    local sides = {""left"", ""right"", ""top"", ""bottom"", ""front"", ""back""}
    local detected = {}
    for _, side in ipairs(sides) do
        if peripheral.isPresent(side) then
            local type = peripheral.getType(side)
            detected[type] = side
        end
    end
    return detected
end

local function promptForPeripheral(type)
    print(""Please enter the side for the "" .. type .. "" (left, right, top, bottom, front, back):"")
    return read()
end

local function installClient()
    local detected = detectPeripheralType()
    local modemSide = detected[""modem""] or promptForPeripheral(""modem"")
    local monitorSide = detected[""monitor""] or promptForPeripheral(""monitor"")

    local clientScript = string.format([[
-- Client Script: client.lua
local modemSide = ""%s"" -- Adjust based on your setup
local monitorSide = ""%s"" -- Adjust based on your setup

rednet.open(modemSide)
local monitor = peripheral.wrap(monitorSide)
if not monitor then
    error(""Monitor not found"")
end

monitor.setTextScale(1)

local statuses = {}

-- Define hex colors for different chemicals
local chemicalHexColors = {
    chlorine = ""#FFFF00"",   -- Yellow
    hydrogen = ""#00FFFF"",   -- Cyan
    oxygen = ""#0000FF"",     -- Blue
    sodium = ""#FFA500"",     -- Orange
    -- Add more chemical colors as needed
}

-- Utility function to map hex colors to ComputerCraft colors
local function hexToColor(hex)
    local colorMap = {
        [""#FFFFFF""] = colors.white,
        [""#000000""] = colors.black,
        [""#FF0000""] = colors.red,
        [""#00FF00""] = colors.lime,
        [""#0000FF""] = colors.blue,
        [""#FFFF00""] = colors.yellow,
        [""#FFA500""] = colors.orange,
        [""#800080""] = colors.purple,
        [""#C0C0C0""] = colors.lightGray,
        [""#808080""] = colors.gray,
        [""#00FFFF""] = colors.cyan,
        [""#008080""] = colors.cyan,
        [""#FFC0CB""] = colors.pink,
        [""#FFD700""] = colors.yellow,
        [""#ADFF2F""] = colors.lime,
        [""#8A2BE2""] = colors.purple,
        [""#00FF00""] = colors.lime,
        [""#00008B""] = colors.blue,
        [""#008000""] = colors.green
        -- Add more mappings as needed
    }
    return colorMap[hex] or colors.white
end

function drawBox(mon, x1, y1, x2, y2, color)
    mon.setBackgroundColor(color)
    for y = y1, y2 do
        mon.setCursorPos(x1, y)
        mon.write(string.rep("" "", x2 - x1 + 1))
    end
end

function drawLine(mon, x1, y1, x2, y2, color)
    mon.setBackgroundColor(color)
    mon.setCursorPos(x1, y1)
    mon.write(string.rep("" "", x2 - x1 + 1))
end

function drawTank(mon, x, y, width, height, percentage, chemicalName)
    local filledHeight = math.floor(percentage * height / 100)
    local emptyHeight = height - filledHeight
    local chemicalColorHex = chemicalHexColors[chemicalName] or ""#00FF00""
    local chemicalColor = hexToColor(chemicalColorHex)

    -- Debug information
    print(""Drawing tank: "", chemicalName, ""Hex: "", chemicalColorHex, ""Color: "", chemicalColor, ""FilledHeight: "", filledHeight, ""EmptyHeight: "", emptyHeight, ""Percentage: "", percentage)

    drawBox(mon, x, y, x + width - 1, y + emptyHeight - 1, colors.lightGray)
    drawBox(mon, x, y + emptyHeight, x + width - 1, y + height - 1, chemicalColor)
    
    mon.setCursorPos(x, y + height + 1)
    mon.setBackgroundColor(colors.black)
    mon.setTextColor(colors.white)
    mon.write(hemicalName)
end

function stripChemicalName(fullName)
    local name = fullName:match(""mekanism:(%w+)"")
    print(""Stripped chemical name: "", name) -- Debug information
    return name
end

function drawGUI()
    monitor.clear()
    local width, height = monitor.getSize()
    drawBox(monitor, 1, 1, width, height, colors.gray)
    drawLine(monitor, 1, 2, width, 2, colors.lightGray)
    monitor.setCursorPos(2, 1)
    monitor.setBackgroundColor(colors.black)
    monitor.setTextColor(colors.white)
    monitor.write(""Mekanism Machines Status"")
    
    local xOffset = 2
    local yOffset = 4
    local tankWidth = math.floor(width / 4) - 2
    local tankHeight = math.floor((height - 4) / 3) - 2
    
    for id, status in pairs(statuses) do
        if status.error then
            monitor.setCursorPos(xOffset, yOffset)
            monitor.write(""Error: "" .. status.error)
        else
            local strippedChemicalName = stripChemicalName(status.chemicalName or ""None"") or ""None""
            drawTank(monitor, xOffset, yOffset, tankWidth, tankHeight, status.percentage, strippedChemicalName)
            yOffset = yOffset + tankHeight + 3
            if yOffset > height - tankHeight - 2 then
                yOffset = 4
                xOffset = xOffset + tankWidth + 3
            end
        end
    end
end

while true do
    local senderId, status, protocol = rednet.receive(""machineStatus"")
    if status then
        statuses[senderId] = status
        drawGUI()
    end
    sleep(1) -- Update every second
end
]], modemSide, monitorSide)

    local file = fs.open(""client.lua"", ""w"")
    file.write(clientScript)
    file.close()
    print(""Client script installed as 'client.lua'."")

    -- Create autorun file
    local autorunFile = fs.open(""startup"", ""w"")
    autorunFile.write('shell.run(""client.lua"")')
    autorunFile.close()
    print(""Autorun script created."")

    print(""Rebooting..."")
    os.reboot()
end

local function installServer()
    local detected = detectPeripheralType()
    local modemSide = detected[""modem""] or promptForPeripheral(""modem"")
    local machineSide = detected[""tileTank""] or detected[""inductionMatrix""] or promptForPeripheral(""machine"")
    local machineType = detected[""tileTank""] and ""chemical_tank"" or detected[""inductionMatrix""] and ""induction_matrix""

    if not machineType then
        print(""Please select the type of machine (chemical_tank or induction_matrix):"")
        machineType = read()
    end

    local serverScript = string.format([[
-- Server Script: server.lua
local modemSide = ""%s"" -- Adjust based on your setup
local machineSide = ""%s"" -- Adjust based on your setup
local machineType = ""%s"" -- Change this to ""induction_matrix"" for induction matrix

rednet.open(modemSide)

function getChemicalTankStatus()
    local tank = peripheral.wrap(machineSide)
    if not tank then
        return {error = ""Chemical Tank not found""}
    end
    
    local storedChemical = tank.getStored()
    local capacity = tank.getChemicalTankCapacity()
    local amount = storedChemical.amount or 0
    local chemicalName = storedChemical.name or ""None""
    local percentage = tank.getFilledPercentage() or 0

    -- Debug information
    print(""Sending status: "", chemicalName, amount, capacity, percentage)

    local status = {
        type = ""Chemical Tank"",
        chemicalName = chemicalName,
        amount = amount,
        capacity = capacity,
        percentage = percentage
    }
    return status
end

function getInductionMatrixStatus()
    local matrix = peripheral.wrap(machineSide)
    if not matrix then
        return {error = ""Induction Matrix not found""}
    end
    
    local energyStored = matrix.getEnergy() or 0
    local maxEnergy = matrix.getMaxEnergy() or 0
    local percentage = (energyStored / maxEnergy) * 100

    local status = {
        type = ""Induction Matrix"",
        energyStored = energyStored,
        maxEnergy = maxEnergy,
        percentage = percentage
    }
    return status
end

function getMachineStatus()
    if machineType == ""chemical_tank"" then
        return getChemicalTankStatus()
    elseif machineType == ""induction_matrix"" then
        return getInductionMatrixStatus()
    else
        return {error = ""Unknown machine type""}
    end
end

while true do
    local status = getMachineStatus()
    rednet.broadcast(status, ""machineStatus"")
    sleep(5) -- Update every 5 seconds
end
]], modemSide, machineSide, machineType)

    local file = fs.open(""server.lua"", ""w"")
    file.write(serverScript)
    file.close()
    print(""Server script installed as 'server.lua'."")

    -- Create autorun file
    local autorunFile = fs.open(""startup"", ""w"")
    autorunFile.write('shell.run(""server.lua"")')
    autorunFile.close()
    print(""Autorun script created."")

    print(""Rebooting..."")
    os.reboot()
end

print(""Install as (1) Client or (2) Server?"")
local choice = read()
if choice == ""1"" then
    installClient()
elseif choice == ""2"" then
    installServer()
else
    print(""Invalid choice. Exiting."")
end
"
MaVFDJ1E,trains.lua,mine_ing,Lua,Wednesday 22nd of May 2024 04:03:59 PM CDT,"trainstation = peripheral.wrap(""left"")
dieselS = {
    cyclic = true,
    entries = {
        {
            conditions = {
                {
                    {
                        data = {},
                        id = ""create:powered""
                    }
                }
                  
            },
            instruction = {
                data = {
                    text = ""IC-Freigh-Fluid-1""
                },
                id = ""create:destination""
            }
        },
        {
            instruction = {
                data = { text = ""IC-NEntry"" },
                id = ""railways:waypoint_destination""
            }
        },
        {
            instruction = {
                data = { text = ""FC-Netherentry"" },
                id = ""railways:waypoint_destination""
            }
        }, 
        {
            conditions = {
                {
                    {
                        data = {
                            bucket = {
                                count = 1,
                                id = ""minecraft:air"",
                                tag = {}
                            },
                            measure = 0,
                            operator = 2,
                            threshold = ""432""
                        },
                        id = ""create:fluid_threshold""
                    }
                }   
            },
            instruction = {
                data = {
                    text = ""FC-Freigh-Diesel-1""
                },
                id = ""create:destination""
            }
        }
    }

}
lavaS= {
    cyclic = true,
    entries = {
        {
            conditions = {
                {
                    {
                        data = {},
                        id = ""create:powered""
                    }
                }
                  
            },
            instruction = {
                data = {
                    text = ""IC-Freigh-Fluid-1""
                },
                id = ""create:destination""
            }
        },
        {
            instruction = {
                data = { text = ""IC-NEntry"" },
                id = ""railways:waypoint_destination""
            }
        },
        {
            instruction = {
                data = { text = ""FC-Netherentry"" },
                id = ""railways:waypoint_destination""
            }
        }, 
        {
            conditions = {
                {
                    {
                        data = {
                            bucket = {
                                count = 1,
                                id = ""minecraft:air"",
                                tag = {}
                            },
                            measure = 0,
                            operator = 2,
                            threshold = ""432""
                        },
                        id = ""create:fluid_threshold""
                    }
                }   
            },
            instruction = {
                data = {
                    text = ""FC-Freigh-Diesel-1""
                },
                id = ""create:destination""
            }
        }
    }

}
trainstation.setSchedule(schedule)


"
QmvUwPju,Pastebin.ai - #1 Pastebin Alternative,xxsa,PHP,Wednesday 22nd of May 2024 04:03:18 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
..
......................................
.."
2EFGeqi5,Unity ScrollContentManager,DoctorTaco,C#,Wednesday 22nd of May 2024 03:54:01 PM CDT,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using UnityEngine.UI;

public class ScrollContentManager : MonoBehaviour {
    [SerializeField] bool viewCull = true;
    [SerializeField] bool horizontal;
    [SerializeField] RectTransform visibleArea;

    Func<IEnumerable<IScrollContentItem>> objectList;
    public Func<IEnumerable<IScrollContentItem>> ObjectList {
        get => objectList;
        set {
            objectList = value;
            float x = horizontal ? (itemWidth * (ObjectList?.Invoke() ?? new List<IScrollContentItem>()).Count()) : transform.Rect().sizeDelta.x;
            float y = horizontal ? transform.Rect().sizeDelta.y : (itemWidth * (ObjectList?.Invoke() ?? new List<IScrollContentItem>()).Count());
            transform.Rect().sizeDelta = new Vector2(x, y);

            foreach (var go in prefabsSpawned.Values) {
                Destroy(go);
            }
            prefabsSpawned.Clear();
            positionLastFrame = null;
        }
    }

    float localPos => horizontal ? transform.Rect().localPosition.x : transform.Rect().localPosition.y;
    float availableWidth => horizontal ? visibleArea.rect.width : visibleArea.rect.height;
    GameObject prefab => transform.GetChild(0).gameObject;
    float itemWidth => horizontal ? prefab.transform.Rect().sizeDelta.x : prefab.transform.Rect().sizeDelta.y;

    Dictionary<int, GameObject> prefabsSpawned = new Dictionary<int, GameObject>();

    private void Start() {
        prefab.SetActive(false);
    }

    float? positionLastFrame = null;
    void Update() {
        if (positionLastFrame != localPos) {
            positionLastFrame = localPos;
            var objects = ObjectList?.Invoke() ?? new List<IScrollContentItem>();
            if (objects.Count() > 0) {
                float numElementsBeforeDisplay = (horizontal ? -localPos : localPos) / itemWidth;
                int numElementsToDisplay = Mathf.CeilToInt(availableWidth / itemWidth);
                for (int listIndex = 0; listIndex < objects.Count(); listIndex++) {
                    bool shouldBeActive = listIndex > numElementsBeforeDisplay - 2 && listIndex < numElementsBeforeDisplay + numElementsToDisplay;
                    if (!viewCull) shouldBeActive = true;
                    if (shouldBeActive && !prefabsSpawned.ContainsKey(listIndex)) {
                        GameObject spawned = Instantiate(prefab, transform);
                        spawned.transform.Rect().localPosition += horizontal ? new Vector3(listIndex * itemWidth, 0, 0) : new Vector3(0, listIndex * -itemWidth, 0);
                        prefabsSpawned.Add(listIndex, spawned);
                        objects.ElementAt(listIndex).OnPrefabSpawned(spawned);
                        spawned.SetActive(true);
                    }
                    else if (!shouldBeActive && prefabsSpawned.ContainsKey(listIndex)) {
                        Destroy(prefabsSpawned[listIndex]);
                        prefabsSpawned.Remove(listIndex);
                    }
                }
            }
        }
    }

    public void ScrollToListIndex(int index) {
        if (horizontal) {
            if (transform.Rect().rect.width > transform.parent.Rect().rect.width) { //Only scroll if the content is larger than the viewport area
                float desiredPosition = -index * itemWidth;
                float maxPosition = transform.Rect().rect.width - transform.parent.Rect().rect.width; //Cap the X value at content width - viewport width
                desiredPosition = Mathf.Max(desiredPosition, -maxPosition);
                transform.Rect().localPosition = new Vector3(desiredPosition, transform.Rect().localPosition.y, transform.Rect().localPosition.z);
            }
        }
        else {
            if (transform.Rect().rect.height > transform.parent.Rect().rect.height) { //Only scroll if the content is larger than the viewport area
                float desiredPosition = index * itemWidth;
                float maxPosition = transform.Rect().rect.height - transform.parent.Rect().rect.height; //Cap the Y value at content height - viewport height
                desiredPosition = Mathf.Min(desiredPosition, maxPosition);
                transform.Rect().localPosition = new Vector3(transform.Rect().localPosition.x, desiredPosition, transform.Rect().localPosition.z);
            }
        }
    }

    public void CallOnAllSpawnedPrefabs(Action<GameObject> action) {
        foreach (var prefab in prefabsSpawned) {
            action(prefab.Value);
        }
    }
}

public interface IScrollContentItem {
    public void OnPrefabSpawned(GameObject prefab);
}"
ENkMSp4G,0101,Catsher,Python,Wednesday 22nd of May 2024 03:40:40 PM CDT,"class CodeVector:
    def __init__(self, symbols: list[int]) -> None:
        self.positionsList: list[int] = symbols

    def __str__(self) -> str:
        return """".join(list(map(str, self.positionsList)))     


def sum_code_vectors(v1: CodeVector, v2: CodeVector) -> CodeVector:
    if len(str(v1)) != len(str(v2)):
        raise Exception(""Нельзя складывать разной длины"")

    result_symbols: list[int] = []
    for i in range(len(str(v1))):
        symbol_1 = int(str(v1)[i])
        symbol_2 = int(str(v2)[i])

        res_symb = sum_symbols(symbol_1, symbol_2)
        result_symbols.append(res_symb)

    return CodeVector(symbols=result_symbols)

def sum_symbols(s1: int, s2: int) -> int:
    return (s1 + s2) % 2

def string_to_code_vector(s: str) -> CodeVector:
    symbs: list[int] = []
    for c in s:
        if c not in ['0', '1']:
            raise Exception(""Нельзя"")
        symb = int(c)
        symbs.append(symb)

    return CodeVector(symbols=symbs)

def number_to_code_vector(n: int, leng: int) -> CodeVector:
    b = bin(n)[2:]
    if len(str(b)) < leng:
        b = """".join(['0' for i in range(leng - len(str(b)))]) + b
    return string_to_code_vector(s = b)

def ntcv(n: int, leng: int = 4) -> CodeVector:
    return number_to_code_vector(n=n, leng=leng)

def sum_list_of_vectors(vectors: list[CodeVector]) -> CodeVector:
    summ: CodeVector = vectors[0]
    for i in range(1, len(vectors)):
        summ = sum_code_vectors(summ, vectors[i])

    return summ

codes = list(map(ntcv, [2, 4, 5, 9, 12, 13, 14]))
print(sum_list_of_vectors(codes))"
dXcVSMRy,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 03:37:53 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int x, n;
    cin >> x;
    cin >> n;

    int i, proizvod = 1;
    for(i = 1; i <= n; i += 1)
    {
        proizvod *= x;
    }
    cout << proizvod << endl;
}
"
qy61H7nY,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 03:24:49 PM CDT,"#include <iostream>
using namespace std;

int main()
{
   int n;
   cin >> n;

   int i = n, cifra, zbir = 0;
   while(i > 0) 
   {
    cifra = i % 10;
    i /= 10;
    zbir += 1; 
   }
   if(zbir % 2 == 0) 
   {
    cout << ""PAREN"" << endl;
   }
   else 
   {
    cout << ""NEPAREN"" << endl;
   }

}
"
5mYv45tr,_2024_lista_transposta_predefinida,gpsgiraldi,C,Wednesday 22nd of May 2024 03:17:42 PM CDT,"#include <stdio.h>

int main()
{
//entrada
    int m,n,i,j;

    printf(""Indique dois valores para o tamanho da matriz mxn: "");
    scanf(""%i %i"",&m,&n);
//não preciso de duas matrizes, a transposição 
//se dará numa saída alternada
    int mat[m][n];

    for(i=0;i<m;i++){
        for(j=0;j<n;j++){
            if((i%2)==0){
                mat[i][j]=1;
            }
            else{
                mat[i][j]=i*j;
            }
        }
    }
//SAÍDA mat
    for(i=0;i<m;i++){
        for(j=0;j<n;j++){
            printf(""%i "",mat[i][j]);
        }
    printf(""\n"");
    }
    printf(""\n\n"");
//SAÍDA matT
//notar que i e j não tem relação constante com m ou n, são simplesmente
//variáveis de controle da leitura/escrita, e que esta relação está 
//definida pelo limite que i e j vão alcançar(e claro, no mat[j][i] está 
//definida a transposição)

    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            printf(""%i "",mat[j][i]);
        }
    printf(""\n"");
    }
    return 0;
}
"
38mgeWKf,MoonNoIce - worldsettings.xml,Harrod200,XML,Wednesday 22nd of May 2024 03:16:16 PM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<GameData xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
	<WorldSettings>
		<World Id=""MoonNoIce"">
			<Name Key=""NewWorldAreaMoonNoIce"" />
			<Description Key=""MoonNoIceShortDesc"" />
			<Spawn Id=""MNILander"" Event=""NewWorld"" />
			<Rating Value=""Intermediate"" Color=""Green"" />
			<StartingCondition>MoonNoIceStart</StartingCondition>
			<PreviewButton Path=""Interface/preview_lunar.png"" />
			<SkyBoxMaterialName>Starfield Skybox</SkyBoxMaterialName>
			<SetSunInSkybox>false</SetSunInSkybox>
			<SunPrefabName>MoonSun</SunPrefabName>
			<TerrainPrefabName>TerrainMoon</TerrainPrefabName>
			<Gravity>-1.62</Gravity>
			<SizeOfWorld>10</SizeOfWorld>
			<WorldOreDensity>0.001</WorldOreDensity>
			<NumberOfCratersPerRegion>5</NumberOfCratersPerRegion>
			<NumberOfRegions>8</NumberOfRegions>
			<SizeOfCraterRegions>50</SizeOfCraterRegions>
			<BedrockLevel>-40</BedrockLevel>
			<Kelvin>0</Kelvin>
			<Clutter>
				<ClutterXmlData>
					<PrefabName>RockMoon</PrefabName>
					<Weighting>10</Weighting>
					<MinScale>0.6</MinScale>
					<MaxScale>1</MaxScale>
					<MaxAngle>40</MaxAngle>
					<Probability>0.02</Probability>
				</ClutterXmlData>
			</Clutter>
			<TerrainGenerationFeatureSettings>
				<isEnabled>true</isEnabled>
				<BigTileSize>100</BigTileSize>
				<TerrainFeatureCraters>
					<MaxCratersPerGrid>15</MaxCratersPerGrid>
					<MaxCraterSize>15</MaxCraterSize>
					<SmallCraterProbability>50</SmallCraterProbability>
					<MediumCraterProbability>25</MediumCraterProbability>
				</TerrainFeatureCraters>
			</TerrainGenerationFeatureSettings>
			<Planets />
			<Skybox />
			<CelestialConstants BodyScale=""5"">
				<TimeOffset Days=""1"" Seconds=""32"" />
			</CelestialConstants>
			<PlayableBody Id=""MoonNoIce"" Latitude=""0"" Longitude=""-111.5"" />
			<CelestialBodies>
				<Sprite Id=""Mercury"" Magnitude=""1.4"" />
				<Sprite Id=""Venus"" Magnitude=""0.9"" />
				<AtmosphericBody Id=""Earth"" RadiusKm=""6380"">
					<FixedRotation x=""0.3978"" y=""0.9175"" z=""0"" Speed=""9"" />
					<Texture Path=""Textures/earth_diffuse.png"" />
					<Normal Path=""Textures/earth_normal.png"" />
					<Specular Path=""Textures/earth_specular.png"" />
					<Material Smoothness=""1"" Metalic=""0.181"" />
					<Cloud Path=""Textures/earth_clouds.png"" Opacity=""1"">
						<Shadow Opacity=""0.5"" Parallax=""0.015"" />
					</Cloud>
					<Fresnel r=""0.4213835"" g=""0.586222"" b=""1"" Power=""1"" Emission=""1"">
						<RimLow r=""0.4245283"" g=""0"" b=""0"" />
						<RimHigh r=""0.735849"" g=""0.4707605"" b=""0"" />
					</Fresnel>
				</AtmosphericBody>
				<Body Id=""MoonNoIce"" Parent=""Earth"" RadiusKm=""1738"">
					<TidalLocking x=""0.0269"" y=""0.9996"" z=""0"" />
				</Body>
				<Sprite Id=""Mars"" Magnitude=""0.99"" />
				<Sprite Id=""Jupiter"" Magnitude=""0.98"" />
				<Sprite Id=""Saturn"" Magnitude=""1.1"" />
				<Sprite Id=""Uranus"" Magnitude=""1.5"" />
				<Sprite Id=""Neptune"" Magnitude=""1.5"" />
				<Sprite Id=""Pluto"" Magnitude=""4"" />
			</CelestialBodies>
			<SpaceMap Id=""MoonNoIce"" OrbitDistance=""200"">
				<Entry Id=""MoonNoIce"" Code=""13"" IsCharted=""true"">
					<Name Value=""Moon Orbit"" />
					<Connection Id=""IceEjectaMNI"" Difficulty=""100"" />
					<Connection Id=""OrbitingAsteroidFragmentsMNI"" Difficulty=""200"" />
					<MapDisplay X=""0"" Y=""0"">
						<Icon Id=""StatMoon"" Size=""3"" />
						<DynamicPanel Orientation=""0"" Offset=""50"" ExtraSize=""130"" />
					</MapDisplay>
				</Entry>
				<Node Id=""IceEjectaMNI"">
					<Name Value=""Ice Ejecta"" />
					<MapDisplay X=""60"" Y=""80"">
						<Icon Id=""IrregularGasCloud01"" Size=""1"" Tint=""165,181,255,255"" />
						<DynamicPanel Orientation=""2"" Offset=""20"" />
					</MapDisplay>
					<Discover Difficulty=""100"">
						<Site Id=""IceEjectaMNI01"">
							<Name Value=""Water Ejecta"" />
							<MapDisplay>
								<Icon Id=""RegularGasCloud03"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""2"" Max=""4"" />
								<Richness Min=""1"" Max=""3"" />
								<Size Min=""2"" Max=""3"" />
								<Composition>
									<Ice Water=""12"" Carbondioxide=""12"" />
								</Composition>
							</Deposit>
						</Site>
						<Site Id=""IceEjectaMNI02"">
							<Name Value=""Volatile Ejecta"" />
							<MapDisplay>
								<Icon Id=""SparseGasCloud01"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""2"" Max=""4"" />
								<Richness Min=""1"" Max=""3"" />
								<Size Min=""2"" Max=""4"" />
								<Composition>
									<Ice Volatiles=""22"" Carbondioxide=""2"" />
								</Composition>
							</Deposit>
						</Site>
						<Site Id=""IceEjectaMNI03"">
							<Name Value=""Oxygen Ejecta"" />
							<MapDisplay>
								<Icon Id=""SparseGasCloud01"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""2"" Max=""4"" />
								<Richness Min=""1"" Max=""3"" />
								<Size Min=""2"" Max=""4"" />
								<Composition>
									<Ice Oxygen=""18"" Carbondioxide=""6"" />
								</Composition>
							</Deposit>
						</Site>
					</Discover>
				</Node>
				<Node Id=""OrbitingAsteroidFragmentsMNI"">
					<Name Value=""Orbiting Asteroid Fragments"" />
					<Connection Id=""FarsideLockedAsteroidsMNI"" Difficulty=""250"" />
					<Connection Id=""IntraEarthAsteroidsMNI"" Difficulty=""500"" />
					<MapDisplay X=""160"" Y=""-10"">
						<Icon Id=""SparseAsteroid02"" Size=""2"" Tint=""207,165,140,255"" />
						<DynamicPanel Orientation=""0"" Offset=""20"" />
					</MapDisplay>
					<Discover Difficulty=""100"">
						<Site Id=""OrbitingAsteroidFragmentsMNI01"">
							<Name Value=""Iron Rocks"" />
							<MapDisplay>
								<Icon Id=""SparseAsteroid05"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""2"" Max=""5"" />
								<Richness Min=""1"" Max=""2"" />
								<Size Min=""2"" Max=""4"" />
								<Composition>
									<ReagentMix Iron=""1"" />
								</Composition>
							</Deposit>
						</Site>
						<Site Id=""OrbitingAsteroidFragmentsMNI02"">
							<Name Value=""Copper Rocks"" />
							<MapDisplay>
								<Icon Id=""SparseAsteroid01"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""2"" Max=""5"" />
								<Richness Min=""1"" Max=""2"" />
								<Size Min=""2"" Max=""4"" />
								<Composition>
									<ReagentMix Copper="".5"" />
								</Composition>
							</Deposit>
						</Site>
						<Site Id=""OrbitingAsteroidFragmentsMNI03"">
							<Name Value=""Gold Rocks"" />
							<MapDisplay>
								<Icon Id=""SparseAsteroid03"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""2"" Max=""5"" />
								<Richness Min=""1"" Max=""2"" />
								<Size Min=""2"" Max=""4"" />
								<Composition>
									<ReagentMix Gold="".3"" />
								</Composition>
							</Deposit>
							<Survey />
						</Site>
						<Site Id=""OrbitingAsteroidFragmentsMNI04"">
							<Name Value=""Silicon Rocks"" />
							<MapDisplay>
								<Icon Id=""SparseAsteroid04"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""2"" Max=""5"" />
								<Richness Min=""1"" Max=""2"" />
								<Size Min=""2"" Max=""4"" />
								<Composition>
									<ReagentMix Silicon="".5"" />
								</Composition>
							</Deposit>
						</Site>
						<Site Id=""OrbitingAsteroidFragmentsMNI05"">
							<Name Value=""Coal Rocks"" />
							<MapDisplay>
								<Icon Id=""SparseAsteroid06"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""2"" Max=""5"" />
								<Richness Min=""1"" Max=""2"" />
								<Size Min=""2"" Max=""4"" />
								<Composition>
									<ReagentMix Hydrocarbon="".5"" />
								</Composition>
							</Deposit>
						</Site>
					</Discover>
				</Node>
				<Node Id=""IntraEarthAsteroidsMNI"">
					<Name Value=""Intra Earth Asteroids"" />
					<MapDisplay X=""280"" Y=""30"">
						<Icon Id=""MetallicAsteroid03"" Size=""1"" Tint=""195,195,212,255"" />
						<DynamicPanel Orientation=""2"" Offset=""20"" />
					</MapDisplay>
					<Discover Difficulty=""200"">
						<Site Id=""IntraEarthAsteroidsMNI01"">
							<Name Value=""Silver deposit"" />
							<MapDisplay>
								<Icon Id=""SparseAsteroid06"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""3"" Max=""5"" />
								<Richness Min=""1"" Max=""4"" />
								<Size Min=""2"" Max=""3"" />
								<Composition>
									<ReagentMix Silver="".15"" />
								</Composition>
							</Deposit>
						</Site>
						<Site Id=""IntraEarthAsteroidsMNI02"">
							<Name Value=""Nickel deposit"" />
							<MapDisplay>
								<Icon Id=""SparseAsteroid07"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""3"" Max=""5"" />
								<Richness Min=""1"" Max=""4"" />
								<Size Min=""2"" Max=""3"" />
								<Composition>
									<ReagentMix Nickel="".15"" />
								</Composition>
							</Deposit>
						</Site>
						<Site Id=""IntraEarthAsteroidsMNI03"">
							<Name Value=""Lead deposit"" />
							<MapDisplay>
								<Icon Id=""StatAsteroidFragment"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""3"" Max=""5"" />
								<Richness Min=""1"" Max=""4"" />
								<Size Min=""2"" Max=""3"" />
								<Composition>
									<ReagentMix Lead="".15"" />
								</Composition>
							</Deposit>
						</Site>
					</Discover>
				</Node>
				<Node Id=""FarsideLockedAsteroidsMNI"">
					<Name Value=""Farside Locked Asteroids"" />
					<Connection Id=""L4CloudMNI"" Difficulty=""500"" />
					<Connection Id=""L5AsteroidClusterMNI"" Difficulty=""1000"" />
					<MapDisplay X=""300"" Y=""-120"">
						<Icon Id=""MetallicAsteroid04"" Size=""2"" Tint=""253,224,206,255"" />
						<DynamicPanel Orientation=""0"" Offset=""20"" />
					</MapDisplay>
					<Discover Difficulty=""300"">
						<Site Id=""FarsideLockedAsteroidsMNI01"">
							<Name Value=""Cobalt Asteroid"" />
							<MapDisplay>
								<Icon Id=""AsteroidCluster06"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""1"" Max=""3"" />
								<Richness Min=""1"" Max=""3"" />
								<Size Min=""2"" Max=""3"" />
								<Composition>
									<ReagentMix Cobalt="".1"" />
								</Composition>
							</Deposit>
						</Site>
					</Discover>
				</Node>
				<Node Id=""L4CloudMNI"">
					<Name Value=""L4 Cloud"" />
					<MapDisplay X=""420"" Y=""-10"">
						<Icon Id=""IrregularGasCloud03"" Size=""1"" Tint=""226,185,188,255"" />
						<DynamicPanel Orientation=""0"" Offset=""20"" />
					</MapDisplay>
					<Discover Difficulty=""300"">
						<Site Id=""L4CloudMNI01"">
							<Name Value=""Dense Oxygen Ice"" />
							<MapDisplay>
								<Icon Id=""IrregularGasCloud02"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""4"" Max=""8"" />
								<Richness Min=""1"" Max=""3"" />
								<Size Min=""3"" Max=""7"" />
								<Composition>
									<Ice Oxygen=""20"" Nitrogen=""4"" />
								</Composition>
							</Deposit>
						</Site>
						<Site Id=""L4CloudMNI02"">
							<Name Value=""NoS Ice"" />
							<MapDisplay>
								<Icon Id=""IrregularGasCloud01"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""4"" Max=""8"" />
								<Richness Min=""1"" Max=""3"" />
								<Size Min=""3"" Max=""7"" />
								<Composition>
									<Ice NitrousOxide=""22"" Nitrogen=""2"" />
								</Composition>
							</Deposit>
						</Site>
						<Site Id=""L4CloudMNI03"">
							<Name Value=""Water Ice"" />
							<MapDisplay>
								<Icon Id=""RegularGasCloud01"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""4"" Max=""8"" />
								<Richness Min=""1"" Max=""3"" />
								<Size Min=""3"" Max=""7"" />
								<Composition>
									<Ice Water=""22"" Nitrogen=""2"" />
								</Composition>
							</Deposit>
						</Site>
					</Discover>
				</Node>
				<Node Id=""L5AsteroidClusterMNI"">
					<Name Value=""L5 Asteroid Cluster"" />
					<MapDisplay X=""140"" Y=""-160"">
						<Icon Id=""DenseAsteroid05"" Size=""1"" Tint=""195,195,212,255"" />
						<DynamicPanel Orientation=""0"" Offset=""20"" />
					</MapDisplay>
					<Discover Difficulty=""100"">
						<Site Id=""L5AsteroidClusterMNI01"">
							<Name Value=""Dense Iron Asteroid"" />
							<MapDisplay>
								<Icon Id=""MetallicAsteroid06"" />
							</MapDisplay>
							<Deposit>
								<Density Min=""4"" Max=""8"" />
								<Richness Min=""1"" Max=""2"" />
								<Size Min=""3"" Max=""6"" />
								<Composition>
									<ReagentMix Iron=""1"" />
								</Composition>
							</Deposit>
						</Site>
					</Discover>
				</Node>
			</SpaceMap>
			<PreviewScene>
				<CameraPosition>
					<x>0.000</x>
					<y>0.000</y>
					<z>0.000</z>
				</CameraPosition>
				<CameraRotation>
					<x>327.150</x>
					<y>180.420</y>
					<z>358.823</z>
				</CameraRotation>
				<SunRotation>
					<x>47.266</x>
					<y>-46.001</y>
					<z>-107.52</z>
				</SunRotation>
				<Prefabs>
					<Prefab>
						<Name>UISun</Name>
						<Position>
							<x>-12</x>
							<y>731</y>
							<z>-728</z>
						</Position>
						<Rotation>
							<x>0</x>
							<y>0</y>
							<z>0</z>
						</Rotation>
						<Scale>
							<x>13.419</x>
							<y>13.419</y>
							<z>13.419</z>
						</Scale>
					</Prefab>
					<Prefab>
						<Name>UIShuttlecraft</Name>
						<Position>
							<x>-21</x>
							<y>159.1</y>
							<z>-236.2</z>
						</Position>
						<Rotation>
							<x>-36.429</x>
							<y>140.917</y>
							<z>32.933</z>
						</Rotation>
						<Scale>
							<x>15.85437</x>
							<y>15.85437</y>
							<z>15.85437</z>
						</Scale>
					</Prefab>
					<Prefab>
						<Name>UIPlanetEarth</Name>
						<Position>
							<x>-165.7227</x>
							<y>331.3017</y>
							<z>-664.209</z>
						</Position>
						<Rotation>
							<x>71.000</x>
							<y>130.000</y>
							<z>76.000</z>
						</Rotation>
						<Scale>
							<x>1.274</x>
							<y>1.274</y>
							<z>1.274</z>
						</Scale>
					</Prefab>
					<Prefab>
						<Name>UIMoon</Name>
						<Position>
							<x>78.300</x>
							<y>61.000</y>
							<z>-298.500</z>
						</Position>
						<Rotation>
							<x>31.644</x>
							<y>0.000</y>
							<z>0.000</z>
						</Rotation>
						<Scale>
							<x>50.000</x>
							<y>50.000</y>
							<z>50.000</z>
						</Scale>
					</Prefab>
				</Prefabs>
				<SunPrefab>SpaceSun (UnityEngine.Light)</SunPrefab>
				<LensFlare>true</LensFlare>
				<LensFlareIntensity>0.250</LensFlareIntensity>
			</PreviewScene>
			<AmbientLighting>
				<Sky r=""0.1838235"" g=""0.1838235"" b=""0.1838235"" />
				<Equator r=""0.1176471"" g=""0.1176471"" b=""0.1176471"" />
				<Ground r=""0.08088237"" g=""0.08088237"" b=""0.08088237"" />
			</AmbientLighting>
			<NoTerrainLod>true</NoTerrainLod>
			<MineablesOverride>
				<MineableData>
					<DisplayName>Ice</DisplayName>
					<OrePrefabName>ItemIce</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreIce</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreIce</GoggleVisualizerPrefabName>
					<Rarity>0</Rarity>
					<MiningTime>2</MiningTime>
					<VoxelType>Ice</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>0</MaxDropQuantity>
					<MinDropQuantity>0</MinDropQuantity>
					<MaxVeinAttempts>0</MaxVeinAttempts>
					<MinVeinAttempts>0</MinVeinAttempts>
				</MineableData>
				<MineableData>
					<DisplayName>Oxite</DisplayName>
					<OrePrefabName>ItemOxite</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreOxite</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreOxite</GoggleVisualizerPrefabName>
					<Rarity>0</Rarity>
					<MiningTime>2</MiningTime>
					<VoxelType>Oxite</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>0</MaxDropQuantity>
					<MinDropQuantity>0</MinDropQuantity>
					<MaxVeinAttempts>0</MaxVeinAttempts>
					<MinVeinAttempts>0</MinVeinAttempts>
				</MineableData>
				<MineableData>
					<DisplayName>Volatiles</DisplayName>
					<OrePrefabName>ItemVolatiles</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreVolatiles</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreVolatiles</GoggleVisualizerPrefabName>
					<Rarity>0</Rarity>
					<MiningTime>2</MiningTime>
					<VoxelType>Volatiles</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>0</MaxDropQuantity>
					<MinDropQuantity>0</MinDropQuantity>
					<MaxVeinAttempts>0</MaxVeinAttempts>
					<MinVeinAttempts>0</MinVeinAttempts>
				</MineableData>
				<MineableData>
					<DisplayName>Coal</DisplayName>
					<OrePrefabName>ItemCoalOre</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreCoal</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreCoal</GoggleVisualizerPrefabName>
					<Rarity>0</Rarity>
					<MiningTime>3</MiningTime>
					<VoxelType>Coal</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>0</MaxDropQuantity>
					<MinDropQuantity>0</MinDropQuantity>
					<MaxVeinAttempts>0</MaxVeinAttempts>
					<MinVeinAttempts>0</MinVeinAttempts>
				</MineableData>
				<MineableData>
					<DisplayName>Nitrice</DisplayName>
					<OrePrefabName>ItemNitrice</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreNitrice</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreNitrice</GoggleVisualizerPrefabName>
					<Rarity>0</Rarity>
					<MiningTime>2</MiningTime>
					<VoxelType>Nitrice</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>0</MaxDropQuantity>
					<MinDropQuantity>0</MinDropQuantity>
					<MaxVeinAttempts>0</MaxVeinAttempts>
					<MinVeinAttempts>0</MinVeinAttempts>
				</MineableData>
			</MineablesOverride>
			<DeepMineablesOverride>
				<DeepMineableData>
					<DisplayName>Iron</DisplayName>
					<OrePrefabName>ItemIronOre</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreIron</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreIron</GoggleVisualizerPrefabName>
					<Rarity>90</Rarity>
					<MiningTime>1</MiningTime>
					<VoxelType>Iron</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>6</MaxDropQuantity>
					<MinDropQuantity>3</MinDropQuantity>
					<MaxVeinAttempts>100</MaxVeinAttempts>
					<MinVeinAttempts>50</MinVeinAttempts>
				</DeepMineableData>
				<DeepMineableData>
					<DisplayName>Gold</DisplayName>
					<OrePrefabName>ItemGoldOre</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreGold</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreGold</GoggleVisualizerPrefabName>
					<Rarity>30</Rarity>
					<MiningTime>5</MiningTime>
					<VoxelType>Gold</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>4</MaxDropQuantity>
					<MinDropQuantity>2</MinDropQuantity>
					<MaxVeinAttempts>60</MaxVeinAttempts>
					<MinVeinAttempts>40</MinVeinAttempts>
				</DeepMineableData>
				<DeepMineableData>
					<DisplayName>Coal</DisplayName>
					<OrePrefabName>ItemCoalOre</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreCoal</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreCoal</GoggleVisualizerPrefabName>
					<Rarity>0</Rarity>
					<MiningTime>3</MiningTime>
					<VoxelType>Coal</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>0</MaxDropQuantity>
					<MinDropQuantity>0</MinDropQuantity>
					<MaxVeinAttempts>0</MaxVeinAttempts>
					<MinVeinAttempts>0</MinVeinAttempts>
				</DeepMineableData>
				<DeepMineableData>
					<DisplayName>Copper</DisplayName>
					<OrePrefabName>ItemCopperOre</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreCopper</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreCopper</GoggleVisualizerPrefabName>
					<Rarity>40</Rarity>
					<MiningTime>2</MiningTime>
					<VoxelType>Copper</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>5</MaxDropQuantity>
					<MinDropQuantity>3</MinDropQuantity>
					<MaxVeinAttempts>80</MaxVeinAttempts>
					<MinVeinAttempts>60</MinVeinAttempts>
				</DeepMineableData>
				<DeepMineableData>
					<DisplayName>Uranium</DisplayName>
					<OrePrefabName>ItemUraniumOre</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreUranium</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreUranium</GoggleVisualizerPrefabName>
					<Rarity>5</Rarity>
					<MiningTime>5</MiningTime>
					<VoxelType>Uranium</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>3</MaxDropQuantity>
					<MinDropQuantity>2</MinDropQuantity>
					<MaxVeinAttempts>40</MaxVeinAttempts>
					<MinVeinAttempts>20</MinVeinAttempts>
				</DeepMineableData>
				<DeepMineableData>
					<DisplayName>Silver</DisplayName>
					<OrePrefabName>ItemSilverOre</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreSilver</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreSilver</GoggleVisualizerPrefabName>
					<Rarity>10</Rarity>
					<MiningTime>5</MiningTime>
					<VoxelType>Silver</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>10</MaxDropQuantity>
					<MinDropQuantity>5</MinDropQuantity>
					<MaxVeinAttempts>40</MaxVeinAttempts>
					<MinVeinAttempts>20</MinVeinAttempts>
				</DeepMineableData>
				<DeepMineableData>
					<DisplayName>Nickel</DisplayName>
					<OrePrefabName>ItemNickelOre</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreNickel</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreNickel</GoggleVisualizerPrefabName>
					<Rarity>10</Rarity>
					<MiningTime>5</MiningTime>
					<VoxelType>Nickel</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>10</MaxDropQuantity>
					<MinDropQuantity>5</MinDropQuantity>
					<MaxVeinAttempts>40</MaxVeinAttempts>
					<MinVeinAttempts>20</MinVeinAttempts>
				</DeepMineableData>
				<DeepMineableData>
					<DisplayName>Lead</DisplayName>
					<OrePrefabName>ItemLeadOre</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreLead</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreLead</GoggleVisualizerPrefabName>
					<Rarity>10</Rarity>
					<MiningTime>5</MiningTime>
					<VoxelType>Lead</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>10</MaxDropQuantity>
					<MinDropQuantity>5</MinDropQuantity>
					<MaxVeinAttempts>40</MaxVeinAttempts>
					<MinVeinAttempts>20</MinVeinAttempts>
				</DeepMineableData>
				<DeepMineableData>
					<DisplayName>Silicon</DisplayName>
					<OrePrefabName>ItemSiliconOre</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreSilicon</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreSilicon</GoggleVisualizerPrefabName>
					<Rarity>40</Rarity>
					<MiningTime>4</MiningTime>
					<VoxelType>Silicon</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>6</MaxDropQuantity>
					<MinDropQuantity>3</MinDropQuantity>
					<MaxVeinAttempts>50</MaxVeinAttempts>
					<MinVeinAttempts>30</MinVeinAttempts>
				</DeepMineableData>
				<DeepMineableData>
					<DisplayName>Cobalt</DisplayName>
					<OrePrefabName>ItemCobaltOre</OrePrefabName>
					<VisualizerPrefabName>AsteroidOreCobalt</VisualizerPrefabName>
					<GoggleVisualizerPrefabName>VisualizerGoggleOreCobalt</GoggleVisualizerPrefabName>
					<Rarity>10</Rarity>
					<MiningTime>5</MiningTime>
					<VoxelType>Cobalt</VoxelType>
					<VeinSize>1</VeinSize>
					<MaxDropQuantity>5</MaxDropQuantity>
					<MinDropQuantity>3</MinDropQuantity>
					<MaxVeinAttempts>40</MaxVeinAttempts>
					<MinVeinAttempts>20</MinVeinAttempts>
				</DeepMineableData>
			</DeepMineablesOverride>
		</World>
	</WorldSettings>
</GameData>
"
sEttRVzq,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 03:15:55 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int x, n;
    cin >> x;
    cin >> n;

    int proizvod = 1, i;
    for(i = n; i > 0; i--) 
    {
        proizvod *= x;
    }
    cout << proizvod << endl;

}
"
Ez4qvEs4,MoonNoIce - startconditions.xml,Harrod200,XML,Wednesday 22nd of May 2024 03:13:35 PM CDT,"<GameData>
    <!-- Landers -->
    <Spawn Id=""MNILander"">
        <DynamicThing Id=""Lander"">
            <Color Id=""Yellow""/>
            <Spawn Id=""MNIConSupplies1""/>
            <Spawn Id=""MNIConSupplies2""/>
            <Spawn Id=""MNIOrgSupplies1""/>
            <Spawn Id=""MNIResSupplies1""/>
            <Spawn Id=""MNISumSupplies1""/>
            <Spawn Id=""MNIPorSupplies1""/>
            <DynamicThing Id=""DynamicGasTankAdvanced"" SlotIndex=""6"">
                <Color Id=""White""/>
                <Name Value=""Oxygen Tank""/>
                <Gas Type=""Oxygen"" Moles=""2500"" Celsius=""15""/>
            </DynamicThing>
            <DynamicThing Id=""DynamicMKIILiquidCanisterEmpty"" SlotIndex=""7"">
                <Color Id=""Blue""/>
                <Name Value=""Water Tank""/>
                <Gas Type=""Water"" Litres=""780"" Celsius=""15""/>
            </DynamicThing>
        </DynamicThing>
    </Spawn>
	<Spawn Id=""MNIConSupplies1"">
        <DynamicThing Id=""DynamicCrate"">
            <Name Value=""Construction Supplies 1""/>
            <Color Id=""Yellow""/>
            <Item Id=""ItemKitArcFurnace""/>
            <Item Id=""ItemKitAutolathe""/>
            <Item Id=""ItemIronFrames"">
                <Quantity Value=""30""/>
            </Item>
            <Item Id=""ItemIronSheets"">
                <Quantity Value=""50""/>
            </Item>
            <Item Id=""ItemPlasticSheets"">
                <Quantity Value=""50""/>
            </Item>		
            <Item Id=""ItemAreaPowerControl"">
                <Quantity Value=""2""/>
            </Item>
            <Item Id=""ItemSteelSheets"">
                <Quantity Value=""4""/>
            </Item>
            <Item Id=""ItemKitWallIron"">
                <Quantity Value=""30""/>
            </Item>
            <Item Id=""ItemKitSolarPanelBasic""/>
            <Item Id=""ItemGlassSheets"">
                <Quantity Value=""50""/>
            </Item>			
        </DynamicThing>
	</Spawn>
	<Spawn Id=""MNIConSupplies2"">
        <DynamicThing Id=""DynamicCrate"">
            <Name Value=""Construction Supplies 2""/>
            <Color Id=""Yellow""/>
            <Item Id=""ItemActiveVent""/>
            <Item Id=""ItemKitConsole""/>
            <Item Id=""ItemKitDoor"">
                <Quantity Value=""2""/>
            </Item>
            <Item Id=""CircuitboardAirlockControl""/>
            <Item Id=""ItemPipeValve"">
                <Quantity Value=""2""/>
            </Item>		
            <Item Id=""ItemKitPipe"">
                <Quantity Value=""20""/>
            </Item>
            <Item Id=""ItemBatteryCellLarge"">
                <Charge State=""Full""/>
            </Item>
            <Item Id=""ItemDataDisk""/>
            <Item Id=""ItemKitSensor""/>
            <Item Id=""ItemBatteryChargerSmall""/>	
        </DynamicThing>
    </Spawn>
	<Spawn Id=""MNIOrgSupplies1"">
        <DynamicThing Id=""DynamicCrate"">
            <Name Value=""Organic Supplies 1""/>
            <Color Id=""Green""/>
            <Item Id=""ItemEggCarton"">
                <Name Value=""Egg Carton (Fertilized)""/>
                <Item Id=""ItemFertilizedEgg"" />
                <Item Id=""ItemFertilizedEgg"" />
                <Item Id=""ItemFertilizedEgg"" />
                <Item Id=""ItemFertilizedEgg"" />
                <Item Id=""ItemFertilizedEgg"" />
                <Item Id=""ItemFertilizedEgg"" />
            </Item>
            <Item Id=""SeedBag_Potato"">
                <Quantity Value=""3""/>
            </Item>
            <Item Id=""SeedBag_Wheet"">
                <Quantity Value=""3""/>
            </Item>
            <Item Id=""SeedBag_Corn"">
                <Quantity Value=""3""/>
            </Item>
            <Item Id=""SeedBag_Fern"">
                <Quantity Value=""3""/>
            </Item>		
            <Item Id=""SeedBag_Soybean"">
                <Quantity Value=""3""/>
            </Item>
            <Item Id=""SeedBag_Tomato"">
                <Quantity Value=""3""/>
            </Item>
            <Item Id=""SeedBag_Pumpkin"">
                <Quantity Value=""3""/>
            </Item>
            <Item Id=""ItemFilterFern"">
                <Quantity Value=""3""/>
            </Item>
            <Item Id=""SeedBag_Rice"">
                <Quantity Value=""3""/>
            </Item>			
        </DynamicThing>
    </Spawn>
	<Spawn Id=""MNIResSupplies1"">
        <DynamicThing Id=""DynamicCrate"">
            <Name Value=""Residential Supplies 1""/>
            <Color Id=""Yellow""/>
            <Item Id=""ItemWaterBottle"">
                <Percent Value=""100""/>
            </Item>
            <Item Id=""ItemWaterBottle"">
                <Percent Value=""100""/>
            </Item>
            <Item Id=""ItemKitTables"">
                <Quantity Value=""2""/>
            </Item>
            <Item Id=""ItemKitLocker"">
                <Quantity Value=""2""/>
            </Item>
            <Item Id=""ApplianceMicrowave""/>		
            <Item Id=""ItemTomatoSoup""/>
            <Item Id=""ItemWaterBottle"">
                <Percent Value=""100""/>
            </Item>
            <Item Id=""ItemCornSoup""/>
            <Item Id=""CartridgeOreScanner""/>	
            <Item Id=""ItemKitGrowLight""/>			
        </DynamicThing>
    </Spawn>
	<Spawn Id=""MNISumSupplies1"">
        <DynamicThing Id=""DynamicCrate"">
            <Name Value=""Consumable Supplies 1""/>
            <Color Id=""Red""/>
            <Item Id=""ItemRoadFlare"">
                <Quantity Value=""20""/>
            </Item>
            <Item Id=""CircuitboardAdvAirlockControl""/>
            <Item Id=""ItemFlagSmall"">
                <Quantity Value=""10""/>
            </Item>
            <Item Id=""ItemSprayCanBlue""/>
            <Item Id=""ItemSprayCanGreen""/>		
            <Item Id=""ItemSprayCanYellow""/>
            <Item Id=""ItemSprayCanWhite""/>
            <Item Id=""ItemSprayCanRed""/>
            <Item Id=""ItemBeacon"">
                <Item Id=""ItemBatteryCell"" SlotId=""Battery"">
                    <Charge State=""Full""/>
                </Item>
            </Item>
            <Item Id=""ItemLabeller"">
                <Item Id=""ItemBatteryCell"" SlotId=""Battery"">
                    <Charge State=""Full""/>
                </Item>
            </Item>	
        </DynamicThing>
    </Spawn>
	<Spawn Id=""MNIPorSupplies1"">
        <DynamicThing Id=""DynamicCrate"">
            <Name Value=""Portable Appliance Kits""/>
            <Color Id=""Blue""/>
            <Item Id=""ItemKitDynamicHydroponics""/>
            <Item Id=""ItemDynamicAirCon""/>
            <Item Id=""ItemKitDynamicGenerator""/>
            <Item Id=""ItemDynamicScrubber""/>
            <Item Id=""ItemLiquidCanisterEmpty"">
                <Name Value=""Liquid Water""/>
                <Color Id=""Blue""/>
                <Gas Type=""Water"" Litres=""12"" Celsius=""5""/>
            </Item>	
            <Item Id=""ItemBatteryCell"">
                <Charge State=""Full""/>
            </Item>
            <Item Id=""ItemBatteryCell"">
                <Charge State=""Full""/>
            </Item>
            <Item Id=""ItemWrench""/>
            <Item Id=""ItemDuctTape""/>
            <Item Id=""ItemDuctTape""/>			
        </DynamicThing>
    </Spawn>
</GameData>
"
Hg8raKwM,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 03:02:25 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;

    int i, zbir = 0;
    for(i = n; i > 0; i -= 1) 
    {
        int broj;
        cin >> broj;
        zbir += broj;
    }
    cout << zbir << endl;

}
"
SbqJ35TV,hw3 definitivo,TrendyJack,MatLab,Wednesday 22nd of May 2024 03:00:57 PM CDT,"clc;
clearvars;
close all;

% Definizione dei parametri
t = linspace(-6e-6, 6e-6, 1000); 
T_grande = 2e-6;
T_zero = 2e-6;
N = 10; %

% Definizione di x(t)
x_t = ((t/T_grande)+0.5).*rectpuls(t/T_grande);

% Coefficiente a_0
a_0 = T_grande / (2 * T_zero);

% Definizione dei vettori indici k1 e k2
k1 = -N:-1;
k2 = 1:N;

% Definisco y(t)
y_t = zeros(size(t));
k_max = 100;
for k = -k_max:k_max
    y_t = y_t + ((t - k*T_zero)/T_grande + 0.5) .* rectpuls((t - k*T_zero)/T_grande);
end

% Calcolo di y_rec(t) come somma delle armoniche
y_rec = a_0 * ones(size(t)); % Inizializzazione di y_rec con il valore di a_0


% Somma dei termini delle armoniche positive
for i = 1:length(k2)
    k = k2(i);
    y_rec = y_rec + (1/(2*pi*k)) * (sin((pi*k*T_grande)/T_zero) + 1i*(cos((pi*k*T_grande)/T_zero) - sinc((k*T_grande)/T_zero))) * exp(1i * 2 * pi * k * t / T_zero);
end

% Somma dei termini delle armoniche negative
for i = 1:length(k1)
    k = k1(i);
    y_rec = y_rec + (1/(2*pi*k)) * (sin((pi*k*T_grande)/T_zero) + 1i*(cos((pi*k*T_grande)/T_zero) - sinc((k*T_grande)/T_zero))) * exp(1i * 2 * pi * k * t / T_zero);
end

% Plot di x(t)
figure;
plot(t, x_t);
title('Segnale x(t)');
xlabel('Tempo (s)');
ylabel('x(t)');
grid on;

% Plot di x(t) e y_rec(t)
figure;
plot(t, y_t, 'b', t, real(y_rec), 'r');
title('Segnale y(t) e y_{rec}(t)');
xlabel('Tempo (s)');
ylabel('y(t) e y_{rec}(t)');
legend('y(t)', 'y_{rec}(t)');
grid on;
"
hJxYUX6U,hw3,TrendyJack,MatLab,Wednesday 22nd of May 2024 02:37:12 PM CDT,"clc;
clearvars;
close all;

% Definizione dei parametri
t = linspace(-6e-6, 6e-6, 1000); 
T_grande = 2e-6;
T_zero = 2e-6;
N = 10;

% Definizione di x(t)
x_t = ((t/T_grande)+0.5).*rectpuls(t/T_grande);

% Coefficiente a_0
a_0 = T_grande / (2 * T_zero);

% Definizione dei vettori k1 e k2
k1 = -N:-1;
k2 = 1:N;

% Calcolo di y_rec(t) come somma delle armoniche
y_rec = a_0 * ones(size(t)); % Inizializzazione di y_rec con il valore di a_0

% Funzione sinc corretta
sinc = @(x) sin(pi*x) ./ (pi*x);

% Somma dei termini delle armoniche positive
for i = 1:length(k2)
    k = k2(i);
    y_rec = y_rec + (1/(2*pi*k)) * (sin((pi*k*T_grande)/T_zero) + 1i*(cos((pi*k*T_grande)/T_zero) - sinc((k*T_grande)/T_zero))) * exp(1i * 2 * pi * k * t / T_zero);
end

% Somma dei termini delle armoniche negative
for i = 1:length(k1)
    k = k1(i);
    y_rec = y_rec + (1/(2*pi*k)) * (sin((pi*k*T_grande)/T_zero) + 1i*(cos((pi*k*T_grande)/T_zero) - sinc((k*T_grande)/T_zero))) * exp(1i * 2 * pi * k * t / T_zero);
end

% Plot di x(t)
figure;
plot(t, x_t);
title('Segnale x(t)');
xlabel('Tempo (s)');
ylabel('x(t)');
grid on;

% Plot di y_rec(t)
figure;
plot(t, real(y_rec));
title('Segnale y_{rec}(t)');
xlabel('Tempo (s)');
ylabel('y_{rec}(t)');
grid on;

% Plot di x(t) e y_rec(t)
figure;
plot(t, x_t, 'b', t, real(y_rec), 'r');
title('Segnale x(t) e y_{rec}(t)');
xlabel('Tempo (s)');
ylabel('x(t) e y_{rec}(t)');
legend('x(t)', 'y_{rec}(t)');
grid on;
"
Um0FviBV,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 02:36:00 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int a = 7;
    int b = 4;
    if(a < b)
        cout << a + b << endl;
    cout << a / b << endl;
    cout << a % b << endl;
    

}
"
LV2wwWid,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 02:31:41 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int a = 10;
    int b = 3;
    if(a > b)
    {
        cout << a + a << endl;
        cout << a - b << endl;
    }
    else 
        cout << a % b << endl;
    cout << a / b << endl;
}
"
TxD1x5Np,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 02:28:58 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int a = 14;
    int b = 6;
    if(a > b) 
    {
        cout << ""a%b"" << endl;
        cout << a%b << endl;
    }
    else 
    {
        cout << ""a/b="" << endl;
        cout << a/b << endl;
    }
}
"
u2jbBAKV,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 02:25:04 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int i, a, b;
    a = 0; b = 0;
    for(i = 1; i <= 10; i += 2) 
        a = a + i;
        b = b + i;
    cout << a << endl;
    cout << b << endl;
}
"
GjJVGwZd,2024_mat_exemplo_saida,gpsgiraldi,C,Wednesday 22nd of May 2024 02:24:33 PM CDT,"#include <stdio.h>

int main()
{
    int n,i,j;
    int mat[4][4];
    for(i=0;i<4;i++){
        for(j=0;j<4;j++){
            mat[i][j]=i;
        }
    }
    for(i=0;i<4;i++){
        for(j=0;j<4;j++){
            printf(""%i "",mat[i][j]);
        }
        printf(""\n"");
    }
    return 0;
}"
CYDTERRJ,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 02:20:46 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int i, a;
    a = 0;
    for(i = 10; i >= 0; i = i - 2)
        a = a + i;
    cout << a << endl;
}
"
AUbFBEeP,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 02:18:29 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int a, b, s;
    s = 0;
    a = 5;
    while(a >= 5) 
    {
        s = s + a;
        a--;
    }
    cout << s << endl;
}
"
u7i8pXD9,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 02:15:35 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int a, b, x, y;
    x = 0; y = 0;
    a = 1; b = 2;
    do 
    {
        x = x + a; // 3
        y = y + b; // 4
        a++;
    } while(a <= b);
    cout << x << endl;
    cout << y << endl;

}
"
LucZzGvS,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 02:08:56 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int i, a;
    a = 0;
    for(i = 5; i >= 0; i--) 
        a = a + i;
    cout << a << endl;

}
"
af7GLd8c,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 02:05:15 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int a, b, s;
   s = 0;
   a = 1;
   while(a <= 4) 
   {
    s = s + a;
   }
   cout << s << endl;

}
"
K8fm6Ppa,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 02:01:56 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int a, b, s;
    a = 3; s = 0;
    do 
    {
        s = s + a;
        a++;
    } while(a < 3);
    cout << s << endl;


}
"
bn0KTaqN,2024_vet_tam_indef_auto_fill_saida_formal,gpsgiraldi,C,Wednesday 22nd of May 2024 01:59:03 PM CDT,"#include <stdio.h>

int main()
{
    int n,i;
        printf(""Insira o tamanho do vetor\n"");
        scanf(""%i"",&n);
    int vet[n];
        for(i=0;i<n;i++){
            vet[i]=(i+1);
        }
        printf(""Vetor = {"");
    for(i=0;i<(n-1);i++){
        printf(""%i "",vet[i]);
    }
    printf(""%i}"",vet[(n-1)]);
    return 0;
}
"
94dUZ8ny,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 01:52:00 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    for(int n = 10; n > 0; n--) 
    {
        cout << n << "","";
        if(n == 7) 
        {
            break;
        }
    }
    

}
"
5xjDWWVw,Untitled,7134956,C,Wednesday 22nd of May 2024 01:46:54 PM CDT,"        QDataStream stream(&file);

        quint32 header;
        stream >> header;
        if(header != 0x00000001)
            return;

        quint16 cnt;
        stream >> cnt;

        while(ui->plot->graphCount()) {
            ui->plot->removeGraph(0);
        }

        for(int i = 0; i < cnt; i++) {
            QString str;
            uint8_t r, g, b;
            ui->plot->addGraph();
            stream >> str;
            ui->plot->graph(i)->setName(str);
            stream >> r;
            stream >> g;
            stream >> b;
            ui->plot->graph(i)->setPen(QPen(QColor(r, g, b)));
            ui->plot->graph(i)->setVisible(true);
        }

        for(int i = 0; i < cnt; i++) {
            quint8 type;
            stream >> type;
        }

        quint64 data_length;
        stream >> data_length;
        for(int i = 0; i < data_length; i++) {
            float key;
            stream >> key;
            for(int j = 0; j < cnt; j++) {
                float value;
                stream >> value;
                ui->plot->graph(j)->addData(key, value);
            }
        }"
efpbBdjh,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 01:31:24 PM CDT,"#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main(int argc, char * argv[]) {
    if(argc < 3) { // brojot na argumenti e pomal od 3, sto znaci deka ne sme vnele dovolno za da imame ime na vlezna i izlezna datoteka
        printf(""Vnesete gi iminjata na datotekite preku komadna linija\n"");
        return 0;
    }
    FILE * in = fopen(argv[1], ""r"");
    FILE * out = fopen(argv[2], ""w"");
    if(in == NULL) {
        printf(""Ne vnesovte validen fajl za citanje\n"");
        return 0;
    }
    if(out == NULL) {
        printf(""Ne vnesovte validen fajl za pecatenje\n"");
        return 0;
    }

    char niza[2000];
    while(fgets(niza, 200, in) != NULL) {
        int broj = 0;
        int resultat = 0;
        char znak;
        for(int i = 0; i < strlen(niza); i++) {
            if(isdigit(niza[i])) {
                broj = broj * 10 + (niza[i] - '0');
            }
            else {
                if(niza[i] == '+') {
                    znak = '+';
                }
                else if(niza[i] == '-') {
                    znak = '-';
                }
                else if(niza[i] == '*') {
                    znak = '*';
                }
                else if(niza[i] == '/') {
                    znak = '/';
                }
                if(broj > 0) {
                    if(znak == '+') {
                        resultat += broj;
                    }
                    else if(znak == '-') {
                        resultat -= broj;
                    }
                    else if(znak == '*') {
                        resultat *= broj;
                    }
                    else if(znak == '/') {
                        resultat /= broj;
                    }
                    broj =0 ;

                }
            }
        }
        fprintf(out, ""%d\n"", resultat);
    }

    
}
"
96B5je3G,Markers,EXTREMEXPLOIT,JSON,Wednesday 22nd of May 2024 01:27:18 PM CDT,"{
  ""type"": ""FeatureCollection"",
  ""features"": [
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""user""
      },
      ""geometry"": {
        ""coordinates"": [
          -4.525723413607096,
          40.913631738156994
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""place""
      },
      ""geometry"": {
        ""coordinates"": [
          -3.071497552383562,
          38.695229996302885
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""request""
      },
      ""geometry"": {
        ""coordinates"": [
          -1.4080175371020118,
          40.98229854437258
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""user""
      },
      ""geometry"": {
        ""coordinates"": [
          1.2314920010785784,
          41.939297699153116
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""place""
      },
      ""geometry"": {
        ""coordinates"": [
          -6.229399288197612,
          38.75868990651716
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""request""
      },
      ""geometry"": {
        ""coordinates"": [
          -4.588446063039385,
          37.7648429021483
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""user""
      },
      ""geometry"": {
        ""coordinates"": [
          1.5653762351834644,
          48.9268542223499
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""place""
      },
      ""geometry"": {
        ""coordinates"": [
          1.866878801604571,
          48.68592746268661
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""request""
      },
      ""geometry"": {
        ""coordinates"": [
          3.6236590716954993,
          48.085062374047624
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""user""
      },
      ""geometry"": {
        ""coordinates"": [
          2.0110397017552657,
          46.34178186671022
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""place""
      },
      ""geometry"": {
        ""coordinates"": [
          10.57599600559027,
          49.76705663496719
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""request""
      },
      ""geometry"": {
        ""coordinates"": [
          8.877763386586878,
          50.450707082313926
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""user""
      },
      ""geometry"": {
        ""coordinates"": [
          8.572648768642182,
          49.92025869644479
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""place""
      },
      ""geometry"": {
        ""coordinates"": [
          9.442347952074215,
          49.632538074036376
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""request""
      },
      ""geometry"": {
        ""coordinates"": [
          12.029980833359986,
          52.593607229057625
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""user""
      },
      ""geometry"": {
        ""coordinates"": [
          12.483001793166608,
          52.63085614876772
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""place""
      },
      ""geometry"": {
        ""coordinates"": [
          13.485969931988251,
          51.73101076882449
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""request""
      },
      ""geometry"": {
        ""coordinates"": [
          14.442614305129325,
          50.08466423757983
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""user""
      },
      ""geometry"": {
        ""coordinates"": [
          14.484144817080534,
          50.09923528860372
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""place""
      },
      ""geometry"": {
        ""coordinates"": [
          14.502963330308773,
          50.07966742869135
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""request""
      },
      ""geometry"": {
        ""coordinates"": [
          14.449103447622434,
          50.07175474937972
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""user""
      },
      ""geometry"": {
        ""coordinates"": [
          14.525026414782388,
          50.107143432367764
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""place""
      },
      ""geometry"": {
        ""coordinates"": [
          14.421200134905149,
          50.130028068206144
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""request""
      },
      ""geometry"": {
        ""coordinates"": [
          14.378371794455177,
          50.07550302340576
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""user""
      },
      ""geometry"": {
        ""coordinates"": [
          1.1957179670654057,
          41.877846283226944
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""place""
      },
      ""geometry"": {
        ""coordinates"": [
          1.4674100253553775,
          41.9563358464315
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""request""
      },
      ""geometry"": {
        ""coordinates"": [
          1.345852254691863,
          41.84335598736595
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""user""
      },
      ""geometry"": {
        ""coordinates"": [
          2.1958633028550025,
          41.40932981197852
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""place""
      },
      ""geometry"": {
        ""coordinates"": [
          2.1529942816571292,
          41.40181990772794
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""request""
      },
      ""geometry"": {
        ""coordinates"": [
          2.1729808039598595,
          41.395156592023596
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""user""
      },
      ""geometry"": {
        ""coordinates"": [
          2.130787034655043,
          41.386826486730655
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""place""
      },
      ""geometry"": {
        ""coordinates"": [
          2.1552150063579347,
          41.39015865693378
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""request""
      },
      ""geometry"": {
        ""coordinates"": [
          -4.627428518957288,
          40.828919099050296
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""user""
      },
      ""geometry"": {
        ""coordinates"": [
          -4.23332681894675,
          40.91802829603722
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""place""
      },
      ""geometry"": {
        ""coordinates"": [
          -3.3395500581659974,
          38.56522564790953
        ],
        ""type"": ""Point""
      }
    },
    {
      ""type"": ""Feature"",
      ""properties"": {
        ""markerType"": ""request""
      },
      ""geometry"": {
        ""coordinates"": [
          -2.7760928010777945,
          38.58849262903797
        ],
        ""type"": ""Point""
      }
    }
  ]
}
"
R4p1rCUD,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 01:16:34 PM CDT,"#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main(int argc, char * argv[]) {
    if(argc < 3) { // brojot na argumenti e pomal od 3, sto znaci deka ne sme vnele dovolno za da imame ime na vlezna i izlezna datoteka
        printf(""Vnesete gi iminjata na datotekite preku komadna linija\n"");
        return 0;
    }
    FILE * in = fopen(argv[1], ""r"");
    FILE * out = fopen(argv[2], ""w"");
    if(in == NULL) {
        printf(""Ne vnesovte validen fajl za citanje\n"");
        return 0;
    }
    if(out == NULL) {
        printf(""Ne vnesovte validen fajl za pecatenje\n"");
        return 0;
    }

    int broj;
    char niza[2000];
    while(fscanf(in, ""%s%d"", niza, &broj) != EOF) {
        for(int i = 0; i < broj; i++) {
            fprintf(out, ""%s "", niza);
        }
        fprintf(out, ""\n"");
    }

    
}
"
SgPxwfmN,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 01:08:33 PM CDT,"#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main(int argc, char * argv[]) {
    if(argc < 3) { // brojot na argumenti e pomal od 3, sto znaci deka ne sme vnele dovolno za da imame ime na vlezna i izlezna datoteka
        printf(""Vnesete gi iminjata na datotekite preku komadna linija\n"");
        return 0;
    }
    FILE * in = fopen(argv[1], ""r"");
    FILE * out = fopen(argv[2], ""w"");
    if(in == NULL) {
        printf(""Ne vnesovte validen fajl za citanje\n"");
        return 0;
    }
    if(out == NULL) {
        printf(""Ne vnesovte validen fajl za pecatenje\n"");
        return 0;
    }

    char niza[2000];
    while(fgets(niza, 200, in) != NULL) {
        int broj = 0;
        int broj_na_tarabi = 0;
        int proizvod = 1;

        for(int i = 0; i < strlen(niza); i++) {
            if(niza[i] == '#') {
                broj_na_tarabi++;
            }
            if(isdigit(niza[i])) {
                broj = (broj * 10) + (niza[i] - '0');
            }
        }
        proizvod = broj * broj_na_tarabi;
        fprintf(out, ""%d\n"", proizvod);
    }

    
}
"
xw06nrBX,邀您一起看：⚙ 轻合集设置 ⚙,xiaomianao666,JavaScript,Wednesday 22nd of May 2024 12:59:17 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥⚙ 轻合集设置 ⚙@@
YgMgYDJ5,Untitled,Josif_tepe,C++,Wednesday 22nd of May 2024 12:59:03 PM CDT,"#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main(int argc, char * argv[]) {
    if(argc < 3) { // brojot na argumenti e pomal od 3, sto znaci deka ne sme vnele dovolno za da imame ime na vlezna i izlezna datoteka
        printf(""Vnesete gi iminjata na datotekite preku komadna linija\n"");
        return 0;
    }
    FILE * in = fopen(argv[1], ""r"");
    FILE * out = fopen(argv[2], ""w"");
    if(in == NULL) {
        printf(""Ne vnesovte validen fajl za citanje\n"");
        return 0;
    }
    if(out == NULL) {
        printf(""Ne vnesovte validen fajl za pecatenje\n"");
        return 0;
    }

    char niza[2000];
    while(fgets(niza, 200, in) != NULL) {
        int broj = 0;
        int zbir = 0;
        for(int i = 0; i < strlen(niza); i++) {
            if(isdigit(niza[i])) {
                broj = broj * 10 + (niza[i] - '0');
            }
            else {
                zbir += broj;
                broj = 0;
            }
        }
        fprintf(out, ""%d\n"", zbir);
    }

    
}
"
61kd65a1,Untitled,V497_Vesper,Lua,Wednesday 22nd of May 2024 12:34:48 PM CDT,"{
  ""root"": {
    ""lastchosenfile"": ""C:\\Users\\William\\Documents\\MultiMC\\instances\\CPM Testing\\.minecraft\\Custom Character Skins\\Misc Skins\\Friendly types\\Miyuki\\10 Miyuki Goth-ish.png""
  },
  ""gui"": {
    // When enabled, will hide the pants button from the main menu. You will need to use Mod Menu or the in-game shortcut to access the skin uploading gui if you turn this one
    ""disablepantsbutton"": false
  },
  ""filesystem"": {
    // When enable, will always use the native dialogue for opening and saving files
    ""usenativefilechooser"": true,
    // When enabled, will use the native dialogue for opening and saving files only when running inside a sandboxed environment (flatpaks),
    ""enablesandboxingcheck"": true
  }
}"
VMxKuEXu,fbdnytnym,gadungw71,PHP,Wednesday 22nd of May 2024 11:26:33 AM CDT,"•	https://www.imdb.com/list/ls545996127
•	https://www.imdb.com/list/ls545996807/
•	https://www.imdb.com/list/ls545992903/
•	https://www.imdb.com/list/ls545992994/
•	https://www.artstation.com/artwork/dK2y61
•	https://www.artstation.com/watchmyboofullthailan3/profile
•	https://www.artstation.com/artwork/vDLbr3
•	https://www.artstation.com/myboo2024fullhdthai5/profile
•	https://topmate.io/my_boo_full4k_thaisub/997469
•	https://topmate.io/my_boo_2024_full_hd_thai/997538
•	https://topmate.io/kingdom_of_the_planet_fhd/997564
•	https://topmate.io/watch_kingdomoftheplanet_4k/997586/pay
•	https://www.kooapp.com/koo/guest_P68S8O/8ec7c7db-b8b4-4f5b-9f30-7d62541e62d6
•	https://wandering.flarum.cloud/d/64643-xgvdsfgdrhgdrh
•	https://hiuderyy.hashnode.dev/sadafagg
•	https://click4r.com/posts/g/16877133/vdfrbvdrhgdrhdrh
•	https://medium.com/@rarawwwuu34/kingkilabanbatinkolebat-ca532be7a119
•	https://www.onfeetnation.com/profiles/blogs/fdgdrgdrh
•	https://namelessmc.com/profile/rarawwwuu34/
•	https://hackmd.io/@rerewilli6/BklNu9i70
•	https://demo.hedgedoc.org/s/hRD7lhNjq
•	https://rentry.co/n62t5oxd
•	https://paste.ee/p/f91fx
•	https://yamcode.com/dsfsdfsef
•	https://lifeisfeudal.com/Discussions/question/sampaipanaslagi
•	https://start.me/w/mOQDEo
•	https://plaza.rakuten.co.jp/aryasantosso/diary/202405230000/
•	https://telegra.ph/DSFSDFSED-05-22
•	https://muckrack.com/safdaf-afef/bio
•	https://profile.hatena.ne.jp/SAAFAGAT/
•	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/769495/Default.aspx
•	https://www.fitlynk.com/1716395076F424859
"
Ab3F7y8Q,Untitled,LessVegetables,Pascal,Wednesday 22nd of May 2024 10:27:45 AM CDT,"{
Задание 1
Присвоить случайным образом значения числовым переменным а1, а2,..., а10,
а11, а12 . Вывести на экран значения этих переменных следующей таблицей:

5.
а1 а2 а3 а4
а5 а6
а7 а8
а9 а10 а11
}
program exercise1;
Var n, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11 : Integer;
Begin
    n := 10;
    a1 := Random(n);
    a2 := Random(n);
    a3 := Random(n);
    a4 := Random(n);
    a5 := Random(n);
    a6 := Random(n);
    a7 := Random(n);
    a8 := Random(n);
    a9 := Random(n);
    a10 := Random(n);
    a11 := Random(n);
    Writeln(a1, ' ', a2, ' ', a3, ' ', a4);
    Writeln(a5, ' ', a6);
    Writeln(a7, ' ', a8);
    Writeln(a9, ' ', a10, ' ', a11);
End.


{
Задание 2
Даны x, y, z . Вычислить a, b, если:
a = (1 + sin^2(x+y))/(2 + abs(x - (2x)/(1 + x^2y^2)) + x
b = cos^2(arctg(1/z))
}
program exercise2;
Var x, y, z, a, b : Real;
Begin
    Readln(x);
    Readln(y);
    Readln(z);
    
    a := (1 + sqr(sin(x + y))) / (2 + abs(x - (2 * x) / (1 + x*x*y*y))) + x;
    
    b := sqr(cos(arctan(1 / z)));
    
    Writeln(a:10:3);
    Writeln(b:10:3);
End.
program exercise2;
Begin
    Writeln(""yo"");
End.

{
Задание 3
Даны x, y, z . Вычислить a, b, если:
a = (1 + sin^2(x+y))/(2 + abs(x - (2x)/(1 + x^2y^2)) + x
b = cos^2(arctg(1/z))
}
program exercise3;
Var a, b, c, p, S : Real;
Begin
    Readln(a);
    Readln(b);
    Readln(c);
    
    p := (a + b + c) / 2;
    
    S := sqrt(p * (p - a)*(p - b)*(p - c));
    
    Writeln(S:10:3);
End.
"
