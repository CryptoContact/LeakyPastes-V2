id,title,username,language,date,content
6GgjbHzp,http://localhost:8080/furnitures/wooden-chair route,viscousguy,JSON,Wednesday 8th of May 2024 12:52:39 AM CDT,"{
  ""Id"": 1,
  ""FurnitureType"": {
    ""Id"": 1,
    ""Name"": ""Chair"",
    ""Slug"": ""chair"",
    ""Display"": true
  },
  ""RoomType"": {
    ""Id"": 1,
    ""Name"": ""Living Room"",
    ""Slug"": ""living-room"",
    ""Display"": true
  },
  ""Name"": ""Wooden Chair"",
  ""Description"": ""A comfortable wooden chair."",
  ""Dimensions"": ""20x20x30"",
  ""Price"": 49.99,
  ""Contractor"": {
    ""Id"": 1,
    ""Firstname"": ""John"",
    ""Lastname"": ""Doe"",
    ""City"": ""New York"",
    ""State"": ""NY"",
    ""Mobile"": ""1234567890"",
    ""Email"": ""john.doe@example.com"",
    ""Slug"": ""john-doe"",
    ""Pincode"": ""10001"",
    ""Verified"": true,
    ""Active"": true,
    ""Display"": true
  },
  ""Slug"": ""wooden-chair"",
  ""Display"": true,
  ""FurnitureColor"": [
    {
      ""Id"": 1,
      ""Color"": {
        ""Id"": 1,
        ""Name"": ""Red"",
        ""Display"": true
      },
      ""furniture_id"": 1
    },
    {
      ""Id"": 2,
      ""Color"": {
        ""Id"": 2,
        ""Name"": ""Blue"",
        ""Display"": true
      },
      ""furniture_id"": 1
    }
  ],
  ""FurnitureMaterial"": [
    {
      ""Id"": 1,
      ""Material"": {
        ""Id"": 1,
        ""Name"": ""Wood"",
        ""Display"": true
      },
      ""furniture_id"": 1
    }
  ],
  ""FurnitureImage"": [
    {
      ""Id"": 1,
      ""ImagePath"": ""https://res.cloudinary.com/dxqdslrdu/image/upload/v1715141248/wooden-chair_i5wfmp.webp"",
      ""furniture_id"": 1
    }
  ]
}"
GXrbuMyL,LOGO,NiXXR1,Python,Wednesday 8th of May 2024 12:27:00 AM CDT,"import requests
import os
def cos():
    if os.name == 'nt':
        os.system('cls')
    else:
        os.system('clear')
cos()
try:
    import colorama
except ModuleNotFoundError:
    os.system(""pip install colorama"")
    cos()
    print(""RUN THE CODE AGAIN"")
    exit
from colorama import Fore
Red = Fore.RED
Reset = Fore.RESET
Grey = Fore.LIGHTBLACK_EX
Cyan = Fore.CYAN
LOGO = (f""""""                                                                                                                                                                                                    
{Grey}                                             .  /    /                                              
{Grey}                                   *  .%,  *%.  /    ((   #/  .%   ,                                
{Grey}                              (    *   %,  *%.  /#   ((   #/  .%*  ,%.  *#                          
{Grey}                             (/   #,  , ,  * .  /#   (    #   .%,  ,#.  *#   ((                     
{Grey}                     .  /(   //   #,  .#,  *%.(,*(,( */,(.(*{Grey}(.#,  ,#.  *#   /(   (/                
{Grey}                   /#   /(   (/   (,  .(,/*{Red}(#.  *(   //  .#*{Grey}*#.#,/#.(./,.(   /(   (/                
{Grey}              ,(.  *(.  /(   //   #,##(#.#{Red} ,#.  *(   //   ((,{Grey}#((#*#((./(./.(./(   (/                
{Grey}              .(.  ,(   */   /*##(####(##{Red}  *( / *(   /*   (*#{Grey}#(####(#(*(#/ /.*/   //                
{Grey}          (   .(    /   */  .####(######.{Red}  ,( / */   /* / /*{Grey}####(####(###/#/#,*   /*                
{Grey}          /.   /   ,/   */ ##############{Red}  ./ * ,/   ,. * /{Grey},###############*#,, * **    ,           
{Grey}                   .*   .,#/##############{Red} .* , .. . .. , {Grey}#####(#########(#*# .   *,    .           
{Grey}               ,    ,   .. /%########(%##(##,{Red}      .  . {Grey}(#(##(#(####(####,#,# ,   ,.                
{Grey}                    ,   .. .#( #/%(##(#(#(##(#(#((#(####(#(##(#(##(#(#.##,    .   ,.                
{Grey}                        .. .  . .#/ #(## ###( (##( (##( (#(# (#/# ##*    .   ..   ..                
{Grey}                         .   .  . .  .#. . #. , #. * (  * (  ( .    .    .   ..   ..                
{Grey}                    .   ..           . .    . .  .   .. . .    .    .    .   ..                     
{Grey}                         .   .                          . .    .    .    .    .                     
{Grey}                                       .                       .                                    
{Red}                oooooo   oooooo     oooo            .o8                 o8o
                 `888.    `888.     .8'            ""888                 `""'                            
                  `888.   .8888.   .8'    .ooooo.   888oooo.   .oooo.o oooo   .ooooo.            
                   `888  .8'`888. .8'    d88' `88b  d88' `88b d88(  ""8 `888  d88' `""Y8   {Cyan} TELEGRAM: PYNiXXR{Red}
                    `888.8'  `888.8'     888ooo888  888   888 `""Y88b.   888  888        {Reset}  Git-Hub: R4P-x{Red}
                     `888'    `888'      888    .o  888   888 o.  )88b  888  888   .o8 
                      `8'      `8'       `Y8bod8P'  `Y8bod8P' 8""""888P' o888o `Y8bod8P'{Red}                   
                      
                      
                      
                      
                                                                                     
"""""")
print(LOGO)"
a4s8hk8A,WAVESHARE esp32-S3 Relay 6Ch-TEST RELAY,hwthinker,Arduino,Wednesday 8th of May 2024 12:19:17 AM CDT,"#include <Arduino.h>

// Deklarasi pin relay
const int relay1 = 1;
const int relay2 = 2;
const int relay3 = 41;
const int relay4 = 42;
const int relay5 = 45;
const int relay6 = 46;

void setup() {
  // Inisialisasi pin relay sebagai output
  pinMode(relay1, OUTPUT);
  pinMode(relay2, OUTPUT);
  pinMode(relay3, OUTPUT);
  pinMode(relay4, OUTPUT);
  pinMode(relay5, OUTPUT);
  pinMode(relay6, OUTPUT);
}

void loop() {
  digitalWrite(relay1, HIGH);
  delay(1000);
  digitalWrite(relay1, LOW);

  digitalWrite(relay2, HIGH);
  delay(1000);
  digitalWrite(relay2, LOW);

  digitalWrite(relay3, HIGH);
  delay(1000);
  digitalWrite(relay3, LOW);

  digitalWrite(relay4, HIGH);
  delay(1000);
  digitalWrite(relay4, LOW);

  digitalWrite(relay5, HIGH);
  delay(1000);
  digitalWrite(relay5, LOW);

  digitalWrite(relay6, HIGH);
  delay(1000);
  digitalWrite(relay6, LOW);


  // Ulangi loop
  delay(1000);
}
"
Ach46Ge2,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Wednesday 8th of May 2024 12:12:21 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_771999.pdf

Working as of:
08 May 2024"
JSaYJNd9,trello importer,masiur,JavaScript,Tuesday 7th of May 2024 11:15:05 PM CDT,"
// Make a file upload for user so that they can upload the json file. Then read the file
const jsonfile = require('jsonfile');

const jsonFilePath = './premium.json';

async function importData() {
    let data;
    data = await jsonfile.readFile(jsonFilePath);
    // console.log(data);

    let ProjectName = data.name;
    console.log(ProjectName);

    const ProjectData = {
        name: ProjectName,
        description: data.desc, // need to strip tags if markdown to html find a library or something
        businessId: 1, // getCurrentBusinessId()
        leadId: 1, // getCurrentLeadId()
        status : 'active', // as per your need
    };
    console.log(ProjectData);

    // now section/stage/list creation
    let lists = data.lists;
    let listSectionMapper = {};

    // create a foreach loop for lists
    for (const list of lists) {
        const sectionData = {
            name: list.name,
            projectId: 1, // newly created project id
            order: list.pos,
        };
        console.log(sectionData);
        // Create Section in Database Here
        // let sectionId = 'Insert into ProjectSection in Database and get the sectionId here';
        listSectionMapper[list.id] = sectionId;
    }

    // now card/task creation
    let cards = data.cards;
    for (let card of cards) {
        const taskData = {
            title: card.name,
            description: card.desc, // need to strip tags if markdown to html find a library or something
            projectSectionId: listSectionMapper[card.idList], // get the sectionId from listSectionMapper
            order: card.pos,
            dueDate: card.due ? card.due : null, // format if necessary
            // ... add columns if required
        };
        console.log(cardData);
        // Create Card in Database Here
    }
    // Now map create labels and map to cards
    let labels = data.labels;
    // ....

}

importData();

"
TcfLuVnw,LibNebulaNodesBPLibrary.h,AbyssWolf,C++,Tuesday 7th of May 2024 10:52:52 PM CDT,"// Copyright Epic Games, Inc. All Rights Reserved.

#pragma once
#include ""Math/UnrealMath.h""
#include ""Kismet/BlueprintFunctionLibrary.h""
#include ""LibNebulaNodesBPLibrary.generated.h""

/* 
*	Function library class.
*	Each function in it is expected to be static and represents blueprint node that can be called in any blueprint.
*
*	When declaring function you can define metadata for the node. Key function specifiers will be BlueprintPure and BlueprintCallable.
*	BlueprintPure - means the function does not affect the owning object in any way and thus creates a node without Exec pins.
*	BlueprintCallable - makes a function which can be executed in Blueprints - Thus it has Exec pins.
*	DisplayName - full name of the node, shown when you mouse over the node and in the blueprint drop down menu.
*				Its lets you name the node using characters not allowed in C++ function names.
*	CompactNodeTitle - the word(s) that appear on the node.
*	Keywords -	the list of keywords that helps you to find node when you search for it using Blueprint drop-down menu. 
*				Good example is ""Print String"" node which you can find also by using keyword ""log"".
*	Category -	the category your node will be under in the Blueprint drop-down menu.
*
*	For more info on custom blueprint nodes visit documentation:
*	https://wiki.unrealengine.com/Custom_Blueprint_Node_Creation
*/
UCLASS()
class ULibNebulaNodesBPLibrary : public UBlueprintFunctionLibrary
{
	GENERATED_BODY()

	//UFUNCTION(BlueprintCallable, meta = (DisplayName = ""Execute Sample function"", Keywords = ""LibNebulaNodes sample test testing""), Category = ""LibNebulaNodesTesting"")
	//static float LibNebulaNodesSampleFunction(float Param);

	UFUNCTION(BlueprintPure, Category=""Nebula Nodes"", meta = (DisplayName = ""Random Vector2""))
	static FVector2f RandomVector2(float fMin, float fMax, bool bPreventDuplicates, bool bRoundToInteger, float& x, float& y);
};
"
Tx9AfUTi,Untitled,betinhoh4y,Python,Tuesday 7th of May 2024 10:43:34 PM CDT,"

Questão 1#

total_mercadorias = 0
total_valor_estoque = 0
while True:
    codigo = input(""digite o código da mercadoria: "")
    quantidade = int(input(""digite a quantidade total de mercadorias no estoque: ""))
    valor_unitario = float(input(""digite o valor de cada mercadoria: ""))
    valor_total_mercadoria = quantidade * valor_unitario
    total_valor_estoque += valor_total_mercadoria
    total_mercadorias += quantidade
    continuar = input(""quer colocar mais mercadorias (SIM/NÃO)? "").upper()
    if continuar != ""SIM"":
        break
if total_mercadorias > 0:
    media_valor_mercadorias = total_valor_estoque / total_mercadorias
else:
    media_valor_mercadorias = 0
print(""a media  de valor das mercadorias:"", media_valor_mercadorias)
print(""o valor total em estoque:"", total_valor_estoque)


Questão 2#

notas = []
for i in range(10):
    nota = float(input(""Digite a nota do aluno {}: "".format(i+1)))
    notas.append(nota)
media1 = sum(notas) / len(notas)
alunos_acima_media = sum(1 for nota in notas if nota > media1)
print(""media dos alunos é:"", media1)
print(""alunos com nota acima da media é:"", alunos_acima_media)

Questão 3#

nome = input(""Digite seu nome: "")
sexo = input(""Digite seu sexo (F para feminino ou M para masculino): "")
estado_civil = input(""digite seu estado civil (solteira, casada, etc.): "")

if sexo == ""F"" and estado_civil.lower() == ""casada"":
    tempo_casada = int(input(""Digite o tempo de casamento (em anos): ""))
    print(""parabéns, {}! obrigado por compartilhar seu tempo de casamento."".format(nome))
elif sexo == ""F"" and estado_civil.lower() == ""solteira"":
    print(""obrigado pela participação, {}!"".format(nome))
else:
    print(""obrigado pela participação, {}!"".format(nome))


questão 4#

preco_produto = float(input(""digite o preço do produto: ""))
codigo_pagamento = int(input(""Digite o número para ofecerer diferentes formas de pagamentos ( (1) 10% de desconto para pagamento à vista em dinheiro ou cheque , (2) 15% de desconto para pagamento à vista no cartão de crédito , (3)  Parcelamento em 2 vezes sem juros ou (4) Preço normal em 2 vezes com juros de 10% ): ""))

if codigo_pagamento == 1:
    valor_de_pagar = preco_produto * 0.9 
elif codigo_pagamento == 2:
    valor_de_pagar = preco_produto * 0.85  
elif codigo_pagamento == 3:
    valor_de_pagar = preco_produto / 2 
elif codigo_pagamento == 4:
    valor_de_pagar = (preco_produto * 1.1) / 2  
else:
    valor_de_pagar = ""Código de pagamento inválido""

print(valor_de_pagar if isinstance(valor_de_pagar, float) else valor_de_pagar)

"
YAQD44jY,MainScript 4,Sungmingamerpro13,CSS,Tuesday 7th of May 2024 10:02:28 PM CDT,"local CreateDialogueEvent = game.ReplicatedStorage.CreateDialogueEvent
local HideDialogueEvent = game.ReplicatedStorage.CreateDialogueEvent.HideDialogueEvent
local TopTextValue = game.ReplicatedStorage.TopText
local ObjectiveValue = game.ReplicatedStorage.TopText.Objective
local ItemsFound = game.ReplicatedStorage.ItemsFound

-- Other Useful Functions

local randomPlayer
local randomPlayerName
local randomPlayerId

local function getPlayerImage(player_id)
	local content, isReady = game:GetService(""Players""):GetUserThumbnailAsync(player_id, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
	return content
end

local function getRandomPlayer()
	local players = game.Players:getPlayers()
	local number = math.random(1,#players)
	randomPlayer = players[number]
	randomPlayerName = randomPlayer.Name
	randomPlayerId = randomPlayer.UserId
end

function BroadCastMessage(name, Id, Message)
	CreateDialogueEvent:FireAllClients(name, Id, Message)
end

function HideCastMessage()
	HideDialogueEvent:FireAllClients()
end

function TopText(Text, Time)
	for i = Time, 0, -1 do
		TopTextValue.Value = Text..""(""..i.."")""
		wait(1)
	end
	TopTextValue.Value = ""None""
end

function SetObjectives(Objective)
	ObjectiveValue.Value = Objective
end

function ClearObjectives()
	ObjectiveValue.Value = ""None""
end

function SetItemsFound(Text)
	ItemsFound.Value = Text
end

function ClearItemsFound()
	ItemsFound.Value = ""None""
end

--- NPCImages ---

local NPC_Image = ""rbxassetid://16918435393""
local NPC_Angry = ""rbxassetid://17421682251""
local NPC_Sad = ""rbxassetid://17047446364""
local NPC_Image2 = ""rbxassetid://17047444939""
local Monster_Image = ""rbxassetid://17022795013""

---- MainScript of Story ----
"
nucYjPxF,Interceptor JS,lolohac,JavaScript,Tuesday 7th of May 2024 09:36:55 PM CDT,"const axios = require(""axios"");
const Https = require('https')
const {
  renewTokenIDIfood,
  getIfoodTokenID,
} = require(""../../api/controllers/tokensController"");
const CronJob = require(""cron"").CronJob;

const headers = {
  'Accept': 'application/json',
  'Cache-Control': 'no-cache',
  'Content-Type': 'application/json'
}

const timeout = 30000
const httpsAgent = new Https.Agent({
  rejectUnauthorized: false
})

const api = axios.create({
  baseURL: ""https://pos-api.ifood.com.br"",
  timeout,
  httpsAgent,
  headers
});

api.interceptors.request.use(
  async (config) => {
    const response = await getIfoodTokenID(config.headers.user);
    config.headers.Authorization = `Bearer ${response}`;
    return config;
  },
  (error) => {
    return Promise.reject(error);
  }
);

api.interceptors.response.use(
  (response) => {
    // return a successful response back
    return response;
  },
  (error) => {
    // Tratamento dos errors
    if (error.response.status === 401) {
      renewTokenIDIfood(error.config.headers.user);
      const error2 = {
        status: error.response.status,
        message: error.response.data.message,
        statusText: error.response.statusText,
      };
      return Promise.reject(error2);
    } else if (error.response.status === 400) {
      const error2 = {
        status: error.response.data.statusCode || error.response.status,
        message: error.response.data.message || error.response.statusText,
        error: error.response.data.error || [
          ""Request for some resource not found (old or nonexistent request"",
          ""URL not found (wrong or invalid request address)"",
          ""No new events found (no endpoint / events: polling)"",
        ],
      };
      return Promise.reject(error2);
    } else if (error.response.status === 404) {
      const error2 = {
        status: error.response.status,
        message: error.response.statusText,
        error: error.response.data.error || [
          ""Request for some resource not found (old or nonexistent request"",
          ""URL not found (wrong or invalid request address)"",
          ""No new events found (no endpoint / events: polling)"",
        ],
      };
      return Promise.reject(error2);
    } else if (error.response.status === 500) {
      const error2 = {
        status: error.response.status,
        message: error.response.statusText,
      };
      return Promise.reject(error2);
      
    }else if (error.response.status === 502) {
      const error2 = {
        status: 444,
        message: error.response.statusText,
      };
      return Promise.reject(error2);
    } 
    else if (error.response.status === 409) {
      const error2 = {
        status: error.response.status,
        message: error.response.data.message,
        statusText: error.response.statusText,
      };
      return Promise.reject(error2);
    } else {
        const error2 = {
          status: error.response.status,
          statusText: error.response.statusText,
          message: error.response.data,
      };
      return Promise.reject(error2);
    }
  }
);

module.exports = api;"
CGevC1HF,Sigma style,Dsaqwed123,LScript,Tuesday 7th of May 2024 09:21:16 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/KadenWare/Styles/main/sigma%20v.0.4""))()"
12qitJY3,M1SCO Style,Dsaqwed123,LScript,Tuesday 7th of May 2024 09:18:57 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/KadenWare/Styles/main/M1SCO""))()"
GZtSrK5V,Kiwami style,Dsaqwed123,LScript,Tuesday 7th of May 2024 09:16:33 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/TargaIsHere/R2FMods/main/KiwamiStylefr""))()"
PZh053CS,Tardis - Alarm System,Alexr360,Lua,Tuesday 7th of May 2024 09:00:47 PM CDT,"local tardis = peripheral.find(""tardisinterface"")
local count = tardis.getLifeSigns()
print(count)"
thNh7CXC,Anti Lock 67su,Isaiah27473,Lua,Tuesday 7th of May 2024 08:27:10 PM CDT,"-- Source made fully by 67su

-- I ONLY MADE Y AXIS MODIFIABLE BECAUSE DAHOOD PATCHED THE OTHER AXIS'S

getgenv().Settings = {
	Antilock = false, -- If the antilock is enabled once you join
	yAxis = -10000, -- Set to 0 to just break prediction, but it will make desync break

	Keybind = Enum.KeyCode.B, -- Antilock keybind

	DesyncMode = true, -- If you stand still no one can shoot you and you shoot from the sky
	DesyncAngles = 0.1, -- How fast you desync, keep it on 0.1 if you don't want it to be obvious

	VelocityVisual = false -- Sees your velocity
}

-- Coding

local veldot = Drawing.new(""Circle"")

spawn(function()
	veldot.Filled = true
	veldot.Thickness = 1
	veldot.Transparency = 1
	veldot.Radius = 5
	veldot.Color = Color3.fromRGB(170, 120, 210)
end)

-- Velocity Visualizer

game:GetService(""RunService"").Heartbeat:Connect(function()
	local pos, onscreen = workspace.CurrentCamera:WorldToViewportPoint(
		game:GetService(""Players"").LocalPlayer.Character[""HumanoidRootPart""].CFrame.Position +
			(game:GetService(""Players"").LocalPlayer.Character[""HumanoidRootPart""].AssemblyLinearVelocity *
				0.15))

	if Settings.VelocityVisual and onscreen then
		veldot.Visible = false
		veldot.Position = Vector2.new(pos.X, pos.Y)
	else
		veldot.Visible = false
	end
end)

-- Anti-Aim Functions

game:GetService(""RunService"").Heartbeat:Connect(function()
	local hrp, hum = game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart, game:GetService(""Players"").LocalPlayer.Character.Humanoid
	local velocity, cframe = hrp.AssemblyLinearVelocity, hrp.CFrame

	if Settings.Antilock then
		hrp.AssemblyLinearVelocity = Vector3.new(
			0,
			Settings.yAxis,
			0)

		if Settings.DesyncMode then
			hrp.CFrame = cframe *
				CFrame.Angles(0, math.rad(Settings.DesyncAngles), 0)
		end

		game:GetService(""RunService"").RenderStepped:Wait()
		hrp.AssemblyLinearVelocity = velocity
	end
end)

game:GetService(""UserInputService"").InputBegan:Connect(function(Key)
	if Key.KeyCode == Settings.Keybind and not game:GetService(""UserInputService""):GetFocusedTextBox() then
		Settings.Antilock = not Settings.Antilock
	end
end)"
g60eQgRE,Vampirism code,Sonicover,Ruby,Tuesday 7th of May 2024 07:42:15 PM CDT,"#==================================================
# Add an OnDealingHit handler to apply the healing
Battle::AbilityEffects::OnDealingHit.add(:VAMPIRISM,
  proc { |ability, user, targets, move, battle|
    # Apply healing to the user
	next if !move.bitingMove?
	next if !user.canHeal?
	heal = (targets.damageState.hpLost / 2)
	next if heal <= 0
	battle.pbShowAbilitySplash(user)
	user.pbRecoverHP(heal)
	if Battle::Scene::USE_ABILITY_SPLASH
        battle.pbDisplay(_INTL(""{1}'s stole some health!"", user.pbThis))
      else
        battle.pbDisplay(_INTL(""{1}'s {2} recovers it a bit!"", user.pbThis,
          user.abilityName))
    end
    battle.pbHideAbilitySplash(user)
  }
)"
hcgvLSmF,2024-05-07_stats.json,rdp_snitch,JSON,Tuesday 7th of May 2024 07:18:10 PM CDT,"{
  ""ip"": {
    ""81.19.135.47"": 9,
    ""45.87.212.180"": 3,
    ""162.142.125.224"": 3,
    ""116.140.196.215"": 6,
    ""112.4.139.162"": 6,
    ""87.251.75.145"": 9,
    ""103.47.194.128"": 3,
    ""194.165.16.78"": 6,
    ""198.235.24.82"": 9,
    ""45.227.254.49"": 6,
    ""194.165.16.76"": 6,
    ""152.32.139.9"": 3,
    ""185.170.144.3"": 6,
    ""185.161.248.121"": 18,
    ""167.94.138.63"": 3,
    ""167.94.138.116"": 3,
    ""123.56.20.194"": 3,
    ""45.145.31.176"": 3,
    ""118.194.236.118"": 3,
    ""123.31.20.85"": 15,
    ""39.104.209.131"": 3,
    ""198.235.24.245"": 9,
    ""64.124.50.139"": 6,
    ""159.223.34.114"": 6,
    ""182.163.102.197"": 3,
    ""58.218.204.183"": 9,
    ""139.162.251.91"": 522,
    ""167.94.138.53"": 3,
    ""205.210.31.39"": 9,
    ""121.100.26.14"": 6,
    ""87.251.75.64"": 3,
    ""194.165.16.73"": 6,
    ""178.170.192.172"": 3,
    ""68.183.175.150"": 3,
    ""45.227.254.26"": 6,
    ""84.17.46.176"": 3,
    ""194.165.16.11"": 6,
    ""68.183.181.29"": 3,
    ""45.79.114.218"": 12,
    ""205.210.31.234"": 9
  },
  ""asn"": {
    ""AS209588"": 9,
    ""AS9009"": 3,
    ""AS398324"": 12,
    ""AS4837"": 6,
    ""AS56046"": 6,
    ""AS208091"": 12,
    ""AS140832"": 3,
    ""AS48721"": 24,
    ""AS396982"": 36,
    ""AS267784"": 12,
    ""AS135377"": 6,
    ""AS197414"": 6,
    ""AS49202"": 18,
    ""AS37963"": 6,
    ""AS198781"": 3,
    ""AS45899"": 15,
    ""AS6461"": 6,
    ""AS14061"": 12,
    ""AS9230"": 3,
    ""AS4134"": 9,
    ""AS63949"": 534,
    ""AS38761"": 6,
    ""AS208677"": 3,
    ""AS60068"": 3
  },
  ""isp"": {
    ""Flyservers S.A."": 45,
    ""M247 Europe SRL"": 3,
    ""Censys, Inc."": 12,
    ""China Unicom CHINA169 Network"": 6,
    ""China Mobile Communications Corporation"": 6,
    ""Xhost Internet Solutions LP"": 18,
    ""FTECH"": 3,
    ""Google LLC"": 36,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Kisara LLC"": 18,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""Connect Managed Services (UK) Limited"": 3,
    ""VietNam Post and Telecom Corporation"": 15,
    ""Zayo Bandwidth"": 6,
    ""DigitalOcean, LLC"": 12,
    ""Bangladesh Online Ltd"": 3,
    ""Chinanet"": 9,
    ""Akamai Technologies, Inc."": 534,
    ""Sakti Putra Mandiri"": 6,
    ""\""Cloud Technologies\"" LLC trading as Cloud.ru"": 3,
    ""DataCamp Limited"": 3
  },
  ""org"": {
    ""Alviva Holding Limited"": 9,
    ""M247 LTD"": 3,
    ""Censys Inc"": 3,
    ""China United Network Communications Corporation Limited"": 6,
    ""China Mobile Communications Corporation"": 6,
    ""Xhost Internet Solutions"": 12,
    ""Unknown"": 9,
    ""Flyservers S.A"": 24,
    ""Palo Alto Networks, Inc"": 36,
    ""UAB Host Baltic"": 12,
    ""Ucloud Information Technology"": 6,
    ""Xhostis"": 6,
    ""Kisara LLC"": 18,
    ""Censys, Inc"": 9,
    ""Aliyun Computing Co., LTD"": 6,
    ""Connect Managed Services (UK) Limited"": 3,
    ""Vietnam Posts and Telecommunications Group"": 15,
    ""Microsoft Corporation"": 6,
    ""DigitalOcean, LLC"": 12,
    ""Bangladesh Online Ltd"": 3,
    ""Chinanet JS"": 9,
    ""Linode, LLC"": 522,
    ""Sbercloud"": 3,
    ""Cdn77 AMS"": 3,
    ""Linode"": 12
  },
  ""regionName"": {
    ""Hesse"": 12,
    ""Michigan"": 12,
    ""Beijing"": 12,
    ""Jiangsu"": 15,
    ""North Holland"": 21,
    ""Hanoi"": 18,
    ""Kaunas"": 24,
    ""California"": 51,
    ""Vilnius"": 12,
    ""Seoul"": 3,
    ""Moscow"": 21,
    ""England"": 525,
    ""Tokyo"": 3,
    ""Virginia"": 6,
    ""Central Singapore"": 6,
    ""Chittagong"": 3,
    ""Jakarta"": 6,
    ""South West"": 3
  },
  ""country"": {
    ""Germany"": 12,
    ""United States"": 69,
    ""China"": 27,
    ""The Netherlands"": 21,
    ""Vietnam"": 18,
    ""Lithuania"": 36,
    ""South Korea"": 3,
    ""Russia"": 21,
    ""United Kingdom"": 525,
    ""Japan"": 3,
    ""Singapore"": 9,
    ""Bangladesh"": 3,
    ""Indonesia"": 6
  },
  ""account"": {
    ""Domain"": 15,
    ""(empty)"": 27,
    ""Administr"": 18,
    ""hello"": 60,
    ""Test"": 54,
    ""bgGNCACON"": 3,
    ""ecSEbP"": 3,
    ""MwnDRh"": 3,
    ""Administrator"": 63,
    ""TwmquylCy"": 3,
    ""NlJpYo"": 3,
    ""gKZJYm"": 3,
    ""Admin"": 63,
    ""Whatuptime.com"": 66,
    ""John"": 66,
    ""Jakartakini123#"": 75,
    ""Hello World"": 72,
    ""TinHocThucHanh"": 63,
    ""Hey"": 60,
    ""JjyyLdpqv"": 3,
    ""ADVsJM"": 3,
    ""HtpPnm"": 3,
    ""beio"": 3,
    ""wwb1zmv4"": 12,
    ""FgFIMXzgO"": 3,
    ""ZiSEfj"": 3,
    ""JakMSI"": 3
  },
  ""keyboard"": {
    ""Unknown"": 753
  },
  ""client_build"": {
    ""Unknown"": 753
  },
  ""client_name"": {
    ""Unknown"": 753
  },
  ""ip_type"": {
    ""Unknown"": 138,
    ""hosting & proxy"": 12,
    ""mobile"": 6,
    ""hosting"": 588,
    ""proxy"": 9
  }
}"
q9WYyT8z,2024-05-07_stats.json,rdp_snitch,JSON,Tuesday 7th of May 2024 07:16:09 PM CDT,"{
  ""ip"": {
    ""81.19.135.47"": 6,
    ""45.87.212.180"": 2,
    ""162.142.125.224"": 2,
    ""116.140.196.215"": 4,
    ""112.4.139.162"": 4,
    ""87.251.75.145"": 6,
    ""103.47.194.128"": 2,
    ""194.165.16.78"": 4,
    ""198.235.24.82"": 6,
    ""45.227.254.49"": 4,
    ""194.165.16.76"": 4,
    ""152.32.139.9"": 2,
    ""185.170.144.3"": 4,
    ""185.161.248.121"": 12,
    ""167.94.138.63"": 2,
    ""167.94.138.116"": 2,
    ""123.56.20.194"": 2,
    ""45.145.31.176"": 2,
    ""118.194.236.118"": 2,
    ""123.31.20.85"": 10,
    ""39.104.209.131"": 2,
    ""198.235.24.245"": 6,
    ""64.124.50.139"": 4,
    ""159.223.34.114"": 4,
    ""182.163.102.197"": 2,
    ""58.218.204.183"": 6,
    ""139.162.251.91"": 348,
    ""167.94.138.53"": 2,
    ""205.210.31.39"": 6,
    ""121.100.26.14"": 4,
    ""87.251.75.64"": 2,
    ""194.165.16.73"": 4,
    ""178.170.192.172"": 2,
    ""68.183.175.150"": 2,
    ""45.227.254.26"": 4,
    ""84.17.46.176"": 2,
    ""194.165.16.11"": 4,
    ""68.183.181.29"": 2,
    ""45.79.114.218"": 8,
    ""205.210.31.234"": 6
  },
  ""asn"": {
    ""AS209588"": 6,
    ""AS9009"": 2,
    ""AS398324"": 8,
    ""AS4837"": 4,
    ""AS56046"": 4,
    ""AS208091"": 8,
    ""AS140832"": 2,
    ""AS48721"": 16,
    ""AS396982"": 24,
    ""AS267784"": 8,
    ""AS135377"": 4,
    ""AS197414"": 4,
    ""AS49202"": 12,
    ""AS37963"": 4,
    ""AS198781"": 2,
    ""AS45899"": 10,
    ""AS6461"": 4,
    ""AS14061"": 8,
    ""AS9230"": 2,
    ""AS4134"": 6,
    ""AS63949"": 356,
    ""AS38761"": 4,
    ""AS208677"": 2,
    ""AS60068"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 30,
    ""M247 Europe SRL"": 2,
    ""Censys, Inc."": 8,
    ""China Unicom CHINA169 Network"": 4,
    ""China Mobile Communications Corporation"": 4,
    ""Xhost Internet Solutions LP"": 12,
    ""FTECH"": 2,
    ""Google LLC"": 24,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Kisara LLC"": 12,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""Connect Managed Services (UK) Limited"": 2,
    ""VietNam Post and Telecom Corporation"": 10,
    ""Zayo Bandwidth"": 4,
    ""DigitalOcean, LLC"": 8,
    ""Bangladesh Online Ltd"": 2,
    ""Chinanet"": 6,
    ""Akamai Technologies, Inc."": 356,
    ""Sakti Putra Mandiri"": 4,
    ""\""Cloud Technologies\"" LLC trading as Cloud.ru"": 2,
    ""DataCamp Limited"": 2
  },
  ""org"": {
    ""Alviva Holding Limited"": 6,
    ""M247 LTD"": 2,
    ""Censys Inc"": 2,
    ""China United Network Communications Corporation Limited"": 4,
    ""China Mobile Communications Corporation"": 4,
    ""Xhost Internet Solutions"": 8,
    ""Unknown"": 6,
    ""Flyservers S.A"": 16,
    ""Palo Alto Networks, Inc"": 24,
    ""UAB Host Baltic"": 8,
    ""Ucloud Information Technology"": 4,
    ""Xhostis"": 4,
    ""Kisara LLC"": 12,
    ""Censys, Inc"": 6,
    ""Aliyun Computing Co., LTD"": 4,
    ""Connect Managed Services (UK) Limited"": 2,
    ""Vietnam Posts and Telecommunications Group"": 10,
    ""Microsoft Corporation"": 4,
    ""DigitalOcean, LLC"": 8,
    ""Bangladesh Online Ltd"": 2,
    ""Chinanet JS"": 6,
    ""Linode, LLC"": 348,
    ""Sbercloud"": 2,
    ""Cdn77 AMS"": 2,
    ""Linode"": 8
  },
  ""regionName"": {
    ""Hesse"": 8,
    ""Michigan"": 8,
    ""Beijing"": 8,
    ""Jiangsu"": 10,
    ""North Holland"": 14,
    ""Hanoi"": 12,
    ""Kaunas"": 16,
    ""California"": 34,
    ""Vilnius"": 8,
    ""Seoul"": 2,
    ""Moscow"": 14,
    ""England"": 350,
    ""Tokyo"": 2,
    ""Virginia"": 4,
    ""Central Singapore"": 4,
    ""Chittagong"": 2,
    ""Jakarta"": 4,
    ""South West"": 2
  },
  ""country"": {
    ""Germany"": 8,
    ""United States"": 46,
    ""China"": 18,
    ""The Netherlands"": 14,
    ""Vietnam"": 12,
    ""Lithuania"": 24,
    ""South Korea"": 2,
    ""Russia"": 14,
    ""United Kingdom"": 350,
    ""Japan"": 2,
    ""Singapore"": 6,
    ""Bangladesh"": 2,
    ""Indonesia"": 4
  },
  ""account"": {
    ""Domain"": 10,
    ""(empty)"": 18,
    ""Administr"": 12,
    ""hello"": 40,
    ""Test"": 36,
    ""bgGNCACON"": 2,
    ""ecSEbP"": 2,
    ""MwnDRh"": 2,
    ""Administrator"": 42,
    ""TwmquylCy"": 2,
    ""NlJpYo"": 2,
    ""gKZJYm"": 2,
    ""Admin"": 42,
    ""Whatuptime.com"": 44,
    ""John"": 44,
    ""Jakartakini123#"": 50,
    ""Hello World"": 48,
    ""TinHocThucHanh"": 42,
    ""Hey"": 40,
    ""JjyyLdpqv"": 2,
    ""ADVsJM"": 2,
    ""HtpPnm"": 2,
    ""beio"": 2,
    ""wwb1zmv4"": 8,
    ""FgFIMXzgO"": 2,
    ""ZiSEfj"": 2,
    ""JakMSI"": 2
  },
  ""keyboard"": {
    ""Unknown"": 502
  },
  ""client_build"": {
    ""Unknown"": 502
  },
  ""client_name"": {
    ""Unknown"": 502
  },
  ""ip_type"": {
    ""Unknown"": 92,
    ""hosting & proxy"": 8,
    ""mobile"": 4,
    ""hosting"": 392,
    ""proxy"": 6
  }
}"
cAGk8cmp,2024-05-07_stats.json,rdp_snitch,JSON,Tuesday 7th of May 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""81.19.135.47"": 3,
    ""45.87.212.180"": 1,
    ""162.142.125.224"": 1,
    ""116.140.196.215"": 2,
    ""112.4.139.162"": 2,
    ""87.251.75.145"": 3,
    ""103.47.194.128"": 1,
    ""194.165.16.78"": 2,
    ""198.235.24.82"": 3,
    ""45.227.254.49"": 2,
    ""194.165.16.76"": 2,
    ""152.32.139.9"": 1,
    ""185.170.144.3"": 2,
    ""185.161.248.121"": 6,
    ""167.94.138.63"": 1,
    ""167.94.138.116"": 1,
    ""123.56.20.194"": 1,
    ""45.145.31.176"": 1,
    ""118.194.236.118"": 1,
    ""123.31.20.85"": 5,
    ""39.104.209.131"": 1,
    ""198.235.24.245"": 3,
    ""64.124.50.139"": 2,
    ""159.223.34.114"": 2,
    ""182.163.102.197"": 1,
    ""58.218.204.183"": 3,
    ""139.162.251.91"": 174,
    ""167.94.138.53"": 1,
    ""205.210.31.39"": 3,
    ""121.100.26.14"": 2,
    ""87.251.75.64"": 1,
    ""194.165.16.73"": 2,
    ""178.170.192.172"": 1,
    ""68.183.175.150"": 1,
    ""45.227.254.26"": 2,
    ""84.17.46.176"": 1,
    ""194.165.16.11"": 2,
    ""68.183.181.29"": 1,
    ""45.79.114.218"": 4,
    ""205.210.31.234"": 3
  },
  ""asn"": {
    ""AS209588"": 3,
    ""AS9009"": 1,
    ""AS398324"": 4,
    ""AS4837"": 2,
    ""AS56046"": 2,
    ""AS208091"": 4,
    ""AS140832"": 1,
    ""AS48721"": 8,
    ""AS396982"": 12,
    ""AS267784"": 4,
    ""AS135377"": 2,
    ""AS197414"": 2,
    ""AS49202"": 6,
    ""AS37963"": 2,
    ""AS198781"": 1,
    ""AS45899"": 5,
    ""AS6461"": 2,
    ""AS14061"": 4,
    ""AS9230"": 1,
    ""AS4134"": 3,
    ""AS63949"": 178,
    ""AS38761"": 2,
    ""AS208677"": 1,
    ""AS60068"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 15,
    ""M247 Europe SRL"": 1,
    ""Censys, Inc."": 4,
    ""China Unicom CHINA169 Network"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""Xhost Internet Solutions LP"": 6,
    ""FTECH"": 1,
    ""Google LLC"": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Kisara LLC"": 6,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""Connect Managed Services (UK) Limited"": 1,
    ""VietNam Post and Telecom Corporation"": 5,
    ""Zayo Bandwidth"": 2,
    ""DigitalOcean, LLC"": 4,
    ""Bangladesh Online Ltd"": 1,
    ""Chinanet"": 3,
    ""Akamai Technologies, Inc."": 178,
    ""Sakti Putra Mandiri"": 2,
    ""\""Cloud Technologies\"" LLC trading as Cloud.ru"": 1,
    ""DataCamp Limited"": 1
  },
  ""org"": {
    ""Alviva Holding Limited"": 3,
    ""M247 LTD"": 1,
    ""Censys Inc"": 1,
    ""China United Network Communications Corporation Limited"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""Xhost Internet Solutions"": 4,
    ""Unknown"": 3,
    ""Flyservers S.A"": 8,
    ""Palo Alto Networks, Inc"": 12,
    ""UAB Host Baltic"": 4,
    ""Ucloud Information Technology"": 2,
    ""Xhostis"": 2,
    ""Kisara LLC"": 6,
    ""Censys, Inc"": 3,
    ""Aliyun Computing Co., LTD"": 2,
    ""Connect Managed Services (UK) Limited"": 1,
    ""Vietnam Posts and Telecommunications Group"": 5,
    ""Microsoft Corporation"": 2,
    ""DigitalOcean, LLC"": 4,
    ""Bangladesh Online Ltd"": 1,
    ""Chinanet JS"": 3,
    ""Linode, LLC"": 174,
    ""Sbercloud"": 1,
    ""Cdn77 AMS"": 1,
    ""Linode"": 4
  },
  ""regionName"": {
    ""Hesse"": 4,
    ""Michigan"": 4,
    ""Beijing"": 4,
    ""Jiangsu"": 5,
    ""North Holland"": 7,
    ""Hanoi"": 6,
    ""Kaunas"": 8,
    ""California"": 17,
    ""Vilnius"": 4,
    ""Seoul"": 1,
    ""Moscow"": 7,
    ""England"": 175,
    ""Tokyo"": 1,
    ""Virginia"": 2,
    ""Central Singapore"": 2,
    ""Chittagong"": 1,
    ""Jakarta"": 2,
    ""South West"": 1
  },
  ""country"": {
    ""Germany"": 4,
    ""United States"": 23,
    ""China"": 9,
    ""The Netherlands"": 7,
    ""Vietnam"": 6,
    ""Lithuania"": 12,
    ""South Korea"": 1,
    ""Russia"": 7,
    ""United Kingdom"": 175,
    ""Japan"": 1,
    ""Singapore"": 3,
    ""Bangladesh"": 1,
    ""Indonesia"": 2
  },
  ""account"": {
    ""Domain"": 5,
    ""(empty)"": 9,
    ""Administr"": 6,
    ""hello"": 20,
    ""Test"": 18,
    ""bgGNCACON"": 1,
    ""ecSEbP"": 1,
    ""MwnDRh"": 1,
    ""Administrator"": 21,
    ""TwmquylCy"": 1,
    ""NlJpYo"": 1,
    ""gKZJYm"": 1,
    ""Admin"": 21,
    ""Whatuptime.com"": 22,
    ""John"": 22,
    ""Jakartakini123#"": 25,
    ""Hello World"": 24,
    ""TinHocThucHanh"": 21,
    ""Hey"": 20,
    ""JjyyLdpqv"": 1,
    ""ADVsJM"": 1,
    ""HtpPnm"": 1,
    ""beio"": 1,
    ""wwb1zmv4"": 4,
    ""FgFIMXzgO"": 1,
    ""ZiSEfj"": 1,
    ""JakMSI"": 1
  },
  ""keyboard"": {
    ""Unknown"": 251
  },
  ""client_build"": {
    ""Unknown"": 251
  },
  ""client_name"": {
    ""Unknown"": 251
  },
  ""ip_type"": {
    ""Unknown"": 46,
    ""hosting & proxy"": 4,
    ""mobile"": 2,
    ""hosting"": 196,
    ""proxy"": 3
  }
}"
Er1Hqs6u,unpackisf.py,buonaseva_fatelo,Python,Tuesday 7th of May 2024 06:48:00 PM CDT,"import sys

from construct import *
from subprocess import PIPE, Popen

# http://www.qnx.com/developers/docs/660/index.jsp?topic=%2Fcom.qnx.doc.neutrino.building%2Ftopic%2Fload_process_Boot_header.html

boot_header = Struct(""boot_header"",
  Enum(ULInt32(""signature""),
		CORRECT = 0x00FF7EEB,
		_default_ = Pass,
	),
  ULInt16(""version""),
  BitStruct(""flags1"",
		Flag(""STARTUP_HDR_FLAGS1_VIRTUAL""),
		Flag(""STARTUP_HDR_FLAGS1_BIGENDIAN""),
		Enum(BitField(""Compression"", 4),
			STARTUP_HDR_FLAGS1_COMPRESS_NONE = 0,
			STARTUP_HDR_FLAGS1_COMPRESS_ZLIB = 0x01,
			STARTUP_HDR_FLAGS1_COMPRESS_LZO  = 0x02,
			STARTUP_HDR_FLAGS1_COMPRESS_UCL  = 0x03,
		  _default_ = Pass
 		),
		Padding(2),
  ),
  ULInt8(""flags2_unused""),
  ULInt16(""header_size""),
  Enum(ULInt16(""machine""),
		EM_NONE = 0,
		EM_M32 = 1,                 # /* AT&T WE 32100 */
		EM_SPARC = 2,               # /* Sun SPARC */
		EM_386 = 3,                 # /* Intel 80386 */
		EM_68k = 4,                 # /* Motorola 68000 */
		EM_88k = 5,                 # /* Motorola 88000 */
		EM_486 = 6,                 # /* Intel 80486 */
		EM_860 = 7,                 # /* Intel i860 */
		EM_MIPS = 8,                # /* MIPS RS3000 Big-Endian */
		EM_S370 = 9,                # /* IBM system 370 */
		EM_MIPS_RS3_LE = 10, # /* MIPS RS3000 Little-Endian */
		EM_RS6000 = 11,              # /* RS6000 */
		EM_UNKNOWN12 = 12,
		EM_UNKNOWN13 = 13,
		EM_UNKNOWN14 = 14,
		EM_PA_RISC = 15,             # /* PA_RISC */
		EM_nCUBE = 16,               # /* nCUBE */
		EM_VPP500 = 17,              # /* Fujitsu VPP500 */
		EM_SPARC32PLUS = 18, # /* Sun Sparc 32+ */
		EM_UNKNOWN19 = 19,
		EM_PPC = 20,                 # /* Power PC */
		EM_ARM = 40,    # /* ARM */
		EM_SH = 42,             # /* Hitachi SH */
		_default_ = Pass
	),
  ULInt32(""startup_vaddr""),
  ULInt32(""paddr_bias""),
  ULInt32(""image_paddr""),
  ULInt32(""ram_paddr""),
  ULInt32(""ram_size""),
  ULInt32(""startup_size""),
  ULInt32(""stored_size""),
  ULInt32(""imagefs_paddr""),
  ULInt32(""imagefs_size""),
  ULInt16(""preboot_size""),
  ULInt16(""zero0""),
  Array(3, ULInt32(""zero3""))
)

input = open(sys.argv[1], ""rb"")
data = input.read()
input.close()

header = boot_header.parse(data)
print header
if header.stored_size == len(data):
	print ""stored_size OK""
else:
	print ""stored_size NOK""

stored_imagefs = header.stored_size - header.startup_size
if stored_imagefs == header.imagefs_size:
	print ""imagefs_size OK, uncompressed""
elif stored_imagefs < header.imagefs_size:
	print ""imagefs_size OK, compressed %d -> %d"" % (header.imagefs_size, stored_imagefs)
else:
	print ""imagefs_size NOK: imagefs %d, stored %d"" % (header.imagefs_size, stored_imagefs)

startup = open(sys.argv[1] + "".startup"", ""wb"")
startup.write(data[:header.startup_size])
print ""Wrote "" + str(startup)
startup.close()

imagefs = open(sys.argv[1] + "".imagefs"", ""wb"")
imagefs_data = data[header.startup_size:]
imagefs.write(imagefs_data)
print ""Wrote "" + str(imagefs)
imagefs.close()

imagefs_struct = GreedyRange(PascalString(""imagefs"", length_field = UBInt16(""length"")))
imagefs_parsed = imagefs_struct.parse(imagefs_data)
print ""Found %d LZO blocks"" % len(imagefs_parsed)

imagefs = open(sys.argv[1] + "".imagefs.decompressed"", ""wb"")
for i in range(len(imagefs_parsed)):
	sys.stdout.write(""\rDecompress: %d/%d "" % (i, len(imagefs_parsed)))
	if len(imagefs_parsed[i]) == 0:
		continue
	lzod = Popen(""./lzod"", stdin=PIPE, stdout=imagefs, stderr=PIPE)
	lzod_result = lzod.communicate(imagefs_parsed[i])
	if (lzod.returncode != 0):
		print ""Failed: %d"" % lzod.returncode
		print lzod_result
		raise Exception

print ""\nWrote "" + str(imagefs)
imagefs.close()"
hR44bnta,cipher_tool_101,Python253,Python,Tuesday 7th of May 2024 05:39:08 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: cipher_tool_101.py
# Version: 1.0.1
# Author: Jeoi Reqi

""""""
This script serves as a comprehensive tool for encoding and decoding various classical ciphers as well as Fernet encryption and decryption.

It offers functionalities for a range of encoding and decoding techniques for the following:

    1: Caesar Cipher:
        - Allows encoding and decoding text by shifting characters a fixed number of positions in the alphabet.

    2: A1Z26 Cipher:
        - For encoding, it converts alphabetic characters into their corresponding numeric positions in the alphabet.
        - During decoding, it reverses this process, converting numeric sequences back into alphabetic characters.
            - Note: Spaces in the encoded text are represented by '0'.

    3: Atbash Cipher:
        - Inverts the alphabet, substituting each letter with its reverse counterpart.

    4: Rail Fence Cipher:
        - Utilizes a transposition technique, encoding text by writing it in a zigzag pattern across a specified number of ""rails"".
          Then it reads off the encoded text row by row to decode to plaintext.

    5: Vigenère Cipher:
        - Employs a keyword to encode text, shifting characters in a repeating pattern based on the keyword's letters.
        - Decoding with Vigenère reverses this process, decrypting text based on the keyword.

    6: Fernet Encryption/Decryption:
        - Encrypts the input text using the Fernet symmetric encryption algorithm.
        - Decrypts the input text using the same Fernet key used for encryption.

Requirements:
    - Python 3.x
    - Colorama (install with 'pip install colorama')
    - cryptography library (install with 'pip install cryptography')
    
Usage:
    - Run the script and choose a cipher type by entering the corresponding number.
    - Follow the prompts to enter the text and any required parameters.
    - The script will output the encoded or decoded text.

Additional Notes:
    - For Rail Fence cipher, the number of rails must be a positive integer.
    - For Vigenère cipher, the key should be a string of alphabetic characters.
    - For A1Z26 cipher:
        - When encoding, the input text should consist of alphabetic characters.
        - When decoding, the input text should consist of numeric characters separated by spaces.
""""""

# IMPORTS
from colorama import Fore, Style
from cryptography.fernet import Fernet
import os

# CAESAR CIPHER
def caesar_cipher(text, shift, mode):
    """"""
    Caesar cipher encoding or decoding.

    Args:
        text (str): The text to be encoded or decoded.
        shift (int): The shift value for encoding or decoding.
        mode (str): '1' for encoding, '2' for decoding.

    Returns:
        str: The encoded or decoded text.
    """"""
    result = """"
    for char in text:
        if char.isalpha():
            if mode == '1':  # Encode
                if char.islower():
                    result += chr((ord(char) - 97 + shift) % 26 + 97)
                else:
                    result += chr((ord(char) - 65 + shift) % 26 + 65)
            elif mode == '2':  # Decode
                if char.islower():
                    result += chr((ord(char) - 97 - shift) % 26 + 97)
                else:
                    result += chr((ord(char) - 65 - shift) % 26 + 65)
        else:
            result += char
    return result

# A1Z26 CIPHER
def a1z26_cipher(text, mode):
    """"""
    A1Z26 cipher encoding or decoding.

    Args:
        text (str): The text to be encoded or decoded.
        mode (str): '3' for encoding, '4' for decoding.

    Returns:
        str: The encoded or decoded text.
    """"""
    if mode == '3':    # ENCODE
        result = ' '.join(str(ord(char) - 96) if char.isalpha() else '0' for char in text)
    elif mode == '4':  # DECODE
        result = ''
        nums = text.split()
        for num in nums:
            if num == '0':
                result += ' '
            else:
                result += chr(int(num) + 96)
    else:
        result = ""\nInvalid mode! Please choose '3' for encoding or '4' for decoding.\n""
    return result

# ATBASH CIPHER
def atbash_cipher(text, mode):
    """"""
    Atbash cipher encoding or decoding.

    Args:
        text (str): The text to be encoded or decoded.
        mode (str): '5' for encoding, '6' for decoding.

    Returns:
        str: The encoded or decoded text.
    """"""
    result = """"
    for char in text:
        if char.isalpha():
            if char.islower():
                result += chr(122 - ord(char) + 97)
            else:
                result += chr(90 - ord(char) + 65)
        else:
            result += char
    return result

# RAILFENCE CIPHER
def encode_RailFence(text, key):
    """"""
    Rail Fence cipher encoding.

    Args:
        text (str): The text to be encoded.
        key (int): The number of rails.

    Returns:
        str: The encoded text.
    """"""
    rail = [['\n' for i in range(len(text))] for j in range(key)]
    dir_down = False
    row, col = 0, 0
     
    for i in range(len(text)):
        if (row == 0) or (row == key - 1):
            dir_down = not dir_down
         
        rail[row][col] = text[i]
        col += 1
         
        if dir_down:
            row += 1
        else:
            row -= 1
    
    result = []
    for i in range(key):
        for j in range(len(text)):
            if rail[i][j] != '\n':
                result.append(rail[i][j])
    return ''.join(result)

# VIGENERE CIPHER
def vigenere_cipher(text, key, mode):
    """"""
    Vigenère cipher encoding or decoding.

    Args:
        text (str): The text to be encoded or decoded.
        key (str): The key for encoding or decoding.
        mode (str): '9' for encoding, '10' for decoding.

    Returns:
        str: The encoded or decoded text.
    """"""
    result = """"
    key_length = len(key)
    key_index = 0
    for char in text:
        if char.isalpha():
            if mode == '9':  # Encode
                if char.islower():
                    shift = ord(key[key_index].lower()) - 97
                    result += chr((ord(char) - 97 + shift) % 26 + 97)
                else:
                    shift = ord(key[key_index].lower()) - 97
                    result += chr((ord(char) - 65 + shift) % 26 + 65)
            elif mode == '10':  # Decode
                if char.islower():
                    shift = ord(key[key_index].lower()) - 97
                    result += chr((ord(char) - 97 - shift) % 26 + 97)
                else:
                    shift = ord(key[key_index].lower()) - 97
                    result += chr((ord(char) - 65 - shift) % 26 + 65)
            key_index = (key_index + 1) % key_length
        else:
            result += char
    return result

# GENERATE KEY
def generate_key():
    """"""
    Generate a new Fernet key and save it to a file.

    Returns:
        bytes: The generated Fernet key.
    """"""
    key = Fernet.generate_key()
    with open(""key.txt"", ""wb"") as key_file:
        key_file.write(key)
    return key

# LOAD STORED KEY FROM FILE
def load_key():
    """"""
    Load the Fernet key from the key file if it exists.

    Returns:
        bytes: The loaded Fernet key if exists, otherwise None.
    """"""
    if os.path.exists(""key.txt""):
        with open(""key.txt"", ""rb"") as key_file:
            return key_file.read()
    else:
        print(""\nNo saved key found!\n\n- Generating a new 32-byte Fernet key...\n"")
        return generate_key()

# DELETE STORED KEY
def delete_key():
    """"""
    Delete the key file if it exists.
    """"""
    if os.path.exists(""key.txt""):
        os.remove(""key.txt"")
        print(""\nKey deleted!"")
    else:
        print(""\nNo key to delete!"")

def fernet_encode():
    """"""
    Encode the input text using the Fernet symmetric encryption algorithm.
    """"""
    while True:
        print(""\nChoose an option:"")
        print(""1. Generate Key"")
        print(""2. Delete Key"")
        print(""3. Use Stored Key"")

        key_choice = input(""\nEnter your choice: "")
        
        if key_choice == '1':  # Generate Key
            key = generate_key()
            print(""\nGenerated new key:\n"", key.decode())
            text = input(""\nEnter the text to encode using Fernet: "")
            print(""Encoding with the generated key..."")
            cipher_suite = Fernet(key)
            encoded_text = cipher_suite.encrypt(text.encode())
            print(""\nEncoded text:\n"", encoded_text.decode())
            break  # Exit the loop after encoding
        elif key_choice == '2':  # Delete Key
            delete_key()
        elif key_choice == '3':  # Use Stored Key
            key = load_key()
            if key is not None:
                print(""Encoding with the stored key:\n"", key.decode())
                text = input(""\nEnter the text to encode using Fernet: "")
                cipher_suite = Fernet(key)
                encoded_text = cipher_suite.encrypt(text.encode())
                print(""\nEncoded text:\n"", encoded_text.decode())
                break  # Exit the loop after encoding
            else:
                print(""\nNo key found! Please generate or load a key."")
        else:
            print(""\nInvalid choice! Please enter 1, 2, or 3."")

def fernet_decode():
    """"""
    Decode the input text using the Fernet symmetric encryption algorithm.

    Returns:
        str: The decoded text.
    """"""
    while True:
        print(""\nChoose an option:"")
        print(""1. Input Key Manually"")
        print(""2. Use Stored Key"")

        key_choice = input(""\nEnter your choice: "")
        
        if key_choice == '1':  # Input Key Manually
            key = input(""\nEnter the Fernet key: "").encode()
            cipher_suite = Fernet(key)
            encoded_text = input(""\nEnter the text to decode using Fernet: "")
            decoded_text = cipher_suite.decrypt(encoded_text.encode()).decode()
            print(""\nDecoded text:\n"", decoded_text)
            break  # Exit the loop after decoding
        elif key_choice == '2':  # Use Stored Key
            key = load_key()
            if key is not None:
                encoded_text = input(""\nEnter the text to decode using Fernet: "")
                cipher_suite = Fernet(key)
                decoded_text = cipher_suite.decrypt(encoded_text.encode()).decode()
                print(""\nDecoded text:\n"", decoded_text)
                break  # Exit the loop after decoding
            else:
                print(""\nNo key found! Please generate or load a key."")
        else:
            print(""\nInvalid choice! Please enter 1 or 2."")

# MAIN MENU & FUNCTION CALLS
def main():
    """"""
    Main function to run the cipher tool.
    """"""
    while True:
        print(""-"" * 28)
        print(Style.BRIGHT + Fore.GREEN + ""     :: CIPHER TOOL ::"" + Style.RESET_ALL)
        print(""-"" * 28)
        print(Style.BRIGHT +""\nCHOOSE A CIPHER TYPE:\n"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""01. "" + Fore.GREEN + ""Caesar Encode        [+]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""02. "" + Fore.YELLOW + ""Caesar Decode        [-]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""03. "" + Fore.GREEN + ""A1Z26 Encode         [+]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""04. "" + Fore.YELLOW + ""A1Z26 Decode         [-]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""05. "" + Fore.GREEN + ""Atbash Encode        [+]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""06. "" + Fore.YELLOW + ""Atbash Decode        [-]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""07. "" + Fore.GREEN + ""Rail Fence Encode    [+]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""08. "" + Fore.YELLOW + ""Rail Fence Decode    [-]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""09. "" + Fore.GREEN + ""Vigenère Encode      [+]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""10. "" + Fore.YELLOW + ""Vigenère Decode      [-]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""11. "" + Fore.GREEN + ""Fernet Encode        [+]"" + Style.RESET_ALL)
        print(Style.BRIGHT + ""12. "" + Fore.YELLOW + ""Fernet Decode        [-]"" + Style.RESET_ALL)
        print(Style.BRIGHT + "" 0. "" + Fore.RED + ""Exit                 [!]"" + Style.RESET_ALL)

        choice = input(Style.BRIGHT +""\nEnter your choice (1-12)\nOr... type '0' to EXIT:  "" + Style.RESET_ALL)

        if choice == '1' or choice == '2':
            mode = choice
            text = input(""\nEnter the text: "")
            shift = int(input(""\nEnter the shift value: ""))
            print(""\nEncoded/Decoded text:"", caesar_cipher(text, shift, mode))
        elif choice == '3' or choice == '4':
            mode = choice
            if mode == '3':
                text = input(""\nEnter the plaintext to encode: "")
            else:
                text = input(""\nEnter the ciphertext to decode: "")
            print(""\nEncoded/Decoded text:"", a1z26_cipher(text, mode))
        elif choice == '5' or choice == '6':
            mode = choice
            if mode == '5':
                text = input(""\nEnter the plaintext to encode: "")
            else:
                text = input(""\nEnter the ciphertext to decode: "")
            print(""\nEncoded/Decoded text:"", atbash_cipher(text, mode))
        elif choice == '7':
            text = input(""\nEnter the plaintext to encode: "")
            key = int(input(""\nEnter the number of rails: ""))
            print(""\nEncoded text:"", encode_RailFence(text, key))
        elif choice == '8':
            text = input(""\nEnter the ciphertext to decode: "")
            key = int(input(""\nEnter the number of rails: ""))
            print(""\nDecoded text:"", decode_RailFence(text, key))
        elif choice == '9' or choice == '10':
            mode = choice
            if mode == '9':
                text = input(""\nEnter the plaintext to encode: "")
            else:
                text = input(""\nEnter the ciphertext to decode: "")
            key = input(""\nEnter the key: "")
            print(""\nEncoded/Decoded text:"", vigenere_cipher(text, key, mode))
        elif choice == '11':
            key = fernet_encode()
            if key is not None:
                text = input(""\nEnter the text to encode using Fernet: "")
                cipher_suite = Fernet(key)
                encoded_text = cipher_suite.encrypt(text.encode())
                print(""\nEncoded text:\n"", encoded_text.decode())
                break  # Exit the loop after encoding
        elif choice == '12':
            key = fernet_decode()
            if key is not None:
                encoded_text = input(""\nEnter the text to decode using Fernet: "")
                cipher_suite = Fernet(key)
                decoded_text = cipher_suite.decrypt(encoded_text.encode()).decode()
                print(""\nDecoded text:\n"", decoded_text)
                break  # Exit the loop after decoding
        elif choice == '0':
            print()
            print(""-"" * 28)
            print(""Exiting Program...  Goodbye!"")
            print(""-"" * 28)
            break
        else:
            print(""\nInvalid choice! Please enter a number between 1 and 12.\n"")
        
        input(""\nPress [ENTER] to continue...\n\n"")
        
if __name__ == ""__main__"":
    main()
"
63UZnEs1,CBC Pitch Calculator,Feliiiiip,Lua,Tuesday 7th of May 2024 05:32:09 PM CDT,"--[[ 
    Create: Big Cannons pitch calculation code using Newton's Method
    Author: Lugia831999
 ]]

-- Variables
local pitch_range = { min = -30, max = 60 }
local num_charges = 4 -- Number of charges
local length = 8      -- Length of cannon
local step_size = 75  -- Step size for Newton's Method

-- Constants
local D = 0.99
local G = -0.05
local K = 0.5 * (D + 1)
local L = 0.5 * G * D
local M = (G * D) / (D - 1)
local vel = 2 * num_charges


--[[ 
    Function to calculate the cannon's target pitch using Newton's Method

    raw_dx - Horizontal distance between cannon pivot point and target point
    raw_dy - Vertical distance between cannon pivot and target point
 ]]
function calculate_pitch(raw_dx, raw_dy)
    local pitch, new_pitch, F_val
    local pitch_limit = math.deg(math.acos( raw_dx / ( K*vel*(D / (1 - D) + 1) + length ) )) - 0.001
    local min_pitch = math.max(pitch_range.min, -pitch_limit)
    local max_pitch = math.min(pitch_range.max, pitch_limit)

    local best = { pitch = 0, diff = math.huge }
    
    -- Try max pitch first
    pitch = max_pitch
    F_val, new_pitch = F(pitch, raw_dx, raw_dy, min_pitch, max_pitch)
    if math.abs(F_val) < best.diff then best.pitch = pitch; best.diff = math.abs(F_val) end

    -- If too high, try min pitch next
    if F_val > 0 then
        pitch = min_pitch
        F_val, new_pitch = F(pitch, raw_dx, raw_dy, min_pitch, max_pitch)
        if math.abs(F_val) < best.diff then best.pitch = pitch; best.diff = math.abs(F_val) end

        -- If still not good, then return the pitch with best diff
        if F_val > 0 then
            return best.pitch
        end
    end

    -- Execute Newton's Method iterations
    for i = 1, 50 do
        pitch = new_pitch
        F_val, new_pitch = F(pitch, raw_dx, raw_dy, min_pitch, max_pitch)
        if math.abs(F_val) < best.diff then best.pitch = pitch; best.diff = math.abs(F_val) end

        if math.abs(pitch - new_pitch) < 1e-6 then break end
    end

    return best.pitch
end


--[[ 
    The meat and potatoes of the pitch calculation.
    Calculates the vertical difference between the target point and the projectile given the pitch `pitch_deg`.
    Refer to this Desmos graph for a clearer view of the function and more details: https://www.desmos.com/calculator/1xzyp2f2bp
 ]]
function F(pitch_deg, raw_dx, raw_dy, min_pitch, max_pitch)
    local pitch = math.rad(pitch_deg)
    local sin_p = math.sin(pitch)
    local cos_p = math.cos(pitch)
    local dx = raw_dx - length * cos_p
    local dy = raw_dy - length * sin_p

    local inner_log = ((D - 1) / D) * ((dx / (K*vel*cos_p)) - 1) + 1
    local t = math.log( inner_log, D ) + 1
    local F_val = (L - K*M)*t + ( sin_p + M/vel )*( dx/cos_p ) - dy
    local dF = ( ( -G / (K * inner_log * math.log(D)) + M) * (sin_p / vel) + 1 ) * raw_dx / cos_p^2

    local new_pitch = pitch_deg - step_size * (F_val / dF)
    new_pitch = math.min(math.max(new_pitch, min_pitch), max_pitch)

    return F_val, new_pitch
end


local args = {...}
if #args == 2 then
    local pitch = calculate_pitch(args[1], args[2])
    print(""Target pitch:"", pitch)
end"
ZhqYgXPC,Vape UI,Marty2000,Lua,Tuesday 7th of May 2024 05:09:04 PM CDT,"-- uicorner moment

local lib = {RainbowColorValue = 0, HueSelectionPosition = 0}
local UserInputService = game:GetService(""UserInputService"")
local TweenService = game:GetService(""TweenService"")
local RunService = game:GetService(""RunService"")
local LocalPlayer = game:GetService(""Players"").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local PresetColor = Color3.fromRGB(44, 120, 224)
local CloseBind = Enum.KeyCode.RightControl

function randomString()
	local length = math.random(10,30)
	local array = {}
	for i = 1, length do
		array[i] = string.char(math.random(32, 126))
	end
	return table.concat(array)
end

if getgenv().llIlIIlIllIllII then
    getgenv().llIlIIlIllIllII:Destroy()
end

local ui = Instance.new(""ScreenGui"")
ui.Name = randomString()
ui.Parent = game.CoreGui
ui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
getgenv().llIlIIlIllIllII = ui

coroutine.wrap(
    function()
        while wait() do
            lib.RainbowColorValue = lib.RainbowColorValue + 1 / 255
            lib.HueSelectionPosition = lib.HueSelectionPosition + 1

            if lib.RainbowColorValue >= 1 then
                lib.RainbowColorValue = 0
            end

            if lib.HueSelectionPosition == 80 then
                lib.HueSelectionPosition = 0
            end
            
            ui.Name = randomString()
        end
    end
)()

local function MakeDraggable(topbarobject, object)
    local Dragging = nil
    local DragInput = nil
    local DragStart = nil
    local StartPosition = nil

    local function Update(input)
        local Delta = input.Position - DragStart
        local pos =
            UDim2.new(
            StartPosition.X.Scale,
            StartPosition.X.Offset + Delta.X,
            StartPosition.Y.Scale,
            StartPosition.Y.Offset + Delta.Y
        )
        object.Position = pos
    end

    topbarobject.InputBegan:Connect(
        function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                Dragging = true
                DragStart = input.Position
                StartPosition = object.Position

                input.Changed:Connect(
                    function()
                        if input.UserInputState == Enum.UserInputState.End then
                            Dragging = false
                        end
                    end
                )
            end
        end
    )

    topbarobject.InputChanged:Connect(
        function(input)
            if
                input.UserInputType == Enum.UserInputType.MouseMovement or
                    input.UserInputType == Enum.UserInputType.Touch
             then
                DragInput = input
            end
        end
    )

    UserInputService.InputChanged:Connect(
        function(input)
            if input == DragInput and Dragging then
                Update(input)
            end
        end
    )
end

function lib:Window(text, preset, closebind)
    CloseBind = closebind or Enum.KeyCode.RightControl
    PresetColor = preset or Color3.fromRGB(44, 120, 224)
    fs = false
    local Main = Instance.new(""Frame"")
    local Round = Instance.new(""UICorner"")
    local TabHold = Instance.new(""Frame"")
    local TabHoldLayout = Instance.new(""UIListLayout"")
    local Title = Instance.new(""TextLabel"")
    local TabFolder = Instance.new(""Folder"")
    local DragFrame = Instance.new(""Frame"")

    Main.Name = ""Main""
    Main.Parent = ui
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 0, 0, 0)
    Main.ClipsDescendants = true
    Main.Visible = true

    Round.Name = ""Round""
    Round.Parent = Main

    TabHold.Name = ""TabHold""
    TabHold.Parent = Main
    TabHold.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabHold.BackgroundTransparency = 1.000
    TabHold.Position = UDim2.new(0.0339285731, 0, 0.147335425, 0)
    TabHold.Size = UDim2.new(0, 107, 0, 254)

    TabHoldLayout.Name = ""TabHoldLayout""
    TabHoldLayout.Parent = TabHold
    TabHoldLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabHoldLayout.Padding = UDim.new(0, 11)

    Title.Name = ""Title""
    Title.Parent = Main
    Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Title.BackgroundTransparency = 1.000
    Title.Position = UDim2.new(0.0339285731, 0, 0.0564263314, 0)
    Title.Size = UDim2.new(0, 200, 0, 23)
    Title.Font = Enum.Font.GothamSemibold
    Title.Text = text
    Title.TextColor3 = Color3.fromRGB(68, 68, 68)
    Title.TextSize = 12.000
    Title.TextXAlignment = Enum.TextXAlignment.Left

    DragFrame.Name = ""DragFrame""
    DragFrame.Parent = Main
    DragFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    DragFrame.BackgroundTransparency = 1.000
    DragFrame.Size = UDim2.new(0, 560, 0, 41)

    Main:TweenSize(UDim2.new(0, 560, 0, 319), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)

    MakeDraggable(DragFrame, Main)

    local uitoggled = false
    UserInputService.InputBegan:Connect(
        function(io, p)
            if io.KeyCode == CloseBind then
                if uitoggled == false then
                    uitoggled = true
                
                    Main:TweenSize(
                        UDim2.new(0, 0, 0, 0), 
                        Enum.EasingDirection.Out, 
                        Enum.EasingStyle.Quart, 
                        .6, 
                        true, 
                        function()
                            ui.Enabled = false
                        end
                    )
                    
                else
                    uitoggled = false
                    ui.Enabled = true
                
                    Main:TweenSize(
                        UDim2.new(0, 560, 0, 319),
                        Enum.EasingDirection.Out,
                        Enum.EasingStyle.Quart,
                        .6,
                        true
                    )
                end
            end
        end
    )

    TabFolder.Name = ""TabFolder""
    TabFolder.Parent = Main

    function lib:ChangePresetColor(toch)
        PresetColor = toch
    end

    function lib:Notification(texttitle, textdesc, textbtn)
        local NotificationHold = Instance.new(""TextButton"")
        local Round = Instance.new(""UICorner"")
        local NotificationFrame = Instance.new(""Frame"")
        local OkayBtn = Instance.new(""TextButton"")
        local OkayBtnCorner = Instance.new(""UICorner"")
        local OkayBtnTitle = Instance.new(""TextLabel"")
        local NotificationTitle = Instance.new(""TextLabel"")
        local NotificationDesc = Instance.new(""TextLabel"")

        NotificationHold.Name = ""NotificationHold""
        NotificationHold.Parent = Main
        NotificationHold.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        NotificationHold.BackgroundTransparency = 1.000
        NotificationHold.BorderSizePixel = 0
        NotificationHold.Size = UDim2.new(0, 560, 0, 319)
        NotificationHold.AutoButtonColor = false
        NotificationHold.Font = Enum.Font.SourceSans
        NotificationHold.Text = """"
        NotificationHold.TextColor3 = Color3.fromRGB(0, 0, 0)
        NotificationHold.TextSize = 14.000

        Round.Name = ""Round""
        Round.Parent = NotificationHold

        TweenService:Create(
            NotificationHold,
            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundTransparency = 0.7}
        ):Play()
        wait(0.4)

        NotificationFrame.Name = ""NotificationFrame""
        NotificationFrame.Parent = NotificationHold
        NotificationFrame.AnchorPoint = Vector2.new(0.5, 0.5)
        NotificationFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        NotificationFrame.BorderSizePixel = 0
        NotificationFrame.ClipsDescendants = true
        NotificationFrame.Position = UDim2.new(0.5, 0, 0.498432577, 0)

        NotificationFrame:TweenSize(
            UDim2.new(0, 164, 0, 193),
            Enum.EasingDirection.Out,
            Enum.EasingStyle.Quart,
            .6,
            true
        )

        OkayBtn.Name = ""OkayBtn""
        OkayBtn.Parent = NotificationFrame
        OkayBtn.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
        OkayBtn.Position = UDim2.new(0.0609756112, 0, 0.720207274, 0)
        OkayBtn.Size = UDim2.new(0, 144, 0, 42)
        OkayBtn.AutoButtonColor = false
        OkayBtn.Font = Enum.Font.SourceSans
        OkayBtn.Text = """"
        OkayBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
        OkayBtn.TextSize = 14.000

        OkayBtnCorner.CornerRadius = UDim.new(0, 5)
        OkayBtnCorner.Name = ""OkayBtnCorner""
        OkayBtnCorner.Parent = OkayBtn

        OkayBtnTitle.Name = ""OkayBtnTitle""
        OkayBtnTitle.Parent = OkayBtn
        OkayBtnTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        OkayBtnTitle.BackgroundTransparency = 1.000
        OkayBtnTitle.Position = UDim2.new(0.0763888881, 0, 0, 0)
        OkayBtnTitle.Size = UDim2.new(0, 181, 0, 42)
        OkayBtnTitle.Font = Enum.Font.Gotham
        OkayBtnTitle.Text = textbtn
        OkayBtnTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        OkayBtnTitle.TextSize = 14.000
        OkayBtnTitle.TextXAlignment = Enum.TextXAlignment.Left

        NotificationTitle.Name = ""NotificationTitle""
        NotificationTitle.Parent = NotificationFrame
        NotificationTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        NotificationTitle.BackgroundTransparency = 1.000
        NotificationTitle.Position = UDim2.new(0.0670731738, 0, 0.0829015523, 0)
        NotificationTitle.Size = UDim2.new(0, 143, 0, 26)
        NotificationTitle.Font = Enum.Font.Gotham
        NotificationTitle.Text = texttitle
        NotificationTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        NotificationTitle.TextSize = 18.000
        NotificationTitle.TextXAlignment = Enum.TextXAlignment.Left

        NotificationDesc.Name = ""NotificationDesc""
        NotificationDesc.Parent = NotificationFrame
        NotificationDesc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        NotificationDesc.BackgroundTransparency = 1.000
        NotificationDesc.Position = UDim2.new(0.0670000017, 0, 0.218999997, 0)
        NotificationDesc.Size = UDim2.new(0, 143, 0, 91)
        NotificationDesc.Font = Enum.Font.Gotham
        NotificationDesc.Text = textdesc
        NotificationDesc.TextColor3 = Color3.fromRGB(255, 255, 255)
        NotificationDesc.TextSize = 15.000
        NotificationDesc.TextWrapped = true
        NotificationDesc.TextXAlignment = Enum.TextXAlignment.Left
        NotificationDesc.TextYAlignment = Enum.TextYAlignment.Top

        OkayBtn.MouseEnter:Connect(
            function()
                TweenService:Create(
                    OkayBtn,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}
                ):Play()
            end
        )

        OkayBtn.MouseLeave:Connect(
            function()
                TweenService:Create(
                    OkayBtn,
                    TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {BackgroundColor3 = Color3.fromRGB(34, 34, 34)}
                ):Play()
            end
        )

        OkayBtn.MouseButton1Click:Connect(
            function()
                NotificationFrame:TweenSize(
                    UDim2.new(0, 0, 0, 0),
                    Enum.EasingDirection.Out,
                    Enum.EasingStyle.Quart,
                    .6,
                    true
                )

                wait(0.4)

                TweenService:Create(
                    NotificationHold,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {BackgroundTransparency = 1}
                ):Play()

                wait(.3)

                NotificationHold:Destroy()
            end
        )
    end
    local tabhold = {}
    function tabhold:Tab(text)
        local TabBtn = Instance.new(""TextButton"")
        local TabTitle = Instance.new(""TextLabel"")
        local TabBtnIndicator = Instance.new(""Frame"")
        local TabBtnIndicatorCorner = Instance.new(""UICorner"")

        TabBtn.Name = ""TabBtn""
        TabBtn.Parent = TabHold
        TabBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabBtn.BackgroundTransparency = 1.000
        TabBtn.Size = UDim2.new(0, 107, 0, 21)
        TabBtn.Font = Enum.Font.SourceSans
        TabBtn.Text = """"
        TabBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
        TabBtn.TextSize = 14.000

        TabTitle.Name = ""TabTitle""
        TabTitle.Parent = TabBtn
        TabTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabTitle.BackgroundTransparency = 1.000
        TabTitle.Size = UDim2.new(0, 107, 0, 21)
        TabTitle.Font = Enum.Font.Gotham
        TabTitle.Text = text
        TabTitle.TextColor3 = Color3.fromRGB(150, 150, 150)
        TabTitle.TextSize = 14.000
        TabTitle.TextXAlignment = Enum.TextXAlignment.Left

        TabBtnIndicator.Name = ""TabBtnIndicator""
        TabBtnIndicator.Parent = TabBtn
        TabBtnIndicator.BackgroundColor3 = PresetColor
        TabBtnIndicator.BorderSizePixel = 0
        TabBtnIndicator.Position = UDim2.new(0, 0, 1, 0)
        TabBtnIndicator.Size = UDim2.new(0, 0, 0, 2)

        TabBtnIndicatorCorner.Name = ""TabBtnIndicatorCorner""
        TabBtnIndicatorCorner.Parent = TabBtnIndicator

        coroutine.wrap(
            function()
                while wait() do
                    TabBtnIndicator.BackgroundColor3 = PresetColor
                end
            end
        )()

        local Tab = Instance.new(""ScrollingFrame"")
        local TabLayout = Instance.new(""UIListLayout"")

        Tab.Name = ""Tab""
        Tab.Parent = TabFolder
        Tab.Active = true
        Tab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Tab.BackgroundTransparency = 1.000
        Tab.BorderSizePixel = 0
        Tab.Position = UDim2.new(0.31400001, 0, 0.147, 0)
        Tab.Size = UDim2.new(0, 373, 0, 254)
        Tab.CanvasSize = UDim2.new(0, 0, 0, 0)
        Tab.ScrollBarThickness = 3
        Tab.Visible = false

        TabLayout.Name = ""TabLayout""
        TabLayout.Parent = Tab
        TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
        TabLayout.Padding = UDim.new(0, 6)

        if fs == false then
            fs = true
            TabBtnIndicator.Size = UDim2.new(0, 13, 0, 2)
            TabTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            Tab.Visible = true
        end

        TabBtn.MouseButton1Click:Connect(
            function()
                for i, v in next, TabFolder:GetChildren() do
                    if v.Name == ""Tab"" then
                        v.Visible = false
                    end
                    Tab.Visible = true
                end
                for i, v in next, TabHold:GetChildren() do
                    if v.Name == ""TabBtn"" then
                        v.TabBtnIndicator:TweenSize(
                            UDim2.new(0, 0, 0, 2),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            .2,
                            true
                        )
                        TabBtnIndicator:TweenSize(
                            UDim2.new(0, 13, 0, 2),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            .2,
                            true
                        )
                        TweenService:Create(
                            v.TabTitle,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {TextColor3 = Color3.fromRGB(150, 150, 150)}
                        ):Play()
                        TweenService:Create(
                            TabTitle,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {TextColor3 = Color3.fromRGB(255, 255, 255)}
                        ):Play()
                    end
                end
            end
        )
        local tabcontent = {}
        function tabcontent:Button(text, callback)
            local Button = Instance.new(""TextButton"")
            local ButtonCorner = Instance.new(""UICorner"")
            local ButtonTitle = Instance.new(""TextLabel"")

            Button.Name = ""Button""
            Button.Parent = Tab
            Button.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Button.Size = UDim2.new(0, 363, 0, 42)
            Button.AutoButtonColor = false
            Button.Font = Enum.Font.SourceSans
            Button.Text = """"
            Button.TextColor3 = Color3.fromRGB(0, 0, 0)
            Button.TextSize = 14.000

            ButtonCorner.CornerRadius = UDim.new(0, 5)
            ButtonCorner.Name = ""ButtonCorner""
            ButtonCorner.Parent = Button

            ButtonTitle.Name = ""ButtonTitle""
            ButtonTitle.Parent = Button
            ButtonTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ButtonTitle.BackgroundTransparency = 1.000
            ButtonTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            ButtonTitle.Size = UDim2.new(0, 187, 0, 42)
            ButtonTitle.Font = Enum.Font.Gotham
            ButtonTitle.Text = text
            ButtonTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            ButtonTitle.TextSize = 14.000
            ButtonTitle.TextXAlignment = Enum.TextXAlignment.Left

            Button.MouseEnter:Connect(
                function()
                    TweenService:Create(
                        Button,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}
                    ):Play()
                end
            )

            Button.MouseLeave:Connect(
                function()
                    TweenService:Create(
                        Button,
                        TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(34, 34, 34)}
                    ):Play()
                end
            )

            Button.MouseButton1Click:Connect(
                function()
                    pcall(callback)
                end
            )

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end
        function tabcontent:Toggle(text,default, callback)
            local toggled = false

            local Toggle = Instance.new(""TextButton"")
            local ToggleCorner = Instance.new(""UICorner"")
            local ToggleTitle = Instance.new(""TextLabel"")
            local FrameToggle1 = Instance.new(""Frame"")
            local FrameToggle1Corner = Instance.new(""UICorner"")
            local FrameToggle2 = Instance.new(""Frame"")
            local FrameToggle2Corner = Instance.new(""UICorner"")
            local FrameToggle3 = Instance.new(""Frame"")
            local FrameToggle3Corner = Instance.new(""UICorner"")
            local FrameToggleCircle = Instance.new(""Frame"")
            local FrameToggleCircleCorner = Instance.new(""UICorner"")

            Toggle.Name = ""Toggle""
            Toggle.Parent = Tab
            Toggle.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Toggle.Position = UDim2.new(0.215625003, 0, 0.446271926, 0)
            Toggle.Size = UDim2.new(0, 363, 0, 42)
            Toggle.AutoButtonColor = false
            Toggle.Font = Enum.Font.SourceSans
            Toggle.Text = """"
            Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
            Toggle.TextSize = 14.000

            ToggleCorner.CornerRadius = UDim.new(0, 5)
            ToggleCorner.Name = ""ToggleCorner""
            ToggleCorner.Parent = Toggle

            ToggleTitle.Name = ""ToggleTitle""
            ToggleTitle.Parent = Toggle
            ToggleTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ToggleTitle.BackgroundTransparency = 1.000
            ToggleTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            ToggleTitle.Size = UDim2.new(0, 187, 0, 42)
            ToggleTitle.Font = Enum.Font.Gotham
            ToggleTitle.Text = text
            ToggleTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleTitle.TextSize = 14.000
            ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left

            FrameToggle1.Name = ""FrameToggle1""
            FrameToggle1.Parent = Toggle
            FrameToggle1.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            FrameToggle1.Position = UDim2.new(0.859504104, 0, 0.285714298, 0)
            FrameToggle1.Size = UDim2.new(0, 37, 0, 18)

            FrameToggle1Corner.Name = ""FrameToggle1Corner""
            FrameToggle1Corner.Parent = FrameToggle1

            FrameToggle2.Name = ""FrameToggle2""
            FrameToggle2.Parent = FrameToggle1
            FrameToggle2.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            FrameToggle2.Position = UDim2.new(0.0489999987, 0, 0.0930000022, 0)
            FrameToggle2.Size = UDim2.new(0, 33, 0, 14)

            FrameToggle2Corner.Name = ""FrameToggle2Corner""
            FrameToggle2Corner.Parent = FrameToggle2

            FrameToggle3.Name = ""FrameToggle3""
            FrameToggle3.Parent = FrameToggle1
            FrameToggle3.BackgroundColor3 = PresetColor
            FrameToggle3.BackgroundTransparency = 1.000
            FrameToggle3.Size = UDim2.new(0, 37, 0, 18)

            FrameToggle3Corner.Name = ""FrameToggle3Corner""
            FrameToggle3Corner.Parent = FrameToggle3

            FrameToggleCircle.Name = ""FrameToggleCircle""
            FrameToggleCircle.Parent = FrameToggle1
            FrameToggleCircle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            FrameToggleCircle.Position = UDim2.new(0.127000004, 0, 0.222000003, 0)
            FrameToggleCircle.Size = UDim2.new(0, 10, 0, 10)

            FrameToggleCircleCorner.Name = ""FrameToggleCircleCorner""
            FrameToggleCircleCorner.Parent = FrameToggleCircle

            coroutine.wrap(
                function()
                    while wait() do
                        FrameToggle3.BackgroundColor3 = PresetColor
                    end
                end
            )()

            Toggle.MouseButton1Click:Connect(
                function()
                    if toggled == false then
                        TweenService:Create(
                            Toggle,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}
                        ):Play()
                        TweenService:Create(
                            FrameToggle1,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundTransparency = 1}
                        ):Play()
                        TweenService:Create(
                            FrameToggle2,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundTransparency = 1}
                        ):Play()
                        TweenService:Create(
                            FrameToggle3,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundTransparency = 0}
                        ):Play()
                        TweenService:Create(
                            FrameToggleCircle,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}
                        ):Play()
                        FrameToggleCircle:TweenPosition(
                            UDim2.new(0.587, 0, 0.222000003, 0),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            .2,
                            true
                        )
                    else
                        TweenService:Create(
                            Toggle,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Color3.fromRGB(34, 34, 34)}
                        ):Play()
                        TweenService:Create(
                            FrameToggle1,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundTransparency = 0}
                        ):Play()
                        TweenService:Create(
                            FrameToggle2,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundTransparency = 0}
                        ):Play()
                        TweenService:Create(
                            FrameToggle3,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundTransparency = 1}
                        ):Play()
                        TweenService:Create(
                            FrameToggleCircle,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}
                        ):Play()
                        FrameToggleCircle:TweenPosition(
                            UDim2.new(0.127000004, 0, 0.222000003, 0),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            .2,
                            true
                        )
                    end
                    toggled = not toggled
                    pcall(callback, toggled)
                end
            )

            if default == true then
                TweenService:Create(
                    Toggle,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}
                ):Play()
                TweenService:Create(
                    FrameToggle1,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {BackgroundTransparency = 1}
                ):Play()
                TweenService:Create(
                    FrameToggle2,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {BackgroundTransparency = 1}
                ):Play()
                TweenService:Create(
                    FrameToggle3,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {BackgroundTransparency = 0}
                ):Play()
                TweenService:Create(
                    FrameToggleCircle,
                    TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}
                ):Play()
                FrameToggleCircle:TweenPosition(
                    UDim2.new(0.587, 0, 0.222000003, 0),
                    Enum.EasingDirection.Out,
                    Enum.EasingStyle.Quart,
                    .2,
                    true
                )
                toggled = not toggled
            end

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end
        function tabcontent:Slider(text, min, max, start, callback)
            local dragging = false
            local Slider = Instance.new(""TextButton"")
            local SliderCorner = Instance.new(""UICorner"")
            local SliderTitle = Instance.new(""TextLabel"")
            local SliderValue = Instance.new(""TextLabel"")
            local SlideFrame = Instance.new(""Frame"")
            local CurrentValueFrame = Instance.new(""Frame"")
            local SlideCircle = Instance.new(""ImageButton"")

            Slider.Name = ""Slider""
            Slider.Parent = Tab
            Slider.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Slider.Position = UDim2.new(-0.48035714, 0, -0.570532918, 0)
            Slider.Size = UDim2.new(0, 363, 0, 60)
            Slider.AutoButtonColor = false
            Slider.Font = Enum.Font.SourceSans
            Slider.Text = """"
            Slider.TextColor3 = Color3.fromRGB(0, 0, 0)
            Slider.TextSize = 14.000

            SliderCorner.CornerRadius = UDim.new(0, 5)
            SliderCorner.Name = ""SliderCorner""
            SliderCorner.Parent = Slider

            SliderTitle.Name = ""SliderTitle""
            SliderTitle.Parent = Slider
            SliderTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SliderTitle.BackgroundTransparency = 1.000
            SliderTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            SliderTitle.Size = UDim2.new(0, 187, 0, 42)
            SliderTitle.Font = Enum.Font.Gotham
            SliderTitle.Text = text
            SliderTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderTitle.TextSize = 14.000
            SliderTitle.TextXAlignment = Enum.TextXAlignment.Left

            SliderValue.Name = ""SliderValue""
            SliderValue.Parent = Slider
            SliderValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SliderValue.BackgroundTransparency = 1.000
            SliderValue.Position = UDim2.new(0.0358126722, 0, 0, 0)
            SliderValue.Size = UDim2.new(0, 335, 0, 42)
            SliderValue.Font = Enum.Font.Gotham
            SliderValue.Text = tostring(start and math.floor((start / max) * (max - min) + min) or 0)
            SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderValue.TextSize = 14.000
            SliderValue.TextXAlignment = Enum.TextXAlignment.Right

            SlideFrame.Name = ""SlideFrame""
            SlideFrame.Parent = Slider
            SlideFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            SlideFrame.BorderSizePixel = 0
            SlideFrame.Position = UDim2.new(0.0342647657, 0, 0.686091602, 0)
            SlideFrame.Size = UDim2.new(0, 335, 0, 3)

            CurrentValueFrame.Name = ""CurrentValueFrame""
            CurrentValueFrame.Parent = SlideFrame
            CurrentValueFrame.BackgroundColor3 = PresetColor
            CurrentValueFrame.BorderSizePixel = 0
            CurrentValueFrame.Size = UDim2.new((start or 0) / max, 0, 0, 3)

            SlideCircle.Name = ""SlideCircle""
            SlideCircle.Parent = SlideFrame
            SlideCircle.BackgroundColor3 = PresetColor
            SlideCircle.BackgroundTransparency = 1.000
            SlideCircle.Position = UDim2.new((start or 0) / max, -6, -1.30499995, 0)
            SlideCircle.Size = UDim2.new(0, 11, 0, 11)
            SlideCircle.Image = ""rbxassetid://3570695787""
            SlideCircle.ImageColor3 = PresetColor

            coroutine.wrap(
                function()
                    while wait() do
                        CurrentValueFrame.BackgroundColor3 = PresetColor
                        SlideCircle.ImageColor3 = PresetColor
                    end
                end
            )()

            local function move(input)
                local pos =
                    UDim2.new(
                    math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1),
                    -6,
                    -1.30499995,
                    0
                )
                local pos1 =
                    UDim2.new(
                    math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1),
                    0,
                    0,
                    3
                )
                CurrentValueFrame:TweenSize(pos1, ""Out"", ""Sine"", 0.1, true)
                SlideCircle:TweenPosition(pos, ""Out"", ""Sine"", 0.1, true)
                local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
                SliderValue.Text = tostring(value)
                pcall(callback, value)
            end
            SlideCircle.InputBegan:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = true
                    end
                end
            )
            SlideCircle.InputEnded:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end
            )
            game:GetService(""UserInputService"").InputChanged:Connect(
                function(input)
                    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                        move(input)
                    end
                end
            )
            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end
        function tabcontent:Dropdown(text, list, callback)
            local droptog = false
            local framesize = 0
            local itemcount = 0

            local Dropdown = Instance.new(""Frame"")
            local DropdownCorner = Instance.new(""UICorner"")
            local DropdownBtn = Instance.new(""TextButton"")
            local DropdownTitle = Instance.new(""TextLabel"")
            local ArrowImg = Instance.new(""ImageLabel"")
            local DropItemHolder = Instance.new(""ScrollingFrame"")
            local DropLayout = Instance.new(""UIListLayout"")

            Dropdown.Name = ""Dropdown""
            Dropdown.Parent = Tab
            Dropdown.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Dropdown.ClipsDescendants = true
            Dropdown.Position = UDim2.new(-0.541071415, 0, -0.532915354, 0)
            Dropdown.Size = UDim2.new(0, 363, 0, 42)

            DropdownCorner.CornerRadius = UDim.new(0, 5)
            DropdownCorner.Name = ""DropdownCorner""
            DropdownCorner.Parent = Dropdown

            DropdownBtn.Name = ""DropdownBtn""
            DropdownBtn.Parent = Dropdown
            DropdownBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropdownBtn.BackgroundTransparency = 1.000
            DropdownBtn.Size = UDim2.new(0, 363, 0, 42)
            DropdownBtn.Font = Enum.Font.SourceSans
            DropdownBtn.Text = """"
            DropdownBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
            DropdownBtn.TextSize = 14.000

            DropdownTitle.Name = ""DropdownTitle""
            DropdownTitle.Parent = Dropdown
            DropdownTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropdownTitle.BackgroundTransparency = 1.000
            DropdownTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            DropdownTitle.Size = UDim2.new(0, 187, 0, 42)
            DropdownTitle.Font = Enum.Font.Gotham
            DropdownTitle.Text = text
            DropdownTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            DropdownTitle.TextSize = 14.000
            DropdownTitle.TextXAlignment = Enum.TextXAlignment.Left

            ArrowImg.Name = ""ArrowImg""
            ArrowImg.Parent = DropdownTitle
            ArrowImg.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ArrowImg.BackgroundTransparency = 1.000
            ArrowImg.Position = UDim2.new(1.65240645, 0, 0.190476194, 0)
            ArrowImg.Size = UDim2.new(0, 26, 0, 26)
            ArrowImg.Image = ""http://www.roblox.com/asset/?id=6034818375""

            DropItemHolder.Name = ""DropItemHolder""
            DropItemHolder.Parent = DropdownTitle
            DropItemHolder.Active = true
            DropItemHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropItemHolder.BackgroundTransparency = 1.000
            DropItemHolder.BorderSizePixel = 0
            DropItemHolder.Position = UDim2.new(-0.00400000019, 0, 1.04999995, 0)
            DropItemHolder.Size = UDim2.new(0, 342, 0, 0)
            DropItemHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
            DropItemHolder.ScrollBarThickness = 3

            DropLayout.Name = ""DropLayout""
            DropLayout.Parent = DropItemHolder
            DropLayout.SortOrder = Enum.SortOrder.LayoutOrder

            DropdownBtn.MouseButton1Click:Connect(
                function()
                    if droptog == false then
                        Dropdown:TweenSize(
                            UDim2.new(0, 363, 0, 55 + framesize),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            .2,
                            true
                        )
                        TweenService:Create(
                            ArrowImg,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {Rotation = 270}
                        ):Play()
                        wait(.2)
                        Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
                    else
                        Dropdown:TweenSize(
                            UDim2.new(0, 363, 0, 42),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            .2,
                            true
                        )
                        TweenService:Create(
                            ArrowImg,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {Rotation = 0}
                        ):Play()
                        wait(.2)
                        Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
                    end
                    droptog = not droptog
                end
            )

            for i, v in next, list do
                itemcount = itemcount + 1
                if itemcount <= 3 then
                    framesize = framesize + 26
                    DropItemHolder.Size = UDim2.new(0, 342, 0, framesize)
                end
                local Item = Instance.new(""TextButton"")
                local ItemCorner = Instance.new(""UICorner"")

                Item.Name = ""Item""
                Item.Parent = DropItemHolder
                Item.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
                Item.ClipsDescendants = true
                Item.Size = UDim2.new(0, 335, 0, 25)
                Item.AutoButtonColor = false
                Item.Font = Enum.Font.Gotham
                Item.Text = v
                Item.TextColor3 = Color3.fromRGB(255, 255, 255)
                Item.TextSize = 15.000

                ItemCorner.CornerRadius = UDim.new(0, 4)
                ItemCorner.Name = ""ItemCorner""
                ItemCorner.Parent = Item

                Item.MouseEnter:Connect(
                    function()
                        TweenService:Create(
                            Item,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}
                        ):Play()
                    end
                )

                Item.MouseLeave:Connect(
                    function()
                        TweenService:Create(
                            Item,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Color3.fromRGB(34, 34, 34)}
                        ):Play()
                    end
                )

                Item.MouseButton1Click:Connect(
                    function()
                        droptog = not droptog
                        DropdownTitle.Text = text .. "" - "" .. v
                        pcall(callback, v)
                        Dropdown:TweenSize(
                            UDim2.new(0, 363, 0, 42),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            .2,
                            true
                        )
                        TweenService:Create(
                            ArrowImg,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {Rotation = 0}
                        ):Play()
                        wait(.2)
                        Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
                    end
                )

                DropItemHolder.CanvasSize = UDim2.new(0, 0, 0, DropLayout.AbsoluteContentSize.Y)
            end
            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end
        function tabcontent:Colorpicker(text, preset, callback)
            local ColorPickerToggled = false
            local OldToggleColor = Color3.fromRGB(0, 0, 0)
            local OldColor = Color3.fromRGB(0, 0, 0)
            local OldColorSelectionPosition = nil
            local OldHueSelectionPosition = nil
            local ColorH, ColorS, ColorV = 1, 1, 1
            local RainbowColorPicker = false
            local ColorPickerInput = nil
            local ColorInput = nil
            local HueInput = nil

            local Colorpicker = Instance.new(""Frame"")
            local ColorpickerCorner = Instance.new(""UICorner"")
            local ColorpickerTitle = Instance.new(""TextLabel"")
            local BoxColor = Instance.new(""Frame"")
            local BoxColorCorner = Instance.new(""UICorner"")
            local ConfirmBtnCorner = Instance.new(""UICorner"")
            local ConfirmBtnTitle = Instance.new(""TextLabel"")
            local ColorpickerBtn = Instance.new(""TextButton"")
            local RainbowToggle = Instance.new(""TextButton"")
            local RainbowToggleCorner = Instance.new(""UICorner"")
            local RainbowToggleTitle = Instance.new(""TextLabel"")
            local FrameRainbowToggle1 = Instance.new(""Frame"")
            local FrameRainbowToggle1Corner = Instance.new(""UICorner"")
            local FrameRainbowToggle2 = Instance.new(""Frame"")
            local FrameRainbowToggle2_2 = Instance.new(""UICorner"")
            local FrameRainbowToggle3 = Instance.new(""Frame"")
            local FrameToggle3 = Instance.new(""UICorner"")
            local FrameRainbowToggleCircle = Instance.new(""Frame"")
            local FrameRainbowToggleCircleCorner = Instance.new(""UICorner"")
            local Color = Instance.new(""ImageLabel"")
            local ColorCorner = Instance.new(""UICorner"")
            local ColorSelection = Instance.new(""ImageLabel"")
            local Hue = Instance.new(""ImageLabel"")
            local HueCorner = Instance.new(""UICorner"")
            local HueGradient = Instance.new(""UIGradient"")
            local HueSelection = Instance.new(""ImageLabel"")

            Colorpicker.Name = ""Colorpicker""
            Colorpicker.Parent = Tab
            Colorpicker.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Colorpicker.ClipsDescendants = true
            Colorpicker.Position = UDim2.new(-0.541071415, 0, -0.532915354, 0)
            Colorpicker.Size = UDim2.new(0, 363, 0, 42)

            ColorpickerCorner.CornerRadius = UDim.new(0, 5)
            ColorpickerCorner.Name = ""ColorpickerCorner""
            ColorpickerCorner.Parent = Colorpicker

            ColorpickerTitle.Name = ""ColorpickerTitle""
            ColorpickerTitle.Parent = Colorpicker
            ColorpickerTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ColorpickerTitle.BackgroundTransparency = 1.000
            ColorpickerTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            ColorpickerTitle.Size = UDim2.new(0, 187, 0, 42)
            ColorpickerTitle.Font = Enum.Font.Gotham
            ColorpickerTitle.Text = text
            ColorpickerTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            ColorpickerTitle.TextSize = 14.000
            ColorpickerTitle.TextXAlignment = Enum.TextXAlignment.Left

            BoxColor.Name = ""BoxColor""
            BoxColor.Parent = ColorpickerTitle
            BoxColor.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
            BoxColor.Position = UDim2.new(1.60427809, 0, 0.214285716, 0)
            BoxColor.Size = UDim2.new(0, 41, 0, 23)

            BoxColorCorner.CornerRadius = UDim.new(0, 5)
            BoxColorCorner.Name = ""BoxColorCorner""
            BoxColorCorner.Parent = BoxColor

            ColorpickerBtn.Name = ""ColorpickerBtn""
            ColorpickerBtn.Parent = ColorpickerTitle
            ColorpickerBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ColorpickerBtn.BackgroundTransparency = 1.000
            ColorpickerBtn.Size = UDim2.new(0, 363, 0, 42)
            ColorpickerBtn.Font = Enum.Font.SourceSans
            ColorpickerBtn.Text = """"
            ColorpickerBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
            ColorpickerBtn.TextSize = 14.000

            RainbowToggle.Name = ""RainbowToggle""
            RainbowToggle.Parent = ColorpickerTitle
            RainbowToggle.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            RainbowToggle.Position = UDim2.new(1.26349044, 0, 1, 0)
            RainbowToggle.Size = UDim2.new(0, 104, 0, 32)
            RainbowToggle.AutoButtonColor = false
            RainbowToggle.Font = Enum.Font.SourceSans
            RainbowToggle.Text = """"
            RainbowToggle.TextColor3 = Color3.fromRGB(0, 0, 0)
            RainbowToggle.TextSize = 14.000

            RainbowToggleCorner.CornerRadius = UDim.new(0, 5)
            RainbowToggleCorner.Name = ""RainbowToggleCorner""
            RainbowToggleCorner.Parent = RainbowToggle

            RainbowToggleTitle.Name = ""RainbowToggleTitle""
            RainbowToggleTitle.Parent = RainbowToggle
            RainbowToggleTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            RainbowToggleTitle.BackgroundTransparency = 1.000
            RainbowToggleTitle.Size = UDim2.new(0, 33, 0, 32)
            RainbowToggleTitle.Font = Enum.Font.Gotham
            RainbowToggleTitle.Text = ""Rainbow""
            RainbowToggleTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            RainbowToggleTitle.TextSize = 14.000
            RainbowToggleTitle.TextXAlignment = Enum.TextXAlignment.Left

            FrameRainbowToggle1.Name = ""FrameRainbowToggle1""
            FrameRainbowToggle1.Parent = RainbowToggle
            FrameRainbowToggle1.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            FrameRainbowToggle1.Position = UDim2.new(0.649999976, 0, 0.186000004, 0)
            FrameRainbowToggle1.Size = UDim2.new(0, 37, 0, 18)

            FrameRainbowToggle1Corner.Name = ""FrameRainbowToggle1Corner""
            FrameRainbowToggle1Corner.Parent = FrameRainbowToggle1

            FrameRainbowToggle2.Name = ""FrameRainbowToggle2""
            FrameRainbowToggle2.Parent = FrameRainbowToggle1
            FrameRainbowToggle2.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            FrameRainbowToggle2.Position = UDim2.new(0.0590000004, 0, 0.112999998, 0)
            FrameRainbowToggle2.Size = UDim2.new(0, 33, 0, 14)

            FrameRainbowToggle2_2.Name = ""FrameRainbowToggle2""
            FrameRainbowToggle2_2.Parent = FrameRainbowToggle2

            FrameRainbowToggle3.Name = ""FrameRainbowToggle3""
            FrameRainbowToggle3.Parent = FrameRainbowToggle1
            FrameRainbowToggle3.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            FrameRainbowToggle3.BackgroundTransparency = 1.000
            FrameRainbowToggle3.Size = UDim2.new(0, 37, 0, 18)

            FrameToggle3.Name = ""FrameToggle3""
            FrameToggle3.Parent = FrameRainbowToggle3

            FrameRainbowToggleCircle.Name = ""FrameRainbowToggleCircle""
            FrameRainbowToggleCircle.Parent = FrameRainbowToggle1
            FrameRainbowToggleCircle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            FrameRainbowToggleCircle.Position = UDim2.new(0.127000004, 0, 0.222000003, 0)
            FrameRainbowToggleCircle.Size = UDim2.new(0, 10, 0, 10)

            FrameRainbowToggleCircleCorner.Name = ""FrameRainbowToggleCircleCorner""
            FrameRainbowToggleCircleCorner.Parent = FrameRainbowToggleCircle

            Color.Name = ""Color""
            Color.Parent = ColorpickerTitle
            Color.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
            Color.Position = UDim2.new(0, 0, 0, 42)
            Color.Size = UDim2.new(0, 194, 0, 80)
            Color.ZIndex = 10
            Color.Image = ""rbxassetid://4155801252""

            ColorCorner.CornerRadius = UDim.new(0, 3)
            ColorCorner.Name = ""ColorCorner""
            ColorCorner.Parent = Color

            ColorSelection.Name = ""ColorSelection""
            ColorSelection.Parent = Color
            ColorSelection.AnchorPoint = Vector2.new(0.5, 0.5)
            ColorSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ColorSelection.BackgroundTransparency = 1.000
            ColorSelection.Position = UDim2.new(preset and select(3, Color3.toHSV(preset)))
            ColorSelection.Size = UDim2.new(0, 10, 0, 18)
            ColorSelection.Image = ""http://www.roblox.com/asset/?id=4805639000""
            ColorSelection.ScaleType = Enum.ScaleType.Fit
            ColorSelection.Visible = false

            Hue.Name = ""Hue""
            Hue.Parent = ColorpickerTitle
            Hue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Hue.Position = UDim2.new(0, 202, 0, 42)
            Hue.Size = UDim2.new(0, 25, 0, 80)

            HueCorner.CornerRadius = UDim.new(0, 3)
            HueCorner.Name = ""HueCorner""
            HueCorner.Parent = Hue

            HueGradient.Color =
                ColorSequence.new {
                ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)),
                ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)),
                ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)),
                ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)),
                ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)),
                ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)),
                ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))
            }
            HueGradient.Rotation = 270
            HueGradient.Name = ""HueGradient""
            HueGradient.Parent = Hue

            HueSelection.Name = ""HueSelection""
            HueSelection.Parent = Hue
            HueSelection.AnchorPoint = Vector2.new(0.5, 0.5)
            HueSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            HueSelection.BackgroundTransparency = 1.000
            HueSelection.Position = UDim2.new(0.48, 0, 1 - select(1, Color3.toHSV(preset)))
            HueSelection.Size = UDim2.new(0, 18, 0, 18)
            HueSelection.Image = ""http://www.roblox.com/asset/?id=4805639000""
            HueSelection.Visible = false

            coroutine.wrap(
                function()
                    while wait() do
                        FrameRainbowToggle3.BackgroundColor3 = PresetColor
                    end
                end
            )()

            ColorpickerBtn.MouseButton1Click:Connect(
                function()
                    if ColorPickerToggled == false then
                        ColorSelection.Visible = true
                        HueSelection.Visible = true
                        Colorpicker:TweenSize(
                            UDim2.new(0, 363, 0, 132),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            .2,
                            true
                        )
                        wait(.2)
                        Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
                    else
                        ColorSelection.Visible = false
                        HueSelection.Visible = false
                        Colorpicker:TweenSize(
                            UDim2.new(0, 363, 0, 42),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            .2,
                            true
                        )
                        wait(.2)
                        Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
                    end
                    ColorPickerToggled = not ColorPickerToggled
                end
            )

            local function UpdateColorPicker(nope)
                BoxColor.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
                Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)

                pcall(callback, BoxColor.BackgroundColor3)
            end

            ColorH =
                1 -
                (math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
                    Hue.AbsoluteSize.Y)
            ColorS =
                (math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
                Color.AbsoluteSize.X)
            ColorV =
                1 -
                (math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
                    Color.AbsoluteSize.Y)

            BoxColor.BackgroundColor3 = preset
            Color.BackgroundColor3 = preset
            pcall(callback, BoxColor.BackgroundColor3)

            Color.InputBegan:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if RainbowColorPicker then
                            return
                        end

                        if ColorInput then
                            ColorInput:Disconnect()
                        end

                        ColorInput =
                            RunService.RenderStepped:Connect(
                            function()
                                local ColorX =
                                    (math.clamp(Mouse.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
                                    Color.AbsoluteSize.X)
                                local ColorY =
                                    (math.clamp(Mouse.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
                                    Color.AbsoluteSize.Y)

                                ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)
                                ColorS = ColorX
                                ColorV = 1 - ColorY

                                UpdateColorPicker(true)
                            end
                        )
                    end
                end
            )

            Color.InputEnded:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if ColorInput then
                            ColorInput:Disconnect()
                        end
                    end
                end
            )

            Hue.InputBegan:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if RainbowColorPicker then
                            return
                        end

                        if HueInput then
                            HueInput:Disconnect()
                        end

                        HueInput =
                            RunService.RenderStepped:Connect(
                            function()
                                local HueY =
                                    (math.clamp(Mouse.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
                                    Hue.AbsoluteSize.Y)

                                HueSelection.Position = UDim2.new(0.48, 0, HueY, 0)
                                ColorH = 1 - HueY

                                UpdateColorPicker(true)
                            end
                        )
                    end
                end
            )

            Hue.InputEnded:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if HueInput then
                            HueInput:Disconnect()
                        end
                    end
                end
            )

            RainbowToggle.MouseButton1Down:Connect(
                function()
                    RainbowColorPicker = not RainbowColorPicker

                    if ColorInput then
                        ColorInput:Disconnect()
                    end

                    if HueInput then
                        HueInput:Disconnect()
                    end

                    if RainbowColorPicker then
                        TweenService:Create(
                            FrameRainbowToggle1,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundTransparency = 1}
                        ):Play()
                        TweenService:Create(
                            FrameRainbowToggle2,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundTransparency = 1}
                        ):Play()
                        TweenService:Create(
                            FrameRainbowToggle3,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundTransparency = 0}
                        ):Play()
                        TweenService:Create(
                            FrameRainbowToggleCircle,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}
                        ):Play()
                        FrameRainbowToggleCircle:TweenPosition(
                            UDim2.new(0.587, 0, 0.222000003, 0),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            .2,
                            true
                        )

                        OldToggleColor = BoxColor.BackgroundColor3
                        OldColor = Color.BackgroundColor3
                        OldColorSelectionPosition = ColorSelection.Position
                        OldHueSelectionPosition = HueSelection.Position

                        while RainbowColorPicker do
                            BoxColor.BackgroundColor3 = Color3.fromHSV(lib.RainbowColorValue, 1, 1)
                            Color.BackgroundColor3 = Color3.fromHSV(lib.RainbowColorValue, 1, 1)

                            ColorSelection.Position = UDim2.new(1, 0, 0, 0)
                            HueSelection.Position = UDim2.new(0.48, 0, 0, lib.HueSelectionPosition)

                            pcall(callback, BoxColor.BackgroundColor3)
                            wait()
                        end
                    elseif not RainbowColorPicker then
                        TweenService:Create(
                            FrameRainbowToggle1,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundTransparency = 0}
                        ):Play()
                        TweenService:Create(
                            FrameRainbowToggle2,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundTransparency = 0}
                        ):Play()
                        TweenService:Create(
                            FrameRainbowToggle3,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundTransparency = 1}
                        ):Play()
                        TweenService:Create(
                            FrameRainbowToggleCircle,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}
                        ):Play()
                        FrameRainbowToggleCircle:TweenPosition(
                            UDim2.new(0.127000004, 0, 0.222000003, 0),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            .2,
                            true
                        )

                        BoxColor.BackgroundColor3 = OldToggleColor
                        Color.BackgroundColor3 = OldColor

                        ColorSelection.Position = OldColorSelectionPosition
                        HueSelection.Position = OldHueSelectionPosition

                        pcall(callback, BoxColor.BackgroundColor3)
                    end
                end
            )

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end
        function tabcontent:Label(text)
            local Label = Instance.new(""TextButton"")
            local LabelCorner = Instance.new(""UICorner"")
            local LabelTitle = Instance.new(""TextLabel"")

            Label.Name = ""Button""
            Label.Parent = Tab
            Label.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Label.Size = UDim2.new(0, 363, 0, 42)
            Label.AutoButtonColor = false
            Label.Font = Enum.Font.SourceSans
            Label.Text = """"
            Label.TextColor3 = Color3.fromRGB(0, 0, 0)
            Label.TextSize = 14.000

            LabelCorner.CornerRadius = UDim.new(0, 5)
            LabelCorner.Name = ""ButtonCorner""
            LabelCorner.Parent = Label

            LabelTitle.Name = ""ButtonTitle""
            LabelTitle.Parent = Label
            LabelTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            LabelTitle.BackgroundTransparency = 1.000
            LabelTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            LabelTitle.Size = UDim2.new(0, 187, 0, 42)
            LabelTitle.Font = Enum.Font.Gotham
            LabelTitle.Text = text
            LabelTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            LabelTitle.TextSize = 14.000
            LabelTitle.TextXAlignment = Enum.TextXAlignment.Left

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end
        function tabcontent:Textbox(text, disapper, callback)
            local Textbox = Instance.new(""Frame"")
            local TextboxCorner = Instance.new(""UICorner"")
            local TextboxTitle = Instance.new(""TextLabel"")
            local TextboxFrame = Instance.new(""Frame"")
            local TextboxFrameCorner = Instance.new(""UICorner"")
            local TextBox = Instance.new(""TextBox"")

            Textbox.Name = ""Textbox""
            Textbox.Parent = Tab
            Textbox.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Textbox.ClipsDescendants = true
            Textbox.Position = UDim2.new(-0.541071415, 0, -0.532915354, 0)
            Textbox.Size = UDim2.new(0, 363, 0, 42)

            TextboxCorner.CornerRadius = UDim.new(0, 5)
            TextboxCorner.Name = ""TextboxCorner""
            TextboxCorner.Parent = Textbox

            TextboxTitle.Name = ""TextboxTitle""
            TextboxTitle.Parent = Textbox
            TextboxTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TextboxTitle.BackgroundTransparency = 1.000
            TextboxTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            TextboxTitle.Size = UDim2.new(0, 187, 0, 42)
            TextboxTitle.Font = Enum.Font.Gotham
            TextboxTitle.Text = text
            TextboxTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextboxTitle.TextSize = 14.000
            TextboxTitle.TextXAlignment = Enum.TextXAlignment.Left

            TextboxFrame.Name = ""TextboxFrame""
            TextboxFrame.Parent = TextboxTitle
            TextboxFrame.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
            TextboxFrame.Position = UDim2.new(1.28877008, 0, 0.214285716, 0)
            TextboxFrame.Size = UDim2.new(0, 100, 0, 23)

            TextboxFrameCorner.CornerRadius = UDim.new(0, 5)
            TextboxFrameCorner.Name = ""TextboxFrameCorner""
            TextboxFrameCorner.Parent = TextboxFrame

            TextBox.Parent = TextboxFrame
            TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TextBox.BackgroundTransparency = 1.000
            TextBox.Size = UDim2.new(0, 100, 0, 23)
            TextBox.Font = Enum.Font.Gotham
            TextBox.Text = """"
            TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextBox.TextSize = 14.000

            TextBox.FocusLost:Connect(
                function(ep)
                    if ep then
                        if #TextBox.Text > 0 then
                            pcall(callback, TextBox.Text)
                            if disapper then
                                TextBox.Text = """"
                            end
                        end
                    end
                end
            )
            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end
        function tabcontent:Bind(text, keypreset, callback)
            local binding = false
            local Key = keypreset.Name
            local Bind = Instance.new(""TextButton"")
            local BindCorner = Instance.new(""UICorner"")
            local BindTitle = Instance.new(""TextLabel"")
            local BindText = Instance.new(""TextLabel"")

            Bind.Name = ""Bind""
            Bind.Parent = Tab
            Bind.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Bind.Size = UDim2.new(0, 363, 0, 42)
            Bind.AutoButtonColor = false
            Bind.Font = Enum.Font.SourceSans
            Bind.Text = """"
            Bind.TextColor3 = Color3.fromRGB(0, 0, 0)
            Bind.TextSize = 14.000

            BindCorner.CornerRadius = UDim.new(0, 5)
            BindCorner.Name = ""BindCorner""
            BindCorner.Parent = Bind

            BindTitle.Name = ""BindTitle""
            BindTitle.Parent = Bind
            BindTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            BindTitle.BackgroundTransparency = 1.000
            BindTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            BindTitle.Size = UDim2.new(0, 187, 0, 42)
            BindTitle.Font = Enum.Font.Gotham
            BindTitle.Text = text
            BindTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            BindTitle.TextSize = 14.000
            BindTitle.TextXAlignment = Enum.TextXAlignment.Left

            BindText.Name = ""BindText""
            BindText.Parent = Bind
            BindText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            BindText.BackgroundTransparency = 1.000
            BindText.Position = UDim2.new(0.0358126722, 0, 0, 0)
            BindText.Size = UDim2.new(0, 337, 0, 42)
            BindText.Font = Enum.Font.Gotham
            BindText.Text = Key
            BindText.TextColor3 = Color3.fromRGB(255, 255, 255)
            BindText.TextSize = 14.000
            BindText.TextXAlignment = Enum.TextXAlignment.Right

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)

            Bind.MouseButton1Click:Connect(
                function()
                    BindText.Text = ""...""
                    binding = true
                    local inputwait = game:GetService(""UserInputService"").InputBegan:wait()
                    if inputwait.KeyCode.Name ~= ""Unknown"" then
                        BindText.Text = inputwait.KeyCode.Name
                        Key = inputwait.KeyCode.Name
                        binding = false
                    else
                        binding = false
                    end
                end
            )

            game:GetService(""UserInputService"").InputBegan:connect(
                function(current, pressed)
                    if not pressed then
                        if current.KeyCode.Name == Key and binding == false then
                            pcall(callback)
                        end
                    end
                end
            )
        end
        return tabcontent
    end
    return tabhold
end
return lib"
tWJa4tB6,Voice pack,Dsaqwed123,LScript,Tuesday 7th of May 2024 04:51:16 PM CDT,"game:GetService(""RunService"").RenderStepped:Connect(change_color)
 
_G.voicepack = ""Kiryu"" -- Current available voices: ""Kiryu"", ""Akiyama"", ""Majima"" and ""Vulcan""
local player = game.Players.LocalPlayer
local character = player.Character
local pgui = player.PlayerGui
local status = player.Status
local RPS = game.ReplicatedStorage
_G.voice = RPS.Voices:FindFirstChild(_G.voicepack)
 
print(_G.voice.Name)
local function playSound(sound)
    local soundclone = Instance.new(""Sound"")
    soundclone.Parent = character.Head
    soundclone.Name = sound.Name
    soundclone.SoundId = sound.Value
    soundclone.Volume = 0.35
    soundclone:Play()
    soundclone.Ended:Connect(function()
        game:GetService(""Debris""):AddItem(soundclone)
    end)
end
local function fetchRandom(instance)
    local instancechildren = instance:GetChildren()
    local random = instancechildren[math.random(1, #instancechildren)]
    return random
end
 
 
local plr = game.Players.LocalPlayer
local pgui = plr.PlayerGui
local interf = pgui.Interface
local bt = interf.Battle
local main = bt.Main
 
local notifyevent 
for i,v in pairs (pgui:GetChildren()) do
    if v:IsA(""BindableEvent"") then
        notifyevent = v
    end
end
 
local function sendNotification(text, color, sound)
    if not color then color = Color3.new(1, 1, 1) end
    pgui.NotifyUI.Awards.ChildAdded:Once(function(c)
        if c.Text == text then
            c.TextColor3 = color
            coroutine.wrap(function()
                local con;
                con = game:GetService(""RunService"").RenderStepped:Connect(function()
                    if not c then
                        con:Disconnect()
                        return
                    end
                    c.TextColor3 = color
                end)()
            end)()
        end
    end)
    notifyevent:Fire(text, sound or nil)
end
 
 
local alreadyRunning = RPS:FindFirstChild(""VoiceMod"")
if alreadyRunning then
    sendNotification(""Selected voice: "".._G.voice.Name, Color3.fromRGB(255, 255, 255))
    return
end 
 
alreadyRunning = Instance.new(""BoolValue"")
alreadyRunning.Parent = RPS
alreadyRunning.Value = true
alreadyRunning.Name = ""VoiceMod""
 
sendNotification(""Voice Mod loaded"", Color3.fromRGB(255, 255, 255))
sendNotification(""Selected voice: "".._G.voice.Name, Color3.fromRGB(255, 255, 255))
local receivedsound
 
player.ChildAdded:Connect(function(child)
    if child.Name == ""InBattle"" then
        receivedsound = fetchRandom(_G.voice.BattleStart)
        playSound(receivedsound)
    end 
end) 
local hitCD = false
character.ChildAdded:Connect(function(child)
    if child.Name == ""Heated"" and child:WaitForChild(""Heating"",0.5).Value ~= character then
        local isThrowing = child:WaitForChild(""Throwing"",0.5)
        if not isThrowing then
            receivedsound = fetchRandom(_G.voice.HeatAction)
            playSound(receivedsound)
        end
    end
    if child.Name == ""Hitstunned"" and not character:FindFirstChild(""Ragdolled"") then
        if hitCD == false then
            hitCD = true
            receivedsound = fetchRandom(_G.voice.Pain)
            playSound(receivedsound)
            delay(2,function()
                hitCD = false
            end)
        end
    end
    if child.Name == ""Ragdolled"" then
        receivedsound = fetchRandom(_G.voice.Knockdown)
        playSound(receivedsound)
    end
    if child.Name == ""ImaDea"" then
        receivedsound = fetchRandom(_G.voice.Death)
        playSound(receivedsound)
    end
    if child.Name == ""Stunned"" then
        receivedsound = fetchRandom(_G.voice.Stun)
        playSound(receivedsound)
    end
end)
 
character.ChildRemoved:Connect(function(child)
    if child.Name == ""Ragdolled"" then
        wait(0.1)
        if not string.match(status.CurrentMove.Value.Name, ""Getup"") then
            receivedsound = fetchRandom(_G.voice.Recover)
            playSound(receivedsound)
        end
    end
end)
 
character.HumanoidRootPart.ChildAdded:Connect(function(child)
    if child.Name == ""KnockOut"" or child.Name == ""KnockOutRare"" then
        child.Volume = 0
    end
end) 
local dodgeCD = false
status.FFC.Evading.Changed:Connect(function()
    if status.FFC.Evading.Value == true and character:FindFirstChild(""BeingHacked"") and not dodgeCD then
        dodgeCD = true
        receivedsound = fetchRandom(_G.voice.Dodge)
        playSound(receivedsound)
        delay(10,function()
            dodgeCD = false
        end)
    end
end)
local fakeTauntSound = RPS.Sounds:FindFirstChild(""Laugh""):Clone()
fakeTauntSound.Parent = RPS.Sounds
fakeTauntSound.Name = ""FakeLaugh""
fakeTauntSound.Volume.Value = 0
RPS.Moves.Taunt.Sound.Value = ""FakeLaugh""
RPS.Moves.RushTaunt.Sound.Value = ""FakeLaugh""
RPS.Moves.GoonTaunt.Sound.Value = ""FakeLaugh""
status.Taunting.Changed:Connect(function()
    if status.Taunting.Value == true and status.CurrentMove.Value.Name ~= ""BeastTaunt"" then
        receivedsound = fetchRandom(_G.voice.Taunt)
        playSound(receivedsound)
    end
end)
local lattackCD = false
status.CurrentMove.Changed:Connect(function()
    if string.match(status.CurrentMove.Value.Name, ""Attack"") or string.match(status.CurrentMove.Value.Name, ""Punch"") then
        if lattackCD == false then
            lattackCD = true
            receivedsound = fetchRandom(_G.voice.LightAttack)
            playSound(receivedsound)
            delay(0.35, function()
                lattackCD = false
            end)
        end
    else
        if not string.match(status.CurrentMove.Value.Name, ""Taunt"") and not string.match(status.CurrentMove.Value.Name, ""Grab"") then
            receivedsound = fetchRandom(_G.voice.HeavyAttack)
            playSound(receivedsound)
        end
    end
end)
 
game.UserInputService.InputBegan:Connect(function(key)
    if game.UserInputService:GetFocusedTextBox() == nil then
        if key.KeyCode == Enum.KeyCode.H then
            if _G.voicepack == ""Kiryu"" then
                _G.voicepack = ""Akiyama""
            elseif _G.voicepack == ""Akiyama"" then
                _G.voicepack = ""Majima""
            elseif _G.voicepack == ""Majima"" then
                _G.voicepack = ""Vulcan""
            elseif _G.voicepack == ""Vulcan"" then
                _G.voicepack = ""Kiryu""
            end
            _G.voice = RPS.Voices:FindFirstChild(_G.voicepack)
            sendNotification(""Selected voice: "".._G.voice.Name, Color3.fromRGB(255, 255, 255))
        end 
    end
end)"
es5uC1vT,Esp32 Rainmaker controller,OtroIntentoDe,C++,Tuesday 7th of May 2024 04:48:07 PM CDT,"#include ""RMaker.h""
#include ""WiFi.h""
#include ""WiFiProv.h""
#include <AceButton.h>
using namespace ace_button;
#define DEFAULT_POWER_MODE true
#define DEFAULT_DIMMER_LEVEL 50

#define PWM1_Ch    0
#define PWM1_Res   8
#define PWM1_Freq  1000
int PWM1_DutyCycle = DEFAULT_DIMMER_LEVEL;

const char *service_name = ""lovglomas"";
const char *pop = ""leiremartinez"";

// define the Device Names
char deviceName_1[] = ""Switch1"";
char deviceName_2[] = ""Switch2"";
char deviceName_3[] = ""PwmControl"";

// define the GPIO connected with Relays and switches
static uint8_t RelayPin1 = 23;  //D23
static uint8_t RelayPin2 = 22;  //D22
static uint8_t PwmPin = 17;

static uint8_t SwitchPin1 = 13;  //D13
static uint8_t SwitchPin2 = 12;  //D12
static uint8_t PwmPote = 15;  //D12

static uint8_t wifiLed    = 2;   //D2
static uint8_t gpio_reset = 0;

/* Variable for reading pin status*/
bool toggleState_1 = LOW; //Define integer to remember the toggle state for relay 1
bool toggleState_2 = LOW; //Define integer to remember the toggle state for relay 2
bool toggleState_3 = LOW;

ButtonConfig config1;
AceButton button1(&config1);
ButtonConfig config2;
AceButton button2(&config2);

void handleEvent1(AceButton*, uint8_t, uint8_t);
void handleEvent2(AceButton*, uint8_t, uint8_t);

//The framework provides some standard device types like switch, lightbulb, fan, temperature sensor.
static LightBulb my_switch1(deviceName_1, &RelayPin1);
static LightBulb my_switch2(deviceName_2, &RelayPin2);
static LightBulb my_pwm(deviceName_3, &PwmPin);

void sysProvEvent(arduino_event_t *sys_event)
{
    switch (sys_event->event_id) {      
        case ARDUINO_EVENT_PROV_START:
#if CONFIG_IDF_TARGET_ESP32
        Serial.printf(""\nProvisioning Started with name \""%s\"" and PoP \""%s\"" on BLE\n"", service_name, pop);
        printQR(service_name, pop, ""ble"");
#else
        Serial.printf(""\nProvisioning Started with name \""%s\"" and PoP \""%s\"" on SoftAP\n"", service_name, pop);
        printQR(service_name, pop, ""softap"");
#endif        
        break;
        case ARDUINO_EVENT_WIFI_STA_CONNECTED:
        Serial.printf(""\nConnected to Wi-Fi!\n"");
        digitalWrite(wifiLed, true);
        break;
    }
}

void write_callback(Device *device, Param *param, const param_val_t val, void *priv_data, write_ctx_t *ctx)
{
    const char *device_name = device->getDeviceName();
    const char *param_name = param->getParamName();

    if(strcmp(device_name, deviceName_1) == 0) {
      if(strcmp(param_name, ""Power"") == 0) {
        Serial.printf(""Received value = %s for %s - %s\n"",
                      val.val.b ? ""true"" : ""false"", device_name, param_name);
        toggleState_1 = val.val.b;
        (toggleState_1 == false) ? digitalWrite(RelayPin1, HIGH) : digitalWrite(RelayPin1, LOW);
        param->updateAndReport(val);
      }
      
    } else if(strcmp(device_name, deviceName_2) == 0) {
      Serial.printf(""Received value = %s for %s - %s\n"",
                      val.val.b ? ""true"" : ""false"", device_name, param_name);
      if(strcmp(param_name, ""Power"") == 0) {
        toggleState_2 = val.val.b;

        (toggleState_2 == false) ? digitalWrite(RelayPin2, HIGH) : digitalWrite(RelayPin2, LOW);
        param->updateAndReport(val);
      }
  
    } else if(strcmp(device_name, deviceName_3) == 0) {
      if(strcmp(param_name, ""Power"") == 0) {
        Serial.printf(""Received value = %s for %s - %s\n"", val.val.b ? ""true"" : ""false"", device_name, param_name);
        toggleState_3 = val.val.b;
        param->updateAndReport(val);
        (toggleState_3 == false) ? ledcWrite(PWM1_Ch, 0) : ledcWrite(PWM1_Ch, PWM1_DutyCycle);
      } else if (strcmp(param_name, ""Level"") == 0) {
        param->updateAndReport(val);
        PWM1_DutyCycle = map(val.val.i, 0, 100, 0, 255);
        ledcWrite(PWM1_Ch, PWM1_DutyCycle);
        } 
    }
}


void setup()
{
    uint32_t chipId = 0;
    
    Serial.begin(115200);
    
    // Set the Relays GPIOs as output mode
    pinMode(RelayPin1, OUTPUT);
    pinMode(RelayPin2, OUTPUT);
    pinMode(PwmPin, OUTPUT); 
    pinMode(wifiLed, OUTPUT);
    
    // Configure the input GPIOs
    pinMode(SwitchPin1, INPUT_PULLUP);
    pinMode(SwitchPin2, INPUT_PULLUP);
    pinMode(gpio_reset, INPUT_PULLUP);

    ledcSetup(PWM1_Ch, PWM1_Freq, PWM1_Res);
    ledcAttachPin(PwmPin, PWM1_Ch);
    
    // Write to the GPIOs the default state on booting
    digitalWrite(RelayPin1, !toggleState_1);
    digitalWrite(RelayPin2, !toggleState_2);
    digitalWrite(PwmPin, !toggleState_3);
    digitalWrite(wifiLed, LOW);

    config1.setEventHandler(button1Handler);
    config2.setEventHandler(button2Handler);
    
    button1.init(SwitchPin1);
    button2.init(SwitchPin2);

    Node my_node;    
    my_node = RMaker.initNode(""Disp. de testeo"");

    Param level_param(""Level"", ""esp.param.brightness"", value(DEFAULT_DIMMER_LEVEL), PROP_FLAG_READ | PROP_FLAG_WRITE);
    level_param.addBounds(value(0), value(100), value(1));
    level_param.addUIType(ESP_RMAKER_UI_SLIDER);
    my_pwm.addParam(level_param);

    //Standard switch device
    my_switch1.addCb(write_callback);
    my_switch2.addCb(write_callback);
    my_pwm.addCb(write_callback);

    //Add switch device to the node   
    my_node.addDevice(my_switch1);
    my_node.addDevice(my_switch2);
    my_node.addDevice(my_pwm);

    //This is optional 
    RMaker.enableOTA(OTA_USING_PARAMS);
    //If you want to enable scheduling, set time zone for your region using setTimeZone(). 
    //The list of available values are provided here https://rainmaker.espressif.com/docs/time-service.html
    // RMaker.setTimeZone(""Asia/Shanghai"");
    // Alternatively, enable the Timezone service and let the phone apps set the appropriate timezone
    RMaker.enableTZService();
    RMaker.enableSchedule();

    //Service Name
    for(int i=0; i<17; i=i+8) {
      chipId |= ((ESP.getEfuseMac() >> (40 - i)) & 0xff) << i;
    }

    Serial.printf(""\nChip ID:  %d Service Name: %s\n"", chipId, service_name);

    Serial.printf(""\nStarting ESP-RainMaker\n"");
    RMaker.start();

    WiFi.onEvent(sysProvEvent);
#if CONFIG_IDF_TARGET_ESP32
    WiFiProv.beginProvision(WIFI_PROV_SCHEME_BLE, WIFI_PROV_SCHEME_HANDLER_FREE_BTDM, WIFI_PROV_SECURITY_1, pop, service_name);
#else
    WiFiProv.beginProvision(WIFI_PROV_SCHEME_SOFTAP, WIFI_PROV_SCHEME_HANDLER_NONE, WIFI_PROV_SECURITY_1, pop, service_name);
#endif

    my_switch1.updateAndReportParam(ESP_RMAKER_DEF_POWER_NAME, false);
    my_switch2.updateAndReportParam(ESP_RMAKER_DEF_POWER_NAME, false);
    my_pwm.updateAndReportParam(ESP_RMAKER_DEF_POWER_NAME, false);
}

void loop()
{
    // Read GPIO0 (external button to reset device
    if(digitalRead(gpio_reset) == LOW) { //Push button pressed
        Serial.printf(""Reset Button Pressed!\n"");
        // Key debounce handling
        delay(100);
        int startTime = millis();
        while(digitalRead(gpio_reset) == LOW) delay(50);
        int endTime = millis();

        if ((endTime - startTime) > 10000) {
          // If key pressed for more than 10secs, reset all
          Serial.printf(""Reset to factory.\n"");
          RMakerFactoryReset(2);
        } else if ((endTime - startTime) > 3000) {
          Serial.printf(""Reset Wi-Fi.\n"");
          // If key pressed for more than 3secs, but less than 10, reset Wi-Fi
          RMakerWiFiReset(2);
        }
    }
    delay(100);

    if (WiFi.status() != WL_CONNECTED)
    {
      //Serial.println(""WiFi Not Connected"");
      digitalWrite(wifiLed, false);
    }
    else
    {
      //Serial.println(""WiFi Connected"");
      digitalWrite(wifiLed, true);
    }

    button1.check();
    button2.check();
}

void button1Handler(AceButton* button, uint8_t eventType, uint8_t buttonState) {
  Serial.println(""EVENT1"");
  switch (eventType) {
    case AceButton::kEventReleased:
      digitalWrite(RelayPin1, toggleState_1);
      toggleState_1 = !toggleState_1;
      my_switch1.updateAndReportParam(ESP_RMAKER_DEF_POWER_NAME, toggleState_1);
      break;
  }
}
void button2Handler(AceButton* button, uint8_t eventType, uint8_t buttonState) {
  Serial.println(""EVENT2"");
  switch (eventType) {
    case AceButton::kEventReleased:
      digitalWrite(RelayPin2, toggleState_2);
      toggleState_2 = !toggleState_2;
      my_switch2.updateAndReportParam(ESP_RMAKER_DEF_POWER_NAME, toggleState_2);
      break;
  }
}"
4VrQG5Qb,Untitled,s-sols,CSS,Tuesday 7th of May 2024 04:22:12 PM CDT,"@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap');

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .et-l--header .et_pb_section_2_tb_header .quadmenu-container .quadmenu-item {
	height: 30px !important;
	display: inline-block !important;
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .et-l--header .et_pb_section_2_tb_header .et_pb_menu__menu .quadmenu-navbar-nav {
	display: block !important;
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .et-l--header .et_pb_section_2_tb_header .quadmenu-container .quadmenu-item .quadmenu-item-content {
	padding: 0 15px !important;
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .et-l--header .et_pb_section_2_tb_header .et_pb_menu__menu > .et-menu-nav > .quadmenu-default_theme {
	box-shadow: none !important;
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .et-l--header .et_pb_section_2_tb_header .quadmenu-container .quadmenu-item .quadmenu-caret {
	width: 30px !important;
	height: 30px !important;
	padding: 0 !important;
	top: 50% !important;
	margin: -15px 0 0 0 !important;
}

	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .et-l--header .et_pb_section_2_tb_header .quadmenu-container .quadmenu-item .quadmenu-caret::before {
		width: 30px !important;
	}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .et-l--header .et_pb_section_2_tb_header .quadmenu-container .quadmenu-item.quadmenu-has-caret .quadmenu-text {
	padding-right: 14px;
}

@media screen and (max-width: 1100px) {
	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .et-l--header .et_pb_section_2_tb_header .quadmenu-container .quadmenu-item.quadmenu-has-caret .quadmenu-text {
		padding-right: 12px;
	}
}

@media screen and (max-width: 980px) {
	body.home .et-l--header .et_pb_section_3_tb_header .et_pb_row--with-menu {
		display: flex;
	}
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .et_pb_module.dipi_carousel.dipi_carousel_0 {
	height: 620px;
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .dipi-carousel-main.dipi_loading.hide_lightbox.hide_lightbox_tablet.hide_lightbox_phone {
	display: block !important;
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .et_pb_module.dipi_carousel_child.dipi_carousel_child_1.swiper-slide {
	opacity: 0;
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .et_pb_section.et_pb_section_0.et_pb_with_background.et_section_regular {
	padding-bottom: 61px !important;
}

body.home .et_pb_column_7 > #homepagecarousel {
	--product-side-margin: 10px;
	--product-width: calc((100vw - var(--product-side-margin) * 8) / 4.47);
	--block-trans-X: calc(var(--product-width) / -2 - 25px);
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .et_pb_column_7 > #homepagecarousel .et_pb_carousel_wrapper {
	display: block !important;
	opacity: 1 !important;
	width: 10000px !important;
	transform: translateX(var(--block-trans-X));
}

	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .et_pb_column_7 > #homepagecarousel .et_pb_carousel_wrapper .product-wrapper.product {
		width: var(--product-width) !important;
		float: left;
		margin: 0 var(--product-side-margin);
	}

@media screen and (min-width: 980px) {
	body.home .product-wrapper.product:not([style*=""ease""]) {
		width: var(--product-width) !important;
	}
}

body.home .slick-track:not[style*=""ease""] {
	transform: none !important;
	transition: transform 300ms ease !important;
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) #homepagecarousel .et_pb_carousel_wrapper .slick-track {
	width: 10000px !important;
	transform: translateX(0) !important;
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .et_pb_column_7 > #homepagecarousel .et_pb_carousel_wrapper .product-wrapper.product .woocommerce-variation-add-to-cart .single_add_to_cart_button {
	bottom: 31px;
	transition: none !important;
}

body.home #homepagecarousel .et_pb_module.et_pb_db_shop_thumbnail {
	animation: none !important;
}

body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) #homepagecarousel .slick-track .product-wrapper .et_pb_module.et_pb_db_shop_thumbnail .flip-image-cont img {
	opacity: 1 !important;
	transition: none;
}

@media screen and (max-width: 1029px) {
	body.home #homepagecarousel.et_pb_module.et_pb_db_product_carousel {
		--product-width: calc((100vw - var(--product-side-margin) * 6) / 3.47);
	}
}

@media screen and (max-width: 979px) {
	body.home #homepagecarousel.et_pb_module.et_pb_db_product_carousel {
		--product-width: calc((100vw - var(--product-side-margin) * 6) / 3);
	}

	body.home .et_pb_column_7 > #homepagecarousel .et_pb_carousel_wrapper .product-wrapper.product {
		--product-width: unset !important;
	}
}

@media screen and (max-width: 579px) {
	body.home #homepagecarousel.et_pb_module.et_pb_db_product_carousel {
		--product-width: calc((100vw - var(--product-side-margin) * 2) / 1.5);
	}

	body.home #homepagecarousel .product-wrapper.product:not([style*=""ease""]) {
		width: var(--product-width) !important;
	}
}

body.home .et_pb_module.et_pb_text.et_pb_text_8.et_pb_text_align_center.et_pb_bg_layout_light.et_had_animation {
	animation: none !important;
}

body.home .et_pb_module.et_pb_text.et_pb_text_8.et_animated.et_pb_text_align_center.et_pb_bg_layout_light.et_is_animating.slideBottom {
	animation: none !important;
	transform: none !important;
}

body.home .et_pb_section.et_pb_section_20.et_pb_with_background.et_section_regular * {
	transform: none !important;
}

@media screen and (min-width: 768px) and (max-width: 980px) {
	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .dsm_card_carousel_wrapper .swiper-wrapper {
		--card-width: calc((100vw - 80px - var(--card-mr)) / 2);
		--card-mr: 15px;
		transform: translateX(calc((100% + var(--card-mr)) / 4));
	}

		body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .dsm_card_carousel_wrapper .swiper-wrapper .dsm_card_carousel_child {
			width: var(--card-width) !important;
			margin-right: var(--card-mr);
		}
}

@media screen and (max-width: 767px) {
	body.home:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .dsm_card_carousel_wrapper .swiper-wrapper .dsm_card_carousel_child {
		margin-right: 15px;
	}
}
"
B6njJcfa,selection_sort,buonaseva_fatelo,C++,Tuesday 7th of May 2024 04:09:51 PM CDT,"/*****************************************************************/
/* CON GLI INT (int array[]) */
/*****************************************************************/
void scambia(int array[], int first, int last){
    int temp = array[first];
    array[first] = array[last];
    array[last] = temp;
}

void stampa(int array[], int length){
	for (int index=0; index < length; ++index)
	cout << array[index] << ' ';
}

void selection_sort(int array[], int length){
    // Seleziona la posizione in cui porre l'elemento ordinato (indexA)
	for (int indexA = 0; indexA < length - 1; indexA++)
	{
	    // Dichiara una var. temp. ""smallestIndex""
	    // Momentaneamente assegnagli l'indice di indexA... prendilo per buono
		int smallestIndex = indexA;

		// Cerca l'elemento più piccolo nel sotto-array disordinato a dx (posizione indexB)
		for (int indexB = indexA +1 ; indexB < length; indexB++)
		{
			// Se abbiamo trovato un elemento più piccolo... 
			if (array[indexB] < array[smallestIndex])
				// ...salvati il suo indice
				smallestIndex = indexB;
		}
        //Finito di scansionare l'array disordinato, scambia i 2 numeri
		scambia(array, indexA, smallestIndex);
	}
}


/*****************************************************************/
/* CON LE STRINGHE DI CARATTERI CPP-STYLE (string array[]) */
/*****************************************************************/
void scambia(string array[], int first, int last){
    string temp = array[first];
    array[first] = array[last];
    array[last] = temp;
}

void stampa(string array[], int length){
	for (int index=0; index < length; ++index)
	cout << array[index] << ' ';
}

void selection_sort(string array[], int length){
    // Seleziona la posizione in cui porre l'elemento ordinato (indexA)
	for (int indexA = 0; indexA < length - 1; indexA++)
	{
	    // Dichiara una var. temp. ""smallestIndex""
	    // Momentaneamente assegnagli l'indice di indexA... prendilo per buono
		int smallestIndex = indexA;

		// Cerca la stringa che viene prima nel sotto-array disordinato a dx (posizione indexB)
		for (int indexB = indexA +1 ; indexB < length; indexB++)
		{
			// Se l'abbiamo trovata... 
			if (array[indexB] < array[smallestIndex])
				// ...salvati il suo indice
				smallestIndex = indexB;
		}
        //Finito di scansionare l'array disordinato, scambia le 2 stringhe
		scambia(array, indexA, smallestIndex);
	}
}


"
PeQ7Ur5j,ДЗ Вывод имени,TeT91,C#,Tuesday 7th of May 2024 04:06:50 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine(""Введите имя"");
            string name = Console.ReadLine();
            Console.WriteLine(""Выберите символ"");
            string symbol = Console.ReadLine();

            int columns = name.Length + 2;
            int rows = 3;
            int strokeWidth = 1;

            for (int i = 0; i < rows; i++)
            {
                if (i == strokeWidth)
                {
                    Console.Write($""{symbol}{name}{symbol}"");
                }
                else
                {
                    for (int j = 0; j < name.Length + strokeWidth*2; j++)
                    {
                        Console.Write(symbol);
                    }
                }
                Console.WriteLine();
            }
            Console.ReadLine();
        }
    }
}
"
uqYeELtN,Конвертер валюты,TeT91,C#,Tuesday 7th of May 2024 03:40:35 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            float dollars = 100;
            float rubles = 15000;
            float dollarToRubleRate = 93.14f;
            float rubleToDollarRate = 1 / dollarToRubleRate;
            float currencyCountToExchange;
            bool isFinished = false;

            while (!isFinished)
            {
                Console.WriteLine(""Введите команду: \n 1 - Обменять доллары на рубли. \n 2 - Обменять рубли на доллары"");
                string userInput = Console.ReadLine();
                switch (userInput)
                {
                    case ""1"":
                        Console.WriteLine(""Сколько долларов хотите обменять?"");
                        currencyCountToExchange = Convert.ToInt32(Console.ReadLine());
                        if (currencyCountToExchange <= dollars && dollars > 0)
                        {
                            dollars -= currencyCountToExchange;
                            rubles += currencyCountToExchange * dollarToRubleRate;

                            Console.WriteLine($""Вы обменяли {currencyCountToExchange} долларов на рубли по курсу {dollarToRubleRate}. "" +
                                $""Теперь у вас {dollars} долларов и {rubles} рублей"");
                        }
                        else
                        {
                            Console.WriteLine(""Не хватает валюты"");
                        }
                        break;
                    case ""2"":
                        Console.WriteLine(""Сколько рублей хотите обменять?"");
                        currencyCountToExchange = Convert.ToInt32(Console.ReadLine());
                        if (currencyCountToExchange <= rubles && rubles > 0)
                        {
                            rubles -= currencyCountToExchange;
                            dollars += currencyCountToExchange * rubleToDollarRate;

                            Console.WriteLine($""Вы обменяли {currencyCountToExchange} долларов на рубли по курсу {dollarToRubleRate}. "" +
                                $""Теперь у вас {dollars} долларов и {rubles} рублей"");
                        }
                        else
                        {
                            Console.WriteLine(""Не хватает валюты"");
                        }
                        break;
                        default:
                        isFinished = true;
                        break;
                        
                }
            }
        }
    }
}
"
39vSCqwk,Untitled,Night_gamer1980,Lua,Tuesday 7th of May 2024 03:38:16 PM CDT,"local PabloLib = loadstring(game:HttpGet(""https://raw.githubusercontent.com/BatuKvi123/PabloLibV3/main/PabloLibV3""))()

local window = PabloLib:Create(
""LiftersKings"", -- Name here.
""Enabled"", -- If you want draggable set here to ""Enabled"" if you dont want set to ""Disabled"".
""k"" -- You can put any keybind here to open close.
)

local Main = window:CreateTab(""Main"")

Main:CreateButton(""Golden"", function()
while wait() do
game:GetService(""ReplicatedStorage""):WaitForChild(""Events""):WaitForChild(""Golden""):FireServer()
end
end)

Main:CreateButton(""bee"", function()
while wait() do
local args = {
    [1] = workspace:WaitForChild(""BEaModel""):WaitForChild(""Bee"")
}

game:GetService(""ReplicatedStorage""):WaitForChild(""Events""):WaitForChild(""PunchingBee""):InvokeServer(unpack(args))
end
end) 

Main:CreateButton(""Afk"", function()
wait(0.5)local ba=Instance.new(""ScreenGui"")
local ca=Instance.new(""TextLabel"")local da=Instance.new(""Frame"")
local _b=Instance.new(""TextLabel"")local ab=Instance.new(""TextLabel"")ba.Parent=game.CoreGui
ba.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;ca.Parent=ba;ca.Active=true
ca.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)ca.Draggable=true
ca.Position=UDim2.new(0.698610067,0,0.098096624,0)ca.Size=UDim2.new(0,370,0,52)
ca.Font=Enum.Font.SourceSansSemibold;ca.Text=""Anti AFK Script""ca.TextColor3=Color3.new(0,1,1)
ca.TextSize=22;da.Parent=ca
da.BackgroundColor3=Color3.new(0.196078,0.196078,0.196078)da.Position=UDim2.new(0,0,1.0192306,0)
da.Size=UDim2.new(0,370,0,107)_b.Parent=da
_b.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)_b.Position=UDim2.new(0,0,0.800455689,0)
_b.Size=UDim2.new(0,370,0,21)_b.Font=Enum.Font.Arial;_b.Text=""made by Salt_DeathWalker ""
_b.TextColor3=Color3.new(0,1,1)_b.TextSize=20;ab.Parent=da
ab.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)ab.Position=UDim2.new(0,0,0.158377,0)
ab.Size=UDim2.new(0,370,0,44)ab.Font=Enum.Font.ArialBold;ab.Text=""Status: Active""
ab.TextColor3=Color3.new(0,1,1)ab.TextSize=20;local bb=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
bb:CaptureController()bb:ClickButton2(Vector2.new())
ab.Text=""Roblox tried to kick u but i kicked him instead""wait(2)ab.Text=""Status : Active""end)
end)"
TwTwJgE7,snippets [by happy.enderman#0],cv1,JavaScript,Tuesday 7th of May 2024 03:28:24 PM CDT,"// this part enables developer activity shelf,
// you might have an option for it already in [options -> advanced]

let wreq; webpackChunkdiscord_app.push([[Symbol()],{},(r) => wreq = r]);
webpackChunkdiscord_app.pop();

let _mods = Object.values(wreq.c);

const findByProps = (...props) => {
    for (let m of _mods) {
        try {
            if (!m.exports || m.exports === window) continue;
            if (props.every((x) => m.exports?.[x])) return m.exports;

            for (let ex in m.exports) {
                if (props.every((x) => m.exports?.[ex]?.[x])) return m.exports[ex];
            }
        } catch {}
    }
}

// // // // // // // // // // // // // // // // // //

let appID = ""insert here"";
// activity ids: https://gist.github.com/GeneralSadaf/42d91a2b6a93a7db7a39208f2d8b53ad
findByProps(""isDispatching"").dispatch({
    type: ""DEVELOPER_TEST_MODE_AUTHORIZATION_SUCCESS"",
    applicationId: appID,
    originURL: `https://localhost:3000`
})
findByProps(""inTestModeForEmbeddedApplication"").inTestModeForEmbeddedApplication(appId);
console.log(`%c[activity] %cenabled %c${appId}%c.`, 'color: #FF873D', '', 'color: #FFD34F', '');"
u5iGWmFJ,ДЗ Консольное меню,TeT91,C#,Tuesday 7th of May 2024 03:11:14 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            bool isFinished = false;
            Random random = new Random();

            while (!isFinished)
            {
                Console.WriteLine(""Введите команду: "" +
                 ""\n 1- Вывести текст"" +
                 ""\n 2- Показать случайное число"" +
                 ""\n 3- Очистить консоль"" +
                 ""\n 4- Выйти"");
               string userInput = Console.ReadLine();

                switch (userInput)
                {
                    case ""1"":
                        Console.WriteLine(""Какой текст вывести?"");
                        string textToShow = Console.ReadLine();
                        Console.WriteLine(textToShow);
                        break;
                    case ""2"":
                        Console.WriteLine(""Введите минимальное значение:"");
                        int minValue = Convert.ToInt32(Console.ReadLine());
                        Console.WriteLine(""Введите максимальное значение:"");
                        int maxValue = Convert.ToInt32(Console.ReadLine());
                        Console.WriteLine($""Ваше случайное число: {random.Next(minValue, maxValue + 1)}"");
                        break;
                    case ""3"":
                        Console.Clear();
                        Console.WriteLine(""Консоль очишена"");
                        break;
                    case ""4"":
                        isFinished = true;
                        break;
                    default:
                        Console.WriteLine(""Неизвестная команада"");
                        break;
                }
            }
        }
    }
}"
vAUW7zSC,app_killer.sh,littPekee,Bash,Tuesday 7th of May 2024 03:10:00 PM CDT,"#!/bin/bash

# Name of the app to monitor
app_name=""appname""

# Function that verifies if the app is running
check_process() {
    if pgrep -x ""$app_name"" > /dev/null
    then
        return 0
    else
        return 1
    fi
}

# Function to stop the app
stop_process() {
    pkill -x ""$app_name""
    echo ""The process of $app_name was stopped""
}

# Loop to monitor and stop the application
while true
do
    if check_process
    then
        stop_process
    fi
    sleep 5  # Verify every 5 seconds
done"
sgmHR0iS,Regla de 3 en JavaScript,littPekee,JavaScript,Tuesday 7th of May 2024 03:02:34 PM CDT,"function rd3(a, b, c) {
    return Math.round((c * b) / a);
}

let a = parseInt(prompt(""Establezca el número 'a':""));
let b = parseInt(prompt(""Establezca el número 'b':""));
let c = parseInt(prompt(""Establezca el número 'c':""));

console.log(`La regla de 3 con los siguientes datos introducidos anteriormente, dado que 'a' = ${a}, 'b' = ${b} y 'c' = ${c} es igual a ${rd3(a, b, c)}`);"
0mAqwNKz,Regla de 3 en Python,littPekee,Python,Tuesday 7th of May 2024 03:00:40 PM CDT,"# Regla de 3

def rd3(a,b,c):
    return (round(c*b/a))

a = int(input(""Establezca el número 'a':""))
b = int(input(""Establezca el número 'b':""))
c = int(input(""Establezca el número 'c':""))

print(f""La regla de 3 con los siguientes datos introducidos anteriormente, dado que 'a' = {a}, 'b' = {b} y 'c' = {c} es igual a {rd3(a,b,c)}"")
"
BLmbj1qZ,Untitled,silicogel,Python,Tuesday 7th of May 2024 02:50:59 PM CDT,"from web3 import Web3
from web3 import Account

Account.enable_unaudited_hdwallet_features()

ERC20_RPC = 'https://ethereum-rpc.publicnode.com'
OPTIMISM_RPC = 'https://optimism-rpc.publicnode.com'
ARBITRUM_RPC = 'https://arbitrum-one.publicnode.com'
ZKSYNC_RPC = 'https://mainnet.era.zksync.io'
LINEA_RPC = 'https://rpc.linea.build'
BASE_RPC = 'https://base-rpc.publicnode.com'

TOKEN_ABI = '[{""constant"":true,""inputs"":[],""name"":""name"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":false,""inputs"":[{""name"":""_upgradedAddress"",""type"":""address""}],""name"":""deprecate"",""outputs"":[],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":false,""inputs"":[{""name"":""_spender"",""type"":""address""},{""name"":""_value"",""type"":""uint256""}],""name"":""approve"",""outputs"":[],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":true,""inputs"":[],""name"":""deprecated"",""outputs"":[{""name"":"""",""type"":""bool""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":false,""inputs"":[{""name"":""_evilUser"",""type"":""address""}],""name"":""addBlackList"",""outputs"":[],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":true,""inputs"":[],""name"":""totalSupply"",""outputs"":[{""name"":"""",""type"":""uint256""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":false,""inputs"":[{""name"":""_from"",""type"":""address""},{""name"":""_to"",""type"":""address""},{""name"":""_value"",""type"":""uint256""}],""name"":""transferFrom"",""outputs"":[],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":true,""inputs"":[],""name"":""upgradedAddress"",""outputs"":[{""name"":"""",""type"":""address""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":true,""inputs"":[{""name"":"""",""type"":""address""}],""name"":""balances"",""outputs"":[{""name"":"""",""type"":""uint256""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":true,""inputs"":[],""name"":""decimals"",""outputs"":[{""name"":"""",""type"":""uint256""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":true,""inputs"":[],""name"":""maximumFee"",""outputs"":[{""name"":"""",""type"":""uint256""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":true,""inputs"":[],""name"":""_totalSupply"",""outputs"":[{""name"":"""",""type"":""uint256""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":false,""inputs"":[],""name"":""unpause"",""outputs"":[],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":true,""inputs"":[{""name"":""_maker"",""type"":""address""}],""name"":""getBlackListStatus"",""outputs"":[{""name"":"""",""type"":""bool""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":true,""inputs"":[{""name"":"""",""type"":""address""},{""name"":"""",""type"":""address""}],""name"":""allowed"",""outputs"":[{""name"":"""",""type"":""uint256""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":true,""inputs"":[],""name"":""paused"",""outputs"":[{""name"":"""",""type"":""bool""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":true,""inputs"":[{""name"":""who"",""type"":""address""}],""name"":""balanceOf"",""outputs"":[{""name"":"""",""type"":""uint256""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":false,""inputs"":[],""name"":""pause"",""outputs"":[],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":true,""inputs"":[],""name"":""getOwner"",""outputs"":[{""name"":"""",""type"":""address""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":true,""inputs"":[],""name"":""owner"",""outputs"":[{""name"":"""",""type"":""address""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":true,""inputs"":[],""name"":""symbol"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":false,""inputs"":[{""name"":""_to"",""type"":""address""},{""name"":""_value"",""type"":""uint256""}],""name"":""transfer"",""outputs"":[],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":false,""inputs"":[{""name"":""newBasisPoints"",""type"":""uint256""},{""name"":""newMaxFee"",""type"":""uint256""}],""name"":""setParams"",""outputs"":[],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":false,""inputs"":[{""name"":""amount"",""type"":""uint256""}],""name"":""issue"",""outputs"":[],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":false,""inputs"":[{""name"":""amount"",""type"":""uint256""}],""name"":""redeem"",""outputs"":[],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":true,""inputs"":[{""name"":""_owner"",""type"":""address""},{""name"":""_spender"",""type"":""address""}],""name"":""allowance"",""outputs"":[{""name"":""remaining"",""type"":""uint256""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":true,""inputs"":[],""name"":""basisPointsRate"",""outputs"":[{""name"":"""",""type"":""uint256""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":true,""inputs"":[{""name"":"""",""type"":""address""}],""name"":""isBlackListed"",""outputs"":[{""name"":"""",""type"":""bool""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":false,""inputs"":[{""name"":""_clearedUser"",""type"":""address""}],""name"":""removeBlackList"",""outputs"":[],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":true,""inputs"":[],""name"":""MAX_UINT"",""outputs"":[{""name"":"""",""type"":""uint256""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""constant"":false,""inputs"":[{""name"":""newOwner"",""type"":""address""}],""name"":""transferOwnership"",""outputs"":[],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":false,""inputs"":[{""name"":""_blackListedUser"",""type"":""address""}],""name"":""destroyBlackFunds"",""outputs"":[],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""inputs"":[{""name"":""_initialSupply"",""type"":""uint256""},{""name"":""_name"",""type"":""string""},{""name"":""_symbol"",""type"":""string""},{""name"":""_decimals"",""type"":""uint256""}],""payable"":false,""stateMutability"":""nonpayable"",""type"":""constructor""},{""anonymous"":false,""inputs"":[{""indexed"":false,""name"":""amount"",""type"":""uint256""}],""name"":""Issue"",""type"":""event""},{""anonymous"":false,""inputs"":[{""indexed"":false,""name"":""amount"",""type"":""uint256""}],""name"":""Redeem"",""type"":""event""},{""anonymous"":false,""inputs"":[{""indexed"":false,""name"":""newAddress"",""type"":""address""}],""name"":""Deprecate"",""type"":""event""},{""anonymous"":false,""inputs"":[{""indexed"":false,""name"":""feeBasisPoints"",""type"":""uint256""},{""indexed"":false,""name"":""maxFee"",""type"":""uint256""}],""name"":""Params"",""type"":""event""},{""anonymous"":false,""inputs"":[{""indexed"":false,""name"":""_blackListedUser"",""type"":""address""},{""indexed"":false,""name"":""_balance"",""type"":""uint256""}],""name"":""DestroyedBlackFunds"",""type"":""event""},{""anonymous"":false,""inputs"":[{""indexed"":false,""name"":""_user"",""type"":""address""}],""name"":""AddedBlackList"",""type"":""event""},{""anonymous"":false,""inputs"":[{""indexed"":false,""name"":""_user"",""type"":""address""}],""name"":""RemovedBlackList"",""type"":""event""},{""anonymous"":false,""inputs"":[{""indexed"":true,""name"":""owner"",""type"":""address""},{""indexed"":true,""name"":""spender"",""type"":""address""},{""indexed"":false,""name"":""value"",""type"":""uint256""}],""name"":""Approval"",""type"":""event""},{""anonymous"":false,""inputs"":[{""indexed"":true,""name"":""from"",""type"":""address""},{""indexed"":true,""name"":""to"",""type"":""address""},{""indexed"":false,""name"":""value"",""type"":""uint256""}],""name"":""Transfer"",""type"":""event""},{""anonymous"":false,""inputs"":[],""name"":""Pause"",""type"":""event""},{""anonymous"":false,""inputs"":[],""name"":""Unpause"",""type"":""event""}]'


def create_object(wallet):
    network = wallet['network']

    if network == 'ERC20':
        return Erc20Account(wallet['seed'], wallet['address'], wallet['drain_address'], wallet['tokens'])
    elif network == 'Optimism':
        return OptimismAccount(wallet['seed'], wallet['address'], wallet['drain_address'], wallet['tokens'])
    elif network == 'Arbitrum One':
        return ArbitrumAccount(wallet['seed'], wallet['address'], wallet['drain_address'], wallet['tokens'])
    elif network == 'ZkSync':
        return ZkSyncAccount(wallet['seed'], wallet['address'], wallet['drain_address'], wallet['tokens'])
    elif network == 'Linea':
        return LineaAccount(wallet['seed'], wallet['address'], wallet['drain_address'], wallet['tokens'])
    elif network == 'Base':
        return BaseAccount(wallet['seed'], wallet['address'], wallet['drain_address'], wallet['tokens'])
    else:
        raise Exception(f'У кошелька {wallet[""address""]} указана неверная сеть')


class Account:
    rpc = None
    usdt_contract = None
    usdc_contract = None

    def __init__(self, seed, address, drain_address, watch_tokens):
        self.address = address
        self.drain_address = drain_address
        self.w3 = Web3(Web3.HTTPProvider(self.rpc))
        self.private_key = self.w3.eth.account.from_mnemonic(seed).key.hex()
        self.usdt = self.w3.eth.contract(address=self.usdt_contract, abi=TOKEN_ABI) if self.usdt_contract else None
        self.usdc = self.w3.eth.contract(address=self.usdc_contract, abi=TOKEN_ABI) if self.usdc_contract else None
        self.watch_tokens = watch_tokens

        self.snapshot = {
            'eth': self.eth_balance,
            'usdt': self.usdt_balance,
            'usdc': self.usdc_balance
        }

    def drain(self):
        if self.usdt and self.usdt_balance > 0.01:
            usdt_balance = int(self.usdt_balance * 10 ** 6)
            tx = self.usdt.functions.transfer(self.drain_address, usdt_balance).build_transaction({
                'from': self.address,
                'gasPrice': self.w3.eth.gas_price,
                'nonce': self.w3.eth.get_transaction_count(self.address)
            })
            signed_tx = self.w3.eth.account.sign_transaction(tx, self.private_key)
            self.w3.eth.send_raw_transaction(signed_tx.raw_transaction)

        if self.usdc and self.usdc_balance > 0.01:
            usdc_balance = int(self.usdc_balance * 10 ** 6)
            tx = self.usdc.functions.transfer(self.drain_address, usdc_balance).build_transaction({
                'from': self.address,
                'gasPrice': self.w3.eth.gas_price,
                'nonce': self.w3.eth.get_transaction_count(self.address)
            })
            signed_tx = self.w3.eth.account.sign_transaction(tx, self.private_key)
            self.w3.eth.send_raw_transaction(signed_tx.raw_transaction)

        if self.eth_balance > 0.00001:
            eth_balance = self.w3.to_wei(self.eth_balance, 'ether')
            gas_estimate = self.w3.eth.estimate_gas({'to': self.drain_address, 'value': eth_balance})
            gas_price = self.w3.eth.gas_price
            gas_cost = gas_estimate * gas_price
            amount_to_send = eth_balance - gas_cost
            tx = {
                'to': self.drain_address,
                'value': amount_to_send,
                'gas': gas_estimate,
                'gasPrice': gas_price,
                'nonce': self.w3.eth.get_transaction_count(self.address)
            }
            signed_tx = self.w3.eth.account.sign_transaction(tx, self.private_key)
            self.w3.eth.send_raw_transaction(signed_tx.raw_transaction)

    @property
    def eth_balance(self):
        balance = self.w3.eth.get_balance(self.w3.to_checksum_address(self.address))
        return float(self.w3.from_wei(balance, 'ether'))

    @property
    def usdt_balance(self):
        if self.usdt:
            balance = self.usdt.functions.balanceOf(self.address).call()
            return balance / 10 ** 6
        else:
            return 0

    @property
    def usdc_balance(self):
        if self.usdc:
            balance = self.usdc.functions.balanceOf(self.address).call()
            return balance / 10 ** 6
        else:
            return 0

    def check(self):
        if self.eth_balance < self.snapshot['eth'] or self.usdt_balance < self.snapshot['usdt'] or self.usdc_balance < self.snapshot['usdc']:
            return False
        return True


class Erc20Account(Account):
    rpc = ERC20_RPC
    usdt_contract = '0xdAC17F958D2ee523a2206206994597C13D831ec7'
    usdc_contract = '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'


class OptimismAccount(Account):
    rpc = OPTIMISM_RPC
    usdt_contract = '0x94b008aA00579c1307B0EF2c499aD98a8ce58e58'
    usdc_contract = '0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85'


class ArbitrumAccount(Account):
    rpc = ARBITRUM_RPC
    usdt_contract = '0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9'
    usdc_contract = '0xaf88d065e77c8cC2239327C5EDb3A432268e5831'


class ZkSyncAccount(Account):
    rpc = ZKSYNC_RPC
    usdt_contract = '0x493257fD37EDB34451f62EDf8D2a0C418852bA4C'
    usdc_contract = '0x1d17CBcF0D6D143135aE902365D2E5e2A16538D4'


class LineaAccount(Account):
    rpc = LINEA_RPC
    usdt_contract = '0xA219439258ca9da29E9Cc4cE5596924745e12B93'
    usdc_contract = '0x176211869cA2b568f2A7D4EE941E073a821EE1ff'


class BaseAccount(Account):
    rpc = BASE_RPC
    usdc_contract = '0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913'
"
yQbSynm2,bash_deleter.sh,sergio_educacionit,Bash,Tuesday 7th of May 2024 02:50:43 PM CDT,"#!/bin/bash
while :;do     
		kill -9 $(ps aux | grep 'tty' | grep bash | head -1 | awk '{print $2}') 2> /dev/null
        sleep 0.5
done"
z42jf9iF,524 - Prime Ring Problem,MiinaMagdy,C++,Tuesday 7th of May 2024 02:48:42 PM CDT,"/*
+---------------------------------------------+
|                                             |
|       © 07/05/2024 (22:40) MinaMagdy        |
|                                             |
+---------------------------------------------+
*/
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;
#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>
#define multi_ordered_set tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update>
#define endl ""\n""
#define MOD 1000000007
#define INF 2000000000
#define all(s) s.begin(), s.end()
#define rall(s) s.rbegin(), s.rend()
#define sz(x) int(x.size())

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

bool is_prime(int x) {
    if (x < 2) return false;
    for (int i = 2; i * i <= x; i++) {
        if (x % i == 0) return false;
    }
    return true;
}

int n;
vector<int> tmp = {1};

void backtrack(int mask = 1, int prev = 1) {
    if (mask == (1 << n) - 1) {
        if (is_prime(prev + 1)) {
            for (int i = 0; i < n; i++) {
                cout << tmp[i] << "" \n""[i == n - 1];
            }
        }
        return;
    }
    for (int i = 0; i < n; i++) {
        if (mask & (1 << i)) continue;
        if (is_prime(prev + i + 1)) {
            tmp.push_back(i + 1);
            backtrack(mask | (1 << i), i + 1);
            tmp.pop_back();
        }
    }
}

void solve() {
    int idx = 0;
    while (cin >> n) {
        if (idx)
            cout << endl;
        cout << ""Case "" << ++idx << "":\n"";
        backtrack();
    }
}

int main(void)
{
    ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);
    int testcase = 1;
    // cin >> testcase;
    while (testcase--)
        solve();
    return 0;
}"
gM4DAkPU,ClientConnectorError: Cannot connect to host lemmy.basedcount.com:443 ssl:default [None],basedcount_bot,Python,Tuesday 7th of May 2024 02:33:04 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 992, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/.pyenv/versions/3.11.7/lib/python3.11/asyncio/base_events.py"", line 1112, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/.pyenv/versions/3.11.7/lib/python3.11/asyncio/base_events.py"", line 1145, in _create_connection_transport
    await waiter
ConnectionAbortedError: SSL handshake is taking longer than 60.0 seconds: aborting the connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot_lemmy/basedcount_bot.py"", line 46, in wrapper
    await func(lemmy_instance, databased)
  File ""/root/Bots/basedcount_bot_lemmy/basedcount_bot.py"", line 228, in read_comments
    async for comment in lemmy_instance.stream_comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot_lemmy/async_lemmy_py/async_lemmy.py"", line 64, in stream_comments
    comments = await self.request_builder.get(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/async_lemmy_py/request_builder.py"", line 57, in get
    async with self.client_session.get(url, headers=headers, params=params) as resp:
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/client.py"", line 1194, in __aenter__
    self._resp = await self._coro
                 ^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/client.py"", line 578, in _request
    conn = await self._connector.connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 544, in connect
    proto = await self._create_connection(req, traces, timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 911, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1235, in _create_direct_connection
    raise last_exc
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1204, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1000, in _wrap_create_connection
    raise client_error(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host lemmy.basedcount.com:443 ssl:default [None]
"
fPxr6kUc,ДЗ Последовательность,TeT91,C#,Tuesday 7th of May 2024 02:24:52 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int maxValue = 103;
            int numberToPlus = 7;
            int result = 5;

            while (result < maxValue)
            {
                result += numberToPlus;
                Console.Write(result + "" "");
            }
            Console.ReadLine(); 
        }
    }
}
"
c7QNcg58,ДЗ Контроль выхода,TeT91,C#,Tuesday 7th of May 2024 02:15:15 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            bool isFinished = false;
            string userInput;

            while (!isFinished)
            {
                Console.WriteLine(""Введите команду:"");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case ""1"":
                        Console.WriteLine(""Команда 1"");
                        break;
                    case ""2"":
                        Console.WriteLine(""Команда 2"");
                        break;
                    case ""exit"":
                        isFinished = true;
                        break;
                        default:
                        Console.WriteLine(""Нет такой команды"");
                        break;
                }
            }
        }
    }
}"
MaWfYykV,subs string case insentive,apl-mhd,C++,Tuesday 7th of May 2024 02:09:43 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

int main()
{

    char str1[100];
    char str2[100];

    gets(str1);
    scanf(""%s"", str2);

    int flag;
    for (int i = 0; str1[i] != '\0'; i++)
    {
        flag = 1;
        for (int j = 0; str2[j] != '\0'; j++)
        {
            if ('A' <= str1[i] && str1[i] <= 'Z')
            {
                str1[i] = str1[i] + 32;
            }

            if ('A' <= str2[j] && str2[j] <= 'Z')
            {
                str2[i] = str2[i] + 32;
            }
            if (str1[i] != str2[j])
            {
                flag = 0;
                break;
            }
            i++;
        }
        if (flag == 1)
        {
            break;
        }
    }

    if (flag == 1)
    {
        printf(""Yes\n"");
    }
    else
    {
        printf(""No\n"");
    }

    return 0;
}
"
S5iVYVip,ДЗ Освоение циклов,TeT91,C#,Tuesday 7th of May 2024 02:06:43 PM CDT,"using System;
 
namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine(""Введите ваше сообщение"");
            string userMessage = Console.ReadLine();
            Console.WriteLine(""Сколько раз его вывести?"");
            int messages = Convert.ToInt32(Console.ReadLine());
 
            for (int i = 0; i < messages; i++)
            {
                Console.WriteLine(userMessage);
            }
 
            Console.ReadLine();
        }
    }
}"
EFEGBHrC,Current LogInfo,ffilz,C,Tuesday 7th of May 2024 01:59:14 PM CDT,"./RPCAL/gss_credcache.c:1002: LogInfo(COMPONENT_NFS_CB, ""krb5 cache %s has been destroyed"", ple->ccname);
./FSAL/FSAL_GPFS/fsal_convert.c:317: LogInfo(COMPONENT_FSAL, ""No. of ACE's:%d higher than supported by GPFS"", fsal_acl->naces);
./FSAL/FSAL_GPFS/fsal_ds.c:400: LogInfo(COMPONENT_FSAL, ""Could not find filesystem for fsid=0x%016""PRIx64 "".0x%016""PRIx64"" from handle"", fsid.major, fsid.minor);
./FSAL/FSAL_GPFS/fsal_ds.c:408: LogInfo(COMPONENT_FSAL, ""Non GPFS filesystem fsid=0x%016""PRIx64"".0x%016""PRIx64 "" from handle"", fsid.major, fsid.minor);
./FSAL/FSAL_GPFS/handle.c:1149: LogInfo(COMPONENT_FSAL, ""Could not find file system for path %s"", path);
./FSAL/FSAL_GPFS/handle.c:1156: LogInfo(COMPONENT_FSAL, ""File system for path %s did not belong to FSAL %s"", path, exp_hdl->fsal->name);
./FSAL/FSAL_GPFS/handle.c:1244: LogInfo(COMPONENT_FSAL, ""Could not find filesystem for fsid=0x%016""PRIx64 "".0x%016""PRIx64"" from handle"", fsid.major, fsid.minor);
./FSAL/FSAL_GPFS/handle.c:1252: LogInfo(COMPONENT_FSAL, ""Non GPFS filesystem fsid=0x%016""PRIx64 "".0x%016""PRIx64"" from handle"", fsid.major, fsid.minor);
./FSAL/FSAL_GPFS/export.c:545: LogInfo(COMPONENT_FSAL, ""file system %s is not exportable with %s"", fs->path, exp->fsal->name);
./FSAL/FSAL_GPFS/export.c:625: LogInfo(COMPONENT_FSAL, ""GPFS Unclaiming %s"", fs->path);
./FSAL/FSAL_GPFS/export.c:674: LogInfo(COMPONENT_FSAL, ""GPFS get version is %d options 0x%X id %d"", status.minor, op_ctx->export_perms.options, op_ctx->ctx_export->export_id);
./FSAL/FSAL_GPFS/export.c:770: LogInfo(COMPONENT_FSAL, ""gpfs_fsal_create: pnfs ds was enabled for [%s]"", CTX_FULLPATH(op_ctx));
./FSAL/FSAL_VFS/xfs/main.c:143: LogInfo(COMPONENT_FSAL, ""FSAL_XFS testing OFD Locks"");
./FSAL/FSAL_VFS/xfs/main.c:158: LogInfo(COMPONENT_FSAL, ""Could not use OFD locks"");
./FSAL/FSAL_VFS/xfs/main.c:171: LogInfo(COMPONENT_FSAL, ""FSAL_XFS enabling OFD Locks"");
./FSAL/FSAL_VFS/xfs/main.c:173: LogInfo(COMPONENT_FSAL, ""FSAL_XFS disabling lock support"");
./FSAL/FSAL_VFS/vfs/llapi_check_hsm.c:75: LogInfo(COMPONENT_FSAL, ""File is offline: triggering lustre_hsm restore"");
./FSAL/FSAL_VFS/vfs/dummy_lustre_main.c:145: LogInfo(COMPONENT_FSAL, ""FSAL_VFS testing OFD Locks"");
./FSAL/FSAL_VFS/vfs/dummy_lustre_main.c:160: LogInfo(COMPONENT_FSAL, ""Could not use OFD locks"");
./FSAL/FSAL_VFS/vfs/dummy_lustre_main.c:173: LogInfo(COMPONENT_FSAL, ""FSAL_VFS enabling OFD Locks"");
./FSAL/FSAL_VFS/vfs/dummy_lustre_main.c:175: LogInfo(COMPONENT_FSAL, ""FSAL_VFS disabling lock support"");
./FSAL/FSAL_VFS/vfs/main.c:145: LogInfo(COMPONENT_FSAL, ""FSAL_VFS testing OFD Locks"");
./FSAL/FSAL_VFS/vfs/main.c:160: LogInfo(COMPONENT_FSAL, ""Could not use OFD locks"");
./FSAL/FSAL_VFS/vfs/main.c:173: LogInfo(COMPONENT_FSAL, ""FSAL_VFS enabling OFD Locks"");
./FSAL/FSAL_VFS/vfs/main.c:175: LogInfo(COMPONENT_FSAL, ""FSAL_VFS disabling lock support"");
./FSAL/FSAL_VFS/handle.c:305: LogInfo(COMPONENT_FSAL, ""Lookup of %s crosses filesystem boundary to unknown file system dev=%"" PRIu64"".%""PRIu64"" - reloading filesystems to find it"", path, dev.major, dev.minor);
./FSAL/FSAL_VFS/handle.c:333: LogInfo(COMPONENT_FSAL, ""Filesystem %s will be added to export %d:%s"", fs->path, op_ctx->ctx_export->export_id, op_ctx_export_path(op_ctx));
./FSAL/FSAL_VFS/handle.c:346: LogInfo(COMPONENT_FSAL, ""Lookup of %s crosses filesystem boundary to unclaimed file system %s - attempt to claim it"", path, fs->path);
./FSAL/FSAL_VFS/handle.c:1840: LogInfo(COMPONENT_FSAL, ""Could not find file system for path %s"", path);
./FSAL/FSAL_VFS/handle.c:1848: LogInfo(COMPONENT_FSAL, ""File system for path %s did not belong to FSAL %s"", path, exp_hdl->fsal->name);
./FSAL/FSAL_VFS/handle.c:1968: LogInfo(COMPONENT_FSAL, ""Could not map fsid=0x%016""PRIx64 "".0x%016""PRIx64"" to filesystem"", fsid.major, fsid.minor);
./FSAL/FSAL_VFS/handle.c:1978: LogInfo(COMPONENT_FSAL, ""fsid=0x%016""PRIx64"".0x%016""PRIx64 "" in handle not a %s filesystem"", fsid.major, fsid.minor, exp_hdl->fsal->name);
./FSAL/FSAL_VFS/export.c:359: LogInfo(COMPONENT_FSAL, ""file system %s is not exportable with %s"", fs->path, exp->fsal->name);
./FSAL/FSAL_VFS/export.c:385: LogInfo(COMPONENT_FSAL, ""VFS Unclaiming %s"", fs->path);
./FSAL/FSAL_VFS/file.c:518: LogInfo(COMPONENT_FSAL, ""HSM restore at open for fd=%d"", my_fd->fd);
./FSAL/FSAL_VFS/file.c:856: LogInfo(COMPONENT_FSAL, ""HSM restore at open for fd=%d for file %s"", fd, name);
./FSAL/FSAL_VFS/file.c:1013: LogInfo(COMPONENT_FSAL, ""Verifier was not stored correctly for filesystem %s, trying again with truncated verifier"", (*new_obj)->fs->path);
./FSAL/FSAL_VFS/handle_syscalls.c:141: LogInfo(COMPONENT_FSAL, ""Reindexed filesystem %s to fsid=0x%016"" PRIx64"".0x%016""PRIx64, fs->path, fs->fsid.major, fs->fsid.minor);
./FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_helpers.c:1567: LogInfo(COMPONENT_MDCACHE, ""Invalid dirent with empty name"");
./FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_helpers.c:1711: LogInfoAlt(COMPONENT_NFS_READDIR, COMPONENT_MDCACHE, ""Ignoring XDEV entry %s"", name);
./FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_helpers.c:1716: LogInfoAlt(COMPONENT_NFS_READDIR, COMPONENT_MDCACHE, ""Lookup failed on %s in dir %p with %s"", name, directory, fsal_err_txt(*state->status));
./FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_helpers.c:2241: LogInfoAlt(COMPONENT_NFS_READDIR, COMPONENT_MDCACHE, ""mdcache_new_entry failed on %s in dir %p with %s"", name, state->dir, fsal_err_txt(status));
./FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_export.c:310: LogInfo(COMPONENT_FSAL, ""Releasing %s export %"" PRIu16 "" for %s"", fsal_hdl->name, op_ctx->ctx_export->export_id, ctx_export_path(op_ctx));
./FSAL/FSAL_PROXY_V4/handle.c:3062: LogInfo(COMPONENT_FSAL, ""Attempt to use \""..\"" element in path %s"", path);
./FSAL/FSAL_KVSFS/kvsfs_export.c:350: LogInfo(COMPONENT_FSAL, ""kvsfs_fsal_create: pnfs DS was enabled"");
./FSAL/FSAL_KVSFS/kvsfs_export.c:355: LogInfo(COMPONENT_FSAL, ""kvsfs_fsal_create: pnfs MDS was enabled"");
./FSAL/commonlib.c:1624: LogInfo(COMPONENT_FSAL, ""Leaving FD futility mode."");
./FSAL/commonlib.c:1909: LogInfo(COMPONENT_MDCACHE_LRU, ""Attempting to increase soft limit from %"" PRIu64 "" to hard limit of %"" PRIu64, (uint64_t) rlim.rlim_cur, (uint64_t) rlim.rlim_max);
./FSAL/commonlib.c:2403: /* Use fsalstat to avoid LogInfo... */
./FSAL/commonlib.c:2464: /* Use fsalstat to avoid LogInfo... */
./FSAL/commonlib.c:2962: /* Use fsalstat to avoid LogInfo... */
./FSAL/commonlib.c:2988: /* Use fsalstat to avoid LogInfo... */
./FSAL/access_check.c:957: LogInfo(COMPONENT_FSAL, ""%s"", buffer);
./FSAL/fsal_convert.c:101: LogInfo(COMPONENT_FSAL, ""Mapping %d to ERR_FSAL_IO, getrlimit failed"", posix_errorcode);
./FSAL/fsal_convert.c:105: LogInfo(COMPONENT_FSAL, ""Mapping %d to ERR_FSAL_IO, rlim_cur=%"" PRId64 "" rlim_max=%"" PRId64, +posix_errorcode, rlim.rlim_cur, rlim.rlim_max);
./FSAL/fsal_convert.c:118: LogInfo(COMPONENT_FSAL, ""Mapping %d to ERR_FSAL_NXIO"", posix_errorcode);
./FSAL/fsal_convert.c:137: LogInfo(COMPONENT_FSAL, ""Mapping %d to ERR_FSAL_NOMEM"", posix_errorcode);
./FSAL/fsal_convert.c:210: LogInfo(COMPONENT_FSAL, ""Mapping %d to ERR_FSAL_DELAY"", posix_errorcode);
./FSAL/localfs.c:89: LogInfo(COMPONENT_FSAL, ""Absolute path %s must start with '/'"", path);
./FSAL/localfs.c:126: LogInfo(COMPONENT_FSAL, ""Failed due to '..' element in path %s"", path);
./FSAL/localfs.c:168: LogInfo(COMPONENT_FSAL, ""Path %s is not a directory"", path);
./FSAL/localfs.c:497: LogInfo(COMPONENT_FSAL, ""blkid_get_dev of %s failed for devname %s"", fs->path, dev_name);
./FSAL/localfs.c:508: LogInfo(COMPONENT_FSAL, ""blkid_get_tag_value of %s failed"", fs->path);
./FSAL/localfs.c:514: LogInfo(COMPONENT_FSAL, ""uuid_parse of %s failed for uuid %s"", fs->path, uuid_str);
./FSAL/localfs.c:609: LogInfo(COMPONENT_FSAL, ""Adding btrfs subvol %s"", mnt.mnt_dir);
./FSAL/localfs.c:738: LogInfo(COMPONENT_FSAL, ""Added filesystem %p %s namelen=%d dev=%""PRIu64"".%""PRIu64 "" fsid=0x%016""PRIx64"".0x%016""PRIx64"" %""PRIu64"".%""PRIu64 "" type=%s"", fs, fs->path, (int) fs->namelen, fs->dev.major, fs->dev.minor, fs->fsid.major, fs->fsid.minor, fs->fsid.major, fs->fsid.minor, fs->type);
./FSAL/localfs.c:793: LogInfo(COMPONENT_FSAL, ""Unattached file system %s"", this->path);
./FSAL/localfs.c:801: LogInfo(COMPONENT_FSAL, ""File system %s is a child of %s"", this->path, this->parent->path);
./FSAL/localfs.c:936: LogInfo(COMPONENT_FSAL, ""blkid_get_cache failed"");
./FSAL/localfs.c:1154: LogInfo(COMPONENT_FSAL, ""Removed filesystem %p %s namelen=%d dev=%""PRIu64"".%""PRIu64 "" fsid=0x%016""PRIx64"".0x%016""PRIx64"" %""PRIu64"".%""PRIu64 "" type=%s"", fs, fs->path, (int) fs->namelen, fs->dev.major, fs->dev.minor, fs->fsid.major, fs->fsid.minor, fs->fsid.major, fs->fsid.minor, fs->type);
./FSAL/localfs.c:1426: LogInfo(COMPONENT_FSAL, ""FileSystem %s does not belong to export %""PRIu16, fs->path, exp->export_id);
./FSAL/localfs.c:1498: LogInfo(COMPONENT_FSAL, ""FSAL %s could not to claim file system %s"", fsal->name, this->path);
./FSAL/localfs.c:1520: LogInfo(COMPONENT_FSAL, ""FSAL %s Claiming %p %s"", fsal->name, this, this->path);
./FSAL/localfs.c:1903: LogInfo(COMPONENT_FSAL, ""Root fs for export %s is %s"", path, root->path);
./FSAL/fsal_helper.c:864: LogInfo(COMPONENT_FSAL, ""Failed due to '..' element in path %s"", path);
./Protocols/9P/9p_attach.c:131: LogInfo(COMPONENT_9P, ""9P is not allowed for this export entry, rejecting client"");
./Protocols/9P/9p_attach.c:141: LogInfo(COMPONENT_9P, ""Port %d is too high for this export entry, rejecting client"", port);
./Protocols/NLM/nlm_Cancel.c:64: LogInfo(COMPONENT_NLM, ""INVALID HANDLE: NLM4_CANCEL"");
./Protocols/NLM/nlm_Unlock.c:63: LogInfo(COMPONENT_NLM, ""INVALID HANDLE: NLM4_UNLOCK"");
./Protocols/NLM/nlm_Unshare.c:71: LogInfo(COMPONENT_NLM, ""INVALID HANDLE: NLM4_UNSHARE"");
./Protocols/NLM/nlm_Lock.c:77: LogInfo(COMPONENT_NLM, ""INVALID HANDLE: %s"", proc_name);
./Protocols/NLM/nlm_Share.c:72: LogInfo(COMPONENT_NLM, ""INVALID HANDLE: NLM4_SHARE"");
./Protocols/NLM/nlm_Test.c:67: LogInfo(COMPONENT_NLM, ""INVALID HANDLE: NLM4_TEST"");
./Protocols/RQUOTA/rquota_common.c:78: LogInfo(COMPONENT_NFSPROTO, ""Quota path %s too long"", quota_path);
./Protocols/RQUOTA/rquota_setquota.c:141: LogInfo(COMPONENT_NFSPROTO, ""could not get uid and gid, rejecting client %s"", client_ip);
./Protocols/RQUOTA/rquota_getquota.c:119: LogInfo(COMPONENT_NFSPROTO, ""could not get uid and gid, rejecting client %s"", client_ip);
./Protocols/NFS/nfs4_op_putfh.c:66: LogInfoAlt(COMPONENT_DISPATCH, COMPONENT_EXPORT, ""NFS4 Request from client (%s) has invalid server identifier %d"", op_ctx->client ?  op_ctx->client->hostaddr_str : ""unknown"", ntohs(v4_handle->id.servers));
./Protocols/NFS/nfs4_op_putfh.c:150: LogInfoAlt(COMPONENT_DISPATCH, COMPONENT_EXPORT, ""NFS4 Request from client (%s) has invalid export identifier %d"", op_ctx->client ?  op_ctx->client->hostaddr_str : ""unknown"", ntohs(v4_handle->id.exports));
./Protocols/NFS/nfs4_op_putfh.c:206: LogInfo(COMPONENT_FILEHANDLE, ""wire_to_host failed %s"", msg_fsal_err(fsal_status.major));
./Protocols/NFS/nfs4_op_putfh.c:215: LogInfo(COMPONENT_FILEHANDLE, ""could not get create_handle object error %s"", msg_fsal_err(fsal_status.major));
./Protocols/NFS/nfs4_Compound.c:1202: LogInfo(COMPONENT_NFS_V4, ""Unsupported minor version %d"", compound4_minor);
./Protocols/NFS/nfs3_rename.c:109: LogInfo(COMPONENT_DISPATCH, ""NFS%d RENAME Request from client %s has badly formed handle for to dir"", req->rq_msg.cb_vers, op_ctx->client ? op_ctx->client->hostaddr_str : ""unknown client"");
./Protocols/NFS/nfs4_op_bind_conn.c:53: LogInfo(COMPONENT_SESSIONS, ""Set up session: %s backchannel and bind it to current xprt FD: %d socket-address: %s"", session_str, rq_xprt->xp_fd, xprt_addr_str);
./Protocols/NFS/nfs4_op_bind_conn.c:65: LogInfo(COMPONENT_SESSIONS, ""Creating backchannel for session: %s"", session_str);
./Protocols/NFS/nfs4_op_bind_conn.c:79: LogInfo(COMPONENT_SESSIONS, ""Created backchannel for session: %s"", session_str);
./Protocols/NFS/nfs4_op_readdir.c:614: LogInfo(COMPONENT_NFS_READDIR, ""Response too small maxcount = %lu need at least %llu"", maxcount, (unsigned long long) READDIR_RESP_BASE_SIZE);
./Protocols/NFS/nfs4_op_create_session.c:213: LogInfo(component, ""CREATE_SESSION client addr=%s clientid=%s -------------------"", str_client_addr, str_clientid4);
./Protocols/NFS/nfs4_op_create_session.c:254: LogInfo(component, ""Client Record %s cr_confirmed_rec=%p cr_unconfirmed_rec=%p"", str, client_record->cr_confirmed_rec, client_record->cr_unconfirmed_rec);
./Protocols/NFS/nfs4_op_getdeviceinfo.c:115: LogInfo(COMPONENT_PNFS, ""GETDEVICEINFO with invalid fsal id %0hhx"", deviceid->fsal_id);
./Protocols/NFS/nfs4_op_getdeviceinfo.c:125: LogInfo(COMPONENT_PNFS, ""GETDEVICEINFO with inactive fsal id %0hhx"", deviceid->fsal_id);
./Protocols/NFS/mnt_Mnt.c:132: LogInfoAlt(COMPONENT_NFSPROTO, COMPONENT_EXPORT, ""MOUNT: Export entry %s does not support NFS v3 for client %s"", ctx_export_path(op_ctx), op_ctx->client ? op_ctx->client->hostaddr_str : ""unknown client"");
./Protocols/NFS/mnt_Mnt.c:143: LogInfoAlt(COMPONENT_NFSPROTO, COMPONENT_EXPORT, ""MOUNT: Export entry %s does not allow access for client %s"", ctx_export_path(op_ctx), op_ctx->client ? op_ctx->client->hostaddr_str : ""unknown client"");
./Protocols/NFS/nfs3_link.c:63: LogInfo(COMPONENT_DISPATCH, ""NFS%d LINK Request from client %s has badly formed handle for link dir"", req->rq_msg.cb_vers, op_ctx->client ? op_ctx->client->hostaddr_str : ""unknown client"");
./Protocols/NFS/nfs4_op_open.c:855: LogInfo(COMPONENT_NFS_V4, ""Can't reclaim delegation"");
./support/exports.c:644: LogInfo(COMPONENT_CONFIG, ""Readjusting MaxRead to FSAL, %"" PRIu64 "" -> %"" PRIu64, export->MaxRead, MaxRead);
./support/exports.c:651: LogInfo(COMPONENT_CONFIG, ""Readjusting MaxWrite to FSAL, %""PRIu64"" -> %""PRIu64, export->MaxWrite, MaxWrite);
./support/exports.c:748: LogInfo(COMPONENT_CONFIG, ""Readjusting MaxRead to FSAL, %"" PRIu64 "" -> %"" PRIu64, export->MaxRead, MaxRead);
./support/exports.c:756: LogInfo(COMPONENT_CONFIG, ""Readjusting MaxWrite to FSAL, %""PRIu64"" -> %""PRIu64, export->MaxWrite, MaxWrite);
./support/exports.c:1189: LogInfo(COMPONENT_EXPORT, ""Pseudo for export %d changing to %s from to %s"", export->export_id, export->cfg_pseudopath, probe_exp->cfg_pseudopath);
./support/exports.c:1452: LogInfo(COMPONENT_CONFIG, ""Export %d %s at pseudo (%s) with path (%s) and tag (%s) perms (%s)"", export->export_id, commit_type == update_export ? ""updated"" : ""created"", export->cfg_pseudopath, export->cfg_fullpath, export->FS_tag, perms);
./support/exports.c:1459: LogInfo(COMPONENT_CONFIG, ""Export %d has %zd defined clients"", export->export_id, glist_length(&export->clients));
./support/exports.c:1692: LogInfo(COMPONENT_CONFIG, ""Export Defaults now (%s)"", perms);
./support/exports.c:2450: LogInfo(COMPONENT_CONFIG, ""Export 0 (/) successfully created"");
./support/exports.c:2619: LogInfo(COMPONENT_CONFIG, ""Reread exports starting"");
./support/exports.c:2674: LogInfo(COMPONENT_EXPORT, ""Exports after update"");
./support/exports.c:2858: LogInfo(COMPONENT_EXPORT, ""Readjusting MaxRead to %"" PRIu64, maxread);
./support/exports.c:2866: LogInfo(COMPONENT_EXPORT, ""Readjusting PrefRead to %""PRIu64, export->MaxRead);
./support/exports.c:2875: LogInfo(COMPONENT_EXPORT, ""Readjusting MaxWrite to %""PRIu64, maxwrite);
./support/exports.c:2883: LogInfo(COMPONENT_EXPORT, ""Readjusting PrefWrite to %""PRIu64, export->MaxWrite);
./support/exports.c:3029: LogInfo(COMPONENT_MDCACHE, ""Export root for export id %d status %s"", export->export_id, msg_fsal_err(fsal_status.major));
./support/exports.c:3112: LogInfo(COMPONENT_EXPORT, ""Export %s does not support AUTH_NONE"", op_ctx_export_path(op_ctx));
./support/exports.c:3122: LogInfo(COMPONENT_EXPORT, ""Export %s does not support AUTH_UNIX"", op_ctx_export_path(op_ctx));
./support/exports.c:3135: LogInfo(COMPONENT_EXPORT, ""Export %s does not support RPCSEC_GSS"", op_ctx_export_path(op_ctx));
./support/exports.c:3150: LogInfo(COMPONENT_EXPORT, ""Export %s does not support RPCSEC_GSS_SVC_NONE"", op_ctx_export_path(op_ctx));
./support/exports.c:3160: LogInfo(COMPONENT_EXPORT, ""Export %s does not support RPCSEC_GSS_SVC_INTEGRITY"", op_ctx_export_path(op_ctx));
./support/exports.c:3170: LogInfo(COMPONENT_EXPORT, ""Export %s does not support RPCSEC_GSS_SVC_PRIVACY"", op_ctx_export_path(op_ctx));
./support/exports.c:3178: LogInfo(COMPONENT_EXPORT, ""Export %s does not support unknown RPCSEC_GSS_SVC %d"", op_ctx_export_path(op_ctx), (int)svc);
./support/exports.c:3188: LogInfo(COMPONENT_EXPORT, ""Export %s does not support unknown oa_flavor %d"", op_ctx_export_path(op_ctx), (int)req->rq_msg.cb_cred.oa_flavor);
./support/export_mgr.c:1134: LogInfo(COMPONENT_EXPORT, ""Adding export from file: %s with %s"", file_path, export_expr);
./support/export_mgr.c:1357: LogInfo(COMPONENT_EXPORT, ""Removed export with id %d"", export->export_id);
./support/export_mgr.c:1733: LogInfo(COMPONENT_EXPORT, ""Adding export from file: %s with %s"", file_path, export_expr);
./support/nfs_filehandle_mgmt.c:300: LogInfo(COMPONENT_FILEHANDLE, ""INVALID HANDLE: nfs_fh4_val=NULL"");
./support/nfs_filehandle_mgmt.c:303: LogInfo(COMPONENT_FILEHANDLE, ""INVALID HANDLE: zero length handle"");
./support/nfs_filehandle_mgmt.c:307: LogInfo(COMPONENT_FILEHANDLE, ""INVALID HANDLE: not a Ganesha handle, fhversion=%d"", pfile_handle->fhversion);
./support/nfs_filehandle_mgmt.c:312: LogInfo(COMPONENT_FILEHANDLE, ""INVALID HANDLE: data.data_len=%d is less than %d"", fh->nfs_fh4_len, (int)offsetof(struct file_handle_v4, fsopaque));
./support/nfs_filehandle_mgmt.c:319: LogInfo(COMPONENT_FILEHANDLE, ""INVALID HANDLE: data.data_len=%d is greater than %d"", fh->nfs_fh4_len, (int)NFS4_FHSIZE);
./support/nfs_filehandle_mgmt.c:325: LogInfo(COMPONENT_FILEHANDLE, ""INVALID HANDLE: nfs_fh4_len=%d, should be %d"", fh->nfs_fh4_len, (int)nfs4_sizeof_handle(pfile_handle));
./support/nfs_filehandle_mgmt.c:330: LogInfo(COMPONENT_FILEHANDLE, ""INVALID HANDLE: is_pseudofs=%d"", ntohs(pfile_handle->id.exports) == 0);
./support/nfs_filehandle_mgmt.c:373: LogInfo(COMPONENT_FILEHANDLE, ""INVALID HANDLE: data.data_val=NULL"");
./support/nfs_filehandle_mgmt.c:376: LogInfo(COMPONENT_FILEHANDLE, ""INVALID HANDLE: zero length handle"");
./support/nfs_filehandle_mgmt.c:380: LogInfo(COMPONENT_FILEHANDLE, ""INVALID HANDLE: not a Ganesha handle, fhversion=%d"", pfile_handle->fhversion);
./support/nfs_filehandle_mgmt.c:385: LogInfo(COMPONENT_FILEHANDLE, ""INVALID HANDLE: data.data_len=%d is less than %d"", fh3->data.data_len, (int)offsetof(file_handle_v3_t, fsopaque));
./support/nfs_filehandle_mgmt.c:392: LogInfo(COMPONENT_FILEHANDLE, ""INVALID HANDLE: data.data_len=%d is greater than %d"", fh3->data.data_len, (int)NFS3_FHSIZE);
./support/nfs_filehandle_mgmt.c:398: LogInfo(COMPONENT_FILEHANDLE, ""INVALID HANDLE: data.data_len=%d, should be %d"", fh3->data.data_len, (int)nfs3_sizeof_handle(pfile_handle));
./support/uid2grp_cache.c:297: LogInfo(COMPONENT_IDMAPPER, ""Cache size limit violated, removing entry with least time validity"");
./support/nfs_creds.c:254: LogInfo(COMPONENT_DISPATCH, ""Attempt to fetch managed groups failed"");
./support/nfs_creds.c:263: LogInfo(COMPONENT_DISPATCH, ""Attempt to fetch managed groups failed"");
./support/nfs_creds.c:369: LogInfo(COMPONENT_IDMAPPER, ""Could not map principal %s to uid"", principal);
./support/nfs_creds.c:460: LogInfo(COMPONENT_DISPATCH, ""Attempt to fetch managed_gids failed for uid=%u, using cred info from rpc request"", op_ctx->original_creds.caller_uid);
./support/nfs_creds.c:470: LogInfo(COMPONENT_DISPATCH, ""Attempt to fetch managed_gids failed for uid=%u"", op_ctx->original_creds.caller_uid);
./support/nfs_creds.c:610: LogInfoAlt(COMPONENT_NFS_V4, COMPONENT_EXPORT, ""Access not allowed on Export_Id %d %s for client %s"", op_ctx->ctx_export->export_id, CTX_PSEUDOPATH(op_ctx), op_ctx->client ? op_ctx->client->hostaddr_str : ""unknown client"");
./support/nfs_creds.c:622: LogInfoAlt(COMPONENT_NFS_V4, COMPONENT_EXPORT, ""NFS4 not allowed on Export_Id %d %s for client %s"", op_ctx->ctx_export->export_id, CTX_PSEUDOPATH(op_ctx), op_ctx->client ? op_ctx->client->hostaddr_str : ""unknown client"");
./support/nfs_creds.c:637: LogInfoAlt(COMPONENT_NFS_V4, COMPONENT_EXPORT, ""NFS4 over %s not allowed on Export_Id %d %s for client %s"", xprt_type_to_str(xprt_type), op_ctx->ctx_export->export_id, CTX_PSEUDOPATH(op_ctx), op_ctx->client ? op_ctx->client->hostaddr_str : ""unknown client"");
./support/nfs_creds.c:652: LogInfoAlt(COMPONENT_NFS_V4, COMPONENT_EXPORT, ""Non-reserved Port %d is not allowed on Export_Id %d %s for client %s"", port, op_ctx->ctx_export->export_id, CTX_PSEUDOPATH(op_ctx), op_ctx->client ? op_ctx->client->hostaddr_str : ""unknown client"");
./support/nfs_creds.c:664: LogInfoAlt(COMPONENT_NFS_V4, COMPONENT_EXPORT, ""NFS4 auth not allowed on Export_Id %d %s for client %s"", op_ctx->ctx_export->export_id, CTX_PSEUDOPATH(op_ctx), op_ctx->client ? op_ctx->client->hostaddr_str : ""unknown client"");
./support/uid2grp.c:294: LogInfo(COMPONENT_IDMAPPER, ""No matching password record found for uid %u"", uid);
./support/xprt_handler.c:154: LogInfo(COMPONENT_XPRT, ""The xprt FD: %d, socket-addr: %s is not associated with any custom-data, done un-referencing."", xprt->xp_fd, xprt_addr_str);
./support/xprt_handler.c:255: LogInfo(COMPONENT_XPRT, ""No custom data to destroy for the destroyed xprt"");
./SAL/nfs41_session_id.c:575: LogInfo(COMPONENT_SESSIONS, ""We hit the session's max-connections limit before adding xprt FD: %d"", data->req->rq_xprt->xp_fd);
./SAL/nfs4_recovery.c:794: LogInfo(COMPONENT_CLIENTID, ""Recovery Backend Init for %s"", recovery_backend_str(nfs_param.nfsv4_param.recovery_backend));
./SAL/recovery/recovery_fs.c:268: LogInfo(COMPONENT_CLIENTID, ""NFSv4 Recovery Directory %s"", v4_recov_dir);
./SAL/recovery/recovery_fs.c:270: LogInfo(COMPONENT_CLIENTID, ""NFSv4 Recovery Directory (old) %s"", v4_old_dir);
./include/nfs_file_handle.h:225: LogInfo(COMPONENT_FILEHANDLE, ""INVALID HANDLE: empty"");
./include/fsal_api.h:3082: LogInfo(COMPONENT_FSAL, ""FSAL %s now unused"", fsal_hdl->name);
./MainNFSD/9p_dispatcher.c:983: LogInfo(COMPONENT_9P_DISPATCH, ""Entering 9P dispatcher"");
./MainNFSD/9p_rdma_dispatcher.c:374: LogInfo(COMPONENT_9P_DISPATCH, ""Entering 9P/RDMA dispatcher"");
./MainNFSD/nfs_rpc_callback.c:177: LogInfo(COMPONENT_NFS_CB, ""Callback channel's gss status is already set to %d"", gss_enabled);
./MainNFSD/nfs_rpc_callback.c:187: LogInfo(COMPONENT_NFS_CB, ""Gss callbacks are now enabled"");
./MainNFSD/nfs_rpc_callback.c:193: LogInfo(COMPONENT_NFS_CB, ""Gss callbacks are now disabled"");
./MainNFSD/nfs_rpc_callback.c:790: LogInfo(COMPONENT_NFS_CB, ""Xprt FD: %d is already associated with the channel. Skip creation"", xprt->xp_fd);
./MainNFSD/nfs_rpc_callback.c:796: LogInfo(COMPONENT_NFS_CB, ""The channel exists with NULL xprt, destroy and recreate with xprt FD: %d"", xprt->xp_fd);
./MainNFSD/nfs_rpc_callback.c:800: LogInfo(COMPONENT_NFS_CB, ""The channel exists with xprt FD: %d, destroy and recreate with xprt FD: %d"", existing_xprt->xp_fd, xprt->xp_fd);
./MainNFSD/nfs_worker_thread.c:960: LogInfo(COMPONENT_DISPATCH, ""Could not authenticate request... rejecting with AUTH_STAT=%s"", auth_stat2str(auth_rc));
./MainNFSD/nfs_worker_thread.c:1006: LogInfo(COMPONENT_DISPATCH, ""SVCAUTH_CHECKSUM failed for Program %"" PRIu32 "", Version %"" PRIu32 "", Function %"" PRIu32 "", xid=%"" PRIu32 "", SVCXPRT=%p, fd=%d"", reqdata->svc.rq_msg.cb_prog, reqdata->svc.rq_msg.cb_vers, reqdata->svc.rq_msg.cb_proc, reqdata->svc.rq_msg.rm_xid, xprt, xprt->xp_fd);
./MainNFSD/nfs_worker_thread.c:1165: LogInfo(COMPONENT_DISPATCH, ""NFS3 Request from client %s has badly formed handle"", client_ip);
./MainNFSD/nfs_worker_thread.c:1179: LogInfoAlt(COMPONENT_DISPATCH, COMPONENT_EXPORT, ""NFS3 Request from client %s has invalid export %d"", client_ip, exportid);
./MainNFSD/nfs_worker_thread.c:1255: LogInfo(COMPONENT_DISPATCH, ""NLM4 Request from client %s has badly formed handle"", client_ip);
./MainNFSD/nfs_worker_thread.c:1263: LogInfoAlt(COMPONENT_DISPATCH, COMPONENT_EXPORT, ""NLM4 Request from client %s has invalid export %d"", client_ip, exportid);
./MainNFSD/nfs_worker_thread.c:1306: LogInfoAlt(COMPONENT_DISPATCH, COMPONENT_EXPORT, ""Client %s is not allowed to access Export_Id %d %s, vers=%"" PRIu32 "", proc=%"" PRIu32, client_ip, op_ctx->ctx_export->export_id, op_ctx_export_path(op_ctx), reqdata->svc.rq_msg.cb_vers, reqdata->svc.rq_msg.cb_proc);
./MainNFSD/nfs_worker_thread.c:1321: LogInfoAlt(COMPONENT_DISPATCH, COMPONENT_EXPORT, ""%s Version %"" PRIu32 "" not allowed on Export_Id %d %s for client %s"", progname, reqdata->svc.rq_msg.cb_vers, op_ctx->ctx_export->export_id, op_ctx_export_path(op_ctx), client_ip);
./MainNFSD/nfs_worker_thread.c:1341: LogInfoAlt(COMPONENT_DISPATCH, COMPONENT_EXPORT, ""%s Version %"" PRIu32 "" over %s not allowed on Export_Id %d %s for client %s"", progname, reqdata->svc.rq_msg.cb_vers, xprt_type_to_str(xprt_type), op_ctx->ctx_export->export_id, op_ctx_export_path(op_ctx), client_ip);
./MainNFSD/nfs_worker_thread.c:1358: LogInfoAlt(COMPONENT_DISPATCH, COMPONENT_EXPORT, ""%s Version %"" PRIu32 "" auth not allowed on Export_Id %d %s for client %s"", progname, reqdata->svc.rq_msg.cb_vers, op_ctx->ctx_export->export_id, op_ctx_export_path(op_ctx), client_ip);
./MainNFSD/nfs_worker_thread.c:1377: LogInfoAlt(COMPONENT_DISPATCH, COMPONENT_EXPORT, ""Non-reserved Port %d is not allowed on Export_Id %d %s for client %s"", port, op_ctx->ctx_export->export_id, op_ctx_export_path(op_ctx), client_ip);
./MainNFSD/nfs_worker_thread.c:1458: LogInfoAlt(COMPONENT_DISPATCH, COMPONENT_EXPORT, ""Client %s is not allowed to access Export_Id %d %s, vers=%"" PRIu32 "", proc=%"" PRIu32, client_ip, op_ctx->ctx_export->export_id, op_ctx_export_path(op_ctx), reqdata->svc.rq_msg.cb_vers, reqdata->svc.rq_msg.cb_proc);
./MainNFSD/nfs_worker_thread.c:1475: LogInfoAlt(COMPONENT_DISPATCH, COMPONENT_EXPORT, ""could not get uid and gid, rejecting client %s"", client_ip);
./MainNFSD/nfs_rpc_dispatcher_thread.c:633: LogInfo(COMPONENT_DISPATCH, ""Binding to address %s"", str);
./MainNFSD/nfs_rpc_dispatcher_thread.c:681: LogInfo(COMPONENT_DISPATCH, ""Binding UDP socket to address %s for %s"", str, tags[p]);
./MainNFSD/nfs_rpc_dispatcher_thread.c:735: LogInfo(COMPONENT_DISPATCH, ""Binding TCP socket to address %s for %s"", str, tags[p]);
./MainNFSD/nfs_rpc_dispatcher_thread.c:770: LogInfo(COMPONENT_DISPATCH, ""Binding to address %s"", str);
./MainNFSD/nfs_rpc_dispatcher_thread.c:819: LogInfo(COMPONENT_DISPATCH, ""Binding UDP socket to address %s for %s"", str, tags[p]);
./MainNFSD/nfs_rpc_dispatcher_thread.c:873: LogInfo(COMPONENT_DISPATCH, ""Binding TCP socket to address %s for %s"", str, tags[p]);
./MainNFSD/nfs_rpc_dispatcher_thread.c:943: LogInfo(COMPONENT_DISPATCH, ""Bind sockets successful, v6disabled = %d, vsock = %d, rdma = %d"", v6disabled, vsock, rdma);
./MainNFSD/nfs_rpc_dispatcher_thread.c:1071: LogInfo(COMPONENT_DISPATCH, ""No V6 and V4 intfs configured?!"");
./MainNFSD/nfs_rpc_dispatcher_thread.c:1269: LogInfo(COMPONENT_DISPATCH, ""Registering %s V%d/UDP"", tags[prot], (int)vers);
./MainNFSD/nfs_rpc_dispatcher_thread.c:1281: LogInfo(COMPONENT_DISPATCH, ""Registering %s V%d/UDPv6"", tags[prot], (int)vers);
./MainNFSD/nfs_rpc_dispatcher_thread.c:1295: LogInfo(COMPONENT_DISPATCH, ""Registering %s V%d/TCP"", tags[prot], (int)vers);
./MainNFSD/nfs_rpc_dispatcher_thread.c:1306: LogInfo(COMPONENT_DISPATCH, ""Registering %s V%d/TCPv6"", tags[prot], (int)vers);
./MainNFSD/nfs_rpc_dispatcher_thread.c:1341: LogInfo(COMPONENT_DISPATCH, ""NFS INIT: using TIRPC"");
./MainNFSD/nfs_rpc_dispatcher_thread.c:1413: LogInfo(COMPONENT_DISPATCH, ""NFS INIT: Using IPv6"");
./MainNFSD/nfs_rpc_dispatcher_thread.c:1418: LogInfo(COMPONENT_DISPATCH, ""Cannot get udp6 netconfig, cannot get an entry for udp6 in netconfig file. Check file /etc/netconfig..."");
./MainNFSD/nfs_rpc_dispatcher_thread.c:1424: LogInfo(COMPONENT_DISPATCH, ""Cannot get tcp6 netconfig, cannot get an entry for tcp in netconfig file. Check file /etc/netconfig..."");
./MainNFSD/nfs_rpc_dispatcher_thread.c:1457: LogInfo(COMPONENT_DISPATCH, ""Successfully imported principal %s into GSSAPI"", nfs_param.krb5_param.svc.principal);
./MainNFSD/nfs_rpc_dispatcher_thread.c:1614: LogInfo(COMPONENT_DISPATCH, ""SVC_DECODE on %p fd %d returned unknown %u"", xprt, xprt->xp_fd, stat);
./MainNFSD/nfs_init.c:611: LogInfo(COMPONENT_INIT, ""State lock layer successfully initialized"");
./MainNFSD/nfs_init.c:620: LogInfo(COMPONENT_INIT, ""IP/name cache successfully initialized"");
./MainNFSD/nfs_init.c:819: LogInfo(COMPONENT_INIT, ""NFSv4 ACL cache successfully initialized"");
./MainNFSD/nfs_init.c:844: LogInfo(COMPONENT_INIT, ""krb5 keytab path successfully set to %s"", nfs_param.krb5_param.keytab);
./MainNFSD/nfs_init.c:866: LogInfo(COMPONENT_INIT, ""Regression:  svc.gss_name == GSS_C_NO_NAME"");
./MainNFSD/nfs_init.c:869: LogInfo(COMPONENT_INIT, ""gss principal \""%s\"" successfully set"", nfs_param.krb5_param.svc.principal);
./MainNFSD/nfs_init.c:893: LogInfo(COMPONENT_INIT, ""NFSv4 clientid cache successfully initialized"");
./MainNFSD/nfs_init.c:898: LogInfo(COMPONENT_INIT, ""duplicate request hash table cache successfully initialized"");
./MainNFSD/nfs_init.c:907: LogInfo(COMPONENT_INIT, ""NFSv4 State Id cache successfully initialized"");
./MainNFSD/nfs_init.c:916: LogInfo(COMPONENT_INIT, ""NFSv4 Open Owner cache successfully initialized"");
./MainNFSD/nfs_init.c:927: LogInfo(COMPONENT_INIT, ""NLM Owner cache successfully initialized"");
./MainNFSD/nfs_init.c:935: LogInfo(COMPONENT_INIT, ""NLM State cache successfully initialized"");
./MainNFSD/nfs_init.c:947: LogInfo(COMPONENT_INIT, ""9P Owner cache successfully initialized"");
./MainNFSD/nfs_init.c:955: LogInfo(COMPONENT_INIT, ""NFSv4 Session Id cache successfully initialized"");
./MainNFSD/nfs_init.c:964: LogInfo(COMPONENT_INIT, ""NFSv4 specific parameter initialized"");
./MainNFSD/nfs_init.c:973: LogInfo(COMPONENT_INIT, ""9P resources successfully initialized"");
./MainNFSD/nfs_init.c:981: LogInfo(COMPONENT_INIT, ""NFSv4 pseudo file system successfully initialized"");
./MainNFSD/nfs_init.c:989: LogInfo(COMPONENT_INIT, ""RPC resources successfully initialized"");
./config_parsing/config_parsing.c:1043: LogInfo(COMPONENT_CONFIG, ""%s %s is empty"", (node->type == TYPE_STMT ? ""Statement"" : ""Block""), node->u.nterm.name);
./idmapper/idmapper_negative_cache.c:276: LogInfo(COMPONENT_IDMAPPER, ""Cache size limit violated, removing %s with least time validity"", entity_type_string);
./idmapper/idmapper.c:176: LogInfo(COMPONENT_IDMAPPER, ""Idmapping status is already set to %d"", status_enabled);
./idmapper/idmapper.c:193: LogInfo(COMPONENT_IDMAPPER, ""Idmapping is now enabled"");
./idmapper/idmapper.c:207: LogInfo(COMPONENT_IDMAPPER, ""Idmapping is now disabled"");
./idmapper/idmapper.c:252: LogInfo(COMPONENT_IDMAPPER, ""Idmapper cache reaper is disabled"");
./idmapper/idmapper.c:279: LogInfo(COMPONENT_IDMAPPER, ""Idmapper reaper initialized"");
./idmapper/idmapper.c:498: LogInfo(COMPONENT_IDMAPPER, ""owner_domain.domain is NULL, cannot encode nfs4 principal"");
./idmapper/idmapper.c:538: LogInfo(COMPONENT_IDMAPPER, ""owner_domain.domain is NULL, cannot encode nfs4 principal"");
./idmapper/idmapper.c:548: LogInfo(COMPONENT_IDMAPPER, ""%s failed with code %d."", (group ? ""getgrgid_r"" : ""getpwuid_r""), rc);
./idmapper/idmapper.c:568: LogInfo(COMPONENT_IDMAPPER, ""%s failed with code %d."", (group ? ""nfs4_gid_to_name"" : ""nfs4_uid_to_name""), rc);
./idmapper/idmapper.c:580: LogInfo(COMPONENT_IDMAPPER, ""Lookup for %d failed, using numeric %s"", id, (group ? ""group"" : ""owner""));
./idmapper/idmapper.c:586: LogInfo(COMPONENT_IDMAPPER, ""Lookup for %d failed, using nobody."", id);
./idmapper/idmapper.c:892: LogInfo(COMPONENT_IDMAPPER, ""%s %s failed with %d, using anonymous."", (group ? ""nfs4_name_to_gid"" : ""nfs4_name_to_uid""), name, -rc);
./idmapper/idmapper.c:974: LogInfo(COMPONENT_IDMAPPER, ""All lookups failed for %s, using anonymous."", namebuff);
./idmapper/idmapper.c:1259: LogInfo(COMPONENT_IDMAPPER, ""wbcAuthenticateUserEx returned %s"", wbcErrorString(wbc_err));
./idmapper/idmapper.c:1266: LogInfo(COMPONENT_IDMAPPER, ""nt_status: %s, display_string %s"", error->nt_string, error->display_string);
./idmapper/idmapper.c:1282: LogInfo(COMPONENT_IDMAPPER, ""wbcGetpwsid returned %s"", wbcErrorString(wbc_err));
./log/log_functions.c:710: LogInfo(COMPONENT_LOG, ""Facility %s already exists"", name);
./log/log_functions.c:731: LogInfo(COMPONENT_LOG, ""Created log facility %s"", facility->lf_name);
./log/log_functions.c:802: LogInfo(COMPONENT_LOG, ""Facility %s does not exist"", name);
./log/log_functions.c:837: LogInfo(COMPONENT_LOG, ""Facility %s does not exist"", name);
./FSAL_UP/fsal_up_top.c:974: LogInfo(COMPONENT_STATE, ""More than one lease time has passed since recall was successfully sent"");
./FSAL_UP/fsal_up_top.c:981: LogInfo(COMPONENT_STATE, ""More than two lease times have passed since recall was attempted"");
"
DWfXQ8cs,Sub string,apl-mhd,C++,Tuesday 7th of May 2024 01:52:22 PM CDT,"#include <stdio.h>
#include <stdlib.h>

int main()
{

    char str1[100];
    char str2[100];

    gets(str1);
    scanf(""%s"", str2);

    int flag;
    for (int i = 0; str1[i] != '\0'; i++)
    {
        flag = 1;
        for (int j = 0; str2[j] != '\0'; j++)
        {
            if (str1[i] != str2[j])
            {
                flag = 0;
                break;
            }
            i++;
        }
        if (flag == 1)
        {
            break;
        }
    }

    if (flag == 1)
    {
        printf(""Yes\n"");
    }
    else
    {
        printf(""No\n"");
    }

    return 0;
}
"
DGppCgfM,Untitled,Rodunskiy,C#,Tuesday 7th of May 2024 01:45:17 PM CDT,"using System;
 
namespace CSLight
{
    public class Program
    {
        static void Main(string[] args)
        {
            const string ChangeUsdtoRubCommand = ""1"";
            const string ChangeUsdtoEurCommand = ""2"";
            const string ChangeRubtoEurCommand = ""3"";
            const string ChangeRubtoUsdCommand = ""4"";
            const string ChangeEurtoUsdCommand = ""5"";
            const string ChangeEurtoRubCommand = ""6"";
            const string ExitProgramCommand = ""7"";

            int balanceUsd = 10;
            int balanceRub = 1000;
            int balanceEur = 10;

            int exchangeRateUsdtoRub = 90;
            int exchangeRateUsdtoEur = 1;
            int exchangeRateEurtoRub = 80;
            int exchangeRateEurtoUsd = 1;
            int exchangeRateRubtoUsd = 100;
            int exchangeRateRubtoEur = 90;

            int translationUsd;
            int translationRub;
            int translationEur;

            bool canWork = true;

            while(canWork) 
            {
                Console.Clear();
                Console.WriteLine($""Баланс ваших кошельков:\n"" +
                    $""Usd:{balanceUsd}\n"" +
                    $""Rub:{balanceRub}\n"" +
                    $""Eur:{balanceEur}\n"" +
                    $""Какую валюту вы хотели бы обменять?\n"" +
                    $""{ChangeUsdtoRubCommand})Поменять usd на rub.\n"" +
                    $""{ChangeUsdtoEurCommand})Поменять usd на eur.\n"" +
                    $""{ChangeRubtoEurCommand})Поменять rub на eur.\n"" +
                    $""{ChangeRubtoUsdCommand})Поменять rub на usd\n{ChangeEurtoUsdCommand})Поменять eur на usd\n"" +
                    $""{ChangeEurtoRubCommand})Поменять eur на rub\n{ExitProgramCommand})Выйти из банка."");

                switch (Console.ReadLine())
                {
                    case ChangeUsdtoRubCommand:
                        Console.WriteLine(""Сколько usd вы хотите обменять на rub?"");
                        translationUsd = Convert.ToInt32(Console.ReadLine());

                        if(translationUsd <= balanceUsd) 
                        {
                            balanceUsd -= translationUsd;
                            balanceRub += translationUsd * exchangeRateUsdtoRub;
                        }
                        else
                        {
                            Console.WriteLine(""У вас недостаточно usd для обмена!"");
                            Console.ReadKey();
                        }
                        break;

                    case ChangeUsdtoEurCommand:
                        Console.WriteLine(""Сколько usd вы хотите обменять на eur?"");
                        translationUsd = Convert.ToInt32(Console.ReadLine());

                        if (translationUsd <= balanceUsd)
                        {
                            balanceUsd -= translationUsd;
                            balanceEur += translationUsd * exchangeRateUsdtoEur;
                        }
                        else
                        {
                            Console.WriteLine(""У вас недостаточно usd для обмена!"");
                            Console.ReadKey();
                        }
                        break;

                    case ChangeRubtoEurCommand:
                        Console.WriteLine(""Сколько rub вы хотите обменять на eur?"");
                        translationRub = Convert.ToInt32(Console.ReadLine());

                        if (translationRub <= balanceRub)
                        {
                            balanceRub -= translationRub;
                            balanceEur += translationRub * exchangeRateRubtoEur;
                        }
                        else
                        {
                            Console.WriteLine(""У вас недостаточно rub для обмена!"");
                            Console.ReadKey();
                        }
                        break;

                    case ChangeRubtoUsdCommand:
                        Console.WriteLine(""Сколько rub вы хотите обменять на usd?"");
                        translationRub = Convert.ToInt32(Console.ReadLine());

                        if (translationRub <= balanceRub)
                        {
                            balanceRub -= translationRub;
                            balanceUsd += translationRub * exchangeRateRubtoUsd;
                        }
                        else
                        {
                            Console.WriteLine(""У вас недостаточно rub для обмена!"");
                            Console.ReadKey();
                        }
                        break;

                    case ChangeEurtoUsdCommand:
                        Console.WriteLine(""Сколько eur вы хотите обменять на usd?"");
                        translationEur = Convert.ToInt32(Console.ReadLine());

                        if (translationEur <= balanceEur)
                        {
                            balanceEur -= translationEur;
                            balanceUsd += translationEur * exchangeRateEurtoUsd;
                        }
                        else
                        {
                            Console.WriteLine(""У вас недостаточно eur для обмена!"");
                            Console.ReadKey();
                        }
                        break;

                    case ChangeEurtoRubCommand:
                        Console.WriteLine(""Сколько eur вы хотите обменять на rub?"");
                        translationEur = Convert.ToInt32(Console.ReadLine());

                        if (translationEur <= balanceEur)
                        {
                            balanceEur -= translationEur;
                            balanceRub += translationEur * exchangeRateEurtoRub;
                        }
                        else
                        {
                            Console.WriteLine(""У вас недостаточно eur для обмена!"");
                            Console.ReadKey();
                        }
                        break;

                    case ExitProgramCommand:
                        canWork = false;
                        break;
                }
            }      
        }
    }
}"
kp1ASrn7,mynixos-install.sh,sidneystreith1985,Bash,Tuesday 7th of May 2024 01:28:30 PM CDT,"#!/bin/sh
# Prompt for LUKS password
read -s -p ""Enter LUKS Password: "" luks_password
echo

sudo parted /dev/sda -- mklabel gpt
sudo parted /dev/sda -- mkpart ESP fat32 1MiB 512MiB
sudo parted /dev/sda -- set 1 boot on
sudo parted /dev/sda -- mkpart primary 512MiB 100%

sudo cryptsetup luksFormat /dev/sda2 <<< ""$luks_password""
sudo cryptsetup luksOpen /dev/sda2 crypted <<< ""$luks_password""

sudo pvcreate /dev/mapper/crypted
sudo vgcreate vg /dev/mapper/crypted
sudo lvcreate -L 8G -n swap vg
sudo lvcreate -l '100%FREE' -n nixos vg

sudo mkfs.fat -F 32 -n boot /dev/sda1
sudo mkfs.ext4 -L nixos /dev/vg/nixos
sudo mkswap -L swap /dev/vg/swap

sudo mount /dev/disk/by-label/nixos /mnt
sudo mkdir -p /mnt/boot
sudo mount /dev/disk/by-label/boot /mnt/boot
sudo swapon /dev/vg/swap

# sudo nixos-generate-config --root /mnt
# sudo nixos-install"
CaHc0z38,kod css upster tabela serwerow - 103379,Pecetowicz,HTML,Tuesday 7th of May 2024 01:05:50 PM CDT,".tborder-sb {
    background: #fff;
    width: 100%;
    margin: auto auto;
    border: 1px solid #efe4e4;
    border-radius: 5px;
    -moz-border-radius: 5px;
    -webkit-border-radius: 5px;
    position: relative;
    min-width: 295px;
}

.thead-sb {
    color: #000;
    padding: 20px;
    font-size: 14px;
}

.serv_bg {
    font-weight: bold;
}

.tcat-serv {
    color: #8c8c8c;
    padding: 6px;
    font-size: 13px;
    border-bottom: 1px dashed #d5d5d5;
}

.trow-serv-f {
    width: 15%;
    background: none;
    padding: 10px;
    border-bottom: 1px dashed #d5d5d5;
    color: #818181;
    text-align: center;
}

.trow-serv-t {
    width: 30%;
    background: none;
    padding: 10px;
    border-bottom: 1px dashed #d5d5d5;
    color: #818181;
    text-align: center;
}

.trow-serv-th {
    width: 4%;
    background: none;
    padding: 10px;
    border-bottom: 1px dashed #d5d5d5;
    color: #818181;
    text-align: center;
}

.trow-serv-o {
    width: 10%;
    background: none;
    padding: 10px;
    border-bottom: 1px dashed #d5d5d5;
    color: #818181;
    text-align: center;
}

.st {
    color: #00a7dd;
    opacity: .4;
}

.hltv {
    color: #00499f;
    opacity: .4;
}

.gt {
    color: #b96100;
    opacity: .4;
}

.connect {
    color: #626262;
}

.bgstyle-cat {
    padding: 6px 10px;
    background: #f6f5f5;
    border-bottom: 1px solid #d4d4d4;
    font-size: 13px;
    border-radius: 4px;
}

.bann-border {
    border-radius: 6px;
}"
JDJs6Z1A,kod html upster tabela serwrow - 103379,Pecetowicz,HTML,Tuesday 7th of May 2024 01:05:03 PM CDT,"    <!--TABELA SERWERÓW -->

    <table class=""tborder-sb"" border=""0"" cellpadding=""3"" cellspacing=""1"">
        <tbody>
            <tr>
                <td class=""thead-sb"" colspan=""10"">
                    <b>Nasze serwery</b>
                    <br>
                    <span style=""font-size: 13px;"">Wszystkie serwery sieci deadly-bullet.y0.pl</span>
                </td>
            </tr>

            <tr>
                <td class=""tcat-serv""><center><span class=""serv_bg"">ID</span></center></td>
                <td class=""tcat-serv""><center><span class=""serv_bg"">Nazwa</center></span></td>
                <td class=""tcat-serv""><center><span class=""serv_bg"">Sloty</center></span></td>
                <td class=""tcat-serv""><center><span class=""serv_bg"">IP</center></span></td>
                <td class=""tcat-serv""><center><span class=""serv_bg"">Monitor</center></span></td>
                <td class=""tcat-serv""><center><span class=""serv_bg"">Dział</center></span></td>
                <td class=""tcat-serv""><center><span class=""serv_bg"">HLTV</center></span></td>
                <td class=""tcat-serv""><center><span class=""serv_bg"">GameTracker</center></span></td>
                <td class=""tcat-serv""><center><span class=""serv_bg"">Połącz</center></span></td>
            </tr

            <tr>
                <td class=""trow-serv-th"">1</td>
                <td class=""trow-serv-f"">[Only DD2 #2] StrefaSkilla.pl</td>
                <td class=""trow-serv-th"">32</td>
                <td class=""trow-serv-o"">145.239.236.14:27160</td>
                <td class=""trow-serv-t""><a href=""https://www.gametracker.com/server_info/145.239.236.14:27160/"" target=""_blank""><img src=""https://cache.gametracker.com/server_info/145.239.236.14:27160/b_350_20_400080_400080_ffffff_430b64.png"" border=""0"" width=""350"" height=""20"" alt="""" class=""bann-border""/></a></td>
                <td class=""trow-serv-o""><a href=""#"" class=""bgstyle-cat""><i class=""fas fa-comment-alt st""></i> Dział</a></td>
                <td class=""trow-serv-o""><a href=""#"" class=""bgstyle-cat""><i class=""fas fa-video hltv""></i> HTLV</a></td>
                <td class=""trow-serv-o""><a href=""http://www.gametracker.com/server_info/31.186.84.219:27848/"" class=""bgstyle-cat""><i class=""fab fa-google gt""></i> GameTracker</a></td>
                <td class=""trow-serv-o""><a href='steam://connect/145.239.236.14:27160' class=""bgstyle-cat""><i class=""fas fa-link connect""></i> Steam</a></td>
            </tr>

            <tr>
                <td class=""trow-serv-th"">2</td>
                <td class=""trow-serv-f"">[CS:GO MOD] CS-LUZownia.pl</center></td>
                <td class=""trow-serv-th"">32</td>
                <td class=""trow-serv-o"">54.38.135.53:27015</td>
                <td class=""trow-serv-t""><a href=""https://www.gametracker.com/server_info/csgomod.cs-luzownia.pl:27015/"" target=""_blank""><img src=""https://cache.gametracker.com/server_info/csgomod.cs-luzownia.pl:27015/b_350_20_400080_400080_ffffff_430b64.png"" border=""0"" width=""350"" height=""20"" alt="""" class=""bann-border""/></a></td>
                <td class=""trow-serv-o""><a href=""#"" class=""bgstyle-cat""><i class=""fas fa-comment-alt st""></i> Dział</a></td>
                <td class=""trow-serv-o""><a href=""#"" class=""bgstyle-cat""><i class=""fas fa-video hltv""></i> HTLV</a></td>
                <td class=""trow-serv-o""><a href=""http://www.gametracker.com/server_info/31.186.84.219:27848/"" class=""bgstyle-cat""><i class=""fab fa-google gt""></i> GameTracker</a></td>
                <td class=""trow-serv-o""><a href='steam://connect/54.38.135.53:27015' class=""bgstyle-cat""><i class=""fas fa-link connect""></i> Steam</a></td>
    </tr>

    <tr>
                <td class=""trow-serv-th"">3</td>
                <td class=""trow-serv-f"">[ZOMBIE+EXP 72LV] 1shot2kill.pl</td>
                <td class=""trow-serv-th"">25</td>
                <td class=""trow-serv-o"">147.135.197.29:27015</td>
                <td class=""trow-serv-t""><a href=""https://www.gametracker.com/server_info/147.135.197.29:27015/"" target=""_blank""><img src=""https://cache.gametracker.com/server_info/147.135.197.29:27015/b_350_20_400080_400080_ffffff_430b64.png"" border=""0"" width=""350"" height=""20"" alt="""" class=""bann-border""/></a></td>
                <td class=""trow-serv-o""><a href=""#"" class=""bgstyle-cat""><i class=""fas fa-comment-alt st""></i> Dział</a></td>
                <td class=""trow-serv-o""><a href=""#"" class=""bgstyle-cat""><i class=""fas fa-video hltv""></i> HTLV</a></td>
                <td class=""trow-serv-o""><a href=""http://www.gametracker.com/server_info/31.186.84.219:27848/"" class=""bgstyle-cat""><i class=""fab fa-google gt""></i> GameTracker</a></td>
                <td class=""trow-serv-o""><a href='steam://connect/147.135.197.29:27015' class=""bgstyle-cat""><i class=""fas fa-link connect""></i> Steam</a></td>
    </tr>

    <tr>
                <td class=""trow-serv-th"">4</td>
                <td class=""trow-serv-f"">|VIP| CsOne.Eu [CS:GO MOD]</td>
                <td class=""trow-serv-th"">22</td>
                <td class=""trow-serv-o"">193.33.176.108:27015</td>
                <td class=""trow-serv-t""><a href=""https://www.gametracker.com/server_info/193.33.176.108:27015/"" target=""_blank""><img src=""https://cache.gametracker.com/server_info/193.33.176.108:27015/b_350_20_400080_400080_ffffff_430b64.png"" border=""0"" width=""350"" height=""20"" alt="""" class=""bann-border""/></a></td>
                <td class=""trow-serv-o""><a href=""#"" class=""bgstyle-cat""><i class=""fas fa-comment-alt st""></i> Dział</a></td>
                <td class=""trow-serv-o""><a href=""#"" class=""bgstyle-cat""><i class=""fas fa-video hltv""></i> HTLV</a></td>
                <td class=""trow-serv-o""><a href=""http://www.gametracker.com/server_info/31.186.84.219:27848/"" class=""bgstyle-cat""><i class=""fab fa-google gt""></i> GameTracker</a></td>
                <td class=""trow-serv-o""><a href='steam://connect/193.33.176.108:27015' class=""bgstyle-cat""><i class=""fas fa-link connect""></i> Steam</a></td>
    </tr>

    <tr>            
                <td class=""trow-serv-th"">5</td>
                <td class=""trow-serv-f"">|VIP| CSowicze.pl |ONLY DD2|</td>
                <td class=""trow-serv-th"">32</td>
                <td class=""trow-serv-o"">54.38.63.53:27015</td>
                <td class=""trow-serv-t""><a href=""https://www.gametracker.com/server_info/54.38.63.53:27015/"" target=""_blank""><img src=""https://cache.gametracker.com/server_info/54.38.63.53:27015/b_350_20_400080_400080_ffffff_430b64.png"" border=""0"" width=""350"" height=""20"" alt="""" class=""bann-border""/></a></td>
                <td class=""trow-serv-o""><a href=""#"" class=""bgstyle-cat""><i class=""fas fa-comment-alt st""></i> Dział</a></td>
                <td class=""trow-serv-o""><a href=""#"" class=""bgstyle-cat""><i class=""fas fa-video hltv""></i> HTLV</a></td>
                <td class=""trow-serv-o""><a href=""http://www.gametracker.com/server_info/31.186.84.219:27848/"" class=""bgstyle-cat""><i class=""fab fa-google gt""></i> GameTracker</a></td>
                <td class=""trow-serv-o""><a href='steam://connect/54.38.63.53:27015' class=""bgstyle-cat""><i class=""fas fa-link connect""></i> Steam</a></td>
    </tr>

    <tr>
                <td class=""trow-serv-th"">6</td>
                <td class=""trow-serv-f"">[Only DD2] DeagleShot.eu</td>
                <td class=""trow-serv-th"">32</td>
                <td class=""trow-serv-o"">145.239.237.103:27155</td>
                <td class=""trow-serv-t""><a href=""https://www.gametracker.com/server_info/145.239.237.103:27155/"" target=""_blank""><img src=""https://cache.gametracker.com/server_info/145.239.237.103:27155/b_350_20_400080_400080_ffffff_430b64.png"" border=""0"" width=""350"" height=""20"" alt="""" class=""bann-border""/></a></td>
                <td class=""trow-serv-o""><a href=""#"" class=""bgstyle-cat""><i class=""fas fa-comment-alt st""></i> Dział</a></td>
                <td class=""trow-serv-o""><a href=""#"" class=""bgstyle-cat""><i class=""fas fa-video hltv""></i> HTLV</a></td>
                <td class=""trow-serv-o""><a href=""http://www.gametracker.com/server_info/31.186.84.219:27848/"" class=""bgstyle-cat""><i class=""fab fa-google gt""></i> GameTracker</a></td>
                <td class=""trow-serv-o""><a href='steam://connect/145.239.237.103:27155' class=""bgstyle-cat""><i class=""fas fa-link connect""></i> Steam</a></td>
    </tr>
    </tbody>
</table>

<!-- KONIEC -->"
B6bXw0FE,kod szablonu allegro marex -71126,Pecetowicz,HTML,Tuesday 7th of May 2024 12:49:24 PM CDT,"<style type=""text/css""><!--
#user_field {    margin: 0; padding:  0; background: ; font-size: 12px; background: #292827; }     #user_field #wrapper { background: url(http://www.bmw-dominik.pl/jurdi/wrapper_bg.gif); top left repeat-y; margin:  auto; width:1000px;overflow:hidden; }     #user_field #header { width:1000px; height:308px; float:left; background: url(http://www.bmw-dominik.pl/jurdi/header1.jpg); top left no-repeat;  }    #user_field #opis-logo{  width:280px;  float:left;  height:239px;  position:relative;   }    #user_field #login{  position:absolute;  top:60px;  left:30px;  font-family:""Lucida Sans Unicode"",Arial, Verdana;  font-size:38px;  color:#d9ccae;   }    #user_field #gwiazdki{  position:absolute;  top:234px;  left:90px;  }    #user_field #logo { float:left; background: url(http://www.bmw-dominik.pl/jurdi/logo1.jpg); top left no-repeat; width:1px; height:1px; display:block; border-color:#34322f; margin-left:0px; margin-top:70px;  }    #user_field #menu { float:left; width:274px; height:auto; background: url(http://www.bmw-dominik.pl/jurdi/mebubg.gif); top left repeat-y;    }    #user_field #title{ float:left; width:229px; height:58px; background: url(http://www.bmw-dominik.pl/jurdi/menu_bg_title.gif); no-repeat; color:white; font-family:TIMES NEW ROMAN,; font-size:24px; padding-left:45px; padding-top:8px;  }   #user_field #title_wysylka{ float:left; width:229px; height:50px; background: url(http://www.bmw-dominik.pl/jurdi/menu_bg_title_wysylka.gif); no-repeat; color:white; font-family:TIMES NEW ROMAN,; font-size:24px; padding-left:45px; padding-top:8px;  }     #user_field #title_kontakt{ float:left; width:229px; height:50px; background: url(http://www.bmw-dominik.pl/jurdi/menu_bg_title_kontakt.gif); no-repeat; color:white; font-family:TIMES NEW ROMAN,; font-size:24px; padding-left:45px; padding-top:8px;  }    #user_field #title_sprzedaz{ float:left; width:229px; height:50px; background: url(http://www.bmw-dominik.pl/jurdi/menu_bg_title_sprzedaz.gif); no-repeat; color:white; font-family:TIMES NEW ROMAN,; font-size:24px; padding-left:45px; padding-top:8px;  }   #user_field .menu { margin-left:80px; font-size:12px; font-family:Geneva, Arial, Helvetica, sans-serif;   }    #user_field #content_main { width:726px; float:left;    }    #user_field #content_top{ width:740px;        height:48px; float:left; background: url(http://www.bmw-dominik.pl/jurdi/content_top1.gif); top leftno-repeat; background-color:#191816; }     #user_field #naglowek { width:650px; height:40px; float:left; font-family:Georgia; letter-spacing:-1px; font-style:bold; font-size:15px; color:#FFFFFF; padding-left:20px; line-height:35px;   }
-</style>
<div id=""wrapper"">
<div id=""header"">
<div id=""opis-logo"">
<div id=""login""></div>
</div>
<div id=""logo""></div>
</div>
<div id=""menu"">
<div id=""title_kontakt""></div>
<p class=""menu""><img src=""http://www.bmw-dominik.pl/jurdi/kontakt.gif"" /></p>
<font size=""3"">
<div id=""title_sprzedaz""></div>
<p class=""menu""><img src=""http://www.bmw-dominik.pl/jurdi/sprzedaz.gif"" /></p>
<div id=""title_wysylka""></div>
<p class=""menu""><img src=""http://www.bmw-dominik.pl/jurdi/wysylka.gif"" /></p>
</font></div>
<div id=""content_main"">
<div id=""content_top"">
<div id=""naglowek"" style=""font-size: medium;""><span style=""font-size: 10pt;""><a href=""http://www.allegro.pl/show_user.php?uid=10994439""><strong><font color=""white"">Moje komentarze</font></strong></a> |    <a href=""http://www.allegro.pl/my_page.php?uid=10994439""><strong><font color=""white"">O mnie</font></strong></a> |       <a href=""http://www.allegro.pl/SendMailToUser.php?  itemId=2296792235&userId=10994439""><strong><font color=""white"">Zadaj mi pytanie</font></strong></a> |   <a href=""http://www.allegro.pl/myaccount/favourites/favourites_sellers.php/addNew/?userId=10994439&ret=/show_user.php?  uid=10994439""><strong><font color=""white"">Dodaj mnie do ulubionych</font></strong></a></span></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""><span style=""font-size: 14pt; color: #ffff00;""><strong>WITAMY SERDECZNIE!</strong></span></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""><span style=""color: #000000; font-size: 12pt;""><span style=""color: #000080;""><strong><span style=""color: #ffff00;"">Na tej aukcji mamy do zaoferowania:</span></strong></span></span></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""><font face=""Verdana,   Geneva, sans-serif""><strong><span style=""font-family: Verdana, Geneva, sans-serif;""><strong><span style=""font-size: 14pt;"">Wzmocnienie czołowe do Audi A3 Nowy model.</span></strong></span></strong></font></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<font face=""Verdana,   Geneva, sans-serif""><strong> 
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""> <span style=""font-size: 18pt; color: #ffff00;""><strong>CZĘŚCI POCHODZĄ Z DEMONTAŻU</strong></span></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""><span style=""font-size: 18pt; font-family: Times New Roman,Times,serif; color: #ffff00;""><strong>POSIADAMY WSZYSTKIE CZĘŚCI DO TEGO MODELU!</strong></span></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""><span style=""font-size: 18pt; font-family: Times New Roman,Times,serif; color: #ffff00;""><strong>PRZED ZAKUPEM PROSZĘ O KONTAKT TELEFONICZNY W CELU SPRAWDZENIA STANU MAGAZYNOWEGO!</strong><br /><br /><br /></span></div>
</strong></font></div>
</div>
<font face=""Verdana,   Geneva, sans-serif""><strong><br /><br /><br /> </strong></font></div>
<p><strong><br /><br /><galeria> </strong></p>
<p><strong><br /><br /><br /></strong></p>
<p><strong> </strong></p>
<p><strong><font size=""3""> <!-- koniec glownego contentu - <!-- koniec wrappera -</font></strong></p>
<p><strong> </strong></p>
<p> </p>
<div class=""clear""></div>
<div id=""style_i_banner_inne_aukcje"" style=""text-align: center;""><img src=""http://imge.pl/aleszablony/users/36514/144105/banner_inne_aukcje.png#8bb05"" /></div>
<div style=""background: #fff; width: 1000px; margin: auto; padding-bottom: 20px;""><!-- POCZATEK KODU PANEL MINIATUREK -
<div style=""width: 982px; padding: 10px 0 10px 0; margin: 0 auto;"">
<style><!--
#user_field .sellbst_code_head { line-height: 60px; overflow: hidden; padding-left: 10px; font-size: 22px; text-align: left; } #user_field .sellbst_clear { clear: both; float: none; }#user_field .sellbst_code_150 { width: 982px;   } #user_field .sellbst_code_150 .sellbst_row { width: 150px; float: left; border-radius: 3px; text-decoration: none; float: left; padding: 7px 0;  border: 1px solid #e6e6e6; border-radius: 0px; margin-right: 14px; margin-bottom: 14px;  } #user_field .sellbst_code_150 .sellbst_row:hover { z-index: 50; position: relative; background: #ff5a00; -webkit-box-shadow:  0 0 10px #333; -moz-box-shadow:   0 0 10px #333; box-shadow:  0 0 10px #333; }
-</style>
<div class=""sellbst_code_150""><a class=""sellbst_row"" href=""http://panel.sellboster.pl/redirect.php?id=27871&position=1"" style=""margin-bottom: 0; border-bottom: 1px solid #e6e6e6;""><img src=""http://panel.sellboster.pl/panel_images/27871/0.png"" /></a><a class=""sellbst_row"" href=""http://panel.sellboster.pl/redirect.php?id=27871&position=2"" style=""margin-bottom: 0; border-bottom: 1px solid #e6e6e6;""><img src=""http://panel.sellboster.pl/panel_images/27871/1.png"" /></a><a class=""sellbst_row"" href=""http://panel.sellboster.pl/redirect.php?id=27871&position=3"" style=""margin-bottom: 0; border-bottom: 1px solid #e6e6e6;""><img src=""http://panel.sellboster.pl/panel_images/27871/2.png"" /></a><a class=""sellbst_row"" href=""http://panel.sellboster.pl/redirect.php?id=27871&position=4"" style=""margin-bottom: 0; border-bottom: 1px solid #e6e6e6;""><img src=""http://panel.sellboster.pl/panel_images/27871/3.png"" /></a><a class=""sellbst_row"" href=""http://panel.sellboster.pl/redirect.php?id=27871&position=5"" style=""margin-bottom: 0; border-bottom: 1px solid #e6e6e6;""><img src=""http://panel.sellboster.pl/panel_images/27871/4.png"" /></a><a class=""sellbst_row"" href=""http://panel.sellboster.pl/redirect.php?id=27871&position=6"" style=""margin-right: 0; border-right: 1px solid #e6e6e6; margin-bottom: 0; border-bottom: 1px solid #e6e6e6;""><img src=""http://panel.sellboster.pl/panel_images/27871/5.png"" /></a>
<div class=""sellbst_clear""></div>
</div>
<div style=""text-align: center; font-size: 11px; font-weight: bold; padding: 5px;""><a href=""http://panel.sellboster.pl/redirect_custom.php"" style=""color: #000;"">© Sellbooster</a></div>
</div>
<!-- KONIEC KODU PANEL MINIATUREK -</div>
<div id=""dodatkowy_box"" style=""text-align: center;""><a href=""http://panel.aleszablony.pl/1.php""><img src=""http://panel.aleszablony.pl/users/36514/144105/1.png"" /></a></div>"
jfKEDCni,dabdab,f0rSee,Python,Tuesday 7th of May 2024 12:45:20 PM CDT,"import tkinter as tk
from tkinter import ttk
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg

half_life_periods = {
    ""Уран-235"": 703.8e6,
    ""Торий-232"": 14.05e6,
    ""Уран-238"": 4.468e6,
    ""Калий-40"": 1.248e6,
    ""Радиум-226"": 1600e6,
    ""Торий-230"": 75380e6,
    ""Уран-234"": 245500e6,
    ""Рубидий-87"": 4.88E16,
    ""Плутоний-239"": 24100e6,
    ""Свинец-207"": 2.185E16,
    ""Калий-41"": 1.248E16,
    ""Тритий"": 12.32e6,
    ""Кобальт-60"": 5.27e6,
    ""Радон-222"": 3.8235e6,
    ""Технеций-99m"": 0.001211e6
}


def calculate_decay(N0, decay_constant, time):
    return N0 * np.exp(-decay_constant * time)

def plot_decay():
    element = selected_element.get()
    N0 = float(entry_N0.get())
    decay_constant = np.log(2) / half_life_periods[element]

    time = np.linspace(0, 10 * half_life_periods[element], 100)
    decay = calculate_decay(N0, decay_constant, time)

    plt.figure()
    plt.plot(time / 10**6 if half_life_periods[element] >= 1E6 else time / 1E3, decay)
    plt.title(f'Распад {element}')
    plt.xlabel('Время (млн лет)' if half_life_periods[element] >= 1E6 else 'Время (тыс лет)')
    plt.ylabel('Оставшееся количество')
    plt.grid(True)

    max_y = N0
    y_ticks = [max_y]
    while len(y_ticks) < 4 and max_y > 0.01 * N0:
        max_y /= 2
        y_ticks.append(max_y)
    y_ticks.append(0)
    plt.yticks(y_ticks, [f'{N0 * (2 ** (-i)):.2f}' for i in range(len(y_ticks) - 1)] + [0])

    plt.ylim(max(y_ticks), 0)

    plt.gca().invert_yaxis()

    canvas = FigureCanvasTkAgg(plt.gcf(), master=window)
    canvas.draw()
    canvas.get_tk_widget().grid(row=5, columnspan=2)

window = tk.Tk()
window.title(""График полураспада"")

selected_element = tk.StringVar()
element_label = ttk.Label(window, text=""Выберите элемент:"")
element_label.grid(row=0, column=0)
element_combobox = ttk.Combobox(window, textvariable=selected_element, values=list(half_life_periods.keys()))
element_combobox.grid(row=0, column=1)
element_combobox.current(0)

entry_N0_label = ttk.Label(window, text=""Начальное количество (N0):"")
entry_N0_label.grid(row=1, column=0)
entry_N0 = ttk.Entry(window)
entry_N0.grid(row=1, column=1)

plot_button = ttk.Button(window, text=""Построить график"", command=plot_decay)
plot_button.grid(row=3, columnspan=2)

window.mainloop()
"
