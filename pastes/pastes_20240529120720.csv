id,title,username,language,date,content
dpw4Mv37,ü§ë G2A.com Free Gift Card Guide May 2024 FIX üéÅ,ssss50w,GetText,Wednesday 29th of May 2024 07:06:22 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
29 May 2024"
HuxsRzAU,Graph,rado_dimitrov66,C++,Wednesday 29th of May 2024 06:58:17 AM CDT,"#include <iostream>
using namespace std;

const int MAX_SIZE = 20; // –ú–∞–∫—Å–∏–º–∞–ª–µ–Ω –±—Ä–æ–π –≤—ä—Ä—Ö–æ–≤–µ –≤ –≥—Ä–∞—Ñ–∞

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤—è–Ω–µ –Ω–∞ –≥—Ä–∞—Ñ
struct Graph {
	int key; // –ú–∞—Ç—Ä–∏—Ü–∞ –Ω–∞ —Å—ä—Å–µ–¥—Å—Ç–≤–æ
	Graph* next; // –ë—Ä–æ–π –≤—ä—Ä—Ö–æ–≤–µ –≤ –≥—Ä–∞—Ñ–∞
} *graphArray[MAX_SIZE];

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –≥—Ä–∞—Ñ–∞
void initializeGraph() {

	for (int i = 0; i < MAX_SIZE; i++)
	{
		graphArray[i] = NULL;
	}
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –¥–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Ä–µ–±—Ä–æ –≤ –≥—Ä–∞—Ñ–∞
void addEdge(int u, int v) {

	for (int i = 0; i < MAX_SIZE; i++)
	{
		if (graphArray[i]->key == u)
		{

			Graph* p = new Graph;

			p->key = v;

			p->next = graphArray[i]->next;

			graphArray[i]->next = p;

			break;
		}
	}
}

int isVisited(int key)
{
	for (int i = 0; i < MAX_SIZE; i++)
	{
		if (graphArray[i])
		{
			if (graphArray[i]->key == key)
			{

				return i;


			}


		}
	}

}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –ø–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –≥—Ä–∞—Ñ–∞
void display() {

	int viseted[MAX_SIZE] = { 0 };

	for (int i = 0; i < MAX_SIZE; i++)
	{
		if (graphArray[i] && viseted[i] == 0)
		{

			cout << graphArray[i]->key << "" "";

			Graph* p = graphArray[i];

			if (p->next)
			{
				p = p->next;

				while (p)
				{

					int index = isVisited(p->key);


					if (viseted[index] == 0 && index != i)
					{
						cout << graphArray[index]->key << "" "";

						viseted[index] = 1;

						viseted[i] = 1;
					}


					p = p->next;

				}
			}

			viseted[i] = 1;


		}
	}


}


bool searchNode(int key)
{

	for (int i = 0; i < MAX_SIZE; i++)
	{
		if (graphArray[i])
		{

			if (graphArray[i]->key == key)
			{
				return true;
			}
		}
	}


	return false;
}

bool searchEdge(int u, int v)
{
	unsigned int fEmpty = 0;

	for (int i = 0; i < MAX_SIZE; i++)
	{
		if (graphArray[i])
		{


			if (graphArray[i]->key == u)
			{
				Graph* p = graphArray[i];

				p = p->next;

				while (p)
				{
					if (p->key == v)
					{
						return true;
					}
					p = p->next;

				}
			}
		}
	}

	return false;
}

void addNode(int key)
{
	unsigned int fEmpty = 0;

	for (int i = 0; i < MAX_SIZE; i++)
	{
		if (graphArray[i] == NULL)
		{
			fEmpty = i;
			break;
		}
	}

	Graph* newNode = new Graph;


	newNode->key = key;

	newNode->next = NULL;

	graphArray[fEmpty] = newNode;


}


// –§—É–Ω–∫—Ü–∏—è –∑–∞ –Ω–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –∏–∑–æ–ª–∏—Ä–∞–Ω–∏ –≤—ä—Ä—Ö–æ–≤–µ –≤ –≥—Ä–∞—Ñ–∞
void findIsolatedVertices() {

	bool isFound = false;

	for (int i = 0; i < MAX_SIZE; i++)
	{
		bool isInput = false;

		if (graphArray[i])
		{
			if (!graphArray[i]->next)
			{
				for (int j = 0; j < MAX_SIZE; j++)
				{
					if (graphArray[j] && j != i)
					{
						Graph* p = graphArray[j];

						p = p->next;

						while (p)
						{
							if (p->key == graphArray[i]->key)
							{
								isInput = true;
								break;
							}

							p = p->next;
						}
					}
				}

				if (!isInput)
				{
					isFound = true;

					cout << ""Isolated Vertice found: "" << graphArray[i]->key << endl;

				}
			}
		}


	}

	if (!isFound)
	{
		cout << ""No isolated vertices found\n"";
	}

}

void mainMenu() {
	cout << ""\nMenu:\n"";
	cout << ""1. Add node\n"";
	cout << ""2. Add edge\n"";
	cout << ""3. Print all elements\n"";
	cout << ""4. Find Isolated Vertices\n"";
	cout << ""5. Exit\n"";
}

int main() {


	initializeGraph(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞ –≥—Ä–∞—Ñ–∞ —Å –≤—ä–≤–µ–¥–µ–Ω–∏—è –±—Ä–æ–π –≤—ä—Ä—Ö–æ–≤–µ

	int choice, u, v, counter = 0;


	while (true) {
		mainMenu(); // –ü–æ–∫–∞–∑–≤–∞ –º–µ–Ω—é—Ç–æ
		cout << ""Choose option: "";
		cin >> choice;

		switch (choice) {

		case 1:
			// –í—ä–≤–µ–∂–¥–∞ –≤—Ä—ä—Ö
			cout << ""Enter node: "";
			cin >> u;

			if (!searchNode(u) && counter < MAX_SIZE)
			{
				addNode(u);

				counter++;

			}
			else if (counter >= MAX_SIZE)
			{
				cout << ""Graph is full\n"";
			}
			else
			{
				cout << ""Node already exist\n"";
			}

			break;

		case 2:
			// –í—ä–≤–µ–∂–¥–∞ —Ä–µ–±—Ä–æ –º–µ–∂–¥—É –¥–≤–∞ –≤—ä—Ä—Ö–∞
			cout << ""Enter start node: "";
			cin >> u;
			cout << ""Enter end node: "";
			cin >> v;


			if (searchEdge(u, v))
			{
				cout << ""Rainbow already exist\n"";
			}
			else
			{
				bool isInvalid = false;

				if (!searchNode(u) && counter < MAX_SIZE)
				{
					addNode(u);
				}
				else {
					cout << ""No space"";

					isInvalid = true;
				}

				if (!searchNode(v) && counter < MAX_SIZE)
				{
					addNode(v);

				}
				else {
					cout << ""No space"";

					isInvalid = true;
				}

				if (!isInvalid)
				{
					addEdge(u, v);
				}


			}

			break;
		case 3:
			// –ü–æ–∫–∞–∑–≤–∞ –≥—Ä–∞—Ñ–∞
			display();
			break;
		case 4:
			// –ù–∞–º–∏—Ä–∞ –∏ –ø–æ–∫–∞–∑–≤–∞ –∏–∑–æ–ª–∏—Ä–∞–Ω–∏—Ç–µ –≤—ä—Ä—Ö–æ–≤–µ
			findIsolatedVertices();
			break;
		case 5:
			// –ò–∑–ª–∏–∑–∞ –æ—Ç –ø—Ä–æ–≥—Ä–∞–º–∞—Ç–∞
			cout << ""Exit.\n"";
			return 0;
		default:
			// –ü–æ–∫–∞–∑–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω–∞ –æ–ø—Ü–∏—è
			cout << ""Invalid option. Try again.\n"";
			break;
		}
	}

	return 0;
}"
rhKj9ktZ,Solar Simulation Shinanigans ‚Äì (Power Grid Issues!),inventrkits,Arduino,Wednesday 29th of May 2024 06:56:39 AM CDT,"/*
 * Building a battery charging controller.
 *
 * We have batteries to store the power generated by our solar panels, but the charging
 * was handled by the building AI, which has been disabled.
 *
 * We'll use a HERO XL to control the charging and use of our battery array, using a
 * photoresistor to simulate our solar panels and variables in the code to track our
 * battery level.
 *
 * A photoresistor is a light-sensitive component that changes resistance based on the
 * amount of light it receives. When light increases, the resistance decreases.
 *
 * Since we'll be powering our lights from the batteries we'll be adding on to our
 * previous switched light circuit and code.
 *
 * Note: This code is for educational purposes and adheres to community guidelines.
 */
#include ""Arduino.h""

const uint8_t LIGHT = 22;          // LED on pin 22
const uint8_t LIGHT_BUTTON = 23;   // Button (light switch) on pin 23
const uint8_t CHARGING_RATE = A8;  // Photoresistor input simulating battery charge rate

const uint8_t PRESSED = LOW;       // Button input pin reads LOW when pressed
const uint8_t NOT_PRESSED = HIGH;  // Button input pin reads HIGH when NOT pressed
const uint8_t ON = HIGH;           // Lights are ON when pin is HIGH
const uint8_t OFF = LOW;           // Lights are OFF when pin is LOW

const float LOW_BATTERY_LIMIT = 10;
const float HIGH_BATTERY_LIMIT = 90;
const float RESUME_CHARGING_AT = HIGH_BATTERY_LIMIT - 5.0;
const uint8_t SECONDS_TO_FULL = 15;
const uint8_t LOOPS_PER_SECOND = 20;
const int AVERAGE_CHARGE_LEVEL = 530;

const float PERCENTAGE_FROM_EMPTY_TO_FULL = HIGH_BATTERY_LIMIT - LOW_BATTERY_LIMIT;
const float PERCENTAGE_PER_SECOND = PERCENTAGE_FROM_EMPTY_TO_FULL / SECONDS_TO_FULL;
const float PERCENTAGE_PER_LOOP = PERCENTAGE_PER_SECOND / LOOPS_PER_SECOND;
const float CHARGE_PER_LIGHT_UNIT = PERCENTAGE_PER_LOOP / AVERAGE_CHARGE_LEVEL;

void setup() {
  Serial.begin(9600);
  while (!Serial) {
    ;
  }
  pinMode(LIGHT, OUTPUT);
  pinMode(LIGHT_BUTTON, INPUT_PULLUP);
  pinMode(CHARGING_RATE, INPUT);
}

float battery_charge_percentage = LOW_BATTERY_LIMIT;
bool light_on = false;
bool previous_button_state = NOT_PRESSED;
bool charging = true;

void loop() {
  int current_charging_rate = analogRead(CHARGING_RATE);

  float new_charge = current_charging_rate * CHARGE_PER_LIGHT_UNIT;

  if (charging) {
    battery_charge_percentage += new_charge;
  }

  if (light_on) {
    battery_charge_percentage = battery_charge_percentage - (CHARGE_PER_LIGHT_UNIT * AVERAGE_CHARGE_LEVEL * .8);
  }

  if (light_on && battery_charge_percentage < LOW_BATTERY_LIMIT) {
    digitalWrite(LIGHT, OFF);
    light_on = false;
  }

  if (battery_charge_percentage < RESUME_CHARGING_AT) {
    charging = true;
  }

  if (battery_charge_percentage > HIGH_BATTERY_LIMIT) {
    charging = false;
  }

  Serial.print(0);
  Serial.print("", "");
  Serial.print(100);
  Serial.print("", "");
  Serial.print(battery_charge_percentage);
  Serial.print("", "");
  Serial.println(map(current_charging_rate, 0, 1023, 0, 100));

  uint8_t button_state = digitalRead(LIGHT_BUTTON);

  if (button_state != previous_button_state) {
    if (button_state == PRESSED) {
      if (light_on) {
        digitalWrite(LIGHT, LOW);
        light_on = false;
      } else {
        digitalWrite(LIGHT, HIGH);
        light_on = true;
      }
    }
    previous_button_state = button_state;
  }

  delay(1000 / LOOPS_PER_SECOND);
}
"
5R3t4S9n,Untitled,Bacon_Script,Lua,Wednesday 29th of May 2024 06:37:06 AM CDT,"local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = ""Vlorp Script | Adopt Me [5.6]"", HidePremium = false, SaveConfig = true, ConfigFolder = ""OrionTest""})

--[[
Name = <string> - The name of the UI.
HidePremium = <bool> - Whether or not the user details shows Premium status or not.
SaveConfig = <bool> - Toggles the config saving in the UI.
ConfigFolder = <string> - The name of the folder where the configs are saved.
IntroEnabled = <bool> - Whether or not to show the intro animation.
IntroText = <string> - Text to show in the intro animation.
IntroIcon = <string> - URL to the image you want to use in the intro animation.
Icon = <string> - URL to the image you want displayed on the window.
CloseCallback = <function> - Function to execute when the window is closed.
]]

local Tab = Window:MakeTab({
	Name = ""Pet Spawner"",
	Icon = ""rbxassetid://17655111011"",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddTextbox({
	Name = ""üêïPet Name"",
	Default = ""Pet Name"",
	TextDisappear = true,
	Callback = function(Value)
		print(Value)
	end	  
})

--[[
Name = <string> - The name of the textbox.
Default = <string> - The default value of the textbox.
TextDisappear = <bool> - Makes the text disappear in the textbox after losing focus.
Callback = <function> - The function of the textbox.
]]

Tab:AddToggle({
	Name = ""üëÜClick To Spawn Pet"",
	Default = false,
	Callback = function(Value)
		print(Value)
	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]

local Tab = Window:MakeTab({
	Name = ""Trade Scam"",
	Icon = ""rbxassetid://17655125473"",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddTextbox({
	Name = ""Username"",
	Default = ""Username"",
	TextDisappear = false,
	Callback = function(Value)
		print(Value)
	end	  
})

--[[
Name = <string> - The name of the textbox.
Default = <string> - The default value of the textbox.
TextDisappear = <bool> - Makes the text disappear in the textbox after losing focus.
Callback = <function> - The function of the textbox.
]]

Tab:AddToggle({
	Name = ""üßäFreeze Trade"",
	Default = false,
	Callback = function(Value)
		OrionLib:MakeNotification({
	Name = ""Freeze Trade Enabled!"",
	Content = ""your pet is now safe... remove all your pets now!"",
	Image = ""rbxassetid://4483345998"",
	Time = 5
})

--[[
Title = <string> - The title of the notification.
Content = <string> - The content of the notification.
Image = <string> - The icon of the notification.
Time = <number> - The duration of the notfication.
]]
	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]

Tab:AddToggle({
	Name = ""Anti Leave Player"",
	Default = false,
	Callback = function(Value)
		print(Value)
	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]

local Tab = Window:MakeTab({
	Name = ""Egg Spawner"",
	Icon = ""rbxassetid://17655164596"",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddTextbox({
	Name = ""ü•öEgg Name"",
	Default = ""Egg Name"",
	TextDisappear = true,
	Callback = function(Value)
		print(Value)
	end	  
})

--[[
Name = <string> - The name of the textbox.
Default = <string> - The default value of the textbox.
TextDisappear = <bool> - Makes the text disappear in the textbox after losing focus.
Callback = <function> - The function of the textbox.
]]

Tab:AddToggle({
	Name = ""üëÜStart Egg Spawn"",
	Default = false,
	Callback = function(Value)
		print(Value)
	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]

local Tab = Window:MakeTab({
	Name = ""Pet Dupe"",
	Icon = ""rbxassetid://17655185677"",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddTextbox({
	Name = ""üêïPet Name"",
	Default = ""Pet Name"",
	TextDisappear = true,
	Callback = function(Value)
		print(Value)
	end	  
})

--[[
Name = <string> - The name of the textbox.
Default = <string> - The default value of the textbox.
TextDisappear = <bool> - Makes the text disappear in the textbox after losing focus.
Callback = <function> - The function of the textbox.
]]

Tab:AddToggle({
	Name = ""Start Pet Dupe"",
	Default = false,
	Callback = function(Value)
		print(Value)
	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]

local Tab = Window:MakeTab({
	Name = ""Egg Spawner"",
	Icon = ""rbxassetid://17655202940"",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddTextbox({
	Name = ""ü•öEgg Name"",
	Default = ""Egg Name"",
	TextDisappear = true,
	Callback = function(Value)
		print(Value)
	end	  
})

--[[
Name = <string> - The name of the textbox.
Default = <string> - The default value of the textbox.
TextDisappear = <bool> - Makes the text disappear in the textbox after losing focus.
Callback = <function> - The function of the textbox.
]]

Tab:AddToggle({
	Name = ""Start Egg Dupe"",
	Default = false,
	Callback = function(Value)
		print(Value)
	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]
"
ithtXWf0,"""LED Toggle"" rev_01",pleasedontcode,Arduino,Wednesday 29th of May 2024 06:24:09 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""LED Toggle""
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-29 11:23:17

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* blinking led when preesed button and stops */
	/* blinking when pressed button */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <EasyButton.h>  // https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void onButtonPressed();
void updateOutputs();

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t Button1_PushButton_PIN_D4 = 4;

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t visualFeedbackLED_LED_PIN_D13 = 13;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool visualFeedbackLED_LED_PIN_D13_rawData = false;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float visualFeedbackLED_LED_PIN_D13_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
EasyButton button(Button1_PushButton_PIN_D4);  // Initialize EasyButton instance

void setup(void)
{
  // put your setup code here, to run once:
  Serial.begin(115200);
  Serial.println();
  Serial.println("">>> EasyButton pressed example <<<"");

  pinMode(Button1_PushButton_PIN_D4, INPUT_PULLUP);
  pinMode(visualFeedbackLED_LED_PIN_D13, OUTPUT);

  button.begin();
  button.onPressed(onButtonPressed);
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  button.read();  // Continuously read the status of the button
  updateOutputs();  // Refresh output data
}

void onButtonPressed()
{
  Serial.println(""Button pressed"");
  visualFeedbackLED_LED_PIN_D13_rawData = !visualFeedbackLED_LED_PIN_D13_rawData;  // Toggle LED state
}

void updateOutputs()
{
  if (visualFeedbackLED_LED_PIN_D13_rawData) {
    // Blinking LED when button is pressed
    digitalWrite(visualFeedbackLED_LED_PIN_D13, HIGH);
    delay(500);
    digitalWrite(visualFeedbackLED_LED_PIN_D13, LOW);
    delay(500);
  } else {
    // Turn off LED when button is not pressed
    digitalWrite(visualFeedbackLED_LED_PIN_D13, LOW);
  }
}

/* END CODE */"
qiJCkTan,Untitled,B33peen,Dart,Wednesday 29th of May 2024 06:04:52 AM CDT,"import 'package:flutter/material.dart';
import 'package:hi_foods_business/modules/loyalty_program/model/sort_restaurant_user_enum.dart';
import 'package:webview_flutter/webview_flutter.dart';

class CalendlyBookingPage extends StatefulWidget {
  CalendlyBookingPage({Key? key}) : super(key: key);

  @override
  State<CalendlyBookingPage> createState() => _CalendlyBookingPageState();
}

class _CalendlyBookingPageState extends State<CalendlyBookingPage> {
  late final WebViewController controller;
  int prg = 0;
  ValueNotifier<bool> bookingsuccess = ValueNotifier(false);
  @override
  void initState() {
    bookingsuccess.addListener(() {
      if (bookingsuccess.value) {
        showAlertDialog(context);
      }
    });
    controller = WebViewController()
      ..setJavaScriptMode(JavaScriptMode.unrestricted)
      ..setBackgroundColor(const Color(0x00000000))
      ..setNavigationDelegate(
        NavigationDelegate(
          onProgress: (int progress) {
            setState(() {
              prg = progress;
            });
          },
          onPageStarted: (String url) {},
          onPageFinished: (String url) {},
          onUrlChange: (change) {
            print(change.url);
            if ((change.url ?? """").startsWith(
                ""https://calendly.com/avishek-vdla/consultation/invitees/"")) {
              setState(() {
                bookingsuccess.value = true;
              });
            }
          },
          onWebResourceError: (WebResourceError error) {},
        ),
      )
      ..loadRequest(Uri.parse(
        'https://calendly.com/avishek-vdla/consultation?preview_source=et_card&month=2024-05',
      ));
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: prg != 100
            ? Center(child: Text('Loading $prg %'))
            : WebViewWidget(
                controller: controller,
              ),
      ),
    );
  }
}

showAlertDialog(BuildContext context) {
  // set up the button
  Widget okButton = TextButton(
    child: Text(""OK""),
    onPressed: () {
      Navigator.of(context).pop();
    },
  );

  // set up the AlertDialog
  AlertDialog alert = AlertDialog(
    title: Text(""Success""),
    content: Text(""Lu Success vayo ni. Aba mah gardeu""),
    actions: [
      okButton,
    ],
  );

  // show the dialog
  showDialog(
    context: context,
    builder: (BuildContext context) {
      return alert;
    },
  );
}
"
VKVCCtR3,ü§ë G2A.com Free Gift Card Guide May 2024 FIX ü§ë,jusst2k4,GetText,Wednesday 29th of May 2024 06:04:34 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_864367.pdf

Working as of:
29 May 2024"
ZgdGdKue,Untitled,B33peen,Dart,Wednesday 29th of May 2024 06:04:27 AM CDT,"import 'package:flutter/material.dart';
import 'package:hi_foods_business/modules/loyalty_program/model/sort_restaurant_user_enum.dart';
import 'package:webview_flutter/webview_flutter.dart';

class CalendlyBookingPage extends StatefulWidget {
  CalendlyBookingPage({Key? key}) : super(key: key);

  @override
  State<CalendlyBookingPage> createState() => _CalendlyBookingPageState();
}

class _CalendlyBookingPageState extends State<CalendlyBookingPage> {
  late final WebViewController controller;
  int prg = 0;
  ValueNotifier<bool> bookingsuccess = ValueNotifier(false);
  @override
  void initState() {
    bookingsuccess.addListener(() {
      if (bookingsuccess.value) {
        showAlertDialog(context);
      }
    });
    controller = WebViewController()
      ..setJavaScriptMode(JavaScriptMode.unrestricted)
      ..setBackgroundColor(const Color(0x00000000))
      ..setNavigationDelegate(
        NavigationDelegate(
          onProgress: (int progress) {
            setState(() {
              prg = progress;
            });
          },
          onPageStarted: (String url) {},
          onPageFinished: (String url) {},
          onUrlChange: (change) {
            print(change.url);
            if ((change.url ?? """").startsWith(
                ""https://calendly.com/avishek-vdla/consultation/invitees/"")) {
              setState(() {
                bookingsuccess.value = true;
              });
            }
          },
          onWebResourceError: (WebResourceError error) {},
        ),
      )
      ..loadRequest(Uri.parse(
        'https://calendly.com/avishek-vdla/consultation?preview_source=et_card&month=2024-05',
      ));
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: prg != 100
            ? Center(child: Text('Loading $prg %'))
            : WebViewWidget(
                controller: controller,
              ),
      ),
    );
  }
}

showAlertDialog(BuildContext context) {
  // set up the button
  Widget okButton = TextButton(
    child: Text(""OK""),
    onPressed: () {
      Navigator.of(context).pop();
    },
  );

  // set up the AlertDialog
  AlertDialog alert = AlertDialog(
    title: Text(""Success""),
    content: Text(""Lu Success vayo ni.""),
    actions: [
      okButton,
    ],
  );

  // show the dialog
  showDialog(
    context: context,
    builder: (BuildContext context) {
      return alert;
    },
  );
}
"
M63W0E3D,data941,TestGuy1,JSON,Wednesday 29th of May 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '3bf7a7698e8e1c8fddae5e9b9793496d122a89d4195023d0193de4372acba01947a7ceb61c8416b7028d1943222e2ac9a4b7d845f0181f570e0d8df98a912691c7779fa09436b7994bb62261ee1c6e379d78de42a0c88b7480036836eaeba2741b9379a3eda2ccd61bad4560e63f353a10f4f40210afee2cf71ba4f77be922dc',
  otherdata: [
    'cae0898cd1358b5236cd543f6b06576a',
    '18452c5e8df7293ae5118d1e604a4e2f',
    '8bc100992fb5a662c22e2c0874fb2f95',
    '903d6dc798e7687e863da3c98f561c22',
    '6e16b18415608c8eeca11639773d412e',
    '91507df11522f582b50134dd68a39ca6',
    'bcf4ead79d592a69a2ea75be9f2ae85f',
    'd16908adbbea2ac8274bfd45fc572c73'
  ]
}"
dQ2vTy2p,Update Azure PowerShell Modules,guyrleech,PowerShell,Wednesday 29th of May 2024 05:56:25 AM CDT,"## update Azure PowerShell modules that have newer versions available. Run elevated since uses -Scope AllUsers

## to just show what modules are not at the latest version, delete the code from ""| Where""

Get-Module -ListAvailable az.*|sort name,version|group Name|select Name,@{n='LatestInstalled';e={$_.group[-1].version}},@{n='LatestAvailable';e={$script:latest = (find-module -Name $_.Name).Version;$script:latest}},@{n='UpdateAvailable';e={$script:latest -gt $_.group[-1].version}}|Where UpdateAvailable|% { $_.Name ;  Update-module -Name $_.Name -Scope AllUsers -Force }"
51WvwQUy,Pascal_hello,Vitaliy_Novichikhin,Pascal,Wednesday 29th of May 2024 05:44:03 AM CDT,"program Hello;
begin
  writeln ('Hello, world!')
end."
xCe3nG0f,üí∏G2A.com Free Gift Card Guide 2024 Mayü§ë,FeasModz514,Python,Wednesday 29th of May 2024 05:42:04 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_8321519.pdf

Working as of:

29 May 2024"
CvYUNunA,ü§ëG2A.com Free Gift Card Guide 2024 Mayüî•,kjihu25,Python,Wednesday 29th of May 2024 05:36:02 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_8321519.pdf

Working as of:

29 May 2024"
kaVb31wN,test,pierrejean,Lua,Wednesday 29th of May 2024 05:35:31 AM CDT,"while true do
    local modem = peripheral.find(""modem"") -- Trouve le premier modem disponible
    if modem then
        print(""Entrez votre message :"")
        local message = io.read() -- Lit l'entr√©e de l'utilisateur
        modem.transmit(1, 1, message) -- Envoie le message de l'utilisateur sur le canal 1
    end
end
"
MgrXkwbd,expressions,b_gandurov,C#,Wednesday 29th of May 2024 05:33:56 AM CDT,"using System;
using System.Linq;

public class Program
{
    public static void Main(string[] args)
    {
        Console.WriteLine(SolveExpression(Console.ReadLine()));
    }

    public static int SolveExpression(string? expression, int position = 0)
    {
        if (expression[0] == ')')
        {
            return 0;
        }
        string num = """";
        for (int i = 0; i < expression.Substring(position).Length; i++)
        {

            if (!""/*-+()"".Contains(expression[i]))
            {
                num += expression[i];
            }
            else
            {
                position = i;
                switch (expression[i])
                {
                    case '+':
                        return int.Parse(num) + SolveExpression(expression.Substring(position + 1), position);
                    case '-':
                        return int.Parse(num) - SolveExpression(expression.Substring(position + 1), position);
                    case '*':
                        return int.Parse(num) * SolveExpression(expression.Substring(position + 1), position);
                    case '/':
                        return int.Parse(num) / SolveExpression(expression.Substring(position + 1), position);

                }
            }

        }
        return int.Parse(num);


    }
}
"
CbJ47wdG,files,b_gandurov,C#,Wednesday 29th of May 2024 05:32:35 AM CDT,"using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection.Emit;
using System.Text;
using static System.Net.WebRequestMethods;

namespace DSA
{
    public class FileUtils
    {
        public const string Path = @""..\..\..\Images"";
        public static List<string> files = new List<string>();
        public static Dictionary<string, int> stats = new Dictionary<string, int>();


        public static string GetFileExtension(string filePath)
        {
            int lastIndex = filePath.LastIndexOf('.');

            return filePath[lastIndex..];
        }

        public static string GetFileName(string path)
        {
            int lastIndex = path.LastIndexOf('\\') + 1;
            string lastPart = path[lastIndex..];
            return lastPart;
        }

        public static string TraverseDirectories(string path, int level = 0)
        {
            var indentation = new string(' ', level * 2);
            var result = $""{indentation}{GetFileName(path)}:\n"";

            foreach (var file in Directory.GetFiles(path))
            {
                result += $""{indentation + new string(' ', 2)}{GetFileName(file)}\n"";
            }

            foreach (var directory in Directory.GetDirectories(path))
            {
                result += TraverseDirectories(directory, level + 1);
            }

            return result;
        }

        public static List<string> FindFiles(string path, string extension)
        {

            foreach (var file in Directory.GetFiles(path))
            {
                if (GetFileExtension(file).Equals(extension))
                {
                    files.Add(GetFileName(file));
                }
            }

            foreach (var directory in Directory.GetDirectories(path))
            {
                FindFiles(directory, extension);
            }

            return files;
        }

        public static bool FileExists(string path, string fileName)
        {
            foreach (var file in Directory.GetFiles(path))
            {
                if (GetFileName(file).Equals(fileName))
                {
                    return true;
                }
            }

            foreach (var directory in Directory.GetDirectories(path))
            {
                if (FileExists(directory, fileName))
                {
                    return true;
                }
            }

            return false;
        }

        public static Dictionary<string, int> GetDirectoryStats(string path)
        {

            foreach (var file in Directory.GetFiles(path))
            {
                var extension = GetFileExtension(file);
                if (!stats.ContainsKey(extension))
                {
                    stats[extension] = 0;
                }
                stats[extension]++;
            }

            foreach (var directory in Directory.GetDirectories(path))
            {
                GetDirectoryStats(directory);
            }

            return stats;
        }
    }
}

"
iudVewan,kotlin contracts,marcgruita,Kotlin,Wednesday 29th of May 2024 05:27:09 AM CDT,"import kotlin.contracts.ExperimentalContracts
import kotlin.contracts.contract

open class Base

class ChildOne: Base() {
    fun childOneFunc() {
        println(""salut"")
    }
}

class ChildTwo: Base()

@OptIn(ExperimentalContracts::class)
fun funcThatExitsIfNotChildTwo(inst: Base) {
    contract {
        returns() implies (inst is ChildOne)
    }

    if (inst !is ChildOne) {
        error(""nu e"")
    }
}

fun main() {
    val inst: Base = ChildOne()
    funcThatExitsIfNotChildTwo(inst)

    inst.childOneFunc()
}
"
ZsCwu9PB,rep√®re,pierrejean,Lua,Wednesday 29th of May 2024 05:17:47 AM CDT,"local sides = {""left"", ""right"", ""top"", ""bottom"", ""front"", ""back""}

for _, side in ipairs(sides) do
    local device = peripheral.wrap(side)
    if device then
        print(""P√©riph√©rique sur "" .. side .. "": "" .. peripheral.getType(side))
    else
        print(""Aucun p√©riph√©rique sur "" .. side)
    end
end
"
8px4ShTc,üí∏G2A.com Free Gift Card Guide 2024 Mayü§ë,Garoam,Python,Wednesday 29th of May 2024 05:11:53 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_8321519.pdf

Working as of:

29 May 2024"
D7yfT2rw,Format JSON Hak Akses DocuMess,zectra,JSON,Wednesday 29th of May 2024 05:03:22 AM CDT,"{
  ""success"": true,
  ""rc"": 200,
  ""message"": ""Nama pengguna inodreamstudio berhasil login"",
  ""token"": ""1|IDS|zw7UZf2T9u6Zy3Pkkt8c3xeH4WGN204p3MAUjgQb9f5d408a"",
  ""hak_akses"": [
    {
      ""role_name"": ""SKPD"",
      ""permissions"": {
        ""menus"": [
          {
            ""menu_name"": ""Beranda"",
            ""access"": true
          },
          {
            ""menu_name"": ""Kredential dan Pengawai"",
            ""access"": false
          },
          {
            ""menu_name"": ""Suat Masuk"",
            ""access"": false
          },
          {
            ""menu_name"": ""Surat Keluar"",
            ""access"": true
          },
          {
            ""menu_name"": ""Disposisi Surat"",
            ""access"": true
          },
          {
            ""menu_name"": ""Hak Akses"",
            ""access"": false
          }
        ],
        ""crud_permissions"": {
          ""SuratKeluar"": {
            ""create"": true,
            ""read"": true,
            ""update"": true,
            ""delete"": true
          }
        }
      }
    }
  ]
}"
XKkevw7a,ü§ëG2A.com Free Gift Card Guide 2024 Mayü§ë,lookos13,Python,Wednesday 29th of May 2024 04:59:48 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_8321519.pdf

Working as of:

29 May 2024"
UXDeDhVP,üí∏G2A.com Free Gift Card Guide 2024 MayüöÄ,pestinha,Python,Wednesday 29th of May 2024 04:53:46 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_8321519.pdf

Working as of:

29 May 2024"
kWccycNX,FLY SCRIPT,zecartou_YTB,Lua,Wednesday 29th of May 2024 04:52:10 AM CDT,"do local GUIFLYC5G2=Instance.new(""ScreenGui"");local Frame=Instance.new(""Frame"");local CheatName=Instance.new(""TextLabel"");local Close=Instance.new(""TextButton"");local Content=Instance.new(""Frame"");local ADD=Instance.new(""TextButton"");local UICorner=Instance.new(""UICorner"");local REMOVE=Instance.new(""TextButton"");local UICorner_2=Instance.new(""UICorner"");local Fly=Instance.new(""TextButton"");local UICorner_3=Instance.new(""UICorner"");local CurrentSpeed=Instance.new(""TextLabel"");local UICorner_4=Instance.new(""UICorner"");local KeyBox=Instance.new(""TextBox"");local Key=Instance.new(""TextLabel"");local UICorner_5=Instance.new(""UICorner"");GUIFLYC5G2.Name=""GUI-FLY?-C5G2"";GUIFLYC5G2.Parent=game.Players.LocalPlayer:WaitForChild(""PlayerGui"");GUIFLYC5G2.DisplayOrder=999999999;GUIFLYC5G2.ResetOnSpawn=false;Frame.Parent=GUIFLYC5G2;Frame.Active=true;Frame.BackgroundColor3=Color3.fromRGB(0,0,0);Frame.BackgroundTransparency=0.5;Frame.BorderColor3=Color3.fromRGB(0,0,0);Frame.BorderSizePixel=0;Frame.Draggable=true;Frame.Position=UDim2.new(0.100320175,0,0.379746825,0);Frame.Size=UDim2.new(0,270,0,31);CheatName.Name=""CheatName"";CheatName.Parent=Frame;CheatName.BackgroundColor3=Color3.fromRGB(255,255,255);CheatName.BackgroundTransparency=1;CheatName.BorderColor3=Color3.fromRGB(0,0,0);CheatName.BorderSizePixel=0;CheatName.Size=UDim2.new(0,207,0,31);CheatName.ZIndex=100;CheatName.Font=Enum.Font.SourceSansBold;CheatName.Text=""FLY GUI"";CheatName.TextColor3=Color3.fromRGB(255,255,255);CheatName.TextScaled=true;CheatName.TextSize=14;CheatName.TextWrapped=true;Close.Name=""Close"";Close.Parent=Frame;Close.BackgroundColor3=Color3.fromRGB(255,255,255);Close.BackgroundTransparency=1;Close.BorderSizePixel=0;Close.Position=UDim2.new(0.885185182,0, -0.870967746,27);Close.Size=UDim2.new(0,31,0,31);Close.Font=Enum.Font.SourceSansBold;Close.Text=""√ó"";Close.TextColor3=Color3.fromRGB(255,255,255);Close.TextSize=30;Content.Name=""Content"";Content.Parent=Frame;Content.BackgroundColor3=Color3.fromRGB(0,0,0);Content.BackgroundTransparency=0.5;Content.BorderColor3=Color3.fromRGB(0,0,0);Content.BorderSizePixel=0;Content.Position=UDim2.new(0,0,1.06451619,0);Content.Size=UDim2.new(0,270,0,99);ADD.Name=""ADD"";ADD.Parent=Content;ADD.BackgroundColor3=Color3.fromRGB(0,255,0);ADD.BackgroundTransparency=1;ADD.BorderColor3=Color3.fromRGB(0,0,0);ADD.BorderSizePixel=0;ADD.Size=UDim2.new(0,50,0,49);ADD.Visible=false;ADD.Font=Enum.Font.SourceSansBold;ADD.Text=""+"";ADD.TextColor3=Color3.fromRGB(0,0,0);ADD.TextScaled=true;ADD.TextSize=14;ADD.TextTransparency=1;ADD.TextWrapped=true;UICorner.CornerRadius=UDim.new(0,5);UICorner.Parent=ADD;REMOVE.Name=""REMOVE"";REMOVE.Parent=Content;REMOVE.BackgroundColor3=Color3.fromRGB(0,255,0);REMOVE.BackgroundTransparency=1;REMOVE.BorderColor3=Color3.fromRGB(0,0,0);REMOVE.BorderSizePixel=0;REMOVE.Position=UDim2.new(0,0,0.504999995,0);REMOVE.Size=UDim2.new(0,50,0,49);REMOVE.Visible=false;REMOVE.Font=Enum.Font.SourceSansBold;REMOVE.Text=""-"";REMOVE.TextColor3=Color3.fromRGB(0,0,0);REMOVE.TextScaled=true;REMOVE.TextSize=14;REMOVE.TextTransparency=1;REMOVE.TextWrapped=true;UICorner_2.CornerRadius=UDim.new(0,5);UICorner_2.Parent=REMOVE;Fly.Name=""Fly"";Fly.Parent=Content;Fly.BackgroundColor3=Color3.fromRGB(0,255,0);Fly.BackgroundTransparency=1;Fly.BorderSizePixel=0;Fly.Position=UDim2.new(0.625,0, -0.0019999803,0);Fly.Size=UDim2.new(0,101,0,99);Fly.Visible=false;Fly.Font=Enum.Font.SourceSansBold;Fly.Text=""FLY"";Fly.TextColor3=Color3.fromRGB(0,0,0);Fly.TextScaled=true;Fly.TextSize=14;Fly.TextTransparency=1;Fly.TextWrapped=true;UICorner_3.CornerRadius=UDim.new(0,5);UICorner_3.Parent=Fly;CurrentSpeed.Name=""CurrentSpeed"";CurrentSpeed.Parent=Content;CurrentSpeed.BackgroundColor3=Color3.fromRGB(255,255,255);CurrentSpeed.BackgroundTransparency=1;CurrentSpeed.BorderColor3=Color3.fromRGB(0,0,0);CurrentSpeed.BorderSizePixel=0;CurrentSpeed.Position=UDim2.new(0.183430761,0, -0.0132751465,0);CurrentSpeed.Size=UDim2.new(0,119,0,101);CurrentSpeed.Visible=false;CurrentSpeed.Font=Enum.Font.SourceSansBold;CurrentSpeed.Text=""1"";CurrentSpeed.TextColor3=Color3.fromRGB(255,255,255);CurrentSpeed.TextScaled=true;CurrentSpeed.TextSize=14;CurrentSpeed.TextTransparency=1;CurrentSpeed.TextWrapped=true;UICorner_4.CornerRadius=UDim.new(0,5);UICorner_4.Parent=Content;KeyBox.Name=""KeyBox"";KeyBox.Parent=Content;KeyBox.BackgroundColor3=Color3.fromRGB(255,255,255);KeyBox.BackgroundTransparency=1;KeyBox.BorderColor3=Color3.fromRGB(0,0,0);KeyBox.BorderSizePixel=0;KeyBox.Position=UDim2.new(0.129629627,0,0.454545468,0);KeyBox.Size=UDim2.new(0,200,0,50);KeyBox.ClearTextOnFocus=false;KeyBox.Font=Enum.Font.SourceSansBold;KeyBox.PlaceholderColor3=Color3.fromRGB(200,200,200);KeyBox.PlaceholderText=""KEY"";KeyBox.Text="""";KeyBox.TextColor3=Color3.fromRGB(255,255,255);KeyBox.TextScaled=true;KeyBox.TextSize=14;KeyBox.TextTransparency=1;KeyBox.TextWrapped=true;Key.Name=""Key"";Key.Parent=Content;Key.BackgroundColor3=Color3.fromRGB(255,255,255);Key.BackgroundTransparency=1;Key.BorderColor3=Color3.fromRGB(0,0,0);Key.BorderSizePixel=0;Key.Position=UDim2.new(0,31,0,7);Key.Size=UDim2.new(0,207,0,31);Key.ZIndex=100;Key.Font=Enum.Font.SourceSansBold;Key.Text=""Enter Key"";Key.TextColor3=Color3.fromRGB(255,255,255);Key.TextScaled=true;Key.TextSize=14;Key.TextTransparency=1;Key.TextWrapped=true;UICorner_5.CornerRadius=UDim.new(0,5);UICorner_5.Parent=Frame;local function UWXG_fake_script() local script=Instance.new(""LocalScript"",Close);TweenTime=0.5;script.Parent.MouseButton1Click:Connect(function() game:GetService(""TweenService""):Create(script.Parent.Parent.Content.ADD,TweenInfo.new(TweenTime),{BackgroundTransparency=1}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent.Content.Fly,TweenInfo.new(TweenTime),{BackgroundTransparency=1}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent.Content.REMOVE,TweenInfo.new(TweenTime),{BackgroundTransparency=1}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent.Content.ADD,TweenInfo.new(TweenTime),{TextTransparency=1}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent.Content.Fly,TweenInfo.new(TweenTime),{TextTransparency=1}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent.Content.REMOVE,TweenInfo.new(TweenTime),{TextTransparency=1}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent.Content.CurrentSpeed,TweenInfo.new(TweenTime),{TextTransparency=1}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent.Content.Key,TweenInfo.new(TweenTime),{TextTransparency=1}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent.Content.KeyBox,TweenInfo.new(TweenTime),{TextTransparency=1}):Play();wait(TweenTime);game:GetService(""TweenService""):Create(script.Parent.Parent.Close,TweenInfo.new(TweenTime),{TextTransparency=1}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent.Close,TweenInfo.new(TweenTime),{BorderSizePixel=0}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent.Close,TweenInfo.new(TweenTime),{BackgroundTransparency=1}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent.CheatName,TweenInfo.new(TweenTime),{TextTransparency=1}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent.CheatName,TweenInfo.new(TweenTime),{BorderSizePixel=0}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent.CheatName,TweenInfo.new(TweenTime),{BackgroundTransparency=1}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent,TweenInfo.new(TweenTime),{BackgroundTransparency=1}):Play();game:GetService(""TweenService""):Create(script.Parent.Parent.Content,TweenInfo.new(TweenTime),{BackgroundTransparency=1}):Play();wait(TweenTime);game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Health=0;script.Parent.Parent.Parent:Destroy();end);end coroutine.wrap(UWXG_fake_script)();local function LYQFA_fake_script() local script=Instance.new(""LocalScript"",Frame);local main=script.Parent.Parent;local Frame=script.Parent;local onof=Frame.Content.Fly;local speed=Frame.Content.CurrentSpeed;local plus=Frame.Content.ADD;local mine=Frame.Content.REMOVE;speeds=1;local speaker=game:GetService(""Players"").LocalPlayer;local chr=game.Players.LocalPlayer.Character;local hum=chr and chr:FindFirstChildWhichIsA(""Humanoid"") ;nowe=false;game:GetService(""StarterGui""):SetCore(""SendNotification"",{Title=""Fly Gui"",Text=""By zecartou"",Icon=""rbxthumb://type=Asset&id=5107182114&w=150&h=150""});Duration=5;Frame.Draggable=true;onof.MouseButton1Down:connect(function() if (nowe==true) then nowe=false;speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true);speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics);else nowe=true;for i=1,speeds do spawn(function() local hb=game:GetService(""RunService"").Heartbeat;tpwalking=true;local chr=game.Players.LocalPlayer.Character;local hum=chr and chr:FindFirstChildWhichIsA(""Humanoid"") ;while tpwalking and hb:Wait() and chr and hum and hum.Parent  do if (hum.MoveDirection.Magnitude>0) then chr:TranslateBy(hum.MoveDirection);end end end);end game.Players.LocalPlayer.Character.Animate.Disabled=true;local Char=game.Players.LocalPlayer.Character;local Hum=Char:FindFirstChildOfClass(""Humanoid"") or Char:FindFirstChildOfClass(""AnimationController"") ;for i,v in next,Hum:GetPlayingAnimationTracks() do v:AdjustSpeed(0);end speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false);speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false);speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming);end if (game:GetService(""Players"").LocalPlayer.Character:FindFirstChildOfClass(""Humanoid"").RigType==Enum.HumanoidRigType.R6) then local plr=game.Players.LocalPlayer;local torso=plr.Character.Torso;local flying=true;local deb=true;local ctrl={f=0,b=0,l=0,r=0};local lastctrl={f=0,b=0,l=0,r=0};local maxspeed=50;local speed=0;local bg=Instance.new(""BodyGyro"",torso);bg.P=90000;bg.maxTorque=Vector3.new(8999999488,8999999488,8999999488);bg.cframe=torso.CFrame;local bv=Instance.new(""BodyVelocity"",torso);bv.velocity=Vector3.new(0,0.1,0);bv.maxForce=Vector3.new(8999999488,8999999488,8999999488);if (nowe==true) then plr.Character.Humanoid.PlatformStand=true;end while (nowe==true) or (game:GetService(""Players"").LocalPlayer.Character.Humanoid.Health==0)  do game:GetService(""RunService"").RenderStepped:Wait();if (((ctrl.l + ctrl.r)~=0) or ((ctrl.f + ctrl.b)~=0)) then speed=speed + 0.5 + (speed/maxspeed) ;if (speed>maxspeed) then speed=maxspeed;end elseif ( not (((ctrl.l + ctrl.r)~=0) or ((ctrl.f + ctrl.b)~=0)) and (speed~=0)) then speed=speed-1 ;if (speed<0) then speed=0;end end if (((ctrl.l + ctrl.r)~=0) or ((ctrl.f + ctrl.b)~=0)) then bv.velocity=((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f + ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l + ctrl.r ,(ctrl.f + ctrl.b) * 0.2 ,0).p) -game.Workspace.CurrentCamera.CoordinateFrame.p)) * speed ;lastctrl={f=ctrl.f,b=ctrl.b,l=ctrl.l,r=ctrl.r};elseif (((ctrl.l + ctrl.r)==0) and ((ctrl.f + ctrl.b)==0) and (speed~=0)) then bv.velocity=((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f + lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l + lastctrl.r ,(lastctrl.f + lastctrl.b) * 0.2 ,0).p) -game.Workspace.CurrentCamera.CoordinateFrame.p)) * speed ;else bv.velocity=Vector3.new(0,0,0);end bg.cframe=game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles( -math.rad(((ctrl.f + ctrl.b) * 50 * speed)/maxspeed ),0,0) ;end ctrl={f=0,b=0,l=0,r=0};lastctrl={f=0,b=0,l=0,r=0};speed=0;bg:Destroy();bv:Destroy();plr.Character.Humanoid.PlatformStand=false;game.Players.LocalPlayer.Character.Animate.Disabled=false;tpwalking=false;else local plr=game.Players.LocalPlayer;local UpperTorso=plr.Character.UpperTorso;local flying=true;local deb=true;local ctrl={f=0,b=0,l=0,r=0};local lastctrl={f=0,b=0,l=0,r=0};local maxspeed=50;local speed=0;local bg=Instance.new(""BodyGyro"",UpperTorso);bg.P=90000;bg.maxTorque=Vector3.new(8999999488,8999999488,8999999488);bg.cframe=UpperTorso.CFrame;local bv=Instance.new(""BodyVelocity"",UpperTorso);bv.velocity=Vector3.new(0,0.1,0);bv.maxForce=Vector3.new(8999999488,8999999488,8999999488);if (nowe==true) then plr.Character.Humanoid.PlatformStand=true;end while (nowe==true) or (game:GetService(""Players"").LocalPlayer.Character.Humanoid.Health==0)  do wait();if (((ctrl.l + ctrl.r)~=0) or ((ctrl.f + ctrl.b)~=0)) then speed=speed + 0.5 + (speed/maxspeed) ;if (speed>maxspeed) then speed=maxspeed;end elseif ( not (((ctrl.l + ctrl.r)~=0) or ((ctrl.f + ctrl.b)~=0)) and (speed~=0)) then speed=speed-1 ;if (speed<0) then speed=0;end end if (((ctrl.l + ctrl.r)~=0) or ((ctrl.f + ctrl.b)~=0)) then bv.velocity=((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f + ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l + ctrl.r ,(ctrl.f + ctrl.b) * 0.2 ,0).p) -game.Workspace.CurrentCamera.CoordinateFrame.p)) * speed ;lastctrl={f=ctrl.f,b=ctrl.b,l=ctrl.l,r=ctrl.r};elseif (((ctrl.l + ctrl.r)==0) and ((ctrl.f + ctrl.b)==0) and (speed~=0)) then bv.velocity=((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f + lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l + lastctrl.r ,(lastctrl.f + lastctrl.b) * 0.2 ,0).p) -game.Workspace.CurrentCamera.CoordinateFrame.p)) * speed ;else bv.velocity=Vector3.new(0,0,0);end bg.cframe=game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles( -math.rad(((ctrl.f + ctrl.b) * 50 * speed)/maxspeed ),0,0) ;end ctrl={f=0,b=0,l=0,r=0};lastctrl={f=0,b=0,l=0,r=0};speed=0;bg:Destroy();bv:Destroy();plr.Character.Humanoid.PlatformStand=false;game.Players.LocalPlayer.Character.Animate.Disabled=false;tpwalking=false;end end);local tis;game:GetService(""Players"").LocalPlayer.CharacterAdded:Connect(function(char) wait(0.7);game.Players.LocalPlayer.Character.Humanoid.PlatformStand=false;game.Players.LocalPlayer.Character.Animate.Disabled=false;end);plus.MouseButton1Down:connect(function() speeds=speeds + 1 ;speed.Text=speeds;if (nowe==true) then tpwalking=false;for i=1,speeds do spawn(function() local hb=game:GetService(""RunService"").Heartbeat;tpwalking=true;local chr=game.Players.LocalPlayer.Character;local hum=chr and chr:FindFirstChildWhichIsA(""Humanoid"") ;while tpwalking and hb:Wait() and chr and hum and hum.Parent  do if (hum.MoveDirection.Magnitude>0) then chr:TranslateBy(hum.MoveDirection);end end end);end end end);mine.MouseButton1Down:connect(function() if (speeds==1) then speed.Text=speeds;else speeds=speeds-1 ;speed.Text=speeds;if (nowe==true) then tpwalking=false;for i=1,speeds do spawn(function() local hb=game:GetService(""RunService"").Heartbeat;tpwalking=true;local chr=game.Players.LocalPlayer.Character;local hum=chr and chr:FindFirstChildWhichIsA(""Humanoid"") ;while tpwalking and hb:Wait() and chr and hum and hum.Parent  do if (hum.MoveDirection.Magnitude>0) then chr:TranslateBy(hum.MoveDirection);end end end);end end end end);end coroutine.wrap(LYQFA_fake_script)();local function GPOHY_fake_script() local script=Instance.new(""LocalScript"",Frame);wait(1);script.Parent.Visible=true;game:GetService(""TweenService""):Create(script.Parent.Content.Key,TweenInfo.new(0.5),{TextTransparency=0}):Play();game:GetService(""TweenService""):Create(script.Parent.Content.KeyBox,TweenInfo.new(0.5),{TextTransparency=0}):Play();script.Parent.Content.KeyBox.FocusLost:Connect(function() if (script.Parent.Content.KeyBox.Text==""2024FLYSYS"") then game:GetService(""TweenService""):Create(script.Parent.Content.Key,TweenInfo.new(0.5),{TextTransparency=1}):Play();game:GetService(""TweenService""):Create(script.Parent.Content.KeyBox,TweenInfo.new(0.5),{TextTransparency=1}):Play();wait(0.5);script.Parent.Content.KeyBox.Visible=false;script.Parent.Content.Key.Visible=false;script.Parent.Content.ADD.Visible=true;script.Parent.Content.REMOVE.Visible=true;script.Parent.Content.Fly.Visible=true;script.Parent.Content.CurrentSpeed.Visible=true;game:GetService(""TweenService""):Create(script.Parent.Content.ADD,TweenInfo.new(0.5),{BackgroundTransparency=0}):Play();game:GetService(""TweenService""):Create(script.Parent.Content.REMOVE,TweenInfo.new(0.5),{BackgroundTransparency=0}):Play();game:GetService(""TweenService""):Create(script.Parent.Content.Fly,TweenInfo.new(0.5),{BackgroundTransparency=0}):Play();game:GetService(""TweenService""):Create(script.Parent.Content.ADD,TweenInfo.new(0.5),{TextTransparency=0}):Play();game:GetService(""TweenService""):Create(script.Parent.Content.REMOVE,TweenInfo.new(0.5),{TextTransparency=0}):Play();game:GetService(""TweenService""):Create(script.Parent.Content.Fly,TweenInfo.new(0.5),{TextTransparency=0}):Play();game:GetService(""TweenService""):Create(script.Parent.Content.CurrentSpeed,TweenInfo.new(0.5),{TextTransparency=0}):Play();else script.Parent.Content.Key.Text=""Incorrect Key"";game:GetService(""TweenService""):Create(script.Parent.Content.Key,TweenInfo.new(0.5),{TextColor3=Color3.fromRGB(255,0,0)}):Play();wait(1);game:GetService(""TweenService""):Create(script.Parent.Content.Key,TweenInfo.new(0.5),{TextColor3=Color3.fromRGB(255,255,255)}):Play();script.Parent.Content.Key.Text=""Enter Key"";end end);end coroutine.wrap(GPOHY_fake_script)(); end"
YFWbRbEU,message,pierrejean,Lua,Wednesday 29th of May 2024 04:44:02 AM CDT,"local modem = peripheral.find(""modem"") -- Trouve le premier modem disponible
if modem then
    modem.transmit(1, 1, ""Bonjour, ordinateur de poche !"") -- Envoie un message sur le canal 1
end
"
2qJq3Ygf,Mechanical Engineering ‚Äì ANZSCO Code: 233512,ONEderland,HTML,Wednesday 29th of May 2024 04:43:37 AM CDT,https://onederland.com.au/mechanical-engineering-anzsco-code-233512/
2kWrQZhT,Cafe and Restaurant Manager PR Options 2024,ONEderland,HTML,Wednesday 29th of May 2024 04:41:40 AM CDT,https://onederland.com.au/cafe-and-restaurant-manager-pr-options/
wgivBT0V,ü§ëG2A.com Free Gift Card Guide 2024 Mayüí∞,pestinha,Python,Wednesday 29th of May 2024 04:34:20 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_0870798.pdf

Working as of:

29 May 2024"
6GqiQKtM,ordinateur de poche,pierrejean,Lua,Wednesday 29th of May 2024 04:34:05 AM CDT,"-- Sur l'ordinateur de poche
local modem = peripheral.find(""modem"") -- Trouve le premier modem disponible
if modem then
    modem.open(1) -- Ouvre le canal 1
end

while true do
    local event, modemSide, senderChannel, 
          replyChannel, message, senderDistance = os.pullEvent(""modem_message"")
    print(""Message re√ßu : "" .. tostring(message))
end
"
Zng7WxAc,Untitled,B33peen,Dart,Wednesday 29th of May 2024 04:22:43 AM CDT,"import 'package:flutter/foundation.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:hi_foods_business/modules/socials/cubit/facebook_connect/facebook_connect_cubit.dart';
import 'package:hi_foods_business/modules/socials/model/facebook_accountList_model.dart';
import 'package:hi_foods_business/modules/socials/model/facebook_connect_model.dart';
import 'package:hi_foods_business/modules/socials/repository/facebook_connect_repo.dart';
import 'package:webview_flutter/webview_flutter.dart';

import '../../../constants/api_constants.dart';
import '../../../constants/color_constant.dart';
import '../../auth/bloc/auth_cubit/auth_cubit.dart';

class FacebookConnectSheetWidget extends StatefulWidget {
  final String jwt;
  const FacebookConnectSheetWidget({
    required this.jwt,
    super.key,
  });

  @override
  State<FacebookConnectSheetWidget> createState() =>
      _FacebookConnectSheetWidgetState();
}

class _FacebookConnectSheetWidgetState
    extends State<FacebookConnectSheetWidget> {
  late final WebViewController webViewController;
  String userAgent =
      ""Mozilla/5.0 (Linux; U; Android 2.2.1; en-us; Nexus One Build/FRG83) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1"";
  bool processing = false;
  bool instaprocessing = false;
  @override
  void initState() {
    webViewController = WebViewController()
      ..setJavaScriptMode(JavaScriptMode.unrestricted)
      ..setBackgroundColor(const Color(0x00000000))
      ..setUserAgent(userAgent)
      ..enableZoom(true)
      ..setNavigationDelegate(
        NavigationDelegate(
          onProgress: (int progress) {},
          onPageStarted: (String url) {},
          onPageFinished: (String url) {},
          onWebResourceError: (WebResourceError error) {},
          onUrlChange: (UrlChange url) async {
            final uri = Uri.parse(url.url ?? ""https://hyteno.com"");
            final queryParams = uri.queryParameters;
            late FacebookConnectModel facebookConnectModel;

            if (queryParams['fbsuccess'] == ""true"") {
              facebookConnectModel = FacebookConnectModel(
                  accessToken: queryParams['accessToken']!,
                  expiryDate: queryParams['expiryDate']!,
                  refreshToken: queryParams['refreshToken']!,
                  pageToken: queryParams['pageToken'] ??
                      queryParams['page_token'] ??
                      """",
                  facebookPageId:
                      queryParams['facebook_account_id'].toString());
              processing = true;
              String refereshToken = await context
                  .read<FacebookConnectRepo>()
                  .fetchRefereshToken(
                      accessToken: facebookConnectModel.accessToken);
              facebookConnectModel =
                  facebookConnectModel.copyWith(accessToken: refereshToken);
              final FacebookAccount? account = await context
                  .read<FacebookConnectCubit>()
                  .facebookConnectRepo
                  .fetchPageToken(
                      access_token: facebookConnectModel.accessToken,
                      page_id: facebookConnectModel.facebookPageId!);
              if (account != null) {
                context
                    .read<FacebookConnectCubit>()
                    .setFacebookAccount(facebookAccount: account);
              }
              context.read<FacebookConnectCubit>().updateFacebookConnectModel(
                  facebookConnectModel: facebookConnectModel);
              await context.read<AuthCubit>().updateMetaInfo(
                  key: ""facebook"", value: facebookConnectModel.toString());
              context
                  .read<FacebookConnectCubit>()
                  .fetchFacebookPost(page_token: facebookConnectModel.pageToken)
                  .then((value) {
                context
                    .read<FacebookConnectCubit>()
                    .updateFacebookConnectStatus(
                        facebookConnectStaus: FacebookConnectStaus.connected);
              });
              processing = false;
            }
            if (queryParams['fbsuccess'] == ""true"" &&
                queryParams['instasuccess'] == ""true"") {
              instaprocessing = true;
              facebookConnectModel = facebookConnectModel.copyWith(
                  instagramPageId: queryParams['instagram_account_id']);
              context.read<FacebookConnectCubit>().updateFacebookConnectModel(
                  facebookConnectModel: facebookConnectModel);
              await context.read<AuthCubit>().updateMetaInfo(
                  key: ""facebook"", value: facebookConnectModel.toString());
              Navigator.pop(context);
              context.read<FacebookConnectCubit>().updateInstagramConnectStatus(
                  instagramConnectStatus: InstaConnectStaus.connected);
              context.read<FacebookConnectCubit>().fetchInstagramPost(
                  instaId: queryParams[""instagram_account_id""].toString(),
                  accessToken: queryParams['accessToken'] ?? """");
              instaprocessing = false;
            }
            if (queryParams['fbsuccess'] == ""true"" &&
                queryParams['instasuccess'] == ""false"") {
              Navigator.pop(context);
            }
          },
        ),
      )
      ..loadRequest(
          Uri.parse('${ApiContants.facebookConnectUrl}?jwt=${widget.jwt}'));

    super.initState();
  }

  final Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers = {
    Factory(() => EagerGestureRecognizer())
  };

  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: BoxDecoration(
        borderRadius: BorderRadius.only(
            topLeft: Radius.circular(12), topRight: Radius.circular(12)),
        color: ColorConstant.backgroundColor,
      ),
      width: MediaQuery.of(context).size.width,
      child: Column(
        children: [
          Container(
            height: 50,
            width: MediaQuery.of(context).size.width,
            decoration: BoxDecoration(
              borderRadius: BorderRadius.only(
                  topLeft: Radius.circular(12), topRight: Radius.circular(12)),
              color: ColorConstant.appbarbackgroundColor,
            ),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.end,
              children: [
                InkWell(
                  onTap: () {
                    if (instaprocessing != true && processing != true) {
                      Navigator.pop(context);
                    }
                  },
                  child: Padding(
                    padding: const EdgeInsets.symmetric(horizontal: 20),
                    child: Icon(Icons.close),
                  ),
                )
              ],
            ),
          ),
          Expanded(
            child: Container(
              width: MediaQuery.of(context).size.width,
              child: WebViewWidget(
                  gestureRecognizers: gestureRecognizers,
                  controller: webViewController),
            ),
          ),
        ],
      ),
    );
  }
}
"
d967jdyy,üí∞G2A.com Free Gift Card Guide 2024 MayüöÄ,pestinha,Python,Wednesday 29th of May 2024 04:21:35 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_7690024.pdf

Working as of:

29 May 2024"
xYN3yUkA,ü§ëG2A.com Free Gift Card Guide 2024 MayüöÄ,pestinha,Python,Wednesday 29th of May 2024 04:14:27 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_7624935.pdf

Working as of:

29 May 2024"
P4RG4MSD,data format,Tammu1000CP,JSON,Wednesday 29th of May 2024 04:12:52 AM CDT,"{
	""matchId"": ""should match raw data file id"",
	""matchOutcome"": ""victory/defeat"",
	""score"": {
		""won"": int,
		""lost"": int
	},
	
	""economy"": {
		""ecoRounds"": {
			""roundIndexes"": [array]
			""won"": int,
			""lost"": int,
			""total"": int,
			""winPercent"": float,
		},
		""buyRounds"": {
			""roundIndexes"": [array]
			""won"": int,
			""lost"": int,
			""total"": int,
			""winPercent"": float,
		},
		""forceRounds"": {
			""roundIndexes"": [array]
			""won"": int,
			""lost"": int,
			""total"": int,
			""winPercent"": float,
		},
		""ultRounds"": { 
			(not sure if possible at this point. are we                            tracking ult USAGE? or just ult availability)
			""roundIndexes"": [array]
			""won"": int,
			""lost"": int,
			""total"": int,
			""winPercent"": float,
		}
	},
	
	""conditionals"": {
		""attackRounds"": {
			""roundIndexes"": [array]
			""won"": int,
			""lost"": int,
			""total"": int,
			winPercent"": float,
		},
		""defenseRounds"": {
			""roundIndexes"": [array]
			""won"": int,
			""lost"": int,
			""total"": int,
			winPercent"": float,
		},
		""pistolRounds"": {
			""roundIndexes"": [array]
			""won"": int,
			""lost"": int,
			""total"": int,
			winPercent"": float,
		},
		""4v5Rounds"": {
			""roundIndexes"": [array]
			""won"": int,
			""lost"": int,
			""total"": int,
			winPercent"": float,
		},
		""5v4Rounds"": {
			""roundIndexes"": [array]
			""won"": int,
			""lost"": int,
			""total"": int,
			winPercent"": float,
		},
		""true5v4Rounds"": {
			""roundIndexes"": [array]
			""won"": int,
			""lost"": int,
			""total"": int,
			winPercent"": float,
			""start"": {
				""roundIndexes"": [array]
				""won"": int,
				""lost"": int,
				""total"": int,
				winPercent"": float,
			},
			""early"": {
				""roundIndexes"": [array]
				""won"": int,
				""lost"": int,
				""total"": int,
				winPercent"": float,
			},
			""late"": {
				""roundIndexes"": [array]
				""won"": int,
				""lost"": int,
				""total"": int,
				winPercent"": float,
			},
		},
		""true4v5Rounds"": {
			""roundIndexes"": [array]
			""won"": int,
			""lost"": int,
			""total"": int,
			winPercent"": float,
			""start"": {
				""roundIndexes"": [array]
				""won"": int,
				""lost"": int,
				""total"": int,
				winPercent"": float,
			},
			""early"": {
				""roundIndexes"": [array]
				""won"": int,
				""lost"": int,
				""total"": int,
				winPercent"": float,
			},
			""late"": {
				""roundIndexes"": [array]
				""won"": int,
				""lost"": int,
				""total"": int,
				winPercent"": float,
			},
		},
		""retakeRounds"": {
			""roundIndexes"": [array],
			""timestamps"": [array],
			""avgTime"": int,
			""won"": int,
			""lost"": int,
			""total"": int,
			winPercent"": float,
		},
		""postPlantRounds"": {
			""roundIndexes"": [array]
			""timestamps"": [array],
			""avgTime"": int,
			""won"": int,
			""lost"": int,
			""total"": int,
			winPercent"": float,
		},
		""clutchRounds"": {
			""roundIndexes"": [array]
			""won"": int,
			""lost"": int,
			""total"": int,
			winPercent"": float,
		},
		""operatorRounds"": {
			""roundData"": [{
					""index"": int,
					""opPlayer"": string,
					""kill"": bool
				},
				{
					""index"": int,
					""opPlayer"": string,
					""kill"": bool
				}
			]
			""won"": int,
			""lost"": int,
			""total"": int,
			winPercent"": float,
		}
		""saveRounds"": {
			""roundIndexes"": [array]
			""total"": int,
		},
	},
	
	""playerStats"": {
		player1: {
				""ign"": ""string"",
				""kills"": int,
				""deaths"": int,
				""assists"": int,
				""kda"": float,
				""kast"": float,
				""timesTraded"": int (times they were traded)
				""tradedPct"": float, (timesTraded / deaths * 100)
				""trades"": int (total no of trades this guy did)
				""firstBloods"": int,
				
		},
		player2: {
				""ign"": ""string"",
				""kills"": int,
				""deaths"": int,
				""assists"": int,
				""kda"": float,
				""kast"": float,
				""timesTraded"": int,
				""tradedPct"": float,
				""trades"": int,
				""firstBloods"": int,
				
		},
		player3: {
				""ign"": ""string"",
				""kills"": int,
				""deaths"": int,
				""assists"": int,
				""kda"": float,
				""kast"": float,
				""timesTraded"": int,
				""tradedPct"": float,
				""trades"": int
				""firstBloods"": int,
				
		},
		player4: {
				""ign"": ""string"",
				""kills"": int,
				""deaths"": int,
				""assists"": int,
				""kda"": float,
				""kast"": float,
				""timesTraded"": int,
				""tradedPct"": float,
				""trades"": int
				""firstBloods"": int,
				
		},
		player5: {
				""ign"": ""string"",
				""kills"": int,
				""deaths"": int,
				""assists"": int,
				""kda"": float,
				""kast"": float,
				""timesTraded"": int,
				""tradedPct"": float,
				""trades"": int
				""firstBloods"": int,
				
		},
	
	}
}"
W1iemzu7,modem,pierrejean,Lua,Wednesday 29th of May 2024 04:09:05 AM CDT,"while true do
    local modem = peripheral.wrap(""left"")
    if modem and peripheral.getType(""left"") == ""modem"" then
        modem.open(1) -- Ouvre le canal 1 sur le modem
    end
    os.sleep(1) -- Pause pour √©viter une utilisation excessive du CPU
end
"
1iiuuZM2,Untitled,B33peen,Dart,Wednesday 29th of May 2024 04:04:29 AM CDT," webViewController = WebViewController()
      ..setJavaScriptMode(JavaScriptMode.unrestricted)
      ..setBackgroundColor(const Color(0x00000000))
      ..setUserAgent(userAgent)
      ..enableZoom(true)
      ..setNavigationDelegate(
        NavigationDelegate(
          onProgress: (int progress) {},
          onPageStarted: (String url) {},
          onPageFinished: (String url) {},
          onWebResourceError: (WebResourceError error) {},
          onUrlChange: (UrlChange url) async {
            final uri = Uri.parse(url.url ?? ""https://hyteno.com"");
            final queryParams = uri.queryParameters;
            late FacebookConnectModel facebookConnectModel;

            if (queryParams['fbsuccess'] == ""true"") {
              facebookConnectModel = FacebookConnectModel(
                  accessToken: queryParams['accessToken']!,
                  expiryDate: queryParams['expiryDate']!,
                  refreshToken: queryParams['refreshToken']!,
                  pageToken: queryParams['pageToken'] ??
                      queryParams['page_token'] ??
                      """",
                  facebookPageId:
                      queryParams['facebook_account_id'].toString());
              processing = true;
              String refereshToken = await context
                  .read<FacebookConnectRepo>()
                  .fetchRefereshToken(
                      accessToken: facebookConnectModel.accessToken);
              facebookConnectModel =
                  facebookConnectModel.copyWith(accessToken: refereshToken);
              final FacebookAccount? account = await context
                  .read<FacebookConnectCubit>()
                  .facebookConnectRepo
                  .fetchPageToken(
                      access_token: facebookConnectModel.accessToken,
                      page_id: facebookConnectModel.facebookPageId!);
              if (account != null) {
                context
                    .read<FacebookConnectCubit>()
                    .setFacebookAccount(facebookAccount: account);
              }
              context.read<FacebookConnectCubit>().updateFacebookConnectModel(
                  facebookConnectModel: facebookConnectModel);
              await context.read<AuthCubit>().updateMetaInfo(
                  key: ""facebook"", value: facebookConnectModel.toString());
              context
                  .read<FacebookConnectCubit>()
                  .fetchFacebookPost(page_token: facebookConnectModel.pageToken)
                  .then((value) {
                context
                    .read<FacebookConnectCubit>()
                    .updateFacebookConnectStatus(
                        facebookConnectStaus: FacebookConnectStaus.connected);
              });
              processing = false;
            }
            if (queryParams['fbsuccess'] == ""true"" &&
                queryParams['instasuccess'] == ""true"") {
              instaprocessing = true;
              facebookConnectModel = facebookConnectModel.copyWith(
                  instagramPageId: queryParams['instagram_account_id']);
              context.read<FacebookConnectCubit>().updateFacebookConnectModel(
                  facebookConnectModel: facebookConnectModel);
              await context.read<AuthCubit>().updateMetaInfo(
                  key: ""facebook"", value: facebookConnectModel.toString());
              Navigator.pop(context);
              context.read<FacebookConnectCubit>().updateInstagramConnectStatus(
                  instagramConnectStatus: InstaConnectStaus.connected);
              context.read<FacebookConnectCubit>().fetchInstagramPost(
                  instaId: queryParams[""instagram_account_id""].toString(),
                  accessToken: queryParams['accessToken'] ?? """");
              instaprocessing = false;
            }
            if (queryParams['fbsuccess'] == ""true"" &&
                queryParams['instasuccess'] == ""false"") {
              Navigator.pop(context);
            }
          },
        ),
      )
      ..loadRequest(
          Uri.parse('${ApiContants.facebookConnectUrl}?jwt=${widget.jwt}'));"
NDyZyagL,üéâG2A.com Free Gift Card Guide 2024 Mayüî•,Bufayez,Python,Wednesday 29th of May 2024 03:46:30 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_5669504.pdf

Working as of:

29 May 2024"
A3qzgidt,üí∞G2A.com Free Gift Card Guide 2024 Mayüî•,Alfonso1119,Python,Wednesday 29th of May 2024 03:32:45 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_5669504.pdf

Working as of:

29 May 2024"
pVS2ntj8,üí∞G2A.com Free Gift Card Guide 2024 Mayü§ë,lookos13,Python,Wednesday 29th of May 2024 03:12:30 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_5669504.pdf

Working as of:

29 May 2024"
PhxEzaHD,üí∞G2A.com Free Gift Card Guide 2024 Mayüî•,pestinha,Python,Wednesday 29th of May 2024 03:05:46 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_5669504.pdf

Working as of:

29 May 2024"
ujQczTEr,somon_test_images_xml,dkob,XML,Wednesday 29th of May 2024 02:22:57 AM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<root>
    <list-item>
        <external_id>533785021</external_id>
        <images>
        <list-item>https://reactfiles.com/en/download/q3rEuXNeQAom3fq/yEL73gRk8m9Ba/26701.jpg</list-item>
        </images>
        <status>active</status>
        <rubric>2858</rubric>
        <city>511</city>
        <description>broken_image</description>
        <price>100</price>
        <phone_hide>0</phone_hide>
        <negotiable_price>0</negotiable_price>
        <exchange>0</exchange>
        <attrs>
            <sostoyanie>1</sostoyanie>
			<obem-pamyati>10</obem-pamyati>
        </attrs>
        <geometry/>
        <title>1 _test</title>
    </list-item>

    <list-item>
        <external_id>533785022</external_id>
        <images>
        <list-item>https://reactfiles.com/en/download/xrlymGDLuYGV2yI/lvgKGxx76G8Qn/1713344811_368727.jpg</list-item>
        </images>
        <status>active</status>
        <rubric>2858</rubric>
        <city>511</city>
        <description>big_picture</description>
        <price>100</price>
        <phone_hide>0</phone_hide>
        <negotiable_price>0</negotiable_price>
        <exchange>0</exchange>
        <attrs>
            <sostoyanie>1</sostoyanie>
			<obem-pamyati>10</obem-pamyati>
        </attrs>
        <geometry/>
        <title>2 _test</title>
    </list-item>

    <list-item>
        <external_id>533785023</external_id>
        <images>
        <list-item>https://reactfiles.com/en/download/cfyuRX3UY3qk70B/nZ9dzBVBgzk1b/draft.png</list-item>
        </images>
        <status>active</status>
        <rubric>2858</rubric>
        <city>511</city>
        <description>normal_image</description>
        <price>100</price>
        <phone_hide>0</phone_hide>
        <negotiable_price>0</negotiable_price>
        <exchange>0</exchange>
        <attrs>
            <sostoyanie>1</sostoyanie>
			<obem-pamyati>10</obem-pamyati>
        </attrs>
        <geometry/>
        <title>3 _test</title>
    </list-item>
</root>"
tzYHveZq,bzrk_test_images_xml,dkob,XML,Wednesday 29th of May 2024 02:13:53 AM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<root>
    <list-item>
        <external_id>533785011</external_id>
        <images>
        <list-item>https://reactfiles.com/en/download/q3rEuXNeQAom3fq/yEL73gRk8m9Ba/26701.jpg</list-item>
        </images>
        <status>active</status>
        <rubric>3047</rubric>
        <city>8</city>
        <description>broken_image</description>
        <price>100</price>
        <phone_hide>0</phone_hide>
        <negotiable_price>0</negotiable_price>
        <exchange>0</exchange>
        <attrs>
            <condition>1</condition>
        </attrs>
        <geometry/>
        <title>1 _test</title>
        <district>5756</district>
    </list-item>

    <list-item>
        <external_id>533785012</external_id>
        <images>
        <list-item>https://reactfiles.com/en/download/xrlymGDLuYGV2yI/lvgKGxx76G8Qn/1713344811_368727.jpg</list-item>
        </images>
        <status>active</status>
        <rubric>3047</rubric>
        <city>8</city>
        <description>big_picture</description>
        <price>100</price>
        <phone_hide>0</phone_hide>
        <negotiable_price>0</negotiable_price>
        <exchange>0</exchange>
        <attrs>
            <condition>1</condition>
        </attrs>
        <geometry/>
        <title>2 _test</title>
        <district>5756</district>
    </list-item>

    <list-item>
        <external_id>533785013</external_id>
        <images>
        <list-item>https://reactfiles.com/en/download/cfyuRX3UY3qk70B/nZ9dzBVBgzk1b/draft.png</list-item>
        </images>
        <status>active</status>
        <rubric>3047</rubric>
        <city>8</city>
        <description>normal_image</description>
        <price>100</price>
        <phone_hide>0</phone_hide>
        <negotiable_price>0</negotiable_price>
        <exchange>0</exchange>
        <attrs>
            <condition>1</condition>
        </attrs>
        <geometry/>
        <title>3 _test</title>
        <district>5756</district>
    </list-item>
</root>"
YayacAgi,blueprint_chatgpt_image_track001,MJ_Agassi551,Python,Wednesday 29th of May 2024 01:58:13 AM CDT,"from PIL import Image, ImageDraw, ImageOps

# Load the image
image_path = ""/mnt/data/tzaYiWe.jpeg""
original_image = Image.open(image_path).convert(""L"")

# Invert the image to make the line black on a white background
inverted_image = ImageOps.invert(original_image)

# Create a new image with a white background to draw the blueprint elements
blueprint = Image.new(""RGB"", inverted_image.size, (255, 255, 255))
draw = ImageDraw.Draw(blueprint)

# Copy the original line to the new image
blueprint.paste(inverted_image, (0, 0))

# Adding typical elements found in a racing circuit blueprint
# These are simple representations and can be more detailed
# Start/Finish line
start_finish_line_coords = [(int(inverted_image.width * 0.45), int(inverted_image.height * 0.5)),
                            (int(inverted_image.width * 0.55), int(inverted_image.height * 0.5))]
draw.line(start_finish_line_coords, fill=""blue"", width=3)

# Pit lane (a simple straight line near the start/finish line)
pit_lane_coords = [(int(inverted_image.width * 0.45), int(inverted_image.height * 0.55)),
                   (int(inverted_image.width * 0.55), int(inverted_image.height * 0.55))]
draw.line(pit_lane_coords, fill=""blue"", width=3)

# Spectator stands (rectangles near the circuit)
stands_coords = [
    (int(inverted_image.width * 0.2), int(inverted_image.height * 0.4), int(inverted_image.width * 0.3), int(inverted_image.height * 0.45)),
    (int(inverted_image.width * 0.7), int(inverted_image.height * 0.4), int(inverted_image.width * 0.8), int(inverted_image.height * 0.45))
]
for stand in stands_coords:
    draw.rectangle(stand, outline=""blue"", width=3)

# Convert to blueprint style by adding a blue filter
blueprint = ImageOps.colorize(blueprint.convert(""L""), black=""white"", white=""blue"")

blueprint.show()
"
2fe20Uu6,üéâG2A.com Free Gift Card Guide 2024 MayüöÄ,kjihu25,Python,Wednesday 29th of May 2024 01:31:06 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_2515578.pdf

Working as of:

29 May 2024"
rg94vmeM,üéâG2A.com Free Gift Card Guide 2024 Mayüî•,Alfonso1119,Python,Wednesday 29th of May 2024 01:10:52 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_2515578.pdf

Working as of:

29 May 2024"
tUJJsRQT,üí∞G2A.com Free Gift Card Guide 2024 MayüöÄ,Garoam,Python,Wednesday 29th of May 2024 01:04:06 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_2515578.pdf

Working as of:

29 May 2024"
tmFuSn2r,GladiatorsFight,AlexKayn,C#,Wednesday 29th of May 2024 01:00:33 AM CDT,"using System.Runtime.InteropServices;
using System.Collections.Generic;

namespace ConsoleApp2
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Arena arena = new Arena();

            arena.Work();
        }
    }

    class Arena
    {
        private List<Warrior> _warriors = new List<Warrior>();

        public Arena() 
        {
            _warriors.Add(new Stronger());
            _warriors.Add(new Slyone());
            _warriors.Add(new Barbarian());
            _warriors.Add(new Magician());
            _warriors.Add(new Dodger());
        }

        public void Work()
        {
            Warrior firstWarrior = null;
            Warrior secondWarrior = null;

            Console.WriteLine(""–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ö–û–õ–ò–ó–ï–ô, –î–ê –ü–£–°–¢–¨ –ü–†–û–õ–¨–Æ–¢–°–Ø –†–ï–ö–ò –ö–†–û–í–ò, –•–õ–ï–ë–ê –ò –ó–†–ï–õ–ò–©!!!"");

            ShowAllWarriors();

            Console.WriteLine(""\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –±–æ–π, –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –¥–≤—É—Ö –±–æ–π—Ü–æ–≤\n"");

            ChooseWarriors(ref firstWarrior, ref secondWarrior);

            Console.WriteLine(""\n–ì–õ–ê–î–ò–ê–¢–û–†–´ –í–´–ë–†–ê–ù–´ –î–ê –ù–ê–ß–ù–ï–¢–°–Ø –ë–ò–¢–í–ê\n"");

            Console.WriteLine(""\n–î–ª—è –Ω–∞—á–∞–ª–∞ –±–æ—è –Ω–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É..."");
            Console.ReadKey();
            Console.Clear();

            Fight(firstWarrior, secondWarrior);

            CountingResults(firstWarrior, secondWarrior);

            Console.ReadKey();
        }

        private void ChooseWarriors(ref Warrior firstWarrior, ref Warrior secondWarrior)
        {
            Console.Write(""\n –î–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–≤–æ–≥–æ –±–æ–π—Ü–∞ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ ID >  "");
            ChooseWarrior(out firstWarrior);
            firstWarrior.ShowStats();
            _warriors.Remove(firstWarrior);

            Console.Write(""\n –î–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ç–æ—Ä–æ–≥–æ –±–æ–π—Ü–∞ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ ID >  "");
            ChooseWarrior(out secondWarrior);
            secondWarrior.ShowStats();
            _warriors.Remove(secondWarrior);
        }

        private void ChooseWarrior(out Warrior warrior)
        {
            warrior = null;

            while (warrior == null)
            {
                int warriorId = ReadNumber();

                if (TryGetWarrior(out warrior, warriorId))
                {
                    Console.WriteLine($""–ë–æ–µ—Ü –≤—ã–±—Ä–∞–Ω –∏ —ç—Ç–æ - {warrior.Name}\n"");
                }
                else
                {
                    Console.WriteLine(""–ë–æ–π—Ü–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"");
                }
            }
        }

        private void Fight(Warrior firstWarrior, Warrior secondWarrior)
        {
            while (firstWarrior.Health > 0 && secondWarrior.Health > 0)
            {
                Attack(firstWarrior, secondWarrior);
                Attack(secondWarrior, firstWarrior);

                Console.WriteLine();

                firstWarrior.ShowCurrentHealth();
                secondWarrior.ShowCurrentHealth();

                Console.WriteLine();
                Console.ReadKey();
            }
        }

        private void CountingResults(Warrior firstWarrior, Warrior secondWarrior)
        {
            if (firstWarrior.Health <= 0 && secondWarrior.Health <= 0)
            {
                Console.WriteLine(""–ù–ò–ß–¨–Ø!!!!!!!!!!!!!!!"");
            }
            else if (firstWarrior.Health <= 0)
            {
                Console.WriteLine($""{secondWarrior.Name} –ü–û–ë–ï–î–ò–õ"");
            }
            else if (secondWarrior.Health <= 0)
            {
                Console.WriteLine($""{firstWarrior.Name} –ü–û–ë–ï–î–ò–õ"");
            }
        }

        private void Attack(Warrior firstWarrior, Warrior secondWarrior)
        {
            if (firstWarrior.TryUseAbility())
            {
                secondWarrior.TakeDamage(firstWarrior.Damage);
            }
            else
            {
                secondWarrior.TakeDamage(firstWarrior.Damage);

                Console.WriteLine($""{firstWarrior.Name} –±—å–µ—Ç –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞ –∏ –Ω–∞–Ω–æ—Å–∏—Ç –µ–º—É {firstWarrior.Damage} —É—Ä–æ–Ω–∞"");
            }
        }

        private bool TryGetWarrior(out Warrior warrior, int id)
        {
            for (int i = 0; i <  _warriors.Count; i++)
            {
                if (_warriors[i].ID == id)
                {
                    warrior = _warriors[i];

                    return true;
                }
            }

            warrior = null;
            return false;
        }

        private void ShowAllWarriors()
        {
            Console.WriteLine(""–í—Å–µ –±–æ–π—Ü—ã –≥–ª–∞–¥–∏–∞—Ç–æ—Ä—ã:"");

            for (int i = 0; i <  _warriors.Count; i++)
            {
                int index = i + 1;

                Console.Write($""\n{index}.  "");
                _warriors[i].ShowStats();
            }
        }

        private int ReadNumber()
        {
            int number;

            while (int.TryParse(Console.ReadLine(), out number) == false)
            {
                Console.WriteLine(""–û—à–∏–±–∫–∞: –≤–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑"");
            }

            return number;
        }
    }

    class Warrior
    {
        public Warrior(string name, int health, int damage, int armor, string description, int id)
        {
            Name = name;
            Health = health;
            Damage = damage;
            Armor = armor;
            Description = description;
            ID = id;
        }

        public int Health { get; protected set; }
        public int Damage { get; protected set; }
        public int Armor { get; protected set; }
        public int ID { get; protected set; }
        public string Name { get; protected set; }
        public string Description { get; protected set; }


        public void ShowStats()
        {
            Console.Write($""–ë–æ–µ—Ü - {Name}, –•–† - {Health}, —É—Ä–æ–Ω - {Damage}, –ë—Ä–æ–Ω—è: {Armor}, –û—Å–æ–±–æ–µ —É–º–µ–Ω–∏–µ: {Description}"");
        }

        public virtual bool TryUseAbility()
        {
            return false; 
        }

        public void ShowCurrentHealth()
        {
            Console.WriteLine($""{Name} - –∑–¥–æ—Ä–æ–≤—å–µ {Health}"") ;
        }

        public void Attack(Warrior opponent)
        {
            opponent.TakeDamage(Damage);
        }

        public void TakeDamage(int damage)
        {
            Health -= damage - Armor;

            if (Health < 0)
            {
                Health = 0;
            }
        }
    }

    class Stronger : Warrior
    {
        public Stronger() : base(""–°–∏–ª–∞—á"", 100, 35, 50, ""–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ –≤–¥–∞—Ä–∏—Ç—å"", 1) { }

        Random random = new Random();
        int minValue = 0;
        int maxValue = 3;
        int multiplier = 2;

        public override bool TryUseAbility()
        {
            int chanceDoubleDamage = random.Next(minValue, maxValue);

            if (chanceDoubleDamage == 0)
            {
                int doubleDamage = Damage * multiplier;

                Damage = doubleDamage;

                Console.WriteLine($""{Name} –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Å–≤–æ—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∏ –Ω–∞–Ω–æ—Å–∏—Ç –¥–≤–æ–π–Ω–æ–π —É—Ä–æ–Ω {doubleDamage}"") ;

                return true;
            }

            return false;
        }
    }
     
    class Slyone : Warrior
    {
        public Slyone() : base(""–õ–æ–≤–∫–∞—á"", 100, 20, 40, ""–ú–æ–∂–µ—Ç –Ω–∞–Ω–æ—Å–∏—Ç—å –≤ –º–æ–º–µ–Ω—Ç–µ –¥–≤–∞ —É–¥–∞—Ä–∞ —Å—Ä–∞–∑—É"", 2) {}

        public override bool TryUseAbility()
        {
            int takeDamageCounter = 0;
            int numberActivationAbitity = 3;
            int multipier = 2;

            takeDamageCounter++;

            if (takeDamageCounter == numberActivationAbitity)
            {
                Damage = Damage * multipier;

                Console.WriteLine($""{Name} –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Å–≤–æ—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∏ –¥–≤–∞–∂–¥—ã –Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω –ø–æ –æ–ø–ø–æ–Ω–µ–Ω—Ç—É!!!"");

                return true;
            }
            
            return false;
        }
    }

    class Barbarian : Warrior
    {
        public Barbarian(int rage = 0) : base(""–í–∞—Ä–≤–∞—Ä"", 100, 50, 10, ""–ö–æ–ø–∏—Ç —è—Ä–æ—Å—Ç—å, –∫–æ–≥–¥–∞ –Ω–∞–∫–æ–ø–ª–µ–Ω–∞ - —Ä–∞–Ω—ã –∑–∞–∂–∏–≤–∞—é—Ç"", 3)
        {
            Rage = rage;
        }

        public int Rage { get; private set; }

        Random random = new Random();
        int minValue = 30;
        int maxValue = 100;
        int maxRage = 7;

        public override bool TryUseAbility()
        {
            Rage++;

            int valueHeal = random.Next(minValue, maxValue);

            if (Rage == maxRage)
            {
                Health += valueHeal;

                Console.WriteLine($""{Name} –ø—Ä–∏–º–µ–Ω–∏–ª —Å–≤–æ—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å, "" +
                    $""–∑–¥–æ—Ä–æ–≤—å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {valueHeal},"" +
                    $""—Ç–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ {Health}"");

                return true;
            }

            return false;
        }
    }

    class Magician : Warrior
    {
        public Magician(int magic = 100) : base(""–ú–∞–≥"", 100, 20, 5, ""–ê—Ç–∞–∫—É–µ—Ç –æ–≥–Ω–µ–Ω–Ω—ã–º –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ–º, –µ—Å–ª–∏ –µ—Å—Ç—å –º–∞–Ω–∞"", 4)
        {
            Magic = magic;
        }

        public int Magic { get; protected set; }

        public override bool TryUseAbility()
        {
            int averageValue = 25;
            int damageBurn = 45;
            int currentMana = Magic;

            if (currentMana >= Magic)
            {
                currentMana -= averageValue;
                Damage = damageBurn;

                Console.WriteLine($""{Name} –ø—Ä–∏–º–µ–Ω–∏–ª —Å–≤–æ—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å, "" +
                    $""–∏ –Ω–∞–Ω–µ—Å —É–¥–∞—Ä –æ–≥–Ω–µ–Ω–Ω—ã–º —à–∞—Ä–æ–º, –Ω–∞–Ω–æ—Å—è {Damage},"" +
                    $""—Ç–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ {Health}"");

                return true;
            }

            return false;
        }
    }

    class Dodger : Warrior
    {
        public Dodger(int —ÅhanceDodge = 3) : base(""–°–æ–ª–æ–≤–µ–π"", 100, 25, 25, ""–ú–æ–∂–µ—Ç —Å –ª–µ–≥–∫–æ—Å—Ç—å—é —É–∫–ª–æ–Ω–∏—Ç—å—Å—è –æ—Ç –∞—Ç–∞–∫–∏"", 5)
        {
            ChanceDodge = —ÅhanceDodge;
        }

        public int ChanceDodge {  get; protected set; }

        public new void TakeDamage(int damage)
        {
            if (TryUseAbility())
            {
                Console.WriteLine($""{Name} –º–∞—Å—Ç–µ—Ä—Å–∫–∏ —É–∫–ª–æ–Ω–∏–ª—Å—è –æ—Ç –∞—Ç–∞–∫–∏ –∏ –Ω–µ –ø–æ–ª—É—á–∏–ª —É—Ä–æ–Ω–∞"") ;
            }
            else
            {
                Health -= damage;
            }
        }

        public override bool TryUseAbility()
        {
            Random random = new Random();
            int minValue = 0;

            int chance = random.Next(minValue, ChanceDodge);

            if (chance == ChanceDodge)
            {
                return true;
            }

            return false;
        }
    }
}
"
2QPJMbhj,üí∞G2A.com Free Gift Card Guide 2024 Mayüî•,atakan1983,Python,Wednesday 29th of May 2024 12:57:19 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_2515578.pdf

Working as of:

29 May 2024"
8i05fxW6,ü§ëG2A.com Free Gift Card Guide 2024 Mayüî•,pestinha,Python,Wednesday 29th of May 2024 12:43:48 AM CDT,"G2A.com free GC & Games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of the script. Any other posted will not work!

PDF guide:
https://drive.google.com/file/d/1fu-L9saEYF3p8c22aD4kJyaloZDzbZfJ/view?usp=g2a_refund_guide_2515578.pdf

Working as of:

29 May 2024"
yJ7t17XL,Alicom (Form3),vicheauuu,C#,Wednesday 29th of May 2024 12:40:01 AM CDT,"using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Drawing.Printing;
using System.IO;
using System.Linq;
using System.Reflection.Emit;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using static System.Windows.Forms.VisualStyles.VisualStyleElement;


namespace Practica_3
{
    public partial class Form3 : Form
    {
        public static Form3 instance;
        public Form3()
        {
            InitializeComponent();
            instance = this;
        }


        SqlConnection con = new SqlConnection(@""Data Source=VICHEAUUU\SQLEXPRESS;Initial Catalog=Alicom;Integrated Security=True"");

        private void Form3_Load(object sender, EventArgs e)
        {


            string nume = """", prenume = """", blocname = """", idnp;
            idnp = Form1.instance2.idnp.Text;

            string query = @""SELECT Nume,Prenume,Bloc FROM Locatari where IDNP = '"" + idnp + ""' "";
            using (SqlCommand command = new SqlCommand(query, con))
            {
                con.Open();
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.Read())
                    {
                        nume = reader[""Nume""].ToString().Trim();
                        prenume = reader[""Prenume""].ToString().Trim();
                        blocname = reader[""Bloc""].ToString().Trim();
                    }
                }
                con.Close();
            }

            label1.Text = ""Bine a»õi venit, "" + nume + "" "" + prenume + ""! "";

            SqlCommand cmd = new SqlCommand(""SELECT DISTINCT Luna FROM Chitante ORDER BY Luna "", con);
            SqlCommand cmd2 = new SqlCommand(""SELECT DISTINCT Anul FROM Chitante ORDER BY Anul "", con);

            try
            {
                con.Open();
                SqlDataReader reader = cmd.ExecuteReader();

                while (reader.Read())
                {
                    kryptonComboBox1.Items.Add(reader[""Luna""].ToString());
                }
                reader.Close();

                SqlDataReader reader2 = cmd2.ExecuteReader();

                while (reader2.Read())
                {
                    kryptonComboBox2.Items.Add(reader2[""Anul""].ToString());
                }

                reader2.Close();

            }

            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            finally
            {
                con.Close();
            }


        }
        private void materialSwitch1_CheckStateChanged(object sender, EventArgs e)
        {
            if (materialSwitch1.CheckState == CheckState.Checked)
            {
                this.BackColor = Color.FromArgb(34, 36, 49);
                Logo.ForeColor = Color.White;
                label8.ForeColor = Color.White;
                label7.ForeColor = Color.White;
                label6.ForeColor = Color.White;
                label5.ForeColor = Color.White;
                label4.ForeColor = Color.White;
                label3.ForeColor = Color.White;
                label2.ForeColor = Color.White;
                label1.ForeColor = Color.White;
                materialSwitch1.ForeColor = Color.White;
            }
            else if (materialSwitch1.CheckState == CheckState.Unchecked)
            {
                this.BackColor = Color.White;
                Logo.ForeColor = Color.Black;
                label8.ForeColor = Color.Black;
                label7.ForeColor = Color.Black;
                label6.ForeColor = Color.Black;
                label5.ForeColor = Color.Black;
                label4.ForeColor = Color.Black;
                label3.ForeColor = Color.Black;
                label2.ForeColor = Color.Black;
                label1.ForeColor = Color.Black;
                materialSwitch1.ForeColor = Color.Black;
            }
            verify_dark_mode();
        }
        private void verify_dark_mode()
        {
            string blocname = """";
            string idnp = Form1.instance2.idnp.Text;


            string query = @""SELECT Nume,Prenume,Bloc FROM Locatari where IDNP = '"" + idnp + ""' "";
            using (SqlCommand command = new SqlCommand(query, con))
            {
                con.Open();
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.Read())
                    {
                        blocname = reader[""Bloc""].ToString().Trim();
                    }
                }
                con.Close();
            }
            string imagepath = """";
            if (blocname == ""1"" || blocname == ""2"")
            {
                if (materialSwitch1.CheckState == CheckState.Checked)
                {
                    imagepath = ""pussinessdark.png"";
                }
                else imagepath = ""business.png"";
                pictureBox1.Image = System.Drawing.Image.FromFile(imagepath);
            }
            else
            {
                if (materialSwitch1.CheckState == CheckState.Checked)
                {
                    imagepath = ""pussiness2dark.png"";
                }
                else imagepath = ""business2.png"";
                pictureBox1.Image = System.Drawing.Image.FromFile(imagepath);
            }
        }

        public void kryptonButton1_Click(object sender, EventArgs e)
        {
            if (kryptonComboBox1.SelectedItem != null && kryptonComboBox2.SelectedItem != null)
            {
                string lumina = """";
                string paznic = """";
                string parcare = """";
                string altele = """";

                string luna = kryptonComboBox1.SelectedItem.ToString().Trim();
                string anul = kryptonComboBox2.SelectedItem.ToString().Trim();
                string nume = """", prenume = """", blocname = """", idnp;
                idnp = Form1.instance2.idnp.Text;


                string query = @""SELECT Nume,Prenume,Bloc FROM Locatari where IDNP = '"" + idnp + ""' "";
                using (SqlCommand command = new SqlCommand(query, con))
                {
                    con.Open();
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        if (reader.Read())
                        {
                            nume = reader[""Nume""].ToString().Trim();
                            prenume = reader[""Prenume""].ToString().Trim();
                            blocname = reader[""Bloc""].ToString().Trim();
                        }
                    }
                    con.Close();
                }
                label1.Text = ""Bine a»õi venit, "" + nume + "" "" + prenume + ""! "";
                panel2.Hide();
                panel1.Show();

                string query2 = @""SELECT Lumina, Paznic, Parcare, Altele from Chitante where idnp = '"" + idnp + ""' and Luna = '"" + luna + ""' and Anul = '"" + anul + ""'"";
                using (SqlCommand command = new SqlCommand(query2, con))
                {
                    con.Open();
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        if (reader.Read())
                        {
                            lumina = reader[""Lumina""].ToString().Trim();
                            paznic = reader[""Paznic""].ToString().Trim();
                            parcare = reader[""Parcare""].ToString().Trim();
                            altele = reader[""Altele""].ToString().Trim();
                        }
                    }
                    con.Close();
                }



                double suma = Convert.ToDouble(lumina) + Convert.ToDouble(paznic) + Convert.ToDouble(parcare) + Convert.ToDouble(altele);

                label2.Text = ""Suma totalƒÉ pe luna "" + luna + "" "" + anul + "": "" + suma + "" lei"";
                label3.Text = ""LuminƒÉ: "" + lumina + "" lei"";
                label4.Text = ""Paznic: "" + paznic + "" lei"";
                label5.Text = ""Parcare: "" + parcare + "" lei"";
                label6.Text = ""Altele: "" + altele + "" lei"";

                label10.Text = DateTime.Now.ToString();
                pret_lumina.Text = lumina;
                pret_paznic.Text = paznic;
                pret_parcare.Text = parcare;
                label13.Text = altele;
                total.Text = suma.ToString();
            }
            else MessageBox.Show(""Alegeti va rog campurile de mai sus!"", ""Eroare"", MessageBoxButtons.OK, MessageBoxIcon.Error);
        }



        private void kryptonButton4_Click(object sender, EventArgs e)
        {
            this.Size = new System.Drawing.Size(500, 750);
            //panel3.Location = new Point(12, 5);


            //salvarea in png, jpg fisierul de check
            using (Bitmap bmp = new Bitmap(panel3.Width, panel3.Height))
            {
                panel3.DrawToBitmap(bmp, new Rectangle(0, 0, bmp.Width, bmp.Height));
                using (SaveFileDialog saveFileDialog = new SaveFileDialog())
                {
                    saveFileDialog.Title = ""Salvarea chitan»õei"";
                    saveFileDialog.Filter = ""PNG Image|*.png|JPG Image|*.jpg"";
                    saveFileDialog.FileName = ""Chitanta"";
                    if (saveFileDialog.ShowDialog() == DialogResult.OK)
                    {
                        bmp.Save(saveFileDialog.FileName);

                    }
                }
            }
        }
    }
}
"
NEaM9qje,Alicom (Form2),vicheauuu,C#,Wednesday 29th of May 2024 12:39:34 AM CDT,"using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Practica_3
{
    public partial class Form2 : Form
    {
        public Form2()
        {
            InitializeComponent();
        }
        SqlConnection con = new SqlConnection(@""Data Source=VICHEAUUU\SQLEXPRESS;Initial Catalog=Alicom;Integrated Security=True"");
        public int bloc_ales;
        private void pictureBox4_MouseEnter(object sender, EventArgs e)
        {
            pictureBox4.SizeMode = PictureBoxSizeMode.StretchImage;
            pictureBox4.Cursor = Cursors.Hand;
            pictureBox4.Size = new System.Drawing.Size(285, 319);
        }

        void check_darkmode()
        {
            string imagepath = """";
            string imagepath2 = """";

            if (materialSwitch1.CheckState == CheckState.Checked)
            {
                //background
                this.BackColor = Color.FromArgb(34, 36, 49);
                Logo.ForeColor = Color.White;
                //blocurile
                imagepath = ""pussinessdark.png"";
                imagepath2 = ""pussiness2dark.png"";

                pictureBox1.Image = Image.FromFile(imagepath);
                pictureBox2.Image = Image.FromFile(imagepath);
                pictureBox3.Image = Image.FromFile(imagepath2);
                pictureBox4.Image = Image.FromFile(imagepath2);

                //labeluri locatar
                label6.ForeColor = Color.White;
                label7.ForeColor = Color.White;
                label8.ForeColor = Color.White;
                label9.ForeColor = Color.White;
                label10.ForeColor = Color.White;

                //labeluri chitante
                label1.ForeColor = Color.White;
                label2.ForeColor = Color.White;
                label3.ForeColor = Color.White;
                label4.ForeColor = Color.White;
                label5.ForeColor = Color.White;

                label14.ForeColor = Color.White;

                //labeluri delete locatari
                label15.ForeColor = Color.White;
                label16.ForeColor = Color.White;
                label12.ForeColor = Color.White;
                label11.ForeColor = Color.White;
                label13.ForeColor = Color.White;

            }
            else if (materialSwitch1.CheckState != CheckState.Checked)
            {
                //background
                this.BackColor = Color.White;
                Logo.ForeColor = Color.Black;

                //blocurile
                imagepath = ""business.png"";
                imagepath2 = ""business2.png"";
                pictureBox1.Image = Image.FromFile(imagepath);
                pictureBox2.Image = Image.FromFile(imagepath);
                pictureBox3.Image = Image.FromFile(imagepath2);
                pictureBox4.Image = Image.FromFile(imagepath2);

                //labeluri locatar
                label6.ForeColor = Color.Black;
                label7.ForeColor = Color.Black;
                label8.ForeColor = Color.Black;
                label9.ForeColor = Color.Black;
                label10.ForeColor = Color.Black;

                //labeluri chitante 
                label1.ForeColor = Color.Black;
                label2.ForeColor = Color.Black;
                label3.ForeColor = Color.Black;
                label4.ForeColor = Color.Black;
                label5.ForeColor = Color.Black;

                label14.ForeColor = Color.Black;

                //labeluri delete locatari
                label15.ForeColor = Color.Black;
                label16.ForeColor = Color.Black;
                label12.ForeColor = Color.Black;
                label11.ForeColor = Color.Black;
                label13.ForeColor = Color.Black;

            }

            //blocurile


        }

        private void pictureBox4_MouseLeave(object sender, EventArgs e)
        {
            pictureBox4.SizeMode = PictureBoxSizeMode.StretchImage;
            pictureBox4.Cursor = Cursors.Default;
            pictureBox4.Size = new System.Drawing.Size(247, 266);
        }

        private void pictureBox3_MouseEnter(object sender, EventArgs e)
        {
            pictureBox3.SizeMode = PictureBoxSizeMode.StretchImage;
            pictureBox3.Cursor = Cursors.Hand;
            pictureBox3.Size = new System.Drawing.Size(285, 319);
        }

        private void pictureBox3_MouseLeave(object sender, EventArgs e)
        {
            pictureBox3.SizeMode = PictureBoxSizeMode.StretchImage;
            pictureBox3.Cursor = Cursors.Default;
            pictureBox3.Size = new System.Drawing.Size(247, 266);
        }

        private void pictureBox2_MouseEnter(object sender, EventArgs e)
        {
            pictureBox2.SizeMode = PictureBoxSizeMode.StretchImage;
            pictureBox2.Cursor = Cursors.Hand;
            pictureBox2.Size = new System.Drawing.Size(285, 319);
        }

        private void pictureBox2_MouseLeave(object sender, EventArgs e)
        {
            pictureBox2.SizeMode = PictureBoxSizeMode.StretchImage;
            pictureBox2.Cursor = Cursors.Default;
            pictureBox2.Size = new System.Drawing.Size(247, 266);
        }

        private void pictureBox1_MouseEnter(object sender, EventArgs e)
        {
            pictureBox1.SizeMode = PictureBoxSizeMode.StretchImage;
            pictureBox1.Cursor = Cursors.Hand;
            pictureBox1.Size = new System.Drawing.Size(285, 319);
        }

        private void pictureBox1_MouseLeave(object sender, EventArgs e)
        {
            pictureBox1.SizeMode = PictureBoxSizeMode.StretchImage;
            pictureBox1.Cursor = Cursors.Default;
            pictureBox1.Size = new System.Drawing.Size(247, 266);
        }

        private void pictureBox4_Click(object sender, EventArgs e)
        {
            //intri blocul 4
            pictureBox4.Visible = false;
            pictureBox3.Visible = false;
            pictureBox2.Visible = false;
            pictureBox1.Visible = false;

            //pictureBox6.Visible = true;
            //pictureBox6.Location = new System.Drawing.Point(-39, 298);
            panel3.Visible = true;
            bloc_ales = 4;
        }

        private void kryptonButton1_Click(object sender, EventArgs e)
        {

            String lumina = kryptonTextBox2.Text;
            String paznic = kryptonTextBox1.Text;
            String parcare = kryptonTextBox3.Text;
            String altele = kryptonTextBox4.Text;

            String new_query = ""DECLARE @LunaCurenta NVARCHAR(20) = FORMAT(GETDATE(), 'MMMM', 'ro-RO');"" +
                "" SET @LunaCurenta = UPPER(LEFT(@LunaCurenta, 1)) + SUBSTRING(@LunaCurenta, 2, LEN(@LunaCurenta) - 1);"" +
                "" DECLARE @AnulCurent NVARCHAR(4) = FORMAT(GETDATE(), 'yyyy');"" +
                "" DECLARE @i INT = 1;"" +
                "" WHILE (@i <= (SELECT COUNT(*) FROM locatari))"" +
                "" BEGIN"" +
                "" DECLARE @IDNP BIGINT = (SELECT idnp FROM locatari WHERE nr = @i AND bloc = '"" + bloc_ales + ""');"" +
                "" DECLARE @Masina INT = (SELECT masina FROM locatari WHERE nr = @i AND bloc = '"" + bloc_ales + ""');"" +
                "" DECLARE @Pret INT = CASE WHEN @Masina = 1 THEN CONVERT(INT, ""+parcare+"") ELSE 0 END;"" +
                "" IF @IDNP IS NOT NULL"" +
                "" BEGIN"" +
                "" INSERT INTO chitante"" +
                "" VALUES (@IDNP, @LunaCurenta ,@AnulCurent,"" + lumina + "", "" + paznic + "", @Pret, "" + altele + "");"" +
                "" END"" +
                "" SET @i = @i + 1;"" +
                "" END;"";
                con.Open();

            using (SqlCommand cmd = new SqlCommand(new_query, con))
            {

                int rowsAffected = cmd.ExecuteNonQuery();
                if (rowsAffected == 0)
                {
                    MessageBox.Show(""Eroare la adƒÉugare √Æn BD"", ""Eroare!"", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                else
                {
                    MessageBox.Show(""Chitan»õele s-au adƒÉugat cu succes"", ""Succes!"", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
                con.Close();
            }
        }

        private void pictureBox3_Click(object sender, EventArgs e)
        {
            //intri blocul 3
            pictureBox4.Visible = false;
            pictureBox3.Visible = false;
            pictureBox2.Visible = false;
            pictureBox1.Visible = false;

            panel3.Visible = true;
            bloc_ales = 3;
        }

        private void pictureBox2_Click(object sender, EventArgs e)
        {
            //intri blocul 2
            pictureBox4.Visible = false;
            pictureBox3.Visible = false;
            pictureBox2.Visible = false;
            pictureBox1.Visible = false;

            panel3.Visible = true;
            bloc_ales = 2;
        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {
            //intri in blocul1
            pictureBox4.Visible = false;
            pictureBox3.Visible = false;
            pictureBox2.Visible = false;
            pictureBox1.Visible = false;

            panel3.Visible = true;
            bloc_ales = 1;
        }

        private void kryptonButton2_Click(object sender, EventArgs e)
        {
            panel3.Visible = true;
            panel1.Visible = false;
        }

        private void kryptonButton6_Click(object sender, EventArgs e)
        {
            panel3.Visible = false;
            panel2.Visible = true;
        }

        private void kryptonButton3_Click(object sender, EventArgs e)
        {
            panel3.Visible = true;
            panel2.Visible = false;
        }

        private void kryptonButton5_Click(object sender, EventArgs e)
        {
            panel1.Visible = true;
            panel3.Visible = false;
        }

        private void kryptonButton7_Click(object sender, EventArgs e)
        {
            panel3.Visible = false;
            pictureBox4.Visible = true;
            pictureBox3.Visible = true;
            pictureBox2.Visible = true;
            pictureBox1.Visible = true;
        }



        private void kryptonButton4_Click(object sender, EventArgs e)
        {
            //enter la locatari noi

            

            String nume = kryptonTextBox7.Text;
            String prenume = kryptonTextBox8.Text;
            String idnp = kryptonTextBox6.Text;
            String masina = ""0"";

            if (materialRadioButton1.Checked)
            {
                masina = ""1"";
            }
            else if (materialRadioButton2.Checked)
            {
                masina = ""0"";
            }

            String query =
                "" declare @i INT = 0; "" +
                "" set @i = (select count(*) from locatari); "" +
                "" dbcc checkident('locatari',reseed,@i)"" +
                "" INSERT INTO locatari (IDNP, Nume, Prenume, Bloc,Masina) VALUES (@idnp, @nume, @prenume, @bloc_ales,'""+masina+""') "";
            

                con.Open();
                using (SqlCommand cmd = new SqlCommand(query, con))
                {
                    cmd.Parameters.AddWithValue(""@idnp"", idnp);
                    cmd.Parameters.AddWithValue(""@nume"", nume);
                    cmd.Parameters.AddWithValue(""@prenume"", prenume);
                    cmd.Parameters.AddWithValue(""@bloc_ales"", bloc_ales);


                    int rowsAffected = cmd.ExecuteNonQuery();
                    if (rowsAffected == 0)
                    {
                        MessageBox.Show(""Eroare la adƒÉugarea √Æn BD"");
                    }
                    else
                    {
                        MessageBox.Show(""Datele s-au adƒÉugat cu succes"");
                    }
                }
                con.Close();
        }

        private void kryptonButton10_Click(object sender, EventArgs e)
        {
            panel4.Visible = true;
            panel3.Visible = false;
        }

        private void kryptonButton8_Click(object sender, EventArgs e)
        {
            panel3.Visible = true;
            panel4.Visible = false;
        }

        private void kryptonButton9_Click(object sender, EventArgs e)
        {
            String nume = kryptonTextBox11.Text;
            String prenume = kryptonTextBox12.Text;
            String idnp = kryptonTextBox10.Text;
            String bloc = kryptonTextBox9.Text;


            String query_delete = ""delete from locatari where idnp = '""+idnp+""' and nume = '""+nume+""' and prenume = '""+prenume+""' and bloc = '""+bloc+""' ""
                + "" declare @i INT = 0;"" +
                "" set @i = (select count(*) from locatari) - 1;"" +
                "" dbcc checkident('locatari',reseed,@i)"";

            con.Open();
            using (SqlCommand cmd = new SqlCommand(query_delete, con))
            {
                cmd.Parameters.AddWithValue(""@idnp"", idnp);
                cmd.Parameters.AddWithValue(""@nume"", nume);
                cmd.Parameters.AddWithValue(""@prenume"", prenume);
                cmd.Parameters.AddWithValue(""@bloc"", bloc);

                int rowsAffected = cmd.ExecuteNonQuery();
                if (rowsAffected == 0)
                {
                    MessageBox.Show(""Eroare la stergere din BD"");
                }
                else
                {
                    MessageBox.Show(""Datele s-au »ôters cu succes"");
                    panel4.Visible = false;
                    panel3.Visible = false;
                }
            }
            con.Close();
      
        }

        private void materialSwitch1_CheckedChanged(object sender, EventArgs e)
        {
            check_darkmode();
        }
    }
}
"
5dKrCW4W,Hide the Storyline Player Lightbox Close Button,nrzmalik,JavaScript,Wednesday 29th of May 2024 12:37:22 AM CDT,"function addCssToHead(cssRules) {
    var styleElement = document.createElement('style');
    styleElement.textContent = cssRules;
    document.head.appendChild(styleElement);
}
var css = `#light-box-close { display: none !important;} `;
addCssToHead(css);"
