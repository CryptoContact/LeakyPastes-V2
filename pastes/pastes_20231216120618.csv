id,title,username,language,date,content
qHp1Tq5L,data784,TestGuy1,JSON,Saturday 16th of December 2023 06:00:04 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '0ec51cf27a14b947f13aac64d020992e166075dbbc50cf692b39621ef5ab8ab28e7c63b6da1f0679b3fe7b035f299f710c48fc73ddc47ebbad3f154e069cf551da7c749d801b75a3c5e13495e1d10dfcccbc6b6acfe8032ab64ad142ce84ee935799887fab42c22ae193f408d6c8dda8eb6122efff954518a8f706e525c24473',
  otherdata: [
    '45379b92f621646deca17fb86f1c1cd2',
    '3cff76acbe0d0bdcea412bde614d2e79',
    'f82b231f3bc8d63818d8cba8f3189bd6',
    'fc0df990bb440116d59fe48c61cc3faa',
    '5b17564be6d97de188d579d0ec010544',
    '42aeffbf11e609e31761c16d6e611271',
    '5da617f199b130d62f72c3ba7b5aa934',
    '9b067e8d244d1953960258dbeba6849a'
  ]
}"
z3rfR0wE,Untitled,Tkap1,C++,Saturday 16th of December 2023 05:16:33 AM CDT,"glUseProgram(rendering->compute_shaders[e_compute_particle]);
for(int particle_type_i = 0; particle_type_i < e_particle_type_count; particle_type_i++) {
	int* particle_count = particle_counts[particle_type_i];
	u32 curr_index = rendering->curr_particle_ssbo_index[particle_type_i];
	u32 next_index = (rendering->curr_particle_ssbo_index[particle_type_i] + 1) % 2;

	glBindVertexArray(rendering->particle_vao[particle_type_i]);

	glUniform1f(0, render_delta);
	glUniform1f(1, multiplied_render_delta);
	glUniformMatrix4fv(2, 1, GL_FALSE, &view_projection_arr[particle_type_i].all[0]);

	glBindBufferBase(GL_SHADER_STORAGE_BUFFER, 0, rendering->particle_in_ssbo[particle_type_i][curr_index]);
	glBindBufferBase(GL_SHADER_STORAGE_BUFFER, 1, rendering->particle_in_ssbo[particle_type_i][next_index]);
	glBindBufferBase(GL_SHADER_STORAGE_BUFFER, 2, rendering->particle_draw_ssbo[particle_type_i]);
	glBindBufferBase(GL_SHADER_STORAGE_BUFFER, 3, rendering->new_particles_ssbo[particle_type_i]);
	glBindBufferBase(GL_SHADER_STORAGE_BUFFER, 4, rendering->particles_indirect_ssbo[particle_type_i]);

	// @Note(tkap, 04/12/2023): Copy the CPU particle data in the ssbo
	glBindBuffer(GL_SHADER_STORAGE_BUFFER, rendering->new_particles_ssbo[particle_type_i]);
	glBufferSubData(GL_SHADER_STORAGE_BUFFER, 0, 4, particle_count);
	glBufferSubData(GL_SHADER_STORAGE_BUFFER, 16, sizeof(s_particle) * *particle_count, particle_data[particle_type_i]);

	// @Note(tkap, 04/12/2023): Set the ssbo particle count to 0
	glBindBuffer(GL_SHADER_STORAGE_BUFFER, rendering->particles_indirect_ssbo[particle_type_i]);
	int one_zero = 0;
	glBufferSubData(GL_SHADER_STORAGE_BUFFER, 4, 4, &one_zero);
	glBindBuffer(GL_SHADER_STORAGE_BUFFER, rendering->particle_in_ssbo[particle_type_i][next_index]);
	glBufferSubData(GL_SHADER_STORAGE_BUFFER, 0, 4, &one_zero);

	// GLsync sync = glFenceSync(GL_SYNC_GPU_COMMANDS_COMPLETE, 0);
	// glClientWaitSync(sync, 0, c_max_u64);
	// glDeleteSync(sync);
	glDispatchCompute(c_max_particles / 64, 1, 1);
	// glMemoryBarrier(GL_SHADER_IMAGE_ACCESS_BARRIER_BIT | GL_SHADER_STORAGE_BARRIER_BIT | GL_BUFFER_UPDATE_BARRIER_BIT);
	// glMemoryBarrier(GL_ALL_BARRIER_BITS);

	*particle_count = 0;
	rendering->curr_particle_ssbo_index[particle_type_i] = next_index;
}"
Lu6ipDA9,Untitled,Josif_tepe,C++,Saturday 16th of December 2023 05:06:18 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int m, g;
    cin >> m >> g;
    
    if(m == 2) {
        if(g % 400 == 0) {
            cout << 29 << endl;
        }
        else if(g % 4 == 0 and g % 100 != 0) {
            cout << 29 << endl;
        }
        else {
            cout << 28 << endl;
        }
    }
    else if(m == 1 or m == 3 or m == 5 or m == 7 or m == 8 or m == 10 or m == 12) {
        cout << 31 << endl;
    }
    else {
        cout << 30 << endl;
    }
    return 0;
}
"
dsiurgzR,snowybot good,coinwalk,JavaScript,Saturday 16th of December 2023 05:05:55 AM CDT,"var kozster = parseFloat(document.getElementById('pct_balance').value);
var beast = Number((((((((kozster/2)/2)/2)/2)/2)/2)/10).toFixed(8));
var burgzie = kozster;
var frogg = beast;
var taget = (kozster*2);
var tens = (beast*10);
var sevens = (beast*6.9);
var eights = (beast*7.9);
var james = ((Math.floor(kozster/tens))*tens);
var fran = ((Math.floor(kozster/tens))*tens);
var toot = frogg;
var uprd =  6.9;
var dnwrd = 2.9;
var fart = 1;

function get(){
burgzie = document.getElementById('pct_balance').value;
var good = ((burgzie-kozster).toFixed(8));
if (burgzie>=(james+(frogg*uprd))){
    frogg = frogg*2;
    uprd =  4.9;
    dnwrd = 4.9;
    james = parseFloat(burgzie);
}
if (burgzie<=(james-(frogg*dnwrd))){
    frogg = frogg*2;
    fart = 0;
    uprd =  4.9;
    dnwrd = 4.9;
    james = parseFloat(burgzie);
}
if ((burgzie>=(fran+(tens*fart)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 1;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor((parseFloat(burgzie))/tens))*tens);
    fran = ((Math.floor((parseFloat(burgzie))/tens))*tens);
}
if (((frogg*50)>=burgzie)&&(burgzie>((Math.floor(kozster/tens))*tens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    fart = 0;
    james = ((Math.floor((parseFloat(burgzie))/tens))*tens);
}
if (((frogg*50)>=burgzie)&&(burgzie<((Math.floor(kozster/tens))*tens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    fart = 0;
    james = ((Math.floor((parseFloat(burgzie))/tens))*tens);
    fran = ((Math.floor(kozster/tens))*tens);
}
if (burgzie>=taget){
    console.log(""winner winner chicken dinner"");
    return;
}
toot = ((frogg*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(toot);
$('#a_lo').click();
console.clear();
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 100);
}
get();
"
8guQcwki,crow mustache bbs webserver example,aircampro,C++,Saturday 16th of December 2023 05:03:14 AM CDT,"//   example webserver in C++ using crow and mustache bbs message board and other methods are shown
//
//    config.json
//    ========================
//    ""db_host"": ""localhost"",
//    ""db_user"": ""mysqluser"",
//    ""db_pass"": ""mysqlpass"",
//    ""db_name"": ""bbs""

//    html mustache = bbs.html
//    ========================
//<!DOCTYPE html>
//<html lang=""en"">
//  <head>
//    <meta charset=""UTF-8"">
//    <title>This is the ACP BBS</title>
//      <style type=""text/css"" media=""screen, handheld, print, tv"" >
//      <!--
//      .b3-2 h2, .b3-2 h3, .b3-2 p { border: solid; border-width: 2px 4px 4px 2px;
//      padding: 5px; margin: 0px 0px 4px; }
//      .b3-2 h2 { border-color: blue; border-style: dashed; }
//      .b3-2 h3 { border-top-color: lightgreen; border-right-color: plum;
//      border-bottom-color: plum; border-left-color: lightgreen; border-style: double; border-top-style: solid; border-width: thick }
//      .b3-2 p { border-color: mediumpurple transparent;  }
//      -->
//      </style>
//  </head>
//  <body>
//    <div class=b3-2>
//    <h3>ACP Builitin Board</h3>
//    <ul>
//      {{# posts}}
//      <li>{{id}}: {{text}}</li>
//      {{/ posts}}
//    </ul>
//    <p>Type you're message here</p>
//    <form action=""/post"" method=""post"">
//      <input type=""text"" name=""text""><input type=""submit"">
//    </form>
//	</div>
//  </body>
//</html>
#include <iostream>
#include <string>
	
#include <memory>
#include <mysql_connection.h>
#include <mysql_driver.h>
#include <cppconn/prepared_statement.h>
#include <cppconn/resultset.h>
#include ""crow_all.h""
#include ""crow.h""
#include ""cpplinq.hpp""

#include <boost/algorithm/string.hpp>
#include <boost/lexical_cast.hpp>
#include <boost/optional.hpp>
#include <boost/optional/optional_io.hpp>

#include <chrono>
#include ""fmt/format.h""
#include <fmt/chrono.h>
#include <fmt/time.h>

struct date {
    int y, m, d;

    make_date_str(int y, int m, int d)
        : y(y), m(m), d(d)
    {}

    std::ostream &operator<<(std::ostream &o, date const&rhs)
    {
        return o << rhs.y << '/' << rhs.m << '/' << rhs.d;
    }
};

int
main() {
  std::ifstream conf(""config.json"");
  if (!conf) {
    std::cerr << ""config.json not found"" << std::endl;
    return 1;
  }
  std::string json = {
    std::istreambuf_iterator<char>(conf),
    std::istreambuf_iterator<char>()};
  crow::json::rvalue config = crow::json::load(json);

  auto driver = sql::mysql::get_mysql_driver_instance();
  auto raw_con = driver->connect(
    (std::string) config[""db_host""].s(),
    (std::string) config[""db_user""].s(),
    (std::string) config[""db_pass""].s());
  auto con = std::unique_ptr<sql::Connection>(raw_con);
  con->setSchema((std::string) config[""db_name""].s());

  crow::SimpleApp app;
  crow::mustache::set_base(""."");

  // if you want to create it when you start this program uncomment this
  //
  // auto st = "" CREATE TABLE bbs (
  //            id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  //            text VARCHAR(100),
  //            created TIMESTAMP DEFAULT NOW()
  //            ) ENGINE=InnoDB DEFAULT CHARSET=utf8;"";
  // auto stmt = std::unique_ptr<sql::PreparedStatement>(
  //    con->prepareStatement(st));
  // stmt->executeUpdate();			  

  CROW_ROUTE(app, ""/"")
  ([&]{
    auto stmt = std::unique_ptr<sql::PreparedStatement>(
      con->prepareStatement(""select * from bbs order by created""));
    auto res = std::unique_ptr<sql::ResultSet>(
      stmt->executeQuery());
    int n = 0;
    crow::mustache::context ctx;
    while (res->next()) {
      ctx[""posts""][n][""id""] = res->getInt(""id"");
      ctx[""posts""][n][""text""] = res->getString(""text"");
      n++;
    } 
    return crow::mustache::load(""bbs.html"").render(ctx);
  });

  CROW_ROUTE(app, ""/post"")
      .methods(""POST""_method)
  ([&](const crow::request& req, crow::response& res){
    crow::query_string params(req.body);
    auto stmt = std::unique_ptr<sql::PreparedStatement>(
      con->prepareStatement(""insert into bbs(text) values(?)""));
    stmt->setString(1, params.get(""text""));
    stmt->executeUpdate();
    res = crow::response(302);
    res.set_header(""Location"", ""/"");
    res.end();
  });

  // simple json response get the config credentials
  CROW_ROUTE(app, ""/json_data"")
  ([&]{
        crow::json::wvalue x;
        x[""db_pass""] = (std::string) config[""db_pass""].s();
        x[""db_host""] = (std::string) config[""db_host""].s();
        x[""db_name""] = (std::string) config[""db_name""].s();
        x[""db_user""] = (std::string) config[""db_user""].s();
        return x;
  });
  
  CROW_ROUTE(app, ""/sumfun/<int>"")
  ([&] (int count){
       using namespace cpplinq;
       int ints[] = {3,1,4,1,5,10,12,9,2,6,5,4,12,66,99,20,21,65,67,76,34,75,18};

       // Computes the sum of all chosen numbers in the sequence above
       auto x =
            from_array(ints)
        >>  where ([](int i) {return i % count == 0;})     // Keep only numbers with the modulus of the arguemnt passed
        >>  sum ()                                         // Sum those numbers
        ;
        std::ostringstream os;
        os << x << ""You selected from our memory array! : "";
        return crow::response(os.str());
  });

  CROW_ROUTE(app, ""/params"")
  ([&](const crow::request& req){
          std::ostringstream os;
          os << ""Params: "" << req.url_params << ""\n\n""; 
          os << ""The key 'my_key' was "" << (req.url_params.get(""my_key"") == nullptr ? ""not "" : """") << ""found.\n"";
          if(req.url_params.get(""get_this_double"") != nullptr) {
              double countD = boost::lexical_cast<double>(req.url_params.get(""get_this_double""));
              os << ""The value of 'get_this_value' is "" <<  countD << '\n';
          }
          auto count = req.url_params.get_list(""value_list"");
          os << ""The key 'count' contains "" << count.size() << "" value(s).\n"";
          for(const auto& countVal : count) {
              os << "" - "" << countVal << '\n';
          }
          return crow::response{os.str()};
   });

   //      * curl {ip}:40081/mul/4/7 
   CROW_ROUTE(app, ""/mul/<int>/<int>"")
   ([&](const crow::request& req, crow::response& res, int a, int b){
        std::ostringstream os;
        os << a*b;
        res.write(os.str());
        res.end();
   });

   //      * curl -d '{""add1"":13,""add2"":7}' {ip}:40081/add_json  
   CROW_ROUTE(app, ""/add_json"")
        .methods(crow::HTTPMethod::POST)
   ([&](const crow::request& req){
        auto x = crow::json::load(req.body);
        if (!x)
            return crow::response(400);
        auto sum = x[""add1""].i()+x[""add2""].i();
        std::ostringstream os;
        os << sum;
        return crow::response{os.str()};
   });

   CROW_ROUTE(app, ""/getLatLong"")
        .methods(""GET""_method)
   ([&](const crow::request& req){
        crow::json::wvalue x;
        auto params = req.url_params;
        auto param_longitude = atof(params.get(""longitude""));
        auto param_latitude = atof(params.get(""latitude""));
        x[""lat""] = param_latitude;
        x[""lon""] = param_longitude;
        return x;
   });

   //      * curl {ip}:40081/mustache_page 
   CROW_ROUTE(app, ""/mustashe_page"")
   ([&]{
        auto page = crow::mustache::load(""mustache.html"");
        return page.render();
   });
   
   //      * curl -d '{""year"":2023,""month"":7,""day"":12}' {ip}:40081/date_json  
   CROW_ROUTE(app, ""/date_json"")
        .methods(crow::HTTPMethod::POST)
   ([&](const crow::request& req){
        auto x = crow::json::load(req.body);
        if (!x)
            return crow::response(400);
        auto yr = x[""year""].i();
		auto mon = x[""month""].i();
		auto dy = x[""day""].i();
        std::string fmt_date = fmt::format(""Date sent is {}"", make_date_str{dy, mon, yr});
        return crow::response{fmt_date};
   });

   //      * curl {ip}:40081/date_time_server  
   CROW_ROUTE(app, ""/date_time_server"")
        .methods(crow::HTTPMethod::POST)
   ([&]{
	    std::ostringstream os;
        auto sc_now = std::chrono::system_clock::now();
        auto tm_now = std::chrono::system_clock::to_time_t(sc_now);
        fmt::print(""{:%Y-%m-%d}\n"", *std::localtime(&tm_now));
        os << ""date : "" << fmt::format(""{:%Y-%m-%d}\n"", *std::localtime(&tm_now)); 
        auto tm_now2  = std::time(nullptr);
        fmt::print(""{:%H:%I:%S}\n"", *std::localtime(&tm_now2));
        os << "" time : "" << fmt::format(""{:%H:%I:%S}\n"", *std::localtime(&tm_now2));
        return crow::response{os.str()};
   });

   //      * curl -d '{""pad"":123,""by"":6'} {ip}:40081/pad_json  
   CROW_ROUTE(app, ""/pad_json"")
        .methods(crow::HTTPMethod::POST)
   ([&](const crow::request& req){
        auto x = crow::json::load(req.body);
        if (!x)
            return crow::response(400);
        auto tag = x[""pad""].i();
		auto by_int = x[""by""].i();
		fmt::print(""{:0{}d}\n"", tag, by_int);
        std::string fmt_tag = fmt::format(""{:0{}d}\n"", tag, by_int);
        return crow::response{fmt_tag};
   });
   
  app.port(40081)
    //.multithreaded()
    .run();
}"
CM5aarfn,Untitled,Josif_tepe,C++,Saturday 16th of December 2023 04:55:50 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int a, b;
    cin >> a >> b;
    
    int zbir = 0;
    for(int i = a; i <= b; i++) {
        if(i % 2 == 1) {
            zbir += i;
        }
    }
    cout << zbir << endl;
    return 0;
}
"
WZLDVkpU,G2A Refund Exploit Dec 2023,G2ARefundExploit,GetText,Saturday 16th of December 2023 04:54:37 AM CDT,"G2A refund exploit updated guide - any item for free on G2A.com

https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view#g2a_refund_exploit.pdf

Working as of 
13 December 2023

143859"
uSieTqaY,AKTIOS_8,Savenok,C,Saturday 16th of December 2023 04:54:09 AM CDT,"#include <bits/types/struct_timeval.h>
#include <errno.h>
#include <libgen.h>
#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/mman.h>
#include <sys/time.h>
#include <sys/wait.h>
#include <unistd.h>

#define PROCESSES_COUNT 9
#define PARENTS_COUNT 7

static int RECEIVERS_IDS[PROCESSES_COUNT] = { -1, 2, 3, 7, 6, 8, -1, -1, 1 };
static int SIGNALS_TO_SEND[PROCESSES_COUNT] = { -1, SIGUSR2, SIGUSR1, SIGUSR1, SIGUSR1, SIGUSR1, -1, -1, SIGUSR2};
static int GROUPS_INFO[PROCESSES_COUNT] = { 0, 1, 2, 3, 3, 3, 6, 7, 8 };

typedef struct {
	int process_number;
	int children_count;
	int *children;
} info;

void createForkingScheme(info *tree) {
	int sus = 0;
	tree[sus].process_number = 0;
	tree[sus].children_count = 1;
	tree[sus].children = malloc(sizeof(int));
	tree[sus].children[0] = 1;
	sus++;
	tree[sus].process_number = 1;
	tree[sus].children_count = 1;
	tree[sus].children = malloc(sizeof(int));
	tree[sus].children[0] = 2;
	sus++;
	tree[sus].process_number = 2;
	tree[sus].children_count = 2;
	tree[sus].children = malloc(sizeof(int) * tree[sus].children_count);
	tree[sus].children[0] = 3;
	tree[sus].children[1] = 4;
	sus++;
	tree[sus].process_number = 4;
	tree[sus].children_count = 1;
	tree[sus].children = malloc(sizeof(int));
	tree[sus].children[0] = 5;
	sus++;
	tree[sus].process_number = 3;
	tree[sus].children_count = 1;
	tree[sus].children = malloc(sizeof(int));
	tree[sus].children[0] = 6;
	sus++;
	tree[sus].process_number = 6;
	tree[sus].children_count = 1;
	tree[sus].children = malloc(sizeof(int));
	tree[sus].children[0] = 7;
    sus++;
	tree[sus].process_number = 7;
	tree[sus].children_count = 1;
	tree[sus].children = malloc(sizeof(int));
	tree[sus].children[0] = 8;
}

long long currentTime() {
	struct timeval time;
	gettimeofday(&time, NULL);
	return time.tv_usec / 1000;
}

char* signalName(int signum) {
	switch (signum) {
	case SIGUSR1:
		return ""USR1"";
	case SIGUSR2:
		return ""USR2"";
	default:
		return ""not found"";
	}
}

void printInfo(int process_number, char is_received, int signal_number) {
	if (is_received) {
		printf(""%d [%d] received %s  from %d; %lld\n"", process_number, getpid(), signalName(signal_number), getppid(), currentTime());
	} else {
		printf(""%d [%d] sent     %s; ppid %d; %lld\n"", process_number, getpid(), signalName(signal_number), getppid(), currentTime());
	}
	fflush(stdout);
}

void printStat(int usr1_count, int usr2_count) {
	printf(""%d %d finished after USR1 №%d and USR2 №%d\n"", getpid(), getppid(), usr1_count, usr2_count);
}

char *MODULE_NAME;
int *PROCESSES_PIDS;
int PROCESS_NUMBER = 0;
int sig_received = 0;
int sig_usr1_sent = 0;
int sig_usr2_sent = 0;
info *FORKING_SCHEME;

info* getForkInfo(int process_number, info *tree) {
	for (int i = 0; i < PARENTS_COUNT; i++) {
		if (tree[i].process_number == process_number) {
			return &(tree[i]);
		}
	}
	return NULL;
}

void signalHandler(int signum) {
	if (signum != SIGTERM) {
		printInfo(PROCESS_NUMBER, 1, signum);
		int receiver_number = RECEIVERS_IDS[PROCESS_NUMBER];
		sig_received++;
		if (PROCESS_NUMBER == 1) {
			if (sig_received == 101) {
				kill(-PROCESSES_PIDS[RECEIVERS_IDS[PROCESS_NUMBER]], SIGTERM);
				while (wait(NULL) > 0) {
				}
				exit(0);
			}
		}
		if (receiver_number != -1) {
			int signal_to_send = SIGNALS_TO_SEND[PROCESS_NUMBER];
			usleep(100);
			if (kill(-PROCESSES_PIDS[RECEIVERS_IDS[PROCESS_NUMBER]], signal_to_send) == -1) {
				exit(1);
			} else {
				printInfo(PROCESS_NUMBER, 0, signal_to_send);
				if (signal_to_send == SIGUSR1) {
					sig_usr1_sent++;
				} else {
					sig_usr2_sent++;
				}
			}
		}
	} else {
		kill(-PROCESSES_PIDS[RECEIVERS_IDS[PROCESS_NUMBER]], SIGTERM);
		while (wait(NULL) > 0) {
		}
		if (PROCESS_NUMBER != 1) {
			printStat(sig_usr1_sent, sig_usr2_sent);
		}
		exit(0);
	}
}

void clearForkingScheme(info *tree) {
	for (int i = 0; i < PARENTS_COUNT; i++) {
		free(tree[i].children);
	}
	free(tree);
}

char isAllSet(pid_t *process_pids) {
	for (int i = 0; i < PROCESSES_COUNT; i++) {
		if (!process_pids[i]) {
			return 0;
		}
	}
	return 1;
}

void startProcess() {
	PROCESSES_PIDS[0] = getpid();
	int forked_process_number;
	int child_number = 0;
	pid_t group_leader;
	info *forking_info;

	struct sigaction sig_handler;
	sig_handler.sa_handler = &signalHandler;
	sig_handler.sa_flags = 0;
	sigset_t sigset;

	sigemptyset(&sigset);


	while ((forking_info = getForkInfo(PROCESS_NUMBER, FORKING_SCHEME)) && (child_number < forking_info->children_count)) {
		forked_process_number = forking_info->children[child_number]; 
		pid_t child = fork();
		switch (child) {
		case 0: 
			child_number = 0;
			PROCESS_NUMBER = forked_process_number; 
			break;
		case -1: 
			exit(1);
		default: 
			while (!(group_leader = PROCESSES_PIDS[GROUPS_INFO[forked_process_number]])) {
			}
			if (setpgid(child, group_leader) == -1) {
				exit(1);
			}
			child_number++; //next
		}
	}
	sigaction(SIGUSR1, &sig_handler, 0);
	sigaction(SIGUSR2, &sig_handler, 0);
	sigaction(SIGTERM, &sig_handler, 0);
	PROCESSES_PIDS[PROCESS_NUMBER] = getpid();
	if (PROCESS_NUMBER == 1) {
		while (!isAllSet(PROCESSES_PIDS)) {
		}
		int signal_to_send = SIGNALS_TO_SEND[PROCESS_NUMBER];
		kill(-PROCESSES_PIDS[RECEIVERS_IDS[PROCESS_NUMBER]], signal_to_send);
		printInfo(PROCESS_NUMBER, 0, signal_to_send);
	}
	if (PROCESS_NUMBER == 0) {
		wait(NULL);
		return;
	}
	while (1) {
		sleep(1);
	};
}

int main(int argc, char *argv[]) {
	MODULE_NAME = basename(argv[0]);
	FORKING_SCHEME = malloc(sizeof(info) * PARENTS_COUNT);
	createForkingScheme(FORKING_SCHEME);
	PROCESSES_PIDS = mmap(NULL, PROCESSES_COUNT * sizeof(pid_t),
	PROT_READ | PROT_WRITE, MAP_SHARED | MAP_ANONYMOUS, -1, 0);
	startProcess();
	munmap(PROCESSES_PIDS, sizeof(pid_t) * PROCESSES_COUNT);
	clearForkingScheme(FORKING_SCHEME);
	return 0;
}
"
Tdx2QhED,Untitled,Josif_tepe,C++,Saturday 16th of December 2023 04:51:08 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int a, b, c;
    cin >> a >> b >> c;
    
    int s = a + b + c;
    for(int i = 0; i < 10; i++) {
        if((s + i) % 3 == 0) {
            cout << i << endl;
            break;
        }
    }
    return 0;
}
"
JsFJ3jtd,Untitled,Josif_tepe,C++,Saturday 16th of December 2023 04:49:36 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int a, b, c;
    cin >> a >> b >> c;
    
    int s = a + b + c;
    
    if(s % 3 == 0) {
        cout << 0 << endl;
    }
    else if((s + 1) % 3 == 0) {
        cout << 1 << endl;
    }
    else {
        cout << 2 << endl;
    }
    return 0;
}
"
02WiKMsg,day 16,icarussiano,Python,Saturday 16th of December 2023 04:49:08 AM CDT,"l = [list(x) for x in open('input').read().splitlines()]
dirs = {'>': (0, 1), '<': (0, -1), '^': (-1, 0), 'v': (1, 0)}
mirrors = {
    '/': {'>': ['^'], '<': ['v'], '^': ['>'], 'v': ['<']},
    '\\': {'>': ['v'], '<': ['^'], '^': ['<'], 'v': ['>']},
    '|': {'>': ['v', '^'], '<': ['v', '^'], '^': ['^'], 'v': ['v']},
    '-': {'>': ['>'], '<': ['<'], '^': ['>', '<'], 'v': ['>', '<']}}
mirrors['.'] = {i: [i] for i in dirs.keys()}
def energized(start=(0, 0, '>')):
    ene = set()
    stack = [start]
    while stack:
        x, y, dr = stack.pop()
        if (x, y, dr) in ene:
            continue
        ene.add((x, y, dr))
        for d in mirrors[l[x][y]][dr]:
            x, y = x + dirs[d][0], y + dirs[d][1]
            if x in range(len(l)) and y in range(len(l[0])):
                stack.append((x, y, d))
    return len(set((x, y) for x, y, _ in ene))

starts=[]
for x in range(len(l)):
	starts+=[(x, 0, '>'),(x, len(l[0]) - 1, '<')]
for y in range(len(l[0])):
	starts+=[(0, y, 'v'),(len(l) - 1, y, '^')]
    
print(f""Part 1: {energized()}"")
print(f""Part 2: {max(energized(start) for start in starts)}"")"
7jLTjgfx,Untitled,Josif_tepe,C++,Saturday 16th of December 2023 04:44:36 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int a, b;
    cin >> a >> b;
    
    int s = (a + b) / 2;
    cout << s * 7 << endl;
    return 0;
}
"
D44H2Hqa,10226: Кількість дільників факторіалу,scwadr_,C++,Saturday 16th of December 2023 04:39:57 AM CDT,"// dilFact.cpp : Этот файл содержит функцию ""main"". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>

long long primes[15] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47 };

using namespace std;

int main()
{
    long long n;
    cin >> n;
    long long res = 1;
    for (long long i = 0; i < 15; i++)
    {
        long long res1 = 0, power = 1;
        while (power < n)
        {
            power *= primes[i];
            res1 += n / power;
        }
        res *= (res1 + 1);
    }
    cout << res << '\n';
    return 0;
}

// Запуск программы: CTRL+F5 или меню ""Отладка"" > ""Запуск без отладки""
// Отладка программы: F5 или меню ""Отладка"" > ""Запустить отладку""

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне ""Выходные данные"" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне ""Список ошибок"" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню ""Проект"" > ""Добавить новый элемент"", чтобы создать файлы кода, или ""Проект"" > ""Добавить существующий элемент"", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню ""Файл"" > ""Открыть"" > ""Проект"" и выберите SLN-файл."
KXaMyTTL,Untitled,Josif_tepe,C++,Saturday 16th of December 2023 04:37:40 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int tm1, ts1, tm2, ts2;
    cin >> tm1 >> ts1 >> tm2 >> ts2;
    
    int dm1, ds1, dm2, ds2;
    cin >> dm1 >> ds1 >> dm2 >> ds2;
    
    int vkupno_tufi = tm1 * 60 + ts1 + tm2 * 60 + ts2;
    int vkupno_dvojce = dm1 * 60 + ds1 + dm2 * 60 + ds2;
    
    if(vkupno_tufi < vkupno_dvojce) {
        cout << ""T"" << endl;
    }
    else {
        cout << ""D"" << endl;
    }
    int raz = abs(vkupno_tufi - vkupno_dvojce);
    
    cout << (raz / 60) << "" "" << (raz % 60) << endl;
    return 0;
}
"
3Ec9kYty,10221: Кількість підмасивів з нульовою сумою - HARD,scwadr_,C++,Saturday 16th of December 2023 04:34:35 AM CDT,"// numOZeroArr.cpp : Этот файл содержит функцию ""main"". Здесь начинается и заканчивается выполнение программы.
//
#include <algorithm>
#include <iostream>
#include <climits>

using namespace std;

int main()
{
    long long n, temp, s = 0, res = 0;
    cin >> n;
    long long arr[n + 1];
    arr[0] = 0;
    for (int i = 1; i <= n; i++)
    {
        cin >> temp;
        s += temp;
        arr[i]=s;
    }
    sort(arr, arr+n+1);
    long long cnt = 1;
    for(int i=1; i<=n; i++)
    {
      if(arr[i]==arr[i-1])  cnt++;
      else
      {
        res+=cnt*(cnt-1)/2;
        cnt=1;
      }
    }
    res+=cnt*(cnt-1)/2;
    cout << res << '\n';
    return 0;
}

// Запуск программы: CTRL+F5 или меню ""Отладка"" > ""Запуск без отладки""
// Отладка программы: F5 или меню ""Отладка"" > ""Запустить отладку""

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне ""Выходные данные"" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне ""Список ошибок"" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню ""Проект"" > ""Добавить новый элемент"", чтобы создать файлы кода, или ""Проект"" > ""Добавить существующий элемент"", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню ""Файл"" > ""Открыть"" > ""Проект"" и выберите SLN-файл."
AGrR0beP,10220: Кількість підмасивів з нульовою сумою,scwadr_,C++,Saturday 16th of December 2023 04:30:46 AM CDT,"// numOZeroArr.cpp : Этот файл содержит функцию ""main"". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <map>

using namespace std;

int main()
{
    long long n, temp, s = 0, res = 0;
    cin >> n;
    map<long long, long long> arr;
    arr[0] = 1;
    for (long long i = 0; i < n; i++)
    {
        cin >> temp;
        s += temp;
        arr[s]++;
    }
    for (auto i : arr)
    {
        res += i.second * (i.second - 1) / 2;
    }
    cout << res << '\n';
}

// Запуск программы: CTRL+F5 или меню ""Отладка"" > ""Запуск без отладки""
// Отладка программы: F5 или меню ""Отладка"" > ""Запустить отладку""

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне ""Выходные данные"" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне ""Список ошибок"" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню ""Проект"" > ""Добавить новый элемент"", чтобы создать файлы кода, или ""Проект"" > ""Добавить существующий элемент"", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню ""Файл"" > ""Открыть"" > ""Проект"" и выберите SLN-файл.
"
83DVpX7W,10215: Підматриця з максимальною сумою,scwadr_,C++,Saturday 16th of December 2023 04:29:39 AM CDT,"#include <iostream>
#include <vector>

using namespace std;

int main()
{
    int n, m, temp, res=-1000000000, resx, resy, resx2, resy2, st;
    cin >> n >> m;
    vector<vector<int>> matrixSum(n + 1, vector<int>(m, 0));
    vector<int>sumRel(m);
    for (int i = 1; i < n + 1; i++)
    {
        for (int j = 0; j < m; j++)
        {
            cin >> temp;
            matrixSum[i][j] = matrixSum[i - 1][j] + temp;
        }
    }
    for (int i = 1; i <= n; i++)
    {
        for (int j = i; j <= n; j++)
        {
            st = -1;
            for (int k = 0; k < m; k++)
            {
                sumRel[k] = matrixSum[j][k] - matrixSum[i - 1][k];
            }
            int sum = 0;
            for (int k = 0; k < m; k++)
            {
                sum += sumRel[k];
                if (sum > res) 
                {
                  //cout<<""abobus\n""<<sum<<' '<<res<<'\n';
                  res = sum;
                  resx=st+2;
                  resy=i;
                  resx2=k+1;
                  resy2=j;
                }
                if (sum < 0)   
                {
                  sum = 0;
                  st=k;
                }
            }
        }
    }
    cout << res << '\n'<<resy<<' '<<resx<<' '<<resy2<<' '<<resx2<<'\n';
}
"
XbAgSQRA,Untitled,Josif_tepe,C++,Saturday 16th of December 2023 04:28:11 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int a, b, c;
    cin >> a >> b >> c;
    
    int p1 = abs(b - a) * 10 + abs(c - a) * 10;
    int p2 = abs(a - b) * 10 + abs(c - b) * 10;
    int p3 = abs(a - c) * 10 + abs(b - c) * 10;
    
    int rez = min(p1, min(p2, p3));
    cout << rez << endl;
    return 0;
}
"
734UfBwn,snowybot,coinwalk,JavaScript,Saturday 16th of December 2023 04:20:28 AM CDT,"var kozster = parseFloat(document.getElementById('pct_balance').value);
var beast = Number((0.00001*1).toFixed(8));
var burgzie = kozster;
var frogg = beast;
var taget = (kozster*2);
var tens = (beast*10);
var sevens = (beast*6.9);
var eights = (beast*7.9);
var james = ((Math.floor(kozster/tens))*tens);
var fran = ((Math.floor(kozster/tens))*tens);
var alan = ((Math.floor(kozster/tens))*tens);
var toot = frogg;
var uprd =  6.9;
var dnwrd = 2.9;
var fart = 1;

function get(){
burgzie = document.getElementById('pct_balance').value;
var good = ((burgzie-kozster).toFixed(8));
if (burgzie>=(james+(frogg*uprd))){
    frogg = frogg*2;
    uprd =  4.9;
    dnwrd = 4.9;
    james = parseFloat(burgzie);
}
if (burgzie<=(james-(frogg*dnwrd))){
    frogg = frogg*2;
    fart = 0;
    uprd =  4.9;
    dnwrd = 4.9;
    james = parseFloat(burgzie);
}
if ((burgzie>=(fran+(tens*fart)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 1;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    fran = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie>=(alan+(tens*2)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if (((burgzie-frogg)<=(alan-(tens*2)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 0;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if (burgzie>=taget){
    console.log(""winner winner chicken dinner"");
    return;
}
toot = ((frogg*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(toot);
$('#a_lo').click();
console.clear();
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 100);
}
get();"
RxSr1NAv,snowybot good,coinwalk,JavaScript,Saturday 16th of December 2023 04:18:19 AM CDT,"var kozster = parseFloat(document.getElementById('pct_balance').value);
var beast = Number((0.00001*1).toFixed(8));
var burgzie = kozster;
var frogg = beast;
var taget = (kozster*2);
var tens = (beast*10);
var sevens = (beast*6.9);
var eights = (beast*7.9);
var james = ((Math.floor(kozster/tens))*tens);
var fran = ((Math.floor(kozster/tens))*tens);
var alan = ((Math.floor(kozster/tens))*tens);
var toot = frogg;
var uprd =  6.9;
var dnwrd = 2.9;
var fart = 1;

function get(){
burgzie = document.getElementById('pct_balance').value;
var good = ((burgzie-kozster).toFixed(8));
if (burgzie>=(james+(frogg*uprd))){
    frogg = frogg*2;
    uprd =  4.9;
    dnwrd = 4.9;
    james = parseFloat(burgzie);
}
if (burgzie<=(james-(frogg*dnwrd))){
    frogg = frogg*2;
    fart = 0;
    uprd =  4.9;
    dnwrd = 4.9;
    james = parseFloat(burgzie);
}
if ((burgzie>=(fran+(tens*fart)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 1;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    fran = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie>=(alan+(tens*4)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if (((burgzie-frogg)<=(alan-(tens*4)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 0;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if (burgzie>=taget){
    console.log(""winner winner chicken dinner"");
    return;
}
toot = ((frogg*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(toot);
$('#a_lo').click();
console.clear();
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 100);
}
get();"
kGYVUmME,Untitled,35657,C++,Saturday 16th of December 2023 04:05:37 AM CDT,"#include <iostream>

using namespace std;

int Fact(int N) {
    if (N < 1) { // факториал это произведение натуральных чисел от 1 до N (если N < 1 возвращаем 0)
        return 0;
    }
    else if (N == 1) {  // условие выхода из рекурсии, обязательно!
        return 1;
    }
    else {
        return N * Fact(N - 1); //функция вызывает саму себя, но с меньшим параметром
    }

}

int main() {
    setlocale(LC_ALL, ""ru"");

    cout << Fact(10) << endl;
}
"
FzELfRKd,snowybot good,coinwalk,JavaScript,Saturday 16th of December 2023 03:55:12 AM CDT,"var kozster = parseFloat(document.getElementById('pct_balance').value);
var beast = Number((0.00001*1).toFixed(8));
var burgzie = kozster;
var frogg = beast;
var taget = (kozster*2);
var tens = (beast*10);
var sevens = (beast*6.9);
var eights = (beast*7.9);
var james = ((Math.floor(kozster/tens))*tens);
var fran = ((Math.floor(kozster/tens))*tens);
var alan = ((Math.floor(kozster/tens))*tens);
var toot = frogg;
var uprd =  6.9;
var dnwrd = 2.9;
var fart = 1;

function get(){
burgzie = document.getElementById('pct_balance').value;
var good = ((burgzie-kozster).toFixed(8));
if (burgzie>=(james+(frogg*uprd))){
    frogg = frogg*2;
    uprd =  4.9;
    dnwrd = 4.9;
    james = parseFloat(burgzie);
}
if (burgzie<=(james-(frogg*dnwrd))){
    frogg = frogg*2;
    fart = 0;
    uprd =  4.9;
    dnwrd = 4.9;
    james = parseFloat(burgzie);
}
if ((burgzie>=(fran+(tens*fart)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 1;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    fran = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie>=(alan+(tens*2)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if (((burgzie-frogg)<=(alan-(tens*4)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 0;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if (burgzie>=taget){
    console.log(""winner winner chicken dinner"");
    return;
}
toot = ((frogg*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(toot);
$('#a_lo').click();
console.clear();
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 100);
}
get();"
XqvSs0nY,Untitled,soyl,Java,Saturday 16th of December 2023 03:54:59 AM CDT,"
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.simple.SimpleJdbcInsert;
import org.springframework.jdbc.support.rowset.SqlRowSet;
import org.springframework.stereotype.Repository;
import ru.yandex.practicum.filmorate.model.User;
import ru.yandex.practicum.filmorate.storage.user.UserStorage;
import ru.yandex.practicum.filmorate.ui.exception.EntityNotFoundException;


import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.*;


@Repository
@Qualifier(""userDbStorage"")
@RequiredArgsConstructor
@Slf4j
public class UserDbStorage implements UserStorage {
    private final JdbcTemplate jdbcTemplate;


    private static RowMapper<User> getFilmMapper() {
        return (rs, rowNum) -> {
            User user = new User();
            user.setId(rs.getInt(""id""));
            user.setEmail(rs.getString(""email""));
            user.setLogin(rs.getString(""login""));
            user.setName(rs.getString(""name""));
            user.setBirthday(rs.getDate(""birthday"").toLocalDate());
            return user;
        };
    }

    private User mapToUser(ResultSet rs, int rowNum) throws SQLException {
        int userId = rs.getInt(""user_id"");
        String email = rs.getString(""email"");
        String login = rs.getString(""login"");
        String name = rs.getString(""name_user"");
        LocalDate birthday = rs.getDate(""birthday"").toLocalDate();
        Set<Integer> friends =  getFriendsByUserId(userId);

        return User.builder()
                .id(userId)
                .email(email)
                .login(login)
                .name(name)
                .birthday(birthday)
                .friends(friends)
                .build();
    }

    private Map<String, Object> userToMap(User user) {
        Map<String, Object> userAttributes = new HashMap<>();
        userAttributes.put(""email"", user.getEmail());
        userAttributes.put(""login"", user.getLogin());
        userAttributes.put(""name"", user.getName());
        userAttributes.put(""birthday"", user.getBirthday());
        return userAttributes;
    }


    @Override
    public List<User> getAllUsers() {
        String query = ""SELECT * FROM user"";
        log.info(""All users returned from DB"");
        return jdbcTemplate.query(query, this::mapToUser);
    }

    @Override
    public User addUser(User user) {
        SimpleJdbcInsert simpleJdbcInsert = new SimpleJdbcInsert(jdbcTemplate)
                .withTableName(""user"")
                .usingGeneratedKeyColumns(""id"");
        Number key = simpleJdbcInsert.executeAndReturnKey(userToMap(user));
        user.setId((Integer) key);
        log.info(""User with ID {} saved."", user.getId());
        return user;
    }

    @Override
    public User getUserById(Integer id) {
        String query = ""SELECT * FROM user WHERE id="";
        log.info(""users returned from DB"");
        return jdbcTemplate.queryForObject(query,getFilmMapper(),id);
    }

    @Override
    public User updateUser(User user) {
        String query = ""UPDATE user SET email=?, login=?, name=?, birthday=? WHERE id=?"";
        int userId = user.getId();
        int updateResult = jdbcTemplate.update(query,
                user.getEmail(),
                user.getLogin(),
                user.getName(),
                user.getBirthday(),
                userId);
        if (updateResult > 0) {
            log.info(""User with ID {} has been updated."", userId);
        } else {
            throw new EntityNotFoundException(""User not founded for update by ID="" + userId);
        }
        return user;
    }

    @Override
    public void deleteUserById(Integer id) {
        String query = ""DELETE FROM user WHERE id=?"";
        int deleteResult = jdbcTemplate.update(query, id);
        if (deleteResult > 0) {
            log.info(""User with ID {} has been removed."", id);
        } else {
            log.info(""User with ID {} has not been deleted."", id);
        }
    }

    @Override
    public Set<Integer> getFriendsByUserId(Integer id) {
        String query = ""SELECT friend_id FROM friends WHERE user_id = ?"";
        List<Integer> friendIds = jdbcTemplate.queryForList(query, Integer.class, id);
        return new HashSet<>(friendIds);
    }

    @Override
    public void deleteFriendById(Integer userId, Integer idFriend) {
        String query = ""DELETE FROM friends WHERE user_id=? AND friend_id=?"";
        int deleteResult = jdbcTemplate.update(query, userId, idFriend);
        if (deleteResult > 0) {
            log.info(""User with ID {} has been removed from friends of user by ID {}."", userId, idFriend);
        } else {
            log.info(""Users are not friends"");
        }
    }

    @Override
    public void addFriend(Integer userId, Integer idFriend) {
        if (userId <= 0 || idFriend <= 0) {
            throw new EntityNotFoundException(""Users with same id not exists"");
        }
        String query = ""INSERT INTO friends (user_id, friend_id) "" +
                ""SELECT ?, ? "" +
                ""WHERE NOT EXISTS ( "" +
                ""SELECT 1 FROM friends "" +
                ""WHERE user_id = ? AND friend_id = ?)"";
        int insertResult = jdbcTemplate.update(query, userId, idFriend, userId, idFriend);
        if (insertResult > 0) {
            log.info(""User with ID {} has been added in friends of user by ID {}."", idFriend, userId);
        }
    }

    @Override
    public List<User> mutualFriends(Integer sourceId, Integer otherId) {
        List<User> commonFriends = new ArrayList<>();
        String query = ""SELECT u.* FROM friends f1 "" +
                ""INNER JOIN friends f2 ON f1.friend_id = f2.friend_id "" +
                ""INNER JOIN user u ON f1.friend_id = u.id "" +
                ""WHERE f1.user_id = ? AND f2.user_id = ? AND f1.friend_id = f2.friend_id"";
        SqlRowSet sqlRowSet = jdbcTemplate.queryForRowSet(query, sourceId, otherId);
        while (sqlRowSet.next()) {
            int friendId = sqlRowSet.getInt(""user_id"");
            commonFriends.add(getUserById(friendId));
        }
        return commonFriends;
    }

}
"
CrRZ8sGs,snowybot,coinwalk,JavaScript,Saturday 16th of December 2023 03:43:37 AM CDT,"var kozster = parseFloat(document.getElementById('pct_balance').value);
var beast = Number((0.0001*1).toFixed(8));
var burgzie = kozster;
var frogg = beast;
var taget = (kozster*2);
var tens = (beast*10);
var sevens = (beast*6.9);
var eights = (beast*7.9);
var james = ((Math.floor(kozster/tens))*tens);
var fran = ((Math.floor(kozster/tens))*tens);
var alan = ((Math.floor(kozster/tens))*tens);
var toot = frogg;
var uprd =  6.9;
var dnwrd = 2.9;
var fart = 1;

function get(){
burgzie = document.getElementById('pct_balance').value;
var good = ((burgzie-kozster).toFixed(8));
if (burgzie>=(james+(frogg*uprd))){
    frogg = frogg*2;
    uprd =  4.9;
    dnwrd = 4.9;
    james = parseFloat(burgzie);
}
if (burgzie<=(james-(frogg*dnwrd))){
    frogg = frogg*2;
    fart = 0;
    uprd =  4.9;
    dnwrd = 4.9;
    james = parseFloat(burgzie);
}
if ((burgzie>=(fran+(tens*fart)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 1;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    fran = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie>=(alan+(tens*4)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if (((burgzie-frogg)<=(alan-(tens*4)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 0;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if (burgzie>=taget){
    console.log(""winner winner chicken dinner"");
    return;
}
toot = ((frogg*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(toot);
$('#a_lo').click();
console.clear();
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 100);
}
get();"
e7JZeewX,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Saturday 16th of December 2023 03:42:18 AM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-244329"
RmPVaiSW,webTrack,zazu27,JSON,Saturday 16th of December 2023 03:36:16 AM CDT,"{""menus"":[
{""item"": ""00s Club Hits"", ""id"": ""di"", ""url"": 324},
{""item"": ""Atmospheric Breaks"", ""id"": ""di"", ""url"": 403},
{""item"": ""Bass & Jackin' House"", ""id"": ""di"", ""url"": 290},
{""item"": ""Bassline"", ""id"": ""di"", ""url"": 289},
{""item"": ""Big Beat"", ""id"": ""di"", ""url"": 325},
{""item"": ""Big Room House"", ""id"": ""di"", ""url"": 209},
{""item"": ""Breaks"", ""id"": ""di"", ""url"": 15},
{""item"": ""Classic EuroDance"", ""id"": ""di"", ""url"": 69},
{""item"": ""Classic Trance"", ""id"": ""di"", ""url"": 90},
{""item"": ""Classic Vocal Trance"", ""id"": ""di"", ""url"": 125},
{""item"": ""Club Dubstep"", ""id"": ""di"", ""url"": 177},
{""item"": ""Club Hits (Slavic)"", ""id"": ""di"", ""url"": 213},
{""item"": ""Club Sounds"", ""id"": ""di"", ""url"": 70},
{""item"": ""Drum and Bass"", ""id"": ""di"", ""url"": 13},
{""item"": ""Drumstep"", ""id"": ""di"", ""url"": 291},
{""item"": ""Dubstep"", ""id"": ""di"", ""url"": 91},
{""item"": ""EDM Festival"", ""id"": ""di"", ""url"": 210},
{""item"": ""EDM Hits"", ""id"": ""di"", ""url"": 474},
{""item"": ""Electro House"", ""id"": ""di"", ""url"": 56},
{""item"": ""Electro Swing"", ""id"": ""di"", ""url"": 327},
{""item"": ""Electropop"", ""id"": ""di"", ""url"": 286},
{""item"": ""EuroDance 1"", ""id"": ""di"", ""url"": 6},
{""item"": ""Funky House"", ""id"": ""di"", ""url"": 58},
{""item"": ""Future Bass"", ""id"": ""di"", ""url"": 424},
{""item"": ""Future Garage"", ""id"": ""di"", ""url"": 292},
{""item"": ""Future Synthpop"", ""id"": ""di"", ""url"": 53},
{""item"": ""Glitch Hop"", ""id"": ""di"", ""url"": 198},
{""item"": ""Hands Up"", ""id"": ""di"", ""url"": 176},
{""item"": ""Hard Dance"", ""id"": ""di"", ""url"": 5},
{""item"": ""Hardstyle"", ""id"": ""di"", ""url"": 60},
{""item"": ""House"", ""id"": ""di"", ""url"": 4},
{""item"": ""Jungle"", ""id"": ""di"", ""url"": 293},
{""item"": ""Slap House"", ""id"": ""di"", ""url"": 518},
{""item"": ""Synthwave"", ""id"": ""di"", ""url"": 438},
{""item"": ""Tech House"", ""id"": ""di"", ""url"": 66},
{""item"": ""Trap"", ""id"": ""di"", ""url"": 230},
{""item"": ""Vocal House"", ""id"": ""di"", ""url"": 445},
{""item"": ""Vocal Trance"", ""id"": ""di"", ""url"": 2},

{""item"": ""00s Dance"", ""id"": ""radiotunes"", ""url"": 444},
{""item"": ""90s Country"", ""id"": ""radiotunes"", ""url"": 436},
{""item"": ""90s Dance"", ""id"": ""radiotunes"", ""url"": 443},
{""item"": ""90s Hits"", ""id"": ""radiotunes"", ""url"": 186},
{""item"": ""Classic Christmas"", ""id"": ""radiotunes"", ""url"": 40},
{""item"": ""Classic Hip-Hop"", ""id"": ""radiotunes"", ""url"": 38},
{""item"": ""Club Bollywood"", ""id"": ""radiotunes"", ""url"": 140},
{""item"": ""Country"", ""id"": ""radiotunes"", ""url"": 25},
{""item"": ""Dance Hits"", ""id"": ""radiotunes"", ""url"": 71},
{""item"": ""EDM Fest"", ""id"": ""radiotunes"", ""url"": 332},
{""item"": ""EuroDance 2"", ""id"": ""radiotunes"", ""url"": 333},
{""item"": ""Indie Dance"", ""id"": ""radiotunes"", ""url"": 423},
{""item"": ""Jpop"", ""id"": ""radiotunes"", ""url"": 110},
{""item"": ""Latin Pop Hits"", ""id"": ""radiotunes"", ""url"": 417},
{""item"": ""Old School Funk & Soul"", ""id"": ""radiotunes"", ""url"": 273},
{""item"": ""Reggaeton"", ""id"": ""radiotunes"", ""url"": 304},
{""item"": ""Top Hits"", ""id"": ""radiotunes"", ""url"": 21},
{""item"": ""Urban Hits"", ""id"": ""radiotunes"", ""url"": 42},
{""item"": ""Urban Pop Hits"", ""id"": ""radiotunes"", ""url"": 305},
{""item"": ""World"", ""id"": ""radiotunes"", ""url"": 43}

]
}
"
Buxpwwq8,Untitled,soyl,Java,Saturday 16th of December 2023 03:28:27 AM CDT,"private Map<String, Object> filmToMap(Film film) {
        Map<String, Object> values = new HashMap<>();
        values.put(""film_name"", film.getName());
        values.put(""description"", film.getDescription());
        values.put(""release_date"", film.getReleaseDate());
        values.put(""duration"", film.getDuration());
        values.put(""mpa_id"", film.getMpa());
        return values;
    }


    private static RowMapper<Film> getFilmMapper() {
        return (rs, rowNum) -> new Film(
                rs.getInt(""id""),
                rs.getString(""name""),
                rs.getString(""description""),
                rs.getDate(""release_date"").toLocalDate(),
                rs.getInt(""duration"")
        );
    }"
KaYGbkNF,Untitled,soyl,SQL,Saturday 16th of December 2023 03:27:44 AM CDT,"CREATE TABLE IF NOT EXISTS film (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description VARCHAR(255),
    release_date DATE NOT NULL,
    duration INTEGER,
    mpa_id INTEGER NOT NULL,
    FOREIGN KEY (mpa_id) REFERENCES mpa(mpa_id)
);

-- Создание таблицы Genre
CREATE TABLE IF NOT EXISTS genre (
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

-- Создание таблицы Film_Genre (связь ""многие ко многим"" между Film и Genre)
CREATE TABLE IF NOT EXISTS genre_film (
    genre_film_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    film_id INTEGER,
    genre_id INTEGER,
    PRIMARY KEY (genre_film_id),
    FOREIGN KEY (film_id) REFERENCES film(id),
    FOREIGN KEY (genre_id) REFERENCES genre(genre_id)
);

-- Создание таблицы Mpa
CREATE TABLE IF NOT EXISTS mpa (
    mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

-- Создание таблицы User
CREATE TABLE IF NOT EXISTS user (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) NOT NULL,
    login VARCHAR(255) NOT NULL,
    username VARCHAR(255),
    birthday DATE NOT NULL
);

-- Создание таблицы Friends
CREATE TABLE IF NOT EXISTS friends (
    user_id INTEGER,
    friend_id INTEGER,
    PRIMARY KEY (user_id, friend_id),
    FOREIGN KEY (user_id) REFERENCES user(id),
    FOREIGN KEY (friend_id) REFERENCES user(id)
);

-- Создание таблицы Like_Film (связь ""многие ко многим"" между User и Film)
CREATE TABLE IF NOT EXISTS like_film (
    user_id INTEGER,
    film_id INTEGER,
    PRIMARY KEY (user_id, film_id),
    FOREIGN KEY (user_id) REFERENCES user(id),
    FOREIGN KEY (film_id) REFERENCES film(id)
);

-- Вставка данных в таблицу Genre
INSERT INTO genre (name)
VALUES ('Комедия'),
    ('Драма'),
    ('Мультфильм'),
    ('Триллер'),
    ('Документальный'),
    ('Боевик');

-- Вставка данных в таблицу Mpa
INSERT INTO mpa (name)
VALUES ('G'),
       ('PG'),
       ('PG-13'),
       ('R'),
       ('NC-17');"
XjknmP7X,Untitled,35657,C++,Saturday 16th of December 2023 03:24:32 AM CDT,"

#include <iostream>


using namespace std;

int power(int a, int n) {
	if (n == 1) {
		return a;
	}
	return a * power(a, n - 1);
}

int main() {
	cout << power(3, 4);

}"
BqJ939WN,CC:Tweaked Comb Exporter,timconspicuous,Lua,Saturday 16th of December 2023 03:17:25 AM CDT,"bridge = peripheral.find(""meBridge"")
centrifuges = {peripheral.find(""productivebees:powered_centrifuge"")}
 
while true do
    for i = 1,#centrifuges do
        bridge.exportItemToPeripheral({name = ""productivebees:configurable_honeycomb"", count = 64},peripheral.getName(centrifuges[i]))
        os.sleep(1)
    end
end"
Tb2UdTw9,Untitled,35657,C++,Saturday 16th of December 2023 02:42:03 AM CDT,"#include <iostream>

using namespace std;

template <typename T>
void insert_sort(T arr[], int size) {
    for (int i = 1; i < size; i++) {
        T x = arr[i];
        int k = i - 1;
        while (k >= 0 && arr[k] > x) {
            arr[k + 1] = arr[k];
            arr[k] = x;
            k--;
        }
    }
}


template <typename T>
void display(T array[], int size) {
    for (int i = 0; i < size; i++) {
        cout << array[i] << "" "";
    }
    cout << endl;
}


int main() {
    int arr[]{ 1, 3, 7, -4, -2, 4 };
    int size = 6;
    cout << ""Original int Array : "";
    display(arr, size);
    insert_sort(arr, size);
    cout << ""Sorted   int Array : "";
    display(arr, size);


    // будет ли работать с double?
     double doubleArray[]{ 3.5, 2.5, 3.7, 1.0, 3.3 };
     size = 5;
     cout << ""Original double Array : "";
     display(doubleArray, size);
     insert_sort(doubleArray, size);
     cout << ""Sorted double Array : "";
     display(doubleArray, size);
}
"
42g7Wxvf,Untitled,35657,C++,Saturday 16th of December 2023 02:32:07 AM CDT,"#include <iostream>

using namespace std;


void insert_sort(int arr[], int size) {
    for (int i = 1; i < size; i++) {
        int x = arr[i];
        int k = i - 1;
        while (k >= 0 && arr[k] > x) {
            arr[k + 1] = arr[k];
            arr[k] = x;
            k--;
        }
    }
}



void display(int array[], int size) {
    for (int i = 0; i < size; i++) {
        cout << array[i] << "" "";
    }
    cout << endl;
}


int main() {
    int arr[]{ 1, 3, 7, -4, -2, 4 };
    int size = 6;
    cout << ""Original int Array : "";
    display(arr, size);
    insert_sort(arr, size);
    cout << ""Sorted   int Array : "";
    display(arr, size);
}
"
zEuiDbia,snowybot,coinwalk,JavaScript,Saturday 16th of December 2023 02:07:02 AM CDT,"var kozster = parseFloat(document.getElementById('pct_balance').value);
var beast = Number((0.00001*1).toFixed(8));
var burgzie = kozster;
var frogg = beast;
var taget = (kozster*2);
var tens = (beast*10);
var sevens = (beast*6.9);
var eights = (beast*7.9);
var james = ((Math.floor(kozster/tens))*tens);
var fran = ((Math.floor(kozster/tens))*tens);
var alan = ((Math.floor(kozster/tens))*tens);
var toot = frogg;
var uprd =  6.9;
var dnwrd = 2.9;
var fart = 1;

function get(){
burgzie = document.getElementById('pct_balance').value;
var good = ((burgzie-kozster).toFixed(8));
if (burgzie>=(james+(frogg*uprd))){
    frogg = frogg*2;
    uprd =  2.9;
    dnwrd = 2.9;
    james = parseFloat(burgzie);
}
if (burgzie<=(james-(frogg*dnwrd))){
    frogg = frogg*2;
    fart = 0;
    uprd =  2.9;
    dnwrd = 2.9;
    james = parseFloat(burgzie);
}
if ((burgzie>=(fran+(tens*fart)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 1;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    fran = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie<=(alan-(tens*4)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 0;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if (burgzie>=taget){
    console.log(""winner winner chicken dinner"");
    return;
}
toot = ((frogg*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(toot);
$('#a_lo').click();
console.clear();
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 100);
}
get();"
PRapARxW,Advent of Code 2023 - Day 16,mgla,C#,Saturday 16th of December 2023 01:53:13 AM CDT,"using System.Diagnostics;

var input = File.ReadAllLines(""input.txt"").Select(l => l.ToCharArray()).ToArray();
var timer = Stopwatch.StartNew();

Console.WriteLine($""Part 1: {CountTiles(input, 0, -1, Directions.Right)}, Elapsed: {timer.ElapsedMilliseconds}ms"");

timer.Restart();
var tasks = new List<Task<int>>();

for (var row = 0; row < input.Length; row++)
{
    var currentRow = row;
    tasks.Add(Task.Run(() => CountTiles(input, currentRow, -1, Directions.Right)));
    tasks.Add(Task.Run(() => CountTiles(input, currentRow, input[currentRow].Length, Directions.Left)));
}

for (var col = 0; col < input[0].Length; col++)
{
    var currentCol = col;
    tasks.Add(Task.Run(() => CountTiles(input, -1, currentCol, Directions.Down)));
    tasks.Add(Task.Run(() => CountTiles(input, input.Length, currentCol, Directions.Up)));
}

await Task.WhenAll(tasks);

Console.WriteLine($""Part 2: {tasks.Max(t => t.Result)}, Elapsed: {timer.ElapsedMilliseconds}ms"");
return;

static int CountTiles(char[][] map, int startRow, int startColumn, Directions startDirection)
{
    var tiles = new Dictionary<(int row, int col), Directions>
    {
        [(startRow, startColumn)] = Directions.None // Add the entry point which is outside the map
    };

    var beams = new Queue<(int Row, int Column, Directions Direction)>();
    beams.Enqueue((startRow, startColumn, startDirection));

    while (beams.TryDequeue(out var beam))
    {
        if (tiles.TryGetValue((beam.Row, beam.Column), out var tileDirections) &&
            tileDirections.HasFlag(beam.Direction))
        {
            continue;
        }

        tiles[(beam.Row, beam.Column)] = tileDirections | beam.Direction;

        var (row, col) = beam.Direction switch
        {
            Directions.Up => (beam.Row - 1, beam.Column),
            Directions.Down => (beam.Row + 1, beam.Column),
            Directions.Left => (beam.Row, beam.Column - 1),
            Directions.Right => (beam.Row, beam.Column + 1),
            _ => throw new Exception(""Invalid direction"")
        };

        if (row < 0 || row >= map.Length || col < 0 || col >= map[row].Length)
        {
            continue;
        }

        beam = beam with { Row = row, Column = col };

        switch (map[row][col])
        {
            case '/':
                beams.Enqueue(beam with
                {
                    Direction = beam.Direction switch
                    {
                        Directions.Up => Directions.Right,
                        Directions.Down => Directions.Left,
                        Directions.Left => Directions.Down,
                        Directions.Right => Directions.Up,
                        _ => throw new Exception(""Invalid direction"")
                    }
                });
                break;
            case '\\':
                beams.Enqueue(beam with
                {
                    Direction = beam.Direction switch
                    {
                        Directions.Up => Directions.Left,
                        Directions.Down => Directions.Right,
                        Directions.Left => Directions.Up,
                        Directions.Right => Directions.Down,
                        _ => throw new Exception(""Invalid direction"")
                    }
                });
                break;
            case '-' when beam.Direction is Directions.Up or Directions.Down:
                beams.Enqueue(beam with { Direction = Directions.Left });
                beams.Enqueue(beam with { Direction = Directions.Right });
                break;
            case '|' when beam.Direction is Directions.Left or Directions.Right:
                beams.Enqueue(beam with { Direction = Directions.Up });
                beams.Enqueue(beam with { Direction = Directions.Down });
                break;
            default: // '.', '-' or '|' in the same direction
                beams.Enqueue(beam);
                break;
        }
    }

    return tiles.Count - 1;
}

[Flags]
internal enum Directions
{
    None = 0,
    Up = 1,
    Down = 2,
    Left = 4,
    Right = 8
}"
DP6bNBdS,Untitled,kwest87,C#,Saturday 16th of December 2023 01:47:18 AM CDT,"[StartCode]
using System;

namespace ConsoleApp14
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string userInput;
            int[] array = new int[0];
            bool isWork = true;

            while (isWork)
            {
                Console.WriteLine(""Введите команду : цифру , sum или exit."");
                userInput = Console.ReadLine();

                if (userInput == ""sum"")
                {
                    int sumNumber = 0;

                    for (int i = 0; i < array.Length; i++)
                    {
                        sumNumber += array[i];
                    }

                    Console.WriteLine(sumNumber);
                }
                else if (userInput == ""exit"")
                {
                    isWork = false;
                }
                else
                {
                    int[] temporaryArray = new int[array.Length +1];
                    temporaryArray[array.Length ] = Convert.ToInt32(userInput);

                    for(int i = 0; i < array.Length; i++)
                    {
                        temporaryArray[i] = array[i];
                    }

                    array = temporaryArray;
                }
            }
        }
    }
}
[EndCode]"
kYJy5aQW,Untitled,35657,C++,Saturday 16th of December 2023 01:40:11 AM CDT,"
#include <iostream>

using namespace std;


void GetRoot(double a, double b, double c) {

	double discriminant = b * b - 4 * a * c;

	if (discriminant < 0) {
		cout << ""Уравнение не имеет корней"" << endl;
		return;
	}

	double x1 = (-b + sqrt(discriminant)) / (2 * a);
	double x2 = (-b - sqrt(discriminant)) / (2 * a);
	cout << ""x1 = "" << x1 << "", x2 = "" << x2 << endl;
}

void GetRoot(double a, double b) {
	double x = - b / a;
	cout << ""x = "" << x << endl;
}

int main() {
	setlocale(LC_ALL, ""ru"");
	GetRoot(2, 6, 4);
	GetRoot(6, 2, 4);
	GetRoot(6, -2);
	GetRoot(6, 5);
}"
CwYYzd2k,Nigerian scammers [16-12-1/2023],bombaires,AIMMS,Saturday 16th of December 2023 01:38:36 AM CDT,"<a href=""mailto:sw9596525@gmail.com"">sw9596525@gmail.com</a>
<a href=""mailto:s.w.9.59.65.2.5@gmail.com"">s.w.9.59.65.2.5@gmail.com</a>
<a href=""mailto:s.w9.5.96.5.2.5@gmail.com"">s.w9.5.96.5.2.5@gmail.com</a>
<a href=""mailto:s.w95.9.6.5.2.5@gmail.com"">s.w95.9.6.5.2.5@gmail.com</a>
<a href=""mailto:sw9.5.96.525@gmail.com"">sw9.5.96.525@gmail.com</a>
<a href=""mailto:sw.9596.52.5@gmail.com"">sw.9596.52.5@gmail.com</a>
<a href=""mailto:sw.95.96.5.25@gmail.com"">sw.95.96.5.25@gmail.com</a>
<a href=""mailto:sw.95.9.6525@gmail.com"">sw.95.9.6525@gmail.com</a>
<a href=""mailto:sw9.59652.5@gmail.com"">sw9.59652.5@gmail.com</a>
<a href=""mailto:sw.9.5.9.6.5.2.5@gmail.com"">sw.9.5.9.6.5.2.5@gmail.com</a>
<a href=""mailto:sw959.6525@gmail.com"">sw959.6525@gmail.com</a>
<a href=""mailto:sw.9.5.96.52.5@gmail.com"">sw.9.5.96.52.5@gmail.com</a>
<a href=""mailto:sw.95.9.65.2.5@gmail.com"">sw.95.9.65.2.5@gmail.com</a>
<a href=""mailto:sw.95.9.6.525@gmail.com"">sw.95.9.6.525@gmail.com</a>
<a href=""mailto:sw9.5965.25@gmail.com"">sw9.5965.25@gmail.com</a>
<a href=""mailto:s.w9.59.65.2.5@gmail.com"">s.w9.59.65.2.5@gmail.com</a>
<a href=""mailto:s.w.95.9.6.525@gmail.com"">s.w.95.9.6.525@gmail.com</a>
<a href=""mailto:sw9.5.9.6.5.2.5@gmail.com"">sw9.5.9.6.5.2.5@gmail.com</a>
<a href=""mailto:sw.9.5.9.6.525@gmail.com"">sw.9.5.9.6.525@gmail.com</a>
<a href=""mailto:s.w.95.9652.5@gmail.com"">s.w.95.9652.5@gmail.com</a>
<a href=""mailto:s.w95.96.52.5@gmail.com"">s.w95.96.52.5@gmail.com</a>
<a href=""mailto:s.w9.5.9.6.5.25@gmail.com"">s.w9.5.9.6.5.25@gmail.com</a>
<a href=""mailto:s.w959.6.5.2.5@gmail.com"">s.w959.6.5.2.5@gmail.com</a>
<a href=""mailto:s.w.9.5.96.52.5@gmail.com"">s.w.9.5.96.52.5@gmail.com</a>
<a href=""mailto:s.w9.5.9.65.2.5@gmail.com"">s.w9.5.9.65.2.5@gmail.com</a>
<a href=""mailto:s.w9596.5.2.5@gmail.com"">s.w9596.5.2.5@gmail.com</a>
<a href=""mailto:s.w9.596.5.2.5@gmail.com"">s.w9.596.5.2.5@gmail.com</a>
<a href=""mailto:s.w9596.5.25@gmail.com"">s.w9596.5.25@gmail.com</a>
<a href=""mailto:s.w.95.9.6.5.25@gmail.com"">s.w.95.9.6.5.25@gmail.com</a>
<a href=""mailto:sw959.6.52.5@gmail.com"">sw959.6.52.5@gmail.com</a>
<a href=""mailto:sw95.9.65.2.5@gmail.com"">sw95.9.65.2.5@gmail.com</a>
<a href=""mailto:s.w95.9.6.525@gmail.com"">s.w95.9.6.525@gmail.com</a>
<a href=""mailto:s.w9596.525@gmail.com"">s.w9596.525@gmail.com</a>
<a href=""mailto:sw.95965.25@gmail.com"">sw.95965.25@gmail.com</a>
<a href=""mailto:sw.95.96525@gmail.com"">sw.95.96525@gmail.com</a>
<a href=""mailto:s.w.959.6.525@gmail.com"">s.w.959.6.525@gmail.com</a>
<a href=""mailto:sw.9.59.6.52.5@gmail.com"">sw.9.59.6.52.5@gmail.com</a>
<a href=""mailto:s.w95.96.5.25@gmail.com"">s.w95.96.5.25@gmail.com</a>
<a href=""mailto:s.w.9.5.9.6525@gmail.com"">s.w.9.5.9.6525@gmail.com</a>
<a href=""mailto:s.w9.5.96.525@gmail.com"">s.w9.5.96.525@gmail.com</a>
<a href=""mailto:sw.95.96.525@gmail.com"">sw.95.96.525@gmail.com</a>
<a href=""mailto:sw959.652.5@gmail.com"">sw959.652.5@gmail.com</a>
<a href=""mailto:sw.9.59.6.525@gmail.com"">sw.9.59.6.525@gmail.com</a>
<a href=""mailto:sw9596.5.25@gmail.com"">sw9596.5.25@gmail.com</a>
<a href=""mailto:sw.95.96.52.5@gmail.com"">sw.95.96.52.5@gmail.com</a>
<a href=""mailto:sw95.965.25@gmail.com"">sw95.965.25@gmail.com</a>
<a href=""mailto:sw9.596.5.2.5@gmail.com"">sw9.596.5.2.5@gmail.com</a>
<a href=""mailto:sw95.9.6.525@gmail.com"">sw95.9.6.525@gmail.com</a>
<a href=""mailto:s.w9.5.96525@gmail.com"">s.w9.5.96525@gmail.com</a>
<a href=""mailto:s.w.95.9.65.25@gmail.com"">s.w.95.9.65.25@gmail.com</a>
<a href=""mailto:s.w.95965.2.5@gmail.com"">s.w.95965.2.5@gmail.com</a>
<a href=""mailto:sw9.5.9.65.2.5@gmail.com"">sw9.5.9.65.2.5@gmail.com</a>
<a href=""mailto:sw95.96.52.5@gmail.com"">sw95.96.52.5@gmail.com</a>
<a href=""mailto:sw.9.596525@gmail.com"">sw.9.596525@gmail.com</a>
<a href=""mailto:sw9.59.652.5@gmail.com"">sw9.59.652.5@gmail.com</a>
<a href=""mailto:s.w9.5.9.6525@gmail.com"">s.w9.5.9.6525@gmail.com</a>
<a href=""mailto:s.w95.9.65.25@gmail.com"">s.w95.9.65.25@gmail.com</a>
<a href=""mailto:s.w959.6.525@gmail.com"">s.w959.6.525@gmail.com</a>
<a href=""mailto:s.w.9.59.6.52.5@gmail.com"">s.w.9.59.6.52.5@gmail.com</a>
<a href=""mailto:s.w.959.652.5@gmail.com"">s.w.959.652.5@gmail.com</a>
<a href=""mailto:sw.9.59.6.5.2.5@gmail.com"">sw.9.59.6.5.2.5@gmail.com</a>
<a href=""mailto:sw.9.5.965.2.5@gmail.com"">sw.9.5.965.2.5@gmail.com</a>
<a href=""mailto:s.w.95.96.5.25@gmail.com"">s.w.95.96.5.25@gmail.com</a>
<a href=""mailto:sw.9.5.9.652.5@gmail.com"">sw.9.5.9.652.5@gmail.com</a>
<a href=""mailto:s.w.959.6.52.5@gmail.com"">s.w.959.6.52.5@gmail.com</a>
<a href=""mailto:s.w.9.59.6.5.2.5@gmail.com"">s.w.9.59.6.5.2.5@gmail.com</a>
<a href=""mailto:sw.959.652.5@gmail.com"">sw.959.652.5@gmail.com</a>
<a href=""mailto:sw.9.5.96525@gmail.com"">sw.9.5.96525@gmail.com</a>
<a href=""mailto:s.w.95.96.5.2.5@gmail.com"">s.w.95.96.5.2.5@gmail.com</a>
<a href=""mailto:s.w.95.965.2.5@gmail.com"">s.w.95.965.2.5@gmail.com</a>
<a href=""mailto:sw9.5.9.6.52.5@gmail.com"">sw9.5.9.6.52.5@gmail.com</a>
<a href=""mailto:s.w9.596.52.5@gmail.com"">s.w9.596.52.5@gmail.com</a>
<a href=""mailto:sw9.5.965.2.5@gmail.com"">sw9.5.965.2.5@gmail.com</a>
<a href=""mailto:s.w9596525@gmail.com"">s.w9596525@gmail.com</a>
<a href=""mailto:s.w9.5.965.25@gmail.com"">s.w9.5.965.25@gmail.com</a>
<a href=""mailto:s.w9.59.6.52.5@gmail.com"">s.w9.59.6.52.5@gmail.com</a>
<a href=""mailto:sw959.65.2.5@gmail.com"">sw959.65.2.5@gmail.com</a>
<a href=""mailto:sw.959.6.525@gmail.com"">sw.959.6.525@gmail.com</a>
<a href=""mailto:s.w.9.59652.5@gmail.com"">s.w.9.59652.5@gmail.com</a>
<a href=""mailto:s.w.959.6.5.2.5@gmail.com"">s.w.959.6.5.2.5@gmail.com</a>
<a href=""mailto:sw.95.9.6.52.5@gmail.com"">sw.95.9.6.52.5@gmail.com</a>
<a href=""mailto:s.w9.59.6.5.2.5@gmail.com"">s.w9.59.6.5.2.5@gmail.com</a>
<a href=""mailto:sw.959.65.2.5@gmail.com"">sw.959.65.2.5@gmail.com</a>
<a href=""mailto:sw.9.59.65.25@gmail.com"">sw.9.59.65.25@gmail.com</a>
<a href=""mailto:sw.9.5.9.6.5.25@gmail.com"">sw.9.5.9.6.5.25@gmail.com</a>
<a href=""mailto:s.w.95.9.6.52.5@gmail.com"">s.w.95.9.6.52.5@gmail.com</a>
<a href=""mailto:sw.9.596.525@gmail.com"">sw.9.596.525@gmail.com</a>
<a href=""mailto:s.w.9.59.6525@gmail.com"">s.w.9.59.6525@gmail.com</a>
<a href=""mailto:s.w.95.9.6.5.2.5@gmail.com"">s.w.95.9.6.5.2.5@gmail.com</a>
<a href=""mailto:s.w9596.52.5@gmail.com"">s.w9596.52.5@gmail.com</a>
<a href=""mailto:sw959.6.525@gmail.com"">sw959.6.525@gmail.com</a>
<a href=""mailto:sw.959.65.25@gmail.com"">sw.959.65.25@gmail.com</a>
<a href=""mailto:s.w95.9.652.5@gmail.com"">s.w95.9.652.5@gmail.com</a>
<a href=""mailto:sw9596.525@gmail.com"">sw9596.525@gmail.com</a>
<a href=""mailto:s.w95965.25@gmail.com"">s.w95965.25@gmail.com</a>
<a href=""mailto:s.w9.59652.5@gmail.com"">s.w9.59652.5@gmail.com</a>
<a href=""mailto:sw959.65.25@gmail.com"">sw959.65.25@gmail.com</a>
<a href=""mailto:sw9.5.96.52.5@gmail.com"">sw9.5.96.52.5@gmail.com</a>
<a href=""mailto:sw9.59.6.5.2.5@gmail.com"">sw9.59.6.5.2.5@gmail.com</a>
<a href=""mailto:s.w9.59.6.5.25@gmail.com"">s.w9.59.6.5.25@gmail.com</a>
<a href=""mailto:s.w.9.5.9652.5@gmail.com"">s.w.9.5.9652.5@gmail.com</a>
<a href=""mailto:sw.9.59.6525@gmail.com"">sw.9.59.6525@gmail.com</a>
<a href=""mailto:sw.9.5965.2.5@gmail.com"">sw.9.5965.2.5@gmail.com</a>
<a href=""mailto:sw.9.5.9.6.52.5@gmail.com"">sw.9.5.9.6.52.5@gmail.com</a>
<a href=""mailto:sw.9.5.96.525@gmail.com"">sw.9.5.96.525@gmail.com</a>
<a href=""mailto:sw9.59.65.2.5@gmail.com"">sw9.59.65.2.5@gmail.com</a>
<a href=""mailto:s.w.9.596.5.25@gmail.com"">s.w.9.596.5.25@gmail.com</a>
<a href=""mailto:s.w.9.596.525@gmail.com"">s.w.9.596.525@gmail.com</a>
<a href=""mailto:s.w.9.5.96.5.25@gmail.com"">s.w.9.5.96.5.25@gmail.com</a>
<a href=""mailto:sw9596525@gmail.com"">sw9596525@gmail.com</a>
<a href=""mailto:sw.9.5.9.65.2.5@gmail.com"">sw.9.5.9.65.2.5@gmail.com</a>
<a href=""mailto:s.w.9.596.5.2.5@gmail.com"">s.w.9.596.5.2.5@gmail.com</a>
<a href=""mailto:sw9.596.5.25@gmail.com"">sw9.596.5.25@gmail.com</a>
<a href=""mailto:s.w.9.5.9.65.2.5@gmail.com"">s.w.9.5.9.65.2.5@gmail.com</a>
<a href=""mailto:sw9.59.65.25@gmail.com"">sw9.59.65.25@gmail.com</a>
<a href=""mailto:s.w.9.5.9.6.5.25@gmail.com"">s.w.9.5.9.6.5.25@gmail.com</a>
<a href=""mailto:s.w.9.5.96.525@gmail.com"">s.w.9.5.96.525@gmail.com</a>
<a href=""mailto:sw9.5.96.5.25@gmail.com"">sw9.5.96.5.25@gmail.com</a>
<a href=""mailto:s.w9.59.65.25@gmail.com"">s.w9.59.65.25@gmail.com</a>
<a href=""mailto:sw.9.596.5.25@gmail.com"">sw.9.596.5.25@gmail.com</a>
<a href=""mailto:s.w.9.59.65.25@gmail.com"">s.w.9.59.65.25@gmail.com</a>
<a href=""mailto:s.w.9.5.96525@gmail.com"">s.w.9.5.96525@gmail.com</a>
<a href=""mailto:sw.9.5.9.65.25@gmail.com"">sw.9.5.9.65.25@gmail.com</a>
<a href=""mailto:sw9596.5.2.5@gmail.com"">sw9596.5.2.5@gmail.com</a>
<a href=""mailto:sw.95.9.652.5@gmail.com"">sw.95.9.652.5@gmail.com</a>
<a href=""mailto:s.w.9596525@gmail.com"">s.w.9596525@gmail.com</a>
<a href=""mailto:s.w95.965.25@gmail.com"">s.w95.965.25@gmail.com</a>
<a href=""mailto:sw.95.9.6.5.25@gmail.com"">sw.95.9.6.5.25@gmail.com</a>
<a href=""mailto:s.w9.5.9.6.5.2.5@gmail.com"">s.w9.5.9.6.5.2.5@gmail.com</a>
<a href=""mailto:sw95.9.65.25@gmail.com"">sw95.9.65.25@gmail.com</a>
<a href=""mailto:sw.959.6.52.5@gmail.com"">sw.959.6.52.5@gmail.com</a>
<a href=""mailto:s.w959.652.5@gmail.com"">s.w959.652.5@gmail.com</a>
<a href=""mailto:s.w.9.5.965.25@gmail.com"">s.w.9.5.965.25@gmail.com</a>
<a href=""mailto:s.w95.9.6.5.25@gmail.com"">s.w95.9.6.5.25@gmail.com</a>
<a href=""mailto:sw.9.5965.25@gmail.com"">sw.9.5965.25@gmail.com</a>
<a href=""mailto:s.w959.65.2.5@gmail.com"">s.w959.65.2.5@gmail.com</a>
<a href=""mailto:s.w.9.5965.2.5@gmail.com"">s.w.9.5965.2.5@gmail.com</a>
<a href=""mailto:sw.959.6.5.25@gmail.com"">sw.959.6.5.25@gmail.com</a>
<a href=""mailto:s.w.9.5.9.6.5.2.5@gmail.com"">s.w.9.5.9.6.5.2.5@gmail.com</a>
<a href=""mailto:sw95.9652.5@gmail.com"">sw95.9652.5@gmail.com</a>
<a href=""mailto:s.w.9.5.965.2.5@gmail.com"">s.w.9.5.965.2.5@gmail.com</a>
<a href=""mailto:sw.9596.5.25@gmail.com"">sw.9596.5.25@gmail.com</a>
<a href=""mailto:s.w959.6525@gmail.com"">s.w959.6525@gmail.com</a>
<a href=""mailto:sw9.596525@gmail.com"">sw9.596525@gmail.com</a>
<a href=""mailto:sw9.59.6525@gmail.com"">sw9.59.6525@gmail.com</a>
<a href=""mailto:sw9.5.9.65.25@gmail.com"">sw9.5.9.65.25@gmail.com</a>
<a href=""mailto:sw95.9.6525@gmail.com"">sw95.9.6525@gmail.com</a>
<a href=""mailto:s.w.9596.5.2.5@gmail.com"">s.w.9596.5.2.5@gmail.com</a>
<a href=""mailto:s.w9.596.5.25@gmail.com"">s.w9.596.5.25@gmail.com</a>
<a href=""mailto:sw.9.59652.5@gmail.com"">sw.9.59652.5@gmail.com</a>
<a href=""mailto:sw9.5.96.5.2.5@gmail.com"">sw9.5.96.5.2.5@gmail.com</a>
<a href=""mailto:sw.95965.2.5@gmail.com"">sw.95965.2.5@gmail.com</a>
<a href=""mailto:s.w.9.59.6.5.25@gmail.com"">s.w.9.59.6.5.25@gmail.com</a>
<a href=""mailto:sw959.6.5.2.5@gmail.com"">sw959.6.5.2.5@gmail.com</a>
<a href=""mailto:sw9596.52.5@gmail.com"">sw9596.52.5@gmail.com</a>
<a href=""mailto:s.w959.65.25@gmail.com"">s.w959.65.25@gmail.com</a>
<a href=""mailto:sw9.59.6.52.5@gmail.com"">sw9.59.6.52.5@gmail.com</a>
<a href=""mailto:s.w.95.96.525@gmail.com"">s.w.95.96.525@gmail.com</a>
<a href=""mailto:s.w95.9652.5@gmail.com"">s.w95.9652.5@gmail.com</a>
<a href=""mailto:sw9.5.9652.5@gmail.com"">sw9.5.9652.5@gmail.com</a>
<a href=""mailto:sw9.596.525@gmail.com"">sw9.596.525@gmail.com</a>
<a href=""mailto:sw959.6.5.25@gmail.com"">sw959.6.5.25@gmail.com</a>
<a href=""mailto:sw9.5965.2.5@gmail.com"">sw9.5965.2.5@gmail.com</a>
<a href=""mailto:s.w9.5.9652.5@gmail.com"">s.w9.5.9652.5@gmail.com</a>
<a href=""mailto:s.w.95.965.25@gmail.com"">s.w.95.965.25@gmail.com</a>
<a href=""mailto:sw95.96.525@gmail.com"">sw95.96.525@gmail.com</a>
<a href=""mailto:sw95.9.652.5@gmail.com"">sw95.9.652.5@gmail.com</a>
<a href=""mailto:s.w9.596.525@gmail.com"">s.w9.596.525@gmail.com</a>
<a href=""mailto:s.w.959.65.2.5@gmail.com"">s.w.959.65.2.5@gmail.com</a>
<a href=""mailto:s.w9.5.965.2.5@gmail.com"">s.w9.5.965.2.5@gmail.com</a>
<a href=""mailto:sw.9.5.96.5.25@gmail.com"">sw.9.5.96.5.25@gmail.com</a>
<a href=""mailto:s.w9.59.652.5@gmail.com"">s.w9.59.652.5@gmail.com</a>
<a href=""mailto:sw.9.59.652.5@gmail.com"">sw.9.59.652.5@gmail.com</a>
<a href=""mailto:s.w95.9.6.52.5@gmail.com"">s.w95.9.6.52.5@gmail.com</a>
<a href=""mailto:sw.95.9.6.5.2.5@gmail.com"">sw.95.9.6.5.2.5@gmail.com</a>
<a href=""mailto:s.w9.5965.25@gmail.com"">s.w9.5965.25@gmail.com</a>
<a href=""mailto:s.w.9.5965.25@gmail.com"">s.w.9.5965.25@gmail.com</a>
<a href=""mailto:s.w.9.59.6.525@gmail.com"">s.w.9.59.6.525@gmail.com</a>
<a href=""mailto:s.w9.5.9.652.5@gmail.com"">s.w9.5.9.652.5@gmail.com</a>
<a href=""mailto:sw95.96.5.25@gmail.com"">sw95.96.5.25@gmail.com</a>
<a href=""mailto:s.w9.5965.2.5@gmail.com"">s.w9.5965.2.5@gmail.com</a>
<a href=""mailto:sw95.9.6.5.2.5@gmail.com"">sw95.9.6.5.2.5@gmail.com</a>
<a href=""mailto:sw.9.5.9652.5@gmail.com"">sw.9.5.9652.5@gmail.com</a>
<a href=""mailto:sw95.96525@gmail.com"">sw95.96525@gmail.com</a>
<a href=""mailto:s.w95.965.2.5@gmail.com"">s.w95.965.2.5@gmail.com</a>
<a href=""mailto:sw.9596.5.2.5@gmail.com"">sw.9596.5.2.5@gmail.com</a>
<a href=""mailto:s.w95.9.6525@gmail.com"">s.w95.9.6525@gmail.com</a>
<a href=""mailto:sw.9.5.96.5.2.5@gmail.com"">sw.9.5.96.5.2.5@gmail.com</a>
<a href=""mailto:sw9.596.52.5@gmail.com"">sw9.596.52.5@gmail.com</a>
<a href=""mailto:sw9.5.9.6.5.25@gmail.com"">sw9.5.9.6.5.25@gmail.com</a>
<a href=""mailto:s.w.959652.5@gmail.com"">s.w.959652.5@gmail.com</a>
<a href=""mailto:sw9.5.9.6.525@gmail.com"">sw9.5.9.6.525@gmail.com</a>
<a href=""mailto:s.w9.5.9.6.52.5@gmail.com"">s.w9.5.9.6.52.5@gmail.com</a>
<a href=""mailto:s.w.95.9.6525@gmail.com"">s.w.95.9.6525@gmail.com</a>
<a href=""mailto:sw95.965.2.5@gmail.com"">sw95.965.2.5@gmail.com</a>
<a href=""mailto:s.w9.59.6.525@gmail.com"">s.w9.59.6.525@gmail.com</a>
<a href=""mailto:sw95965.2.5@gmail.com"">sw95965.2.5@gmail.com</a>
<a href=""mailto:sw.9.596.5.2.5@gmail.com"">sw.9.596.5.2.5@gmail.com</a>
<a href=""mailto:s.w.9.596.52.5@gmail.com"">s.w.9.596.52.5@gmail.com</a>
<a href=""mailto:s.w9.5.96.52.5@gmail.com"">s.w9.5.96.52.5@gmail.com</a>
<a href=""mailto:s.w.95.9.652.5@gmail.com"">s.w.95.9.652.5@gmail.com</a>
<a href=""mailto:new.bussines.year@gmail.com"">new.bussines.year@gmail.com</a>
<a href=""mailto:n.ew.bus.si.n.es...year@gmail.com"">n.ew.bus.si.n.es...year@gmail.com</a>
<a href=""mailto:ne.w..bus.s.in.e.s.yea.r@gmail.com"">ne.w..bus.s.in.e.s.yea.r@gmail.com</a>
<a href=""mailto:n.ew..b.u.ss.i.n.es.ye.a.r@gmail.com"">n.ew..b.u.ss.i.n.es.ye.a.r@gmail.com</a>
<a href=""mailto:ne.w..b.us.s.in.es..y.ea.r@gmail.com"">ne.w..b.us.s.in.es..y.ea.r@gmail.com</a>
<a href=""mailto:n.ew...b.us.sin.es...yea.r@gmail.com"">n.ew...b.us.sin.es...yea.r@gmail.com</a>
<a href=""mailto:n.e.w...bu.ss.i.ne.s..ye.ar@gmail.com"">n.e.w...bu.ss.i.ne.s..ye.ar@gmail.com</a>
<a href=""mailto:new.buss.ines.ye.a.r@gmail.com"">new.buss.ines.ye.a.r@gmail.com</a>
<a href=""mailto:new..bu.s.s.i.nes.y.e.ar@gmail.com"">new..bu.s.s.i.nes.y.e.ar@gmail.com</a>
<a href=""mailto:new.bu.s.s.ines.ye.a.r@gmail.com"">new.bu.s.s.ines.ye.a.r@gmail.com</a>
<a href=""mailto:n.ew..b.u.ssin.es...y.e.a.r@gmail.com"">n.ew..b.u.ssin.es...y.e.a.r@gmail.com</a>
<a href=""mailto:n.ew..bus.sin.e.s.year@gmail.com"">n.ew..bus.sin.e.s.year@gmail.com</a>
<a href=""mailto:new..bu.s.s.i.n.e.s...y.e.a.r@gmail.com"">new..bu.s.s.i.n.e.s...y.e.a.r@gmail.com</a>
<a href=""mailto:new.bu.s.sines..ye.a.r@gmail.com"">new.bu.s.sines..ye.a.r@gmail.com</a>
<a href=""mailto:n.e.w...bus.sines..year@gmail.com"">n.e.w...bus.sines..year@gmail.com</a>
<a href=""mailto:ne.w.buss.i.ne.s..y.e.ar@gmail.com"">ne.w.buss.i.ne.s..y.e.ar@gmail.com</a>
<a href=""mailto:ne.w..b.uss.i.n.es...y.ear@gmail.com"">ne.w..b.uss.i.n.es...y.ear@gmail.com</a>
<a href=""mailto:n.ew..bu.ssin.e.s..ye.ar@gmail.com"">n.ew..bu.ssin.e.s..ye.ar@gmail.com</a>
<a href=""mailto:new.bu.ss.ines.y.e.ar@gmail.com"">new.bu.ss.ines.y.e.ar@gmail.com</a>
<a href=""mailto:n.e.w.bu.ssin.es..y.ea.r@gmail.com"">n.e.w.bu.ssin.es..y.ea.r@gmail.com</a>
<a href=""mailto:n.ew...b.u.s.s.in.e.s...y.e.a.r@gmail.com"">n.ew...b.u.s.s.in.e.s...y.e.a.r@gmail.com</a>
<a href=""mailto:n.ew..bus.s.ine.s.yea.r@gmail.com"">n.ew..bus.s.ine.s.yea.r@gmail.com</a>
<a href=""mailto:ne.w.bu.ss.in.e.s...ye.ar@gmail.com"">ne.w.bu.ss.in.e.s...ye.ar@gmail.com</a>
<a href=""mailto:n.ew...bus.s.i.n.es.yea.r@gmail.com"">n.ew...bus.s.i.n.es.yea.r@gmail.com</a>
<a href=""mailto:new..bu.ss.i.ne.s..ye.ar@gmail.com"">new..bu.ss.i.ne.s..ye.ar@gmail.com</a>
<a href=""mailto:new..b.u.ss.ine.s...year@gmail.com"">new..b.u.ss.ine.s...year@gmail.com</a>
<a href=""mailto:ne.w..b.u.s.s.ine.s..ye.ar@gmail.com"">ne.w..b.u.s.s.ine.s..ye.ar@gmail.com</a>
<a href=""mailto:new.buss.i.n.e.s...y.e.a.r@gmail.com"">new.buss.i.n.e.s...y.e.a.r@gmail.com</a>
<a href=""mailto:ne.w..bus.s.i.nes..y.ea.r@gmail.com"">ne.w..bus.s.i.nes..y.ea.r@gmail.com</a>
<a href=""mailto:ne.w..b.u.ss.i.n.e.s...yea.r@gmail.com"">ne.w..b.u.ss.i.n.e.s...yea.r@gmail.com</a>
<a href=""mailto:new..b.u.s.si.ne.s..y.ear@gmail.com"">new..b.u.s.si.ne.s..y.ear@gmail.com</a>
<a href=""mailto:new.b.us.sine.s..y.ea.r@gmail.com"">new.b.us.sine.s..y.ea.r@gmail.com</a>
<a href=""mailto:ne.w.b.us.s.ine.s...y.ea.r@gmail.com"">ne.w.b.us.s.ine.s...y.ea.r@gmail.com</a>
<a href=""mailto:ne.w.b.u.ss.i.n.e.s..y.ear@gmail.com"">ne.w.b.u.ss.i.n.e.s..y.ear@gmail.com</a>
<a href=""mailto:n.e.w..b.uss.in.e.s..yea.r@gmail.com"">n.e.w..b.uss.in.e.s..yea.r@gmail.com</a>
<a href=""mailto:n.ew..bu.s.sine.s...year@gmail.com"">n.ew..bu.s.sine.s...year@gmail.com</a>
<a href=""mailto:ne.w.buss.i.ne.s...y.e.ar@gmail.com"">ne.w.buss.i.ne.s...y.e.ar@gmail.com</a>
<a href=""mailto:new.b.us.sine.s.y.ea.r@gmail.com"">new.b.us.sine.s.y.ea.r@gmail.com</a>
<a href=""mailto:n.e.w..b.uss.i.n.e.s..y.e.a.r@gmail.com"">n.e.w..b.uss.i.n.e.s..y.e.a.r@gmail.com</a>
<a href=""mailto:n.e.w..b.u.ssin.es..y.e.a.r@gmail.com"">n.e.w..b.u.ssin.es..y.e.a.r@gmail.com</a>
<a href=""mailto:n.e.w.b.us.s.in.es..ye.ar@gmail.com"">n.e.w.b.us.s.in.es..ye.ar@gmail.com</a>
<a href=""mailto:new...b.uss.i.nes..year@gmail.com"">new...b.uss.i.nes..year@gmail.com</a>
<a href=""mailto:n.e.w..bu.s.sines...y.e.a.r@gmail.com"">n.e.w..bu.s.sines...y.e.a.r@gmail.com</a>
<a href=""mailto:new..buss.in.es.ye.ar@gmail.com"">new..buss.in.es.ye.ar@gmail.com</a>
<a href=""mailto:n.e.w..buss.ines..yea.r@gmail.com"">n.e.w..buss.ines..yea.r@gmail.com</a>
<a href=""mailto:n.e.w...b.u.s.s.in.e.s..y.e.a.r@gmail.com"">n.e.w...b.u.s.s.in.e.s..y.e.a.r@gmail.com</a>
<a href=""mailto:new..bus.s.ine.s..ye.a.r@gmail.com"">new..bus.s.ine.s..ye.a.r@gmail.com</a>
<a href=""mailto:ne.w...buss.i.nes..ye.ar@gmail.com"">ne.w...buss.i.nes..ye.ar@gmail.com</a>
<a href=""mailto:new...bus.si.ne.s...y.ea.r@gmail.com"">new...bus.si.ne.s...y.ea.r@gmail.com</a>
<a href=""mailto:n.ew..b.u.ssines..y.ea.r@gmail.com"">n.ew..b.u.ssines..y.ea.r@gmail.com</a>
<a href=""mailto:n.ew...b.uss.i.n.es...y.ea.r@gmail.com"">n.ew...b.uss.i.n.es...y.ea.r@gmail.com</a>
<a href=""mailto:n.ew...bus.s.i.nes.y.ear@gmail.com"">n.ew...bus.s.i.nes.y.ear@gmail.com</a>
<a href=""mailto:n.ew..b.u.ss.i.nes..ye.ar@gmail.com"">n.ew..b.u.ss.i.nes..ye.ar@gmail.com</a>
<a href=""mailto:ne.w.b.ussi.n.es...yea.r@gmail.com"">ne.w.b.ussi.n.es...yea.r@gmail.com</a>
<a href=""mailto:new..b.u.s.s.i.n.e.s..y.e.ar@gmail.com"">new..b.u.s.s.i.n.e.s..y.e.ar@gmail.com</a>
<a href=""mailto:n.ew...b.uss.ines..y.e.a.r@gmail.com"">n.ew...b.uss.ines..y.e.a.r@gmail.com</a>
<a href=""mailto:new...buss.i.n.es.yea.r@gmail.com"">new...buss.i.n.es.yea.r@gmail.com</a>
<a href=""mailto:n.e.w...b.u.s.sin.e.s..y.e.a.r@gmail.com"">n.e.w...b.u.s.sin.e.s..y.e.a.r@gmail.com</a>
<a href=""mailto:new..bu.s.si.ne.s..y.ear@gmail.com"">new..bu.s.si.ne.s..y.ear@gmail.com</a>
<a href=""mailto:new..bussin.e.s.year@gmail.com"">new..bussin.e.s.year@gmail.com</a>
<a href=""mailto:new..bus.s.ine.s.year@gmail.com"">new..bus.s.ine.s.year@gmail.com</a>
<a href=""mailto:ne.w.b.u.s.s.in.e.s..y.ear@gmail.com"">ne.w.b.u.s.s.in.e.s..y.ear@gmail.com</a>
<a href=""mailto:n.ew...b.u.ssine.s.y.ea.r@gmail.com"">n.ew...b.u.ssine.s.y.ea.r@gmail.com</a>
<a href=""mailto:n.ew.b.u.ssi.n.e.s...ye.ar@gmail.com"">n.ew.b.u.ssi.n.e.s...ye.ar@gmail.com</a>
<a href=""mailto:n.e.w.b.us.si.n.e.s..ye.ar@gmail.com"">n.e.w.b.us.si.n.e.s..ye.ar@gmail.com</a>
<a href=""mailto:ne.w..b.uss.ine.s..year@gmail.com"">ne.w..b.uss.ine.s..year@gmail.com</a>
<a href=""mailto:n.ew.buss.i.n.e.s...y.e.ar@gmail.com"">n.ew.buss.i.n.e.s...y.e.ar@gmail.com</a>
<a href=""mailto:new..bus.s.i.n.e.s..year@gmail.com"">new..bus.s.i.n.e.s..year@gmail.com</a>
<a href=""mailto:n.e.w..bus.s.ine.s..yea.r@gmail.com"">n.e.w..bus.s.ine.s..yea.r@gmail.com</a>
<a href=""mailto:n.e.w..b.u.ss.ines..y.ea.r@gmail.com"">n.e.w..b.u.ss.ines..y.ea.r@gmail.com</a>
<a href=""mailto:n.ew..b.u.s.sine.s..year@gmail.com"">n.ew..b.u.s.sine.s..year@gmail.com</a>
<a href=""mailto:ne.w.bussine.s..y.ear@gmail.com"">ne.w.bussine.s..y.ear@gmail.com</a>
<a href=""mailto:n.e.w.bu.ss.ine.s..yea.r@gmail.com"">n.e.w.bu.ss.ine.s..yea.r@gmail.com</a>
<a href=""mailto:n.e.w...b.us.s.ines..year@gmail.com"">n.e.w...b.us.s.ines..year@gmail.com</a>
<a href=""mailto:new.bussin.e.s.y.e.a.r@gmail.com"">new.bussin.e.s.y.e.a.r@gmail.com</a>
<a href=""mailto:n.e.w...buss.i.nes...yea.r@gmail.com"">n.e.w...buss.i.nes...yea.r@gmail.com</a>
<a href=""mailto:n.ew..bu.s.s.i.n.e.s..y.e.a.r@gmail.com"">n.ew..bu.s.s.i.n.e.s..y.e.a.r@gmail.com</a>
<a href=""mailto:new..b.u.ss.i.ne.s..y.e.a.r@gmail.com"">new..b.u.ss.i.ne.s..y.e.a.r@gmail.com</a>
<a href=""mailto:ne.w.bus.s.i.nes.ye.a.r@gmail.com"">ne.w.bus.s.i.nes.ye.a.r@gmail.com</a>
<a href=""mailto:ne.w...b.u.s.s.i.n.e.s..year@gmail.com"">ne.w...b.u.s.s.i.n.e.s..year@gmail.com</a>
<a href=""mailto:new.b.u.ssines..yea.r@gmail.com"">new.b.u.ssines..yea.r@gmail.com</a>
<a href=""mailto:ne.w.buss.in.es..yea.r@gmail.com"">ne.w.buss.in.es..yea.r@gmail.com</a>
<a href=""mailto:new..b.u.s.sin.e.s..y.e.a.r@gmail.com"">new..b.u.s.sin.e.s..y.e.a.r@gmail.com</a>
<a href=""mailto:n.e.w.bu.s.s.ine.s.year@gmail.com"">n.e.w.bu.s.s.ine.s.year@gmail.com</a>
<a href=""mailto:new..bus.s.i.nes..ye.ar@gmail.com"">new..bus.s.i.nes..ye.ar@gmail.com</a>
<a href=""mailto:new.bus.s.i.ne.s.y.e.ar@gmail.com"">new.bus.s.i.ne.s.y.e.ar@gmail.com</a>
<a href=""mailto:ne.w..bus.s.ines...y.ea.r@gmail.com"">ne.w..bus.s.ines...y.ea.r@gmail.com</a>
<a href=""mailto:n.e.w.bus.sin.e.s...y.e.a.r@gmail.com"">n.e.w.bus.sin.e.s...y.e.a.r@gmail.com</a>
<a href=""mailto:ne.w..b.ussin.e.s..ye.a.r@gmail.com"">ne.w..b.ussin.e.s..ye.a.r@gmail.com</a>
<a href=""mailto:new.b.us.s.in.e.s.y.e.a.r@gmail.com"">new.b.us.s.in.e.s.y.e.a.r@gmail.com</a>
<a href=""mailto:ne.w..b.us.sin.es...y.ea.r@gmail.com"">ne.w..b.us.sin.es...y.ea.r@gmail.com</a>
<a href=""mailto:n.ew.buss.in.es.ye.a.r@gmail.com"">n.ew.buss.in.es.ye.a.r@gmail.com</a>
<a href=""mailto:n.ew...b.us.si.ne.s..year@gmail.com"">n.ew...b.us.si.ne.s..year@gmail.com</a>
<a href=""mailto:n.e.w.bu.s.sin.es..yea.r@gmail.com"">n.e.w.bu.s.sin.es..yea.r@gmail.com</a>
<a href=""mailto:ne.w..bu.s.sines..y.ear@gmail.com"">ne.w..bu.s.sines..y.ear@gmail.com</a>
<a href=""mailto:n.e.w..bu.ss.i.nes..y.e.ar@gmail.com"">n.e.w..bu.ss.i.nes..y.e.ar@gmail.com</a>
<a href=""mailto:new..bu.s.s.in.e.s..yea.r@gmail.com"">new..bu.s.s.in.e.s..yea.r@gmail.com</a>
<a href=""mailto:n.e.w..b.ussin.es..y.ear@gmail.com"">n.e.w..b.ussin.es..y.ear@gmail.com</a>
<a href=""mailto:n.e.w..b.u.ssines.y.e.ar@gmail.com"">n.e.w..b.u.ssines.y.e.ar@gmail.com</a>
<a href=""mailto:ne.w.b.u.ssin.e.s.y.e.a.r@gmail.com"">ne.w.b.u.ssin.e.s.y.e.a.r@gmail.com</a>
<a href=""mailto:ne.w.bus.s.i.n.e.s.yea.r@gmail.com"">ne.w.bus.s.i.n.e.s.yea.r@gmail.com</a>
<a href=""mailto:new..b.u.s.si.ne.s..y.ea.r@gmail.com"">new..b.u.s.si.ne.s..y.ea.r@gmail.com</a>
<a href=""mailto:ne.w...b.u.ss.i.n.e.s..ye.ar@gmail.com"">ne.w...b.u.ss.i.n.e.s..ye.ar@gmail.com</a>
<a href=""mailto:ne.w.bu.s.sines.y.e.a.r@gmail.com"">ne.w.bu.s.sines.y.e.a.r@gmail.com</a>
<a href=""mailto:n.ew...b.us.si.nes.y.ea.r@gmail.com"">n.ew...b.us.si.nes.y.ea.r@gmail.com</a>
<a href=""mailto:n.e.w...b.u.s.sin.es..y.ea.r@gmail.com"">n.e.w...b.u.s.sin.es..y.ea.r@gmail.com</a>
<a href=""mailto:ne.w...b.us.s.i.n.e.s.y.ea.r@gmail.com"">ne.w...b.us.s.i.n.e.s.y.ea.r@gmail.com</a>
<a href=""mailto:new..bu.s.s.in.es...y.ear@gmail.com"">new..bu.s.s.in.es...y.ear@gmail.com</a>
<a href=""mailto:ne.w...buss.i.ne.s..y.e.ar@gmail.com"">ne.w...buss.i.ne.s..y.e.ar@gmail.com</a>
<a href=""mailto:n.e.w..b.us.s.in.e.s..y.ear@gmail.com"">n.e.w..b.us.s.in.e.s..y.ear@gmail.com</a>
<a href=""mailto:ne.w...b.u.s.si.ne.s..yea.r@gmail.com"">ne.w...b.u.s.si.ne.s..yea.r@gmail.com</a>
<a href=""mailto:new...b.us.s.ine.s...year@gmail.com"">new...b.us.s.ine.s...year@gmail.com</a>
<a href=""mailto:ne.w.bussine.s.ye.ar@gmail.com"">ne.w.bussine.s.ye.ar@gmail.com</a>
<a href=""mailto:ne.w..b.u.ss.in.es.y.e.a.r@gmail.com"">ne.w..b.u.ss.in.es.y.e.a.r@gmail.com</a>
<a href=""mailto:new..bu.s.s.ines..y.e.a.r@gmail.com"">new..bu.s.s.ines..y.e.a.r@gmail.com</a>
<a href=""mailto:n.ew...bu.s.sine.s..y.e.a.r@gmail.com"">n.ew...bu.s.sine.s..y.e.a.r@gmail.com</a>
<a href=""mailto:new.buss.ine.s...y.ea.r@gmail.com"">new.buss.ine.s...y.ea.r@gmail.com</a>
<a href=""mailto:new...b.u.ssin.es...y.ea.r@gmail.com"">new...b.u.ssin.es...y.ea.r@gmail.com</a>
<a href=""mailto:new.b.us.si.nes..y.ea.r@gmail.com"">new.b.us.si.nes..y.ea.r@gmail.com</a>
<a href=""mailto:n.e.w..b.ussi.ne.s...y.e.a.r@gmail.com"">n.e.w..b.ussi.ne.s...y.e.a.r@gmail.com</a>
<a href=""mailto:ne.w..b.uss.in.es...yea.r@gmail.com"">ne.w..b.uss.in.es...yea.r@gmail.com</a>
<a href=""mailto:n.e.w..buss.i.ne.s...ye.ar@gmail.com"">n.e.w..buss.i.ne.s...ye.ar@gmail.com</a>
<a href=""mailto:new..b.u.ssi.n.es.y.e.ar@gmail.com"">new..b.u.ssi.n.es.y.e.ar@gmail.com</a>
<a href=""mailto:n.e.w..b.u.s.s.in.es..y.e.ar@gmail.com"">n.e.w..b.u.s.s.in.es..y.e.ar@gmail.com</a>
<a href=""mailto:new.b.u.ss.in.es...yea.r@gmail.com"">new.b.u.ss.in.es...yea.r@gmail.com</a>
<a href=""mailto:new..b.us.sines..ye.a.r@gmail.com"">new..b.us.sines..ye.a.r@gmail.com</a>
<a href=""mailto:ne.w..bu.s.s.ines..y.e.a.r@gmail.com"">ne.w..bu.s.s.ines..y.e.a.r@gmail.com</a>
<a href=""mailto:n.e.w..b.uss.in.e.s..y.e.ar@gmail.com"">n.e.w..b.uss.in.e.s..y.e.ar@gmail.com</a>
<a href=""mailto:n.e.w.bu.ss.i.ne.s..y.ear@gmail.com"">n.e.w.bu.ss.i.ne.s..y.ear@gmail.com</a>
<a href=""mailto:n.ew..bus.si.nes.ye.ar@gmail.com"">n.ew..bus.si.nes.ye.ar@gmail.com</a>
<a href=""mailto:new...b.us.sin.es..y.ea.r@gmail.com"">new...b.us.sin.es..y.ea.r@gmail.com</a>
<a href=""mailto:new..b.u.s.s.i.n.e.s.y.ear@gmail.com"">new..b.u.s.s.i.n.e.s.y.ear@gmail.com</a>
<a href=""mailto:ne.w...buss.i.ne.s...ye.a.r@gmail.com"">ne.w...buss.i.ne.s...ye.a.r@gmail.com</a>
<a href=""mailto:n.e.w.b.u.ssin.e.s.ye.ar@gmail.com"">n.e.w.b.u.ssin.e.s.ye.ar@gmail.com</a>
<a href=""mailto:ne.w...bu.s.s.in.e.s...year@gmail.com"">ne.w...bu.s.s.in.e.s...year@gmail.com</a>
<a href=""mailto:ne.w..bu.ss.i.n.es...year@gmail.com"">ne.w..bu.ss.i.n.es...year@gmail.com</a>
<a href=""mailto:new..b.uss.i.ne.s..y.ea.r@gmail.com"">new..b.uss.i.ne.s..y.ea.r@gmail.com</a>
<a href=""mailto:ne.w..bussin.e.s..y.ea.r@gmail.com"">ne.w..bussin.e.s..y.ea.r@gmail.com</a>
<a href=""mailto:ne.w...bus.s.ines..ye.a.r@gmail.com"">ne.w...bus.s.ines..ye.a.r@gmail.com</a>
<a href=""mailto:ne.w..bu.s.sin.e.s.y.ear@gmail.com"">ne.w..bu.s.sin.e.s.y.ear@gmail.com</a>
<a href=""mailto:ne.w..b.us.sin.e.s...y.ea.r@gmail.com"">ne.w..b.us.sin.e.s...y.ea.r@gmail.com</a>
<a href=""mailto:n.ew.buss.i.n.es..ye.ar@gmail.com"">n.ew.buss.i.n.es..ye.ar@gmail.com</a>
<a href=""mailto:n.ew...bu.s.si.n.es...y.e.a.r@gmail.com"">n.ew...bu.s.si.n.es...y.e.a.r@gmail.com</a>
<a href=""mailto:ne.w..bu.s.sin.e.s.y.ea.r@gmail.com"">ne.w..bu.s.sin.e.s.y.ea.r@gmail.com</a>
<a href=""mailto:n.ew..b.uss.i.nes..y.e.a.r@gmail.com"">n.ew..b.uss.i.nes..y.e.a.r@gmail.com</a>
<a href=""mailto:new..bussin.es...year@gmail.com"">new..bussin.es...year@gmail.com</a>
<a href=""mailto:n.ew.bu.ss.ine.s..ye.a.r@gmail.com"">n.ew.bu.ss.ine.s..ye.a.r@gmail.com</a>
<a href=""mailto:n.ew..bu.s.sin.e.s..y.ea.r@gmail.com"">n.ew..bu.s.sin.e.s..y.ea.r@gmail.com</a>
<a href=""mailto:n.ew..bu.ssin.es..ye.a.r@gmail.com"">n.ew..bu.ssin.es..ye.a.r@gmail.com</a>
<a href=""mailto:new..bus.s.i.n.e.s..y.e.ar@gmail.com"">new..bus.s.i.n.e.s..y.e.ar@gmail.com</a>
<a href=""mailto:n.ew...b.us.sines.y.ear@gmail.com"">n.ew...b.us.sines.y.ear@gmail.com</a>
<a href=""mailto:n.e.w..b.uss.in.e.s...yea.r@gmail.com"">n.e.w..b.uss.in.e.s...yea.r@gmail.com</a>
<a href=""mailto:new.b.uss.in.es..year@gmail.com"">new.b.uss.in.es..year@gmail.com</a>
<a href=""mailto:n.ew..bu.s.s.ines...y.ear@gmail.com"">n.ew..bu.s.s.ines...y.ear@gmail.com</a>
<a href=""mailto:n.ew..b.u.s.si.nes...y.ear@gmail.com"">n.ew..b.u.s.si.nes...y.ear@gmail.com</a>
<a href=""mailto:ne.w...b.u.s.sines..y.ear@gmail.com"">ne.w...b.u.s.sines..y.ear@gmail.com</a>
<a href=""mailto:n.e.w..buss.i.nes..ye.a.r@gmail.com"">n.e.w..buss.i.nes..ye.a.r@gmail.com</a>
<a href=""mailto:ne.w...bus.s.i.n.e.s..ye.a.r@gmail.com"">ne.w...bus.s.i.n.e.s..ye.a.r@gmail.com</a>
<a href=""mailto:n.ew..bu.ssines.y.ea.r@gmail.com"">n.ew..bu.ssines.y.ea.r@gmail.com</a>
<a href=""mailto:ne.w.b.us.s.in.e.s.yea.r@gmail.com"">ne.w.b.us.s.in.e.s.yea.r@gmail.com</a>
<a href=""mailto:n.ew.b.uss.ines.y.e.a.r@gmail.com"">n.ew.b.uss.ines.y.e.a.r@gmail.com</a>
<a href=""mailto:new..b.u.s.si.n.e.s..y.e.a.r@gmail.com"">new..b.u.s.si.n.e.s..y.e.a.r@gmail.com</a>
<a href=""mailto:new...bu.ssi.n.e.s..ye.ar@gmail.com"">new...bu.ssi.n.e.s..ye.ar@gmail.com</a>
<a href=""mailto:n.ew...bu.ss.in.e.s.ye.a.r@gmail.com"">n.ew...bu.ss.in.e.s.ye.a.r@gmail.com</a>
<a href=""mailto:n.e.w..b.us.sin.es..y.e.ar@gmail.com"">n.e.w..b.us.sin.es..y.e.ar@gmail.com</a>
<a href=""mailto:new.b.us.s.i.n.es.yea.r@gmail.com"">new.b.us.s.i.n.es.yea.r@gmail.com</a>
<a href=""mailto:n.e.w...b.uss.ine.s..y.e.ar@gmail.com"">n.e.w...b.uss.ine.s..y.e.ar@gmail.com</a>
<a href=""mailto:ne.w...b.u.ss.ines..year@gmail.com"">ne.w...b.u.ss.ines..year@gmail.com</a>
<a href=""mailto:new...b.u.s.s.in.es..ye.ar@gmail.com"">new...b.u.s.s.in.es..ye.ar@gmail.com</a>
<a href=""mailto:n.ew...b.ussin.e.s...yea.r@gmail.com"">n.ew...b.ussin.e.s...yea.r@gmail.com</a>
<a href=""mailto:ne.w.b.uss.ines..ye.ar@gmail.com"">ne.w.b.uss.ines..ye.ar@gmail.com</a>
<a href=""mailto:n.ew..bus.s.i.n.e.s..ye.ar@gmail.com"">n.ew..bus.s.i.n.e.s..ye.ar@gmail.com</a>
<a href=""mailto:new..b.u.ss.i.ne.s..ye.ar@gmail.com"">new..b.u.ss.i.ne.s..ye.ar@gmail.com</a>
<a href=""mailto:new...bu.s.s.i.n.e.s.y.e.ar@gmail.com"">new...bu.s.s.i.n.e.s.y.e.ar@gmail.com</a>
<a href=""mailto:new..b.u.s.s.in.e.s...y.e.a.r@gmail.com"">new..b.u.s.s.in.e.s...y.e.a.r@gmail.com</a>
<a href=""mailto:new..bu.ss.i.n.e.s.year@gmail.com"">new..bu.ss.i.n.e.s.year@gmail.com</a>
<a href=""mailto:new..b.uss.i.n.e.s..y.ea.r@gmail.com"">new..b.uss.i.n.e.s..y.ea.r@gmail.com</a>
<a href=""mailto:n.ew..b.ussi.n.es...y.e.a.r@gmail.com"">n.ew..b.ussi.n.es...y.e.a.r@gmail.com</a>
<a href=""mailto:new...bus.si.n.e.s...y.ear@gmail.com"">new...bus.si.n.e.s...y.ear@gmail.com</a>
<a href=""mailto:n.ew..buss.i.n.e.s..y.e.ar@gmail.com"">n.ew..buss.i.n.e.s..y.e.ar@gmail.com</a>
<a href=""mailto:ne.w.b.u.s.si.n.e.s..ye.ar@gmail.com"">ne.w.b.u.s.si.n.e.s..ye.ar@gmail.com</a>
<a href=""mailto:n.ew..b.us.sin.es.ye.a.r@gmail.com"">n.ew..b.us.sin.es.ye.a.r@gmail.com</a>
<a href=""mailto:new..bu.s.sines.y.ear@gmail.com"">new..bu.s.sines.y.ear@gmail.com</a>
<a href=""mailto:n.ew..bu.ss.i.nes..y.e.ar@gmail.com"">n.ew..bu.ss.i.nes..y.e.ar@gmail.com</a>
<a href=""mailto:new...b.ussi.n.es.yea.r@gmail.com"">new...b.ussi.n.es.yea.r@gmail.com</a>
<a href=""mailto:n.ew.b.us.s.in.es..year@gmail.com"">n.ew.b.us.s.in.es..year@gmail.com</a>
<a href=""mailto:n.e.w..bu.ss.in.e.s..y.e.ar@gmail.com"">n.e.w..bu.ss.in.e.s..y.e.ar@gmail.com</a>
<a href=""mailto:ne.w.bu.s.sin.es.ye.ar@gmail.com"">ne.w.bu.s.sin.es.ye.ar@gmail.com</a>
<a href=""mailto:n.ew..bu.s.s.i.n.es..y.e.ar@gmail.com"">n.ew..bu.s.s.i.n.es..y.e.ar@gmail.com</a>
<a href=""mailto:n.e.w..b.us.sin.e.s..ye.a.r@gmail.com"">n.e.w..b.us.sin.e.s..ye.a.r@gmail.com</a>
<a href=""mailto:ne.w..b.us.s.in.es..yea.r@gmail.com"">ne.w..b.us.s.in.es..yea.r@gmail.com</a>
<a href=""mailto:new..bu.s.si.nes..y.ea.r@gmail.com"">new..bu.s.si.nes..y.ea.r@gmail.com</a>
<a href=""mailto:n.ew..buss.i.n.es..y.ea.r@gmail.com"">n.ew..buss.i.n.es..y.ea.r@gmail.com</a>
<a href=""mailto:ne.w...b.uss.in.e.s..y.ear@gmail.com"">ne.w...b.uss.in.e.s..y.ear@gmail.com</a>
<a href=""mailto:n.e.w..b.us.sines...year@gmail.com"">n.e.w..b.us.sines...year@gmail.com</a>
<a href=""mailto:new..bussine.s...year@gmail.com"">new..bussine.s...year@gmail.com</a>
<a href=""mailto:ne.w...b.us.sin.es.y.ea.r@gmail.com"">ne.w...b.us.sin.es.y.ea.r@gmail.com</a>
<a href=""mailto:n.ew..b.u.ss.i.nes...ye.ar@gmail.com"">n.ew..b.u.ss.i.nes...ye.ar@gmail.com</a>
<a href=""mailto:n.ew..bu.ssi.ne.s...y.ear@gmail.com"">n.ew..bu.ssi.ne.s...y.ear@gmail.com</a>
<a href=""mailto:n.ew..bu.ssi.n.es.y.e.ar@gmail.com"">n.ew..bu.ssi.n.es.y.e.ar@gmail.com</a>
<a href=""mailto:new...b.us.s.i.ne.s..year@gmail.com"">new...b.us.s.i.ne.s..year@gmail.com</a>
<a href=""mailto:email.business.group@gmail.com"">email.business.group@gmail.com</a>
<a href=""mailto:e.m.ai.l...busine.ss..gr.ou.p@gmail.com"">e.m.ai.l...busine.ss..gr.ou.p@gmail.com</a>
<a href=""mailto:em.a.i.l..bu.sin.e.s.s..g.rou.p@gmail.com"">em.a.i.l..bu.sin.e.s.s..g.rou.p@gmail.com</a>
<a href=""mailto:e.mail.busi.ne.ss..group@gmail.com"">e.mail.busi.ne.ss..group@gmail.com</a>
<a href=""mailto:e.m.a.il..b.u.s.i.ness..gr.o.up@gmail.com"">e.m.a.il..b.u.s.i.ness..gr.o.up@gmail.com</a>
<a href=""mailto:em.ai.l...bu.s.i.n.e.ss...group@gmail.com"">em.ai.l...bu.s.i.n.e.ss...group@gmail.com</a>
<a href=""mailto:e.m.a.il..bu.si.n.e.s.s..g.rou.p@gmail.com"">e.m.a.il..bu.si.n.e.s.s..g.rou.p@gmail.com</a>
<a href=""mailto:em.a.il..bus.in.es.s..g.r.oup@gmail.com"">em.a.il..bus.in.es.s..g.r.oup@gmail.com</a>
<a href=""mailto:e.m.a.i.l..busines.s..gr.oup@gmail.com"">e.m.a.i.l..busines.s..gr.oup@gmail.com</a>
<a href=""mailto:e.m.a.il...bu.sin.e.ss..grou.p@gmail.com"">e.m.a.il...bu.sin.e.ss..grou.p@gmail.com</a>
<a href=""mailto:emai.l..b.u.s.i.ness.gr.o.u.p@gmail.com"">emai.l..b.u.s.i.ness.gr.o.u.p@gmail.com</a>
<a href=""mailto:emai.l...b.u.s.in.ess...g.roup@gmail.com"">emai.l...b.u.s.in.ess...g.roup@gmail.com</a>
<a href=""mailto:em.ai.l..b.u.s.in.e.ss.g.r.o.u.p@gmail.com"">em.ai.l..b.u.s.in.e.ss.g.r.o.u.p@gmail.com</a>
<a href=""mailto:em.ai.l...bu.si.nes.s..gr.o.u.p@gmail.com"">em.ai.l...bu.si.nes.s..gr.o.u.p@gmail.com</a>
<a href=""mailto:ema.il...b.u.s.ines.s.gr.ou.p@gmail.com"">ema.il...b.u.s.ines.s.gr.ou.p@gmail.com</a>
<a href=""mailto:ema.i.l..bus.ine.ss...g.ro.up@gmail.com"">ema.i.l..bus.ine.ss...g.ro.up@gmail.com</a>
<a href=""mailto:ema.i.l..b.u.s.ines.s.g.ro.u.p@gmail.com"">ema.i.l..b.u.s.ines.s.g.ro.u.p@gmail.com</a>
<a href=""mailto:e.ma.il..business...g.r.ou.p@gmail.com"">e.ma.il..business...g.r.ou.p@gmail.com</a>
<a href=""mailto:email...b.us.i.ne.ss...gr.o.u.p@gmail.com"">email...b.us.i.ne.ss...gr.o.u.p@gmail.com</a>
<a href=""mailto:emai.l...busin.e.ss..g.roup@gmail.com"">emai.l...busin.e.ss..g.roup@gmail.com</a>
<a href=""mailto:e.m.ail..b.us.iness.group@gmail.com"">e.m.ail..b.us.iness.group@gmail.com</a>
<a href=""mailto:em.a.il..bus.i.n.e.ss..group@gmail.com"">em.a.il..bus.i.n.e.ss..group@gmail.com</a>
<a href=""mailto:ema.il...b.u.s.ine.ss...group@gmail.com"">ema.il...b.u.s.ine.ss...group@gmail.com</a>
<a href=""mailto:e.m.ail..bu.si.n.ess..gr.ou.p@gmail.com"">e.m.ail..bu.si.n.ess..gr.ou.p@gmail.com</a>
<a href=""mailto:e.mail..business.gr.ou.p@gmail.com"">e.mail..business.gr.ou.p@gmail.com</a>
<a href=""mailto:ema.il..b.u.s.in.e.s.s..g.roup@gmail.com"">ema.il..b.u.s.in.e.s.s..g.roup@gmail.com</a>
<a href=""mailto:e.ma.i.l..busines.s..g.r.ou.p@gmail.com"">e.ma.i.l..busines.s..g.r.ou.p@gmail.com</a>
<a href=""mailto:em.a.il..bu.sine.ss..g.r.ou.p@gmail.com"">em.a.il..bu.sine.ss..g.r.ou.p@gmail.com</a>
<a href=""mailto:ema.i.l..b.usines.s..g.ro.up@gmail.com"">ema.i.l..b.usines.s..g.ro.up@gmail.com</a>
<a href=""mailto:emai.l..bu.sin.e.s.s.group@gmail.com"">emai.l..bu.sin.e.s.s.group@gmail.com</a>
<a href=""mailto:e.m.a.il...busine.s.s..gr.o.up@gmail.com"">e.m.a.il...busine.s.s..gr.o.up@gmail.com</a>
<a href=""mailto:ema.il..busines.s..gr.ou.p@gmail.com"">ema.il..busines.s..gr.ou.p@gmail.com</a>
<a href=""mailto:em.ai.l..bu.si.ne.s.s..gro.up@gmail.com"">em.ai.l..bu.si.ne.s.s..gro.up@gmail.com</a>
<a href=""mailto:em.a.i.l..b.u.s.in.e.ss..g.roup@gmail.com"">em.a.i.l..b.u.s.in.e.ss..g.roup@gmail.com</a>
<a href=""mailto:emai.l..bu.sin.ess.gr.oup@gmail.com"">emai.l..bu.sin.ess.gr.oup@gmail.com</a>
<a href=""mailto:em.ai.l..b.usin.ess.g.r.ou.p@gmail.com"">em.ai.l..b.usin.ess.g.r.ou.p@gmail.com</a>
<a href=""mailto:em.ail...b.u.s.i.ne.ss...g.ro.up@gmail.com"">em.ail...b.u.s.i.ne.ss...g.ro.up@gmail.com</a>
<a href=""mailto:em.ai.l..b.usiness...g.rou.p@gmail.com"">em.ai.l..b.usiness...g.rou.p@gmail.com</a>
<a href=""mailto:e.ma.i.l...b.usi.ne.ss..grou.p@gmail.com"">e.ma.i.l...b.usi.ne.ss..grou.p@gmail.com</a>
<a href=""mailto:em.a.il..bu.sin.ess.g.r.ou.p@gmail.com"">em.a.il..bu.sin.ess.g.r.ou.p@gmail.com</a>
<a href=""mailto:e.mai.l..bu.s.ine.ss..g.r.o.u.p@gmail.com"">e.mai.l..bu.s.ine.ss..g.r.o.u.p@gmail.com</a>
<a href=""mailto:emai.l..bu.s.in.e.ss..gr.o.u.p@gmail.com"">emai.l..bu.s.in.e.ss..gr.o.u.p@gmail.com</a>
<a href=""mailto:e.mai.l..b.u.s.i.ne.s.s...grou.p@gmail.com"">e.mai.l..b.u.s.i.ne.s.s...grou.p@gmail.com</a>
<a href=""mailto:em.ail..b.us.i.n.e.ss..gr.oup@gmail.com"">em.ail..b.us.i.n.e.ss..gr.oup@gmail.com</a>
<a href=""mailto:emai.l...bus.in.es.s...g.roup@gmail.com"">emai.l...bus.in.es.s...g.roup@gmail.com</a>
<a href=""mailto:e.mail.b.u.siness...g.r.oup@gmail.com"">e.mail.b.u.siness...g.r.oup@gmail.com</a>
<a href=""mailto:e.m.a.il..bus.in.ess...gr.oup@gmail.com"">e.m.a.il..bus.in.ess...gr.oup@gmail.com</a>
<a href=""mailto:em.ail..b.us.ine.s.s.gr.o.u.p@gmail.com"">em.ail..b.us.ine.s.s.gr.o.u.p@gmail.com</a>
<a href=""mailto:e.ma.il..bu.s.ine.ss..g.r.ou.p@gmail.com"">e.ma.il..bu.s.ine.ss..g.r.ou.p@gmail.com</a>
<a href=""mailto:em.ail.bu.si.nes.s..gr.o.up@gmail.com"">em.ail.bu.si.nes.s..gr.o.up@gmail.com</a>
<a href=""mailto:e.ma.il..b.u.s.i.n.e.s.s..gro.u.p@gmail.com"">e.ma.il..b.u.s.i.n.e.s.s..gro.u.p@gmail.com</a>
<a href=""mailto:em.a.il..b.usin.e.s.s..gro.up@gmail.com"">em.a.il..b.usin.e.s.s..gro.up@gmail.com</a>
<a href=""mailto:em.ail...b.u.sine.ss...gr.o.up@gmail.com"">em.ail...b.u.sine.ss...gr.o.up@gmail.com</a>
<a href=""mailto:em.a.i.l.b.u.s.i.n.es.s..g.r.ou.p@gmail.com"">em.a.i.l.b.u.s.i.n.es.s..g.r.ou.p@gmail.com</a>
<a href=""mailto:emai.l.b.u.sin.e.s.s...gro.u.p@gmail.com"">emai.l.b.u.sin.e.s.s...gro.u.p@gmail.com</a>
<a href=""mailto:e.mail..bu.si.ne.ss..gr.o.u.p@gmail.com"">e.mail..bu.si.ne.ss..gr.o.u.p@gmail.com</a>
<a href=""mailto:em.ail.busi.n.e.s.s...gr.oup@gmail.com"">em.ail.busi.n.e.s.s...gr.oup@gmail.com</a>
<a href=""mailto:ema.il..b.u.s.i.ne.ss..gr.ou.p@gmail.com"">ema.il..b.u.s.i.ne.ss..gr.ou.p@gmail.com</a>
<a href=""mailto:e.ma.i.l..bu.s.ine.ss...g.r.o.up@gmail.com"">e.ma.i.l..bu.s.ine.ss...g.r.o.up@gmail.com</a>
<a href=""mailto:e.m.ail..bu.s.in.e.s.s..g.r.o.u.p@gmail.com"">e.m.ail..bu.s.in.e.s.s..g.r.o.u.p@gmail.com</a>
<a href=""mailto:em.ai.l..bu.s.ine.s.s...gro.up@gmail.com"">em.ai.l..bu.s.ine.s.s...gro.up@gmail.com</a>
<a href=""mailto:e.m.ail..bu.s.in.e.ss...grou.p@gmail.com"">e.m.ail..bu.s.in.e.ss...grou.p@gmail.com</a>
<a href=""mailto:e.m.a.il.bu.s.in.e.s.s...gr.ou.p@gmail.com"">e.m.a.il.bu.s.in.e.s.s...gr.ou.p@gmail.com</a>
<a href=""mailto:ema.il...busin.e.ss...gr.ou.p@gmail.com"">ema.il...busin.e.ss...gr.ou.p@gmail.com</a>
<a href=""mailto:em.ail.bu.s.i.n.es.s..gro.u.p@gmail.com"">em.ail.bu.s.i.n.es.s..gro.u.p@gmail.com</a>
<a href=""mailto:emai.l...bu.si.ne.ss...gro.u.p@gmail.com"">emai.l...bu.si.ne.ss...gro.u.p@gmail.com</a>
<a href=""mailto:em.ai.l..b.u.si.n.e.s.s..gro.u.p@gmail.com"">em.ai.l..b.u.si.n.e.s.s..gro.u.p@gmail.com</a>
<a href=""mailto:e.ma.il..b.u.s.in.e.s.s..g.r.o.u.p@gmail.com"">e.ma.il..b.u.s.in.e.s.s..g.r.o.u.p@gmail.com</a>
<a href=""mailto:em.ai.l..bu.s.i.n.es.s.gr.oup@gmail.com"">em.ai.l..bu.s.i.n.es.s.gr.oup@gmail.com</a>
<a href=""mailto:em.a.i.l...bus.in.e.ss..group@gmail.com"">em.a.i.l...bus.in.e.ss..group@gmail.com</a>
<a href=""mailto:e.mail.bus.in.e.s.s.g.rou.p@gmail.com"">e.mail.bus.in.e.s.s.g.rou.p@gmail.com</a>
<a href=""mailto:em.a.il.b.u.si.ne.s.s..gro.up@gmail.com"">em.a.il.b.u.si.ne.s.s..gro.up@gmail.com</a>
<a href=""mailto:e.m.ail...b.usi.ne.s.s..group@gmail.com"">e.m.ail...b.usi.ne.s.s..group@gmail.com</a>
<a href=""mailto:e.m.a.il...busine.ss...grou.p@gmail.com"">e.m.a.il...busine.ss...grou.p@gmail.com</a>
<a href=""mailto:ema.i.l...b.us.i.nes.s..g.r.oup@gmail.com"">ema.i.l...b.us.i.nes.s..g.r.oup@gmail.com</a>
<a href=""mailto:e.m.ai.l...bu.s.in.ess..group@gmail.com"">e.m.ai.l...bu.s.in.ess..group@gmail.com</a>
<a href=""mailto:ema.i.l..bu.s.in.e.s.s..gro.u.p@gmail.com"">ema.i.l..bu.s.in.e.s.s..gro.u.p@gmail.com</a>
<a href=""mailto:e.ma.il.busin.e.s.s.gr.ou.p@gmail.com"">e.ma.il.busin.e.s.s.gr.ou.p@gmail.com</a>
<a href=""mailto:e.m.ail..bus.i.ness..g.r.o.u.p@gmail.com"">e.m.ail..bus.i.ness..g.r.o.u.p@gmail.com</a>
<a href=""mailto:emai.l...b.usine.s.s..gro.u.p@gmail.com"">emai.l...b.usine.s.s..gro.u.p@gmail.com</a>
<a href=""mailto:em.ai.l..b.usin.ess..g.ro.up@gmail.com"">em.ai.l..b.usin.ess..g.ro.up@gmail.com</a>
<a href=""mailto:e.m.a.il...b.us.i.n.ess...gr.ou.p@gmail.com"">e.m.a.il...b.us.i.n.ess...gr.ou.p@gmail.com</a>
<a href=""mailto:ema.il...bu.sin.e.ss...g.r.o.u.p@gmail.com"">ema.il...bu.sin.e.ss...g.r.o.u.p@gmail.com</a>
<a href=""mailto:em.a.i.l...bu.si.n.e.s.s..g.roup@gmail.com"">em.a.i.l...bu.si.n.e.s.s..g.roup@gmail.com</a>
<a href=""mailto:ema.il...b.u.s.in.es.s..gr.o.up@gmail.com"">ema.il...b.u.s.in.es.s..gr.o.up@gmail.com</a>
<a href=""mailto:e.mai.l...bu.s.i.n.e.ss...gr.o.up@gmail.com"">e.mai.l...bu.s.i.n.e.ss...gr.o.up@gmail.com</a>
<a href=""mailto:emai.l..busin.es.s...gro.u.p@gmail.com"">emai.l..busin.es.s...gro.u.p@gmail.com</a>
<a href=""mailto:ema.i.l...b.usi.n.ess..g.ro.u.p@gmail.com"">ema.i.l...b.usi.n.ess..g.ro.u.p@gmail.com</a>
<a href=""mailto:email..b.u.sin.e.ss.grou.p@gmail.com"">email..b.u.sin.e.ss.grou.p@gmail.com</a>
<a href=""mailto:e.m.a.il..b.u.s.iness.gr.o.up@gmail.com"">e.m.a.il..b.u.s.iness.gr.o.up@gmail.com</a>
<a href=""mailto:e.m.a.i.l..bus.in.ess.g.r.o.up@gmail.com"">e.m.a.i.l..bus.in.ess.g.r.o.up@gmail.com</a>
<a href=""mailto:em.a.i.l.bu.si.n.e.s.s...gro.up@gmail.com"">em.a.i.l.bu.si.n.e.s.s...gro.up@gmail.com</a>
<a href=""mailto:e.m.a.il.bu.siness...gr.o.up@gmail.com"">e.m.a.il.bu.siness...gr.o.up@gmail.com</a>
<a href=""mailto:e.m.a.il.b.us.iness..group@gmail.com"">e.m.a.il.b.us.iness..group@gmail.com</a>
<a href=""mailto:e.ma.il..b.us.i.ne.ss.gr.oup@gmail.com"">e.ma.il..b.us.i.ne.ss.gr.oup@gmail.com</a>
<a href=""mailto:e.mail..b.usi.ness..g.r.ou.p@gmail.com"">e.mail..b.usi.ness..g.r.ou.p@gmail.com</a>
<a href=""mailto:e.m.a.il.bu.s.i.ness...g.r.o.u.p@gmail.com"">e.m.a.il.bu.s.i.ness...g.r.o.u.p@gmail.com</a>
<a href=""mailto:em.ail..bus.ine.ss...gr.o.u.p@gmail.com"">em.ail..bus.ine.ss...gr.o.u.p@gmail.com</a>
<a href=""mailto:e.mail...b.usine.ss.g.ro.u.p@gmail.com"">e.mail...b.usine.ss.g.ro.u.p@gmail.com</a>
<a href=""mailto:ema.i.l..b.us.i.n.es.s.g.roup@gmail.com"">ema.i.l..b.us.i.n.es.s.g.roup@gmail.com</a>
<a href=""mailto:em.a.il..bus.i.nes.s..gro.up@gmail.com"">em.a.il..bus.i.nes.s..gro.up@gmail.com</a>
<a href=""mailto:e.m.a.il..b.us.i.n.es.s..g.r.ou.p@gmail.com"">e.m.a.il..b.us.i.n.es.s..g.r.ou.p@gmail.com</a>
<a href=""mailto:e.m.ail..bu.sines.s..grou.p@gmail.com"">e.m.ail..bu.sines.s..grou.p@gmail.com</a>
<a href=""mailto:e.m.ai.l..bu.s.ine.s.s..g.r.ou.p@gmail.com"">e.m.ai.l..bu.s.ine.s.s..g.r.ou.p@gmail.com</a>
<a href=""mailto:e.mai.l.b.us.in.ess...gro.up@gmail.com"">e.mai.l.b.us.in.ess...gro.up@gmail.com</a>
<a href=""mailto:em.a.i.l..b.usi.ne.ss.g.ro.up@gmail.com"">em.a.i.l..b.usi.ne.ss.g.ro.up@gmail.com</a>
<a href=""mailto:emai.l..b.usi.nes.s.gro.u.p@gmail.com"">emai.l..b.usi.nes.s.gro.u.p@gmail.com</a>
<a href=""mailto:e.m.ai.l.bu.sin.ess...gro.up@gmail.com"">e.m.ai.l.bu.sin.ess...gro.up@gmail.com</a>
<a href=""mailto:e.ma.i.l...bu.s.ines.s...gr.o.up@gmail.com"">e.ma.i.l...bu.s.ines.s...gr.o.up@gmail.com</a>
<a href=""mailto:e.m.a.il..bus.i.n.es.s...gr.o.up@gmail.com"">e.m.a.il..bus.i.n.es.s...gr.o.up@gmail.com</a>
<a href=""mailto:em.ail...bus.in.e.ss..g.roup@gmail.com"">em.ail...bus.in.e.ss..g.roup@gmail.com</a>
<a href=""mailto:ema.il..b.u.s.i.n.e.ss..g.ro.up@gmail.com"">ema.il..b.u.s.i.n.e.ss..g.ro.up@gmail.com</a>
<a href=""mailto:ema.il...bu.s.i.ne.ss...g.r.ou.p@gmail.com"">ema.il...bu.s.i.ne.ss...g.r.ou.p@gmail.com</a>
<a href=""mailto:em.a.i.l..bu.si.ne.ss.grou.p@gmail.com"">em.a.i.l..bu.si.ne.ss.grou.p@gmail.com</a>
<a href=""mailto:e.mai.l.bus.in.es.s.gr.ou.p@gmail.com"">e.mai.l.bus.in.es.s.gr.ou.p@gmail.com</a>
<a href=""mailto:em.a.il..bu.sine.s.s..g.r.o.up@gmail.com"">em.a.il..bu.sine.s.s..g.r.o.up@gmail.com</a>
<a href=""mailto:ema.il..bus.in.e.s.s.g.r.o.u.p@gmail.com"">ema.il..bus.in.e.s.s.g.r.o.u.p@gmail.com</a>
<a href=""mailto:em.a.i.l..bu.s.in.e.ss..g.ro.u.p@gmail.com"">em.a.i.l..bu.s.in.e.ss..g.ro.u.p@gmail.com</a>
<a href=""mailto:em.a.il..busi.ne.s.s..gr.o.up@gmail.com"">em.a.il..busi.ne.s.s..gr.o.up@gmail.com</a>
<a href=""mailto:em.ail...busine.s.s..gr.oup@gmail.com"">em.ail...busine.s.s..gr.oup@gmail.com</a>
<a href=""mailto:ema.i.l..b.usi.n.es.s..g.r.ou.p@gmail.com"">ema.i.l..b.usi.n.es.s..g.r.ou.p@gmail.com</a>
<a href=""mailto:e.ma.i.l..busine.s.s..gr.o.up@gmail.com"">e.ma.i.l..busine.s.s..gr.o.up@gmail.com</a>
<a href=""mailto:e.ma.il.b.usin.es.s...group@gmail.com"">e.ma.il.b.usin.es.s...group@gmail.com</a>
<a href=""mailto:e.m.ail..busi.ne.s.s..g.r.ou.p@gmail.com"">e.m.ail..busi.ne.s.s..g.r.ou.p@gmail.com</a>
<a href=""mailto:e.ma.il..b.usine.s.s.gro.up@gmail.com"">e.ma.il..b.usine.s.s.gro.up@gmail.com</a>
<a href=""mailto:em.a.i.l..b.u.s.ine.s.s..gro.u.p@gmail.com"">em.a.i.l..b.u.s.ine.s.s..gro.u.p@gmail.com</a>
<a href=""mailto:ema.i.l.b.usiness.gr.ou.p@gmail.com"">ema.i.l.b.usiness.gr.ou.p@gmail.com</a>
<a href=""mailto:e.ma.i.l...busi.ne.ss..gr.o.up@gmail.com"">e.ma.i.l...busi.ne.ss..gr.o.up@gmail.com</a>
<a href=""mailto:e.mail...b.us.ines.s...gr.ou.p@gmail.com"">e.mail...b.us.ines.s...gr.ou.p@gmail.com</a>
<a href=""mailto:em.a.i.l..bu.s.in.e.s.s.gr.ou.p@gmail.com"">em.a.i.l..bu.s.in.e.s.s.gr.ou.p@gmail.com</a>
<a href=""mailto:e.m.a.il...b.us.i.n.e.s.s..grou.p@gmail.com"">e.m.a.il...b.us.i.n.e.s.s..grou.p@gmail.com</a>
<a href=""mailto:e.mai.l...bu.sine.ss..gr.ou.p@gmail.com"">e.mai.l...bu.sine.ss..gr.ou.p@gmail.com</a>
<a href=""mailto:ema.il.b.u.s.i.ne.ss...g.rou.p@gmail.com"">ema.il.b.u.s.i.ne.ss...g.rou.p@gmail.com</a>
<a href=""mailto:e.m.ai.l...bu.s.i.nes.s.gr.o.u.p@gmail.com"">e.m.ai.l...bu.s.i.nes.s.gr.o.u.p@gmail.com</a>
<a href=""mailto:em.a.i.l...bu.s.i.n.e.s.s...g.ro.up@gmail.com"">em.a.i.l...bu.s.i.n.e.s.s...g.ro.up@gmail.com</a>
<a href=""mailto:em.a.il..b.u.s.in.es.s...gr.ou.p@gmail.com"">em.a.il..b.u.s.in.es.s...gr.ou.p@gmail.com</a>
<a href=""mailto:ema.i.l..busin.ess...gr.oup@gmail.com"">ema.i.l..busin.ess...gr.oup@gmail.com</a>
<a href=""mailto:em.a.il.bu.si.ne.s.s...g.r.o.up@gmail.com"">em.a.il.bu.si.ne.s.s...g.r.o.up@gmail.com</a>
<a href=""mailto:e.mai.l.b.usi.n.e.s.s..gr.o.up@gmail.com"">e.mai.l.b.usi.n.e.s.s..gr.o.up@gmail.com</a>
<a href=""mailto:e.m.a.il..b.u.si.n.e.ss.g.r.oup@gmail.com"">e.m.a.il..b.u.si.n.e.ss.g.r.oup@gmail.com</a>
<a href=""mailto:em.a.il..b.us.in.ess.group@gmail.com"">em.a.il..b.us.in.ess.group@gmail.com</a>
<a href=""mailto:e.m.a.i.l...b.u.sin.es.s...g.r.oup@gmail.com"">e.m.a.i.l...b.u.sin.es.s...g.r.oup@gmail.com</a>
<a href=""mailto:e.m.ai.l...b.us.i.n.e.ss.group@gmail.com"">e.m.ai.l...b.us.i.n.e.ss.group@gmail.com</a>
<a href=""mailto:em.ai.l.bu.si.ness...gr.oup@gmail.com"">em.ai.l.bu.si.ness...gr.oup@gmail.com</a>
<a href=""mailto:emai.l..bus.i.ne.s.s...gro.up@gmail.com"">emai.l..bus.i.ne.s.s...gro.up@gmail.com</a>
<a href=""mailto:ema.il.b.u.s.i.n.ess...g.ro.up@gmail.com"">ema.il.b.u.s.i.n.ess...g.ro.up@gmail.com</a>
<a href=""mailto:e.m.ai.l...busi.ne.ss..gr.ou.p@gmail.com"">e.m.ai.l...busi.ne.ss..gr.ou.p@gmail.com</a>
<a href=""mailto:emai.l..business..gr.o.up@gmail.com"">emai.l..business..gr.o.up@gmail.com</a>
<a href=""mailto:em.a.i.l..b.u.s.i.ness..grou.p@gmail.com"">em.a.i.l..b.u.s.i.ness..grou.p@gmail.com</a>
<a href=""mailto:e.m.a.il..busi.ness..gr.o.up@gmail.com"">e.m.a.il..busi.ness..gr.o.up@gmail.com</a>
<a href=""mailto:e.m.ai.l..busi.n.e.s.s.g.r.o.u.p@gmail.com"">e.m.ai.l..busi.n.e.s.s.g.r.o.u.p@gmail.com</a>
<a href=""mailto:e.m.ai.l..bu.si.n.e.s.s...g.r.ou.p@gmail.com"">e.m.ai.l..bu.si.n.e.s.s...g.r.ou.p@gmail.com</a>
<a href=""mailto:e.m.ail..bu.s.i.nes.s..g.roup@gmail.com"">e.m.ail..bu.s.i.nes.s..g.roup@gmail.com</a>
<a href=""mailto:ema.il...b.u.si.n.ess..g.r.oup@gmail.com"">ema.il...b.u.si.n.ess..g.r.oup@gmail.com</a>
<a href=""mailto:e.m.a.il.b.u.sine.s.s..gro.u.p@gmail.com"">e.m.a.il.b.u.sine.s.s..gro.u.p@gmail.com</a>
<a href=""mailto:emai.l...bu.s.ine.ss...g.r.o.u.p@gmail.com"">emai.l...bu.s.ine.ss...g.r.o.u.p@gmail.com</a>
<a href=""mailto:e.m.a.i.l.b.u.si.n.es.s.g.roup@gmail.com"">e.m.a.i.l.b.u.si.n.es.s.g.roup@gmail.com</a>
<a href=""mailto:e.m.ail...bu.siness..group@gmail.com"">e.m.ail...bu.siness..group@gmail.com</a>
<a href=""mailto:e.mai.l..b.us.i.n.es.s..g.roup@gmail.com"">e.mai.l..b.us.i.n.es.s..g.roup@gmail.com</a>
<a href=""mailto:email...b.usi.ne.ss..gr.ou.p@gmail.com"">email...b.usi.ne.ss..gr.ou.p@gmail.com</a>
<a href=""mailto:e.m.ai.l..bu.si.n.e.s.s..gr.o.up@gmail.com"">e.m.ai.l..bu.si.n.e.s.s..gr.o.up@gmail.com</a>
<a href=""mailto:e.m.a.il.b.u.si.n.e.s.s..g.roup@gmail.com"">e.m.a.il.b.u.si.n.e.s.s..g.roup@gmail.com</a>
<a href=""mailto:em.ai.l..b.u.s.in.e.s.s.g.ro.u.p@gmail.com"">em.ai.l..b.u.s.in.e.s.s.g.ro.u.p@gmail.com</a>
<a href=""mailto:email...bu.s.iness..gro.u.p@gmail.com"">email...bu.s.iness..gro.u.p@gmail.com</a>
<a href=""mailto:e.ma.i.l...bu.s.i.ness..gr.o.u.p@gmail.com"">e.ma.i.l...bu.s.i.ness..gr.o.u.p@gmail.com</a>
<a href=""mailto:e.m.ai.l...b.usine.s.s.gr.o.up@gmail.com"">e.m.ai.l...b.usine.s.s.gr.o.up@gmail.com</a>
<a href=""mailto:em.a.il.b.usines.s..g.r.oup@gmail.com"">em.a.il.b.usines.s..g.r.oup@gmail.com</a>
<a href=""mailto:em.ai.l..bu.siness..g.rou.p@gmail.com"">em.ai.l..bu.siness..g.rou.p@gmail.com</a>
<a href=""mailto:ema.il.b.us.in.e.s.s..g.r.o.up@gmail.com"">ema.il.b.us.in.e.s.s..g.r.o.up@gmail.com</a>
<a href=""mailto:e.mai.l..bu.s.i.ne.s.s..gr.oup@gmail.com"">e.mai.l..bu.s.i.ne.s.s..gr.oup@gmail.com</a>
<a href=""mailto:ema.il...b.us.ines.s...grou.p@gmail.com"">ema.il...b.us.ines.s...grou.p@gmail.com</a>
<a href=""mailto:ema.i.l.busin.ess..g.r.o.u.p@gmail.com"">ema.i.l.busin.ess..g.r.o.u.p@gmail.com</a>
<a href=""mailto:e.m.a.il..b.us.i.ness...group@gmail.com"">e.m.a.il..b.us.i.ness...group@gmail.com</a>
<a href=""mailto:e.mail...b.us.in.es.s..g.ro.u.p@gmail.com"">e.mail...b.us.in.es.s..g.ro.u.p@gmail.com</a>
<a href=""mailto:e.ma.i.l.b.usin.e.ss...g.rou.p@gmail.com"">e.ma.i.l.b.usin.e.ss...g.rou.p@gmail.com</a>
<a href=""mailto:e.m.a.il..busine.s.s..grou.p@gmail.com"">e.m.a.il..busine.s.s..grou.p@gmail.com</a>
<a href=""mailto:e.ma.il..busin.e.ss..g.roup@gmail.com"">e.ma.il..busin.e.ss..g.roup@gmail.com</a>
<a href=""mailto:e.m.a.i.l..bus.in.e.ss...g.r.o.u.p@gmail.com"">e.m.a.i.l..bus.in.e.ss...g.r.o.u.p@gmail.com</a>
<a href=""mailto:emai.l.b.us.iness..g.r.o.up@gmail.com"">emai.l.b.us.iness..g.r.o.up@gmail.com</a>
<a href=""mailto:e.mai.l..b.u.si.n.e.s.s...g.rou.p@gmail.com"">e.mai.l..b.u.si.n.e.s.s...g.rou.p@gmail.com</a>
<a href=""mailto:ema.il..bu.si.n.e.ss.gr.o.u.p@gmail.com"">ema.il..bu.si.n.e.ss.gr.o.u.p@gmail.com</a>
<a href=""mailto:e.m.ail..bu.s.i.nes.s..gr.o.u.p@gmail.com"">e.m.ail..bu.s.i.nes.s..gr.o.u.p@gmail.com</a>
<a href=""mailto:email..b.u.si.n.es.s.grou.p@gmail.com"">email..b.u.si.n.es.s.grou.p@gmail.com</a>
<a href=""mailto:e.mail..b.u.si.ne.s.s...g.rou.p@gmail.com"">e.mail..b.u.si.ne.s.s...g.rou.p@gmail.com</a>
<a href=""mailto:e.m.ai.l..b.usiness..g.r.ou.p@gmail.com"">e.m.ai.l..b.usiness..g.r.ou.p@gmail.com</a>
<a href=""mailto:e.ma.il.b.usi.ne.ss...g.r.o.u.p@gmail.com"">e.ma.il.b.usi.ne.ss...g.r.o.u.p@gmail.com</a>
<a href=""mailto:em.ai.l...bu.si.n.es.s...g.r.ou.p@gmail.com"">em.ai.l...bu.si.n.es.s...g.r.ou.p@gmail.com</a>
<a href=""mailto:ema.i.l.b.u.si.n.e.s.s...gr.oup@gmail.com"">ema.i.l.b.u.si.n.e.s.s...gr.oup@gmail.com</a>
<a href=""mailto:e.m.a.i.l...b.us.i.ness...g.r.oup@gmail.com"">e.m.a.i.l...b.us.i.ness...g.r.oup@gmail.com</a>
<a href=""mailto:em.a.il..b.usi.ne.ss...gr.o.up@gmail.com"">em.a.il..b.usi.ne.ss...gr.o.up@gmail.com</a>
<a href=""mailto:e.mai.l...b.usi.n.e.ss..g.r.o.u.p@gmail.com"">e.mai.l...b.usi.n.e.ss..g.r.o.u.p@gmail.com</a>
<a href=""mailto:e.ma.i.l...bu.s.i.ne.s.s..g.roup@gmail.com"">e.ma.i.l...bu.s.i.ne.s.s..g.roup@gmail.com</a>
<a href=""mailto:e.mai.l..b.u.s.in.e.s.s.g.ro.up@gmail.com"">e.mai.l..b.u.s.in.e.s.s.g.ro.up@gmail.com</a>
<a href=""mailto:email...busine.ss...gro.u.p@gmail.com"">email...busine.ss...gro.u.p@gmail.com</a>
<a href=""mailto:e.mail.b.usine.s.s..g.r.ou.p@gmail.com"">e.mail.b.usine.s.s..g.r.ou.p@gmail.com</a>
<a href=""mailto:e.m.ail..b.u.sines.s...g.ro.up@gmail.com"">e.m.ail..b.u.sines.s...g.ro.up@gmail.com</a>
<a href=""mailto:email..bu.sine.s.s.group@gmail.com"">email..bu.sine.s.s.group@gmail.com</a>
<a href=""mailto:ema.i.l..bu.s.in.ess..g.r.ou.p@gmail.com"">ema.i.l..bu.s.in.ess..g.r.ou.p@gmail.com</a>
<a href=""mailto:em.ai.l..b.us.in.es.s.gro.u.p@gmail.com"">em.ai.l..b.us.in.es.s.gro.u.p@gmail.com</a>
<a href=""mailto:e.mail...b.us.i.n.es.s..g.r.o.u.p@gmail.com"">e.mail...b.us.i.n.es.s..g.r.o.u.p@gmail.com</a>
<a href=""mailto:e.mai.l...bu.sin.ess..g.roup@gmail.com"">e.mai.l...bu.sin.ess..g.roup@gmail.com</a>"
x0SqePJM,Advent of code 2023 day 12 fast,hhoppe,Python,Saturday 16th of December 2023 12:58:10 AM CDT,"def day12(s0, *, part2=False):  # Dynamic programming, without numba.
  total = 0

  for line in s0.splitlines():
    s, right = line.split()
    counts = tuple(map(int, right.split(',')))
    if part2:
      s = '?'.join([s] * 5)
      counts *= 5

    s += '.'
    # Dynamic programming over the string position and the counts position.
    num_matches = np.zeros((len(s) + 1, len(counts) + 1), int)
    num_matches[0, 0] = 1

    for s_index in range(len(s)):
      for counts_index in range(len(counts) + 1):
        if num := num_matches[s_index, counts_index]:
          if s[s_index] != '#':
            num_matches[s_index + 1, counts_index] += num
          if counts_index < len(counts):
            n = counts[counts_index]
            if s[s_index : s_index + n].replace('?', '#') == '#' * n and s[s_index + n] != '#':
              num_matches[s_index + n + 1, counts_index + 1] += num

    total += num_matches[-1, -1]

  return total"
3rYDLWz3,Untitled,35657,C++,Saturday 16th of December 2023 12:47:09 AM CDT,"#include <set>
#include <string>
#include <iostream>
#include <vector>

using namespace std;



// Служащий
class Employer {
public:
    virtual void Print() = 0;

protected:
    string name_;
};

class President : public Employer {
public:
    void Print() {
        cout << ""Я президент "" << endl;
    }
};

class Manager : public Employer {
public:
    void Print() {
        cout << ""Я менеджер"" << endl;
    }
};

class Worker : public Employer {
public:
    void Print() {
        cout << ""Я рабочий"" << endl;
    }
};

int main() {
    setlocale(LC_ALL, ""ru"");

    President pr;
    Manager mn;
    Worker wk;

    vector<Employer*> employers;

    employers.push_back(&pr);
    employers.push_back(&mn);
    employers.push_back(&wk);


    for (auto a : employers) {
        a->Print();
    }

}"
fiU4m7Te,SolarSystem.java,OrangoMango,Java,Saturday 16th of December 2023 12:38:46 AM CDT,"import javafx.application.Application;
import javafx.scene.Scene;
import javafx.stage.Stage;
import javafx.scene.layout.StackPane;
import javafx.scene.canvas.*;
import javafx.scene.paint.Color;
import javafx.animation.*;
import javafx.util.Duration;
import javafx.geometry.Point2D;
import javafx.scene.input.KeyCode;

import java.util.*;

public class SolarSystem extends Application{
	private static final int WIDTH = 1000;
	private static final int HEIGHT = 800;
	private static final double SCALE = 200 / 1.50e11;
	private static final double TIMESTEP = 3600*24; // 1 Day
	private static final double G = 6.6743e-11;

	private static class Planet{
		private double x, y;
		private double xVelocity, yVelocity;
		private double mass, radius;
		private Color color;
		private List<Point2D> orbit = new ArrayList<>();
		private boolean signChanged = false, renderOrbit = true;

		public Planet(Color color, double radius, double mass, double x, double y, double xVelocity, double yVelocity){
			this.color = color;
			this.radius = radius;
			this.mass = mass;
			this.x = x;
			this.y = y;
			this.xVelocity = xVelocity;
			this.yVelocity = yVelocity;
		}

		private Point2D getAttractionForce(Planet planet){
			double distanceX = planet.x-this.x;
			double distanceY = planet.y-this.y;
			double distance = Math.sqrt(Math.pow(distanceX, 2)+Math.pow(distanceY, 2));

			double force = SolarSystem.G*this.mass*planet.mass/Math.pow(distance, 2);
			double angle = Math.atan2(distanceY, distanceX);
			double forceX = force * Math.cos(angle);
			double forceY = force * Math.sin(angle);

			/*
			Distance moon-sun: 1.504E11
			Sun force for moon: 4.313523549126089E20
			Distance moon-earth: 4.0E8
			Earth force for moon: 1.831019119125E20
			*/

			/*if (this == MOON && planet == SUN){
				System.out.println(""Distance moon-sun: ""+distance);
				System.out.println(""Sun force for moon: ""+force);
			} else if (this == MOON && planet == EARTH){
				System.out.println(""Distance moon-earth: ""+distance);
				System.out.println(""Earth force for moon: ""+force);
			}*/

			return new Point2D(forceX, forceY);
		}

		public void updatePosition(List<Planet> planets){
			double totalForceX = 0;
			double totalForceY = 0;

			for (Planet planet : planets){
				if (planet == this) continue;
				Point2D force = getAttractionForce(planet);
				totalForceX += force.getX();
				totalForceY += force.getY();
			}

			double temp = this.xVelocity;
			this.xVelocity += totalForceX/this.mass*TIMESTEP;
			this.yVelocity += totalForceY/this.mass*TIMESTEP;

			if (temp*this.xVelocity < 0){ // The sign changed
				this.signChanged = !this.signChanged;
				if (!this.signChanged){
					this.renderOrbit = false;
				}
			}

			this.x += this.xVelocity*TIMESTEP;
			this.y += this.yVelocity*TIMESTEP;
		}

		public void render(GraphicsContext gc){
			final double x = this.x*SolarSystem.SCALE+WIDTH/2;
			final double y = this.y*SolarSystem.SCALE+HEIGHT/2;

			if (this.renderOrbit){
				this.orbit.add(new Point2D(x, y));
			}

			gc.setFill(this.color);
			final double radius = this.radius; // TODO
			gc.fillOval(x-radius, y-radius, radius*2, radius*2);
		}

		public void renderOrbit(GraphicsContext gc){
			gc.setStroke(Color.WHITE);
			gc.setLineWidth(2);
			for (int i = 0; i < this.orbit.size()-1; i++){
				gc.strokeLine(this.orbit.get(i).getX(), this.orbit.get(i).getY(), this.orbit.get(i+1).getX(), this.orbit.get(i+1).getY());
			}
		}
	}

	private List<Planet> planets = new ArrayList<>();
	private Map<KeyCode, Boolean> keys = new HashMap<>();
	private static int WATCHING_PLANET = 0;

	private static Planet MOON, EARTH, SUN;

	@Override
	public void start(Stage stage){
		Canvas canvas = new Canvas(WIDTH, HEIGHT);
		GraphicsContext gc = canvas.getGraphicsContext2D();
		StackPane pane = new StackPane(canvas);

		canvas.setFocusTraversable(true);
		canvas.setOnKeyPressed(e -> this.keys.put(e.getCode(), true));
		canvas.setOnKeyReleased(e -> this.keys.put(e.getCode(), false));

		reset();

		Timeline loop = new Timeline(new KeyFrame(Duration.millis(1000.0/40), e -> {
			for (Planet planet : planets){
				planet.updatePosition(planets);
			}
			update(gc);
		}));
		loop.setCycleCount(Animation.INDEFINITE);
		loop.play();

		Scene scene = new Scene(pane, WIDTH, HEIGHT);
		stage.setScene(scene);

		stage.setTitle(""Solar system"");
		stage.setResizable(false);
		stage.show();
	}

	private void reset(){
		planets.clear();
		Planet sun = new Planet(Color.YELLOW, 16, 1.989e30, 0, 0, 0, 0);
		Planet earth = new Planet(Color.CYAN, 8, 5.972e24, -1.50e11, 0, 0, 2.97e4); 
		Planet moon = new Planet(Color.GRAY, 4, 7.35e22, -(1.50e11+4e8), 0, 0, 1022);
		Planet mercury = new Planet(Color.ORANGE, 6, 3.30e23, -6.982e10, 0, 0, 4.736e4);
		Planet mars = new Planet(Color.RED, 5, 6.41e23, -2.49e11, 0, 0, 2.407e4);
		Planet venus = new Planet(Color.LIME, 4, 4.86e24, -1.08e11, 0, 0, 3.502e4);
		planets.add(sun);
		planets.add(earth);
		planets.add(moon);
		//planets.add(mercury);
		//planets.add(mars);
		//planets.add(venus);

		MOON = moon;
		EARTH = earth;
		SUN = sun;
	}

	private void update(GraphicsContext gc){
		gc.clearRect(0, 0, WIDTH, HEIGHT);
		gc.setFill(Color.BLACK);
		gc.fillRect(0, 0, WIDTH, HEIGHT);

		if (this.keys.getOrDefault(KeyCode.ESCAPE, false)){
			System.exit(0);
		} else if (this.keys.getOrDefault(KeyCode.R, false)){
			reset();
			this.keys.put(KeyCode.R, false);
		}

		// DEBUG
		if (this.keys.getOrDefault(KeyCode.DIGIT0, false)){
			WATCHING_PLANET = 0;
			this.keys.put(KeyCode.DIGIT0, false);
		} else if (this.keys.getOrDefault(KeyCode.DIGIT1, false)){
			WATCHING_PLANET = 1;
			this.keys.put(KeyCode.DIGIT1, false);
		} else if (this.keys.getOrDefault(KeyCode.DIGIT2, false)){
			WATCHING_PLANET = 2;
			this.keys.put(KeyCode.DIGIT2, false);
		} else if (this.keys.getOrDefault(KeyCode.DIGIT3, false)){
			WATCHING_PLANET = 3;
			this.keys.put(KeyCode.DIGIT3, false);
		} else if (this.keys.getOrDefault(KeyCode.DIGIT4, false)){
			WATCHING_PLANET = 4;
			this.keys.put(KeyCode.DIGIT4, false);
		} else if (this.keys.getOrDefault(KeyCode.DIGIT5, false)){
			WATCHING_PLANET = 5;
			this.keys.put(KeyCode.DIGIT5, false);
		}

		for (Planet planet : planets){
			planet.renderOrbit(gc);
			planet.render(gc);
		}

		gc.setFill(Color.WHITE);
		gc.fillText(String.format(""x: %.3f y: %.3f\nxVel: %.3f\nyVel: %.3f\nTarget: %d"", planets.get(WATCHING_PLANET).x, planets.get(WATCHING_PLANET).y, planets.get(WATCHING_PLANET).xVelocity, planets.get(WATCHING_PLANET).yVelocity, WATCHING_PLANET), 50, 50);
	}

	public static void main(String[] args){
		launch(args);
	}
}"
YahNBB3i,Main,mingming1221,Java,Saturday 16th of December 2023 12:06:35 AM CDT,"

import java.util.Arrays;
import java.util.ArrayList; 
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.io.*;

class SecurityModule {
  private Map<String, String> userAccounts;

    public SecurityModule() {
        userAccounts = new HashMap<>();
    }

    public void createAccount(String username, String password,String name) {
        userAccounts.put(username, password);
        System.out.println(""Account created successfully for user: "" + username);
      try{
        BufferedWriter out = new BufferedWriter(
          new FileWriter(""users.txt"",true));
        out.write(username+"",""+password+"",""+name+""\n"");
        out.close();
      }catch(Exception e){
        System.out.println(""Cannot write to file"");
      }

    }
public boolean valid(String user,String pass){
  try (BufferedReader br = new BufferedReader(new FileReader(""users.txt""))) {
  String line;
  while ((line = br.readLine()) != null) {
  //  System.out.println(line);
    String[] parts = line.split("","");
    if (parts[0].equals(user) && parts[1].equals(pass)) {
        userAccounts.put(""username"", user);
       userAccounts.put(""password"", pass);
       userAccounts.put(""name"", parts[2]);
        return true;
    }
  }
    br.close();
  }catch(Exception e){}
    return false;
}
    public boolean login(String username, String password) {
      /*  if (userAccounts.containsKey(username) && userAccounts.get(username).equals(password)) {
            System.out.println(""Login successful for user: "" + username);
            return true;
        } else {
            System.out.println(""Invalid username or password. Login failed."");
            return false;
        }*/
      if(valid(username,password)){
        System.out.println(""Login successful for user: "" + username);
        return true;
      }else{
         System.out.println(""Invalid username or password. Login failed."");

      }
      return false;
    }

    public void updateAccount(String username, String newPassword,String name) {
      String all = """";
      
          try (BufferedReader br = new BufferedReader(new FileReader(""users.txt""))) {
            String line;
            while ((line = br.readLine()) != null) {
              
            //  System.out.println(line);
              String[] parts = line.split("","");
              if(userAccounts.get(""username"").equals(parts[0])){
                userAccounts.put(""username"", username);
                 userAccounts.put(""password"", newPassword);
                 userAccounts.put(""name"", name);
                all+=username+"",""+newPassword+"",""+name+""\n"";
              }else{
                all+=line+""\n"";
              }
                
            }
            br.close();
            }catch(Exception e){}
          try{
            BufferedWriter out = new BufferedWriter(
              new FileWriter(""users.txt"",false));
            out.write(all);
            out.close();
          }catch(Exception e){
            System.out.println(""Cannot write to file"");
          }

          
            System.out.println(""Account updated successfully for user: "" + username);
       
    }
  public void retriveData(){
    try {
      File myObj = new File(""users.txt"");
      if (myObj.createNewFile()) {
        // parameter to read it
        BufferedWriter out = new BufferedWriter(
            new FileWriter(""users.txt"",true));
        out.write(""admin,admin,admin\n"");
        out.close();
      } else {

        }

    } catch (IOException e) {
      System.out.println(""An error occurred."");
      e.printStackTrace();
    }
    try {
      File myObj = new File(""expense.txt"");
      if (myObj.createNewFile()) {} else {}
    } catch (IOException e1) {
      System.out.println(""An error occurred."");
      e1.printStackTrace();
    }
    try {
      File myObj = new File(""income.txt"");
      if (myObj.createNewFile()) {} else {}
    } catch (IOException e11) {
      System.out.println(""An error occurred."");
      e11.printStackTrace();
    }
    try {
      File myObj = new File(""budget.txt"");
      if (myObj.createNewFile()) {} else {}
    } catch (IOException e1) {
      System.out.println(""An error occurred."");
      e1.printStackTrace();
    }
  }
  public void retrieve(){
    System.out.println(""Name: "" + userAccounts.get(""name""));
    System.out.println(""username: "" + userAccounts.get(""username""));
    System.out.println(""password: "" + userAccounts.get(""password""));
  }
  public String getUsername(){
    return userAccounts.get(""username"");
  }
}

class ExpenseModule {
    private String[] expenseCategories;
    private double[] expenses;

    // Modified constructor to accept initial sizes
    public ExpenseModule(int size) {
        expenseCategories = new String[size];
        expenses = new double[size];
    }
    // Constructor to initialize with predefined values
    public ExpenseModule(String[] initialCategories, double[] initialExpenses) {
        if (initialCategories.length != initialExpenses.length) {
            throw new IllegalArgumentException(""Initial categories and expenses arrays must have the same length."");
        }

        expenseCategories = Arrays.copyOf(initialCategories, initialCategories.length);
        expenses = Arrays.copyOf(initialExpenses, initialExpenses.length);
    }

    public void logExpense(String category, double amount,String user) {
      try{
        BufferedWriter out = new BufferedWriter(
          new FileWriter(""expense.txt"",true));
        out.write(user+"",""+category+"",""+amount+""\n"");
        out.close();
      }catch(Exception e){
        System.out.println(""Cannot write to file"");
      }
       System.out.println(""Expense logged successfully for new category '"" + category + ""'."");
      
    }
public boolean check(String categ){
  try (BufferedReader br = new BufferedReader(new FileReader(""expense.txt""))) {
    String line;
    while ((line = br.readLine()) != null) {

    //  System.out.println(line);
      String[] parts = line.split("","");
      if(categ.equals(parts[1])){
       return true;
      }
    }
    br.close();
    }catch(Exception e){}
  return false;
}

    public void updateExpense(String rep,String category, double newAmount,String user) {
      String all = """";
      try (BufferedReader br = new BufferedReader(new FileReader(""expense.txt""))) {
        String line;
        while ((line = br.readLine()) != null) {

        //  System.out.println(line);
          String[] parts = line.split("","");
          if(rep.equals(parts[1])){
            
            all+=user+"",""+category+"",""+newAmount+""\n"";
          }else{
            all+=line+""\n"";
          }

        }
        br.close();
        }catch(Exception e){}
      try{
        BufferedWriter out = new BufferedWriter(
          new FileWriter(""expense.txt"",false));
        out.write(all);
        out.close();
      }catch(Exception e){
        System.out.println(""Cannot write to file"");
      }

      System.out.println(""Expense updated successfully for category '"" + category + ""'."");
    }

    public void trackExpenses(String user) {
        System.out.println(""Expense Tracking:"");
 try (BufferedReader br = new BufferedReader(new FileReader(""expense.txt""))) {
  String line;
  while ((line = br.readLine()) != null) {
  //  System.out.println(line);
    String[] parts = line.split("","");
    if (parts[0].equals(user)) {
   System.out.println(""Catergory: ""+parts[1] + ""\t""+""Amount: ""+parts[2]);
      
    }
  }
   br.close();
  }catch(Exception e){}
      
    }
}

class IncomeModule {
    private double totalIncome;

    public IncomeModule() {
        totalIncome = 0.0;
    }

   /* public void addIncome(double amount) {
        totalIncome += amount;
        System.out.println(""Income added successfully."");
    }*/

    public void updateIncome(double newAmount,String user) {
        try{
          BufferedWriter out = new BufferedWriter(
            new FileWriter(""income.txt"",true));
          out.write(user+"",""+newAmount+""\n"");
          out.close();
        }catch(Exception e){
          System.out.println(""Cannot write to file"");
        }
        System.out.println(""Income updated successfully."");
    }

    public void trackIncome(String user) {
      double in = 0.0;
      try (BufferedReader br = new BufferedReader(new FileReader(""income.txt""))) {
        String line;
        while ((line = br.readLine()) != null) {
        //  System.out.println(line);
          String[] parts = line.split("","");
          if (parts[0].equals(user)) {
             //System.out.println(""Total Income: P"" + parts[1]);
          in = Double.parseDouble(parts[1]);
          }
        }
        br.close();
        }catch(Exception e){}
        System.out.println(""Total Income: P"" + in);
    }
}

class BudgetPlanModule {
    private String[] budgetCategories;
    private double[] budgetPlans;
    private Map<String, String> budgetDates; // New map to store dates for budget categories

    public BudgetPlanModule(int size) {
        budgetCategories = new String[size];
        budgetPlans = new double[size];
        budgetDates = new HashMap<>();
    }

    public void addBudgetPlan(String category, double amount, String date,String user) {
          try{
            BufferedWriter out = new BufferedWriter(
              new FileWriter(""budget.txt"",true));
            out.write(user+"",""+date+"",""+category+"",""+amount+""\n"");
            out.close();
          }catch(Exception e){
            System.out.println(""Cannot write to file"");
          }
       System.out.println(""Budget plan added successfully for category '"" + category + ""'."");
         /*   System.out.println(""Budget plan added successfully for category '"" + category + ""'."");
        } else {
            System.out.println(""Category already exists. Budget plan add failed."");
        }*/
    }

    public void updateBudgetPlan(String rep,String category, double newAmount, String newDate,String user) {
      String all = """";
      try (BufferedReader br = new BufferedReader(new FileReader(""budget.txt""))) {
        String line;
        while ((line = br.readLine()) != null) {

        //  System.out.println(line);
          String[] parts = line.split("","");
          if(rep.equals(parts[2])){

            all+=user+"",""+newDate+"",""+category+"",""+newAmount+""\n"";
          }else{
            all+=line+""\n"";
          }

        }
        br.close();
        }catch(Exception e){}
      try{
        BufferedWriter out = new BufferedWriter(
          new FileWriter(""budget.txt"",false));
        out.write(all);
        out.close();
      }catch(Exception e){
        System.out.println(""Cannot write to file"");
      }

             System.out.println(""Budget plan updated successfully for category '"" + category + ""'."");
          
        
    }
  public boolean check(String categ){
    try (BufferedReader br = new BufferedReader(new FileReader(""budget.txt""))) {
      String line;
      while ((line = br.readLine()) != null) {

      //  System.out.println(line);
        String[] parts = line.split("","");
        if(categ.equals(parts[2])){
         return true;
        }
      }
      br.close();
      }catch(Exception e){}
    return false;
  }
    public void showBudgetPlans(String user) {
        System.out.println(""Budget Plans:"");
      try (BufferedReader br = new BufferedReader(new FileReader(""budget.txt""))) {
        String line;
        while ((line = br.readLine()) != null) {
        //  System.out.println(line);
          String[] parts = line.split("","");
          if (parts[0].equals(user)) {
         System.out.println(""Date: ""+parts[1] + ""\t""+""Category: ""+parts[2]+""\tBudget: ""+parts[3] );

          }
        }
        }catch(Exception e){}
    }
}

class UserInfoModule {
    private ExpenseModule expenseModule;
    private IncomeModule incomeModule;
    private BudgetPlanModule budgetPlanModule;

    public UserInfoModule(ExpenseModule expenseModule, IncomeModule incomeModule, BudgetPlanModule budgetPlanModule) {
        this.expenseModule = expenseModule;
        this.incomeModule = incomeModule;
        this.budgetPlanModule = budgetPlanModule;
    }

    /*public void showUserInformation() {
        System.out.println(""===== User Information ====="");
        System.out.println(""Expenses:"");
        expenseModule.trackExpenses();
        System.out.println(""\nIncomes:"");
        incomeModule.trackIncome();
        System.out.println(""\nBudget Plans:"");
        budgetPlanModule.showBudgetPlans();
        System.out.println(""==========================="");
    }*/
}

public class Main

{
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        SecurityModule securityModule = new SecurityModule();
        ExpenseModule expenseModule = new ExpenseModule(3);
        IncomeModule incomeModule = new IncomeModule();
        BudgetPlanModule budgetPlanModule = new BudgetPlanModule(2);
        UserInfoModule userInfoModule = new UserInfoModule(expenseModule, incomeModule, budgetPlanModule);
        securityModule.retriveData();
        boolean exit = false;
       System.out.println(""===== Budget Plan Module ====="");
        while(true){
          
          System.out.println(""1. Login "");
          System.out.println(""2. Create Account"");
          System.out.print(""Choose: "");
          String s = scanner.nextLine();
          if(s.equals(""1"")){
            System.out.print(""Enter username: "");
            String loginUsername = scanner.nextLine();
            System.out.print(""Enter password: "");
            String loginPassword = scanner.nextLine();
            if(securityModule.login(loginUsername, loginPassword)){
              break;
            }
          }else if(s.equals(""2"")){
            System.out.print(""Enter name: "");
            String name = scanner.nextLine();
                System.out.print(""Enter username: "");
                String username = scanner.nextLine();
                System.out.print(""Enter password: "");
                String password = scanner.nextLine();
                securityModule.createAccount(username, password, name);

          }else{
            System.out.println(""Invalid input"");
          }

        }
        while (!exit) {
            System.out.println(""===== Budget Management System ====="");
            System.out.println(""1. Account Management"");
            System.out.println(""2. Expense Module"");
            System.out.println(""3. Income Module"");
            System.out.println(""4. Budget Plan Module"");
            System.out.println(""5. View all information"");
          
           // System.out.println(""5. User Information"");
            System.out.println(""0. Exit"");
            System.out.print(""Enter your choice: "");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                    handleSecurityModule(securityModule, scanner);
                    break;
                case 2:
                    handleExpenseModule(expenseModule, scanner,securityModule.getUsername());
                    break;
                case 3:
                    handleIncomeModule(incomeModule, scanner,securityModule.getUsername());
                    break;
                case 4:
                    handleBudgetPlanModule(budgetPlanModule, scanner,securityModule.getUsername());

                    break;
              case 5:
                System.out.println(""===== User Information ====="");
                //System.out.println(""Expenses:"");
                System.out.println(""Information:"");
                securityModule.retrieve();expenseModule.trackExpenses(securityModule.getUsername());
                System.out.println(""\nIncomes:"");
                incomeModule.trackIncome(securityModule.getUsername());
               // System.out.println(""\nBudget Plans:"");
                budgetPlanModule.showBudgetPlans(securityModule.getUsername());
                System.out.println(""==========================="");
                    break;
                    
                case 0:
                    exit = true;
                    System.out.println(""Exiting the Budget Management System. Goodbye!"");
                    break;
                default:
                    System.out.println(""Invalid choice. Please try again."");
            }
        }

        scanner.close();
    }


    private static void handleSecurityModule(SecurityModule securityModule, Scanner scanner) {
        boolean backToMenu = false;

        while (!backToMenu) {
            System.out.println(""===== Security Module ====="");

           // System.out.println(""2. Login"");
            System.out.println(""1. Update User information"");
           System.out.println(""2. View User information"");
            System.out.println(""0. Back to Main Menu"");
            System.out.print(""Enter your choice: "");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
               
                case 1:
                System.out.print(""Enter new name: "");
                String name = scanner.nextLine();
                    System.out.print(""Enter new username: "");
                    String updateUsername = scanner.nextLine();
                    System.out.print(""Enter new password: "");
                    String newPassword = scanner.nextLine();
                    securityModule.updateAccount(updateUsername, newPassword,name);
                    break;
              case 2:
                System.out.println(""Information:"");
                securityModule.retrieve();


                case 0:
                    System.out.println(""Returning to Main Menu..."");
                    backToMenu = true;
                    break;
                default:
                    System.out.println(""Invalid choice. Please try again."");
            }
        }
    }

    private static void handleExpenseModule(ExpenseModule expenseModule, Scanner scanner,String user) {
        boolean backToMenu = false;

        while (!backToMenu) {
            System.out.println(""===== Expense Module ====="");
            System.out.println(""1. Log Expense"");
            System.out.println(""2. Update Expense"");
            System.out.println(""3. Track Expenses"");
            System.out.println(""0. Back to Main Menu"");
            System.out.print(""Enter your choice: "");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                  
                
                    System.out.print(""Enter expense category: "");
                    String category = scanner.nextLine();
                    System.out.print(""Enter expense amount: "");
                    double amount = scanner.nextDouble();
                    expenseModule.logExpense(category, amount,user);
                   
                    break;
                case 2:
                  System.out.print(""Enter category you want to update: "");
                  String categ = scanner.nextLine();
                       if(expenseModule.check(categ)){
                    System.out.print(""Enter expense category to update: "");
                    String updateCategory = scanner.nextLine();
                    System.out.print(""Enter new expense amount: "");
                    double newAmount = scanner.nextDouble();
                    expenseModule.updateExpense(categ,updateCategory, newAmount,user);
                         }else{
                            System.out.println(""Category isn't exist"");
                          }
                    break;
                case 3:
                    expenseModule.trackExpenses(user);
                    break;
                case 0:
                    System.out.println(""Returning to Main Menu..."");
                    backToMenu = true;
                    break;
                default:
                    System.out.println(""Invalid choice. Please try again."");
            }
        }
    }

    private static void handleIncomeModule(IncomeModule incomeModule, Scanner scanner,String user) {
        boolean backToMenu = false;

        while (!backToMenu) {
            System.out.println(""===== Income Module ====="");
          //  System.out.println(""1. Add Income"");
            System.out.println(""1. Update Income"");
            System.out.println(""2. Track Income"");
            System.out.println(""0. Back to Main Menu"");
            System.out.print(""Enter your choice: "");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
               /* case 1:
                    System.out.print(""Enter income amount: "");
                    double incomeAmount = scanner.nextDouble();
                    incomeModule.addIncome(incomeAmount);
                    break;*/
                case 1:
                    System.out.print(""Enter new total income amount: "");
                    double newIncomeAmount = scanner.nextDouble();
                    incomeModule.updateIncome(newIncomeAmount,user);
                    break;
                case 2:
                    incomeModule.trackIncome(user);
                    break;
                case 0:
                    System.out.println(""Returning to Main Menu..."");
                    backToMenu = true;
                    break;
                default:
                    System.out.println(""Invalid choice. Please try again."");
            }
        }
    }

    private static void handleBudgetPlanModule(BudgetPlanModule budgetPlanModule, Scanner scanner,String user) {
        boolean backToMenu = false;

        while (!backToMenu) {
            System.out.println(""===== Budget Plan Module ====="");
            System.out.println(""1. Add Budget Plan"");
            System.out.println(""2. Update Budget Plan"");
           System.out.println(""3. View Budget Plan"");
            System.out.println(""0. Back to Main Menu"");
            System.out.print(""Enter your choice: "");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                System.out.print(""Enter Date: "");
                 String date1 = scanner.nextLine();
                    System.out.print(""Enter budget category: "");
                    String budgetCategory = scanner.nextLine();
                    System.out.print(""Enter budget amount: "");
                    double budgetAmount = scanner.nextDouble();
                    budgetPlanModule.addBudgetPlan(budgetCategory, budgetAmount,date1,user);
                    break;
                case 2:
                System.out.print(""Enter category you want to update: "");
                String categ = scanner.nextLine();
                     if(budgetPlanModule.check(categ)){
                 System.out.print(""Enter Date: "");
                 String date = scanner.nextLine();
                    System.out.print(""Enter budget category to update: "");
                    String updateCategory = scanner.nextLine();
                    System.out.print(""Enter new budget amount: "");
                    double newBudgetAmount = scanner.nextDouble();
                    budgetPlanModule.updateBudgetPlan(categ,updateCategory, newBudgetAmount,date,user);
                       }else{
                         System.out.println(""Category isn't exist"");
                     }
                    break;
              case 3:
                budgetPlanModule.showBudgetPlans(user);
                case 0:
                    System.out.println(""Returning to Main Menu..."");
                    backToMenu = true;
                    break;
                default:
                    System.out.println(""Invalid choice. Please try again."");
            }
        }
    }
}"
dnQsubgV,absolute blonde font,elroseria,CSS,Friday 15th of December 2023 11:59:38 PM CDT,"<style>
 
@font-face {
font-family: absolute;
src: url(https://dl.dropbox.com/scl/fi/rasoiq5gnc345ecm1cw27/Absolute-Blonde.ttf?rlkey=0cv2m3nhzie7x7324ph9azqfj&dl=0);
}
 
div {
font-family: absolute;
}
 
</style>
 
<div> absolute blonde </div>"
gNYMhvTb,Lab_C_psevdoSQL,VladimirKostovsky,C,Friday 15th of December 2023 11:59:15 PM CDT,"// Определение макроса для отключения предупреждений о безопасности для функций, таких как scanf и fopen
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <locale.h>

// Максимальное количество записей в базе данных
#define MAX_RECORDS 300

// Структура для представления записи в базе данных
struct Record {
    char surname[50];
    int yearOfBirth;
    double salary;
};

// Функция для добавления записи в базу данных
void addRecord(struct Record database[], int* numRecords) {
    if (*numRecords < MAX_RECORDS) {
        printf(""Введите данные для записи:\n"");
        printf(""Фамилия: "");
        scanf(""%s"", database[*numRecords].surname);
        printf(""Год рождения: "");
        scanf(""%d"", &database[*numRecords].yearOfBirth);
        printf(""Зарплата: "");
        scanf(""%lf"", &database[*numRecords].salary);
        (*numRecords)++;
        printf(""Запись успешно добавлена.\n"");
    }
    else {
        printf(""Достигнуто максимальное количество записей.\n"");
    }
}

// Функция для просмотра конкретной записи в базе данных
void viewRecord(struct Record database[], int numRecords, int recordNumber) {
    if (recordNumber >= 1 && recordNumber <= numRecords) {
        printf(""Данные для записи %d:\n"", recordNumber);
        printf(""Фамилия: %s\n"", database[recordNumber - 1].surname);
        printf(""Год рождения: %d\n"", database[recordNumber - 1].yearOfBirth);
        printf(""Зарплата: %.2lf\n"", database[recordNumber - 1].salary);
    }
    else {
        printf(""Неверный номер записи.\n"");
    }
}

// Функция для сортировки записей в базе данных по фамилии в порядке возрастания
void sortRecords(struct Record database[], int numRecords) {
    for (int i = 0; i < numRecords - 1; i++) {
        for (int j = 0; j < numRecords - i - 1; j++) {
            if (database[j].yearOfBirth > database[j + 1].yearOfBirth) {
                // Обмен записями, если они находятся в неправильном порядке
                struct Record temp = database[j];
                database[j] = database[j + 1];
                database[j + 1] = temp;
            }
        }
    }
}

// Функция для вывода всех записей в базе данных
void printAllRecords(struct Record database[], int numRecords) {
    printf(""Все записи:\n"");
    for (int i = 0; i < numRecords; i++) {
        printf(""%d. %s, %d, %.2lf\n"", i + 1, database[i].surname, database[i].yearOfBirth, database[i].salary);
    }
}

// Функция для сохранения всех записей в файл
void saveToFile(struct Record database[], int numRecords, const char* filename) {
    FILE* file = fopen(filename, ""w"");
    if (file != NULL) {
        for (int i = 0; i < numRecords; i++) {
            fprintf(file, ""%s %d %.2lf\n"", database[i].surname, database[i].yearOfBirth, database[i].salary);
        }
        fclose(file);
    }
    else {
        printf(""Ошибка открытия файла для записи.\n"");
    }
}

// Функция для чтения записей из файла
void readFromFile(struct Record database[], int* numRecords, const char* filename) {
    FILE* file = fopen(filename, ""r"");
    if (file != NULL) {
        while (fscanf(file, ""%s %d %lf"", database[*numRecords].surname, &database[*numRecords].yearOfBirth, &database[*numRecords].salary) == 3) {
            (*numRecords)++;
            if (*numRecords >= MAX_RECORDS) {
                break;
            }
        }
        fclose(file);
    }
    else {
        printf(""Ошибка открытия файла для чтения.\n"");
    }
}


int main() {
    setlocale(LC_ALL, ""Russian"");
    // Инициализация массива записей базы данных и переменных
    struct Record database[MAX_RECORDS];
    int numRecords = 0;
    int choice;

    // Главный цикл программы
    do {
        // Вывод меню на экран
        printf(""\nМеню:\n"");
        printf(""1. Добавить запись\n"");
        printf(""2. Просмотр записи\n"");
        printf(""3. Сортировка записей\n"");
        printf(""4. Просмотр всех записей\n"");
        printf(""5. Сохранить записи в файл\n"");
        printf(""6. Загрузить записи из файла\n"");
        printf(""7. Выход\n"");

        // Ввод выбора пользователя
        printf(""Введите ваш выбор: "");
        scanf(""%d"", &choice);

        // Обработка выбора пользователя
        switch (choice) {
        case 1:
            addRecord(database, &numRecords);
            break;
        case 2:
            if (numRecords > 0) {
                int recordNumber;
                printf(""Введите номер записи: "");
                scanf(""%d"", &recordNumber);
                viewRecord(database, numRecords, recordNumber);
            }
            else {
                printf(""Нет доступных записей.\n"");
            }
            break;
        case 3:
            if (numRecords > 0) {
                sortRecords(database, numRecords);
                printf(""Записи успешно отсортированы.\n"");
            }
            else {
                printf(""Нет доступных записей.\n"");
            }
            break;
        case 4:
            if (numRecords > 0) {
                printAllRecords(database, numRecords);
            }
            else {
                printf(""Нет доступных записей.\n"");
            }
            break;
        case 5:
            if (numRecords > 0) {
                char filename[50];
                printf(""Введите имя файла для сохранения: "");
                scanf(""%s"", filename);
                saveToFile(database, numRecords, filename);
                printf(""Записи успешно сохранены в файл.\n"");
            }
            else {
                printf(""Нет доступных записей.\n"");
            }
            break;
        case 6:
        {
            char filename[50];
            printf(""Введите имя файла для чтения: "");
            scanf(""%s"", filename);
            readFromFile(database, &numRecords, filename);
            printf(""Записи успешно загружены из файла.\n"");
        }
        break;
        case 7:
            printf(""Выход из программы.\n"");
            break;
        default:
            printf(""Неверный выбор. Пожалуйста, введите правильный вариант.\n"");
        }
    } while (choice != 7);

    return 0;
}

"
Zzhyfzy0,Advent of code 2023 day 16,hhoppe,Python,Friday 15th of December 2023 11:58:27 PM CDT,"@numba.njit  # Optional speedup.
def day16_num_visited(grid, start):  # start == (y, x, dir); dir 0,1,2,3 == S,E,N,W.
  visited = np.full((*grid.shape, 4), False)
  stack = [start]
  while stack:
    y, x, dir = stack.pop()
    while 0 <= y < grid.shape[0] and 0 <= x < grid.shape[1] and not visited[y, x, dir]:
      visited[y, x, dir] = True
      match grid[y, x]:
        case '\\':
          dir = (1, 0, 3, 2)[dir]
        case '/':
          dir = 3 - dir
        case '-':
          if dir in (0, 2):
            dir = 1
            stack.append((y, x, 3))
        case '|':
          if dir in (1, 3):
            dir = 0
            stack.append((y, x, 2))
      y, x = y + (1, 0, -1, 0)[dir], x + (0, 1, 0, -1)[dir]

  return (visited.sum(2) > 0).sum()  # visited.any(2).sum() if not numba.


def day16(s, *, part2=False):
  grid = np.array([list(line) for line in s.splitlines()])

  if not part2:
    return day16_num_visited(grid, (0, 0, 1))

  starts = (
      [(0, x, 0) for x in range(grid.shape[1])]
      + [(grid.shape[0] - 1, x, 2) for x in range(grid.shape[1])]
      + [(y, 0, 1) for y in range(grid.shape[0])]
      + [(y, grid.shape[1] - 1, 3) for y in range(grid.shape[0])]
  )
  return max(day16_num_visited(grid, start) for start in starts)"
YAVFJnvV,Advent of code 2023 day 15,hhoppe,Python,Friday 15th of December 2023 11:56:47 PM CDT,"def day15(s, *, part2=False):
  s = s.strip()

  def my_hash(s2):
    # return 0 if not s2 else ((my_hash(s2[:-1]) + ord(s2[-1])) * 17) % 256
    h = 0
    for ch in s2:
      h = ((h + ord(ch)) * 17) % 256
    return h
    
  if not part2:
    return sum(my_hash(instruction) for instruction in s.split(','))

  boxes = [[] for _ in range(256)]
  for instruction in s.split(','):
    label, op, focal = hh.re_groups(r'^(.+)([-=])(.*)$', instruction)
    box_index = my_hash(label)
    if op == '-':
      boxes[box_index] = [(l, f) for l, f in boxes[box_index] if l != label]
    else:
      indices = [i for i, (l, f) in enumerate(boxes[box_index]) if l == label]
      if indices:
        boxes[box_index][indices[0]] = label, focal
      else:
        boxes[box_index].append((label, focal))

  return sum((b + 1) * (i + 1) * int(f) for b in range(256) for i, (l, f) in enumerate(boxes[b]))"
2cQ2XgnX,player speed changer C#,404Coder,C#,Friday 15th of December 2023 11:36:58 PM CDT,"using UnityEngine.AI;
using Unity.Generic;
using Player.movement;

public void Player.movement : MonoBehaviour {

    this Player.Movement == !this && Speed<Debug>; 0f;
    Player & Speed * Transform.Transform && Speed;
    Speed +== 5 & Player.movement; 
        if debug == true;
        debug.Speed.Movement & Player.movement;
    
    private changed()
        changed = Speed.movement;
    Speed.movement +== 7*   //changed speed form 5 to 7 dont change otherwise is to fast\\
        {      
        
        }
    
       {
    
    }
}"
zZiWgAn0,home,timred22,Dart,Friday 15th of December 2023 11:33:24 PM CDT,"import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:lottie/lottie.dart';
import '/bmi/bmi.dart';
import '/bmr/bmr.dart';
import '/makanan/FoodList.dart';
import '/minuman/MinumanList.dart';

class Home extends StatefulWidget {
  @override
  _HomeState createState() => _HomeState();
}

class _HomeState extends State<Home> {
  DateTime? tombolBack;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      resizeToAvoidBottomInset:
          false, //supaya Scaffold tdk mengubah ukuran dirinya pas ada keyboard

      // Kodingan untuk Tekan Back 2x Keluar Aplikasi
      // ignore: deprecated_member_use
      body: WillPopScope(
        onWillPop: () async {
          // Jika tombol back ditekan sekali
          if (tombolBack == null ||
              DateTime.now().difference(tombolBack!) > Duration(seconds: 2)) {
            tombolBack = DateTime.now();
            ScaffoldMessenger.of(context).showSnackBar(
              SnackBar(
                content: Center(
                  child: Text('Tekan sekali lagi untuk keluar'),
                ),
              ),
            );
            return false;
          }
          // Jika tombol back ditekan dua kali
          SystemNavigator.pop();
          return true;
        },
        // Kodingan untuk Background yg biru + Images Lottie
        child: Container(
          child: Column(
            children: [
              Container(
                width: double.infinity,
                height: 270,
                color: Color.fromRGBO(0, 58, 206, 1),
                child: Center(
                  child: Lottie.asset(
                    'assets/home.json',
                    width: 500,
                    height: 300,
                  ),
                ),
              ),
              SizedBox(height: 20),

              // Kodingan untuk 4 Menu Pilihan
              Container(
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    // Column di kiri
                    Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      // crossAxisAlignment: CrossAxisAlignment.center,
                      children: [
                        GestureDetector(
                          onTap: () {
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => FoodList(),
                              ),
                            );
                          },
                          child: _Menu(
                            'assets/food.png',
                            'MAKANAN KALORI',
                          ),
                        ),
                        // SizedBox(height: 16),
                        GestureDetector(
                          onTap: () {
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => Bmr(),
                              ),
                            );
                          },
                          child: _Menu(
                            'assets/kalori.png',
                            'CALC KALORI',
                          ),
                        ),
                      ],
                    ),
                    // Spacer(),
                    // Column di kanan
                    Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        GestureDetector(
                          onTap: () {
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => DrinkList(),
                              ),
                            );
                          },
                          child: _Menu(
                            'assets/minuman.png',
                            'MINUMAN KALORI',
                          ),
                        ),
                        // SizedBox(height: 16),
                        GestureDetector(
                          onTap: () {
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => Bmi(),
                              ),
                            );
                          },
                          child: _Menu(
                            'assets/bmi.png',
                            'BMI KALKULATOR',
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
              // SizedBox(height: 35),
            ],
          ),
        ),
      ),
    );
  }

  Widget _Menu(String imagePath, String title) {
    return Card(
      margin: EdgeInsets.symmetric(horizontal: 10, vertical: 10),
      elevation: 5,
      child: Padding(
        padding: EdgeInsets.all(10.0),
        child: Container(
          width: 135,
          height: 135,
          child: Column(
            children: [
              Expanded(
                child: ClipRRect(
                  borderRadius: BorderRadius.circular(8),
                  child: Image.asset(
                    imagePath,
                    fit: BoxFit.fill,
                  ),
                ),
              ),
              SizedBox(height: 8),
              Text(
                title,
                style: GoogleFonts.quicksand(
                  fontSize: 15,
                  fontWeight: FontWeight.bold,
                  color: Colors.black87,
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
"
xLqcXvMz,Untitled,Glenpl,C++,Friday 15th of December 2023 11:18:18 PM CDT,"automatic underground pipe connector
bottleneck lite
clock 
even distribution
factory search ---- co to?
far reach.  ----- co to?
free robodocking --- co to?
helmod
infiniteinventory
informatron ---- co to?
milestones
miniloader ---- czy to jest ok dodatek, przydatny? powinienem go mieć?
nullius
ore eraser --- co to?

robot replacer -- co to, po co?
safe waterfill
squeak through


train supply manager??? co to jest???? czy nie lepiej LTN/CYBER
vehiclesnap -- co to?
what is it really used for? -- co to?
"
qTRviKTk,snowybot,coinwalk,JavaScript,Friday 15th of December 2023 11:09:08 PM CDT,"var kozster = parseFloat(document.getElementById('pct_balance').value);
var beast = Number((0.00001*1).toFixed(8));
var burgzie = kozster;
var frogg = beast;
var taget = (kozster*2);
var tens = (beast*10);
var sevens = (beast*6.9);
var eights = (beast*7.9);
var james = ((Math.floor(kozster/tens))*tens);
var fran = ((Math.floor(kozster/tens))*tens);
var alan = ((Math.floor(kozster/tens))*tens);
var toot = frogg;
var uprd =  6.9;
var dnwrd = 2.9;
var fart = 1;

function get(){
burgzie = document.getElementById('pct_balance').value;
var good = ((burgzie-kozster).toFixed(8));
if (burgzie>=(james+(frogg*uprd))){
    frogg = frogg*2;
    uprd =  2.9;
    dnwrd = 2.9;
    james = parseFloat(burgzie);
}
if (burgzie<=(james-(frogg*dnwrd))){
    frogg = frogg*2;
    fart = 0;
    uprd =  2.9;
    dnwrd = 2.9;
    james = parseFloat(burgzie);
}
if ((burgzie>=(fran+(tens*fart)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 1;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    fran = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie>=(alan+(tens*4)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie<=(alan-(tens*4)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 0;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if (burgzie>=taget){
    console.log(""winner winner chicken dinner"");
    return;
}
toot = ((frogg*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(toot);
$('#a_lo').click();
console.clear();
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 100);
}
get();"
Db7tdRn8,snowybot,coinwalk,JavaScript,Friday 15th of December 2023 10:47:12 PM CDT,"var kozster = parseFloat(document.getElementById('pct_balance').value);
var beast = Number((0.00001*1).toFixed(8));
var burgzie = kozster;
var frogg = beast;
var taget = (kozster*2);
var tens = (beast*10);
var sevens = (beast*6.9);
var eights = (beast*7.9);
var james = ((Math.floor(kozster/tens))*tens);
var fran = ((Math.floor(kozster/tens))*tens);
var alan = ((Math.floor(kozster/tens))*tens);
var toot = frogg;
var uprd =  6.9;
var dnwrd = 2.9;
var fart = 1;

function get(){
burgzie = document.getElementById('pct_balance').value;
var good = ((burgzie-kozster).toFixed(8));
if (burgzie>=(james+(frogg*uprd))){
    frogg = frogg*2;
    uprd =  2.9;
    dnwrd = 2.9;
    james = parseFloat(burgzie);
}
if (burgzie<=(james-(frogg*dnwrd))){
    frogg = frogg*2;
    fart = 0;
    uprd =  2.9;
    dnwrd = 2.9;
    james = parseFloat(burgzie);
}
if ((burgzie>=(fran+(tens*fart)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 1;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    fran = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie>=(alan+(tens*4)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie<=(fran-(tens*4)))&&(burgzie>((Math.floor(kozster/tens))*tens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 0;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie<=(fran-(tens*4)))&&(burgzie<((Math.floor(kozster/tens))*tens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    frogg = beast;
    fart = 0;
    uprd =  6.9;
    dnwrd = 2.9;
    james = ((Math.floor(burgzie/tens))*tens);
    fran = ((Math.floor(kozster/tens))*tens);
    alan = ((Math.floor(burgzie/tens))*tens);
}
if (burgzie>=taget){
    console.log(""winner winner chicken dinner"");
    return;
}
toot = ((frogg*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(toot);
$('#a_lo').click();
console.clear();
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 100);
}
get();"
