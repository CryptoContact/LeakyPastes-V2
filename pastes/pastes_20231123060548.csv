id,title,username,language,date,content
Pv47W07w,abc,test1337abc,C,Wednesday 22nd of November 2023 10:46:27 PM CDT,[clickme](google.com)
YnujBQmz,Part Serialization Util,Aegians,Lua,Wednesday 22nd of November 2023 10:31:19 PM CDT,"--!native
--!strict

local PartInfo = {}

--//

local HttpService = game:GetService(""HttpService"")
local Players = game:GetService(""Players"")

local Types = require(script.Parent.Types)

local PartIdRegistry: {[BasePart]: string} = {}
local PartInfoRegistry: {[BasePart]: Types.PartInformation} = {}
local MoverAnchoredParts: Types.PartMap = {}

local function round(num: number, numDecimalPlaces: number)
	local mult = 10^(numDecimalPlaces or 0)
	return math.floor(num * mult + 0.5) / mult
end

local function RGBToNum(color: Color3):  number
	return math.floor(color.R*255)*256^2+math.floor(color.G*255)*256+math.floor(color.B*255)
end

local function VectorTable(Vector: Vector3): Types.VectorTable
	return {round(Vector.X, 2), round(Vector.Y, 2), round(Vector.Z, 2)}
end

local function GetTransparency(Part: BasePart): number
	if Part.Material == Enum.Material.Glass or Part.Material == Enum.Material.ForceField then
		return 0.5
	end

	return Part.Transparency
end

local function GetShape(Part: Types.RealCapturePart): string
	local PossibleCharacter: Humanoid?
	
	if Part.Parent then
		PossibleCharacter = Part.Parent:FindFirstChildOfClass(""Humanoid"")
	end

	if PossibleCharacter then
		return Part.Name:gsub(""%s+"", """")
	end
	
	if Part:IsA(""WedgePart"") then
		return ""Wedge""
	elseif Part:IsA(""CornerWedgePart"") then
		return ""CornerWedge""
	end

	return Part.Shape.Name
end

local function GetSpecialTags(Part: BasePart): Types.PartTags
	local Tags = {}
	local PossiblePlayer = Players:GetPlayerFromCharacter(Part.Parent)
	local PossibleHumanoid = nil --Part.Parent:FindFirstChildOfClass(""Humanoid"")

	if PossiblePlayer then
		Tags.Player = PossiblePlayer.Name
		Tags.PlayerPart = Part.Name:gsub(""%s+"", """")
	end

	if PossibleHumanoid and Part.Name == ""Head"" then
		Tags.Health = PossibleHumanoid.Health
		Tags.MaxHealth = PossibleHumanoid.MaxHealth
	end

	if Part:IsA(""MeshPart"") then
		Tags.MeshId = Part.MeshId
		Tags.TextureId = Part.TextureID
	end

	return Tags
end

local function FakePartInformation(Part: Types.FakePart): Types.PartInformation
	local ZRot, XRot, YRot = Part.CFrame:ToOrientation()
	return {
		Position = VectorTable(Part.CFrame.Position),
		Rotation = {round(ZRot, 2), round(XRot, 2), round(YRot, 2)},
		Transparency = Part.Transparency,
		Size = VectorTable(Part.Size),
		Color = RGBToNum(Part.Color),
		Shape = Part.Shape or ""Block"",
		Id = HttpService:GenerateGUID(false),
	}
end

local function PartInformation(Part: Types.RealCapturePart): Types.PartInformation
	if not PartIdRegistry[Part] then
		PartIdRegistry[Part] = HttpService:GenerateGUID(false) --tostring(IdCount)
	end
	
	local ZRot, XRot, YRot = Part.CFrame:ToOrientation()
	return {
		Position = VectorTable(Part.CFrame.Position),
		Rotation = {round(ZRot, 2), round(XRot, 2), round(YRot, 2)},
		Transparency = GetTransparency(Part),
		Size = VectorTable(Part.Size),
		Color = RGBToNum(Part.Color),
		Shape = GetShape(Part),
		Tags = GetSpecialTags(Part),
		Id = PartIdRegistry[Part],
	}
end

local function IsPartTracked(Part: Types.RealCapturePart): boolean
	return (not not MoverAnchoredParts[Part]) or not Part.Anchored
end

local function IsValidInstance(Part: Types.RealCapturePart): boolean
	return Part:IsA(""BasePart"") and not (Part:IsA(""Terrain"") or Part.Transparency == 1)
end

local function GetPartInformation(Part: Types.CapturePart): Types.PartInformation
	if typeof(Part) == ""table"" then -- Fake part through a table so we don't cache
		return FakePartInformation(Part)
	end

	if not IsPartTracked(Part) then
		if not PartInfoRegistry[Part] then
			PartInfoRegistry[Part] = PartInformation(Part)
		end

		return PartInfoRegistry[Part]
	end

	return PartInformation(Part)
end

local function GetParts(Static: boolean): Types.PartList
	local RenderedParts: Types.PartList = {}
	for _, Part in workspace:GetDescendants() do
		if not IsValidInstance(Part) or (Static == IsPartTracked(Part)) then
			continue
		end
		
		--if Static and MoverAnchoredParts[Part] then
		--	continue
		--end

		table.insert(RenderedParts, Part)
	end

	if not Static then
		for Part, Id in MoverAnchoredParts do
			table.insert(RenderedParts, Part)
		end
	end

	return RenderedParts
end

local function Track(Instances: Types.array<Types.RealCapturePart>)
	for _, InstanceGroup in Instances do
		
		if IsValidInstance(InstanceGroup) then
			PartInfoRegistry[InstanceGroup] = nil
			MoverAnchoredParts[InstanceGroup] = true
		end
		
		for _, TrackedPart in InstanceGroup:GetDescendants() :: Types.array<Types.RealCapturePart> do
			if not IsValidInstance(TrackedPart) then
				continue
			end

			PartInfoRegistry[TrackedPart] = nil
			MoverAnchoredParts[TrackedPart] = true
		end
	end
end

workspace.DescendantRemoving:Connect(function(descendant: Types.RealCapturePart)
	PartIdRegistry[descendant] = nil
	PartInfoRegistry[descendant] = nil
	MoverAnchoredParts[descendant] = nil
end)

-- // Exports
return {
	GetParts = GetParts,
	GetPartInformation = GetPartInformation,
	Track = Track,
}"
rjSeWGpF,lab1123,excellent940707,Python,Wednesday 22nd of November 2023 09:51:32 PM CDT,"def get_order():
    cakes = int(input(""Enter number of cakes: ""))
    bread = int(input(""Enter number of bread: ""))
    cookies = int(input(""Enter number of cookies: ""))
    lt = [cakes, bread, cookies]
    return lt

def add_item(lt, idx, num):
    item=""""
    if idx==0:
        item=""cakes""
    elif idx==1:
        item=""bread""
    elif idx==2:
        item=""cookies""
    else:
        item=""new_item""
    print(f""Attempting to add {num} more to {item}..."")
    
    if lt[idx]+num>10:
        print(""Order is full. Cannot add more items."")
    else:
        lt[idx]+=num
    
def update_quantity(lt, idx, num):
    print(f'Current order: {lt}')
    item=""""
    if idx==0:
        item=""cakes""
    elif idx==1:
        item=""bread""
    elif idx==2:
        item=""cookies""
    else:
        item=""new_item""
    print(f""Updating quantity of {item} to {num}..."")
    lt[idx] = num
    print(f'Upated order: {lt}')
    
def find_largest_quantity(lt):
    print(f'Current order: {lt}')
    return max(lt)

def extend_order(lt, new_lt):
    print(f'Current order: {lt}')
    print(f""Adding {new_lt} to the order..."")
    return lt+new_lt

order = get_order()
print(f'Current order: {order}')
add_item(order, 1, 4)  # Adding 4 more to bread (index 1)
print(f'Updated order: {order}')
add_item(order, 1, 4)  # Trying to add more, exceeding the limit
update_quantity(order, 1, 5)
print(f'Item with largest quantity: {find_largest_quantity(order)}')
new_items = [6, 7]
extended_order = extend_order(order, new_items)
print(f'Extended order: {extended_order}')"
A7xdQJuh,depack table,glokyfull,Motorola 68000 HiSoft Dev,Wednesday 22nd of November 2023 08:27:38 PM CDT,"
; depack periodictable
; a0 = packed data
; a1 = unpacked data
depackperiod
	lea extnibble,a2

	move.w (a0)+,d0		; nombre d'element de la table finale
	move.w (a0)+,d1		; tab[0]
	move.w (a0)+,d2		; delta[0]=tab[1]-tab[0]
	move.w d0,d3
	subq #2,d3	    ; nombre de delta de delta: delta2[0]=delta[1]-delta[0]
	lsr #1,d3
.ok
	subq #1,d3
	;bset #0,d3			; si paire = nb impair d'element on set a +1
						; si impair  nb pair d'lement on ne change rien
	move.w d1,(a1)+		; tab[0]
	
.loop
	add d2,d1			; tab[0]+delta[0]=tab[1]
	move.w d1,(a1)+
	
	move.b (a0)+,d4		 lire 2 valeur
	move.w d4,d5
	and.w #$F0,d4
	lsr #4,d4
	move.b (a2,d4.w),d4
	ext.w d4
	add d4,d2			: delta2[0]=delta[1]-delta[0]  d2= delta[1]=tab[2]-tab[1]
	
	add d2,d1
	move.w d1,(a1)+
	and.w #$F,d5
	move.b (a2,d5.w),d5
	ext.w d5
	add d5,d2

	dbf d3,.loop
	add d2,d1
	move.w d1,(a1)+
	rts

	
extnibble	dc.b 0,1,2,3,4,5,6,7,$F8,$f9,$fa,$fb,$fc,$fd,$fe,$ff
	even
	DATA
packed_sinus_table:

sin1pack
    dc.w 512  ; nombre d'element depack
	dc.w 0
	dc.w 402

	dc.b	  0,241,240,240,240,240,224,255,254,14,13,14,254,239,238,253
	dc.b	  253,253,239,207,221,252,238,206,222,206,206,205,221,220,220,235
	dc.b	  221,204,205,204,205,189,189,189,188,203,219,203,203,218,204,188
	dc.b	  187,203,203,187,202,218,188,187,187,202,203,187,187,187,202,202
	dc.b	  202,203,187,187,187,202,203,187,188,186,218,203,187,203,203,188
	dc.b	  188,202,219,203,203,219,204,189,189,189,189,204,205,204,205,219
	dc.b	  236,220,221,221,206,206,206,222,206,236,253,223,207,237,253,253
	dc.b	  254,239,238,254,13,14,14,255,240,224,240,240,240,241,240,0
	dc.b	  0,31,16,16,16,16,32,17,18,2,3,2,18,33,34,19
	dc.b	  19,19,33,65,51,20,34,66,50,66,66,67,51,52,52,37
	dc.b	  51,68,67,68,67,83,83,83,84,69,53,69,69,54,68,84
	dc.b	  85,69,69,85,70,54,84,85,85,70,69,85,85,85,70,70
	dc.b	  70,69,85,85,85,70,69,85,84,86,54,69,85,69,69,84
	dc.b	  84,70,53,69,69,53,68,83,83,83,83,68,67,68,67,53
	dc.b	  36,52,51,51,66,66,66,50,66,36,19,49,65,35,19,19
	dc.b	  18,33,34,18,3,2,2,17,16,32,16,16,16,31,16,0
	even
	
sin2pack
    dc.w 2048  ; nombre d'element depack
	dc.w 0
	dc.w 315

	dc.b	  16,241,240,0,240,15,15,0,255,15,240,255,240,255,224,255
	dc.b	  255,255,224,239,224,239,239,239,254,254,239,238,254,253,254,253
	dc.b	  253,254,238,238,238,237,254,222,238,238,222,237,238,237,237,252
	dc.b	  253,237,237,237,238,221,238,221,252,237,238,207,207,206,237,222
	dc.b	  222,222,221,238,221,237,237,237,222,237,237,237,237,237,252,238
	dc.b	  237,222,238,222,237,238,237,238,237,253,238,237,253,253,253,239
	dc.b	  223,223,238,238,239,223,253,254,239,238,254,254,239,254,224,223
	dc.b	  255,239,224,208,254,255,254,14,255,14,255,255,14,14,15,240
	dc.b	  224,255,15,240,255,15,15,15,241,225,225,240,240,15,0,15
	dc.b	  0,15,31,0,0,0,241,15,16,0,0,0,1,0,0,1
	dc.b	  0,31,16,16,1,0,1,16,0,17,0,17,242,0,16,17
	dc.b	  1,1,1,16,16,17,16,2,1,1,17,1,16,17,16,32
	dc.b	  2,1,17,1,47,33,1,17,16,18,0,33,2,1,17,2
	dc.b	  16,17,17,17,16,32,18,1,17,16,33,2,1,32,17,17
	dc.b	  17,17,2,2,2,2,1,18,1,17,17,16,33,16,33,2

	dc.b	  2,1,32,18,1,17,17,17,17,17,17,16,33,2,2,16
	dc.b	  18,2,1,32,17,17,17,17,17,17,17,2,16,33,2,2
	dc.b	  1,32,17,32,17,17,17,2,17,2,2,2,2,1,17,17
	dc.b	  17,16,33,2,1,32,17,17,2,16,32,17,17,17,16,18
	dc.b	  1,17,2,1,32,2,16,17,17,1,47,33,1,17,2,0
	dc.b	  32,17,16,17,1,17,1,2,0,17,16,16,17,1,1,1
	dc.b	  16,16,2,241,16,1,16,0,17,0,1,0,16,31,16,1
	dc.b	  0,0,1,0,0,0,0,31,1,240,0,0,15,31,0,15
	dc.b	  0,15,0,240,241,225,225,255,15,15,15,240,255,15,240,224
	dc.b	  255,14,14,15,255,254,15,254,14,255,254,240,208,239,239,255
	dc.b	  208,238,255,238,254,254,239,238,253,255,223,238,238,239,223,223
	dc.b	  237,253,253,253,238,237,253,238,237,238,237,238,222,238,221,238
	dc.b	  236,253,237,237,237,237,238,221,237,237,237,222,237,222,222,222
	dc.b	  221,238,207,207,206,237,236,253,222,237,222,237,237,237,237,252
	dc.b	  253,237,238,237,238,222,238,238,222,253,238,238,238,238,253,253
	dc.b	  254,253,254,254,239,238,254,255,239,239,224,239,224,239,255,255

	dc.b	  240,239,240,255,240,255,15,240,15,15,0,240,0,241,240,16
	dc.b	  240,31,16,0,16,1,1,0,17,1,16,17,16,17,32,17
	dc.b	  17,17,32,33,32,33,33,33,18,18,33,34,18,19,18,19
	dc.b	  19,18,34,34,34,35,18,50,34,34,50,35,34,35,35,20
	dc.b	  19,35,35,35,34,51,34,51,20,35,34,65,65,66,35,50
	dc.b	  50,50,51,34,51,35,35,35,50,35,35,35,35,35,20,34
	dc.b	  35,50,34,50,35,34,35,34,35,19,34,35,19,19,19,33
	dc.b	  49,49,34,34,33,49,19,18,33,34,18,18,33,18,32,49
	dc.b	  17,33,32,48,18,17,18,2,17,2,17,17,2,2,1,16
	dc.b	  32,17,1,16,17,1,1,1,31,47,47,16,16,1,0,1
	dc.b	  0,1,241,0,0,0,31,1,240,0,0,0,15,0,0,15
	dc.b	  0,241,240,240,15,0,15,240,0,255,0,255,30,0,240,255
	dc.b	  15,15,15,240,240,255,240,14,15,15,255,15,240,255,240,224
	dc.b	  14,15,255,15,225,239,15,255,240,254,0,239,14,15,255,14
	dc.b	  240,255,255,255,240,224,254,15,255,240,239,14,15,224,255,255
	dc.b	  255,255,14,14,14,14,15,254,15,255,255,240,239,240,239,14

	dc.b	  14,15,224,254,15,255,255,255,255,255,255,240,239,14,14,240
	dc.b	  254,14,15,224,255,255,255,255,255,255,255,14,240,239,14,14
	dc.b	  15,224,255,224,255,255,255,14,255,14,14,14,14,15,255,255
	dc.b	  255,240,239,14,15,224,255,255,14,240,224,255,255,255,240,254
	dc.b	  15,255,14,15,224,14,240,255,255,15,225,239,15,255,14,0
	dc.b	  224,255,240,255,15,255,15,14,0,255,240,240,255,15,15,15
	dc.b	  240,240,14,31,240,15,240,0,255,0,15,0,240,241,240,15
	dc.b	  0,0,15,0,0,0,0,241,15,16,0,0,1,241,0,1
	dc.b	  0,1,0,16,31,47,47,17,1,1,1,16,17,1,16,32
	dc.b	  17,2,2,1,17,18,1,18,2,17,18,16,48,33,33,17
	dc.b	  48,34,17,34,18,18,33,34,19,17,49,34,34,33,49,49
	dc.b	  35,19,19,19,34,35,19,34,35,34,35,34,50,34,51,34
	dc.b	  36,19,35,35,35,35,34,51,35,35,35,50,35,50,50,50
	dc.b	  51,34,65,65,66,35,36,19,50,35,50,35,35,35,35,20
	dc.b	  19,35,34,35,34,50,34,34,50,19,34,34,34,34,19,19
	dc.b	  18,19,18,18,33,34,18,17,33,33,32,33,32,33,17,17

	dc.b	  16,33,16,17,16,17,1,16,1,1,0,16,0,31,16,0
sin3pack
    dc.w 8192  ; nombre d'element depack
	dc.w 0
	dc.w 248

	dc.b	  0,241,0,241,240,0,15,0,15,0,240,15,0,240,240,240
	dc.b	  240,255,0,255,15,240,255,14,30,14,0,239,15,255,255,14
	dc.b	  14,14,14,14,14,255,14,224,254,14,255,224,239,254,255,255
	dc.b	  239,239,255,239,254,254,255,239,254,224,208,238,255,238,255,239
	dc.b	  239,239,238,13,255,238,255,208,238,254,239,254,239,239,238,255
	dc.b	  238,254,254,239,254,239,238,255,238,255,238,254,254,254,224,223
	dc.b	  254,254,254,254,254,255,238,13,13,14,254,254,255,254,224,238
	dc.b	  14,224,239,239,255,224,238,14,255,254,14,254,15,239,240,208
	dc.b	  255,224,254,14,240,224,224,224,224,255,255,255,14,15,255,240
	dc.b	  224,14,14,30,15,255,15,15,240,225,224,15,240,255,0,255
	dc.b	  15,0,255,0,240,240,240,15,15,30,31,15,0,15,0,240
	dc.b	  0,15,0,241,240,0,15,0,30,16,15,31,0,31,0,0
	dc.b	  0,0,15,16,31,0,0,31,31,16,0,0,1,241,0,1
	dc.b	  241,0,0,16,0,1,0,1,0,1,241,31,16,31,17,241
	dc.b	  1,241,31,17,241,31,17,0,1,0,16,16,1,0,16,16

	dc.b	  1,1,0,16,16,1,1,0,17,242,241,16,1,1,1,0
	dc.b	  17,0,16,16,1,16,1,1,1,1,1,1,0,17,242,0
	dc.b	  16,16,16,16,16,16,2,241,16,1,16,1,1,16,1,1
	dc.b	  1,1,1,1,1,1,0,47,17,0,17,0,17,0,16,17
	dc.b	  242,0,16,2,241,16,16,1,16,1,16,1,1,1,1,0
	dc.b	  17,1,242,0,16,16,16,16,1,16,1,1,1,1,0,17
	dc.b	  242,242,242,241,16,1,1,0,47,16,16,16,16,1,31,47
	dc.b	  17,0,16,16,1,16,0,17,0,16,16,1,31,17,0,16
	dc.b	  16,1,1,1,242,241,16,1,0,17,241,16,1,0,16,16
	dc.b	  1,0,16,16,31,17,0,16,1,1,0,1,31,17,0,1
	dc.b	  1,0,1,31,17,241,31,17,241,31,17,241,31,17,241,31
	dc.b	  16,16,0,16,1,0,16,0,16,1,0,1,1,241,1,241
	dc.b	  1,0,0,16,31,16,1,0,1,241,31,16,0,16,0,31
	dc.b	  16,31,16,0,16,0,1,241,1,241,241,1,241,241,1,240
	dc.b	  16,0,1,241,0,0,0,16,241,0,1,241,241,15,16,1
	dc.b	  240,31,1,15,16,0,0,0,0,1,240,1,240,31,1,241

	dc.b	  240,31,1,240,31,0,1,240,0,15,16,15,31,31,1,240
	dc.b	  0,241,15,31,0,0,0,241,240,0,15,31,0,0,15,1
	dc.b	  225,15,31,15,31,31,241,241,255,31,31,241,240,0,240,0
	dc.b	  241,225,15,0,240,0,240,0,240,15,31,241,255,31,15,31
	dc.b	  241,255,31,15,0,15,241,240,241,225,240,240,15,0,240,15
	dc.b	  0,240,240,15,15,30,31,241,255,0,240,15,15,15,30,31
	dc.b	  240,15,0,240,240,240,15,15,0,240,240,240,15,15,15,0
	dc.b	  240,240,240,15,15,15,0,255,30,31,240,15,15,15,0,255
	dc.b	  30,31,240,15,241,255,15,0,240,240,15,241,224,0,255,0
	dc.b	  240,240,15,15,15,0,255,30,31,241,225,225,240,240,240,15
	dc.b	  241,255,0,240,15,241,255,0,240,15,241,255,30,31,241,255
	dc.b	  0,240,15,0,240,240,15,0,240,15,15,30,31,15,0,15
	dc.b	  15,0,241,225,240,241,255,0,15,30,31,15,30,16,255,31
	dc.b	  0,240,0,240,15,31,241,240,241,240,15,0,15,31,241,240
	dc.b	  0,240,0,240,30,31,31,15,31,0,241,240,0,241,240,15
	dc.b	  31,0,0,240,31,241,15,0,0,15,31,0,0,15,1,240

	dc.b	  0,241,241,240,0,0,241,241,240,0,0,15,16,240,31,0
	dc.b	  0,0,0,241,15,31,31,1,240,0,31,0,0,0,241,0
	dc.b	  0,241,0,15,16,241,0,241,0,15,16,0,241,0,0,0
	dc.b	  0,0,31,0,1,241,241,241,241,0,241,0,0,1,240,31
	dc.b	  31,16,241,0,1,240,1,241,15,16,0,31,1,241,15,16
	dc.b	  31,0,16,241,0,0,31,31,16,0,0,31,16,0,0,1
	dc.b	  241,0,0,1,241,0,0,31,16,241,31,1,15,16,31,31
	dc.b	  16,0,31,16,0,0,16,0,0,1,0,0,1,241,0,31
	dc.b	  31,16,31,31,16,1,241,0,0,31,16,1,241,15,47,1
	dc.b	  0,0,31,16,31,1,0,1,241,0,0,16,0,1,241,0
	dc.b	  31,16,0,1,0,0,31,16,1,241,0,31,31,17,241,241
	dc.b	  1,241,0,0,16,0,0,16,0,31,16,1,241,0,0,16
	dc.b	  0,1,0,0,31,16,31,31,17,241,241,1,241,0,0,16
	dc.b	  0,1,0,0,31,16,31,31,47,1,241,31,1,0,1,15
	dc.b	  47,1,0,0,31,17,240,16,0,31,16,1,241,0,31,16
	dc.b	  0,16,241,31,16,0,1,0,0,31,16,31,16,0,1,0

	dc.b	  0,16,0,1,15,47,1,0,1,241,0,31,16,0,16,0
	dc.b	  0,16,0,31,16,1,241,0,1,15,47,1,0,0,16,0
	dc.b	  1,0,0,31,16,31,16,0,1,0,0,31,17,240,16,0
	dc.b	  31,16,1,241,0,31,16,0,16,241,31,16,0,1,15,47
	dc.b	  1,0,1,15,17,241,15,47,31,16,31,16,0,1,0,0
	dc.b	  16,0,1,241,1,241,241,31,31,16,31,16,0,1,0,0
	dc.b	  16,0,1,241,0,31,16,0,16,0,0,16,0,1,241,1
	dc.b	  241,241,31,31,16,1,241,0,31,16,0,1,0,0,31,16
	dc.b	  1,241,0,0,16,0,1,241,0,1,15,16,31,16,0,1
	dc.b	  15,47,1,241,0,31,16,0,1,241,0,31,31,16,31,31
	dc.b	  16,1,241,0,0,1,0,0,0,16,0,0,31,16,0,31
	dc.b	  31,16,31,1,15,17,240,31,16,0,1,241,0,0,1,241
	dc.b	  0,0,0,31,16,0,0,31,31,16,0,1,240,16,15,16
	dc.b	  31,1,241,15,16,0,31,1,241,0,241,0,1,240,31,31
	dc.b	  16,241,0,0,1,240,1,241,241,241,241,0,15,16,0,0
	dc.b	  0,0,1,240,0,31,0,1,240,1,240,31,0,1,240,0

	dc.b	  1,240,0,0,15,16,0,241,15,31,31,1,240,0,0,0
	dc.b	  15,16,240,31,0,0,0,241,241,240,0,0,241,241,240,0
	dc.b	  241,15,0,0,15,31,0,0,15,1,255,16,240,0,15,31
	dc.b	  0,241,240,0,241,240,15,31,15,31,30,16,240,0,240,0
	dc.b	  241,255,31,0,15,0,241,240,241,255,31,0,240,0,240,15
	dc.b	  31,240,30,31,15,30,31,0,15,241,240,241,225,240,15,15
	dc.b	  0,15,15,30,31,15,0,240,15,0,240,240,15,0,240,15
	dc.b	  241,255,30,31,241,255,0,240,15,241,255,0,240,15,241,255
	dc.b	  0,240,240,241,225,225,255,30,31,240,15,15,15,0,240,240
	dc.b	  15,240,0,225,255,0,240,240,15,15,241,255,0,255,30,31
	dc.b	  240,15,15,15,0,255,30,31,240,15,15,15,0,240,240,240
	dc.b	  15,15,15,0,240,240,240,15,15,0,240,240,240,15,0,255
	dc.b	  30,31,15,15,0,240,15,241,255,30,31,15,0,240,240,15
	dc.b	  0,240,15,0,240,241,225,240,241,255,0,15,15,31,241,255
	dc.b	  31,15,31,241,255,31,0,240,0,240,0,240,15,1,225,240
	dc.b	  0,240,0,241,255,31,31,241,241,255,31,31,15,31,1,225

	dc.b	  15,0,0,15,31,0,0,241,240,0,0,15,31,1,240,0
	dc.b	  241,15,31,31,0,31,0,0,241,0,15,16,241,15,16,241
	dc.b	  241,15,16,241,0,241,0,0,0,0,0,31,1,15,16,241
	dc.b	  0,31,1,241,241,0,1,240,16,0,0,1,241,0,0,16
	dc.b	  241,1,241,241,1,241,241,1,241,0,0,16,0,31,16,31
	dc.b	  16,0,16,0,31,17,241,0,1,0,31,16,16,0,1,1
	dc.b	  241,1,241,1,0,1,0,16,0,16,1,0,16,0,16,31
	dc.b	  17,241,31,17,241,31,17,241,31,17,241,31,17,0,1,1
	dc.b	  0,1,31,17,0,1,1,0,16,1,31,16,16,16,1,0
	dc.b	  16,16,1,0,17,241,16,1,0,17,242,241,1,1,0,16
	dc.b	  16,1,31,17,0,16,16,1,16,0,17,0,16,16,1,31
	dc.b	  47,17,0,16,16,16,31,32,1,1,0,17,242,242,242,241
	dc.b	  16,1,1,1,1,0,17,0,16,16,16,16,2,241,1,16
	dc.b	  1,1,1,1,0,17,0,17,0,16,17,242,0,16,2,241
	dc.b	  16,16,1,16,1,16,1,31,32,1,1,1,1,1,1,1
	dc.b	  1,0,17,1,0,17,0,17,242,0,16,16,16,16,16,16

	dc.b	  2,241,16,1,1,1,1,1,1,0,17,0,16,16,1,16
	dc.b	  1,1,1,0,17,242,241,16,1,1,0,16,16,1,1,0
	dc.b	  16,16,1,0,16,16,1,0,1,31,17,241,31,17,241,1
	dc.b	  241,31,16,31,17,241,0,1,0,1,0,0,16,0,1,241
	dc.b	  0,1,241,0,0,0,31,31,16,0,15,16,31,0,0,0
	dc.b	  0,15,16,15,31,0,30,16,15,0,0,241,240,15,0,0
	dc.b	  240,15,0,15,15,30,31,15,0,240,240,240,15,240,15,15
	dc.b	  240,15,240,255,0,225,224,255,15,15,255,14,30,14,0,224
	dc.b	  255,255,14,15,255,255,240,224,224,224,224,254,14,240,239,240
	dc.b	  208,255,239,14,254,14,255,254,14,224,239,255,239,224,238,14
	dc.b	  224,238,255,254,254,254,13,13,14,239,254,254,254,254,254,255
	dc.b	  208,238,254,254,254,239,254,239,254,239,238,255,238,254,254,239
	dc.b	  254,239,239,238,255,238,254,224,223,254,239,253,14,239,239,239
	dc.b	  239,254,239,254,224,208,238,255,239,254,254,255,239,255,239,239
	dc.b	  255,254,255,224,239,254,14,240,238,15,254,14,14,14,14,14
	dc.b	  15,255,255,15,224,14,14,30,15,240,255,15,240,15,240,240

	dc.b	  240,240,240,15,0,240,15,0,15,0,0,241,240,1,240,0
	dc.b	  0,31,0,31,16,0,1,0,1,0,16,1,0,16,16,16
	dc.b	  16,17,0,17,1,16,17,2,242,2,0,33,1,17,17,2
	dc.b	  2,2,2,2,2,17,2,32,18,2,17,32,33,18,17,17
	dc.b	  33,33,17,33,18,18,17,33,18,32,48,34,17,34,17,33
	dc.b	  33,33,34,3,17,34,17,48,34,18,33,18,33,33,34,17
	dc.b	  34,18,18,33,18,33,34,17,34,17,34,18,18,18,32,49
	dc.b	  18,18,18,18,18,17,34,3,3,2,18,18,17,18,32,34
	dc.b	  2,32,33,33,17,32,34,2,17,18,2,18,1,33,16,48
	dc.b	  17,32,18,2,16,32,32,32,32,17,17,17,2,1,17,16
	dc.b	  32,2,2,242,1,17,1,1,16,47,32,1,16,17,0,17
	dc.b	  1,0,17,0,16,16,16,1,1,242,241,1,0,1,0,16
	dc.b	  0,1,0,31,16,0,1,0,242,240,1,241,0,241,0,0
	dc.b	  0,0,1,240,241,0,0,241,241,240,0,0,15,31,0,15
	dc.b	  31,0,0,240,0,15,0,15,0,15,31,241,240,241,255,31
	dc.b	  15,31,241,255,31,241,255,0,15,0,240,240,15,0,240,240

	dc.b	  15,15,0,240,240,15,15,0,255,30,31,240,15,15,15,0
	dc.b	  255,0,240,240,15,240,15,15,15,15,15,15,0,255,30,0
	dc.b	  240,240,240,240,240,240,14,31,240,15,240,15,15,240,15,15
	dc.b	  15,15,15,15,15,15,0,225,255,0,255,0,255,0,240,255
	dc.b	  30,0,240,14,31,240,240,15,240,15,240,15,15,15,15,0
	dc.b	  255,15,30,0,240,240,240,240,15,240,15,15,15,15,0,255
	dc.b	  30,30,30,31,240,15,15,0,225,240,240,240,240,15,241,225
	dc.b	  255,0,240,240,15,240,0,255,0,240,240,15,241,255,0,240
	dc.b	  240,15,15,15,30,31,240,15,0,255,31,240,15,0,240,240
	dc.b	  15,0,240,240,241,255,0,240,15,15,0,15,241,255,0,15
	dc.b	  15,0,15,241,255,31,241,255,31,241,255,31,241,255,31,241
	dc.b	  240,240,0,240,15,0,240,0,240,15,0,15,15,31,15,31
	dc.b	  15,0,0,240,241,240,15,0,15,31,241,240,0,240,0,241
	dc.b	  240,241,240,0,240,0,15,31,15,31,31,15,31,31,15,16
	dc.b	  240,0,15,31,0,0,0,240,31,0,15,31,31,1,240,15
	dc.b	  16,241,15,1,240,0,0,0,0,15,16,15,16,241,15,31

	dc.b	  16,241,15,16,241,0,15,16,0,1,240,1,241,241,15,16
	dc.b	  0,31,1,241,0,0,0,31,16,0,1,241,0,0,1,15
	dc.b	  47,1,241,1,241,241,31,31,17,241,241,31,16,0,16,0
	dc.b	  31,47,1,0,16,0,16,0,16,1,241,31,17,241,1,241
	dc.b	  31,17,241,1,0,1,31,16,31,47,16,16,1,0,16,1
	dc.b	  0,16,16,1,1,242,241,31,17,0,16,1,1,1,242,241
	dc.b	  16,1,0,16,16,16,1,1,0,16,16,16,1,1,1,0
	dc.b	  16,16,16,1,1,1,0,17,242,241,16,1,1,1,0,17
	dc.b	  242,241,16,1,31,17,1,0,16,16,1,31,32,0,17,0
	dc.b	  16,16,1,1,1,0,17,242,241,31,47,47,16,16,16,1
	dc.b	  31,17,0,16,1,31,17,0,16,1,31,17,242,241,31,17
	dc.b	  0,16,1,0,16,16,1,0,16,1,1,242,241,1,0,1
	dc.b	  1,0,31,47,16,31,17,0,1,242,241,1,242,240,17,241
	dc.b	  0,16,0,16,1,241,31,16,31,16,1,0,1,241,31,16
	dc.b	  0,16,0,16,242,241,241,1,241,0,31,16,0,31,16,1
	dc.b	  241,0,0,16,241,31,1,0,0,1,241,0,0,1,15,16

	dc.b	  0,31,31,16,0,0,31,31,16,0,0,1,240,16,241,0
	dc.b	  0,0,0,31,1,241,241,15,16,0,241,0,0,0,31,0
	dc.b	  0,31,0,1,240,31,0,31,0,1,240,0,31,0,0,0
	dc.b	  0,0,241,0,15,31,31,31,31,0,31,0,0,15,16,241
	dc.b	  241,240,31,0,15,16,15,31,1,240,0,241,15,31,1,240
	dc.b	  241,0,240,31,0,0,241,241,240,0,0,241,240,0,0,15
	dc.b	  31,0,0,15,31,0,0,241,240,31,241,15,1,240,241,241
	dc.b	  240,0,241,240,0,0,240,0,0,15,0,0,15,31,0,241
	dc.b	  241,240,241,241,240,15,31,0,0,241,240,15,31,1,225,15
	dc.b	  0,0,241,240,241,15,0,15,31,0,0,240,0,15,31,0
	dc.b	  241,240,0,15,0,0,241,240,15,31,0,241,241,255,31,31
	dc.b	  15,31,0,0,240,0,0,240,0,241,240,15,31,0,0,240
	dc.b	  0,15,0,0,241,240,241,241,255,31,31,15,31,0,0,240
	dc.b	  0,15,0,0,241,240,241,241,225,15,31,241,15,0,15,1
	dc.b	  225,15,0,0,241,255,16,240,0,241,240,15,31,0,241,240
	dc.b	  0,240,31,241,240,0,15,0,0,241,240,241,240,0,15,0

	dc.b	  0,240,0,15,1,225,15,0,15,31,0,241,240,0,240,0
	dc.b	  0,240,0,241,240,15,31,0,15,1,225,15,0,0,240,0
	dc.b	  15,0,0,241,240,241,240,0,15,0,0,241,255,16,240,0
	dc.b	  241,240,15,31,0,241,240,0,240,31,241,240,0,15,1,225
	dc.b	  15,0,15,1,255,31,1,225,241,240,241,240,0,15,0,0
	dc.b	  240,0,15,31,15,31,31,241,241,240,241,240,0,15,0,0
	dc.b	  240,0,15,31,0,241,240,0,240,0,0,240,0,15,31,15
	dc.b	  31,31,241,241,240,15,31,0,241,240,0,15,0,0,241,240
	dc.b	  15,31,0,0,240,0,15,31,0,15,1,240,241,240,0,15
	dc.b	  1,225,15,31,0,241,240,0,15,31,0,241,241,240,241,241
	dc.b	  240,15,31,0,0,15,0,0,0,240,0,0,241,240,0,241
	dc.b	  241,240,241,15,1,255,16,241,240,0,15,31,0,0,15,31
	dc.b	  0,0,0,241,240,0,0,241,241,240,0,15,16,240,1,240
	dc.b	  241,15,31,1,240,0,241,15,31,0,31,0,15,16,241,241
	dc.b	  240,31,0,0,15,16,15,31,31,31,31,0,1,240,0,0
	dc.b	  0,0,15,16,0,241,0,15,16,15,16,241,0,15,16,0

	dc.b	  15,16,0,0,1,240,0,31,1,241,241,15,16,0,0,0
	dc.b	  1,240,16,241,0,0,0,31,31,16,0,0,31,31,16,0
	dc.b	  31,1,0,0,1,241,0,0,1,15,17,240,16,0,1,241
	dc.b	  0,31,16,0,31,16,1,241,1,241,242,240,16,0,16,0
	dc.b	  31,17,241,0,1,0,31,16,31,17,241,0,16,0,16,1
	dc.b	  241,16,242,241,1,242,241,0,1,31,16,31,47,16,1,1
	dc.b	  0,1,1,242,241,1,0,16,1,0,16,16,1,0,16,1
	dc.b	  31,17,242,241,31,17,0,16,1,31,17,0,16,1,31,17
	dc.b	  0,16,16,31,47,47,17,242,241,16,1,1,1,0,16,16
	dc.b	  1,16,0,47,17,0,16,16,1,1,31,17,0,17,242,241
	dc.b	  16,1,1,1,0,17,242,241,16,1,1,1,0,16,16,16
	dc.b	  1,1,1,0,16,16,16,1,1,0,16,16,16,1,0,17
	dc.b	  242,241,1,1,0,16,1,31,17,242,241,1,0,16,16,1
	dc.b	  0,16,1,0,16,31,47,16,31,17,0,1,1,241,31,17
	dc.b	  241,1,241,31,17,241,0,16,0,16,0,16,1,15,47,16
	dc.b	  0,16,0,31,17,241,241,31,31,17,241,241,1,241,15,47

	dc.b	  1,0,0,1,241,0,0,31,16,0,0,1,241,15,16,0
	dc.b	  31,1,241,241,0,241,0,0,31,0,1,240,31,1,240,31
	dc.b	  31,1,240,31,0,31,0,0,0,0,0,241,15,1,240,31
	dc.b	  0,241,15,31,31,0,15,16,240,0,0,15,31,0,0,240
	dc.b	  31,15,31,31,15,31,31,15,31,0,0,240,0,241,240,241
	dc.b	  240,0,240,0,241,255,31,0,15,0,241,240,240,0,15,15
	dc.b	  31,15,31,15,0,15,0,240,0,240,15,0,240,0,240,241
	dc.b	  255,31,241,255,31,241,255,31,241,255,31,241,255,0,15,15
	dc.b	  0,15,241,255,0,15,15,0,240,15,241,240,240,240,15,0
	dc.b	  240,240,15,0,255,31,240,15,0,255,30,31,15,15,0,240
	dc.b	  240,15,241,255,0,240,240,15,240,0,255,0,240,240,15,241
	dc.b	  225,255,0,240,240,240,241,224,15,15,0,255,30,30,30,31
	dc.b	  240,15,15,15,15,0,255,0,240,240,240,240,14,31,15,240
	dc.b	  15,15,15,15,0,255,0,255,0,240,255,30,0,240,14,31
	dc.b	  240,240,15,240,15,240,15,241,224,15,15,15,15,15,15,15
	dc.b	  15,0,255,15,0,255,0,255,30,0,240,240,240,240,240,240

	dc.b	  14,31,240,15,15,15,15,15,15,0,255,0,240,240,15,240
	dc.b	  15,15,15,0,255,30,31,240,15,15,0,240,240,15,15,0
	dc.b	  240,240,15,0,240,240,15,0,15,241,255,31,241,255,31,15
	dc.b	  31,241,240,241,255,31,0,15,0,15,0,0,240,0,15,31
	dc.b	  0,15,31,0,0,0,241,241,240,0,1,240,241,0,0,0
	dc.b	  0,1,240,1,241,0,242,240,1,0,0,31,16,1,0,0
	dc.b	  16,1,0,1,1,242,241,1,0,16,16,16,1,16,1,1
	dc.b	  16,1,16,17,0,47,32,17,1,1,17,2,242,2,0,32
	dc.b	  17,17,2,1,17,17,16,32,32,32,32,18,2,16,33,16
	dc.b	  48,17,33,2,18,2,17,18,2,32,33,17,33,32,34,2
	dc.b	  32,34,17,18,18,18,3,3,2,33,18,18,18,18,18,17
	dc.b	  48,34,18,18,18,33,18,33,18,33,34,17,34,18,18,33
	dc.b	  18,33,33,34,17,34,18,32,49,18,33,19,2,33,33,33
	dc.b	  33,18,33,18,32,48,34,17,33,18,18,17,33,17,33,33
	dc.b	  17,18,17,32,33,18,2,16,34,1,18,2,2,2,2,2
	dc.b	  1,17,17,1,32,2,2,242,1,16,17,1,16,1,16,16

	dc.b	  16,16,16,1,0,16,1,0,1,0,0,31,16,15,16,0
	even

	BSS

amp1		ds.w 512
amp2		ds.w 2048
amp3		ds.w 8192
amp4			

	"
dDugCjZ4,day 13 oop additional,HarrJ,Java,Wednesday 22nd of November 2023 07:07:12 PM CDT,"public class Day13A {

    public static void main(String[] args) {
        Rectangle callRect = new Rectangle(7, 4.32);

        System.out.println(""length: 7"");
        System.out.println(""width: 4.32"");
        System.out.printf(""Area: "" + callRect.getArea());

        Rectangle callRect2 = new Rectangle();
        callRect2.setLen(8);
        callRect2.setWid(6.44);

        System.out.println(""length: 8"");
        System.out.println(""width: 6.44"");
        System.out.printf(""Area: "" + callRect2.getArea());

        
        Box callBox = new Box(4,7,3);
        System.out.println(""length: 4"");
        System.out.println(""width: 7"");
        System.out.println(""height: 3"");
        System.out.printf(""Volume: "" + callBox.getBoxVolume());
        System.out.printf(""%nSurface Area: "" + callBox.getSurfaceArea());
    }

}

class Rectangle {
    private double len; //set
    private double wid; //set
    private double area; //get

// - Encapsulation
    public void setLen(double len) {
        this.len = len;
    }

    public void setWid(double wid) {
        this.wid = wid;
    }

    public double getLen() {
        return len;
    }

    public double getWid() {
        return wid;
    }
    
    public double getArea() {
        area = computeArea(getLen(), getWid());
        return area;
    }

// - Constructor
    public Rectangle() {
    }

    public Rectangle(double ln, double wd) {
        this.len = ln;
        this.wid = wd;
    }

    double computeArea(double ln, double wd) {
        double ar = ln * wd;

        return ar;
    }
}

class Box extends Rectangle {
    private double hei; //set
    private double boxVolume; //get
    private double surfaceArea; //get

// - Encapsulation
    public void setHei(double hei) {
        this.hei = hei;
    }
    
    public double getHei() {
        return hei;
    }

    public double getBoxVolume() {
        boxVolume = computeVolume(getLen(), getWid(), getHei());
        return boxVolume;
    }

    public double getSurfaceArea() {
        surfaceArea = computeSurfaceArea(getLen(), getWid(), getHei());
        return surfaceArea;
    }
    
// - Constructor
    public Box() {
    }

    public Box(double ln, double wd, double hi) {
        super(ln, wd);
        this.hei = hi;
    }

    private double computeVolume(double ln, double wd, double hi) {
        double vol = computeArea(ln, wd) * hi;

        return vol;
    }

    private double computeSurfaceArea(double ln, double wd, double hi) {
        double sArea = 2 * (computeArea(ln, wd) + computeArea(ln, hi) + computeArea(hi, wd));

        return sArea;
    }
}
"
5cqNabfm,Somewhat redacted fake hkt code,mwchase,Python,Wednesday 22nd of November 2023 06:58:05 PM CDT,"""""""Map from Type1[T] to Type2[T], where T is specific to the key.""""""

from __future__ import annotations

import typing

import pyrsistent

_T = typing.TypeVar(""_T"")
_K = typing.TypeVar(""_K"")
_V = typing.TypeVar(""_V"")

_TCallable = typing.TypeVar(""_TCallable"", bound=typing.Callable[..., object])
_TCallable_co = typing.TypeVar(
    ""_TCallable_co"", bound=typing.Callable[..., object], covariant=True
)


class Magma(typing.Protocol[_TCallable_co]):
    """"""Helper protocol for combining two values in a DependentMapping.""""""

    def __call__(
        self: Magma[typing.Callable[..., _V]], __lhs: _V, __rhs: _V
    ) -> _V:
        """"""Combine stored values.""""""


class DependentMapping(typing.Protocol[_TCallable]):
    """"""Perform type manipulations so advanced, Mypy doesn't allow them.""""""

    # Various other methods redacted for space

    def __iter__(
        self: DependentMapping[typing.Callable[[_K], _V]]
    ) -> typing.Iterator[_K]:
        """"""Iterate over the keys in the mapping.""""""

    def items(
        self: DependentMapping[typing.Callable[[_K], _V]]
    ) -> typing.ItemsView[_K, _V]:
        """"""Return an iterable of the key-value pairs stored in the mapping.""""""

    def iteritems(
        self: DependentMapping[typing.Callable[[_K], _V]]
    ) -> typing.Iterable[tuple[_K, _V]]:
        """"""Return an iterable of the key-value pairs stored in the mapping.""""""

    def iterkeys(
        self: DependentMapping[typing.Callable[[_K], _V]]
    ) -> typing.Iterable[_K]:
        """"""Return an iterable of the keys stored in the mapping.""""""

    def itervalues(
        self: DependentMapping[typing.Callable[[_K], _V]]
    ) -> typing.Iterable[_V]:
        """"""Return an iterable of the values stored in the mapping.""""""

    def keys(
        self: DependentMapping[typing.Callable[[_K], _V]]
    ) -> typing.KeysView[_K]:
        """"""Return an iterable of the keys stored in the mapping.""""""

    # Methods redacted for space

    def values(
        self: DependentMapping[typing.Callable[[_K], _V]]
    ) -> typing.ValuesView[_V]:
        """"""Return an iterable of the values stored in the mapping.""""""


_AnyMap = DependentMapping[typing.Any]
MAPPING: _AnyMap = typing.cast(""_AnyMap"", pyrsistent.pmap())"
iVH2nuWF,Untitled,GuHRM,C,Wednesday 22nd of November 2023 06:41:39 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int main(){
    printf(""----Exercicio 18----\n"");
    int tamanho;
    do{
        printf(""Digite quantas cidades (2 a 10): "");
        scanf(""%d"",&tamanho);
        fflush(stdin);
    } while(tamanho<2 || tamanho>10);
    double consumo;
    printf(""Quantos KM/L seu carro faz? "");
    scanf(""%lf"",&consumo);
    fflush(stdin);
    char cidades[tamanho][100];
    double dist[tamanho][tamanho];
    for(int i=0;i<tamanho;i++){
        printf(""Digite o nome da %d cidade: "",i+1);
        gets(cidades[i]);
        fflush(stdin);
    }
    double dist_temp;
    for(int i=0;i<tamanho;i++){
        for(int j=0;j<tamanho;j++){
            if(i==j){
                dist[i][j]=0;
            } else {
                printf(""Distancia entre %s e %s:"",cidades[i],cidades[j]);
                scanf(""%lf"",&dist_temp);
                dist[i][j] = dist_temp;
            }
        }
    }
    for(int i=0;i<tamanho;i++){
        for(int j=0;j<tamanho;j++){
            if(i!=j){
                printf(""Distancia entre %s e %s: %.2lfkm\n"",cidades[i],cidades[j],dist[i][j]);
                printf(""\tVoce gastara %.2lf litros de combustivel.\n"",dist[i][j]/consumo);
            }
        }
    }
}
"
zVPwf8Py,2023-11-22_stats.json,rdp_snitch,JSON,Wednesday 22nd of November 2023 06:18:19 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 69,
    ""45.227.254.8"": 6,
    ""67.217.59.233"": 3,
    ""205.210.31.53"": 9,
    ""58.218.204.183"": 15,
    ""36.91.222.100"": 9,
    ""194.165.16.37"": 6,
    ""203.150.11.133"": 6,
    ""67.133.192.80"": 3,
    ""103.245.236.116"": 12,
    ""205.210.31.70"": 9,
    ""149.28.70.189"": 6,
    ""51.75.160.42"": 18,
    ""139.162.175.215"": 12,
    ""194.165.16.76"": 6,
    ""178.32.197.84"": 3,
    ""213.32.39.32"": 3,
    ""103.231.59.163"": 12,
    ""198.235.24.143"": 9,
    ""20.212.59.140"": 21,
    ""195.78.54.58"": 3,
    ""165.154.182.219"": 3,
    ""176.113.115.58"": 3,
    ""212.70.149.146"": 3,
    ""45.227.254.48"": 6,
    ""94.232.41.30"": 3,
    ""198.235.24.216"": 9,
    ""50.118.145.49"": 3,
    ""162.55.82.108"": 9,
    ""162.209.206.10"": 3
  },
  ""asn"": {
    ""AS48721"": 81,
    ""AS267784"": 12,
    ""AS19318"": 3,
    ""AS396982"": 36,
    ""AS4134"": 15,
    ""AS7713"": 9,
    ""AS4618"": 6,
    ""AS209"": 3,
    ""AS150867"": 12,
    ""AS20473"": 6,
    ""AS16276"": 24,
    ""AS63949"": 12,
    ""AS132335"": 12,
    ""AS8075"": 21,
    ""AS174"": 3,
    ""AS135377"": 3,
    ""AS57678"": 3,
    ""AS204428"": 3,
    ""AS208091"": 3,
    ""AS149440"": 3,
    ""AS24940"": 9,
    ""AS40065"": 3
  },
  ""isp"": {
    ""Flyservers S.A."": 93,
    ""Interserver, Inc"": 3,
    ""Google LLC"": 36,
    ""Chinanet"": 15,
    ""PT Telekomunikasi Indonesia"": 9,
    ""Internet Thailand Public Company Limited"": 6,
    ""CenturyLink"": 3,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 12,
    ""The Constant Company"": 6,
    ""OVH SAS"": 24,
    ""Akamai Technologies, Inc."": 12,
    ""LeapSwitch Networks Pvt Ltd"": 12,
    ""Microsoft Corporation"": 21,
    ""Cogent Communications"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Cat Technologies Co. Limited"": 3,
    ""SS-Net"": 3,
    ""Xhost Internet Solutions LP"": 3,
    ""EGIHosting"": 3,
    ""Hetzner Online GmbH"": 9,
    ""CloudRadium L.L.C"": 3
  },
  ""org"": {
    ""Flyservers S.A"": 81,
    ""UAB Host Baltic"": 12,
    ""Host Department NJ, LLC"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Chinanet JS"": 15,
    ""Telekomunikasi Indonesia"": 9,
    ""INET"": 6,
    ""CenturyLink, Inc"": 3,
    ""LP Technology Electronic Commerce Company Limited"": 12,
    ""Vultr Holdings, LLC"": 6,
    ""OVH Ltd"": 18,
    ""Linode, LLC"": 12,
    ""ONYPHE"": 6,
    ""IPXO"": 12,
    ""Microsoft Azure Cloud (southeastasia)"": 21,
    ""Freedomtech Solutions Ltd"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Cat Technologies Co. Limited"": 3,
    ""4Media Ltd"": 3,
    ""Dmitriy Panchenko"": 3,
    ""Evoxt"": 3,
    ""Hetzner"": 9,
    ""zhang san"": 3
  },
  ""regionName"": {
    ""Kaunas"": 81,
    ""Vilnius"": 12,
    ""New Jersey"": 3,
    ""California"": 51,
    ""Jiangsu"": 15,
    ""Jakarta"": 9,
    ""Bangkok"": 6,
    ""New York"": 3,
    ""Ho Chi Minh"": 12,
    ""England"": 18,
    ""Hesse"": 12,
    ""Hauts-de-France"": 6,
    ""Maharashtra"": 12,
    ""Central Singapore"": 21,
    ""North Holland"": 3,
    ""Moscow"": 3,
    ""Plovdiv"": 3,
    ""Perm Krai"": 3,
    ""Saxony"": 9
  },
  ""country"": {
    ""Lithuania"": 93,
    ""United States"": 57,
    ""China"": 15,
    ""Indonesia"": 9,
    ""Thailand"": 6,
    ""Vietnam"": 12,
    ""United Kingdom"": 18,
    ""Germany"": 21,
    ""France"": 6,
    ""India"": 12,
    ""Singapore"": 21,
    ""The Netherlands"": 3,
    ""Russia"": 6,
    ""Bulgaria"": 3
  },
  ""account"": {
    ""hello"": 171,
    ""Test"": 51,
    ""EKplaKhyB"": 3,
    ""huQxpb"": 3,
    ""EWSZqo"": 3,
    ""bevtbKUSG"": 3,
    ""VYviwd"": 3,
    ""eiSpAW"": 3,
    ""(empty)"": 15,
    ""Administrator"": 9,
    ""XZcliMaoT"": 3,
    ""Ilmsmd"": 3,
    ""QpnDHv"": 3,
    ""KnjGdVBCH"": 3,
    ""NENHMK"": 3,
    ""daPgRE"": 3
  },
  ""keyboard"": {
    ""Unknown"": 282
  },
  ""client_build"": {
    ""Unknown"": 282
  },
  ""client_name"": {
    ""Unknown"": 282
  },
  ""ip_type"": {
    ""Unknown"": 132,
    ""hosting"": 129,
    ""proxy"": 21
  }
}"
0ByVXNA7,Sezzadactyl Wizard,marshallsmyth,HTML 5,Wednesday 22nd of November 2023 06:17:49 PM CDT,"

<!DOCTYPE html>   <html lang=""en"">   <head>   <meta name=""viewport"" content=""width=device-width, initial-scale=1""><title>Sezzadactyl Wizard ZOOM BACK TO 67%</title> 
  <style>@import url(https://fonts.googleapis.com/css?family=Gochi+Hand|Kolker+Brush|Luckiest+Guy|Rokkitt);

 #but1,#but2,#but3,#but4{display:none;}
 body{max-width:max-content;margin:auto;scrollbar-color:#333 transparent;color:#209;font-family:""gochi hand"", ""luckiest guy"", ""kolker brush"";
 background-image:url(https://i.gyazo.com/cb8f029934ec9829a4c9163f01d02239.png);background-repeat:no-repeat;background-size:cover;}  
 ::-webkit-scrollbar { width:0.5vw;height:2vh; } ::-webkit-scrollbar-track {background:#115; } 
 ::-webkit-scrollbar-thumb { background:#511; }        body {background:#100;overflow:hidden;}    
 
 h3{margin:0;text-decoration:underline wavy #901;}
 #tab1,#tab2,#tab3,#tab4{display:none;max-height:61vh;overflow-y:scroll;font-size:150%;background:rgba(50,0,20,0.7);
 border:transparent 0px ridge;border-radius:5px;margin:0;position:absolute;top:50%;left:50%;transition:3s;
 -ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);padding:-15vh 0 13vh 0;font-weight:bold;}
 #tab1:hover, #tab2:hover, #tab3:hover, #tab4:hover {filter:hue-rotate(60deg)}

 #but1:checked ~ #tab1,#but2:checked ~ #tab2,#but3:checked ~ #tab3,#but4:checked ~ #tab4{display:block;}
 #but1:checked ~ #bg{background-image:url(https://i.gyazo.com/cb8f029934ec9829a4c9163f01d02239.png);}
 #but2:checked ~ #bg{background-image:url(https://i.gyazo.com/292fd3e43b97b98922a3c693e4d85e52.jpg);}
 #but3:checked ~ #bg{background-image:url(https://i.gyazo.com/3647db083e1ab76d965a993e6726e898.jpg);}
 #but4:checked ~ #bg{background-image:url(https://i.gyazo.com/5387bd7de7d7e1ad2da478dc07361361.jpg);}
 #bg{z-index:-1;background-repeat:no-repeat;background size:cover;position:fixed;top:0vh;left:0;bottom:2vh;right:0; 
 width:100%;height:100%;border:0;margin:0;padding:0;overflow:hidden}
 .lab{display:block;margin:0;position:relative;margin-top:6vh;float:left;margin-left:1vh;margin-right:1vh;padding:3vh;color:inherit;
 background:#201;font-size:180%;font-weight:bold;border:transparent 0px ridge;border-radius:11px;transition:3s;}
 .lab:hover{filter:hue-rotate(400deg)}

 </style>

 <input type=""radio"" checked name=""but"" id=""but1""><label for=""but1"" class=""lab"" data-tilt>About Me</label>
 <input type=""radio"" name=""but"" id=""but2""><label for=""but2"" class=""lab"" data-tilt>History</label>
 <input type=""radio"" name=""but"" id=""but3""><label for=""but3"" class=""lab"" data-tilt>Gallery</label>
 <input type=""radio"" name=""but"" id=""but4""><label for=""but4"" class=""lab"" data-tilt>OOC</label>
 <div id='bg'></div>  <div id='tab1'><table style='font-size:inherit'><tr><td>
 <img data-tilt src='https://i.ibb.co/T8fxKyx/DS2-BR-hero.webp' style='float:left;max-width:30vw;max-height:20vw;padding-right:2vh;'>
 </td><td>
 <h3>My Character</h3><table cellspacing='1' style='font-size:inherit;width:390px'><tr>
 <td align='left'><b>Name:</b></td>
 <td align='right'>Hibiki Kuze</td></tr><tr>
 <td align='left'><b>Age:</b></td>
 <td align='right'>18 years old</td></tr><tr>
 <td align='left'><b>Race:</b></td>
 <td align='right'>Human</td></tr><tr>
 <td align='left'><b>Height:</b></td>
 <td align='right'>5'7</td></tr><tr>
 <td align='left'><b>Cell Phone Color:</b></td>
 <td align='right'>Blue</td></tr><tr>
 <td align='left'><b>Orientation:</b></td>
 <td align='right'>Females and Futa</td></tr><tr>
 <td align='left'><b>PP Size:</b></td>
 <td align='right'>7 inches</td></tr></table>
 </td></tr></table></div>
 <div id='tab2'><h3>History</h3><br></div>
 <div id='tab3'><h3>Gallery</h3><br><center>
 
 <a target='_blank' href='https://i.ibb.co/brdjVTp/1c8325a2907730529ce942aef81a3b33.jpg' target='_blank'>
 <img src='https://i.ibb.co/brdjVTp/1c8325a2907730529ce942aef81a3b33.jpg' height='150px'></a>

 <a target='_blank' href='https://i.ibb.co/17j01JK/Kingmaker-Ending.webp' target='_blank'>
 <img src='https://i.ibb.co/17j01JK/Kingmaker-Ending.webp' height='150px'></a>

 <a target='_blank' href='https://i.ibb.co/RvRMPVt/Liberator-Ending.webp' target='_blank'>
 <img src='https://i.ibb.co/RvRMPVt/Liberator-Ending.webp' height='150px'></a>

 <a target='_blank' href='https://i.ibb.co/WgdFnv4/Triumphant-Ending.webp' target='_blank'>
 <img src='https://i.ibb.co/WgdFnv4/Triumphant-Ending.webp' height='150px'></a>

 <a target='_blank' href='https://i.ibb.co/Sw38dSq/sample-cab99c13a4cfafcee9865c8c35a7a908.jpg' target='_blank'>
 <img src='https://i.ibb.co/Sw38dSq/sample-cab99c13a4cfafcee9865c8c35a7a908.jpg' height='150px'></a>

 </center> </div>
 <div id='tab4'><h3>OOC</h3><br>I love code generators.<br>
 <br>RP is not real life.<br>
 <br>Pesto does not belong on food.<br>
 <br>Yes, the history is copy-pasted.<br>
 <br> I usually play Hibiki post-game using the combined Triumphant/Kingmaker ending shown in the Triangulum Arc and retaining the Demon 
 Summoning Program along with the demons/abilities attached to it, but I'm perfectly willing to play him during the events of the game 
 or in thepostgame of any other ending.</div>


"
zfgBPtvP,2023-11-22_stats.json,rdp_snitch,JSON,Wednesday 22nd of November 2023 06:16:12 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 46,
    ""45.227.254.8"": 4,
    ""67.217.59.233"": 2,
    ""205.210.31.53"": 6,
    ""58.218.204.183"": 10,
    ""36.91.222.100"": 6,
    ""194.165.16.37"": 4,
    ""203.150.11.133"": 4,
    ""67.133.192.80"": 2,
    ""103.245.236.116"": 8,
    ""205.210.31.70"": 6,
    ""149.28.70.189"": 4,
    ""51.75.160.42"": 12,
    ""139.162.175.215"": 8,
    ""194.165.16.76"": 4,
    ""178.32.197.84"": 2,
    ""213.32.39.32"": 2,
    ""103.231.59.163"": 8,
    ""198.235.24.143"": 6,
    ""20.212.59.140"": 14,
    ""195.78.54.58"": 2,
    ""165.154.182.219"": 2,
    ""176.113.115.58"": 2,
    ""212.70.149.146"": 2,
    ""45.227.254.48"": 4,
    ""94.232.41.30"": 2,
    ""198.235.24.216"": 6,
    ""50.118.145.49"": 2,
    ""162.55.82.108"": 6,
    ""162.209.206.10"": 2
  },
  ""asn"": {
    ""AS48721"": 54,
    ""AS267784"": 8,
    ""AS19318"": 2,
    ""AS396982"": 24,
    ""AS4134"": 10,
    ""AS7713"": 6,
    ""AS4618"": 4,
    ""AS209"": 2,
    ""AS150867"": 8,
    ""AS20473"": 4,
    ""AS16276"": 16,
    ""AS63949"": 8,
    ""AS132335"": 8,
    ""AS8075"": 14,
    ""AS174"": 2,
    ""AS135377"": 2,
    ""AS57678"": 2,
    ""AS204428"": 2,
    ""AS208091"": 2,
    ""AS149440"": 2,
    ""AS24940"": 6,
    ""AS40065"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 62,
    ""Interserver, Inc"": 2,
    ""Google LLC"": 24,
    ""Chinanet"": 10,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Internet Thailand Public Company Limited"": 4,
    ""CenturyLink"": 2,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 8,
    ""The Constant Company"": 4,
    ""OVH SAS"": 16,
    ""Akamai Technologies, Inc."": 8,
    ""LeapSwitch Networks Pvt Ltd"": 8,
    ""Microsoft Corporation"": 14,
    ""Cogent Communications"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Cat Technologies Co. Limited"": 2,
    ""SS-Net"": 2,
    ""Xhost Internet Solutions LP"": 2,
    ""EGIHosting"": 2,
    ""Hetzner Online GmbH"": 6,
    ""CloudRadium L.L.C"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 54,
    ""UAB Host Baltic"": 8,
    ""Host Department NJ, LLC"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Chinanet JS"": 10,
    ""Telekomunikasi Indonesia"": 6,
    ""INET"": 4,
    ""CenturyLink, Inc"": 2,
    ""LP Technology Electronic Commerce Company Limited"": 8,
    ""Vultr Holdings, LLC"": 4,
    ""OVH Ltd"": 12,
    ""Linode, LLC"": 8,
    ""ONYPHE"": 4,
    ""IPXO"": 8,
    ""Microsoft Azure Cloud (southeastasia)"": 14,
    ""Freedomtech Solutions Ltd"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Cat Technologies Co. Limited"": 2,
    ""4Media Ltd"": 2,
    ""Dmitriy Panchenko"": 2,
    ""Evoxt"": 2,
    ""Hetzner"": 6,
    ""zhang san"": 2
  },
  ""regionName"": {
    ""Kaunas"": 54,
    ""Vilnius"": 8,
    ""New Jersey"": 2,
    ""California"": 34,
    ""Jiangsu"": 10,
    ""Jakarta"": 6,
    ""Bangkok"": 4,
    ""New York"": 2,
    ""Ho Chi Minh"": 8,
    ""England"": 12,
    ""Hesse"": 8,
    ""Hauts-de-France"": 4,
    ""Maharashtra"": 8,
    ""Central Singapore"": 14,
    ""North Holland"": 2,
    ""Moscow"": 2,
    ""Plovdiv"": 2,
    ""Perm Krai"": 2,
    ""Saxony"": 6
  },
  ""country"": {
    ""Lithuania"": 62,
    ""United States"": 38,
    ""China"": 10,
    ""Indonesia"": 6,
    ""Thailand"": 4,
    ""Vietnam"": 8,
    ""United Kingdom"": 12,
    ""Germany"": 14,
    ""France"": 4,
    ""India"": 8,
    ""Singapore"": 14,
    ""The Netherlands"": 2,
    ""Russia"": 4,
    ""Bulgaria"": 2
  },
  ""account"": {
    ""hello"": 114,
    ""Test"": 34,
    ""EKplaKhyB"": 2,
    ""huQxpb"": 2,
    ""EWSZqo"": 2,
    ""bevtbKUSG"": 2,
    ""VYviwd"": 2,
    ""eiSpAW"": 2,
    ""(empty)"": 10,
    ""Administrator"": 6,
    ""XZcliMaoT"": 2,
    ""Ilmsmd"": 2,
    ""QpnDHv"": 2,
    ""KnjGdVBCH"": 2,
    ""NENHMK"": 2,
    ""daPgRE"": 2
  },
  ""keyboard"": {
    ""Unknown"": 188
  },
  ""client_build"": {
    ""Unknown"": 188
  },
  ""client_name"": {
    ""Unknown"": 188
  },
  ""ip_type"": {
    ""Unknown"": 88,
    ""hosting"": 86,
    ""proxy"": 14
  }
}"
A1fZwmyB,2023-11-22_stats.json,rdp_snitch,JSON,Wednesday 22nd of November 2023 06:15:08 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 23,
    ""45.227.254.8"": 2,
    ""67.217.59.233"": 1,
    ""205.210.31.53"": 3,
    ""58.218.204.183"": 5,
    ""36.91.222.100"": 3,
    ""194.165.16.37"": 2,
    ""203.150.11.133"": 2,
    ""67.133.192.80"": 1,
    ""103.245.236.116"": 4,
    ""205.210.31.70"": 3,
    ""149.28.70.189"": 2,
    ""51.75.160.42"": 6,
    ""139.162.175.215"": 4,
    ""194.165.16.76"": 2,
    ""178.32.197.84"": 1,
    ""213.32.39.32"": 1,
    ""103.231.59.163"": 4,
    ""198.235.24.143"": 3,
    ""20.212.59.140"": 7,
    ""195.78.54.58"": 1,
    ""165.154.182.219"": 1,
    ""176.113.115.58"": 1,
    ""212.70.149.146"": 1,
    ""45.227.254.48"": 2,
    ""94.232.41.30"": 1,
    ""198.235.24.216"": 3,
    ""50.118.145.49"": 1,
    ""162.55.82.108"": 3,
    ""162.209.206.10"": 1
  },
  ""asn"": {
    ""AS48721"": 27,
    ""AS267784"": 4,
    ""AS19318"": 1,
    ""AS396982"": 12,
    ""AS4134"": 5,
    ""AS7713"": 3,
    ""AS4618"": 2,
    ""AS209"": 1,
    ""AS150867"": 4,
    ""AS20473"": 2,
    ""AS16276"": 8,
    ""AS63949"": 4,
    ""AS132335"": 4,
    ""AS8075"": 7,
    ""AS174"": 1,
    ""AS135377"": 1,
    ""AS57678"": 1,
    ""AS204428"": 1,
    ""AS208091"": 1,
    ""AS149440"": 1,
    ""AS24940"": 3,
    ""AS40065"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 31,
    ""Interserver, Inc"": 1,
    ""Google LLC"": 12,
    ""Chinanet"": 5,
    ""PT Telekomunikasi Indonesia"": 3,
    ""Internet Thailand Public Company Limited"": 2,
    ""CenturyLink"": 1,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 4,
    ""The Constant Company"": 2,
    ""OVH SAS"": 8,
    ""Akamai Technologies, Inc."": 4,
    ""LeapSwitch Networks Pvt Ltd"": 4,
    ""Microsoft Corporation"": 7,
    ""Cogent Communications"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Cat Technologies Co. Limited"": 1,
    ""SS-Net"": 1,
    ""Xhost Internet Solutions LP"": 1,
    ""EGIHosting"": 1,
    ""Hetzner Online GmbH"": 3,
    ""CloudRadium L.L.C"": 1
  },
  ""org"": {
    ""Flyservers S.A"": 27,
    ""UAB Host Baltic"": 4,
    ""Host Department NJ, LLC"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Chinanet JS"": 5,
    ""Telekomunikasi Indonesia"": 3,
    ""INET"": 2,
    ""CenturyLink, Inc"": 1,
    ""LP Technology Electronic Commerce Company Limited"": 4,
    ""Vultr Holdings, LLC"": 2,
    ""OVH Ltd"": 6,
    ""Linode, LLC"": 4,
    ""ONYPHE"": 2,
    ""IPXO"": 4,
    ""Microsoft Azure Cloud (southeastasia)"": 7,
    ""Freedomtech Solutions Ltd"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Cat Technologies Co. Limited"": 1,
    ""4Media Ltd"": 1,
    ""Dmitriy Panchenko"": 1,
    ""Evoxt"": 1,
    ""Hetzner"": 3,
    ""zhang san"": 1
  },
  ""regionName"": {
    ""Kaunas"": 27,
    ""Vilnius"": 4,
    ""New Jersey"": 1,
    ""California"": 17,
    ""Jiangsu"": 5,
    ""Jakarta"": 3,
    ""Bangkok"": 2,
    ""New York"": 1,
    ""Ho Chi Minh"": 4,
    ""England"": 6,
    ""Hesse"": 4,
    ""Hauts-de-France"": 2,
    ""Maharashtra"": 4,
    ""Central Singapore"": 7,
    ""North Holland"": 1,
    ""Moscow"": 1,
    ""Plovdiv"": 1,
    ""Perm Krai"": 1,
    ""Saxony"": 3
  },
  ""country"": {
    ""Lithuania"": 31,
    ""United States"": 19,
    ""China"": 5,
    ""Indonesia"": 3,
    ""Thailand"": 2,
    ""Vietnam"": 4,
    ""United Kingdom"": 6,
    ""Germany"": 7,
    ""France"": 2,
    ""India"": 4,
    ""Singapore"": 7,
    ""The Netherlands"": 1,
    ""Russia"": 2,
    ""Bulgaria"": 1
  },
  ""account"": {
    ""hello"": 57,
    ""Test"": 17,
    ""EKplaKhyB"": 1,
    ""huQxpb"": 1,
    ""EWSZqo"": 1,
    ""bevtbKUSG"": 1,
    ""VYviwd"": 1,
    ""eiSpAW"": 1,
    ""(empty)"": 5,
    ""Administrator"": 3,
    ""XZcliMaoT"": 1,
    ""Ilmsmd"": 1,
    ""QpnDHv"": 1,
    ""KnjGdVBCH"": 1,
    ""NENHMK"": 1,
    ""daPgRE"": 1
  },
  ""keyboard"": {
    ""Unknown"": 94
  },
  ""client_build"": {
    ""Unknown"": 94
  },
  ""client_name"": {
    ""Unknown"": 94
  },
  ""ip_type"": {
    ""Unknown"": 44,
    ""hosting"": 43,
    ""proxy"": 7
  }
}"
EL02FJLr,Untitled,Week045,Python,Wednesday 22nd of November 2023 05:45:30 PM CDT,"import sys
import serial
from PyQt5.QtWidgets import QApplication, QMainWindow, QWidget, QComboBox, QLabel, QLineEdit, QTextEdit, QMessageBox, \
    QPushButton
from PyQt5.QtCore import QThread, pyqtSignal, Qt, QTimer
from PyQt5.QtGui import QFont, QTextCursor, QTextCharFormat
from PyQt5 import QtCore


class SerialDataReader(QThread):
    data_received = pyqtSignal(bytes)

    def __init__(self, serial_port):
        super().__init__()
        self.serial_port = serial_port
        self.running = True

    def stop(self):
        self.running = False

    def run(self):
        while self.running:
            if self.should_emit_data():
                data = self.read_data()
                self.data_received.emit(data)

    def should_emit_data(self):
        return self.serial_port and self.serial_port.is_open

    def read_data(self):
        return self.serial_port.read(self.serial_port.in_waiting)


class TextEditCustom(QTextEdit):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.cursor_position = QTextCursor.End

    def keyPressEvent(self, event):
        if event.key() == Qt.Key_Backspace:
            event.ignore()
        else:
            super().keyPressEvent(event)
            self.move_cursor_to_end()

    def move_cursor_to_end(self):
        cursor = self.textCursor()
        cursor.movePosition(QTextCursor.End)
        self.setTextCursor(cursor)


def serial_ports():
    ports = ['COM%s' % (i + 1) for i in range(9)]
    result = []
    for port in ports:
        try:
            s = serial.Serial(port, 9600)
            s.close()
            result.append(port[3::])
        except (OSError, serial.SerialException):
            pass
    return result


class SerialCommunicationWindow(QMainWindow):
    error_occurred = pyqtSignal()

    def __init__(self):
        super().__init__()

        self.serial_port = None
        self.serial_baudrate = 9600
        self.serial_stopbits = serial.STOPBITS_ONE
        self.serial_data_bits = serial.EIGHTBITS
        self.serial_parity = serial.PARITY_NONE
        self.serial_flow_control = False
        self.serial_read_timeout = None
        self.serial_write_timeout = None

        font = QFont(""Times New Roman"", 12)

        app = QApplication.instance()
        if not app:
            app = QApplication([])

        app.setFont(font)

        self.resize(609, 530)
        self.setMinimumSize(1000, 530)
        self.setMaximumSize(1001, 530)
        # self.setFixedSize(QSize(609, 530))
        # self.setFixedWidth(609)
        # self.setFixedHeight(530)

        self.central_widget = QWidget(self)
        self.setCentralWidget(self.central_widget)
        self.central_widget.setStyleSheet(""background-color: #73B1F4;"")

        self.input_label = QLabel('Input:', self.central_widget)
        self.input_label.setGeometry(QtCore.QRect(30, 10, 121, 21))
        self.input_label.setFont(font)
        self.input_label.setAlignment(Qt.AlignCenter)  # выравнивание по центру
        self.input_label.setGeometry(QtCore.QRect(30, 10, 351, 21))
        self.input_message = TextEditCustom(self.central_widget)
        self.input_message.setGeometry(QtCore.QRect(30, 50, 351, 161))
        self.input_message.setFont(font)
        self.input_message.setStyleSheet(""background-color: lightBlue;"")

        self.output_label = QLabel('Output:', self.central_widget)
        self.output_label.setGeometry(QtCore.QRect(30, 300, 121, 21))
        self.output_label.setFont(font)
        self.output_label.setAlignment(Qt.AlignCenter)
        self.output_label.setGeometry(QtCore.QRect(30, 300, 351, 21))
        self.output_message = QTextEdit(self.central_widget)
        self.output_message.setReadOnly(True)
        self.output_message.setGeometry(QtCore.QRect(30, 340, 351, 161))
        self.output_message.setFont(font)
        self.output_message.setStyleSheet(""background-color: lightBlue;"")

        self.com_port_label = QLabel('COM port:', self.central_widget)
        self.com_port_label.setGeometry(QtCore.QRect(410, 50, 110, 21))
        self.com_port_label.setFont(font)
        self.com_port_input = QLineEdit(self.central_widget)
        self.com_port_input.setGeometry(QtCore.QRect(520, 50, 50, 22))
        self.com_port_input.setStyleSheet(""background-color: lightBlue;"")

        self.stopbits_label = QLabel('Stop bits:', self.central_widget)
        self.stopbits_label.setGeometry(QtCore.QRect(410, 90, 110, 21))
        self.stopbits_label.setFont(font)
        self.stopbits_input = QComboBox(self.central_widget)
        self.stopbits_input.setGeometry(QtCore.QRect(520, 90, 60, 22))
        self.stopbits_input.addItems(['1', '1.5', '2'])
        self.stopbits_input.setStyleSheet(""background-color: lightBlue;"")

        self.bytes_received_label = QLabel('Bytes received:', self.central_widget)
        self.bytes_received_label.setGeometry(QtCore.QRect(410, 370, 220, 21))
        self.bytes_received_label.setFont(font)
        self.bytes_received_value = QLabel('0', self.central_widget)
        self.bytes_received_value.setGeometry(QtCore.QRect(537, 370, 230, 21))

        self.baudrate_label = QLabel('Baudrate:', self.central_widget)
        self.baudrate_label.setGeometry(QtCore.QRect(410, 340, 120, 21))
        self.baudrate_label.setFont(font)
        self.baudrate_value = QLabel(str(self.serial_baudrate), self.central_widget)
        self.baudrate_value.setGeometry(QtCore.QRect(500, 340, 130, 21))

        self.kadr_label = QLabel('Packet structure:', self.central_widget)
        self.kadr_label.setGeometry(QtCore.QRect(410, 400, 140, 21))
        self.kadr_window = QTextEdit(self.central_widget)
        self.kadr_window.setGeometry(QtCore.QRect(410, 430, 560, 70))
        # self.output_message.setGeometry(QtCore.QRect(30, 340, 351, 161))
        self.kadr_window.setReadOnly(True)
        self.kadr_window.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.kadr_window.setStyleSheet(""background-color: lightBlue;"")

        clear_button = QPushButton('Clear', self.central_widget)
        clear_button.setGeometry(150, 240, 110, 30)
        clear_button.setFont(font)
        clear_button.clicked.connect(self.clear_text_areas)
        clear_button.setStyleSheet(""background-color: lightBlue;"")

        self.keyword_combinations = [""kw2"", ""kw1""]

        self.available_com_ports = serial_ports()
        self.last_used_port_index = 0
        self.previous_port = None
        self.user_ports = []

        if self.available_com_ports:
            self.set_available_port()

        self.text_to_send = """"

        self.error_occurred.connect(self.handle_error)
        self.stopbits_input.currentIndexChanged.connect(
            lambda index: setattr(self, 'serial_stopbits', float(self.stopbits_input.itemText(index))))
        self.com_port_input.textChanged.connect(self.connection)
        self.input_message.textChanged.connect(self.send_data)

    def clear_text_areas(self):
        self.input_message.clear()
        self.output_message.clear()

    def set_available_port(self):
        for i in range(self.last_used_port_index, len(self.available_com_ports)):
            try:
                s = serial.Serial('COM' + self.available_com_ports[i], 9600)
                s.close()
                self.com_port_input.setText(self.available_com_ports[i])
                self.last_used_port_index = i + 1
                self.connection()
                break
            except serial.SerialException:
                continue

    def connection(self):
        port_number_str = self.com_port_input.text()

        if not port_number_str:
            QMessageBox.critical(self, 'Error', ""Please enter a valid COM port number."")
            return

        try:
            port_number = int(port_number_str)
            if not (1 <= port_number <= 9):
                QMessageBox.critical(self, 'Error', ""COM port number should be between 1 and 9."")
                return

            port_name = f'COM{port_number}'
        except ValueError:
            QMessageBox.critical(self, 'Error', ""Please enter a valid numeric COM port number."")
            return

        self.previous_port = port_number_str
        if self.previous_port not in self.user_ports:
            self.user_ports.append(self.previous_port)

        try:
            self.disconnection()
            self.setup_serial_port(port_name)
            self.start_read()
        except serial.SerialException as e:
            error_message = str(e)
            if ""FileNotFoundError"" in error_message:
                error_message = ""COM port not found!""
            QMessageBox.critical(self, 'Error', error_message)
            QTimer.singleShot(1000, self.error_occurred.emit)

    def handle_error(self):
        if self.user_ports:
            for port in self.user_ports:
                if port in self.available_com_ports:
                    self.com_port_input.setText(port)
                    QTimer.singleShot(1000, lambda: self.connection())  # Add a delay before reconnecting
                    return
        QTimer.singleShot(1000, lambda: self.set_available_port())  # Add a delay before setting an available port

    def setup_serial_port(self, port_name):
        self.serial_port = serial.Serial(
            port_name,
            self.serial_baudrate,
            stopbits=self.serial_stopbits,
            bytesize=self.serial_data_bits,
            parity=self.serial_parity,
            xonxoff=self.serial_flow_control,
            timeout=self.serial_read_timeout,
            write_timeout=self.serial_write_timeout
        )

    def start_read(self):
        self.read_thread = SerialDataReader(self.serial_port)
        self.read_thread.data_received.connect(self.data_received)
        self.read_thread.start()

    def disconnection(self):
        if self.serial_port:
            self.read_thread.stop()
            self.serial_port.close()
            self.serial_port = None


    ###############################################################################
    def send_data(self):
        packet_length = 31
        if self.serial_port:
            text = self.input_message.toPlainText()
            if text:
                self.text_to_send += text[-1]
                while len(self.text_to_send) >= packet_length:
                    data_to_send = self.create_packet(self.text_to_send[:packet_length])
                    self.text_to_send = self.text_to_send[packet_length:]
                    self.show_packet(data_to_send)
                    self.serial_port.write(data_to_send.encode())

    ################################################################################
    def data_received(self, data):
        if self.serial_port:
            self.bytes_received_value.setText(
                str(int(self.bytes_received_value.text()) + len(data)))
            data = self.byte_destuffing(data[1::].decode())
            self.output_message.moveCursor(QTextCursor.End)
            self.output_message.insertPlainText(data[3:-1])

    ################################################################################
    def show_packet(self, data):
        data = data.replace('\n', '\\n')
        self.kadr_window.clear()
        cursor = self.kadr_window.textCursor()
        cursor.beginEditBlock()
        cursor.movePosition(QTextCursor.End)

        format = QTextCharFormat()
        format.setFontWeight(QFont.Bold)
        format.setForeground(Qt.blue)
        normal_format = QTextCharFormat()
        normal_format.setFontWeight(QFont.Normal)
        normal_format.setForeground(Qt.black)

        i = 0
        while i < len(data):
            if any(data[i:i + len(keyword)] == keyword for keyword in self.keyword_combinations):
                for keyword in self.keyword_combinations:
                    if data[i:i + len(keyword)] == keyword:
                        cursor.setCharFormat(format)
                        cursor.insertText(data[i:i + len(keyword)])
                        i += len(keyword)
                        break
            else:
                cursor.setCharFormat(normal_format)
                cursor.insertText(data[i])
                i += 1
        cursor.endEditBlock()

    def byte_stuffing(self, data):

        data = data.replace('$', 'kw2')
        data = data.replace('#x', 'kw1')
        return data

    def byte_destuffing(self, data):
        data = data.replace('kw1', '#x')
        data = data.replace('kw2', '$')
        return data

    def create_packet(self, data):
        n = 24
        flag = '#' + chr(ord('a') + n - 1)
        source_address = self.com_port_input.text()
        destination_address = '0'
        fcs = '0'
        packet = destination_address + source_address + data + fcs
        print(packet)
        packet = self.byte_stuffing(packet)
        print(packet)
        packet = flag + packet
        print(packet)
        return packet

    def closeEvent(self, event):
        if self.serial_port:
            self.read_thread.stop()
            self.serial_port.close()
            self.serial_port = None
        event.accept()


if __name__ == '__main__':
    app = QApplication(sys.argv)
    window = SerialCommunicationWindow()
    window.show()
    sys.exit(app.exec_())
"
WzPpXsLL,Syntax Highlighter.html,Mangus875,HTML,Wednesday 22nd of November 2023 04:43:27 PM CDT,"<!DOCTYPE html>

<html>
	<head>
		<title>Syntax Highlighter</title>
		
		<link rel=""stylesheet"" href=""styles.css""/>
		<script src='script.js'></script>
	</head>
	
	<body>
		<br><br>
		<span class='brainfuck' contenteditable>->,[[->+<]>-]+[<+]>->[>]<<[>[-<+>]<<]</span>
		<br>
		<span class='brainfuck'>+[>+] this is a memory leak</span>
	</body>
</html>"
rQ0dEMTw,Syntax Highlighter.css,Mangus875,CSS,Wednesday 22nd of November 2023 04:43:03 PM CDT,"body {
	--bg-color:       #222;
	--default-color:  #fff;
	--comment-color:  #888;
	--shift-color:    #00a0bf;
	--edit-color:     #cf0700; /* cf0700 */
	--loop-color:     #fcba03; /* #07cf00 */
	--io-color:       #cf00b6;
	
	background-color: var(--bg-color);
	margin: 30px;
	font-size: 48px;
}

.brainfuck {
	font-family: Consolas;
	color: var(--default-color);
}

.brainfuck .comment {
	color: var(--comment-color);
	/* font-weight: normal; */
}

.brainfuck .shift {
	color: var(--shift-color);
}

.brainfuck .edit {
	color: var(--edit-color);
}

.brainfuck .loop {
	color: var(--loop-color);
	font-weight: bold;
}

.brainfuck .io {
	color: var(--io-color);
}"
37b1syTs,Syntax Highlighter.js,Mangus875,JavaScript,Wednesday 22nd of November 2023 04:42:37 PM CDT,"function recolor() {
	let bf = document.querySelectorAll("".brainfuck"");
	bf.forEach((code) => {
		var start = code.selectionStart;
    var end = code.selectionEnd;
		// console.log(start);
		
		let curCode = code.innerText;
		let newCode = """";
		
		let lastCode = '';
		for (let i = 0; i < curCode.length; i++) {
			let c = curCode.charAt(i);
			let codeType = 'comment';
			
			switch(c) {
				case '>':
				case '<':
					codeType = 'shift';
					break;
					
				case '.':
				case ',':
					codeType = 'io';
					break;
					
				case '[':
				case ']':
					codeType = 'loop';
					break;
					
				case '+':
				case '-':
					codeType = 'edit';
					break;
			}
			
			if (codeType != lastCode) {
				if (i != 0) {
					newCode += '</span>';
				}
				newCode += `<span class='${codeType}'>`;
			}
			newCode += c;
			lastCode = codeType;
		}
		newCode += ""</span>"";
		code.innerHTML = newCode;
	});
}

window.onload = () => {	
	recolor();
	setInterval(()=> {
		recolor();
	}, 50);
}"
shABahfQ,01. Fun Sequence,Spocoman,C++,Wednesday 22nd of November 2023 04:38:40 PM CDT,"#include <iostream>
#include <algorithm>

using namespace std;

int main() {
    int arrLen, sumNumbers = 0, averageNum;
    cin >> arrLen;

    int* numbers = new int[arrLen];

    for (size_t i = 0; i < arrLen; i++) {
        cin >> numbers[i];
        sumNumbers += numbers[i];
    }

    sort(numbers, numbers + arrLen, greater<int>());
    averageNum = (double)sumNumbers / arrLen;

    if (numbers[arrLen - 1] >= averageNum) {
        cout << ""No"";
    }
    else {
        for (size_t i = 0; i < arrLen; i++) {
            if (numbers[i] < averageNum && numbers[i] % 2 == 0) {
                cout << numbers[i] << ' ';
            }
        }
    }
    cout << endl;
    return 0;
}"
aW4R9MjA,dynamic AERENDER MP4/PNG + WEBM/WEBP convert,_moelle,Batch,Wednesday 22nd of November 2023 04:29:46 PM CDT,"@echo off
setlocal EnableDelayedExpansion

set ""scriptPath=%~dp0""
set ""Folder=%scriptPath%""
::set ""Folder=C:\data_driven_ae_template-1""

set ""RenderedFolder=%Folder%\_rendered""

set ""outputFolderWebm=%RenderedFolder%\_webm""
set ""outputFolderWebp=%RenderedFolder%\_webp""

REM Use all .aep files inside of the scripts location that use the prefix ""comp_"" 
REM ignore files that include blanks (spaces) in their names
for %%i in (%Folder%\comp_*.aep) do (
   echo %%i | findstr "" "" > nul
      if errorlevel 1 (
         for /f ""delims=."" %%a in (""%%~ni"") do set ""compName=%%a""
            set ""inputFile=%%i""
            echo !inputFile!
            echo !compName!
			REM thumbnail-export of frame 0 as PNG 
            AERENDER -project ""!inputFile!"" -comp ""!compName!"" -s 0 -e 0 -RStemplate ""Best Settings"" -OMtemplate ""PNG"" -output ""%Folder%\_rendered\!compName!_[#].png""
            AERENDER -project ""!inputFile!"" -comp ""!compName!_square"" -s 0 -e 0 -RStemplate ""Best Settings"" -OMtemplate ""PNG"" -output ""%Folder%\_rendered\!compName!_square_[#].png""
            AERENDER -project ""!inputFile!"" -comp ""!compName!_1920"" -s 0 -e 0 -RStemplate ""Best Settings"" -OMtemplate ""PNG"" -output ""%Folder%\_rendered\!compName!_1920_[#].png""
			REM video-export as MP4 
            AERENDER -project ""!inputFile!"" -comp ""!compName!"" -RStemplate ""Best Settings"" -mp -continueOnMissingFootage -mem_usage ""100"" ""100"" -OMtemplate ""MP4"" -output ""%Folder%\_rendered\!compName!.mp4""
            AERENDER -project ""!inputFile!"" -comp ""!compName!_square"" -RStemplate ""Best Settings"" -mp -continueOnMissingFootage -mem_usage ""100"" ""100"" -OMtemplate ""MP4"" -output ""%Folder%\_rendered\!compName!_square.mp4""
            AERENDER -project ""!inputFile!"" -comp ""!compName!_1920"" -RStemplate ""Best Settings"" -mp -continueOnMissingFootage -mem_usage ""100"" ""100"" -OMtemplate ""MP4"" -output ""%Folder%\_rendered\!compName!_1920.mp4""
      )
)
REM create output folders for webp and webm if not existing
if not exist ""%outputFolderWebp%"" mkdir ""%outputFolderWebp%"" 
if not exist ""%outputFolderWebm%"" mkdir ""%outputFolderWebm%""
REM webp conversion
for %%i in (%RenderedFolder%\*.png) do (
    set ""inputFile=%%i""
    echo Processing PNG: !inputFile!
    
    for /f ""delims=."" %%a in (""%%~ni"") do (
        set ""name=%%a""
        set ""name=!name:~0,-2!""  
        REM Strip the last two characters
    )
    echo !name!
	
    ffmpeg -i ""!inputFile!"" -y ""%outputFolderWebp%\!name!.webp""
)
REM webm conversion
for %%i in (%RenderedFolder%\*.mp4) do (
    set ""inputFile=%%i""
    for /f ""delims=."" %%a in (""%%~ni"") do set ""name=%%a""
    echo !name!
	ffmpeg -i ""!inputFile!"" -y -c:v libvpx-vp9 -crf 28 -b:v 0 -b:a 128k -c:a libopus ""%outputFolderWebm%\!name!.webm""
)

echo Conversion complete.
::cmd /k
exit"
WNHMRqPY,Untitled,HLSC5192,Python,Wednesday 22nd of November 2023 04:27:42 PM CDT,"class Sample(ModelSQL, ModelView):
    ""Sample""
    __name__ = 'sample'

    name = fields.Char(""Name"")
    slides = fields.One2Many('slide', 'sample', ""Slides"")
    
    # Esto es lo nuevo
    diseases = fields.One2Many('disease', 'sample', ""Diseases"")
    
    
class Slide(ModelSQL, ModelView):
    ""Slide""
    __name__ ='slide'
    
    name = fields.Char(""Name"")
    sample = fields.Many2One('sample', ""Sample"")
    diseases = fields.One2Many('disease', 'slide', ""Diseases"")
    
    
class Disease(ModelSQL, ModelView):
    ""Disease""
    __name__ = 'disease'
    
    name = fields.Char(""Name"")
    slide = fields.Many2One('slide', ""Slide"")
    
    # Esto es lo nuevo
    sample = fields.Many2One('sample', ""Sample"")
    
    @classmethod
    def __register__(cls, module_name):
        table = cls.__table__()

        super(MicroscopicDescription, cls).__register__(module_name)

        # Migration from 6.0.1 fill sample
        cursor = Transaction().connection.cursor()
        cursor.execute(*table.update(
            [table.sample], [table.slide.sample.id],
            where=table.sample == Null))


# Error
Traceback (most recent call last):
  File ""/home/leandro/WorkSpace/venvs/spc/bin/trytond-admin"", line 23, in <module>
    admin.run(options)
  File ""/home/leandro/WorkSpace/venvs/spc/lib/python3.11/site-packages/trytond/admin.py"", line 53, in run
    pool.init(update=options.update, lang=list(lang),
  File ""/home/leandro/WorkSpace/venvs/spc/lib/python3.11/site-packages/trytond/pool.py"", line 164, in init
    restart = not load_modules(
                  ^^^^^^^^^^^^^
  File ""/home/leandro/WorkSpace/venvs/spc/lib/python3.11/site-packages/trytond/modules/__init__.py"", line 443, in load_modules
    _load_modules(update)
  File ""/home/leandro/WorkSpace/venvs/spc/lib/python3.11/site-packages/trytond/modules/__init__.py"", line 411, in _load_modules
    load_module_graph(graph, pool, update, lang)
  File ""/home/leandro/WorkSpace/venvs/spc/lib/python3.11/site-packages/trytond/modules/__init__.py"", line 238, in load_module_graph
    cls.__register__(module)
  File ""/home/leandro/WorkSpace/modules/mdl_core_pathocytology/pathocytology_lab/pathocytology_lab.py"", line 1131, in __register__
    [table.sample], [table.slide.sample],
                     ^^^^^^^^^^^^^^^^^^
AttributeError: 'Column' object has no attribute 'sample'"
9vfxcqyG,getMem1 working,glokyfull,Motorola 68000 HiSoft Dev,Wednesday 22nd of November 2023 04:22:01 PM CDT,"	TEXT
;
;
; mem lib   THIS VERSION WORK, the return

;

;; exemple d'utilisation
;	move.l #buffer,d0
;	move.l #8*65536,d1 taille totale du buffer aligné sur 64k
;	jsr getmem1
;	lea -16*4(a0),a0
;	nop
;	nop
;	nop
;	nop
;	illegal
; format de memoire
;toto			; le label toto est la pour verifier l'algo
;	ds.b 65536	
;buffer	ds.l 65536*2    8*64k				; buffer sera aligné sur 64k donc un peu avant
;fin											; et apres un peu de memoire libre entre fin buffer et label fin

getmem1:

; d0 = adresse segment 64k non aligné
; d1 = nombre de segment a la suite*64k
; retour: a0 = liste d'adresse
; (a0)+ = 32k buffer
; (a0)+ = 16k buffer
; (a0)+ = 8k buffer
; (a0)+ = 4k buffer
; (a0)+ = 2k
; (a0)+ = 1k
; (a0)+ = 512
; (a0)+ = 256
; (a0)+ = 128
; (a0)+ = 64 octet
; 
; a0: 64 octet = 16 adresses

	; metre le buffer start dans d4

	moveq.w #1,d5
	swap d5
	move.l d0,d4
	sub.l d5,d4		; start memoire basse
	move.l d0,d3
	clr.w d3		;  debut multiple de 64k  fin memoire basse
	; d3 = start segment
	
	
	move.l d4,d7
	sub.l d3,d7		; d7 = taille en bas
				; d4 = start bas
	
	add.l d1,d3		; d3+ 4*64k = adresse start haut


	
	lea ptrMem,a0
	moveq #0,d6
	move.w #$8000,d6
	
.loop
	move.w d6,d1
	and.w d7,d1

	; bit 15 a 0 ? 
	tst.w d1
	beq.s .before			; was beq
	move.l d3,(a0)+
	add.l d6,d3
	
	bra.s .suite
.before
	move.l d4,(a0)+
	add.l d6,d4
.suite
	lsr #1,d6
	tst.w d6
	bne.s .loop			; ici ca s'arrete a un buffer de 1 octet il faudrai faire un meilleur test
	
	lea -64(a0),a0					; et s'arreter a un plus gros buffer 
	rts
	
	BSS
ptrMem		ds.l 16  		; dans ram apres l'appel de getmem1 adresses contenant les bloc memoire utilisable comme on veut
"
bm3y3UNH,03. Machine Commands,Spocoman,C++,Wednesday 22nd of November 2023 03:46:17 PM CDT,"#include <iostream>
#include <string>
#include <vector>

using namespace std;

int main() {
    string command, num;
    cin >> command;

    vector<int> numbers;

    while (command != ""end"") {
        if (isdigit(command[0]) || command[0] == '-') {
            numbers.push_back(stoi(command));
        }
        else {
            if (command == ""sum"") {
                numbers[numbers.size() - 2] += numbers[numbers.size() - 1];
                numbers.pop_back();
            }
            else if (command == ""subtract"") {
                numbers[numbers.size() - 1] -= numbers[numbers.size() - 2];
                numbers.erase(numbers.begin() + numbers.size() - 2);
            }
            else if (command == ""concat"" && numbers[numbers.size() - 1] >= 0) {
                num = to_string(numbers[numbers.size() - 2]) + to_string(numbers[numbers.size() - 1]);
                numbers.pop_back();
                numbers[numbers.size() - 1] = stoi(num);
            }
            else if (command == ""discard"") {
                numbers.pop_back();
            }
        }
        cin >> command;
    }

    for (auto& n : numbers) {
        cout << n << endl;
    }
    return 0;
}"
Dds3RBhH,JavaTree,Dimaland,Java,Wednesday 22nd of November 2023 03:22:33 PM CDT,"import java.util.Scanner;

class TreeNode {
    int data;
    TreeNode left;
    TreeNode right;
    // Конструктор
    public TreeNode(int data) {
        this.data = data;
        left = null;
        right = null;
    }
}

class BinarySearchTree {
    TreeNode root;
    // Конструктор
    public BinarySearchTree() {
        root = null;
    }

    // Метод для вставки элемента
    public void insert(int data) {
        root = insertRec(root, data);
    }

    private TreeNode insertRec(TreeNode root, int data) {
        if (root == null) {
            root = new TreeNode(data);
            return root;
        }

        if (data < root.data) {
            root.left = insertRec(root.left, data);
        } else {
            root.right = insertRec(root.right, data);
        }

        return root;
    }

    public boolean isNotEmpty() {
        return root != null;
    }

    public int countNodes() {
        return countNodes(root);
    }

    private int countNodes(TreeNode node) {
        if (node == null) {
            return 0; // Если узел пустой, то количество элементов равно 0
        } else {
            // Количество элементов в поддеревьях равно сумме количеств элементов в левом и правом поддеревьях,
            // плюс 1 для текущего узла
            return 1 + countNodes(node.left) + countNodes(node.right);
        }
    }

    public void preOrderTraversal() {
        preOrderTraversalRec(root);
        System.out.println();
    }

    private void preOrderTraversalRec(TreeNode root) {
        if (root != null) {
            System.out.print(root.data + "" ""); // Печать значения корневого узла
            preOrderTraversalRec(root.left); // Рекурсивный вызов для левого поддерева
            preOrderTraversalRec(root.right); // Рекурсивный вызов для правого поддерева
        }
    }

    public void inOrderTraversal() {
        inOrderTraversalRec(root);
        System.out.println();
    }

    private void inOrderTraversalRec(TreeNode root) {
        if (root != null) {
            inOrderTraversalRec(root.left); // Рекурсивный вызов для левого поддерева
            System.out.print(root.data + "" ""); // Печать значения корневого узла
            inOrderTraversalRec(root.right); // Рекурсивный вызов для правого поддерева
        }
    }


    public void postOrderTraversal() {
        postOrderTraversalRec(root);
        System.out.println();
    }

    private void postOrderTraversalRec(TreeNode root) {
        if (root != null) {
            postOrderTraversalRec(root.left); // Рекурсивный вызов для левого поддерева
            postOrderTraversalRec(root.right); // Рекурсивный вызов для правого поддерева
            System.out.print(root.data + "" ""); // Печать значения корневого узла
        }
    }

    public void rightSymmetricTraversal() {
        rightSymmetricTraversalRec(root);
        System.out.println();
    }

    private void rightSymmetricTraversalRec(TreeNode root) {
        if (root != null) {
            rightSymmetricTraversalRec(root.right); // Рекурсивный вызов для правого поддерева
            System.out.print(root.data + "" ""); // Печать значения корневого узла
            rightSymmetricTraversalRec(root.left); // Рекурсивный вызов для левого поддерева
        }
    }

}

public class Main {

    static Scanner scan = new Scanner(System.in);
    static BinarySearchTree bst;

    public static void main(String[] args){
        int num;

        System.out.println(""Программа позволяет работать с бинарным деревом поиска"");

        do {

            showInfo();
            num = inputNum();
            choice(num);

        } while (num != 0);
    }

    public static void showInfo () {

        System.out.println(""""""
                 1 - Создать дерево\s
                 2 - Добавить элемент\s
                 3 -> bst.preOrderTraversal()\s 
                 4 - Отобразить дерево в обратном порядке\s
                 5 -> bst.inOrderTraversal()\s
                 6 -> bst.postOrderTraversal()\s
                 7 -> bst.rightSymmetricTraversal()\s          
                 0 - Выход"""""");
    }

    public static int inputNum() {

        boolean isCorrect;
        int Num = 0;

        do {

            isCorrect = false;

            try {
                Num = Integer.parseInt(scan.nextLine());
            } catch (Exception e) {
                isCorrect = true;
                System.out.println(""Ошибка: Введите число"");
            }

            if (!isCorrect)
                isCorrect = checkNum(Num);

        } while (isCorrect);

        return Num;
    }

    public static boolean checkNum(int Num){

        final int MIN = 0;
        final int MAX = 7;
        boolean isCorrect = false;

        if (Num > MAX || Num < MIN) {

            isCorrect = true;
            System.out.println(""Ошибка: Число должно быть от 0 до 7"");

        }

        return isCorrect;
    }

    public static void choice(int num) {
        switch (num) {
            case 0 -> System.exit(0);
            case 1 -> createTree();
            case 2 -> addElements();
            case 3 -> bst.preOrderTraversal();
            case 4 -> showTree();
            case 5 -> bst.inOrderTraversal();
            case 6 -> bst.postOrderTraversal();
            case 7 -> bst.rightSymmetricTraversal();
        }
    }


    public static void createTree(){
        bst = new BinarySearchTree();
        System.out.println(""Дерево успешно создано!"");
    }

    public static void addElements(){

        if (!(bst == null)) {

            if (bst.countNodes() > 30)
                System.out.println(""Количество элементов не должно превышать 30"");
            else {
                bst.insert(inputElem(""для его добавления""));
                System.out.println(""Элемент успешно добавлен в дерево."");
            }

        }
        else
            System.out.println(""Ошибка: Сначала надо создать дерево"");
    }

    public static int inputElem(String str) {
        boolean isCorrect;
        int num = 0;
        final int MIN = 0;
        final int MAX = 99;

        do {
            isCorrect = false;
            System.out.println(""Введите информацию элемента "" + str);

            try {
                num = Integer.parseInt(scan.nextLine());
            } catch (Exception e) {
                isCorrect = true;
                System.out.println(""Ошибка: Введите число"");
            }
            if (!isCorrect && (num > MAX || num < MIN)) {
                System.out.println(""Ошибка: диапазон информации от 0 до 99"");
                isCorrect = true;
            }
        } while (isCorrect);

        return num;
    }
    public static void showTree(){
        if (!(bst == null)) {
            if (bst.isNotEmpty())
                displayTree(bst.root, 0);
            else
                System.out.println(""Ошибка: Дерево пустое!"");
        }
        else
            System.out.println(""Ошибка: Сначала надо создать дерево"");
    }

    private static void displayTree(TreeNode root, int level) {
        if (root != null) {
            displayTree(root.right, level + 1);
            for (int i = 0; i < level; i++) {
                System.out.print(""    ""); // Отступ для уровня вложенности
            }
            System.out.println(root.data); // Вывод значения узла
            displayTree(root.left, level + 1);
        }
    }

}"
Sqyk2NRs,[BASH] install ZSH no bash,GodlyPacketz,Bash,Wednesday 22nd of November 2023 03:12:06 PM CDT,"curl https://getmic.ro | bash
sh -c ""$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)""
git clone https://github.com/jotyGill/ezsh && cd ezsh && ./install.sh -c
"
vZ5ACFXJ,Untitled,Josif_tepe,C,Wednesday 22nd of November 2023 03:11:56 PM CDT,"#include <stdio.h>


int main() {
    int a, b;
    scanf(""%d%d"", &a, &b);

    int pomal, pogolem;
    if(a < b) {
        pomal = a;
        pogolem = b;
    }
    else {
        pomal = b;
        pogolem = a;
    }
    int pozicija = 1;
    int parno_slicen = 1;
    while(pogolem > 0) {
        int cifra = pogolem % 10;
        if(pozicija % 2 == 0) {
            int pomal_cifra = pomal % 10;
            if(cifra == pomal_cifra) {

            }
            else {
                parno_slicen = 0;
            }
            pomal /= 10;
        }
        pogolem /= 10;
        pozicija++;
    }
    printf(""%d\n"", parno_slicen);
    return 0;
}"
gcFsz0ZZ,Untitled,Josif_tepe,C,Wednesday 22nd of November 2023 03:01:33 PM CDT,"#include <stdio.h>

void funkcija(int x) {
    while(x > 0) {
        int posledna_cifra = x % 10;
        int pretposledna_cifra = (x / 10) % 10;
        int dvocifren_broj = pretposledna_cifra * 10 + posledna_cifra;
        if(dvocifren_broj >= 26) {
            printf(""Z"");
        }
        else {
            printf(""%c"", 'A' + dvocifren_broj);
        }
        x /= 100;
    }

}
int main() {
    int n;
    scanf(""%d"", &n);
   funkcija(n);
    return 0;
}"
asuiADW6,"C float, scientific notation",RicardasSim,C,Wednesday 22nd of November 2023 02:54:41 PM CDT,"#include <stdio.h>
#include <stdlib.h>

int main()
{

    float fv;

    fv = 123.0f;

    printf (""%f\n"", fv );

    fv = 123.0e1f;

    printf (""(e1): %f\n"", fv );

    fv = 123.0e2f;

    printf (""(e2): %f\n"", fv );

    fv = 123.0e3f;

    printf (""(e3): %f\n"", fv );

    fv = 123.0e-1f;

    printf (""(e-1): %f\n"", fv );

    fv = 123.0e-2f;

    printf (""(e-2): %f\n"", fv );

    fv = 123.0e-3f;

    printf (""(e-3): %f\n"", fv );

    return 0;
}

/*
output:

123.000000
(e1): 1230.000000
(e2): 12300.000000
(e3): 123000.000000
(e-1): 12.300000
(e-2): 1.230000
(e-3): 0.123000

*/
"
T4nPm95y,Untitled,Josif_tepe,C,Wednesday 22nd of November 2023 02:51:08 PM CDT,"#include <stdio.h>

int paren(int x) {
    if(x % 2 == 0) {
        return 1;
    }
    else {
        return 0;
    }
}
int main() {
    int n;
    scanf(""%d"", &n);
    int prethoden = 0;
    int brojac = 0;
    for(int i = 0; i < n; i++) {
        int x;
        scanf(""%d"", &x);

        if(prethoden != 0) {
            if(paren(x) && paren(prethoden)) {
                brojac++;
            }
            else if(!paren(x) && !paren(prethoden)) {
                brojac++;
            }
        }
        prethoden = x;

    }
    printf(""%d\n"", brojac);
    return 0;
}"
TKECL1uU,02. Special Items,Spocoman,C++,Wednesday 22nd of November 2023 02:49:25 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    string text, vowels = ""aeiou"";
    getline(cin, text);

    for (int i = 1; i < text.length(); i++) {
        if (text[i - 1] == text[i] && vowels.find(text[i]) == -1) {
            text.replace(i, 1, """");
            i--;
        }
    }

    cout << text << endl;
    return 0;
}"
hKUcHx8H,Untitled,Josif_tepe,C,Wednesday 22nd of November 2023 02:47:16 PM CDT,"#include <stdio.h>


int main() {
    int n;
    scanf(""%d"", &n);
    int prethoden = 0;
    int brojac = 0;
    for(int i = 0; i < n; i++) {
        int x;
        scanf(""%d"", &x);

        if(prethoden != 0) {
            if(prethoden % 2 == 0 && x % 2 == 0) {
                brojac++;
            }
            else if(prethoden % 2 == 1 && x % 2 == 1) {
                brojac++;
            }
        }
        prethoden = x;

    }
    printf(""%d\n"", brojac);
    return 0;
}"
0sMQUU1Z,01. Below Average Only,Spocoman,C++,Wednesday 22nd of November 2023 02:37:00 PM CDT,"#include <iostream>
#include <vector>

using namespace std;

int main() {
    int arrLen, sumNumbers = 0, averageNum, oddSum = 0, evenSum = 0;
    cin >> arrLen;

    int* numbers = new int[arrLen];

    for (int i = 0; i < arrLen; i++) {
        cin >> numbers[i];
        sumNumbers += numbers[i];
    }

    averageNum = (double)sumNumbers / arrLen;

    for (int i = 0; i < arrLen; i++) {
        if (numbers[i] <= averageNum) {
            (i % 2 == 1 ? oddSum : evenSum) += numbers[i];
        }
    }

    cout << oddSum * evenSum << endl;
    return 0;
}"
RTyXPySE,Untitled,Josif_tepe,C,Wednesday 22nd of November 2023 02:35:54 PM CDT,"#include <stdio.h>

int funckija(int n) {
    int brojac = 0;
    while(scanf(""%d"", &n)) {
        if(n % 2 == 0) {
            brojac++;
        }
    }
    return brojac;
}
int main() {
    int n;
    scanf(""%d"", &n);

    
    printf(""%d\n"", funckija(n));
    return 0;
}"
kA8D8Tgg,Untitled,Josif_tepe,C,Wednesday 22nd of November 2023 02:31:17 PM CDT,"#include <stdio.h>

float funkcija(int n) {
    float result = 1;
    for(int i = 2; i <= n; i++) {
        if(i % 2 == 0) {
            result -= 1.0 / (float) (i);
        }
        else {
            result += 1.0 / (float) (i);
        }
    }
    return result;
}
int main() {
    int n;
    scanf(""%d"", &n);

    
    printf(""%f\n"", funkcija(n));
    return 0;
}"
T6hQ60gJ,Untitled,Daniil1111111,Java,Wednesday 22nd of November 2023 02:29:37 PM CDT,"import exceptions.ValidateException;
import storage.PasswordMemoryStorage;
import storage.PasswordStorage;
import validators.PasswordLengthValidator;
import validators.PasswordStrengthValidator;
import validators.Validator;

import java.io.IOException;
import java.util.List;
import java.util.Scanner;
import java.util.*;

class Practicum {

	private static final Scanner scanner = new Scanner(System.in);
	private static final List<Validator> passwordValidators = List.of(
		new PasswordLengthValidator(5), new PasswordStrengthValidator()
	);
	
	private static final List<Validator> nameValidators = new ArrayList<>();// поработайте со списком

	public static void main(String[] args) {
		loop();
	}

	public static void loop() {
		while (true) {
			final String action = getAction();
			if (""1"".equals(action)) {
				addUser();
			} else if (""2"".equals(action)) {
				showUserPassword();
			} else {
				break;
			}
		}
	}

	private static void checkValidatorRules(
		final List<Validator> validators, final String value
	) throws ValidateException {
		for (Validator validator: validators) {
			validator.validate(value);
		}
	}

    private static void addUser() {
        final PasswordStorage storage = new PasswordMemoryStorage();
        // добавьте отлов исключений ValidateNameException и ValidatePasswordException
        // закройте хранилище
        try {
            storage.open();
          //  List<Validator> validators = Collections.singletonList((Validator) nameValidators);

            //validators.add(new NameValidator());
            nameValidators.add(new NameValidator());
            System.out.println(""Введите имя пользователя => "");
            final String name = scanner.nextLine();
            checkValidatorRules(nameValidators, name);
            System.out.println(""Введите пароль пользователя => "");
            final String password = scanner.nextLine();
            checkValidatorRules(passwordValidators, password);
            storage.store(name, password);

        }catch (ValidateNameException e) {
            System.out.println(""Ошибка валидации имени: "" + e.getMessage());
        } catch (ValidateException e) {
            System.out.println(""Ошибка валидации: "" + e.getMessage());
        } catch (IOException e) {
            System.out.println(""Ошибка работы с хранилищем: "" + e.getMessage());
        } finally {
            storage.close();
        }
    }

	private static void showUserPassword() {
		final PasswordStorage storage = new PasswordMemoryStorage();
		// добавьте отлов исключения ValidateNameException
		// закройте хранилище
		try {
			storage.open();
			System.out.println(""Введите имя пользователя => "");
			final String name = scanner.nextLine();
			checkValidatorRules(nameValidators, name);
                     
			final String password = storage.get(name);
			System.out.println(String.format(""Пароль пользователя %s = %s"", name, password));
		} catch (ValidatePasswordException e) {
			System.out.println(""Ошибка валидации пароля: "" + e.getMessage());
		} catch (ValidateException e) {
			System.out.println(""Ошибка валидации: "" + e.getMessage());
		} catch (IOException e) {
			System.out.println(""Ошибка работы с хранилищем: "" + e.getMessage());
		}finally {
            storage.close();
        }
	}

	private static String getAction() {
		System.out.println(""1 - добавить пользователя с паролем"");
		System.out.println(""2 - отобразить пароль пользователя"");
		System.out.println(""другие символы - выход"");
		System.out.println(""Выберите действие => "");
		return scanner.nextLine();
	}
}"
t2ikH0SJ,Untitled,Josif_tepe,C++,Wednesday 22nd of November 2023 02:29:15 PM CDT,"#include <stdio.h>

int main() {
    int n;
    scanf(""%d"", &n);

    float result = 1;

    for(int i = 2; i <= n; i++) {
        if(i % 2 == 0) {
            result -= 1.0 / (float) (i);
        }
        else {
            result += 1.0 / (float) (i);
        }
    }
    printf(""%f\n"", result);
    return 0;
}"
MVQuaLB9,Clone HD,Rnery,Bash,Wednesday 22nd of November 2023 02:29:03 PM CDT,"#!/usr/bin/env bash

function check_root() {
  [ ""$(id -u)"" -ne 0 ] && echo ""Por favor, execute este script como root.""; exit 1
}

function show_usage() {
  echo ""Uso: $0 <origem> <destino>""
  echo ""Exemplo: $0 /dev/sda /dev/sdb""
  exit 1
}

function check_devices_existence() {
  for device in ""$1"" ""$2""; do
    [ ! -e ""$device"" ] && echo ""O dispositivo $device não existe.""; exit 1
  done
}

function clone_hd() {
  local origem=""$1""
  local destino=""$2""

  echo ""Iniciando a clonagem de $origem para $destino...""
  dd if=""$origem"" of=""$destino"" bs=4M status=progress

  if [ ""$?"" -eq 0 ]; then
    echo ""Clonagem concluída com sucesso.""
    exit 1
  fi
  echo ""Erro durante a clonagem.""
}

function unmount_partitions() {
  local destino=""$1""
  umount ""$destino""* 2>/dev/null
}

function main() {
  check_root

  [ ""$#"" -ne 2 ] && show_usage

  local origem=""$1""
  local destino=""$2""

  check_devices_existence ""$origem"" ""$destino""

  read -p ""Este script irá sobrescrever todos os dados em $destino. Deseja continuar? (s/n): "" confirmacao
  [ ""$confirmacao"" != ""s"" ] && echo ""Operação cancelada.""; exit 1

  unmount_partitions ""$destino""
  clone_hd ""$origem"" ""$destino""
}

main ""$@""
"
8HYhsWem,Untitled,Josif_tepe,C++,Wednesday 22nd of November 2023 02:17:09 PM CDT,"#include <stdio.h>

int funkcija(int n) {
    int brojac = 0;
    
    while(scanf(""%d"", &n)) {
        int posledna_cifra = n % 10;
        
        if(posledna_cifra % 3 == 0) {
            brojac++;
            
        }
    }
    return brojac;
}
int main(int argc, const char * argv[]) {

    int n;
    printf(""%d\n"", funkcija(n));

    return 0;
}"
eFDpX34S,Statuses-for-SyncML-install-pfx.xml,mar-kim,XML,Wednesday 22nd of November 2023 02:00:39 PM CDT,"<SyncML>
  <SyncHdr>
    <VerDTD>1.2</VerDTD>
    <VerProto>DM/1.2</VerProto>
    <SessionID>3</SessionID>
    <MsgID>101</MsgID>
    <Target>
      <LocURI>https://example.redacted</LocURI>
    </Target>
    <Source>
      <LocURI>redacted</LocURI>
    </Source>
  </SyncHdr>
  <SyncBody>
    <Status>
      <CmdID>1</CmdID>
      <MsgRef>100</MsgRef>
      <CmdRef>0</CmdRef>
      <Cmd>SyncHdr</Cmd>
      <Data>200</Data>
    </Status>
    <Status>
      <CmdID>2</CmdID>
      <MsgRef>100</MsgRef>
      <CmdRef>poc-10908-atomic</CmdRef>
      <Cmd>Atomic</Cmd>
      <Data>507</Data>
    </Status>
    <Status>
      <CmdID>3</CmdID>
      <MsgRef>100</MsgRef>
      <CmdRef>poc-10908-KeyLocation</CmdRef>
      <Cmd>Add</Cmd>
      <Data>500</Data>
    </Status>
    <Status>
      <CmdID>4</CmdID>
      <MsgRef>100</MsgRef>
      <CmdRef>poc-10908-ContainerName</CmdRef>
      <Cmd>Add</Cmd>
      <Data>216</Data>
    </Status>
    <Status>
      <CmdID>5</CmdID>
      <MsgRef>100</MsgRef>
      <CmdRef>poc-10908-PFXCertPassword</CmdRef>
      <Cmd>Add</Cmd>
      <Data>216</Data>
    </Status>
    <Status>
      <CmdID>6</CmdID>
      <MsgRef>100</MsgRef>
      <CmdRef>poc-10908-PFXKeyExportable</CmdRef>
      <Cmd>Add</Cmd>
      <Data>216</Data>
    </Status>
    <Status>
      <CmdID>7</CmdID>
      <MsgRef>100</MsgRef>
      <CmdRef>poc-10908-PFXCertPasswordEncryptionType</CmdRef>
      <Cmd>Add</Cmd>
      <Data>216</Data>
    </Status>
    <Status>
      <CmdID>8</CmdID>
      <MsgRef>100</MsgRef>
      <CmdRef>poc-10908-PFXCertPasswordEncryptionStore</CmdRef>
      <Cmd>Add</Cmd>
      <Data>216</Data>
    </Status>
    <Status>
      <CmdID>9</CmdID>
      <MsgRef>100</MsgRef>
      <CmdRef>poc-10908-PFXCertBlob</CmdRef>
      <Cmd>Add</Cmd>
      <Data>216</Data>
    </Status>
    <Alert>
      <CmdID>1</CmdID>
      <Data>1223</Data>
    </Alert>
    <Final/>
  </SyncBody>
</SyncML>"
ZHxmu5NL,Untitled,Skos_Martren,C++,Wednesday 22nd of November 2023 01:48:44 PM CDT,"#include <algorithm>
#include <iostream>
#include <deque>
#include <unordered_map>
#include <map>
#include <cassert>

using namespace std;

deque<int64_t> TimeAxis; // TimeAxis.top() == current_time

// 				 ROOMS 
struct DataRooms {
	int64_t NumberRoomsBooked = 0;
	unordered_map<int64_t, int64_t>TimeToRoomCount;
};

unordered_map<string, DataRooms> HotelToDataRooms;


//				CLIENTS 

struct DataClients {
	unordered_map<int64_t, int> ClientIdToNumberAppearances;

	unordered_map < int64_t, vector<int>>TimeToRangeClientId;
};

unordered_map<string, DataClients> HotelToDataClients;





// ""в данном запросе нужно учесть все события с current_time − 86400 < time ⩽ current_time""
void UpdData(const string& hotel_name, const int64_t current_time = TimeAxis.back()) {

	auto It = lower_bound(TimeAxis.begin(), TimeAxis.end(), current_time - 86400);
	assert(It != TimeAxis.end());
	if (*It == current_time - 86400) {
		It = next(It);
	}

	// 				 ROOMS: UpdRoomCount 

	for (auto Begin = TimeAxis.begin(); Begin != It; ++Begin) {

		HotelToDataRooms[hotel_name].NumberRoomsBooked -= HotelToDataRooms[hotel_name].TimeToRoomCount[*Begin];
		HotelToDataRooms[hotel_name].TimeToRoomCount.erase(*Begin);

	}

	//			    CLIENTS 

	for (auto Begin = TimeAxis.begin(); Begin != It; ++Begin) {

		vector<int>& RangeClientId = HotelToDataClients[hotel_name].TimeToRangeClientId[*Begin];

		for (const int client_id : RangeClientId) {

			--HotelToDataClients[hotel_name].ClientIdToNumberAppearances[client_id];
			if (HotelToDataClients[hotel_name].ClientIdToNumberAppearances[client_id] == 0) {
				HotelToDataClients[hotel_name].ClientIdToNumberAppearances.erase(client_id);
			}
		}
		
		HotelToDataClients[hotel_name].TimeToRangeClientId.erase(*Begin);
	}

	// если не будет ML, сдать и попробовать!
	// delete ranges { TimeAxis.begin(), It} from TimeAxis
	//while (TimeAxis.begin() != It && TimeAxis.begin() != prev(It)) {TimeAxis.pop_front();}
}

int main() {

	int Q; cin >> Q;

	for (; Q != 0; --Q) {

		string Query; cin >> Query;


		string hotel_name;

		if (Query.front() == 'B') {
			int time, client_id, room_count;
			cin >> time >> hotel_name >> client_id >> room_count;

			if (TimeAxis.empty() || TimeAxis.back() != time) { TimeAxis.push_back(time); }

			// 				 ROOMS
			
			HotelToDataRooms[hotel_name].NumberRoomsBooked += room_count;
			HotelToDataRooms[hotel_name].TimeToRoomCount[time] += room_count; // В hotel_name в момент времени time могут бронировать номера несколько client_id


			//			    CLIENTS 
			HotelToDataClients[hotel_name].TimeToRangeClientId[time].push_back(client_id);
			++HotelToDataClients[hotel_name].ClientIdToNumberAppearances[client_id];
		}

		if (Query.front() == 'C') {
			cin >> hotel_name;
			if (!TimeAxis.empty()) { UpdData(hotel_name); }
			cout << HotelToDataClients[hotel_name].ClientIdToNumberAppearances.size() << '\n';
		}

		if (Query.front() == 'R') {
			cin >> hotel_name;
			if (!TimeAxis.empty()) { UpdData(hotel_name); }
			cout << HotelToDataRooms[hotel_name].NumberRoomsBooked << '\n';
		}
	}

}
/*
19
ROOMS Foo
CLIENTS Foo
BOOK -11 Foo 42 1
BOOK -1 Foo 42 2
BOOK 0 Foo 42 3
BOOK 1 Foo 42 4
ROOMS Foo
CLIENTS Foo
BOOK 11 Foo 42 5
BOOK 111 Foo 42 6
ROOMS Foo
CLIENTS Foo
BOOK 86400 Foo 42 7
ROOMS Foo
CLIENTS Foo
BOOK 90000 Foo 42 8
BOOK 93600 Foo 42 9
ROOMS Foo
CLIENTS Foo

output:
19
ROOMS Foo
0
CLIENTS Foo
0
BOOK -11 Foo 42 1
BOOK -1 Foo 42 2
BOOK 0 Foo 42 3
BOOK 1 Foo 42 4
ROOMS Foo
10
CLIENTS Foo
1
BOOK 11 Foo 42 5
BOOK 111 Foo 42 6
ROOMS Foo
21
CLIENTS Foo
1
BOOK 86400 Foo 42 7
ROOMS Foo
22
CLIENTS Foo
1
BOOK 90000 Foo 42 8
BOOK 93600 Foo 42 9
ROOMS Foo
24
CLIENTS Foo
1
*/"
b3FEkCb2,Untitled,Ackorejeo,C,Wednesday 22nd of November 2023 01:47:38 PM CDT,powerfalconitum
n55jgRu6,Untitled,Skos_Martren,C++,Wednesday 22nd of November 2023 01:40:59 PM CDT,"#include <algorithm>
#include <iostream>
#include <deque>
#include <unordered_map>
#include <map>
#include <cassert>

using namespace std;

deque<int64_t> TimeAxis; // TimeAxis.top() == current_time

// 				 ROOMS 
struct DataRooms {
	int64_t NumberRoomsBooked = 0;
	unordered_map<int64_t, int64_t>TimeToRoomCount;
};

unordered_map<string, DataRooms> HotelToDataRooms;


//				CLIENTS 

struct DataClients {
	unordered_map<int64_t, int> ClientIdToNumberAppearances;

	unordered_map < int64_t, vector<int>>TimeToRangeClientId;
};

unordered_map<string, DataClients> HotelToDataClients;





// ""в данном запросе нужно учесть все события с current_time − 86400 < time ⩽ current_time""
void UpdData(const string& hotel_name, const int64_t current_time = TimeAxis.back()) {

	auto It = lower_bound(TimeAxis.begin(), TimeAxis.end(), current_time - 86400 + 1);
	assert(It != TimeAxis.end());


	// 				 ROOMS: UpdRoomCount 

	for (auto Begin = TimeAxis.begin(); Begin != It; ++Begin) {

		HotelToDataRooms[hotel_name].NumberRoomsBooked -= HotelToDataRooms[hotel_name].TimeToRoomCount[*Begin];
		HotelToDataRooms[hotel_name].TimeToRoomCount.erase(*Begin);

	}

	//			    CLIENTS 

	for (auto Begin = TimeAxis.begin(); Begin != It; ++Begin) {

		vector<int>& RangeClientId = HotelToDataClients[hotel_name].TimeToRangeClientId[*Begin];

		for (const int client_id : RangeClientId) {

			--HotelToDataClients[hotel_name].ClientIdToNumberAppearances[client_id];
			if (HotelToDataClients[hotel_name].ClientIdToNumberAppearances[client_id] == 0) {
				HotelToDataClients[hotel_name].ClientIdToNumberAppearances.erase(client_id);
			}
		}
		
		HotelToDataClients[hotel_name].TimeToRangeClientId.erase(*Begin);
	}

	// если не будет ML, сдать и попробовать!
	// delete ranges { TimeAxis.begin(), It} from TimeAxis
	//while (TimeAxis.begin() != It && TimeAxis.begin() != prev(It)) {TimeAxis.pop_front();}
}

int main() {

	int Q; cin >> Q;

	for (; Q != 0; --Q) {

		string Query; cin >> Query;


		string hotel_name;

		if (Query.front() == 'B') {
			int time, client_id, room_count;
			cin >> time >> hotel_name >> client_id >> room_count;

			if (TimeAxis.empty() || TimeAxis.back() != time) { TimeAxis.push_back(time); }

			// 				 ROOMS
			
			HotelToDataRooms[hotel_name].NumberRoomsBooked += room_count;
			HotelToDataRooms[hotel_name].TimeToRoomCount[time] += room_count; // В hotel_name в момент времени time могут бронировать номера несколько client_id


			//			    CLIENTS 
			HotelToDataClients[hotel_name].TimeToRangeClientId[time].push_back(client_id);
			++HotelToDataClients[hotel_name].ClientIdToNumberAppearances[client_id];
		}

		if (Query.front() == 'C') {
			cin >> hotel_name;
			if (!TimeAxis.empty()) { UpdData(hotel_name); }
			cout << HotelToDataClients[hotel_name].ClientIdToNumberAppearances.size() << '\n';
		}

		if (Query.front() == 'R') {
			cin >> hotel_name;
			if (!TimeAxis.empty()) { UpdData(hotel_name); }
			cout << HotelToDataRooms[hotel_name].NumberRoomsBooked << '\n';
		}
	}

}
/*
19
ROOMS Foo
CLIENTS Foo
BOOK -11 Foo 42 1
BOOK -1 Foo 42 2
BOOK 0 Foo 42 3
BOOK 1 Foo 42 4
ROOMS Foo
CLIENTS Foo
BOOK 11 Foo 42 5
BOOK 111 Foo 42 6
ROOMS Foo
CLIENTS Foo
BOOK 86400 Foo 42 7
ROOMS Foo
CLIENTS Foo
BOOK 90000 Foo 42 8
BOOK 93600 Foo 42 9
ROOMS Foo
CLIENTS Foo

output:
19
ROOMS Foo
0
CLIENTS Foo
0
BOOK -11 Foo 42 1
BOOK -1 Foo 42 2
BOOK 0 Foo 42 3
BOOK 1 Foo 42 4
ROOMS Foo
10
CLIENTS Foo
1
BOOK 11 Foo 42 5
BOOK 111 Foo 42 6
ROOMS Foo
21
CLIENTS Foo
1
BOOK 86400 Foo 42 7
ROOMS Foo
22
CLIENTS Foo
1
BOOK 90000 Foo 42 8
BOOK 93600 Foo 42 9
ROOMS Foo
24
CLIENTS Foo
1
*/"
bX3rTJNe,task_for_Seva,Valen_IGIG,Python,Wednesday 22nd of November 2023 01:25:51 PM CDT,"def primary_disability(disabled, population):
    return round((disabled / population) * 10000, 1)


def formula(number, population):
    return round((number / population) * 100, 1)


choice = input(""Хотите ввести данные вручную? (y/n): "")
if choice.lower() == 'y':
    population = int(input('Среднегодовая численность населения трудоспособного возраста = '))
    disabled = int(input('Общее число лиц трудоспособного населения, впервые признанных инвалидами в данном году = '))
    all_disabled = int(input('Общее число лиц, впервые признанных бюро МСЭ инвалидами, за год = '))
    blood = int(input('Число лиц, призванных инвалидами по поводу болезней системы кровообращения = '))
    bone = int(input('Число лиц, призванных инвалидами по поводу болезней костно-мышечной системы = '))
    evil = int(input('Число лиц, призванных инвалидами по поводу злокачественных образований = '))
    other = int(input('Число лиц, призванных инвалидами по поводу прочих болезней = '))
    first = int(input('Число лиц, признанных инвалидами I группы = '))
    second = int(input('Число лиц, признанных инвалидами II группы = '))
    third = int(input('Число лиц, признанных инвалидами III группы = '))
    work_disabled = int(input('Общее число инвалидов, признанных трудоспособными = '))
    replay = int(input('Общее число инвалидов, повторно освидетельствованных в бюро МСЭ = '))
    three_of_1_2 = int(input('Общее число признанных инвалидами III из I и II групп = '))
    second_of_1 = int(input('Общее число признанных инвалидами II из I группы = '))
    one_two = int(input('Число переосвидетельствованных инвалидов I и II групп = '))
else:
    # общее число лиц трудоспособного населения, впервые признанных инвалидами в данном году
    disabled = 3920
    # среднегодовая численность населения трудоспособного возраста
    population = 407670
    # Число лиц, призванных по поводу болезни системы кровообращения
    blood = 1710
    # Общее число лиц, впервые признанных бюро МСЭ инвалидами, за год
    all_disabled = 3920
    # Число лиц, призванных по поводу болезней костно-мышечной системы
    bone = 670
    # Число лиц, призванных по поводу злокачественных образований
    evil = 580
    # Число лиц, призванных инвалидами по поводу прочих болезней
    other = 960
    # I группу получили
    first = 375
    # II группу получили
    second = 2180
    # III группу получили
    third = 1365
    # Общее число инвалидов, признанных трудоспособными
    work_disabled = 415
    # Общее число инвалидов, повторно освидетельствованных в бюро МСЭ
    replay = 10840
    three_of_1_2 = 1191
    second_of_1 = 65
    one_two = 7340

print('\nОтвет:\n')
print(f'1) Первичная инвалидность = {primary_disability(disabled, population)} ‱')
print()
print('2) Структура первичной инвалидности по заболеваниям:')
print(f'2.1) Удельный вес инвалидов по поводу болезней системы кровообращения = {formula(blood, all_disabled)} %')
print(f'2.2) Удельный вес инвалидов по поводу болезней костно-мышечной системы = {formula(bone, all_disabled)} %')
print(f'2.3) Удельный вес инвалидов по поводу злокачественных новообразований = {formula(evil, all_disabled)} %')
print(f'2.4) Удельный вес инвалидов по поводу прочих болезней = {formula(other, all_disabled)} %')
print()
print(f'3) Структура первичной инвалидности по группам инвалидности:')
print(f'3.1) Удельный вес лиц, призванных инвалидами I группы = {formula(first, all_disabled)} %')
print(f'3.2) Удельный вес лиц, призванных инвалидами II группы = {formula(second, all_disabled)} %')
print(f'3.3) Удельный вес лиц, призванных инвалидами III группы = {formula(third, all_disabled)} %')
print()
print(f'4) Полная медицинская и профессиональная реабилитация инвалидов = {formula(work_disabled, replay)} %')
print(
    f'5) Суммарный показатель частичной медицинской и профессиональной реабилитация инвалидов = {formula((three_of_1_2 + second_of_1), one_two)} %')
"
vCK7M217,Piratensender.Power.Play.1982.Deu.720p.h264.dts.Subs-bp,bpmircea,BrainFuck,Wednesday 22nd of November 2023 01:05:27 PM CDT,"Piratensender Power Play (Piratensender Power Play) (Sigi Rothemund, 1982)
aka
Piratensender.Power.Play.1982.Deu.720p.h264.dts.Subs-bp
https://www.imdb.com/title/tt0082911/

https://files.fm/f/zacffp948a
https://filecrypt.cc/Container/D8B05D06F1.html
https://t.me/DeuFree/1391

Audio tracks: de | Subtitles: de"
N3faYLud,wildcard kmp,STANAANDREY,C,Wednesday 22nd of November 2023 01:03:33 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void computeLPSArray(char *pat, int M, int *lps) {
    int len = 0;
    lps[0] = 0;

    int i = 1;
    while (i < M) {
        if (pat[i] == pat[len]) {
            len++;
            lps[i] = len;
            i++;
        } else {
            if (len != 0) {
                len = lps[len - 1];
            } else {
                lps[i] = 0;
                i++;
            }
        }
    }
}

void kmpWildcardSearch(char *pat, char *txt) {
    int M = strlen(pat);
    int N = strlen(txt);

    int *lps = (int *)malloc(sizeof(int) * M);
    computeLPSArray(pat, M, lps);

    int i = 0;
    int j = 0;
    while (i < N) {
        if (pat[j] == txt[i] || pat[j] == '*') {
            j++;
            i++;
        }

        if (j == M) {
            printf(""Pattern found at index %d\n"", i - j);
            j = lps[j - 1];
        } else if (i < N && (pat[j] != txt[i] && pat[j] != '*')) {
            if (j != 0)
                j = lps[j - 1];
            else
                i++;
        }
    }

    free(lps);
}

int main() {
    char txt[] = ""afjkarbdsabacba"";
    char pat[] = ""a*b"";

    kmpWildcardSearch(pat, txt);

    return 0;
}
"
g9UHTh4z,Untitled,Repciu,Python,Wednesday 22nd of November 2023 01:01:33 PM CDT,"import pygame
import copy

class Segment(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.obraz = pygame.image.load(""images/segment.png"")
        self.pozycja = pygame.Rect(-32,-32,32,32)
        self.ostatnia_pozycja = None
    
    def przesun(self, nowa_pozycja):
        self.ostatnia_pozycja = copy.deepcopy(self.pozycja)
        self.pozycja = copy.deepcopy(nowa_pozycja)"
yh42Mz7b,Untitled,Repciu,Python,Wednesday 22nd of November 2023 01:01:05 PM CDT,"import pygame
from Kierunek import Kierunek
from Segment import Segment
import copy
class Waz(pygame.sprite.Sprite):
    def __init__(self):
        self.oryginalny_obraz = pygame.image.load(""images/head.png"")
        self.obraz = pygame.transform.rotate(self.oryginalny_obraz, 0)
        self.rect = self.obraz.get_rect(center=(12*32+16, 9*32+16))
        self.kierunek = Kierunek.GORA
        self.nowy_kierunek = Kierunek.GORA
        self.ostatnia_pozcyja = self.rect
        self.dodaj_segment = False
        self.segmenty = []

    def zmien_kierunek(self, kierunek):
        zmiana_mozliwa = True

        if self.kierunek == Kierunek.GORA and kierunek == Kierunek.DOL:
            zmiana_mozliwa = False

        if self.kierunek == Kierunek.DOL and kierunek == Kierunek.GORA:
            zmiana_mozliwa = False

        if self.kierunek == Kierunek.LEWO and kierunek == Kierunek.PRAWO:
            zmiana_mozliwa = False

        if self.kierunek == Kierunek.PRAWO and kierunek == Kierunek.LEWO:
            zmiana_mozliwa = False
        
        if zmiana_mozliwa:
            self.nowy_kierunek = kierunek
        
    def aktualizuj(self):
        self.kierunek = self.nowy_kierunek
        self.obraz = pygame.transform.rotate(self.oryginalny_obraz, (self.kierunek.value*-90))
        self.ostatnia_pozcyja = copy.deepcopy(self.rect)
        if self.kierunek == Kierunek.GORA:
            self.rect.move_ip(0, -32)
        if self.kierunek == Kierunek.PRAWO:
            self.rect.move_ip(32,0)
        if self.kierunek == Kierunek.LEWO:
            self.rect.move_ip(-32,0)
        if self.kierunek == Kierunek.DOL:
            self.rect.move_ip(0, 32)
        
        for i in range(len(self.segmenty)):
            if i == 0: 
                self.segmenty[i].przesun(self.ostatnia_pozcyja)
            else:
                self.segmenty[i].przesun(self.segmenty[i-1].ostatnia_pozycja)
        
        if self.dodaj_segment:
            nowy_segment = Segment()
            nowa_pozycja = None

            if len(self.segmenty) > 0:
                nowa_pozycja = copy.deepcopy(self.segmenty[-1].pozycja)
            else:
                nowa_pozycja = copy.deepcopy(self.ostatnia_pozcyja)
            nowy_segment.pozycja = nowa_pozycja
            self.segmenty.append(nowy_segment)
            self.dodaj_segment = False

    def jedz_jablko(self):
        self.dodaj_segment = True
    
    def rysuj_segmenty(self, ekran):
        for segment in self.segmenty:
            ekran.blit(segment.obraz, segment.pozycja)

    def sprawdz_kolizje(self):
        for segment in self.segmenty:
            if self.rect.topleft == segment.pozycja.topleft:
                return True
            
            if self.rect.top < 0 or self.rect.top >= 600:
                return True
            if self.rect.left < 0 or self.rect.left >= 800:
                return True"
SQx5a9Y5,lesson_221123,valenki13,C++,Wednesday 22nd of November 2023 12:49:53 PM CDT,"#include <iostream>
#include ""my_lib.h""

using namespace std;

void str_start() {
	const char* str = ""Hello world"";
	cout << str << endl;
	char str2[] = ""Hi everybody"";
	cout << size(str2) << endl;
	char str3[]{ 'H', 'e', 'l', 'l', 'o', '\0'};
	cout << str3 << endl;

	cout << ""Len: "" << strlen(str) << endl;
	cout << ""Len: "" << strlen(str2) << endl;

	const char* str4;
	str4 = ""Privet"";
	cout << str4 << endl;

	str4 = ""New strings"";
	cout << str4 << endl;		
	
	char str5[100];
	strcpy_s(str5, ""This is a copy"");
	cout << str5 << endl;
	
	// Строки типа char[] - нельзя сравнить через ==
	cout << (str5 == ""This is a copy"") << endl;		
	cout << (str4 == ""New strings"") << endl;

	// сравниваем строки char[] так.
	cout << strcmp(str5, ""This is a copy"") << endl;
	cout << str5[2] << "" "" << str4[4] << endl;
	
	// так строки не соеденить (конкатенация)
	//cout << str4 + str << endl;
	strcat_s(str5, str4);
	cout << str5 << endl;
}

void cppstr_start() {
	std::string str = ""Hello"";
	cout << str << endl;

	cout << str.data() << "" or "" 
		<<  str.c_str() << endl;

	const char* str2 = ""Hello"";
	std::string str3 = str2;

	cout << str.length() << "" or "" 
		<<  str.size() << endl;

	std::string st1 = ""London"";
	std::string st2 = ""Paris"";

	cout << st1 + "" "" + st2 << endl;
	cout << st1.append("" "").append(st2) << endl;

	cout << (st1 > st2) << endl;
	cout << st1.compare(st2) << endl;
}

//https://pastebin.com/ABuCpvib

void task_journal() {
	std::string journal[]{
		""Abdulaev"",
		""Petrov"",
		""Ivanov"",
		""Sidorov""		
	};
	show_arr(size(journal), journal);
	isert_sort(size(journal), journal);
	show_arr(size(journal), journal);
}

enum colors {WHITE, 
	BLACK,
	RED,
	BLUE,
	GREEN
};

void show_coloredText(const char* text,
	colors color, colors bk_color) {
	switch (color)
	{
		case WHITE: cout << ""\033[97m""; break;
		case BLACK:	cout << ""\033[90m"";	break;
		case RED:	cout << ""\033[91m"";	break;
		case BLUE:	cout << ""\033[94m"";	break;
		case GREEN:	cout << ""\033[92m"";	break;
		default: break;
	}
	switch (bk_color)
	{
		case WHITE:	cout << ""\033[47m"";	 break;
		case BLACK:	cout << ""\033[48m"";	 break;
		case RED:	cout << ""\033[101m""; break;
		case BLUE:	cout << ""\033[104m""; break;
		case GREEN:	cout << ""\033[102m""; break;
		default: break;
	}	
	cout << text;
	cout << ""\033[0m"";
}

/*
const int w = 5;
void fun(int arr[w][w]) {

}

int desk[4][4];
void fun2() {
	desk[0][0] = 5;
}

void fun3(int** arr) {
	arr[0][0] = 4;
}
*/

void main() {
	//str_start();
	//cppstr_start();
	task_journal();
	//show_coloredText(""Hello"", RED, BLUE);
	//show_coloredText(""Hello"", BLACK, WHITE);
}"
2j1cvGni,Untitled,dllbridge,C,Wednesday 22nd of November 2023 12:36:15 PM CDT,"

#include   <stdio.h>
#include  <string.h>

//////////////////////////////////////////////////  
struct Auto                                     //
{
	
   int   nWhile, 	
       nPeoples;
	   
   char  szName[123];	   	
};
  

void foo(Auto *jhghjghjghjgjhghjgjhgjhg);

//////////////////////////////////////////////////  
int main()                                      //
{

    Auto Car1, MyCar, Truck;

    foo(&Truck);

	printf(""%s "", Truck.szName);
	printf(""%d"", Truck.nWhile);
}




///////////////////////////////////////////////////
void foo(Auto *p)                                // 
{
	
	 strcpy(p->szName, ""Man""); 	 
	 p->nWhile = 16;	
}
























/*

#include   <stdio.h>
#include  <string.h>

//////////////////////////////////////////////////  
struct Auto                                     //
{
	
   int   nWhile, 	
       nPeoples;
	   
   char  szName[123];	   	
};
  

//////////////////////////////////////////////////  
int main()                                      //
{


    Auto Car1, MyCar, Truck;
	
	Truck.nWhile = 8;
	strcpy(Truck.szName, ""Mersedes""); 
	
	printf(""%s"", Truck.szName);
	printf(""%d"", Truck.nWhile);
}


*/





































/*
#include  <stdio.h>


int arr[91] = { 28, 6, 999, 17, 100, 4, 8, 2, 10, 58, 3, 598 };


void _sorting(int *arr, int size);   

//////////////////////////////////////////////////  
int main()                                      //
{
	
	
	_sorting(&arr[0], 12);
	
	for(int i = 0; i < 12; i++)
	{
		
	   printf(""%d, "", arr[i] );	
	}
	
}




//////////////////////////////////////////////////
void _sorting(int *arr, int size)               // 
{
	
	
	 int step = size - 1,
	     nBuf           ;
	
	 while(step > 0)
	 {
			
	   for(int i = 0; i + step < size; i++)
	   {
			
	       	if(arr[i] > arr[i+step])
			{
				
				nBuf = arr[i];
				
				arr[i] = arr[i+step];				
				         arr[i+step] = nBuf; 
				
			} 	
	   }
	   step = step/1.2473309; 					
	 }
}


*/



"
bgvhPDGv,Nigerian scammers [22-11-3/2023],bombaires,AIMMS,Wednesday 22nd of November 2023 12:29:31 PM CDT,"<a href=""mailto:ansonbrudenell1962@gmail.com"">ansonbrudenell1962@gmail.com</a>
<a href=""mailto:anson.brud.e.n.e.ll19.6.2@gmail.com"">anson.brud.e.n.e.ll19.6.2@gmail.com</a>
<a href=""mailto:a.n.s.o.n.b.rude.n.e.ll.1.96.2@gmail.com"">a.n.s.o.n.b.rude.n.e.ll.1.96.2@gmail.com</a>
<a href=""mailto:a.ns.on.b.rudenel.l.1.9.62@gmail.com"">a.ns.on.b.rudenel.l.1.9.62@gmail.com</a>
<a href=""mailto:ansonb.r.ude.n.ell.1.962@gmail.com"">ansonb.r.ude.n.ell.1.962@gmail.com</a>
<a href=""mailto:anson.b.rude.ne.l.l19.6.2@gmail.com"">anson.b.rude.ne.l.l19.6.2@gmail.com</a>
<a href=""mailto:an.s.o.n.bru.d.e.nel.l.1962@gmail.com"">an.s.o.n.bru.d.e.nel.l.1962@gmail.com</a>
<a href=""mailto:a.n.so.n.bru.de.ne.ll1.962@gmail.com"">a.n.so.n.bru.de.ne.ll1.962@gmail.com</a>
<a href=""mailto:ansonbr.udenel.l.1.9.62@gmail.com"">ansonbr.udenel.l.1.9.62@gmail.com</a>
<a href=""mailto:a.n.son.brud.e.n.el.l.1.9.62@gmail.com"">a.n.son.brud.e.n.el.l.1.9.62@gmail.com</a>
<a href=""mailto:an.so.n.bru.d.en.e.l.l.196.2@gmail.com"">an.so.n.bru.d.en.e.l.l.196.2@gmail.com</a>
<a href=""mailto:a.nso.nb.ru.de.n.e.l.l.1.96.2@gmail.com"">a.nso.nb.ru.de.n.e.l.l.1.96.2@gmail.com</a>
<a href=""mailto:anso.nb.rud.e.ne.ll196.2@gmail.com"">anso.nb.rud.e.ne.ll196.2@gmail.com</a>
<a href=""mailto:a.n.son.bru.den.e.l.l.19.6.2@gmail.com"">a.n.son.bru.den.e.l.l.19.6.2@gmail.com</a>
<a href=""mailto:ans.o.n.b.r.udene.ll.1.9.62@gmail.com"">ans.o.n.b.r.udene.ll.1.9.62@gmail.com</a>
<a href=""mailto:an.s.o.n.b.r.ude.ne.l.l.1962@gmail.com"">an.s.o.n.b.r.ude.ne.l.l.1962@gmail.com</a>
<a href=""mailto:an.s.onbrude.n.ell196.2@gmail.com"">an.s.onbrude.n.ell196.2@gmail.com</a>
<a href=""mailto:anso.nbr.ud.ene.l.l.1.9.62@gmail.com"">anso.nbr.ud.ene.l.l.1.9.62@gmail.com</a>
<a href=""mailto:a.n.s.on.b.ru.d.ene.ll.1.96.2@gmail.com"">a.n.s.on.b.ru.d.ene.ll.1.96.2@gmail.com</a>
<a href=""mailto:a.nson.b.r.ud.e.ne.l.l196.2@gmail.com"">a.nson.b.r.ud.e.ne.l.l196.2@gmail.com</a>
<a href=""mailto:a.nso.nbr.udenell.19.6.2@gmail.com"">a.nso.nbr.udenell.19.6.2@gmail.com</a>
<a href=""mailto:a.nson.br.ud.e.ne.l.l.19.62@gmail.com"">a.nson.br.ud.e.ne.l.l.19.62@gmail.com</a>
<a href=""mailto:a.n.so.n.bru.de.ne.l.l1.962@gmail.com"">a.n.so.n.bru.de.ne.l.l1.962@gmail.com</a>
<a href=""mailto:a.ns.o.n.b.r.u.denel.l.1.9.62@gmail.com"">a.ns.o.n.b.r.u.denel.l.1.9.62@gmail.com</a>
<a href=""mailto:ans.o.nb.r.ude.nell19.62@gmail.com"">ans.o.nb.r.ude.nell19.62@gmail.com</a>
<a href=""mailto:a.n.so.nb.r.ude.nell1.962@gmail.com"">a.n.so.nb.r.ude.nell1.962@gmail.com</a>
<a href=""mailto:ans.o.n.brud.e.n.e.ll1962@gmail.com"">ans.o.n.brud.e.n.e.ll1962@gmail.com</a>
<a href=""mailto:anson.b.r.ude.nel.l.1.96.2@gmail.com"">anson.b.r.ude.nel.l.1.96.2@gmail.com</a>
<a href=""mailto:a.nso.nb.ruden.e.ll.196.2@gmail.com"">a.nso.nb.ruden.e.ll.196.2@gmail.com</a>
<a href=""mailto:ans.o.n.b.r.ud.enell1962@gmail.com"">ans.o.n.b.r.ud.enell1962@gmail.com</a>
<a href=""mailto:a.n.s.o.nb.ru.denell1.9.6.2@gmail.com"">a.n.s.o.nb.ru.denell1.9.6.2@gmail.com</a>
<a href=""mailto:anson.br.ud.en.ell.1962@gmail.com"">anson.br.ud.en.ell.1962@gmail.com</a>
<a href=""mailto:ansonbr.ude.ne.l.l.196.2@gmail.com"">ansonbr.ude.ne.l.l.196.2@gmail.com</a>
<a href=""mailto:ans.o.n.b.r.u.den.el.l.19.62@gmail.com"">ans.o.n.b.r.u.den.el.l.19.62@gmail.com</a>
<a href=""mailto:ansonbru.d.ene.l.l196.2@gmail.com"">ansonbru.d.ene.l.l196.2@gmail.com</a>
<a href=""mailto:a.n.s.onb.r.uden.e.ll.19.6.2@gmail.com"">a.n.s.onb.r.uden.e.ll.19.6.2@gmail.com</a>
<a href=""mailto:ansonb.ru.de.n.ell.19.62@gmail.com"">ansonb.ru.de.n.ell.19.62@gmail.com</a>
<a href=""mailto:a.n.sonb.r.u.denell19.62@gmail.com"">a.n.sonb.r.u.denell19.62@gmail.com</a>
<a href=""mailto:a.n.sonb.r.u.de.ne.ll1962@gmail.com"">a.n.sonb.r.u.de.ne.ll1962@gmail.com</a>
<a href=""mailto:ansonbr.uden.e.ll.19.6.2@gmail.com"">ansonbr.uden.e.ll.19.6.2@gmail.com</a>
<a href=""mailto:an.s.onbrude.ne.l.l19.62@gmail.com"">an.s.onbrude.ne.l.l19.62@gmail.com</a>
<a href=""mailto:an.so.nbr.u.de.n.ell19.6.2@gmail.com"">an.so.nbr.u.de.n.ell19.6.2@gmail.com</a>
<a href=""mailto:a.n.s.onbr.ud.e.n.ell1.9.62@gmail.com"">a.n.s.onbr.ud.e.n.ell1.9.62@gmail.com</a>
<a href=""mailto:a.nso.nb.r.u.de.n.ell.1.962@gmail.com"">a.nso.nb.r.u.de.n.ell.1.962@gmail.com</a>
<a href=""mailto:a.n.so.nbr.udenell1.9.6.2@gmail.com"">a.n.so.nbr.udenell1.9.6.2@gmail.com</a>
<a href=""mailto:a.n.so.n.br.ud.ene.ll.19.6.2@gmail.com"">a.n.so.n.br.ud.ene.ll.19.6.2@gmail.com</a>
<a href=""mailto:ans.on.b.r.uden.ell.1.9.6.2@gmail.com"">ans.on.b.r.uden.ell.1.9.6.2@gmail.com</a>
<a href=""mailto:a.n.so.n.bru.den.e.ll.1.962@gmail.com"">a.n.so.n.bru.den.e.ll.1.962@gmail.com</a>
<a href=""mailto:ans.o.n.b.r.u.d.enell19.62@gmail.com"">ans.o.n.b.r.u.d.enell19.62@gmail.com</a>
<a href=""mailto:a.n.son.bru.dene.l.l1.9.62@gmail.com"">a.n.son.bru.dene.l.l1.9.62@gmail.com</a>
<a href=""mailto:a.nso.nbr.uden.e.l.l1.962@gmail.com"">a.nso.nbr.uden.e.l.l1.962@gmail.com</a>
<a href=""mailto:a.ns.o.n.br.u.d.en.el.l19.62@gmail.com"">a.ns.o.n.br.u.d.en.el.l19.62@gmail.com</a>
<a href=""mailto:an.s.onbru.d.e.n.el.l.1.9.6.2@gmail.com"">an.s.onbru.d.e.n.el.l.1.9.6.2@gmail.com</a>
<a href=""mailto:a.ns.o.nb.r.ud.enel.l1.9.6.2@gmail.com"">a.ns.o.nb.r.ud.enel.l1.9.6.2@gmail.com</a>
<a href=""mailto:an.son.b.ru.d.en.e.l.l.1.9.6.2@gmail.com"">an.son.b.ru.d.en.e.l.l.1.9.6.2@gmail.com</a>
<a href=""mailto:a.ns.o.n.b.rud.e.nel.l1.9.62@gmail.com"">a.ns.o.n.b.rud.e.nel.l1.9.62@gmail.com</a>
<a href=""mailto:a.ns.on.br.ude.n.ell1.9.6.2@gmail.com"">a.ns.on.br.ude.n.ell1.9.6.2@gmail.com</a>
<a href=""mailto:a.n.s.o.nb.r.ude.nell1.96.2@gmail.com"">a.n.s.o.nb.r.ude.nell1.96.2@gmail.com</a>
<a href=""mailto:anson.b.r.u.denell1.9.6.2@gmail.com"">anson.b.r.u.denell1.9.6.2@gmail.com</a>
<a href=""mailto:anso.n.brudene.l.l19.6.2@gmail.com"">anso.n.brudene.l.l19.6.2@gmail.com</a>
<a href=""mailto:a.nsonb.rud.en.el.l19.62@gmail.com"">a.nsonb.rud.en.el.l19.62@gmail.com</a>
<a href=""mailto:a.n.s.o.n.b.r.ud.e.ne.ll1962@gmail.com"">a.n.s.o.n.b.r.ud.e.ne.ll1962@gmail.com</a>
<a href=""mailto:a.ns.on.br.u.de.n.e.l.l1.9.62@gmail.com"">a.ns.on.br.u.de.n.e.l.l1.9.62@gmail.com</a>
<a href=""mailto:anso.nbrude.n.el.l1962@gmail.com"">anso.nbrude.n.el.l1962@gmail.com</a>
<a href=""mailto:an.s.on.b.r.u.d.ene.ll.19.62@gmail.com"">an.s.on.b.r.u.d.ene.ll.19.62@gmail.com</a>
<a href=""mailto:ans.on.b.r.ud.ene.l.l19.6.2@gmail.com"">ans.on.b.r.ud.ene.l.l19.6.2@gmail.com</a>
<a href=""mailto:a.n.so.nbru.den.el.l1.9.62@gmail.com"">a.n.so.nbru.den.el.l1.9.62@gmail.com</a>
<a href=""mailto:an.s.on.br.u.de.n.el.l.1.96.2@gmail.com"">an.s.on.br.u.de.n.el.l.1.96.2@gmail.com</a>
<a href=""mailto:an.so.n.b.r.u.de.n.ell19.6.2@gmail.com"">an.so.n.b.r.u.de.n.ell19.6.2@gmail.com</a>
<a href=""mailto:anso.n.br.ud.enel.l.196.2@gmail.com"">anso.n.br.ud.enel.l.196.2@gmail.com</a>
<a href=""mailto:a.n.so.n.br.u.den.e.l.l1962@gmail.com"">a.n.so.n.br.u.den.e.l.l1962@gmail.com</a>
<a href=""mailto:a.n.son.b.r.ud.en.e.l.l1962@gmail.com"">a.n.son.b.r.ud.en.e.l.l1962@gmail.com</a>
<a href=""mailto:anso.nb.rud.en.e.l.l1.96.2@gmail.com"">anso.nb.rud.en.e.l.l1.96.2@gmail.com</a>
<a href=""mailto:a.ns.onbrude.nel.l1.9.6.2@gmail.com"">a.ns.onbrude.nel.l1.9.6.2@gmail.com</a>
<a href=""mailto:a.n.so.n.b.rude.nell1.96.2@gmail.com"">a.n.so.n.b.rude.nell1.96.2@gmail.com</a>
<a href=""mailto:ansonbru.den.el.l.196.2@gmail.com"">ansonbru.den.el.l.196.2@gmail.com</a>
<a href=""mailto:a.ns.onb.r.udene.l.l.1.9.6.2@gmail.com"">a.ns.onb.r.udene.l.l.1.9.6.2@gmail.com</a>
<a href=""mailto:a.ns.o.nb.r.ud.ene.l.l1.9.6.2@gmail.com"">a.ns.o.nb.r.ud.ene.l.l1.9.6.2@gmail.com</a>
<a href=""mailto:a.ns.o.n.bru.d.e.ne.ll1962@gmail.com"">a.ns.o.n.bru.d.e.ne.ll1962@gmail.com</a>
<a href=""mailto:an.so.n.br.uden.el.l19.6.2@gmail.com"">an.so.n.br.uden.el.l19.6.2@gmail.com</a>
<a href=""mailto:an.sonbru.de.nel.l1.96.2@gmail.com"">an.sonbru.de.nel.l1.96.2@gmail.com</a>
<a href=""mailto:a.n.so.n.br.udenell196.2@gmail.com"">a.n.so.n.br.udenell196.2@gmail.com</a>
<a href=""mailto:ansonbr.u.denell.1.9.62@gmail.com"">ansonbr.u.denell.1.9.62@gmail.com</a>
<a href=""mailto:an.sonb.ru.de.nel.l1.9.6.2@gmail.com"">an.sonb.ru.de.nel.l1.9.6.2@gmail.com</a>
<a href=""mailto:a.ns.onbru.dene.ll1.962@gmail.com"">a.ns.onbru.dene.ll1.962@gmail.com</a>
<a href=""mailto:a.nsonbr.u.d.e.ne.ll.1962@gmail.com"">a.nsonbr.u.d.e.ne.ll.1962@gmail.com</a>
<a href=""mailto:a.ns.onb.r.u.d.e.ne.l.l.19.6.2@gmail.com"">a.ns.onb.r.u.d.e.ne.l.l.19.6.2@gmail.com</a>
<a href=""mailto:a.n.s.onb.r.ude.n.el.l.1962@gmail.com"">a.n.s.onb.r.ude.n.el.l.1962@gmail.com</a>
<a href=""mailto:a.nso.nb.r.u.d.en.ell.1.96.2@gmail.com"">a.nso.nb.r.u.d.en.ell.1.96.2@gmail.com</a>
<a href=""mailto:ans.o.n.br.u.d.e.n.ell1.96.2@gmail.com"">ans.o.n.br.u.d.e.n.ell1.96.2@gmail.com</a>
<a href=""mailto:anso.nb.r.u.de.n.e.l.l196.2@gmail.com"">anso.nb.r.u.de.n.e.l.l196.2@gmail.com</a>
<a href=""mailto:an.sonbru.d.e.n.el.l.1.9.6.2@gmail.com"">an.sonbru.d.e.n.el.l.1.9.6.2@gmail.com</a>
<a href=""mailto:an.so.nb.r.u.de.ne.ll.19.6.2@gmail.com"">an.so.nb.r.u.de.ne.ll.19.6.2@gmail.com</a>
<a href=""mailto:anso.n.brudene.ll1.9.6.2@gmail.com"">anso.n.brudene.ll1.9.6.2@gmail.com</a>
<a href=""mailto:an.so.nbr.u.den.el.l.196.2@gmail.com"">an.so.nbr.u.den.el.l.196.2@gmail.com</a>
<a href=""mailto:a.n.s.onb.r.u.den.e.ll.196.2@gmail.com"">a.n.s.onb.r.u.den.e.ll.196.2@gmail.com</a>
<a href=""mailto:a.nso.n.br.ud.enel.l.1.9.6.2@gmail.com"">a.nso.n.br.ud.enel.l.1.9.6.2@gmail.com</a>
<a href=""mailto:a.nso.nbrud.e.nel.l196.2@gmail.com"">a.nso.nbrud.e.nel.l196.2@gmail.com</a>
<a href=""mailto:anson.bru.denell.1.9.62@gmail.com"">anson.bru.denell.1.9.62@gmail.com</a>
<a href=""mailto:anso.nb.rude.nel.l19.62@gmail.com"">anso.nb.rude.nel.l19.62@gmail.com</a>
<a href=""mailto:a.ns.o.nbru.d.e.n.ell.1.9.6.2@gmail.com"">a.ns.o.nbru.d.e.n.ell.1.9.6.2@gmail.com</a>
<a href=""mailto:an.son.br.u.d.e.n.el.l.19.6.2@gmail.com"">an.son.br.u.d.e.n.el.l.19.6.2@gmail.com</a>
<a href=""mailto:a.n.s.o.nbrud.ene.l.l19.62@gmail.com"">a.n.s.o.nbrud.ene.l.l19.62@gmail.com</a>
<a href=""mailto:an.son.brude.n.ell1.9.6.2@gmail.com"">an.son.brude.n.ell1.9.6.2@gmail.com</a>
<a href=""mailto:a.nso.nbru.de.n.e.ll196.2@gmail.com"">a.nso.nbru.de.n.e.ll196.2@gmail.com</a>
<a href=""mailto:ans.on.b.r.ud.e.n.ell.1.9.62@gmail.com"">ans.on.b.r.ud.e.n.ell.1.9.62@gmail.com</a>
<a href=""mailto:ansonb.ru.de.n.ell1.962@gmail.com"">ansonb.ru.de.n.ell1.962@gmail.com</a>
<a href=""mailto:ans.o.n.bru.d.enel.l1.9.6.2@gmail.com"">ans.o.n.bru.d.enel.l1.9.6.2@gmail.com</a>
<a href=""mailto:a.ns.o.nb.ru.de.ne.ll.1.9.62@gmail.com"">a.ns.o.nb.ru.de.ne.ll.1.9.62@gmail.com</a>
<a href=""mailto:a.ns.onb.r.ud.e.n.el.l1.962@gmail.com"">a.ns.onb.r.ud.e.n.el.l1.962@gmail.com</a>
<a href=""mailto:a.nsonb.r.ude.n.e.ll.19.62@gmail.com"">a.nsonb.r.ude.n.e.ll.19.62@gmail.com</a>
<a href=""mailto:ansonbrud.en.e.l.l.19.62@gmail.com"">ansonbrud.en.e.l.l.19.62@gmail.com</a>
<a href=""mailto:an.sonbrud.en.e.ll.1962@gmail.com"">an.sonbrud.en.e.ll.1962@gmail.com</a>
<a href=""mailto:an.so.n.b.r.u.denel.l.196.2@gmail.com"">an.so.n.b.r.u.denel.l.196.2@gmail.com</a>
<a href=""mailto:ansonb.ruden.e.ll.1962@gmail.com"">ansonb.ruden.e.ll.1962@gmail.com</a>
<a href=""mailto:a.n.s.on.b.ruden.e.ll.1.9.6.2@gmail.com"">a.n.s.on.b.ruden.e.ll.1.9.6.2@gmail.com</a>
<a href=""mailto:ans.o.nbr.ud.e.n.e.ll.1.9.6.2@gmail.com"">ans.o.nbr.ud.e.n.e.ll.1.9.6.2@gmail.com</a>
<a href=""mailto:anson.br.u.d.en.ell19.6.2@gmail.com"">anson.br.u.d.en.ell19.6.2@gmail.com</a>
<a href=""mailto:a.n.s.onbr.u.d.en.ell1.9.6.2@gmail.com"">a.n.s.onbr.u.d.en.ell1.9.6.2@gmail.com</a>
<a href=""mailto:a.ns.o.nbruden.e.l.l.19.6.2@gmail.com"">a.ns.o.nbruden.e.l.l.19.6.2@gmail.com</a>
<a href=""mailto:a.n.s.o.nbrud.e.nel.l196.2@gmail.com"">a.n.s.o.nbrud.e.nel.l196.2@gmail.com</a>
<a href=""mailto:an.son.bru.de.n.e.ll.1.9.62@gmail.com"">an.son.bru.de.n.e.ll.1.9.62@gmail.com</a>
<a href=""mailto:a.n.s.o.n.bruden.e.l.l196.2@gmail.com"">a.n.s.o.n.bruden.e.l.l196.2@gmail.com</a>
<a href=""mailto:a.n.so.nb.r.ud.e.n.e.l.l.1962@gmail.com"">a.n.so.nb.r.ud.e.n.e.l.l.1962@gmail.com</a>
<a href=""mailto:an.sonb.r.u.de.n.el.l1.9.6.2@gmail.com"">an.sonb.r.u.de.n.el.l1.9.6.2@gmail.com</a>
<a href=""mailto:a.n.s.o.n.b.rudene.l.l1.9.6.2@gmail.com"">a.n.s.o.n.b.rudene.l.l1.9.6.2@gmail.com</a>
<a href=""mailto:an.so.n.b.ru.d.en.ell.1.962@gmail.com"">an.so.n.b.ru.d.en.ell.1.962@gmail.com</a>
<a href=""mailto:a.n.so.n.br.ud.ene.ll1.9.6.2@gmail.com"">a.n.so.n.br.ud.ene.ll1.9.6.2@gmail.com</a>
<a href=""mailto:an.s.o.n.bru.de.nell.1.96.2@gmail.com"">an.s.o.n.bru.de.nell.1.96.2@gmail.com</a>
<a href=""mailto:a.nso.n.br.udenell.196.2@gmail.com"">a.nso.n.br.udenell.196.2@gmail.com</a>
<a href=""mailto:an.s.o.n.b.ru.den.el.l.19.62@gmail.com"">an.s.o.n.b.ru.den.el.l.19.62@gmail.com</a>
<a href=""mailto:an.s.onbr.u.d.en.el.l1962@gmail.com"">an.s.onbr.u.d.en.el.l1962@gmail.com</a>
<a href=""mailto:an.so.n.b.r.u.de.n.e.l.l.1.9.62@gmail.com"">an.so.n.b.r.u.de.n.e.l.l.1.9.62@gmail.com</a>
<a href=""mailto:a.n.so.nb.ru.d.e.nell.19.62@gmail.com"">a.n.so.nb.ru.d.e.nell.19.62@gmail.com</a>
<a href=""mailto:an.s.on.b.ru.dene.l.l19.62@gmail.com"">an.s.on.b.ru.dene.l.l19.62@gmail.com</a>
<a href=""mailto:ans.o.n.br.ud.e.nell.1962@gmail.com"">ans.o.n.br.ud.e.nell.1962@gmail.com</a>
<a href=""mailto:a.n.so.n.bru.de.nel.l1.962@gmail.com"">a.n.so.n.bru.de.nel.l1.962@gmail.com</a>
<a href=""mailto:a.n.s.o.nbrud.e.ne.l.l19.62@gmail.com"">a.n.s.o.nbrud.e.ne.l.l19.62@gmail.com</a>
<a href=""mailto:a.ns.o.nbr.u.d.en.el.l19.6.2@gmail.com"">a.ns.o.nbr.u.d.en.el.l19.6.2@gmail.com</a>
<a href=""mailto:an.son.bru.d.e.n.e.l.l.19.62@gmail.com"">an.son.bru.d.e.n.e.l.l.19.62@gmail.com</a>
<a href=""mailto:an.so.nb.r.u.de.n.e.ll1.96.2@gmail.com"">an.so.nb.r.u.de.n.e.ll1.96.2@gmail.com</a>
<a href=""mailto:a.n.s.on.br.uden.ell.1.96.2@gmail.com"">a.n.s.on.br.uden.ell.1.96.2@gmail.com</a>
<a href=""mailto:an.sonb.r.u.d.en.e.l.l.196.2@gmail.com"">an.sonb.r.u.d.en.e.l.l.196.2@gmail.com</a>
<a href=""mailto:a.nso.nbruden.e.l.l1962@gmail.com"">a.nso.nbruden.e.l.l1962@gmail.com</a>
<a href=""mailto:an.so.n.brude.ne.ll.1.96.2@gmail.com"">an.so.n.brude.ne.ll.1.96.2@gmail.com</a>
<a href=""mailto:ans.on.b.ru.d.ene.l.l.1.9.62@gmail.com"">ans.on.b.ru.d.ene.l.l.1.9.62@gmail.com</a>
<a href=""mailto:anso.nbr.u.d.ene.ll.196.2@gmail.com"">anso.nbr.u.d.ene.ll.196.2@gmail.com</a>
<a href=""mailto:a.ns.o.n.b.rudenell19.6.2@gmail.com"">a.ns.o.n.b.rudenell19.6.2@gmail.com</a>
<a href=""mailto:a.ns.o.nb.r.ud.en.ell.1.9.6.2@gmail.com"">a.ns.o.nb.r.ud.en.ell.1.9.6.2@gmail.com</a>
<a href=""mailto:ans.on.brud.enel.l.1.9.6.2@gmail.com"">ans.on.brud.enel.l.1.9.6.2@gmail.com</a>
<a href=""mailto:a.n.s.onb.r.u.den.ell.196.2@gmail.com"">a.n.s.onb.r.u.den.ell.196.2@gmail.com</a>
<a href=""mailto:a.ns.o.n.br.u.den.ell.1.9.62@gmail.com"">a.ns.o.n.br.u.den.ell.1.9.62@gmail.com</a>
<a href=""mailto:an.s.on.b.ru.d.en.e.l.l.1962@gmail.com"">an.s.on.b.ru.d.en.e.l.l.1962@gmail.com</a>
<a href=""mailto:a.ns.o.n.br.ude.nell.1.9.62@gmail.com"">a.ns.o.n.br.ude.nell.1.9.62@gmail.com</a>
<a href=""mailto:a.nso.nbruden.e.ll.1.96.2@gmail.com"">a.nso.nbruden.e.ll.1.96.2@gmail.com</a>
<a href=""mailto:a.ns.onb.rud.e.n.el.l.1.962@gmail.com"">a.ns.onb.rud.e.n.el.l.1.962@gmail.com</a>
<a href=""mailto:a.n.so.nb.r.u.de.ne.ll.1.96.2@gmail.com"">a.n.so.nb.r.u.de.ne.ll.1.96.2@gmail.com</a>
<a href=""mailto:a.n.so.nbru.d.en.e.l.l.1.962@gmail.com"">a.n.so.nbru.d.en.e.l.l.1.962@gmail.com</a>
<a href=""mailto:a.n.s.onb.ru.d.en.el.l.1.962@gmail.com"">a.n.s.onb.ru.d.en.el.l.1.962@gmail.com</a>
<a href=""mailto:ans.o.nb.r.uden.el.l.19.62@gmail.com"">ans.o.nb.r.uden.el.l.19.62@gmail.com</a>
<a href=""mailto:an.son.b.r.u.d.ene.ll1962@gmail.com"">an.son.b.r.u.d.ene.ll1962@gmail.com</a>
<a href=""mailto:a.n.so.nb.r.ude.ne.ll19.6.2@gmail.com"">a.n.so.nb.r.ude.ne.ll19.6.2@gmail.com</a>
<a href=""mailto:an.so.nbrude.ne.l.l19.62@gmail.com"">an.so.nbrude.ne.l.l19.62@gmail.com</a>
<a href=""mailto:an.s.onbr.udenell.196.2@gmail.com"">an.s.onbr.udenell.196.2@gmail.com</a>
<a href=""mailto:an.s.o.nbru.de.ne.l.l19.6.2@gmail.com"">an.s.o.nbru.de.ne.l.l19.6.2@gmail.com</a>
<a href=""mailto:ans.on.b.ru.d.enel.l.1.9.6.2@gmail.com"">ans.on.b.ru.d.enel.l.1.9.6.2@gmail.com</a>
<a href=""mailto:ansonb.ru.d.e.nell.196.2@gmail.com"">ansonb.ru.d.e.nell.196.2@gmail.com</a>
<a href=""mailto:an.s.o.n.br.ude.n.e.ll19.62@gmail.com"">an.s.o.n.br.ude.n.e.ll19.62@gmail.com</a>
<a href=""mailto:a.n.s.o.nbrud.en.e.ll1962@gmail.com"">a.n.s.o.nbrud.en.e.ll1962@gmail.com</a>
<a href=""mailto:anson.b.r.ud.ene.ll.196.2@gmail.com"">anson.b.r.ud.ene.ll.196.2@gmail.com</a>
<a href=""mailto:an.so.nb.r.udenel.l.19.62@gmail.com"">an.so.nb.r.udenel.l.19.62@gmail.com</a>
<a href=""mailto:ans.on.br.u.d.e.ne.l.l.1.9.62@gmail.com"">ans.on.br.u.d.e.ne.l.l.1.9.62@gmail.com</a>
<a href=""mailto:a.n.s.on.bru.de.n.el.l1.962@gmail.com"">a.n.s.on.bru.de.n.el.l1.962@gmail.com</a>
<a href=""mailto:a.n.s.o.n.br.ude.ne.ll.1.962@gmail.com"">a.n.s.o.n.br.ude.ne.ll.1.962@gmail.com</a>
<a href=""mailto:a.ns.onb.ru.d.en.el.l1.962@gmail.com"">a.ns.onb.ru.d.en.el.l1.962@gmail.com</a>
<a href=""mailto:ans.on.br.u.d.e.n.e.ll.196.2@gmail.com"">ans.on.br.u.d.e.n.e.ll.196.2@gmail.com</a>
<a href=""mailto:an.s.o.n.b.r.u.d.e.n.el.l1.96.2@gmail.com"">an.s.o.n.b.r.u.d.e.n.el.l1.96.2@gmail.com</a>
<a href=""mailto:a.n.s.o.n.b.r.u.d.en.ell19.6.2@gmail.com"">a.n.s.o.n.b.r.u.d.en.ell19.6.2@gmail.com</a>
<a href=""mailto:a.n.s.o.n.b.rud.e.n.e.l.l.1.962@gmail.com"">a.n.s.o.n.b.rud.e.n.e.l.l.1.962@gmail.com</a>
<a href=""mailto:ans.on.br.u.de.ne.l.l.1.96.2@gmail.com"">ans.on.br.u.de.ne.l.l.1.96.2@gmail.com</a>
<a href=""mailto:a.nso.n.br.ud.en.el.l19.6.2@gmail.com"">a.nso.n.br.ud.en.el.l19.6.2@gmail.com</a>
<a href=""mailto:an.so.n.b.rude.nel.l.1.962@gmail.com"">an.so.n.b.rude.nel.l.1.962@gmail.com</a>
<a href=""mailto:a.nson.b.r.u.de.n.ell.1.9.6.2@gmail.com"">a.nson.b.r.u.de.n.ell.1.9.6.2@gmail.com</a>
<a href=""mailto:an.s.o.nbr.u.d.e.n.el.l.1.9.62@gmail.com"">an.s.o.nbr.u.d.e.n.el.l.1.9.62@gmail.com</a>
<a href=""mailto:ans.o.n.b.rude.n.ell19.6.2@gmail.com"">ans.o.n.b.rude.n.ell19.6.2@gmail.com</a>
<a href=""mailto:a.ns.o.n.b.r.ude.nel.l.1.96.2@gmail.com"">a.ns.o.n.b.r.ude.nel.l.1.96.2@gmail.com</a>
<a href=""mailto:a.n.son.b.ru.d.e.ne.ll1.9.62@gmail.com"">a.n.son.b.ru.d.e.ne.ll1.9.62@gmail.com</a>
<a href=""mailto:ansonbr.ude.nel.l.1.96.2@gmail.com"">ansonbr.ude.nel.l.1.96.2@gmail.com</a>
<a href=""mailto:a.n.s.o.nbr.ud.ene.l.l1.96.2@gmail.com"">a.n.s.o.nbr.ud.ene.l.l1.96.2@gmail.com</a>
<a href=""mailto:ans.on.b.r.ud.e.n.ell1.9.62@gmail.com"">ans.on.b.r.ud.e.n.ell1.9.62@gmail.com</a>
<a href=""mailto:a.ns.onbr.ud.en.ell19.62@gmail.com"">a.ns.onbr.ud.en.ell19.62@gmail.com</a>
<a href=""mailto:a.n.s.o.n.b.rud.e.ne.ll1962@gmail.com"">a.n.s.o.n.b.rud.e.ne.ll1962@gmail.com</a>
<a href=""mailto:ans.on.b.ru.d.en.e.l.l1.9.6.2@gmail.com"">ans.on.b.ru.d.en.e.l.l1.9.6.2@gmail.com</a>
<a href=""mailto:an.s.o.nb.ru.de.n.e.ll1.9.62@gmail.com"">an.s.o.nb.ru.de.n.e.ll1.9.62@gmail.com</a>
<a href=""mailto:an.s.o.nb.r.ud.e.ne.ll.19.62@gmail.com"">an.s.o.nb.r.ud.e.ne.ll.19.62@gmail.com</a>
<a href=""mailto:a.n.s.o.nbr.ud.ene.l.l1.9.62@gmail.com"">a.n.s.o.nbr.ud.ene.l.l1.9.62@gmail.com</a>
<a href=""mailto:a.n.s.on.b.r.u.de.n.ell.19.6.2@gmail.com"">a.n.s.on.b.r.u.de.n.ell.19.6.2@gmail.com</a>
<a href=""mailto:ans.o.nb.r.u.de.n.e.l.l.19.6.2@gmail.com"">ans.o.nb.r.u.de.n.e.l.l.19.6.2@gmail.com</a>
<a href=""mailto:an.so.nb.r.u.de.ne.l.l.1.9.62@gmail.com"">an.so.nb.r.u.de.ne.l.l.1.9.62@gmail.com</a>
<a href=""mailto:a.n.s.o.n.b.ru.de.n.ell1.96.2@gmail.com"">a.n.s.o.n.b.ru.de.n.ell1.96.2@gmail.com</a>
<a href=""mailto:a.n.son.br.ude.n.ell.1.96.2@gmail.com"">a.n.son.br.ude.n.ell.1.96.2@gmail.com</a>
<a href=""mailto:iinntteerrkkuulltt@hanmail.net"">iinntteerrkkuulltt@hanmail.net</a>
<a href=""mailto:barristerjavierlopez122@yahoo.com"">barristerjavierlopez122@yahoo.com</a>
<a href=""mailto:barristerjavierlopez121@yahoo.com"">barristerjavierlopez121@yahoo.com</a>
<a href=""mailto:mail13@daum.net"">mail13@daum.net</a>
<a href=""mailto:bankof545@googlemail.com"">bankof545@googlemail.com</a>
<a href=""mailto:b.an.k.o.f.5.45@googlemail.com"">b.an.k.o.f.5.45@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.5.4.5@googlemail.com"">ba.n.ko.f.5.4.5@googlemail.com</a>
<a href=""mailto:ban.kof545@googlemail.com"">ban.kof545@googlemail.com</a>
<a href=""mailto:ban.kof5.4.5@googlemail.com"">ban.kof5.4.5@googlemail.com</a>
<a href=""mailto:ban.kof.545@googlemail.com"">ban.kof.545@googlemail.com</a>
<a href=""mailto:b.an.ko.f.5.45@googlemail.com"">b.an.ko.f.5.45@googlemail.com</a>
<a href=""mailto:ban.k.of.545@googlemail.com"">ban.k.of.545@googlemail.com</a>
<a href=""mailto:b.ank.of.545@googlemail.com"">b.ank.of.545@googlemail.com</a>
<a href=""mailto:b.ank.of545@googlemail.com"">b.ank.of545@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f.5.4.5@googlemail.com"">b.a.n.ko.f.5.4.5@googlemail.com</a>
<a href=""mailto:b.an.ko.f54.5@googlemail.com"">b.an.ko.f54.5@googlemail.com</a>
<a href=""mailto:ban.ko.f.5.4.5@googlemail.com"">ban.ko.f.5.4.5@googlemail.com</a>
<a href=""mailto:bank.o.f.5.4.5@googlemail.com"">bank.o.f.5.4.5@googlemail.com</a>
<a href=""mailto:ba.nk.of.545@googlemail.com"">ba.nk.of.545@googlemail.com</a>
<a href=""mailto:bank.o.f.545@googlemail.com"">bank.o.f.545@googlemail.com</a>
<a href=""mailto:bank.o.f54.5@googlemail.com"">bank.o.f54.5@googlemail.com</a>
<a href=""mailto:ba.nk.of5.45@googlemail.com"">ba.nk.of5.45@googlemail.com</a>
<a href=""mailto:ba.n.ko.f54.5@googlemail.com"">ba.n.ko.f54.5@googlemail.com</a>
<a href=""mailto:ba.n.ko.f545@googlemail.com"">ba.n.ko.f545@googlemail.com</a>
<a href=""mailto:ba.n.kof.5.45@googlemail.com"">ba.n.kof.5.45@googlemail.com</a>
<a href=""mailto:ban.k.of.54.5@googlemail.com"">ban.k.of.54.5@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f.545@googlemail.com"">b.a.n.k.o.f.545@googlemail.com</a>
<a href=""mailto:ba.nkof545@googlemail.com"">ba.nkof545@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.5.45@googlemail.com"">ba.n.ko.f.5.45@googlemail.com</a>
<a href=""mailto:b.ankof.5.4.5@googlemail.com"">b.ankof.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nko.f.545@googlemail.com"">b.a.nko.f.545@googlemail.com</a>
<a href=""mailto:b.a.nk.of545@googlemail.com"">b.a.nk.of545@googlemail.com</a>
<a href=""mailto:b.ank.of5.4.5@googlemail.com"">b.ank.of5.4.5@googlemail.com</a>
<a href=""mailto:b.ankof5.4.5@googlemail.com"">b.ankof5.4.5@googlemail.com</a>
<a href=""mailto:ban.ko.f54.5@googlemail.com"">ban.ko.f54.5@googlemail.com</a>
<a href=""mailto:b.an.kof.54.5@googlemail.com"">b.an.kof.54.5@googlemail.com</a>
<a href=""mailto:b.a.nk.of.5.4.5@googlemail.com"">b.a.nk.of.5.4.5@googlemail.com</a>
<a href=""mailto:b.an.ko.f.545@googlemail.com"">b.an.ko.f.545@googlemail.com</a>
<a href=""mailto:ban.k.o.f54.5@googlemail.com"">ban.k.o.f54.5@googlemail.com</a>
<a href=""mailto:bankof5.4.5@googlemail.com"">bankof5.4.5@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f545@googlemail.com"">b.a.n.ko.f545@googlemail.com</a>
<a href=""mailto:bank.of54.5@googlemail.com"">bank.of54.5@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.545@googlemail.com"">ba.n.ko.f.545@googlemail.com</a>
<a href=""mailto:b.a.nkof545@googlemail.com"">b.a.nkof545@googlemail.com</a>
<a href=""mailto:ban.k.o.f.545@googlemail.com"">ban.k.o.f.545@googlemail.com</a>
<a href=""mailto:ba.n.kof5.45@googlemail.com"">ba.n.kof5.45@googlemail.com</a>
<a href=""mailto:b.ank.o.f.5.4.5@googlemail.com"">b.ank.o.f.5.4.5@googlemail.com</a>
<a href=""mailto:ba.nk.o.f.5.45@googlemail.com"">ba.nk.o.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.n.kof54.5@googlemail.com"">b.a.n.kof54.5@googlemail.com</a>
<a href=""mailto:banko.f54.5@googlemail.com"">banko.f54.5@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f5.45@googlemail.com"">ba.n.k.o.f5.45@googlemail.com</a>
<a href=""mailto:b.an.ko.f5.4.5@googlemail.com"">b.an.ko.f5.4.5@googlemail.com</a>
<a href=""mailto:b.an.kof5.45@googlemail.com"">b.an.kof5.45@googlemail.com</a>
<a href=""mailto:b.a.n.kof.5.45@googlemail.com"">b.a.n.kof.5.45@googlemail.com</a>
<a href=""mailto:bank.of5.4.5@googlemail.com"">bank.of5.4.5@googlemail.com</a>
<a href=""mailto:b.a.n.kof545@googlemail.com"">b.a.n.kof545@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f.5.4.5@googlemail.com"">ba.n.k.o.f.5.4.5@googlemail.com</a>
<a href=""mailto:ba.n.k.of54.5@googlemail.com"">ba.n.k.of54.5@googlemail.com</a>
<a href=""mailto:ba.n.k.of5.45@googlemail.com"">ba.n.k.of5.45@googlemail.com</a>
<a href=""mailto:ban.ko.f.545@googlemail.com"">ban.ko.f.545@googlemail.com</a>
<a href=""mailto:ba.nko.f.54.5@googlemail.com"">ba.nko.f.54.5@googlemail.com</a>
<a href=""mailto:b.ank.of.5.4.5@googlemail.com"">b.ank.of.5.4.5@googlemail.com</a>
<a href=""mailto:ba.nk.o.f545@googlemail.com"">ba.nk.o.f545@googlemail.com</a>
<a href=""mailto:b.ankof5.45@googlemail.com"">b.ankof5.45@googlemail.com</a>
<a href=""mailto:b.an.kof.5.4.5@googlemail.com"">b.an.kof.5.4.5@googlemail.com</a>
<a href=""mailto:b.ank.o.f54.5@googlemail.com"">b.ank.o.f54.5@googlemail.com</a>
<a href=""mailto:bankof.5.4.5@googlemail.com"">bankof.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nkof54.5@googlemail.com"">b.a.nkof54.5@googlemail.com</a>
<a href=""mailto:b.ankof54.5@googlemail.com"">b.ankof54.5@googlemail.com</a>
<a href=""mailto:ban.ko.f.54.5@googlemail.com"">ban.ko.f.54.5@googlemail.com</a>
<a href=""mailto:ban.k.o.f5.4.5@googlemail.com"">ban.k.o.f5.4.5@googlemail.com</a>
<a href=""mailto:b.a.n.kof.5.4.5@googlemail.com"">b.a.n.kof.5.4.5@googlemail.com</a>
<a href=""mailto:ba.n.k.of545@googlemail.com"">ba.n.k.of545@googlemail.com</a>
<a href=""mailto:b.ankof545@googlemail.com"">b.ankof545@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f5.4.5@googlemail.com"">ba.n.k.o.f5.4.5@googlemail.com</a>
<a href=""mailto:ba.nk.o.f.545@googlemail.com"">ba.nk.o.f.545@googlemail.com</a>
<a href=""mailto:banko.f545@googlemail.com"">banko.f545@googlemail.com</a>
<a href=""mailto:bank.o.f545@googlemail.com"">bank.o.f545@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f.545@googlemail.com"">ba.n.k.o.f.545@googlemail.com</a>
<a href=""mailto:bank.of.54.5@googlemail.com"">bank.of.54.5@googlemail.com</a>
<a href=""mailto:bankof54.5@googlemail.com"">bankof54.5@googlemail.com</a>
<a href=""mailto:ban.kof.5.45@googlemail.com"">ban.kof.5.45@googlemail.com</a>
<a href=""mailto:ban.k.of545@googlemail.com"">ban.k.of545@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f.5.45@googlemail.com"">ba.n.k.o.f.5.45@googlemail.com</a>
<a href=""mailto:b.ankof.5.45@googlemail.com"">b.ankof.5.45@googlemail.com</a>
<a href=""mailto:ba.nko.f5.4.5@googlemail.com"">ba.nko.f5.4.5@googlemail.com</a>
<a href=""mailto:ba.nk.of5.4.5@googlemail.com"">ba.nk.of5.4.5@googlemail.com</a>
<a href=""mailto:ban.ko.f5.4.5@googlemail.com"">ban.ko.f5.4.5@googlemail.com</a>
<a href=""mailto:banko.f5.4.5@googlemail.com"">banko.f5.4.5@googlemail.com</a>
<a href=""mailto:ba.nk.o.f.5.4.5@googlemail.com"">ba.nk.o.f.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.n.kof5.4.5@googlemail.com"">b.a.n.kof5.4.5@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f.54.5@googlemail.com"">b.a.n.ko.f.54.5@googlemail.com</a>
<a href=""mailto:b.an.k.of545@googlemail.com"">b.an.k.of545@googlemail.com</a>
<a href=""mailto:b.an.ko.f.5.4.5@googlemail.com"">b.an.ko.f.5.4.5@googlemail.com</a>
<a href=""mailto:ba.nkof.545@googlemail.com"">ba.nkof.545@googlemail.com</a>
<a href=""mailto:ban.k.o.f.5.45@googlemail.com"">ban.k.o.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f54.5@googlemail.com"">b.a.nk.o.f54.5@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f.5.45@googlemail.com"">b.a.n.ko.f.5.45@googlemail.com</a>
<a href=""mailto:banko.f.54.5@googlemail.com"">banko.f.54.5@googlemail.com</a>
<a href=""mailto:ba.nkof.54.5@googlemail.com"">ba.nkof.54.5@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f.5.45@googlemail.com"">b.a.n.k.o.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.n.k.of545@googlemail.com"">b.a.n.k.of545@googlemail.com</a>
<a href=""mailto:b.a.nkof.545@googlemail.com"">b.a.nkof.545@googlemail.com</a>
<a href=""mailto:ba.n.k.of.5.45@googlemail.com"">ba.n.k.of.5.45@googlemail.com</a>
<a href=""mailto:ba.n.kof54.5@googlemail.com"">ba.n.kof54.5@googlemail.com</a>
<a href=""mailto:b.ank.o.f5.45@googlemail.com"">b.ank.o.f5.45@googlemail.com</a>
<a href=""mailto:ba.nko.f545@googlemail.com"">ba.nko.f545@googlemail.com</a>
<a href=""mailto:b.ank.of54.5@googlemail.com"">b.ank.of54.5@googlemail.com</a>
<a href=""mailto:bankof5.45@googlemail.com"">bankof5.45@googlemail.com</a>
<a href=""mailto:bank.of5.45@googlemail.com"">bank.of5.45@googlemail.com</a>
<a href=""mailto:ba.n.kof.545@googlemail.com"">ba.n.kof.545@googlemail.com</a>
<a href=""mailto:b.anko.f5.4.5@googlemail.com"">b.anko.f5.4.5@googlemail.com</a>
<a href=""mailto:banko.f.5.4.5@googlemail.com"">banko.f.5.4.5@googlemail.com</a>
<a href=""mailto:ba.nko.f.5.4.5@googlemail.com"">ba.nko.f.5.4.5@googlemail.com</a>
<a href=""mailto:ba.nko.f5.45@googlemail.com"">ba.nko.f5.45@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.54.5@googlemail.com"">b.a.n.k.of.54.5@googlemail.com</a>
<a href=""mailto:banko.f.5.45@googlemail.com"">banko.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.nk.of.54.5@googlemail.com"">b.a.nk.of.54.5@googlemail.com</a>
<a href=""mailto:ba.nkof54.5@googlemail.com"">ba.nkof54.5@googlemail.com</a>
<a href=""mailto:b.a.nko.f.5.45@googlemail.com"">b.a.nko.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.nkof5.45@googlemail.com"">b.a.nkof5.45@googlemail.com</a>
<a href=""mailto:ban.k.o.f.54.5@googlemail.com"">ban.k.o.f.54.5@googlemail.com</a>
<a href=""mailto:b.an.ko.f5.45@googlemail.com"">b.an.ko.f5.45@googlemail.com</a>
<a href=""mailto:ban.k.of.5.45@googlemail.com"">ban.k.of.5.45@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f.5.4.5@googlemail.com"">b.a.n.k.o.f.5.4.5@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f.54.5@googlemail.com"">ba.n.k.o.f.54.5@googlemail.com</a>
<a href=""mailto:ban.ko.f545@googlemail.com"">ban.ko.f545@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f.54.5@googlemail.com"">b.a.n.k.o.f.54.5@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.54.5@googlemail.com"">ba.n.ko.f.54.5@googlemail.com</a>
<a href=""mailto:b.ank.o.f545@googlemail.com"">b.ank.o.f545@googlemail.com</a>
<a href=""mailto:b.an.k.o.f.5.4.5@googlemail.com"">b.an.k.o.f.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nk.of5.45@googlemail.com"">b.a.nk.of5.45@googlemail.com</a>
<a href=""mailto:ba.nkof5.4.5@googlemail.com"">ba.nkof5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.54.5@googlemail.com"">b.a.nk.o.f.54.5@googlemail.com</a>
<a href=""mailto:ba.n.kof.5.4.5@googlemail.com"">ba.n.kof.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.545@googlemail.com"">b.a.nk.o.f.545@googlemail.com</a>
<a href=""mailto:b.a.nk.of.545@googlemail.com"">b.a.nk.of.545@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f54.5@googlemail.com"">b.a.n.k.o.f54.5@googlemail.com</a>
<a href=""mailto:b.an.k.of.5.4.5@googlemail.com"">b.an.k.of.5.4.5@googlemail.com</a>
<a href=""mailto:b.an.kof545@googlemail.com"">b.an.kof545@googlemail.com</a>
<a href=""mailto:bank.of.5.45@googlemail.com"">bank.of.5.45@googlemail.com</a>
<a href=""mailto:ba.nk.of545@googlemail.com"">ba.nk.of545@googlemail.com</a>
<a href=""mailto:ban.kof.54.5@googlemail.com"">ban.kof.54.5@googlemail.com</a>
<a href=""mailto:ba.nk.o.f5.45@googlemail.com"">ba.nk.o.f5.45@googlemail.com</a>
<a href=""mailto:b.anko.f.5.4.5@googlemail.com"">b.anko.f.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.n.kof.54.5@googlemail.com"">b.a.n.kof.54.5@googlemail.com</a>
<a href=""mailto:b.a.nk.of54.5@googlemail.com"">b.a.nk.of54.5@googlemail.com</a>
<a href=""mailto:b.ank.of5.45@googlemail.com"">b.ank.of5.45@googlemail.com</a>
<a href=""mailto:b.ank.of.5.45@googlemail.com"">b.ank.of.5.45@googlemail.com</a>
<a href=""mailto:b.a.nko.f5.45@googlemail.com"">b.a.nko.f5.45@googlemail.com</a>
<a href=""mailto:b.ank.o.f5.4.5@googlemail.com"">b.ank.o.f5.4.5@googlemail.com</a>
<a href=""mailto:ba.nkof.5.45@googlemail.com"">ba.nkof.5.45@googlemail.com</a>
<a href=""mailto:ban.k.o.f5.45@googlemail.com"">ban.k.o.f5.45@googlemail.com</a>
<a href=""mailto:b.a.n.k.of54.5@googlemail.com"">b.a.n.k.of54.5@googlemail.com</a>
<a href=""mailto:ba.nk.of.5.4.5@googlemail.com"">ba.nk.of.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nkof.5.45@googlemail.com"">b.a.nkof.5.45@googlemail.com</a>
<a href=""mailto:ba.nk.of.5.45@googlemail.com"">ba.nk.of.5.45@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f5.4.5@googlemail.com"">b.a.n.k.o.f5.4.5@googlemail.com</a>
<a href=""mailto:b.anko.f.5.45@googlemail.com"">b.anko.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.545@googlemail.com"">b.a.n.k.of.545@googlemail.com</a>
<a href=""mailto:b.an.k.o.f.54.5@googlemail.com"">b.an.k.o.f.54.5@googlemail.com</a>
<a href=""mailto:b.a.n.kof.545@googlemail.com"">b.a.n.kof.545@googlemail.com</a>
<a href=""mailto:b.ankof.545@googlemail.com"">b.ankof.545@googlemail.com</a>
<a href=""mailto:ban.ko.f.5.45@googlemail.com"">ban.ko.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f5.45@googlemail.com"">b.a.n.k.o.f5.45@googlemail.com</a>
<a href=""mailto:b.ank.o.f.5.45@googlemail.com"">b.ank.o.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.nko.f545@googlemail.com"">b.a.nko.f545@googlemail.com</a>
<a href=""mailto:ba.nko.f.545@googlemail.com"">ba.nko.f.545@googlemail.com</a>
<a href=""mailto:ba.nk.o.f5.4.5@googlemail.com"">ba.nk.o.f5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nkof5.4.5@googlemail.com"">b.a.nkof5.4.5@googlemail.com</a>
<a href=""mailto:ban.k.o.f.5.4.5@googlemail.com"">ban.k.o.f.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nko.f54.5@googlemail.com"">b.a.nko.f54.5@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.5.4.5@googlemail.com"">b.a.n.k.of.5.4.5@googlemail.com</a>
<a href=""mailto:ba.n.kof5.4.5@googlemail.com"">ba.n.kof5.4.5@googlemail.com</a>
<a href=""mailto:ba.n.k.of.545@googlemail.com"">ba.n.k.of.545@googlemail.com</a>
<a href=""mailto:ba.nkof.5.4.5@googlemail.com"">ba.nkof.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nko.f.5.4.5@googlemail.com"">b.a.nko.f.5.4.5@googlemail.com</a>
<a href=""mailto:ba.n.kof.54.5@googlemail.com"">ba.n.kof.54.5@googlemail.com</a>
<a href=""mailto:b.anko.f.545@googlemail.com"">b.anko.f.545@googlemail.com</a>
<a href=""mailto:bankof.5.45@googlemail.com"">bankof.5.45@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f54.5@googlemail.com"">ba.n.k.o.f54.5@googlemail.com</a>
<a href=""mailto:ban.k.of.5.4.5@googlemail.com"">ban.k.of.5.4.5@googlemail.com</a>
<a href=""mailto:bankof.545@googlemail.com"">bankof.545@googlemail.com</a>
<a href=""mailto:ba.n.kof545@googlemail.com"">ba.n.kof545@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f54.5@googlemail.com"">b.a.n.ko.f54.5@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.5.45@googlemail.com"">b.a.n.k.of.5.45@googlemail.com</a>
<a href=""mailto:bank.of.545@googlemail.com"">bank.of.545@googlemail.com</a>
<a href=""mailto:banko.f.545@googlemail.com"">banko.f.545@googlemail.com</a>
<a href=""mailto:ban.kof.5.4.5@googlemail.com"">ban.kof.5.4.5@googlemail.com</a>
<a href=""mailto:bankof.54.5@googlemail.com"">bankof.54.5@googlemail.com</a>
<a href=""mailto:b.an.kof5.4.5@googlemail.com"">b.an.kof5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.5.45@googlemail.com"">b.a.nk.o.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.n.kof5.45@googlemail.com"">b.a.n.kof5.45@googlemail.com</a>
<a href=""mailto:ban.k.o.f545@googlemail.com"">ban.k.o.f545@googlemail.com</a>
<a href=""mailto:b.a.n.k.of5.45@googlemail.com"">b.a.n.k.of5.45@googlemail.com</a>
<a href=""mailto:b.ank.o.f.545@googlemail.com"">b.ank.o.f.545@googlemail.com</a>
<a href=""mailto:b.a.nk.of.5.45@googlemail.com"">b.a.nk.of.5.45@googlemail.com</a>
<a href=""mailto:bankof545@googlemail.com"">bankof545@googlemail.com</a>
<a href=""mailto:b.a.nk.of5.4.5@googlemail.com"">b.a.nk.of5.4.5@googlemail.com</a>
<a href=""mailto:ba.nk.o.f.54.5@googlemail.com"">ba.nk.o.f.54.5@googlemail.com</a>
<a href=""mailto:b.an.kof54.5@googlemail.com"">b.an.kof54.5@googlemail.com</a>
<a href=""mailto:ban.k.of5.4.5@googlemail.com"">ban.k.of5.4.5@googlemail.com</a>
<a href=""mailto:ba.nko.f54.5@googlemail.com"">ba.nko.f54.5@googlemail.com</a>
<a href=""mailto:b.anko.f.54.5@googlemail.com"">b.anko.f.54.5@googlemail.com</a>
<a href=""mailto:b.anko.f5.45@googlemail.com"">b.anko.f5.45@googlemail.com</a>
<a href=""mailto:mr.howardbruce88@googlemail.com"">mr.howardbruce88@googlemail.com</a>
<a href=""mailto:mr.h.o.war.dbru.c.e8.8@googlemail.com"">mr.h.o.war.dbru.c.e8.8@googlemail.com</a>
<a href=""mailto:mr..howard.b.ru.ce88@googlemail.com"">mr..howard.b.ru.ce88@googlemail.com</a>
<a href=""mailto:mr...h.ow.a.r.db.ru.ce8.8@googlemail.com"">mr...h.ow.a.r.db.ru.ce8.8@googlemail.com</a>
<a href=""mailto:m.r..ho.w.a.r.d.b.ru.c.e.88@googlemail.com"">m.r..ho.w.a.r.d.b.ru.c.e.88@googlemail.com</a>
<a href=""mailto:m.r.h.ow.a.rd.b.r.uc.e8.8@googlemail.com"">m.r.h.ow.a.rd.b.r.uc.e8.8@googlemail.com</a>
<a href=""mailto:mr.h.o.w.ardb.ru.ce8.8@googlemail.com"">mr.h.o.w.ardb.ru.ce8.8@googlemail.com</a>
<a href=""mailto:mr...h.ow.a.r.d.b.r.uce88@googlemail.com"">mr...h.ow.a.r.d.b.r.uce88@googlemail.com</a>
<a href=""mailto:m.r.h.o.w.a.rdb.r.uce8.8@googlemail.com"">m.r.h.o.w.a.rdb.r.uce8.8@googlemail.com</a>
<a href=""mailto:mr.h.owar.d.b.r.u.ce.88@googlemail.com"">mr.h.owar.d.b.r.u.ce.88@googlemail.com</a>
<a href=""mailto:m.r.howa.rdb.r.u.c.e.88@googlemail.com"">m.r.howa.rdb.r.u.c.e.88@googlemail.com</a>
<a href=""mailto:m.r..how.a.r.d.b.ru.c.e8.8@googlemail.com"">m.r..how.a.r.d.b.ru.c.e8.8@googlemail.com</a>
<a href=""mailto:m.r..h.owa.rd.bru.c.e8.8@googlemail.com"">m.r..h.owa.rd.bru.c.e8.8@googlemail.com</a>
<a href=""mailto:m.r..how.ar.d.b.ruce.88@googlemail.com"">m.r..how.ar.d.b.ruce.88@googlemail.com</a>
<a href=""mailto:mr..h.o.w.ar.d.br.u.ce.88@googlemail.com"">mr..h.o.w.ar.d.br.u.ce.88@googlemail.com</a>
<a href=""mailto:mr...h.owa.r.d.bru.ce.8.8@googlemail.com"">mr...h.owa.r.d.bru.ce.8.8@googlemail.com</a>
<a href=""mailto:m.r.howa.r.dbru.ce88@googlemail.com"">m.r.howa.r.dbru.ce88@googlemail.com</a>
<a href=""mailto:mr..howa.rdbruce88@googlemail.com"">mr..howa.rdbruce88@googlemail.com</a>
<a href=""mailto:mr...ho.war.d.br.uc.e88@googlemail.com"">mr...ho.war.d.br.uc.e88@googlemail.com</a>
<a href=""mailto:m.r.howa.rdbruc.e8.8@googlemail.com"">m.r.howa.rdbruc.e8.8@googlemail.com</a>
<a href=""mailto:m.r...h.o.war.d.b.r.u.ce88@googlemail.com"">m.r...h.o.war.d.b.r.u.ce88@googlemail.com</a>
<a href=""mailto:mr.ho.w.ar.d.b.ru.ce.88@googlemail.com"">mr.ho.w.ar.d.b.ru.ce.88@googlemail.com</a>
<a href=""mailto:mr..h.o.w.ardb.ru.c.e88@googlemail.com"">mr..h.o.w.ardb.ru.c.e88@googlemail.com</a>
<a href=""mailto:m.r...h.owar.d.b.r.u.c.e8.8@googlemail.com"">m.r...h.owar.d.b.r.u.c.e8.8@googlemail.com</a>
<a href=""mailto:mr...how.a.r.db.r.u.c.e8.8@googlemail.com"">mr...how.a.r.db.r.u.c.e8.8@googlemail.com</a>
<a href=""mailto:mr..how.a.rdbruc.e.8.8@googlemail.com"">mr..how.a.rdbruc.e.8.8@googlemail.com</a>
<a href=""mailto:mr..how.a.rdbr.u.ce8.8@googlemail.com"">mr..how.a.rdbr.u.ce8.8@googlemail.com</a>
<a href=""mailto:mr.h.oward.b.r.uce.88@googlemail.com"">mr.h.oward.b.r.uce.88@googlemail.com</a>
<a href=""mailto:mr..h.o.wardb.ru.c.e8.8@googlemail.com"">mr..h.o.wardb.ru.c.e8.8@googlemail.com</a>
<a href=""mailto:mr..ho.war.d.bru.ce.88@googlemail.com"">mr..ho.war.d.bru.ce.88@googlemail.com</a>
<a href=""mailto:mr..h.owa.rd.b.ruc.e8.8@googlemail.com"">mr..h.owa.rd.b.ruc.e8.8@googlemail.com</a>
<a href=""mailto:mr..howar.db.r.u.ce88@googlemail.com"">mr..howar.db.r.u.ce88@googlemail.com</a>
<a href=""mailto:m.r...how.a.r.db.ruce.8.8@googlemail.com"">m.r...how.a.r.db.ruce.8.8@googlemail.com</a>
<a href=""mailto:mr..ho.w.ardb.r.uce8.8@googlemail.com"">mr..ho.w.ardb.r.uce8.8@googlemail.com</a>
<a href=""mailto:m.r..ho.wa.r.d.b.ruce.88@googlemail.com"">m.r..ho.wa.r.d.b.ruce.88@googlemail.com</a>
<a href=""mailto:mr..h.owa.rd.bru.ce88@googlemail.com"">mr..h.owa.rd.bru.ce88@googlemail.com</a>
<a href=""mailto:mr..h.o.w.ard.br.u.ce.8.8@googlemail.com"">mr..h.o.w.ard.br.u.ce.8.8@googlemail.com</a>
<a href=""mailto:mr..ho.w.a.rd.bru.c.e88@googlemail.com"">mr..ho.w.a.rd.bru.c.e88@googlemail.com</a>
<a href=""mailto:mr..h.ow.ardb.ruce.8.8@googlemail.com"">mr..h.ow.ardb.ruce.8.8@googlemail.com</a>
<a href=""mailto:m.r.h.owardb.r.u.ce8.8@googlemail.com"">m.r.h.owardb.r.u.ce8.8@googlemail.com</a>
<a href=""mailto:m.r..how.a.rdbruce.8.8@googlemail.com"">m.r..how.a.rdbruce.8.8@googlemail.com</a>
<a href=""mailto:m.r...how.a.rdb.ruc.e.88@googlemail.com"">m.r...how.a.rdb.ruc.e.88@googlemail.com</a>
<a href=""mailto:mr.h.ow.ardb.ru.c.e8.8@googlemail.com"">mr.h.ow.ardb.ru.c.e8.8@googlemail.com</a>
<a href=""mailto:mr..h.ow.a.rd.b.r.uc.e88@googlemail.com"">mr..h.ow.a.rd.b.r.uc.e88@googlemail.com</a>
<a href=""mailto:m.r.h.ow.a.rd.bruc.e88@googlemail.com"">m.r.h.ow.a.rd.bruc.e88@googlemail.com</a>
<a href=""mailto:mr..h.ow.ardbruc.e88@googlemail.com"">mr..h.ow.ardbruc.e88@googlemail.com</a>
<a href=""mailto:mr.h.owar.dbr.uc.e8.8@googlemail.com"">mr.h.owar.dbr.uc.e8.8@googlemail.com</a>
<a href=""mailto:mr..h.o.w.a.rd.br.uc.e8.8@googlemail.com"">mr..h.o.w.a.rd.br.uc.e8.8@googlemail.com</a>
<a href=""mailto:mr.h.ow.a.rdbru.ce88@googlemail.com"">mr.h.ow.a.rdbru.ce88@googlemail.com</a>
<a href=""mailto:mr...ho.wa.rdbr.uc.e.88@googlemail.com"">mr...ho.wa.rdbr.uc.e.88@googlemail.com</a>
<a href=""mailto:mr..how.ardbr.u.c.e.8.8@googlemail.com"">mr..how.ardbr.u.c.e.8.8@googlemail.com</a>
<a href=""mailto:m.r.ho.w.ard.bru.ce.8.8@googlemail.com"">m.r.ho.w.ard.bru.ce.8.8@googlemail.com</a>
<a href=""mailto:m.r..ho.w.a.rdbruc.e88@googlemail.com"">m.r..ho.w.a.rdbruc.e88@googlemail.com</a>
<a href=""mailto:mr...h.o.w.ardbr.u.ce.8.8@googlemail.com"">mr...h.o.w.ardbr.u.ce.8.8@googlemail.com</a>
<a href=""mailto:mr...ho.war.db.r.u.c.e8.8@googlemail.com"">mr...ho.war.db.r.u.c.e8.8@googlemail.com</a>
<a href=""mailto:m.r..h.o.w.a.rdb.r.u.c.e.88@googlemail.com"">m.r..h.o.w.a.rdb.r.u.c.e.88@googlemail.com</a>
<a href=""mailto:m.r...h.owar.db.r.uce88@googlemail.com"">m.r...h.owar.db.r.uce88@googlemail.com</a>
<a href=""mailto:mr.how.a.rd.b.ru.ce88@googlemail.com"">mr.how.a.rd.b.ru.ce88@googlemail.com</a>
<a href=""mailto:m.r..h.o.w.a.rd.b.r.uce8.8@googlemail.com"">m.r..h.o.w.a.rd.b.r.uce8.8@googlemail.com</a>
<a href=""mailto:mr..how.ardb.ru.c.e.8.8@googlemail.com"">mr..how.ardb.ru.c.e.8.8@googlemail.com</a>
<a href=""mailto:mr...ho.wardbruce88@googlemail.com"">mr...ho.wardbruce88@googlemail.com</a>
<a href=""mailto:mr..ho.ward.br.uc.e.8.8@googlemail.com"">mr..ho.ward.br.uc.e.8.8@googlemail.com</a>
<a href=""mailto:m.r...h.owar.db.r.uce8.8@googlemail.com"">m.r...h.owar.db.r.uce8.8@googlemail.com</a>
<a href=""mailto:m.r...how.a.r.dbr.u.c.e88@googlemail.com"">m.r...how.a.r.dbr.u.c.e88@googlemail.com</a>
<a href=""mailto:m.r..h.owa.r.d.bru.c.e.8.8@googlemail.com"">m.r..h.owa.r.d.bru.c.e.8.8@googlemail.com</a>
<a href=""mailto:mr..h.o.wa.rd.bru.ce.88@googlemail.com"">mr..h.o.wa.rd.bru.ce.88@googlemail.com</a>
<a href=""mailto:m.r...ho.w.ar.db.ruc.e8.8@googlemail.com"">m.r...ho.w.ar.db.ruc.e8.8@googlemail.com</a>
<a href=""mailto:m.r..howar.db.ru.ce88@googlemail.com"">m.r..howar.db.ru.ce88@googlemail.com</a>
<a href=""mailto:m.r.h.ow.ar.dbruc.e.8.8@googlemail.com"">m.r.h.ow.ar.dbruc.e.8.8@googlemail.com</a>
<a href=""mailto:m.r..h.o.w.a.rdb.r.uc.e.88@googlemail.com"">m.r..h.o.w.a.rdb.r.uc.e.88@googlemail.com</a>
<a href=""mailto:m.r.ho.w.a.r.d.bru.ce88@googlemail.com"">m.r.ho.w.a.r.d.bru.ce88@googlemail.com</a>
<a href=""mailto:m.r...h.o.w.ardbru.ce88@googlemail.com"">m.r...h.o.w.ardbru.ce88@googlemail.com</a>
<a href=""mailto:m.r.h.owardbruc.e.88@googlemail.com"">m.r.h.owardbruc.e.88@googlemail.com</a>
<a href=""mailto:m.r..h.o.w.ardbru.ce.8.8@googlemail.com"">m.r..h.o.w.ardbru.ce.8.8@googlemail.com</a>
<a href=""mailto:m.r..h.o.w.a.r.d.b.r.u.c.e8.8@googlemail.com"">m.r..h.o.w.a.r.d.b.r.u.c.e8.8@googlemail.com</a>
<a href=""mailto:mr...ho.w.ardb.r.u.ce.88@googlemail.com"">mr...ho.w.ardb.r.u.ce.88@googlemail.com</a>
<a href=""mailto:m.r..h.owar.dbru.ce.8.8@googlemail.com"">m.r..h.owar.dbru.ce.8.8@googlemail.com</a>
<a href=""mailto:m.r..ho.w.ar.d.b.ruc.e.88@googlemail.com"">m.r..ho.w.ar.d.b.ruc.e.88@googlemail.com</a>
<a href=""mailto:mr...ho.w.ar.dbr.u.c.e88@googlemail.com"">mr...ho.w.ar.dbr.u.c.e88@googlemail.com</a>
<a href=""mailto:mr.h.o.w.a.rd.b.ru.ce.88@googlemail.com"">mr.h.o.w.a.rd.b.ru.ce.88@googlemail.com</a>
<a href=""mailto:mr...h.o.w.a.rd.bruc.e.8.8@googlemail.com"">mr...h.o.w.a.rd.bruc.e.8.8@googlemail.com</a>
<a href=""mailto:m.r.h.owar.db.ru.c.e.88@googlemail.com"">m.r.h.owar.db.ru.c.e.88@googlemail.com</a>
<a href=""mailto:mr..how.a.rdb.ruce88@googlemail.com"">mr..how.a.rdb.ruce88@googlemail.com</a>
<a href=""mailto:mr...ho.wa.r.dbruc.e.88@googlemail.com"">mr...ho.wa.r.dbruc.e.88@googlemail.com</a>
<a href=""mailto:mr..ho.war.db.r.u.ce88@googlemail.com"">mr..ho.war.db.r.u.ce88@googlemail.com</a>
<a href=""mailto:m.r..h.o.w.ar.d.bruce.8.8@googlemail.com"">m.r..h.o.w.ar.d.bruce.8.8@googlemail.com</a>
<a href=""mailto:m.r.ho.w.a.rdb.r.uc.e.88@googlemail.com"">m.r.ho.w.a.rdb.r.uc.e.88@googlemail.com</a>
<a href=""mailto:m.r...h.ow.a.r.d.b.r.uce88@googlemail.com"">m.r...h.ow.a.r.d.b.r.uce88@googlemail.com</a>
<a href=""mailto:m.r...h.o.war.d.b.r.uc.e.88@googlemail.com"">m.r...h.o.war.d.b.r.uc.e.88@googlemail.com</a>
<a href=""mailto:mr..how.ar.d.b.r.uc.e.8.8@googlemail.com"">mr..how.ar.d.b.r.uc.e.8.8@googlemail.com</a>
<a href=""mailto:mr.ho.w.ardbr.u.ce88@googlemail.com"">mr.ho.w.ardbr.u.ce88@googlemail.com</a>
<a href=""mailto:m.r..h.ow.ardb.ruc.e8.8@googlemail.com"">m.r..h.ow.ardb.ruc.e8.8@googlemail.com</a>
<a href=""mailto:mr...h.ow.ar.d.b.r.uce8.8@googlemail.com"">mr...h.ow.ar.d.b.r.uce8.8@googlemail.com</a>
<a href=""mailto:mr..ho.w.ard.b.r.uce88@googlemail.com"">mr..ho.w.ard.b.r.uce88@googlemail.com</a>
<a href=""mailto:mr..h.owar.d.b.r.uce.8.8@googlemail.com"">mr..h.owar.d.b.r.uce.8.8@googlemail.com</a>
<a href=""mailto:m.r..h.o.w.ardb.r.u.c.e.8.8@googlemail.com"">m.r..h.o.w.ardb.r.u.c.e.8.8@googlemail.com</a>
<a href=""mailto:mr..ho.w.a.r.d.br.uc.e.8.8@googlemail.com"">mr..ho.w.a.r.d.br.uc.e.8.8@googlemail.com</a>
<a href=""mailto:mr..ho.w.a.rdbruce.8.8@googlemail.com"">mr..ho.w.a.rdbruce.8.8@googlemail.com</a>
<a href=""mailto:m.r..ho.wa.rdbru.c.e.8.8@googlemail.com"">m.r..ho.wa.rdbru.c.e.8.8@googlemail.com</a>
<a href=""mailto:mr..h.ow.ard.bruc.e.8.8@googlemail.com"">mr..h.ow.ard.bruc.e.8.8@googlemail.com</a>
<a href=""mailto:m.r..ho.w.ard.bru.c.e.8.8@googlemail.com"">m.r..ho.w.ard.bru.c.e.8.8@googlemail.com</a>
<a href=""mailto:m.r...ho.wa.r.db.r.u.c.e.88@googlemail.com"">m.r...ho.wa.r.db.r.u.c.e.88@googlemail.com</a>
<a href=""mailto:m.r...h.owardbr.uce.88@googlemail.com"">m.r...h.owardbr.uce.88@googlemail.com</a>
<a href=""mailto:mr..h.o.war.dbr.uc.e.8.8@googlemail.com"">mr..h.o.war.dbr.uc.e.8.8@googlemail.com</a>
<a href=""mailto:mr...ho.w.a.rdbruc.e.8.8@googlemail.com"">mr...ho.w.a.rdbruc.e.8.8@googlemail.com</a>
<a href=""mailto:m.r...ho.wa.rd.b.ru.ce88@googlemail.com"">m.r...ho.wa.rd.b.ru.ce88@googlemail.com</a>
<a href=""mailto:m.r.h.o.w.a.rdb.ruce.8.8@googlemail.com"">m.r.h.o.w.a.rdb.ruce.8.8@googlemail.com</a>
<a href=""mailto:mr.h.o.war.dbr.u.c.e.8.8@googlemail.com"">mr.h.o.war.dbr.u.c.e.8.8@googlemail.com</a>
<a href=""mailto:m.r...h.owa.r.d.b.r.uc.e.88@googlemail.com"">m.r...h.owa.r.d.b.r.uc.e.88@googlemail.com</a>
<a href=""mailto:mr..h.o.w.a.r.db.r.uce.8.8@googlemail.com"">mr..h.o.w.a.r.db.r.uce.8.8@googlemail.com</a>
<a href=""mailto:m.r..ho.w.ar.d.br.u.ce.8.8@googlemail.com"">m.r..ho.w.ar.d.br.u.ce.8.8@googlemail.com</a>
<a href=""mailto:mr..ho.w.ar.d.b.ruce88@googlemail.com"">mr..ho.w.ar.d.b.ruce88@googlemail.com</a>
<a href=""mailto:mr...ho.wardb.ru.ce.8.8@googlemail.com"">mr...ho.wardb.ru.ce.8.8@googlemail.com</a>
<a href=""mailto:mr..ho.w.a.r.db.r.uc.e88@googlemail.com"">mr..ho.w.a.r.db.r.uc.e88@googlemail.com</a>
<a href=""mailto:mr..h.o.w.a.rdbr.u.ce.8.8@googlemail.com"">mr..h.o.w.a.rdbr.u.ce.8.8@googlemail.com</a>
<a href=""mailto:m.r..h.owa.rd.br.uc.e88@googlemail.com"">m.r..h.owa.rd.br.uc.e88@googlemail.com</a>
<a href=""mailto:m.r..ho.w.a.r.d.br.u.c.e8.8@googlemail.com"">m.r..ho.w.a.r.d.br.u.c.e8.8@googlemail.com</a>
<a href=""mailto:mr.ho.w.ard.bru.ce88@googlemail.com"">mr.ho.w.ard.bru.ce88@googlemail.com</a>
<a href=""mailto:mr..h.owa.r.dbru.c.e88@googlemail.com"">mr..h.owa.r.dbru.c.e88@googlemail.com</a>
<a href=""mailto:m.r..how.ar.dbr.u.c.e88@googlemail.com"">m.r..how.ar.dbr.u.c.e88@googlemail.com</a>
<a href=""mailto:mr...h.o.w.ar.d.b.ruc.e.88@googlemail.com"">mr...h.o.w.ar.d.b.ruc.e.88@googlemail.com</a>
<a href=""mailto:m.r..h.owar.dbruc.e.8.8@googlemail.com"">m.r..h.owar.dbruc.e.8.8@googlemail.com</a>
<a href=""mailto:m.r..howa.rd.br.uce8.8@googlemail.com"">m.r..howa.rd.br.uce8.8@googlemail.com</a>
<a href=""mailto:m.r..ho.wardb.r.uc.e.88@googlemail.com"">m.r..ho.wardb.r.uc.e.88@googlemail.com</a>
<a href=""mailto:m.r..h.o.wardbru.ce88@googlemail.com"">m.r..h.o.wardbru.ce88@googlemail.com</a>
<a href=""mailto:m.r.how.a.r.d.b.ru.c.e88@googlemail.com"">m.r.how.a.r.d.b.ru.c.e88@googlemail.com</a>
<a href=""mailto:m.r...howar.d.br.uce.88@googlemail.com"">m.r...howar.d.br.uce.88@googlemail.com</a>
<a href=""mailto:m.r.howar.d.b.ru.c.e88@googlemail.com"">m.r.howar.d.b.ru.c.e88@googlemail.com</a>
<a href=""mailto:m.r...h.o.wa.r.d.b.r.u.ce.88@googlemail.com"">m.r...h.o.wa.r.d.b.r.u.ce.88@googlemail.com</a>
<a href=""mailto:mr..h.ow.a.rdb.r.u.ce88@googlemail.com"">mr..h.ow.a.rdb.r.u.ce88@googlemail.com</a>
<a href=""mailto:m.r..how.a.r.db.ru.c.e8.8@googlemail.com"">m.r..how.a.r.db.ru.c.e8.8@googlemail.com</a>
<a href=""mailto:m.r.h.owar.d.b.r.u.c.e8.8@googlemail.com"">m.r.h.owar.d.b.r.u.c.e8.8@googlemail.com</a>
<a href=""mailto:mr.h.ow.ard.b.r.u.ce.88@googlemail.com"">mr.h.ow.ard.b.r.u.ce.88@googlemail.com</a>
<a href=""mailto:mr...ho.wa.rdbr.uce88@googlemail.com"">mr...ho.wa.rdbr.uce88@googlemail.com</a>
<a href=""mailto:mr.howa.r.d.br.u.c.e.88@googlemail.com"">mr.howa.r.d.br.u.c.e.88@googlemail.com</a>
<a href=""mailto:m.r..how.ar.d.b.ruce.8.8@googlemail.com"">m.r..how.ar.d.b.ruce.8.8@googlemail.com</a>
<a href=""mailto:mr..how.ar.db.ru.ce.8.8@googlemail.com"">mr..how.ar.db.ru.ce.8.8@googlemail.com</a>
<a href=""mailto:mr...ho.ward.b.ruce.8.8@googlemail.com"">mr...ho.ward.b.ruce.8.8@googlemail.com</a>
<a href=""mailto:m.r.h.ow.ardb.ruc.e8.8@googlemail.com"">m.r.h.ow.ardb.ruc.e8.8@googlemail.com</a>
<a href=""mailto:mr.h.ow.ardbr.uce.8.8@googlemail.com"">mr.h.ow.ardbr.uce.8.8@googlemail.com</a>
<a href=""mailto:mr...h.o.w.a.rdbr.u.ce88@googlemail.com"">mr...h.o.w.a.rdbr.u.ce88@googlemail.com</a>
<a href=""mailto:mr..h.ow.ar.db.r.u.ce.88@googlemail.com"">mr..h.ow.ar.db.r.u.ce.88@googlemail.com</a>
<a href=""mailto:m.r.h.o.wa.rd.b.r.uce.88@googlemail.com"">m.r.h.o.wa.rd.b.r.uce.88@googlemail.com</a>
<a href=""mailto:m.r..h.o.wa.rd.b.ruc.e.8.8@googlemail.com"">m.r..h.o.wa.rd.b.ruc.e.8.8@googlemail.com</a>
<a href=""mailto:mr...h.o.w.ard.bruc.e88@googlemail.com"">mr...h.o.w.ard.bruc.e88@googlemail.com</a>
<a href=""mailto:m.r..how.a.rd.bru.c.e.88@googlemail.com"">m.r..how.a.rd.bru.c.e.88@googlemail.com</a>
<a href=""mailto:m.r...ho.war.db.r.uc.e8.8@googlemail.com"">m.r...ho.war.db.r.uc.e8.8@googlemail.com</a>
<a href=""mailto:mr..h.o.w.a.r.dbr.uce8.8@googlemail.com"">mr..h.o.w.a.r.dbr.uce8.8@googlemail.com</a>
<a href=""mailto:mr..ho.wardbr.u.ce.88@googlemail.com"">mr..ho.wardbr.u.ce.88@googlemail.com</a>
<a href=""mailto:m.r..h.o.wa.rdbr.uc.e8.8@googlemail.com"">m.r..h.o.wa.rdbr.uc.e8.8@googlemail.com</a>
<a href=""mailto:m.r..how.a.r.d.br.uc.e8.8@googlemail.com"">m.r..how.a.r.d.br.uc.e8.8@googlemail.com</a>
<a href=""mailto:m.r..h.owardb.ruce8.8@googlemail.com"">m.r..h.owardb.ruce8.8@googlemail.com</a>
<a href=""mailto:m.r..ho.wardbru.c.e.88@googlemail.com"">m.r..ho.wardbru.c.e.88@googlemail.com</a>
<a href=""mailto:m.r...ho.wa.rd.bruc.e88@googlemail.com"">m.r...ho.wa.rd.bruc.e88@googlemail.com</a>
<a href=""mailto:mr.h.owa.r.db.ru.c.e.8.8@googlemail.com"">mr.h.owa.r.db.ru.c.e.8.8@googlemail.com</a>
<a href=""mailto:mr..h.owar.d.b.r.uce.88@googlemail.com"">mr..h.owar.d.b.r.uce.88@googlemail.com</a>
<a href=""mailto:m.r...h.owa.r.db.ru.c.e.8.8@googlemail.com"">m.r...h.owa.r.db.ru.c.e.8.8@googlemail.com</a>
<a href=""mailto:mr...ho.wa.r.d.br.uce8.8@googlemail.com"">mr...ho.wa.r.d.br.uce8.8@googlemail.com</a>
<a href=""mailto:m.r..h.ow.a.rd.b.r.u.c.e.8.8@googlemail.com"">m.r..h.ow.a.rd.b.r.u.c.e.8.8@googlemail.com</a>
<a href=""mailto:m.r..how.a.r.d.br.uce.88@googlemail.com"">m.r..how.a.r.d.br.uce.88@googlemail.com</a>
<a href=""mailto:mr..h.o.w.ar.d.b.r.u.c.e.88@googlemail.com"">mr..h.o.w.ar.d.b.r.u.c.e.88@googlemail.com</a>
<a href=""mailto:m.r..h.o.w.a.r.dbru.ce88@googlemail.com"">m.r..h.o.w.a.r.dbru.ce88@googlemail.com</a>
<a href=""mailto:mr.h.ow.ard.bru.c.e88@googlemail.com"">mr.h.ow.ard.bru.c.e88@googlemail.com</a>
<a href=""mailto:mr..h.oward.b.ru.ce.8.8@googlemail.com"">mr..h.oward.b.ru.ce.8.8@googlemail.com</a>
<a href=""mailto:mr.h.ow.a.r.db.ruce88@googlemail.com"">mr.h.ow.a.r.db.ruce88@googlemail.com</a>
<a href=""mailto:mr..ho.war.dbr.u.c.e8.8@googlemail.com"">mr..ho.war.dbr.u.c.e8.8@googlemail.com</a>
<a href=""mailto:mr.how.ar.d.bru.ce88@googlemail.com"">mr.how.ar.d.bru.ce88@googlemail.com</a>
<a href=""mailto:mr...how.ardbruce.8.8@googlemail.com"">mr...how.ardbruce.8.8@googlemail.com</a>
<a href=""mailto:m.r...ho.w.ar.dbr.uc.e8.8@googlemail.com"">m.r...ho.w.ar.dbr.uc.e8.8@googlemail.com</a>
<a href=""mailto:m.r..how.a.rd.bruc.e8.8@googlemail.com"">m.r..how.a.rd.bruc.e8.8@googlemail.com</a>
<a href=""mailto:m.r...h.o.war.d.br.u.c.e88@googlemail.com"">m.r...h.o.war.d.br.u.c.e88@googlemail.com</a>
<a href=""mailto:m.r.how.ard.bru.c.e.8.8@googlemail.com"">m.r.how.ard.bru.c.e.8.8@googlemail.com</a>
<a href=""mailto:m.r..how.a.r.d.b.r.uce88@googlemail.com"">m.r..how.a.r.d.b.r.uce88@googlemail.com</a>
<a href=""mailto:m.r..ho.wa.rd.bruc.e.8.8@googlemail.com"">m.r..ho.wa.rd.bruc.e.8.8@googlemail.com</a>
<a href=""mailto:mr..ho.w.ardbr.u.c.e8.8@googlemail.com"">mr..ho.w.ardbr.u.c.e8.8@googlemail.com</a>
<a href=""mailto:mr.ho.wa.rd.br.u.ce.8.8@googlemail.com"">mr.ho.wa.rd.br.u.ce.8.8@googlemail.com</a>
<a href=""mailto:mr..ho.war.dbr.u.c.e8.8@googlemail.com"">mr..ho.war.dbr.u.c.e8.8@googlemail.com</a>
<a href=""mailto:m.r.h.ow.a.r.dbruce8.8@googlemail.com"">m.r.h.ow.a.r.dbruce8.8@googlemail.com</a>
<a href=""mailto:m.r..h.owardbr.u.c.e88@googlemail.com"">m.r..h.owardbr.u.c.e88@googlemail.com</a>
<a href=""mailto:m.r...h.ow.a.rdbruc.e.88@googlemail.com"">m.r...h.ow.a.rdbruc.e.88@googlemail.com</a>
<a href=""mailto:m.r.how.a.r.d.b.r.u.c.e.88@googlemail.com"">m.r.how.a.r.d.b.r.u.c.e.88@googlemail.com</a>
<a href=""mailto:mr..h.ow.a.r.db.ruc.e88@googlemail.com"">mr..h.ow.a.r.db.ruc.e88@googlemail.com</a>
<a href=""mailto:mr..ho.ward.bru.c.e.8.8@googlemail.com"">mr..ho.ward.bru.c.e.8.8@googlemail.com</a>
<a href=""mailto:mr...how.a.rd.b.ru.ce8.8@googlemail.com"">mr...how.a.rd.b.ru.ce8.8@googlemail.com</a>
<a href=""mailto:mr...h.owa.rdbru.ce88@googlemail.com"">mr...h.owa.rdbru.ce88@googlemail.com</a>
<a href=""mailto:m.r.h.ow.a.r.d.br.u.c.e.88@googlemail.com"">m.r.h.ow.a.r.d.br.u.c.e.88@googlemail.com</a>
<a href=""mailto:mr...h.ow.ar.db.r.u.c.e8.8@googlemail.com"">mr...h.ow.ar.db.r.u.c.e8.8@googlemail.com</a>
<a href=""mailto:mr.h.o.wa.rdbr.uce8.8@googlemail.com"">mr.h.o.wa.rdbr.uce8.8@googlemail.com</a>
<a href=""mailto:m.r..h.owa.r.d.bruce.8.8@googlemail.com"">m.r..h.owa.r.d.bruce.8.8@googlemail.com</a>
<a href=""mailto:m.r..h.ow.ard.br.uce.88@googlemail.com"">m.r..h.ow.ard.br.uce.88@googlemail.com</a>
<a href=""mailto:m.r..h.ow.a.r.d.br.u.c.e8.8@googlemail.com"">m.r..h.ow.a.r.d.br.u.c.e8.8@googlemail.com</a>
<a href=""mailto:m.r...ho.w.ardbru.ce8.8@googlemail.com"">m.r...ho.w.ardbru.ce8.8@googlemail.com</a>
<a href=""mailto:mr...howa.rdb.ru.c.e88@googlemail.com"">mr...howa.rdb.ru.c.e88@googlemail.com</a>
<a href=""mailto:mr..h.owa.rd.bru.ce.8.8@googlemail.com"">mr..h.owa.rd.bru.ce.8.8@googlemail.com</a>
<a href=""mailto:m.r..how.ardbr.uce8.8@googlemail.com"">m.r..how.ardbr.uce8.8@googlemail.com</a>
<a href=""mailto:m.r.ho.w.a.rdb.r.u.c.e.88@googlemail.com"">m.r.ho.w.a.rdb.r.u.c.e.88@googlemail.com</a>
<a href=""mailto:mr..how.ar.d.br.uc.e.88@googlemail.com"">mr..how.ar.d.br.uc.e.88@googlemail.com</a>
<a href=""mailto:m.r..h.oward.b.ru.c.e8.8@googlemail.com"">m.r..h.oward.b.ru.c.e8.8@googlemail.com</a>
<a href=""mailto:m.r...howa.r.d.b.ru.c.e88@googlemail.com"">m.r...howa.r.d.b.ru.c.e88@googlemail.com</a>
<a href=""mailto:m.r..h.o.war.db.ru.ce8.8@googlemail.com"">m.r..h.o.war.db.ru.ce8.8@googlemail.com</a>
<a href=""mailto:m.r.ho.wardb.ruce.8.8@googlemail.com"">m.r.ho.wardb.ruce.8.8@googlemail.com</a>
<a href=""mailto:nboneshibaswap@gmail.com"">nboneshibaswap@gmail.com</a>
<a href=""mailto:nb.o.n.e.sh.i.ba.sw.ap@gmail.com"">nb.o.n.e.sh.i.ba.sw.ap@gmail.com</a>
<a href=""mailto:n.bo.nes.hi.b.a.s.w.ap@gmail.com"">n.bo.nes.hi.b.a.s.w.ap@gmail.com</a>
<a href=""mailto:nb.o.nes.hiba.s.wa.p@gmail.com"">nb.o.nes.hiba.s.wa.p@gmail.com</a>
<a href=""mailto:n.b.ones.h.i.b.a.sw.a.p@gmail.com"">n.b.ones.h.i.b.a.sw.a.p@gmail.com</a>
<a href=""mailto:nbo.n.es.hib.as.w.ap@gmail.com"">nbo.n.es.hib.as.w.ap@gmail.com</a>
<a href=""mailto:n.b.onesh.i.ba.s.w.ap@gmail.com"">n.b.onesh.i.ba.s.w.ap@gmail.com</a>
<a href=""mailto:nbo.ne.sh.iba.sw.a.p@gmail.com"">nbo.ne.sh.iba.sw.a.p@gmail.com</a>
<a href=""mailto:n.bo.n.eshi.bas.w.ap@gmail.com"">n.bo.n.eshi.bas.w.ap@gmail.com</a>
<a href=""mailto:n.b.o.n.e.s.h.i.ba.s.w.ap@gmail.com"">n.b.o.n.e.s.h.i.ba.s.w.ap@gmail.com</a>
<a href=""mailto:nb.o.nes.h.i.basw.ap@gmail.com"">nb.o.nes.h.i.basw.ap@gmail.com</a>
<a href=""mailto:n.bon.es.h.i.b.aswap@gmail.com"">n.bon.es.h.i.b.aswap@gmail.com</a>
<a href=""mailto:nbo.n.e.s.h.ib.a.sw.a.p@gmail.com"">nbo.n.e.s.h.ib.a.sw.a.p@gmail.com</a>
<a href=""mailto:nbon.es.hi.ba.swa.p@gmail.com"">nbon.es.hi.ba.swa.p@gmail.com</a>
<a href=""mailto:n.bonesh.ib.asw.a.p@gmail.com"">n.bonesh.ib.asw.a.p@gmail.com</a>
<a href=""mailto:n.bo.n.es.h.i.ba.s.w.ap@gmail.com"">n.bo.n.es.h.i.ba.s.w.ap@gmail.com</a>
<a href=""mailto:n.bo.n.es.h.i.b.as.wa.p@gmail.com"">n.bo.n.es.h.i.b.as.wa.p@gmail.com</a>
<a href=""mailto:n.bon.e.shi.ba.s.wap@gmail.com"">n.bon.e.shi.ba.s.wap@gmail.com</a>
<a href=""mailto:n.b.on.esh.iba.s.wa.p@gmail.com"">n.b.on.esh.iba.s.wa.p@gmail.com</a>
<a href=""mailto:nb.ones.hib.a.swa.p@gmail.com"">nb.ones.hib.a.swa.p@gmail.com</a>
<a href=""mailto:n.b.one.shi.b.a.s.w.a.p@gmail.com"">n.b.one.shi.b.a.s.w.a.p@gmail.com</a>
<a href=""mailto:nbon.esh.ib.as.wa.p@gmail.com"">nbon.esh.ib.as.wa.p@gmail.com</a>
<a href=""mailto:nbone.s.h.i.b.a.sw.a.p@gmail.com"">nbone.s.h.i.b.a.sw.a.p@gmail.com</a>
<a href=""mailto:nb.o.ne.shibas.w.a.p@gmail.com"">nb.o.ne.shibas.w.a.p@gmail.com</a>
<a href=""mailto:n.b.ones.hi.baswap@gmail.com"">n.b.ones.hi.baswap@gmail.com</a>
<a href=""mailto:n.b.on.e.shi.b.as.wa.p@gmail.com"">n.b.on.e.shi.b.as.wa.p@gmail.com</a>
<a href=""mailto:nbo.nesh.i.bas.wap@gmail.com"">nbo.nesh.i.bas.wap@gmail.com</a>
<a href=""mailto:nb.o.n.e.shi.ba.sw.ap@gmail.com"">nb.o.n.e.shi.ba.sw.ap@gmail.com</a>
<a href=""mailto:n.bo.nes.hib.as.wap@gmail.com"">n.bo.nes.hib.as.wap@gmail.com</a>
<a href=""mailto:nbo.ne.s.h.ibaswa.p@gmail.com"">nbo.ne.s.h.ibaswa.p@gmail.com</a>
<a href=""mailto:nb.ones.h.i.bas.w.ap@gmail.com"">nb.ones.h.i.bas.w.ap@gmail.com</a>
<a href=""mailto:nb.o.n.es.hi.baswa.p@gmail.com"">nb.o.n.es.hi.baswa.p@gmail.com</a>
<a href=""mailto:n.b.on.e.s.hi.b.a.s.w.a.p@gmail.com"">n.b.on.e.s.hi.b.a.s.w.a.p@gmail.com</a>
<a href=""mailto:n.b.o.n.es.h.i.baswap@gmail.com"">n.b.o.n.es.h.i.baswap@gmail.com</a>
<a href=""mailto:n.b.o.n.e.s.h.i.basw.ap@gmail.com"">n.b.o.n.e.s.h.i.basw.ap@gmail.com</a>
<a href=""mailto:nbon.e.shi.bas.wap@gmail.com"">nbon.e.shi.bas.wap@gmail.com</a>
<a href=""mailto:nb.o.ne.s.h.ibas.w.ap@gmail.com"">nb.o.ne.s.h.ibas.w.ap@gmail.com</a>
<a href=""mailto:nbones.h.i.baswa.p@gmail.com"">nbones.h.i.baswa.p@gmail.com</a>
<a href=""mailto:nbo.n.eshiba.sw.a.p@gmail.com"">nbo.n.eshiba.sw.a.p@gmail.com</a>
<a href=""mailto:nb.one.s.h.i.b.asw.ap@gmail.com"">nb.one.s.h.i.b.asw.ap@gmail.com</a>
<a href=""mailto:nb.on.es.h.ibas.w.a.p@gmail.com"">nb.on.es.h.ibas.w.a.p@gmail.com</a>
<a href=""mailto:n.b.o.n.e.s.hibasw.a.p@gmail.com"">n.b.o.n.e.s.hibasw.a.p@gmail.com</a>
<a href=""mailto:nbo.n.es.h.i.b.a.swap@gmail.com"">nbo.n.es.h.i.b.a.swap@gmail.com</a>
<a href=""mailto:nbo.nes.hi.bas.w.ap@gmail.com"">nbo.nes.hi.bas.w.ap@gmail.com</a>
<a href=""mailto:nbo.n.e.s.h.i.ba.swap@gmail.com"">nbo.n.e.s.h.i.ba.swap@gmail.com</a>
<a href=""mailto:nbone.s.hib.as.wap@gmail.com"">nbone.s.hib.as.wap@gmail.com</a>
<a href=""mailto:n.b.one.sh.ibas.w.ap@gmail.com"">n.b.one.sh.ibas.w.ap@gmail.com</a>
<a href=""mailto:n.b.on.e.shi.b.asw.ap@gmail.com"">n.b.on.e.shi.b.asw.ap@gmail.com</a>
<a href=""mailto:n.b.o.n.esh.i.basw.a.p@gmail.com"">n.b.o.n.esh.i.basw.a.p@gmail.com</a>
<a href=""mailto:nb.ones.h.i.b.a.sw.a.p@gmail.com"">nb.ones.h.i.b.a.sw.a.p@gmail.com</a>
<a href=""mailto:n.b.o.n.esh.iba.s.wap@gmail.com"">n.b.o.n.esh.iba.s.wap@gmail.com</a>
<a href=""mailto:nb.o.nesh.ibas.wa.p@gmail.com"">nb.o.nesh.ibas.wa.p@gmail.com</a>
<a href=""mailto:n.bone.shibaswap@gmail.com"">n.bone.shibaswap@gmail.com</a>
<a href=""mailto:nbone.s.h.i.ba.sw.ap@gmail.com"">nbone.s.h.i.ba.sw.ap@gmail.com</a>
<a href=""mailto:nb.o.n.e.shib.as.w.a.p@gmail.com"">nb.o.n.e.shib.as.w.a.p@gmail.com</a>
<a href=""mailto:n.bones.hi.ba.s.w.ap@gmail.com"">n.bones.hi.ba.s.w.ap@gmail.com</a>
<a href=""mailto:n.bo.n.esh.i.b.as.wa.p@gmail.com"">n.bo.n.esh.i.b.as.wa.p@gmail.com</a>
<a href=""mailto:n.bone.sh.ib.as.wa.p@gmail.com"">n.bone.sh.ib.as.wa.p@gmail.com</a>
<a href=""mailto:nb.o.n.e.shi.b.asw.a.p@gmail.com"">nb.o.n.e.shi.b.asw.a.p@gmail.com</a>
<a href=""mailto:n.bone.shib.a.swa.p@gmail.com"">n.bone.shib.a.swa.p@gmail.com</a>
<a href=""mailto:nb.o.n.es.h.ib.a.sw.ap@gmail.com"">nb.o.n.es.h.ib.a.sw.ap@gmail.com</a>
<a href=""mailto:nbones.h.i.b.as.wa.p@gmail.com"">nbones.h.i.b.as.wa.p@gmail.com</a>
<a href=""mailto:n.b.o.ne.shib.a.sw.a.p@gmail.com"">n.b.o.ne.shib.a.sw.a.p@gmail.com</a>
<a href=""mailto:n.b.one.sh.iba.s.wap@gmail.com"">n.b.one.sh.iba.s.wap@gmail.com</a>
<a href=""mailto:nb.o.n.e.s.hib.asw.ap@gmail.com"">nb.o.n.e.s.hib.asw.ap@gmail.com</a>
<a href=""mailto:n.bones.hib.aswa.p@gmail.com"">n.bones.hib.aswa.p@gmail.com</a>
<a href=""mailto:n.b.on.e.shib.a.s.wa.p@gmail.com"">n.b.on.e.shib.a.s.wa.p@gmail.com</a>
<a href=""mailto:nbo.n.es.h.i.b.a.s.wa.p@gmail.com"">nbo.n.es.h.i.b.a.s.wa.p@gmail.com</a>
<a href=""mailto:n.bon.es.hi.ba.sw.ap@gmail.com"">n.bon.es.hi.ba.sw.ap@gmail.com</a>
<a href=""mailto:nb.o.n.eshi.ba.s.wap@gmail.com"">nb.o.n.eshi.ba.s.wap@gmail.com</a>
<a href=""mailto:nb.one.s.hi.ba.s.wa.p@gmail.com"">nb.one.s.hi.ba.s.wa.p@gmail.com</a>
<a href=""mailto:nb.o.n.e.s.hib.as.wap@gmail.com"">nb.o.n.e.s.hib.as.wap@gmail.com</a>
<a href=""mailto:nbo.nes.h.i.ba.s.wap@gmail.com"">nbo.nes.h.i.ba.s.wap@gmail.com</a>
<a href=""mailto:nbo.n.e.shib.as.wa.p@gmail.com"">nbo.n.e.shib.as.wa.p@gmail.com</a>
<a href=""mailto:nb.on.e.s.hi.ba.s.w.ap@gmail.com"">nb.on.e.s.hi.ba.s.w.ap@gmail.com</a>
<a href=""mailto:n.b.on.e.s.hi.b.aswa.p@gmail.com"">n.b.on.e.s.hi.b.aswa.p@gmail.com</a>
<a href=""mailto:n.b.o.neshi.ba.s.wap@gmail.com"">n.b.o.neshi.ba.s.wap@gmail.com</a>
<a href=""mailto:n.bo.n.e.s.hi.ba.sw.ap@gmail.com"">n.bo.n.e.s.hi.ba.sw.ap@gmail.com</a>
<a href=""mailto:nb.onesh.ibas.w.a.p@gmail.com"">nb.onesh.ibas.w.a.p@gmail.com</a>
<a href=""mailto:n.b.one.s.h.ib.a.swap@gmail.com"">n.b.one.s.h.ib.a.swap@gmail.com</a>
<a href=""mailto:n.b.o.n.esh.i.b.aswap@gmail.com"">n.b.o.n.esh.i.b.aswap@gmail.com</a>
<a href=""mailto:nbon.e.s.hi.b.as.wa.p@gmail.com"">nbon.e.s.hi.b.as.wa.p@gmail.com</a>
<a href=""mailto:nbo.n.e.s.h.ibas.w.a.p@gmail.com"">nbo.n.e.s.h.ibas.w.a.p@gmail.com</a>
<a href=""mailto:nbon.es.hib.a.s.wa.p@gmail.com"">nbon.es.hib.a.s.wa.p@gmail.com</a>
<a href=""mailto:nb.on.e.s.hi.b.aswa.p@gmail.com"">nb.on.e.s.hi.b.aswa.p@gmail.com</a>
<a href=""mailto:nb.o.n.eshi.basw.ap@gmail.com"">nb.o.n.eshi.basw.ap@gmail.com</a>
<a href=""mailto:nb.o.nes.hi.ba.swap@gmail.com"">nb.o.nes.hi.ba.swap@gmail.com</a>
<a href=""mailto:nbo.ne.s.hi.b.a.s.wap@gmail.com"">nbo.ne.s.hi.b.a.s.wap@gmail.com</a>
<a href=""mailto:nb.oneshib.a.sw.ap@gmail.com"">nb.oneshib.a.sw.ap@gmail.com</a>
<a href=""mailto:n.bo.neshiba.sw.a.p@gmail.com"">n.bo.neshiba.sw.a.p@gmail.com</a>
<a href=""mailto:n.b.ones.h.i.b.a.swap@gmail.com"">n.b.ones.h.i.b.a.swap@gmail.com</a>
<a href=""mailto:nb.o.nesh.i.b.as.wap@gmail.com"">nb.o.nesh.i.b.as.wap@gmail.com</a>
<a href=""mailto:nb.on.es.hi.basw.a.p@gmail.com"">nb.on.es.hi.basw.a.p@gmail.com</a>
<a href=""mailto:nbo.nes.h.i.ba.s.wa.p@gmail.com"">nbo.nes.h.i.ba.s.wa.p@gmail.com</a>
<a href=""mailto:n.bo.n.e.sh.i.bas.wap@gmail.com"">n.bo.n.e.sh.i.bas.wap@gmail.com</a>
<a href=""mailto:n.bo.ne.s.hi.b.a.sw.a.p@gmail.com"">n.bo.ne.s.hi.b.a.sw.a.p@gmail.com</a>
<a href=""mailto:nbone.s.hib.asw.a.p@gmail.com"">nbone.s.hib.asw.a.p@gmail.com</a>
<a href=""mailto:n.b.o.n.esh.ib.a.sw.a.p@gmail.com"">n.b.o.n.esh.ib.a.sw.a.p@gmail.com</a>
<a href=""mailto:n.b.o.nesh.ib.a.swa.p@gmail.com"">n.b.o.nesh.ib.a.swa.p@gmail.com</a>
<a href=""mailto:n.b.on.es.h.ibaswap@gmail.com"">n.b.on.es.h.ibaswap@gmail.com</a>
<a href=""mailto:nbo.ne.sh.ib.a.s.w.ap@gmail.com"">nbo.ne.sh.ib.a.s.w.ap@gmail.com</a>
<a href=""mailto:n.b.o.ne.shi.ba.sw.a.p@gmail.com"">n.b.o.ne.shi.ba.sw.a.p@gmail.com</a>
<a href=""mailto:nb.ones.hi.b.as.w.a.p@gmail.com"">nb.ones.hi.b.as.w.a.p@gmail.com</a>
<a href=""mailto:nb.one.s.h.i.basw.ap@gmail.com"">nb.one.s.h.i.basw.ap@gmail.com</a>
<a href=""mailto:n.bon.esh.i.ba.s.wap@gmail.com"">n.bon.esh.i.ba.s.wap@gmail.com</a>
<a href=""mailto:n.bo.neshibaswa.p@gmail.com"">n.bo.neshibaswa.p@gmail.com</a>
<a href=""mailto:n.bo.ne.s.h.ibasw.ap@gmail.com"">n.bo.ne.s.h.ibasw.ap@gmail.com</a>
<a href=""mailto:n.b.ones.hib.asw.ap@gmail.com"">n.b.ones.hib.asw.ap@gmail.com</a>
<a href=""mailto:n.boneshi.ba.sw.ap@gmail.com"">n.boneshi.ba.sw.ap@gmail.com</a>
<a href=""mailto:nbon.es.h.iba.s.wa.p@gmail.com"">nbon.es.h.iba.s.wa.p@gmail.com</a>
<a href=""mailto:n.bo.ne.sh.ib.a.s.wa.p@gmail.com"">n.bo.ne.sh.ib.a.s.wa.p@gmail.com</a>
<a href=""mailto:n.bon.e.s.h.i.b.aswap@gmail.com"">n.bon.e.s.h.i.b.aswap@gmail.com</a>
<a href=""mailto:nboneshi.ba.s.wa.p@gmail.com"">nboneshi.ba.s.wa.p@gmail.com</a>
<a href=""mailto:nbon.e.s.h.ib.a.sw.a.p@gmail.com"">nbon.e.s.h.ib.a.sw.a.p@gmail.com</a>
<a href=""mailto:nbo.neshi.ba.swap@gmail.com"">nbo.neshi.ba.swap@gmail.com</a>
<a href=""mailto:n.b.o.nes.h.ib.a.s.w.ap@gmail.com"">n.b.o.nes.h.ib.a.s.w.ap@gmail.com</a>
<a href=""mailto:nb.one.shi.b.as.w.a.p@gmail.com"">nb.one.shi.b.as.w.a.p@gmail.com</a>
<a href=""mailto:nb.on.es.hi.b.as.w.ap@gmail.com"">nb.on.es.hi.b.as.w.ap@gmail.com</a>
<a href=""mailto:nbo.n.e.sh.ib.as.w.a.p@gmail.com"">nbo.n.e.sh.ib.as.w.a.p@gmail.com</a>
<a href=""mailto:n.b.on.e.s.h.ibas.w.a.p@gmail.com"">n.b.on.e.s.h.ibas.w.a.p@gmail.com</a>
<a href=""mailto:n.bone.s.h.i.bas.w.a.p@gmail.com"">n.bone.s.h.i.bas.w.a.p@gmail.com</a>
<a href=""mailto:n.b.on.e.s.h.i.b.as.wa.p@gmail.com"">n.b.on.e.s.h.i.b.as.wa.p@gmail.com</a>
<a href=""mailto:n.bo.ne.shi.bas.w.a.p@gmail.com"">n.bo.ne.shi.bas.w.a.p@gmail.com</a>
<a href=""mailto:nbo.n.eshi.b.a.sw.a.p@gmail.com"">nbo.n.eshi.b.a.sw.a.p@gmail.com</a>
<a href=""mailto:n.b.o.nes.hib.aswa.p@gmail.com"">n.b.o.nes.hib.aswa.p@gmail.com</a>
<a href=""mailto:n.bon.e.s.hib.asw.a.p@gmail.com"">n.bon.e.s.hib.asw.a.p@gmail.com</a>
<a href=""mailto:nb.o.neshibasw.ap@gmail.com"">nb.o.neshibasw.ap@gmail.com</a>
<a href=""mailto:nb.on.e.shi.b.a.sw.a.p@gmail.com"">nb.on.e.shi.b.a.sw.a.p@gmail.com</a>
<a href=""mailto:n.b.o.neshib.a.s.w.a.p@gmail.com"">n.b.o.neshib.a.s.w.a.p@gmail.com</a>
<a href=""mailto:n.b.o.n.eshib.a.s.w.ap@gmail.com"">n.b.o.n.eshib.a.s.w.ap@gmail.com</a>
<a href=""mailto:n.bo.n.e.s.hi.bas.wap@gmail.com"">n.bo.n.e.s.hi.bas.wap@gmail.com</a>
<a href=""mailto:n.boneshibas.wap@gmail.com"">n.boneshibas.wap@gmail.com</a>
<a href=""mailto:n.b.one.sh.ibasw.ap@gmail.com"">n.b.one.sh.ibasw.ap@gmail.com</a>
<a href=""mailto:n.b.one.s.hiba.sw.ap@gmail.com"">n.b.one.s.hiba.sw.ap@gmail.com</a>
<a href=""mailto:n.b.o.neshib.as.w.ap@gmail.com"">n.b.o.neshib.as.w.ap@gmail.com</a>
<a href=""mailto:nbo.n.es.h.ibas.wa.p@gmail.com"">nbo.n.es.h.ibas.wa.p@gmail.com</a>
<a href=""mailto:nbo.n.es.hiba.swap@gmail.com"">nbo.n.es.hiba.swap@gmail.com</a>
<a href=""mailto:n.b.o.nesh.i.bas.w.a.p@gmail.com"">n.b.o.nesh.i.bas.w.a.p@gmail.com</a>
<a href=""mailto:n.bone.s.h.i.b.a.swa.p@gmail.com"">n.bone.s.h.i.b.a.swa.p@gmail.com</a>
<a href=""mailto:n.b.ones.h.i.bas.w.ap@gmail.com"">n.b.ones.h.i.bas.w.ap@gmail.com</a>
<a href=""mailto:n.b.on.eshiba.swap@gmail.com"">n.b.on.eshiba.swap@gmail.com</a>
<a href=""mailto:n.bo.n.e.s.hi.b.a.s.wap@gmail.com"">n.bo.n.e.s.hi.b.a.s.wap@gmail.com</a>
<a href=""mailto:nbonesh.i.b.a.s.wap@gmail.com"">nbonesh.i.b.a.s.wap@gmail.com</a>
<a href=""mailto:nbone.shi.ba.sw.a.p@gmail.com"">nbone.shi.ba.sw.a.p@gmail.com</a>
<a href=""mailto:n.b.o.n.esh.ibas.w.ap@gmail.com"">n.b.o.n.esh.ibas.w.ap@gmail.com</a>
<a href=""mailto:n.bo.n.es.h.iba.s.wa.p@gmail.com"">n.bo.n.es.h.iba.s.wa.p@gmail.com</a>
<a href=""mailto:nbone.sh.i.b.a.sw.a.p@gmail.com"">nbone.sh.i.b.a.sw.a.p@gmail.com</a>
<a href=""mailto:n.b.o.n.es.hi.b.asw.ap@gmail.com"">n.b.o.n.es.hi.b.asw.ap@gmail.com</a>
<a href=""mailto:n.bo.ne.sh.ibas.w.ap@gmail.com"">n.bo.ne.sh.ibas.w.ap@gmail.com</a>
<a href=""mailto:nb.o.neshib.a.s.w.ap@gmail.com"">nb.o.neshib.a.s.w.ap@gmail.com</a>
<a href=""mailto:nb.o.ne.shi.b.aswap@gmail.com"">nb.o.ne.shi.b.aswap@gmail.com</a>
<a href=""mailto:n.bon.e.sh.i.b.a.s.wap@gmail.com"">n.bon.e.sh.i.b.a.s.wap@gmail.com</a>
<a href=""mailto:n.bo.ne.sh.i.ba.swa.p@gmail.com"">n.bo.ne.sh.i.ba.swa.p@gmail.com</a>
<a href=""mailto:n.b.on.es.hi.ba.sw.a.p@gmail.com"">n.b.on.es.hi.ba.sw.a.p@gmail.com</a>
<a href=""mailto:nbo.n.esh.ibasw.ap@gmail.com"">nbo.n.esh.ibasw.ap@gmail.com</a>
<a href=""mailto:nb.oneshibasw.ap@gmail.com"">nb.oneshibasw.ap@gmail.com</a>
<a href=""mailto:nbon.e.s.hibas.wa.p@gmail.com"">nbon.e.s.hibas.wa.p@gmail.com</a>
<a href=""mailto:n.b.o.n.e.sh.ib.a.sw.a.p@gmail.com"">n.b.o.n.e.sh.ib.a.sw.a.p@gmail.com</a>
<a href=""mailto:nbo.n.e.sh.i.b.a.s.wa.p@gmail.com"">nbo.n.e.sh.i.b.a.s.wa.p@gmail.com</a>
<a href=""mailto:nbon.e.s.hi.bas.wa.p@gmail.com"">nbon.e.s.hi.bas.wa.p@gmail.com</a>
<a href=""mailto:n.b.on.es.hib.as.wap@gmail.com"">n.b.on.es.hib.as.wap@gmail.com</a>
<a href=""mailto:nb.oneshibas.wa.p@gmail.com"">nb.oneshibas.wa.p@gmail.com</a>
<a href=""mailto:n.bon.e.shi.ba.swap@gmail.com"">n.bon.e.shi.ba.swap@gmail.com</a>
<a href=""mailto:n.bo.n.eshi.baswap@gmail.com"">n.bo.n.eshi.baswap@gmail.com</a>
<a href=""mailto:nbon.e.shib.asw.ap@gmail.com"">nbon.e.shib.asw.ap@gmail.com</a>
<a href=""mailto:n.b.o.n.es.h.i.ba.sw.a.p@gmail.com"">n.b.o.n.es.h.i.ba.sw.a.p@gmail.com</a>
<a href=""mailto:nbo.n.e.sh.ibaswa.p@gmail.com"">nbo.n.e.sh.ibaswa.p@gmail.com</a>
<a href=""mailto:nb.ones.h.ibas.wa.p@gmail.com"">nb.ones.h.ibas.wa.p@gmail.com</a>
<a href=""mailto:n.b.on.e.s.h.i.bas.wa.p@gmail.com"">n.b.on.e.s.h.i.bas.wa.p@gmail.com</a>
<a href=""mailto:nbo.ne.shi.b.as.w.ap@gmail.com"">nbo.ne.shi.b.as.w.ap@gmail.com</a>
<a href=""mailto:nbo.ne.s.hi.baswap@gmail.com"">nbo.ne.s.hi.baswap@gmail.com</a>
<a href=""mailto:n.bone.sh.iba.sw.a.p@gmail.com"">n.bone.sh.iba.sw.a.p@gmail.com</a>
<a href=""mailto:nbo.nesh.i.b.a.s.w.ap@gmail.com"">nbo.nesh.i.b.a.s.w.ap@gmail.com</a>
<a href=""mailto:nb.o.n.es.h.ib.aswap@gmail.com"">nb.o.n.es.h.ib.aswap@gmail.com</a>
<a href=""mailto:nbo.ne.s.h.i.b.a.s.w.a.p@gmail.com"">nbo.ne.s.h.i.b.a.s.w.a.p@gmail.com</a>
<a href=""mailto:n.bones.h.ibasw.ap@gmail.com"">n.bones.h.ibasw.ap@gmail.com</a>
<a href=""mailto:n.bon.e.shi.ba.s.w.ap@gmail.com"">n.bon.e.shi.ba.s.w.ap@gmail.com</a>
<a href=""mailto:nb.o.neshi.b.a.swa.p@gmail.com"">nb.o.neshi.b.a.swa.p@gmail.com</a>
<a href=""mailto:nb.one.sh.i.ba.s.w.ap@gmail.com"">nb.one.sh.i.ba.s.w.ap@gmail.com</a>
<a href=""mailto:n.bo.nes.hibas.wap@gmail.com"">n.bo.nes.hibas.wap@gmail.com</a>
<a href=""mailto:n.b.o.n.esh.iba.swa.p@gmail.com"">n.b.o.n.esh.iba.swa.p@gmail.com</a>
<a href=""mailto:n.b.o.n.e.shibas.wap@gmail.com"">n.b.o.n.e.shibas.wap@gmail.com</a>
<a href=""mailto:n.b.oneshi.b.a.sw.ap@gmail.com"">n.b.oneshi.b.a.sw.ap@gmail.com</a>
<a href=""mailto:nbo.n.e.s.hibasw.ap@gmail.com"">nbo.n.e.s.hibasw.ap@gmail.com</a>
<a href=""mailto:n.bo.nes.hib.as.w.ap@gmail.com"">n.bo.nes.hib.as.w.ap@gmail.com</a>
<a href=""mailto:n.b.o.n.e.sh.i.ba.s.w.ap@gmail.com"">n.b.o.n.e.sh.i.ba.s.w.ap@gmail.com</a>
<a href=""mailto:nbo.nesh.ib.asw.ap@gmail.com"">nbo.nesh.ib.asw.ap@gmail.com</a>
<a href=""mailto:nb.o.n.e.sh.i.b.aswa.p@gmail.com"">nb.o.n.e.sh.i.b.aswa.p@gmail.com</a>
<a href=""mailto:n.bones.hib.a.s.w.ap@gmail.com"">n.bones.hib.a.s.w.ap@gmail.com</a>
<a href=""mailto:n.bo.ne.shi.b.a.swa.p@gmail.com"">n.bo.ne.shi.b.a.swa.p@gmail.com</a>
<a href=""mailto:n.b.o.nes.hi.b.as.w.ap@gmail.com"">n.b.o.nes.hi.b.as.w.ap@gmail.com</a>
<a href=""mailto:nb.on.e.s.h.ibasw.ap@gmail.com"">nb.on.e.s.h.ibasw.ap@gmail.com</a>
<a href=""mailto:n.bo.n.e.shibas.w.ap@gmail.com"">n.bo.n.e.shibas.w.ap@gmail.com</a>
<a href=""mailto:n.b.o.n.e.shiba.sw.ap@gmail.com"">n.b.o.n.e.shiba.sw.ap@gmail.com</a>
<a href=""mailto:n.bon.es.h.ibas.wa.p@gmail.com"">n.bon.es.h.ibas.wa.p@gmail.com</a>
<a href=""mailto:n.b.onesh.i.bas.w.a.p@gmail.com"">n.b.onesh.i.bas.w.a.p@gmail.com</a>
<a href=""mailto:n.b.onesh.i.ba.s.w.a.p@gmail.com"">n.b.onesh.i.ba.s.w.a.p@gmail.com</a>
<a href=""mailto:n.bo.ne.s.hi.b.a.s.w.a.p@gmail.com"">n.bo.ne.s.hi.b.a.s.w.a.p@gmail.com</a>
<a href=""mailto:n.boneshib.a.swap@gmail.com"">n.boneshib.a.swap@gmail.com</a>
<a href=""mailto:n.bones.hib.asw.a.p@gmail.com"">n.bones.hib.asw.a.p@gmail.com</a>
<a href=""mailto:n.b.on.eshi.ba.swap@gmail.com"">n.b.on.eshi.ba.swap@gmail.com</a>"
tDyTEEPx,Untitled,Josif_tepe,C++,Wednesday 22nd of November 2023 12:26:48 PM CDT,"#include <bits/stdc++.h>

using namespace std;

const long long maxn = 1e3+10;
const long long mod = 1e9+7;

int main()
{
    ios::sync_with_stdio(false);
    long long n,k;
    cin>>n>>k;
    long long a[n];
    for(long long i=0;i<n;i++)
    {
        cin>>a[i];
    }
    vector<int>g[maxn];
    for(long long i=0;i<n-1;i++)
    {
        long long x,y;
        cin>>x>>y;
        x--;y--;
        g[x].push_back(y);
        g[y].push_back(x);
    }
    long long mindis[maxn];
    for(long long i=0;i<n;i++)
    {
        bool vis[n];
        memset(vis,0,sizeof vis);
        queue<int>Q;
        Q.push(i);
        Q.push(0);
        long long mx=0;
        long long idx=2e9;
        vis[i]=true;
        while(!Q.empty())
        {
            long long teme=Q.front();Q.pop();
            long long kol=Q.front();Q.pop();
            for(long long ax:g[teme])
            {
                if(vis[ax])continue;
                if(mx<a[ax]-kol)
                {
                    mx=a[ax]-kol;
                    idx=ax;
                }
                else if(mx==a[ax]-kol)
                {
                    idx=min(idx, ax);
                }
                Q.push(ax);
                Q.push(kol+1);
                vis[ax]=true;
            }
        }
        mindis[i]=idx;
    }
    if(n<=2000 && k<=2000)
    {
        queue<int>ans;
        ans.push(0);
        while(k--)
        {
            long long node=ans.front();ans.pop();
            long long minsosed=mindis[node];
            ans.push(minsosed);
        }
        cout<<ans.front()+1<<endl;
        return 0;
    }
    bool vis[maxn];
    memset(vis,0,sizeof vis);
    vis[0]=true;
    queue<int>q;
    q.push(0);
    long long pat=0;
    long long dis[maxn];
    memset(dis,0,sizeof dis);
    while(k--)
    {
        long long node=q.front();q.pop();
        pat++;
        long long minsosed=mindis[node];
        q.push(minsosed);
        if(!vis[minsosed])
        {
            dis[minsosed]=pat;
            vis[minsosed] = true;
        }
        else
        {
            long long D=pat-dis[minsosed];///kolku e dolg ciklusot
            long long kolku=k/D;
            k-=kolku*D;
        }
    }
    cout<<q.front() + 1<<endl;
    return 0;
}
"
NavQQFjn,Untitled,soldenz,C++,Wednesday 22nd of November 2023 12:26:23 PM CDT,"#include <SFML/Graphics.hpp>
#include <cmath>

// Перечисление для представления различных состояний игры
enum class GameState
{
    StartMenu,  // Начальное меню
    Playing,    // Игровой процесс
    GameOver,   // Проигрыш
    YouWon      // Победа
};

int main()
{
    // Создание игрового окна
    sf::RenderWindow window(sf::VideoMode(900, 600), ""Arkanoid"");

    // Инициализация игрока (платформы)
    sf::RectangleShape player(sf::Vector2f(100.0f, 20.0f));
    player.setPosition(400.0f, 550.0f);
    player.setFillColor(sf::Color::Green);

    // Инициализация формы кирпича
    sf::RectangleShape brick(sf::Vector2f(80.0f, 30.0f));
    brick.setFillColor(sf::Color::Red);

    // Инициализация массива для хранения состояния каждого кирпича в сетке
    int bricks[8][5] = { 0 };

    // Инициализация мяча
    sf::CircleShape ball(10.0f);
    sf::Vector2f ballVelocity(3.0f, 3.0f);  // Начальная скорость мяча
    ball.setPosition(445.0f, 530.0f);
    ball.setFillColor(sf::Color::Blue);

    // Переменные для механики игры
    float acceleration = 0.015f;   // Коэффициент ускорения мяча
    float acceleration_bord = 0.5f;  // Коэффициент ускорения платформы
    float veloc_bord = 5.0f;  // Начальная скорость платформы
    window.setFramerateLimit(60);  // Ограничение кадров в секунду для окна

    // Установка начального состояния игры на StartMenu
    GameState gameState = GameState::StartMenu;

    // Основной игровой цикл
    while (window.isOpen())
    {
        // Обработка событий
        sf::Event event;
        while (window.pollEvent(event))
        {
            // Проверка на закрытие окна
            if (event.type == sf::Event::Closed)
                window.close();

            // Проверка на нажатие клавиш
            if (event.type == sf::Event::KeyPressed)
            {
                // Обработка нажатий клавиш в зависимости от текущего состояния игры
                if (gameState == GameState::StartMenu && event.key.code == sf::Keyboard::Enter)
                {
                    gameState = GameState::Playing;
                }
                else if (gameState == GameState::GameOver || gameState == GameState::YouWon)
                {
                    // Перезапуск игры или выход в зависимости от ввода пользователя
                    if (event.key.code == sf::Keyboard::Enter)
                    {
                        gameState = GameState::Playing;

                        // Сброс состояния всех кирпичей
                        for (int i = 0; i < 8; ++i)
                        {
                            for (int j = 0; j < 5; ++j)
                            {
                                bricks[i][j] = 0;
                            }
                        }

                        // Сброс позиции и скорости мяча, а также позиции платформы
                        ball.setPosition(445.0f, 530.0f);
                        ballVelocity = sf::Vector2f(3.0f, 3.0f);

                        player.setPosition(400.0f, 550.0f);
                        veloc_bord = 5.0f;
                    }
                    else if (event.key.code == sf::Keyboard::Escape)
                    {
                        // Закрытие игрового окна
                        window.close();
                    }
                }
            }
        }

        // Очистка окна
        window.clear();

        // Обработка логики игры в зависимости от текущего состояния
        if (gameState == GameState::StartMenu)
        {
            // Отображение текста начального меню
            sf::Font font;
            font.loadFromFile(""resources/sansation.ttf"");

            sf::Text startText(""Press Enter to start"", font, 30);
            startText.setPosition(150.0f, 250.0f);

            window.draw(startText);
        }
        else if (gameState == GameState::Playing)
        {
            // Перемещение платформы в зависимости от ввода с клавиатуры
            if (sf::Keyboard::isKeyPressed(sf::Keyboard::Left) && player.getPosition().x > 0)
            {
                player.move(-veloc_bord, 0.0f);
            }

            if (sf::Keyboard::isKeyPressed(sf::Keyboard::Right) && player.getPosition().x < 800)
            {
                player.move(veloc_bord, 0.0f);
            }

            // Перемещение мяча
            ball.move(ballVelocity);

            // Отскок мяча от стен
            if (ball.getPosition().x <= 0 || ball.getPosition().x >= 890)
            {
                ballVelocity.x = -ballVelocity.x;
            }

            // Отскок мяча от потолка
            if (ball.getPosition().y <= 0)
            {
                ballVelocity.y = -ballVelocity.y;
            }

            // Обработка столкновения мяча с платформой
            if (ball.getPosition().y + 2 * ball.getRadius() >= player.getPosition().y &&
                ball.getPosition().y <= player.getPosition().y + player.getSize().y &&
                ball.getPosition().x + 2 * ball.getRadius() >= player.getPosition().x &&
                ball.getPosition().x <= player.getPosition().x + player.getSize().x)
            {
                // Отскок мяча от платформы, обновление скорости мяча и скорости платформы
                ballVelocity.y = -ballVelocity.y;
                ballVelocity.x += acceleration * ballVelocity.x;
                veloc_bord += 0.5f;
                ball.setPosition(ball.getPosition().x, player.getPosition().y - 2 * ball.getRadius());
            }

            // Проверка достижения мячом нижней границы окна
            if (ball.getPosition().y >= 590)
            {
                // Смена состояния игры на GameOver
                gameState = GameState::GameOver;
            }

            // Проверка столкновения мяча с кирпичами
            bool allBricksDestroyed = true;
            for (int i = 0; i < 8; ++i)
            {
                for (int j = 0; j < 5; ++j)
                {
                    if (bricks[i][j] == 0)
                    {
                        // Проверка пересечения между мячом и каждым кирпичом
                        allBricksDestroyed = false;
                        sf::FloatRect brickBounds(i * 100.0f + 50.0f, j * 30.0f + 50.0f, 80.0f, 30.0f);
                        if (brickBounds.intersects(ball.getGlobalBounds()))
                        {
                            // Отскок мяча от кирпича, отметка кирпича как разрушенного и обновление скорости мяча
                            bricks[i][j] = 1;
                            ballVelocity.y = -ballVelocity.y;
                            ballVelocity += acceleration * ballVelocity;
                        }
                    }
                }
            }

            // Проверка, все ли кирпичи разрушены
            if (allBricksDestroyed)
            {
                // Смена состояния игры на YouWon
                gameState = GameState::YouWon;
            }

            // Отрисовка платформы и мяча
            window.draw(player);
            window.draw(ball);

            // Отрисовка кирпичей
            for (int i = 0; i < 8; ++i)
            {
                for (int j = 0; j < 5; ++j)
                {
                    if (bricks[i][j] == 0)
                    {
                        sf::RectangleShape newBrick = brick;
                        newBrick.setPosition(i * 100.0f + 50.0f, j * 30.0f + 50.0f);
                        newBrick.setOutlineColor(sf::Color::White);
                        newBrick.setOutlineThickness(2.0f);
                        window.draw(newBrick);
                    }
                }
            }
        }
        else if (gameState == GameState::GameOver)
        {
            // Отображение экрана проигрыша
            sf::Font font;
            font.loadFromFile(""resources/sansation.ttf"");

            sf::Text gameOverText(""You lost"", font, 40);
            gameOverText.setPosition(300.0f, 200.0f);

            sf::Text restartText(""Press Enter to start"", font, 30);
            restartText.setPosition(200.0f, 300.0f);

            sf::Text exitText(""Press Esc to exit"", font, 30);
            exitText.setPosition(250.0f, 350.0f);

            window.draw(gameOverText);
            window.draw(restartText);
            window.draw(exitText);
        }
        else if (gameState == GameState::YouWon)
        {
            // Отображение экрана победы
            sf::Font font;
            font.loadFromFile(""resources/sansation.ttf"");

            sf::Text youWonText(""You won!"", font, 40);
            youWonText.setPosition(300.0f, 200.0f);

            sf::Text restartText(""Press Enter to start"", font, 30);
            restartText.setPosition(200.0f, 300.0f);

            sf::Text exitText(""Press Esc to exit"", font, 30);
            exitText.setPosition(250.0f, 350.0f);

            window.draw(youWonText);
            window.draw(restartText);
            window.draw(exitText);

            // Обработка ввода для перезапуска игры или выхода
            if (sf::Keyboard::isKeyPressed(sf::Keyboard::Enter))
            {
                gameState = GameState::Playing;

                // Сброс состояния всех кирпичей
                for (int i = 0; i < 8; ++i)
                {
                    for (int j = 0; j < 5; ++j)
                    {
                        bricks[i][j] = 0;
                    }
                }

                // Сброс позиции и скорости мяча, а также позиции платформы
                ball.setPosition(445.0f, 530.0f);
                ballVelocity = sf::Vector2f(3.0f, 3.0f);

                player.setPosition(400.0f, 550.0f);
                veloc_bord = 5.0f;
            }
            else if (sf::Keyboard::isKeyPressed(sf::Keyboard::Escape))
            {
                // Закрытие игрового окна
                window.close();
            }
        }

        // Отображение содержимого окна
        window.display();
    }

    return 0;
}
"
C9pYgbpV,2 speed clutch,A_mann57,Lua,Wednesday 22nd of November 2023 12:26:19 PM CDT,"--delete startup
--pastebin get C9pYgbpV startup
--startup

local highspeed = false
-- red low speed
-- white high speed (need not gate)
-- yellow input (true changes to highspeed

while (true) do
    os.pullEvent(""redstone"")
    if rs.testBundledInput(""back"", colors.yellow) == true then
        rs.setBundledOutput(""back"", colors.red)
        sleep(0.3)
        rs.setBundledOutput(""back"", colors.combine(colors.red, colors.white))
		sleep(0.2)
    elseif rs.testBundledInput(""back"", colors.yellow) == false then
        rs.setBundledOutput(""back"", colors.red)
        sleep(0.3)
        rs.setBundledOutput(""back"", 0)
		sleep(0.2)
   end
end
"
