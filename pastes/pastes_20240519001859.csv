id,title,username,language,date,content
DmQBsvAn,2024-05-18_stats.json,rdp_snitch,JSON,Saturday 18th of May 2024 07:17:59 PM CDT,"{
  ""ip"": {
    ""213.109.202.230"": 18,
    ""5.8.11.202"": 12,
    ""171.226.33.18"": 60,
    ""205.210.31.202"": 9,
    ""87.251.75.145"": 6,
    ""213.165.233.124"": 6,
    ""103.186.44.41"": 3,
    ""212.70.149.142"": 9,
    ""64.124.50.139"": 6,
    ""91.244.197.167"": 3,
    ""36.91.222.100"": 6,
    ""192.241.146.194"": 6,
    ""185.170.144.3"": 6,
    ""93.177.66.5"": 12,
    ""187.190.60.112"": 3,
    ""101.36.114.222"": 3,
    ""45.227.254.8"": 6,
    ""112.4.139.162"": 3,
    ""194.165.16.76"": 6,
    ""198.235.24.88"": 9,
    ""158.69.238.253"": 3,
    ""147.161.35.202"": 6,
    ""103.179.184.81"": 18,
    ""188.166.98.195"": 3,
    ""194.165.16.73"": 6,
    ""116.140.196.215"": 3,
    ""206.189.196.199"": 18,
    ""164.92.92.104"": 21,
    ""205.210.31.49"": 9,
    ""20.15.229.56"": 3,
    ""31.6.41.20"": 3,
    ""128.90.169.2"": 3,
    ""198.235.24.173"": 9
  },
  ""asn"": {
    ""AS208312"": 18,
    ""AS34665"": 12,
    ""AS7552"": 60,
    ""AS396982"": 36,
    ""AS208091"": 6,
    ""AS54641"": 6,
    ""Unknown"": 3,
    ""AS204428"": 9,
    ""AS6461"": 6,
    ""AS15440"": 3,
    ""AS7713"": 6,
    ""AS14061"": 48,
    ""AS197414"": 6,
    ""AS197540"": 12,
    ""AS22884"": 3,
    ""AS135377"": 3,
    ""AS267784"": 6,
    ""AS56046"": 3,
    ""AS48721"": 12,
    ""AS16276"": 3,
    ""AS59371"": 6,
    ""AS135951"": 18,
    ""AS4837"": 3,
    ""AS8075"": 3,
    ""AS22363"": 6
  },
  ""isp"": {
    ""Red Byte LLC"": 18,
    ""Petersburg Internet Network ltd"": 12,
    ""Viettel Corporation"": 60,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 12,
    ""InMotion Hosting"": 6,
    ""SPENTERPR"": 3,
    ""SS-Net"": 9,
    ""Zayo Bandwidth"": 6,
    ""UAB \""Baltnetos komunikacijos\"""": 3,
    ""PT Telekomunikasi Indonesia"": 6,
    ""DigitalOcean, LLC"": 48,
    ""netcup GmbH"": 12,
    ""Total Play Telecomunicaciones SA De CV"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Flyservers S.A."": 18,
    ""China Mobile Communications Corporation"": 3,
    ""OVH Hosting"": 3,
    ""Dimension Network & Communication Limited"": 6,
    ""MAVIN"": 18,
    ""China Unicom CHINA169 Network"": 3,
    ""Microsoft Corporation"": 3,
    ""YHC"": 3,
    ""Powerhouse Management, Inc."": 3
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 18,
    ""PIN DC"": 12,
    ""VIETEL"": 60,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 6,
    ""OpenMetal, Inc"": 6,
    ""Spenterpr"": 3,
    ""4Media Ltd"": 9,
    ""Microsoft Corporation"": 6,
    ""Space Hosting"": 3,
    ""Telekomunikasi Indonesia"": 6,
    ""Digital Ocean"": 9,
    ""Xhostis"": 6,
    ""netcup GmbH"": 12,
    ""Total Play Telecomunicaciones SA De CV"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""UAB Host Baltic"": 6,
    ""China Mobile Communications Corporation"": 3,
    ""Flyservers S.A"": 12,
    ""Peng Chiang, Yu"": 3,
    ""Dimension Network & Communication Limited"": 6,
    ""Mavin Services Management Joint Stock Company"": 18,
    ""China United Network Communications Corporation Limited"": 3,
    ""DigitalOcean, LLC"": 39,
    ""Microsoft Azure Cloud (centralus)"": 3,
    ""Unknown"": 3,
    ""Unus, Inc."": 3
  },
  ""regionName"": {
    ""Moscow"": 18,
    ""St.-Petersburg"": 12,
    ""Ho Chi Minh"": 60,
    ""California"": 57,
    ""North Holland"": 15,
    ""District of Columbia"": 6,
    ""National Capital Territory of Delhi"": 3,
    ""Plovdiv"": 9,
    ""Virginia"": 6,
    ""Vilnius"": 9,
    ""Jakarta"": 6,
    ""New Jersey"": 24,
    ""Bavaria"": 12,
    ""Hidalgo"": 3,
    ""Seoul"": 3,
    ""Jiangsu"": 3,
    ""Kaunas"": 12,
    ""Quebec"": 3,
    ""Kwai Tsing"": 6,
    ""Hanoi"": 18,
    ""Beijing"": 3,
    ""Iowa"": 3,
    ""Zurich"": 3,
    ""Istanbul"": 3
  },
  ""country"": {
    ""Russia"": 30,
    ""Vietnam"": 78,
    ""United States"": 96,
    ""The Netherlands"": 15,
    ""India"": 3,
    ""Bulgaria"": 9,
    ""Lithuania"": 21,
    ""Indonesia"": 6,
    ""Germany"": 12,
    ""Mexico"": 3,
    ""South Korea"": 3,
    ""China"": 6,
    ""Canada"": 3,
    ""Hong Kong"": 6,
    ""Switzerland"": 3,
    ""T\u00fcrkiye"": 3
  },
  ""account"": {
    ""Test"": 45,
    ""(empty)"": 18,
    ""administrator"": 60,
    ""uzbcLmXVh"": 3,
    ""GLBNhw"": 3,
    ""nBEChq"": 3,
    ""Administr"": 21,
    ""hello"": 99,
    ""orqMauU"": 3,
    ""Administrator"": 3,
    ""TnFgKjIQa"": 3,
    ""wkLpaq"": 3,
    ""qELaol"": 3,
    ""Domain"": 6,
    ""MFscBUabn"": 3,
    ""XhjMWx"": 3,
    ""MWpDBO"": 3,
    ""nmap"": 6,
    ""AZaeXQqFq"": 3,
    ""OiraRl"": 3,
    ""Egorab"": 3
  },
  ""keyboard"": {
    ""Unknown"": 297
  },
  ""client_build"": {
    ""Unknown"": 297
  },
  ""client_name"": {
    ""Unknown"": 297
  },
  ""ip_type"": {
    ""proxy"": 27,
    ""Unknown"": 144,
    ""hosting"": 117,
    ""mobile"": 3,
    ""hosting & proxy"": 6
  }
}"
6bV8Qb8S,2024-05-18_stats.json,rdp_snitch,JSON,Saturday 18th of May 2024 07:16:04 PM CDT,"{
  ""ip"": {
    ""213.109.202.230"": 12,
    ""5.8.11.202"": 8,
    ""171.226.33.18"": 40,
    ""205.210.31.202"": 6,
    ""87.251.75.145"": 4,
    ""213.165.233.124"": 4,
    ""103.186.44.41"": 2,
    ""212.70.149.142"": 6,
    ""64.124.50.139"": 4,
    ""91.244.197.167"": 2,
    ""36.91.222.100"": 4,
    ""192.241.146.194"": 4,
    ""185.170.144.3"": 4,
    ""93.177.66.5"": 8,
    ""187.190.60.112"": 2,
    ""101.36.114.222"": 2,
    ""45.227.254.8"": 4,
    ""112.4.139.162"": 2,
    ""194.165.16.76"": 4,
    ""198.235.24.88"": 6,
    ""158.69.238.253"": 2,
    ""147.161.35.202"": 4,
    ""103.179.184.81"": 12,
    ""188.166.98.195"": 2,
    ""194.165.16.73"": 4,
    ""116.140.196.215"": 2,
    ""206.189.196.199"": 12,
    ""164.92.92.104"": 14,
    ""205.210.31.49"": 6,
    ""20.15.229.56"": 2,
    ""31.6.41.20"": 2,
    ""128.90.169.2"": 2,
    ""198.235.24.173"": 6
  },
  ""asn"": {
    ""AS208312"": 12,
    ""AS34665"": 8,
    ""AS7552"": 40,
    ""AS396982"": 24,
    ""AS208091"": 4,
    ""AS54641"": 4,
    ""Unknown"": 2,
    ""AS204428"": 6,
    ""AS6461"": 4,
    ""AS15440"": 2,
    ""AS7713"": 4,
    ""AS14061"": 32,
    ""AS197414"": 4,
    ""AS197540"": 8,
    ""AS22884"": 2,
    ""AS135377"": 2,
    ""AS267784"": 4,
    ""AS56046"": 2,
    ""AS48721"": 8,
    ""AS16276"": 2,
    ""AS59371"": 4,
    ""AS135951"": 12,
    ""AS4837"": 2,
    ""AS8075"": 2,
    ""AS22363"": 4
  },
  ""isp"": {
    ""Red Byte LLC"": 12,
    ""Petersburg Internet Network ltd"": 8,
    ""Viettel Corporation"": 40,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 8,
    ""InMotion Hosting"": 4,
    ""SPENTERPR"": 2,
    ""SS-Net"": 6,
    ""Zayo Bandwidth"": 4,
    ""UAB \""Baltnetos komunikacijos\"""": 2,
    ""PT Telekomunikasi Indonesia"": 4,
    ""DigitalOcean, LLC"": 32,
    ""netcup GmbH"": 8,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Flyservers S.A."": 12,
    ""China Mobile Communications Corporation"": 2,
    ""OVH Hosting"": 2,
    ""Dimension Network & Communication Limited"": 4,
    ""MAVIN"": 12,
    ""China Unicom CHINA169 Network"": 2,
    ""Microsoft Corporation"": 2,
    ""YHC"": 2,
    ""Powerhouse Management, Inc."": 2
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 12,
    ""PIN DC"": 8,
    ""VIETEL"": 40,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 4,
    ""OpenMetal, Inc"": 4,
    ""Spenterpr"": 2,
    ""4Media Ltd"": 6,
    ""Microsoft Corporation"": 4,
    ""Space Hosting"": 2,
    ""Telekomunikasi Indonesia"": 4,
    ""Digital Ocean"": 6,
    ""Xhostis"": 4,
    ""netcup GmbH"": 8,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""UAB Host Baltic"": 4,
    ""China Mobile Communications Corporation"": 2,
    ""Flyservers S.A"": 8,
    ""Peng Chiang, Yu"": 2,
    ""Dimension Network & Communication Limited"": 4,
    ""Mavin Services Management Joint Stock Company"": 12,
    ""China United Network Communications Corporation Limited"": 2,
    ""DigitalOcean, LLC"": 26,
    ""Microsoft Azure Cloud (centralus)"": 2,
    ""Unknown"": 2,
    ""Unus, Inc."": 2
  },
  ""regionName"": {
    ""Moscow"": 12,
    ""St.-Petersburg"": 8,
    ""Ho Chi Minh"": 40,
    ""California"": 38,
    ""North Holland"": 10,
    ""District of Columbia"": 4,
    ""National Capital Territory of Delhi"": 2,
    ""Plovdiv"": 6,
    ""Virginia"": 4,
    ""Vilnius"": 6,
    ""Jakarta"": 4,
    ""New Jersey"": 16,
    ""Bavaria"": 8,
    ""Hidalgo"": 2,
    ""Seoul"": 2,
    ""Jiangsu"": 2,
    ""Kaunas"": 8,
    ""Quebec"": 2,
    ""Kwai Tsing"": 4,
    ""Hanoi"": 12,
    ""Beijing"": 2,
    ""Iowa"": 2,
    ""Zurich"": 2,
    ""Istanbul"": 2
  },
  ""country"": {
    ""Russia"": 20,
    ""Vietnam"": 52,
    ""United States"": 64,
    ""The Netherlands"": 10,
    ""India"": 2,
    ""Bulgaria"": 6,
    ""Lithuania"": 14,
    ""Indonesia"": 4,
    ""Germany"": 8,
    ""Mexico"": 2,
    ""South Korea"": 2,
    ""China"": 4,
    ""Canada"": 2,
    ""Hong Kong"": 4,
    ""Switzerland"": 2,
    ""T\u00fcrkiye"": 2
  },
  ""account"": {
    ""Test"": 30,
    ""(empty)"": 12,
    ""administrator"": 40,
    ""uzbcLmXVh"": 2,
    ""GLBNhw"": 2,
    ""nBEChq"": 2,
    ""Administr"": 14,
    ""hello"": 66,
    ""orqMauU"": 2,
    ""Administrator"": 2,
    ""TnFgKjIQa"": 2,
    ""wkLpaq"": 2,
    ""qELaol"": 2,
    ""Domain"": 4,
    ""MFscBUabn"": 2,
    ""XhjMWx"": 2,
    ""MWpDBO"": 2,
    ""nmap"": 4,
    ""AZaeXQqFq"": 2,
    ""OiraRl"": 2,
    ""Egorab"": 2
  },
  ""keyboard"": {
    ""Unknown"": 198
  },
  ""client_build"": {
    ""Unknown"": 198
  },
  ""client_name"": {
    ""Unknown"": 198
  },
  ""ip_type"": {
    ""proxy"": 18,
    ""Unknown"": 96,
    ""hosting"": 78,
    ""mobile"": 2,
    ""hosting & proxy"": 4
  }
}"
QRfcvSc9,2024-05-18_stats.json,rdp_snitch,JSON,Saturday 18th of May 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""213.109.202.230"": 6,
    ""5.8.11.202"": 4,
    ""171.226.33.18"": 20,
    ""205.210.31.202"": 3,
    ""87.251.75.145"": 2,
    ""213.165.233.124"": 2,
    ""103.186.44.41"": 1,
    ""212.70.149.142"": 3,
    ""64.124.50.139"": 2,
    ""91.244.197.167"": 1,
    ""36.91.222.100"": 2,
    ""192.241.146.194"": 2,
    ""185.170.144.3"": 2,
    ""93.177.66.5"": 4,
    ""187.190.60.112"": 1,
    ""101.36.114.222"": 1,
    ""45.227.254.8"": 2,
    ""112.4.139.162"": 1,
    ""194.165.16.76"": 2,
    ""198.235.24.88"": 3,
    ""158.69.238.253"": 1,
    ""147.161.35.202"": 2,
    ""103.179.184.81"": 6,
    ""188.166.98.195"": 1,
    ""194.165.16.73"": 2,
    ""116.140.196.215"": 1,
    ""206.189.196.199"": 6,
    ""164.92.92.104"": 7,
    ""205.210.31.49"": 3,
    ""20.15.229.56"": 1,
    ""31.6.41.20"": 1,
    ""128.90.169.2"": 1,
    ""198.235.24.173"": 3
  },
  ""asn"": {
    ""AS208312"": 6,
    ""AS34665"": 4,
    ""AS7552"": 20,
    ""AS396982"": 12,
    ""AS208091"": 2,
    ""AS54641"": 2,
    ""Unknown"": 1,
    ""AS204428"": 3,
    ""AS6461"": 2,
    ""AS15440"": 1,
    ""AS7713"": 2,
    ""AS14061"": 16,
    ""AS197414"": 2,
    ""AS197540"": 4,
    ""AS22884"": 1,
    ""AS135377"": 1,
    ""AS267784"": 2,
    ""AS56046"": 1,
    ""AS48721"": 4,
    ""AS16276"": 1,
    ""AS59371"": 2,
    ""AS135951"": 6,
    ""AS4837"": 1,
    ""AS8075"": 1,
    ""AS22363"": 2
  },
  ""isp"": {
    ""Red Byte LLC"": 6,
    ""Petersburg Internet Network ltd"": 4,
    ""Viettel Corporation"": 20,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 4,
    ""InMotion Hosting"": 2,
    ""SPENTERPR"": 1,
    ""SS-Net"": 3,
    ""Zayo Bandwidth"": 2,
    ""UAB \""Baltnetos komunikacijos\"""": 1,
    ""PT Telekomunikasi Indonesia"": 2,
    ""DigitalOcean, LLC"": 16,
    ""netcup GmbH"": 4,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Flyservers S.A."": 6,
    ""China Mobile Communications Corporation"": 1,
    ""OVH Hosting"": 1,
    ""Dimension Network & Communication Limited"": 2,
    ""MAVIN"": 6,
    ""China Unicom CHINA169 Network"": 1,
    ""Microsoft Corporation"": 1,
    ""YHC"": 1,
    ""Powerhouse Management, Inc."": 1
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 6,
    ""PIN DC"": 4,
    ""VIETEL"": 20,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 2,
    ""OpenMetal, Inc"": 2,
    ""Spenterpr"": 1,
    ""4Media Ltd"": 3,
    ""Microsoft Corporation"": 2,
    ""Space Hosting"": 1,
    ""Telekomunikasi Indonesia"": 2,
    ""Digital Ocean"": 3,
    ""Xhostis"": 2,
    ""netcup GmbH"": 4,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""UAB Host Baltic"": 2,
    ""China Mobile Communications Corporation"": 1,
    ""Flyservers S.A"": 4,
    ""Peng Chiang, Yu"": 1,
    ""Dimension Network & Communication Limited"": 2,
    ""Mavin Services Management Joint Stock Company"": 6,
    ""China United Network Communications Corporation Limited"": 1,
    ""DigitalOcean, LLC"": 13,
    ""Microsoft Azure Cloud (centralus)"": 1,
    ""Unknown"": 1,
    ""Unus, Inc."": 1
  },
  ""regionName"": {
    ""Moscow"": 6,
    ""St.-Petersburg"": 4,
    ""Ho Chi Minh"": 20,
    ""California"": 19,
    ""North Holland"": 5,
    ""District of Columbia"": 2,
    ""National Capital Territory of Delhi"": 1,
    ""Plovdiv"": 3,
    ""Virginia"": 2,
    ""Vilnius"": 3,
    ""Jakarta"": 2,
    ""New Jersey"": 8,
    ""Bavaria"": 4,
    ""Hidalgo"": 1,
    ""Seoul"": 1,
    ""Jiangsu"": 1,
    ""Kaunas"": 4,
    ""Quebec"": 1,
    ""Kwai Tsing"": 2,
    ""Hanoi"": 6,
    ""Beijing"": 1,
    ""Iowa"": 1,
    ""Zurich"": 1,
    ""Istanbul"": 1
  },
  ""country"": {
    ""Russia"": 10,
    ""Vietnam"": 26,
    ""United States"": 32,
    ""The Netherlands"": 5,
    ""India"": 1,
    ""Bulgaria"": 3,
    ""Lithuania"": 7,
    ""Indonesia"": 2,
    ""Germany"": 4,
    ""Mexico"": 1,
    ""South Korea"": 1,
    ""China"": 2,
    ""Canada"": 1,
    ""Hong Kong"": 2,
    ""Switzerland"": 1,
    ""T\u00fcrkiye"": 1
  },
  ""account"": {
    ""Test"": 15,
    ""(empty)"": 6,
    ""administrator"": 20,
    ""uzbcLmXVh"": 1,
    ""GLBNhw"": 1,
    ""nBEChq"": 1,
    ""Administr"": 7,
    ""hello"": 33,
    ""orqMauU"": 1,
    ""Administrator"": 1,
    ""TnFgKjIQa"": 1,
    ""wkLpaq"": 1,
    ""qELaol"": 1,
    ""Domain"": 2,
    ""MFscBUabn"": 1,
    ""XhjMWx"": 1,
    ""MWpDBO"": 1,
    ""nmap"": 2,
    ""AZaeXQqFq"": 1,
    ""OiraRl"": 1,
    ""Egorab"": 1
  },
  ""keyboard"": {
    ""Unknown"": 99
  },
  ""client_build"": {
    ""Unknown"": 99
  },
  ""client_name"": {
    ""Unknown"": 99
  },
  ""ip_type"": {
    ""proxy"": 9,
    ""Unknown"": 48,
    ""hosting"": 39,
    ""mobile"": 1,
    ""hosting & proxy"": 2
  }
}"
jYfV57WS,ESP32 Control rev_02,pleasedontcode,Arduino,Saturday 18th of May 2024 07:09:14 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ESP32 Control
	- Source Code NOT compiled for: Arduino Nano ESP32
	- Source Code created on: 2024-05-19 00:07:45

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Présence des Objects */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <SPI.h>
#include <SdFat.h>  //https://github.com/greiman/SdFat
#include ""ESP32_OV5640_AF.h""  //https://github.com/0015/ESP32-OV5640-AF

/****** FUNCTION PROTOTYPES *****/
void updateOutputs(void); // Added function prototype for updateOutputs

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t myLCD1602_LCD1602_D4_PIN_D4 = 4;
const uint8_t myLCD1602_LCD1602_D5_PIN_D5 = 5;
const uint8_t myLCD1602_LCD1602_D6_PIN_D6 = 6;
const uint8_t myLCD1602_LCD1602_D7_PIN_D7 = 7;

/***** DEFINITION OF SPI PINS *****/
const uint8_t Bb_SDCardModule_SPI_PIN_MOSI_D11 = 11;
const uint8_t Bb_SDCardModule_SPI_PIN_MISO_D12 = 12;
const uint8_t Bb_SDCardModule_SPI_PIN_SCLK_D13 = 13;
const uint8_t Bb_SDCardModule_SPI_PIN_CS_D10 = 10;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
bool myLCD1602_LCD1602_D4_PIN_D4_rawData = 0;
bool myLCD1602_LCD1602_D5_PIN_D5_rawData = 0;
bool myLCD1602_LCD1602_D6_PIN_D6_rawData = 0;
bool myLCD1602_LCD1602_D7_PIN_D7_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
float myLCD1602_LCD1602_D4_PIN_D4_phyData = 0.0;
float myLCD1602_LCD1602_D5_PIN_D5_phyData = 0.0;
float myLCD1602_LCD1602_D6_PIN_D6_phyData = 0.0;
float myLCD1602_LCD1602_D7_PIN_D7_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
SdFs sd; // Instance of SdFs class from SdFat library
OV5640 ov5640; // Instance of OV5640 class from ESP32_OV5640_AF library

void setup()
{
    pinMode(myLCD1602_LCD1602_D4_PIN_D4, OUTPUT);
    pinMode(myLCD1602_LCD1602_D5_PIN_D5, OUTPUT);
    pinMode(myLCD1602_LCD1602_D6_PIN_D6, OUTPUT);
    pinMode(myLCD1602_LCD1602_D7_PIN_D7, OUTPUT);

    pinMode(Bb_SDCardModule_SPI_PIN_CS_D10, OUTPUT);
    SPI.begin();

    sensor_t* sensor = esp_camera_sensor_get();
    ov5640.start(sensor);

    if (ov5640.focusInit() == 0) {
        Serial.println(""OV5640_Focus_Init Successful!"");
    }

    if (ov5640.autoFocusMode() == 0) {
        Serial.println(""OV5640_Auto_Focus Successful!"");
    }
}

void loop()
{
    updateOutputs(); // Refresh output data
}

void updateOutputs()
{
    digitalWrite(myLCD1602_LCD1602_D4_PIN_D4, myLCD1602_LCD1602_D4_PIN_D4_rawData);
    digitalWrite(myLCD1602_LCD1602_D5_PIN_D5, myLCD1602_LCD1602_D5_PIN_D5_rawData);
    digitalWrite(myLCD1602_LCD1602_D6_PIN_D6, myLCD1602_LCD1602_D6_rawData);
    digitalWrite(myLCD1602_LCD1602_D7_PIN_D7, myLCD1602_LCD1602_D7_rawData);
}

/* END CODE */"
uTc07D01,SD Card & Camera rev_01,pleasedontcode,Arduino,Saturday 18th of May 2024 07:07:14 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: SD Card & Camera
	- Source Code NOT compiled for: Arduino Nano ESP32
	- Source Code created on: 2024-05-19 00:04:49

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Présence des Objects */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <SPI.h>
#include <SdFat.h>  // https://github.com/greiman/SdFat
#include <ESP32_OV5640_AF.h>  // https://github.com/0015/ESP32-OV5640-AF

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF SPI PINS *****/
const uint8_t Bb_SDCardModule_SPI_PIN_MOSI_D11 = 11;
const uint8_t Bb_SDCardModule_SPI_PIN_MISO_D12 = 12;
const uint8_t Bb_SDCardModule_SPI_PIN_SCLK_D13 = 13;
const uint8_t Bb_SDCardModule_SPI_PIN_CS_D10 = 10;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
SdFs sd; // Create an instance of the SdFs class from the SdFat library
OV5640 ov5640; // Create an instance of the OV5640 class from the ESP32_OV5640_AF library

void setup(void)
{
    // Présence des Objects

    // put your setup code here, to run once:

    pinMode(Bb_SDCardModule_SPI_PIN_CS_D10, OUTPUT);
    // start the SPI library:
    SPI.begin();

    // Initialize the SdFat library
    if (!sd.begin(Bb_SDCardModule_SPI_PIN_CS_D10)) {
        Serial.println(""SD initialization failed."");
        // Add error handling code here
    }

    // Initialize the OV5640 library
    sensor_t* sensor = esp_camera_sensor_get();
    if (ov5640.start(sensor)) {
        Serial.println(""OV5640 initialized successfully."");
    } else {
        Serial.println(""OV5640 initialization failed."");
    }

    if (ov5640.focusInit() == 0) {
        Serial.println(""OV5640_Focus_Init Successful!"");
    }

    if (ov5640.autoFocusMode() == 0) {
        Serial.println(""OV5640_Auto_Focus Successful!"");
    }
}

void loop(void)
{
    // put your main code here, to run repeatedly:

}

/* END CODE */"
Lp8u4z0F,yes ye har!!! snowybot robo manual,coinwalk,JavaScript,Saturday 18th of May 2024 06:27:10 PM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/1000).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = (elderly*24);
var snowy = ((Math.floor(elderly/tens))*tens);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great>(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great<(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (((great/400)<=(beast))&&(great>snowy)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if (((great/200)<=(beast))&&(great<snowy)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.ceil(great/tens))*tens);
}
if ((beast>=(elderly/10))&&(great>snowy)&&(great>(snowie-(beast*downed)))&&(great<(snowie+(beast*upped)))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();"
iNsuaz0k,RequestException: error with request,basedcount_bot,Python,Saturday 18th of May 2024 06:26:33 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 263, in read_comments
    async for comment in pcm_subreddit.stream.comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/util.py"", line 160, in stream_generator
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/util.py"", line 160, in <listcomp>
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 383, in request
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 286, in _request_with_retries
    response, saved_exception = await self._make_request(
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 192, in _make_request
    response = await self._rate_limiter.call(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/rate_limit.py"", line 51, in call
    response = await request_function(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/requestor.py"", line 80, in request
    raise RequestException(exc, args, kwargs) from None
asyncprawcore.exceptions.RequestException: error with request 
"
jHJwLz7b,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Saturday 18th of May 2024 06:20:25 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_368698.pdf

Working as of:
18 May 2024"
qd2JLEW3,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Saturday 18th of May 2024 06:15:03 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
18 May 2024"
1vNC3AAe,T4WA,pb_jiang,C++,Saturday 18th of May 2024 05:43:24 PM CDT,"using ll = long long;

class Solution {
    int fpow(ll a, ll p, ll m) {
        assert(p >= 0);
        ll ret = 1;
        ll cur = a;
        while(p) {
            if (p & 1)
                ret = ret * cur % m;
            cur = cur * cur % m;
            p >>= 1;
        }
        return int(ret % m);
    }
    ll g(ll x) {
        // count the number of elements of first x strong array given x = 2^n;
        if (x == 0)  return 0;
        ll ret = 0;
        for (ll i = 1; i <= x; i <<= 1) {
            ret = ret * 2 + i;
        }
        return ret;
    }
    ll h(ll x) {
        // count the sum of elements of first x strong array;
        // return (x - 1) * x / 2;
        ll t = x / 2;
        return (t + 1) * t;
    }
    ll f(ll x) {
        // count the sum of elements of first x elements in big_nums;
        cout << ""\nx: "" << x << endl;
        if (x == 0) return 1;
        ll ret = 0, rem = x, v = 0;
        for (ll i = 31, bits = 0; i > 0; --i) {
            ll ec = 1ll << (i - 1);
            ll picked_num = bits * ec, pick_val = v * ec + h(ec);
            ll num_it = g(ec) + picked_num;
            if (num_it > rem) {
                continue;
            } else {
                cout << ""rem: "" << rem << "" num_it: "" << num_it << "" ec: "" << ec << "" g(ec): "" << g(ec) << "" picked_num: "" << picked_num << "" bits: "" << bits << endl;
                rem -= num_it;
                bits += 1;
                v |= ec;
                ret += pick_val;
            }
        }
        cout << ""\nrem: "" << rem << "" ret: "" << ret << "" x:"" << x << "" v: "" << v << endl;
        // rem -= 1;
        if (rem) {
            v += 1;
            while(rem && v) {
                // cout << rem << endl;
                ret += __builtin_ctz(v & -v);
                v = v & (v - 1);
                rem -= 1;
            }
        }
        cout << ""f("" << x << ""): "" << ret <<endl;
        return ret;
    }
public:
    vector<int> findProductsOfElements(vector<vector<long long>>& qs) {
        // cout << ""g(8): "" << g(8) << "" h(8): "" << h(8) << endl;
        // cout << ""f(2): "" << f(2) << endl;
        // cout << ""f(5): "" << f(5) << endl;
        int n = qs.size();
        vector<int> ret(n);
        for (int i = 0; i < n; ++i) {
            ll l = qs[i][0], r = qs[i][1], m = qs[i][2];
            // cout << ""i: "" << i << endl;
            ret[i] = fpow(2, f(r + 1) - f(l), m);
        }
        return ret;
    }
};"
kXXNc4xK,Pastebin.ai - #1 Pastebin Alternative,xxsa,PHP,Saturday 18th of May 2024 05:34:34 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
.
...............................
"
zw3QZ8GY,деревья 3,myloyo,C#,Saturday 18th of May 2024 05:10:37 PM CDT,"// класс деревьев
using System;

namespace Myloyorrrr
{
    public class BinaryTree //класс, реализующий АТД «дерево бинарного поиска»
    {
        //вложенный класс, отвечающий за узлы и операции допустимы для дерева бинарного
        //поиска
        private class Node
        {
            public object inf; //информационное поле
            public Node left; //ссылка на левое поддерево
            public Node right; //ссылка на правое поддерево
            public int height; //высота узла
                               
            //конструктор вложенного класса, создает узел дерева
            public Node(object nodeInf)
            {
                inf = nodeInf;
                left = null;
                right = null;
                height = 1;
            }
            public static int Height(Node node)
            {
                if (node == null) 
                    return 0;
                return node.height;
            }

            public void NewHeight() //пересчет высоты
            {
                this.height = (Math.Max(Height(this.right), Height(this.left)) + 1);
            }


            //добавляет узел в дерево так, чтобы дерево оставалось деревом бинарного поиска
            public static void Add(ref Node r, object nodeInf)
            {
                if (r == null)
                {
                    r = new Node(nodeInf);
                }
                else
                {
                    if (((IComparable)(r.inf)).CompareTo(nodeInf) > 0)
                    {
                        Add(ref r.left, nodeInf);
                    }
                    else
                    {
                        Add(ref r.right, nodeInf);
                    }
                    r.NewHeight();
                }
            }
            public static void Preorder(Node r) //прямой обход дерева
            {
                if (r != null)
                {
                    Console.WriteLine(""{0}, высота: {1}."", r.inf, r.height);
                    Preorder(r.left);
                    Preorder(r.right);
                }
            }
            public static void Inorder(Node r) //симметричный обход дерева
            {
                if (r != null)
                {
                    Inorder(r.left);
                    Console.Write(""{0} "", r.inf);
                    Inorder(r.right);
                }
            }
            public static void Postorder(Node r) //обратный обход дерева
            {
                if (r != null)
                {
                    Postorder(r.left);
                    Postorder(r.right);
                    Console.Write(""{0} "", r.inf);
                }
            }

            //поиск ключевого узла в дереве
            public static void Search(Node r, object key, out Node item)
            {
                if (r == null)
                {
                    item = null;
                }
                else
                {
                    if (((IComparable)(r.inf)).CompareTo(key) == 0)
                    {
                        item = r;
                    }
                    else
                    {
                        if (((IComparable)(r.inf)).CompareTo(key) > 0)
                        {
                            Search(r.left, key, out item);
                        }
                        else
                        {
                            Search(r.right, key, out item);
                        }
                    }
                }
            }
            //методы Del и Delete позволяют удалить узел в дереве так, чтобы дерево при этом
            //оставалось деревом бинарного поиска
            private static void Del(Node t, ref Node tr)
            {
                if (tr.right != null)
                {
                    Del(t, ref tr.right);
                    t.NewHeight();
                }
                else
                {
                    t.inf = tr.inf;
                    tr = tr.left;
                    tr.NewHeight();
                }
            }
            public static void Delete(ref Node t, object key)
            {
                if (t == null)
                {
                    throw new Exception(""Данное значение в дереве отсутствует"");
                }
                else
                {
                    if (((IComparable)(t.inf)).CompareTo(key) > 0)
                    {
                        Delete(ref t.left, key);
                        t.NewHeight();
                    }
                    else
                    {
                        if (((IComparable)(t.inf)).CompareTo(key) < 0)
                        {
                            Delete(ref t.right, key);
                            t.NewHeight();
                        }
                        else
                        {
                            if (t.left == null)
                            {
                                t = t.right;
                            }
                            else
                            {
                                if (t.right == null)
                                {
                                    t = t.left;
                                }
                                else
                                {
                                    Del(t, ref t.left);
                                    t.NewHeight();
                                }
                            }
                        }
                    }
                }
            }
            public static bool IsBalanced(Node node)
            {
                if (node == null)
                    return true;

                if (Math.Abs(Height(node.left) - Height(node.right)) <= 1 && IsBalanced(node.left) && IsBalanced(node.right))
                {
                    return true;
                }
                return false;
            }

        } 
        //конец вложенного класса
        Node tree; //ссылка на корень дерева
                   //свойство позволяет получить доступ к значению информационного поля корня дерева

        public object Inf
        {
            set { tree.inf = value; }
            get { return tree.inf; }
        }
        public BinaryTree() //открытый конструктор
        {
            tree = null;
        }
        private BinaryTree(Node r) //закрытый конструктор
        {
            tree = r;
        }
        public void Add(object nodeInf) //добавление узла в дерево
        {
            Node.Add(ref tree, nodeInf);
        }
        //организация различных способов обхода дерева
        public void Preorder()
        {
            Node.Preorder(tree);
        }
        public void Inorder()
        {
            Node.Inorder(tree);
        }
        public void Postorder()
        {
            Node.Postorder(tree);
        }

        //поиск ключевого узла в дереве
        public BinaryTree Search(object key)
        {
            Node r;
            Node.Search(tree, key, out r);
            BinaryTree t = new BinaryTree(r);
            return t;
        }
        //удаление ключевого узла в дереве
        public void Delete(object key)
        {
            Node.Delete(ref tree, key);
        }

        public bool Balance() //3 деревья - проверяем сбалансировано ли дерево 
        {
            return Node.IsBalanced(tree);
        }
    }
}
// класс очередь
using System;

namespace Myloyorrrr
{
    public class Queue
    {
        private class Node //вложенный класс, реализующий базовый элемент очереди
        {
            private object inf;
            private Node next;
            public Node(object nodeInfo)
            {
                inf = nodeInfo;
                next = null;
            }
            public Node Next
            {
                get { return next; }
                set { next = value; }
            }
            public object Inf
            {
                get { return inf; }
                set { inf = value; }
            }
        } //конец класса Node
        private Node head;
        private Node tail;
        public Queue()
        {
            head = null;
            tail = null;
        }
        public void Add(object nodeInfo)
        {
            Node r = new Node(nodeInfo);
            if (head == null)
            {
                head = r;
                tail = r;
            }
            else
            {
                tail.Next = r;
                tail = r;
            }
        }
        public object Take()
        {
            if (head == null)
            {
                throw new Exception(""Очередь пуста."");
            }
            else
            {
                Node r = head; //1
                head = head.Next; //2
                if (head == null) //3
                {
                    tail = null; //4
                }
                return r.Inf; //5
            }
        }
        public bool IsEmpty
        {
            get
            {
                if (head == null)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
        }
    }
}


// осн прога
using System;
using System.IO;

namespace Myloyorrrr
{
    internal class Program
    {
        static void Main()
        {
            //Graph G = new Graph(""C:/Настя/книит/in.txt"");
            //G.Show();
            //Console.WriteLine();
            //Console.WriteLine(""Введите первую вершину:"");
            //int a = int.Parse(Console.ReadLine());
            //Console.WriteLine(""Введите вторую вершину:"");
            //int b = int.Parse(Console.ReadLine());
            //Console.WriteLine(""Введите вершину, через которую нельзя пройти:"");
            //int d = int.Parse(Console.ReadLine());
            //Console.WriteLine();
            //G.Myloyo_find(a-1, b-1, d-1);


            //// 1 задача: подсчитать смежные вершины с данной вершиной 
            //Console.Write(""Введите номер вершины: "");
            //int v = int.Parse(Console.ReadLine());
            //G.Adjacent(v);

            //// 2 задача: определить все пары вершин, для которых существует путь длиной не более L
            //Console.Write(""Введите требуемую длину пути: "");
            //int L = int.Parse(Console.ReadLine());
            //G.Floyd_new(L);

            BinaryTree lipa = new BinaryTree();
            int n = 0;

            //Чтение последовательности чисел из файла input.txt и добавление их в дерево
            using (StreamReader f = new StreamReader(""C:/Настя/книит/in.txt""))
            {
                string line;
                while ((line = f.ReadLine()) != null)
                {
                    string[] text = line.Split(' ');
                    for (int i = 0; i < text.Length; i++)
                    {
                        int num = int.Parse(text[i]);
                        lipa.Add(num);
                        n++;
                    }
                }

            }

            lipa.Preorder();

            //3 деревья
            bool IsBalance = lipa.Balance();
            if (IsBalance)
            {
                Console.WriteLine(""Дерево является сбалансированным"");
            }
            else
            {
                Console.WriteLine(""Дерево не является сбалансированным"");
            }
        }
    }
}
"
Cf7izz4w,графы 3,myloyo,C#,Saturday 18th of May 2024 04:58:58 PM CDT,"// класс городов

using System;

namespace Myloyorrrr
{
    internal class GorodaOnline
    {
        public string Name { get; set; }
        public int X { get; set; }
        public int Y { get; set; }
        
        public GorodaOnline(string name, int x, int y)
        {
            Name = name;
            X = x;
            Y = y;
        }
        public double Distance(GorodaOnline a)
        {
            return Math.Sqrt((this.X - a.X) * (this.X - a.X) + (this.Y - a.Y) * (this.Y - a.Y));
        }

        public override string ToString()
        {
            return Name + "" "" + X + "" "" + Y;
        }

    }
}

// класс графов

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;

namespace Myloyorrrr
{
    public class Graph
    {
        private class Node //вложенный класс для скрытия данных и алгоритмов
        {
            private double[,] array; //матрица смежности
            public double this[int i, int j] //индексатор для обращения к матрице смежности
            {
                get
                {
                    return array[i, j];
                }
                set
                {
                    array[i, j] = value;
                }
            }
            public int Size //свойство для получения размерности матрицы смежности
            {
                get
                {
                    return array.GetLength(0);
                }
            }
            private bool[] nov; //вспомогательный массив: если i-ый элемент массива равен
                                //true, то i-ая вершина еще не просмотрена; если i-ый
                                //элемент равен false, то i-ая вершина просмотрена
            public void NovSet() //метод помечает все вершины графа как непросмотреные
            {
                for (int i = 0; i < Size; i++)
                {
                    nov[i] = true;
                }
            }
            //конструктор вложенного класса, инициализирует матрицу смежности и
            // вспомогательный массив
            public Node(double[,] a)
            {
                array = a;
                nov = new bool[a.GetLength(0)];
            
            }

            public void Add(int a, int b)
            {
                if (a >= 0 && a < Size && b >= 0 && b < Size)
                {
                    //array[a - 1, b - 1] = 1; // Для орграфа
                    array[b - 1, a - 1] = 1; // Для неорграфа
                }
                else
                {
                    Console.WriteLine(""Некорректные вершины"");
                }
            }

            //реализация алгоритма обхода графа в глубину
            public void Dfs(int v)
            {
                Console.Write(""{0} "", v); //просматриваем текущую вершину
                nov[v] = false; //помечаем ее как просмотренную
                                // в матрице смежности просматриваем строку с номером v
                for (int u = 0; u < Size; u++)
                {
                    //если вершины v и u смежные, к тому же вершина u не просмотрена,
                    if (array[v, u] != 0 && nov[u])
                    {
                        Dfs(u); // то рекурсивно просматриваем вершину
                    }
                }
            }
            //реализация алгоритма обхода графа в ширину
            public void Bfs(int v)
            {
                Queue q = new Queue(); // инициализируем очередь
                q.Add(v); //помещаем вершину v в очередь
                nov[v] = false; // помечаем вершину v как просмотренную
                while (!q.IsEmpty) // пока очередь не пуста
                {
                    v = (int)q.Take(); //извлекаем вершину из очереди
                    Console.Write(""{0} "", v); //просматриваем ее
                    for (int u = 0; u < Size; u++) //находим все вершины
                    {
                        if (array[v, u] != 0 && nov[u]) // смежные с данной и еще не просмотренные
                        {
                            q.Add(u); //помещаем их в очередь
                            nov[u] = false; //и помечаем как просмотренные
                        }
                    }
                }
            }
            //реализация алгоритма Дейкстры
            public double[] Dijkstr(int v, int nz, out int[] p)
            {
                //создаем матрицы d и p
                double[] d = new double[Size]; // массив расстояний
                p = new int[Size]; // массив предыдущих вершин путей
                
                for (int u = 0; u < Size; u++)
                {
                    d[u] = int.MaxValue;
                    p[u] = -1;
                }
                d[v] = 0;
                nov[nz] = false; //не ходим в город ненужный

                for (int i = 0; i < Size-1; i++) 
                {
                    // выбираем из множества V\S такую вершину w, что D[w] минимально
                    double min = int.MaxValue;
                    int w = 0;
                    for (int u = 0; u < Size; u++)
                    {
                        if (nov[u] && min > d[u])
                        {
                            min = d[u];
                            w = u;
                        }
                    }

                    nov[w] = false; //помещаем w в множество S
                                    //для каждой вершины из множества V\S определяем кратчайший путь от
                                    // источника до этой вершины
                    for (int u = 0; u < Size; u++)
                    {
                        double distance = d[w] + array[w, u];
                        if (nov[u] && d[u] > distance && array[w, u] != 0)
                        {
                            d[u] = distance;
                            p[u] = w;
                        }
                    }
                }
                return d; //в качестве результата возвращаем массив кратчайших путей для
            } 
            //заданного источника
            //восстановление пути от вершины a до вершины b для алгоритма Дейкстры
            //public void WayDijkstr(int a, int b, double[] p, ref Stack items)
            //{
            //    items.Push(b); //помещаем вершину b в стек
            //    if (a == p[b]) //если предыдущей для вершины b является вершина а, то
            //    {
            //        items.Push(a); //помещаем а в стек и завершаем восстановление пути
            //    }
            //    else //иначе метод рекурсивно вызывает сам себя для поиска пути
            //    { //от вершины а до вершины, предшествующей вершине b
            //        WayDijkstr(a, p[b], p, ref items);
            //    }
            //}

            //реализация алгоритма Флойда
            public double[,] Floyd(out int[,] p)
            {
                int i, j, k;
                //создаем массивы р и а
                double[,] a = new double[Size, Size];
                p = new int[Size, Size];
                for (i = 0; i < Size; i++)
                {
                    for (j = 0; j < Size; j++)
                    {
                        if (i == j)
                        {
                            a[i, j] = 0;
                        }
                        else
                        {
                            if (array[i, j] == 0)
                            {
                                a[i, j] = int.MaxValue;
                            }
                            else
                            {
                                a[i, j] = array[i, j];
                            }
                        }
                        p[i, j] = -1;
                    }
                }
                //осуществляем поиск кратчайших путей
                for (k = 0; k < Size; k++)
                {
                    for (i = 0; i < Size; i++)
                    {
                        for (j = 0; j < Size; j++)
                        {
                            double distance = a[i, k] + a[k, j];
                            if (a[i, j] > distance)
                            {
                                a[i, j] = distance;
                                p[i, j] = k;
                            }
                        }
                    }
                }
                return a;//в качестве результата возвращаем массив кратчайших путей между
            }

            //восстановление пути от вершины a до вершины в для алгоритма Флойда
            public void WayFloyd(int a, int b, int[,] p, ref Queue items)
            {
                int k = p[a, b];
                //если k<> -1, то путь состоит более чем из двух вершин а и b, и проходит через
                //вершину k, поэтому
                if (k != -1)
                {
                    // рекурсивно восстанавливаем путь между вершинами а и k
                    WayFloyd(a, k, p, ref items);
                    items.Add(k); //помещаем вершину к в очередь
                                  // рекурсивно восстанавливаем путь между вершинами k и b
                    WayFloyd(k, b, p, ref items);
                }
            }
        } 
        
        //конец вложенного клаcса
        private Node graph; //закрытое поле, реализующее АТД «граф»
        private List<GorodaOnline> l;
        public Graph(string name) //конструктор внешнего класса
        {
            using (StreamReader file = new StreamReader(name))
            {
                int n = int.Parse(file.ReadLine());
                l = new List<GorodaOnline>();
                for (int i = 0; i<n; i++)
                {
                    string line = file.ReadLine();
                    string[] mas = line.Split(' ');
                    l.Add(new GorodaOnline(mas[0], int.Parse(mas[1]), int.Parse(mas[2])));
                }

                double[,] a = new double[n, n];
                for (int i = 0; i < n; i++)
                {
                    string line = file.ReadLine();
                    string[] mas = line.Split(' ');
                    for (int j = 0; j < n; j++)
                    {
                        int b = int.Parse(mas[j]);
                        a[i, j] = l[i].Distance(l[j]) * b;
                    }
                }
                graph = new Node(a);
            }
        }
        //метод выводит матрицу смежности на консольное окно
        public void Show()
        {
            foreach(GorodaOnline gorod in l)
            {
                Console.WriteLine(gorod);
            }
            for (int i = 0; i < graph.Size; i++)
            {
                for (int j = 0; j < graph.Size; j++)
                {
                    if (graph[i, j] == 0)
                    {
                        Console.Write(""{0}\t"", graph[i, j]);
                    }
                    else
                    {
                        Console.Write(""{0:f2}\t"", graph[i, j]);
                    }
                }
                Console.WriteLine();
            }
        }
        public void Add(int a, int b)
        {
            graph.Add(a, b);
        }
        public void Dfs(int v)
        {
            graph.NovSet();//помечаем все вершины графа как непросмотренные
            graph.Dfs(v); //запускаем алгоритм обхода графа в глубину
            Console.WriteLine();
        }
        public void Bfs(int v)
        {
            graph.NovSet();//помечаем все вершины графа как непросмотренные
            graph.Bfs(v); //запускаем алгоритм обхода графа в ширину
            Console.WriteLine();
        }
        public void Dijkstr(int v, int nz)
        {
            graph.NovSet();//помечаем все вершины графа как непросмотренные
            int[] p;
            double[] d = graph.Dijkstr(v, nz, out p); //запускаем алгоритм Дейкстры
                                                //анализируем полученные данные и выводим их на экран
            Console.WriteLine(""Длина кратчайшие пути от вершины {0} до вершины"", v);

            for (int i = 0; i < graph.Size; i++)
            {
                if (i != v)
                {
                    Console.Write(""{0} равна {1}, "", i, d[i]);
                    Console.Write(""путь "");
                    if (d[i] != int.MaxValue)
                    {
                        Stack items = new Stack();
                        //graph.WayDijkstr(v, i, p, ref items);
                        while (items.Peek()!= null)
                        {
                            Console.Write(""{0} "", items.Pop());
                        }
                    }

                }
                Console.WriteLine();
            }
        }
        public void Myloyo_find(int a, int b, int nz)
        {
            graph.NovSet();//помечаем все вершины графа как непросмотренные
            int[] p;
            double[] d = graph.Dijkstr(a, nz, out p); //запускаем алгоритм Дейкстры
                                                      //анализируем полученные данные и выводим их на экран
            if (d[b]!= int.MaxValue)
            {
                Console.WriteLine(""Длина кратчайшего пути из города {0} в город {1} без города {2} равен {3}"", l[a].Name, l[b].Name, l[nz].Name, d[b]);
                Console.WriteLine();
                List<int>path = new List<int>();
                int cur = b;
                while (cur != -1)
                {
                    path.Add(cur);
                    cur = p[cur];
                }

                path.Reverse();
                Console.WriteLine($""Путь из города {l[a].Name} в город {l[b].Name} без города {l[nz].Name}:"");
                foreach(int i in path){
                    Console.Write(l[i].Name + "", "");
                }
                Console.WriteLine();
            }
            else
            {
                Console.WriteLine($""Пути из {l[a].Name} в {l[b].Name} нет. (точка точка точка)"");
            }
        }
        public void Floyd()
        {
            int[,] p;
            double[,] a = graph.Floyd(out p); //запускаем алгоритм Флойда
            int i, j;
            //анализируем полученные данные и выводим их на экран
            for (i = 0; i < graph.Size; i++)
            {
                for (j = 0; j < graph.Size; j++)
                {
                    if (i != j)
                    {
                        if (a[i, j] == int.MaxValue)
                        {
                            Console.WriteLine(""Пути из города {0} в город {1} не существует"", i, j);
                        }
                        else
                        {
                            Console.Write(""Кратчайший путь из города {0} до города {1} равен {2}, "", i, j, a[i,j]);
                            Console.Write("" путь "");
                            Queue items = new Queue();
                            items.Add(i);
                            graph.WayFloyd(i, j, p, ref items);
                            items.Add(j);
                            while (!items.IsEmpty)
                            {
                                Console.Write(""{0} "", items.Take());
                            }
                            Console.WriteLine();
                        }
                    }
                }
            }
        }
        public void Adjacent(int v) // 1 задача
        {
            Console.Write(""Количество вершин смежных с {0} вершиной: "", v);
            int counter = 0;
            //просматриваем строку с номером v в матрице смежности
            for (int i = 0; i < graph.Size; i++)
            {
                if (graph[v-1, i] != 0)
                {
                    counter++;
                }
            }
            Console.WriteLine(counter);
        }
        public void Floyd_new(int L)
        {
            int[,] p;
            double[,] a = graph.Floyd(out p); //запускаем алгоритм Флойда
            for(int x = 0; x < a.GetLength(0); x++)
            {
                for(int y = 0; y < a.GetLength(1); y++)
                {
                    Console.Write(a[x, y] + "" "");
                   
                }
                Console.WriteLine();
            }

            int i, j;
            //анализируем полученные данные и выводим их на экран
            for (i = 0; i < graph.Size; i++)
            {
                for (j = 0; j < graph.Size; j++)
                {
                    if (i != j)
                    {
                        if (a[i, j] == int.MaxValue)
                        {
                            Console.WriteLine(""Пути из вершины {0} в вершину {1} не существует"", i, j);
                        }
                        else
                        {
                            if (a[i, j] <= L)
                            {
                                Console.WriteLine(""Пара вершин: {0} и {1}. Кратчайший путь равен {2}."", i, j, a[i, j]);
                            }
                            Queue items = new Queue();
                            items.Add(i);
                            graph.WayFloyd(i, j, p, ref items);
                            items.Add(j);
                        }
                    }
                }
            }
        }
    }
}

// основная прога

using System;

namespace Myloyorrrr
{
    internal class Program
    {
        static void Main()
        {

            Graph G = new Graph(""C:/Настя/книит/in.txt"");
            G.Show();
            Console.WriteLine();
            Console.WriteLine(""Введите первую вершину:"");
            int a = int.Parse(Console.ReadLine());
            Console.WriteLine(""Введите вторую вершину:"");
            int b = int.Parse(Console.ReadLine());
            Console.WriteLine(""Введите вершину, через которую нельзя пройти:"");
            int d = int.Parse(Console.ReadLine());
            Console.WriteLine();
            G.Myloyo_find(a-1, b-1, d-1);


            //// 1 задача: подсчитать смежные вершины с данной вершиной 
            //Console.Write(""Введите номер вершины: "");
            //int v = int.Parse(Console.ReadLine());
            //G.Adjacent(v);

            //// 2 задача: определить все пары вершин, для которых существует путь длиной не более L
            //Console.Write(""Введите требуемую длину пути: "");
            //int L = int.Parse(Console.ReadLine());
            //G.Floyd_new(L);

            //BinaryTree lipa = new BinaryTree();
            //int n = 0;

            ////Чтение последовательности чисел из файла input.txt и добавление их в дерево
            //using (StreamReader f = new StreamReader(""C:/Настя/книит/in.txt""))
            //{
            //    string line;
            //    while ((line = f.ReadLine()) != null)
            //    {
            //        string[] text = line.Split(' ');
            //        for (int i = 0; i < text.Length; i++)
            //        {
            //            int num = int.Parse(text[i]);
            //            lipa.Add(num);
            //            n++;
            //        }
            //    }

            //}

            //lipa.Preorder();

            ////3 деревья
            //bool IsBalance = lipa.Balance();
            //if (IsBalance)
            //{
            //    Console.WriteLine(""Дерево является сбалансированным"");
            //}
            //else
            //{
            //    Console.WriteLine(""Дерево не является сбалансированным"");
            //}
        }
    }
}


"
rxRzCu6Z,Untitled,sissou123,C,Saturday 18th of May 2024 04:42:38 PM CDT,"C Programming Masterclass: Pointers & Advanced C Language
C Programming Advanced Topics: Pointers, Memory, Low-Level C Language and Embedded C Preparation 
What you'll learn
Introduction To Pointers For Beginners
Pointers Declaration, Initialization, and Usage 
for more:https://cuty.io/Hf0LX7E92P
"
n2VBMTXb,landfill,mathiaas,Lua,Saturday 18th of May 2024 04:25:52 PM CDT,"local scriptName = ""landfill""
local args = {...}

if #args < 3 then
    print(""Usage: "" .. scriptName .. "" <width> <depth> <channel>"")
    return
end

local WIDTH = tonumber(args[1])
local DEPTH = tonumber(args[2])
local CHANNEL = args[3]

dofile(""turtle_bot"")

if not COLOR_CHANNELS[CHANNEL] then
    print(CHANNEL .. "" is not a valid color channel."")
    return
end


local t = TurtleBot.new(scriptName, ""North"")
t:connect()

local function selectBlocks()
    for _, v in pairs(t:inventory()) do
        if v.name ~= ITEMS.enderChest.name then
            turtle.select(v.slot)
            break
        end
    end
end


local function place(direction)
    local placeFunc = turtle.place
    if direction == ""up"" then
        placeFunc = turtle.placeUp
    elseif direction == ""down"" then
        placeFunc = turtle.placeDown
    end

    selectBlocks()
    placeFunc()
end


local function collectBlocks()
    for i=1, 2 do
        t:enderCollect(COLOR_CHANNELS[CHANNEL], 64)
    end
    t:dig(""up"")
end


local function fill()
    local y = 0
    while t:down() do
        y = y + 1
        sleep(.5)
    end

    for _ = 1, y do
        t:up()
        place(""down"")
    end
end


local function traverseRow(steps)
    for _ = 1, steps do
        local inventory = t:inventory()
        if #inventory < 2 then
            collectBlocks()
        end
        fill()
        t:enderRefuel(2000, 5000, ITEMS.charcoal)
        t:dig(""up"")
        sleep(.5)
        t:forward()
    end
end


local function main()
    for w = 1, WIDTH do
        traverseRow(DEPTH - 1)
        if w ~= WIDTH then
            if w % 2 == 1 then
                t:right()
                traverseRow(1)
                t:right()
            else
                t:left()
                traverseRow(1)
                t:left()
            end
        end
    end
    if WIDTH % 2 == 0 then
        t:right()
        t:right()
        traverseRow(WIDTH - 1)
        t:right()
        t:right()
    end
end

t:execute(main)"
v23NmqLG,DUPE PETSIM99,PpepA,Lua,Saturday 18th of May 2024 04:13:57 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/Vincentsss1/PETSIM99/main/DUPENEWMETHOD""))();"
amphQqsZ,hookmetamethod,Devil-Z5,Lua,Saturday 18th of May 2024 03:30:42 PM CDT,"
local client_env = {}

local function hookmetamethod(object, metamethod, hook)
    local mt = getrawmetatable(object) or {}
    local OldMetaMethod = mt[metamethod]
    if not OldMetaMethod then
        error(""metamethod not found"")
    end

    setreadonly(mt, false)
    mt[metamethod] = function(...)
        return hook(OldMetaMethod, ...)
    end
    setreadonly(mt, true)
    
    return function()
        return OldMetaMethod
    end
end


setmetatable(client_env, {
    __index = function(tbl, key)
        if key == ""test"" then
            return true
        else
            return rawget(tbl, key)
        end
    end
})

print(client_env.test) -- this gotta print true :3"
5xzUgf6Y,[WSL] start ssh-agent in .bashrc,ceterumcenseo,Bash,Saturday 18th of May 2024 03:27:22 PM CDT,"if ! ps -A | grep ssh-agent >/dev/null 2>/dev/null; then
        ssh-agent > $HOME/.sshagent
fi
source $HOME/.sshagent
"
v7Qxsxv1,Flame Buzzer rev_02,pleasedontcode,Arduino,Saturday 18th of May 2024 03:22:18 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Flame Buzzer
	- Source Code compiled for: Arduino Uno
	- Source Code created on: 2024-05-18 20:21:48

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Turns on and off when it senses flame */
/****** END SYSTEM REQUIREMENTS *****/


/****** DEFINITION OF LIBRARIES *****/
#include <ezBuzzer.h>	//https://github.com/ArduinoGetStarted/buzzer
#include <DHT.h>	//https://github.com/adafruit/DHT-sensor-library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void); // Added function prototype

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t FlameSensor_DHT22_DOUT_PIN_D3 = 3;

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t PassiveBuzzer_Signal_PIN_D2 = 2; // Corrected variable name

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
bool PassiveBuzzer_Signal_PIN_D2_rawData = 0; // Corrected variable name

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
float PassiveBuzzer_Signal_PIN_D2_phyData = 0.0; // Corrected variable name

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
const int BUZZER_PIN = 5; // Define the buzzer pin

ezBuzzer buzzer(BUZZER_PIN); // Initialize the ezBuzzer object with the buzzer pin

#define DHTPIN 3
#define DHTTYPE DHT22

DHT dht(DHTPIN, DHTTYPE); // Initialize the DHT sensor object with the pin and type

void setup(void)
{
	// put your setup code here, to run once:
	pinMode(FlameSensor_DHT22_DOUT_PIN_D3, INPUT_PULLUP);
	pinMode(PassiveBuzzer_Signal_PIN_D2, OUTPUT);
	dht.begin(); // Initialize the DHT sensor
}

void loop(void)
{
	// put your main code here, to run repeatedly:
	updateOutputs(); // Refresh output data

	if (digitalRead(FlameSensor_DHT22_DOUT_PIN_D3) == HIGH) {
		PassiveBuzzer_Signal_PIN_D2_rawData = 1; // Turn on the buzzer
	} else {
		PassiveBuzzer_Signal_PIN_D2_rawData = 0; // Turn off the buzzer
	}
}

void updateOutputs(void)
{
	digitalWrite(PassiveBuzzer_Signal_PIN_D2, PassiveBuzzer_Signal_PIN_D2_rawData);
}
"
hdGzziaN,Flame Control rev_01,pleasedontcode,Arduino,Saturday 18th of May 2024 03:20:35 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Flame Control
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-18 20:19:33

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Turns on and off when it senses flame */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <ezBuzzer.h>	//https://github.com/ArduinoGetStarted/buzzer
#include <DHT.h>	//https://github.com/adafruit/DHT-sensor-library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void); // Added function prototype

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t FlameSensor_DHT22_DOUT_PIN_D3 = 3;

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t PassiveBuzzer_Signal_PIN_D2 = 2; // Corrected variable name

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
bool PassiveBuzzer_Signal_PIN_D2_rawData = 0; // Corrected variable name

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
float PassiveBuzzer_Signal_PIN_D2_phyData = 0.0; // Corrected variable name

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
const int BUZZER_PIN = 5; // Define the buzzer pin

ezBuzzer buzzer(BUZZER_PIN); // Initialize the ezBuzzer object with the buzzer pin

#define DHTPIN 3
#define DHTTYPE DHT22

DHT dht(DHTPIN, DHTTYPE); // Initialize the DHT sensor object with the pin and type

void setup(void)
{
	// put your setup code here, to run once:
	pinMode(FlameSensor_DHT22_DOUT_PIN_D3, INPUT_PULLUP);
	pinMode(PassiveBuzzer_Signal_PIN_D2, OUTPUT);
	dht.begin(); // Initialize the DHT sensor
}

void loop(void)
{
	// put your main code here, to run repeatedly:
	updateOutputs(); // Refresh output data

	if (digitalRead(FlameSensor_DHT22_DOUT_PIN_D3) == HIGH) {
		PassiveBuzzer_Signal_PIN_D2_rawData = 1; // Turn on the buzzer
	} else {
		PassiveBuzzer_Signal_PIN_D2_rawData = 0; // Turn off the buzzer
	}
}

void updateOutputs(void)
{
	digitalWrite(PassiveBuzzer_Signal_PIN_D2, PassiveBuzzer_Signal_PIN_D2_rawData);
}
"
w09bRNU8,Untitled,StormTruppen,JSON,Saturday 18th of May 2024 02:44:50 PM CDT,"const { CognitoIdentityServiceProvider } = require(""@aws-sdk/client-cognito-identity-provider"");
const openfort = require('@openfort/openfort-node').default;

const openfortClient = new openfort(""SECRET"");

exports.handler = async function(event, context, callback) {
    try {
        // Extract the ID token from the event
        const idToken = getIdTokenFromEvent(event);

        // If ID token is not found, log an error and return an error response
        if (!idToken) {
            console.error(""ID token not found in the event."");
            const response = {
                statusCode: 400,
                body: JSON.stringify({ success: false, message: 'ID token not found in the event.' })
            };
            return callback(null, response);
        }

        // Use the ID token to decode and get user information
        const userId = await getUserIdFromToken(idToken);

        // Use the userId as the thirdPartyUserId in your request
        const req = {
            preGenerateEmbeddedAccount: true,
            thirdPartyProvider: ""oidc"",
            thirdPartyUserId: userId,
        };

        const embeddedReq = {
            shieldAuthProvider: openfort.ShieldAuthProvider.Openfort,
            apiKey: ""SECRET"",
            apiSecret: ""SECRET"",
            encryptionPart: ""SECRET"",
        };

        // Invoke the Lambda function
        const openfortSession = await openfortClient.iam.createAuthPlayer(req, embeddedReq);

        // Return the updated event back to Amazon Cognito
        return callback(null, event);
    } catch (error) {
        // Handle any errors
        console.error(""Error occurred:"", error);
        const response = {
            statusCode: 500,
            body: JSON.stringify({ success: false, message: 'An error occurred while processing the request.' })
        };
        return callback(null, response);
    }
};

// Function to extract the ID token from the event
function getIdTokenFromEvent(event) {
    if (event && event.requestContext && event.requestContext.identity && event.requestContext.identity.cognitoAuthenticationProvider) {
        return event.requestContext.identity.cognitoAuthenticationProvider.split(':').pop();
    } else {
        return null; // Return null if required properties are not present
    }
}

// Function to get the user ID from the access token
async function getUserIdFromToken(token) {
    try {
        const cognitoIdentityServiceProvider = new CognitoIdentityServiceProvider();
        const params = { AccessToken: token };
        const data = await cognitoIdentityServiceProvider.getUser(params);
        return data.sub;
    } catch (error) {
        console.error(""Error decoding token:"", error);
        throw new Error(""Failed to decode token"");
    }
}
"
DFmhsLvx,pastebin.ai - #1 pastebin.com alternative,xxsa,PHP,Saturday 18th of May 2024 02:44:25 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.

..............................
."
5tsPUm2D,Item Pick Up,HeatedDZN,Lua,Saturday 18th of May 2024 02:42:12 PM CDT,"-- Function to pick up items from the chest below
local function pickUpItems()
    for slot = 1, 16 do
        turtle.select(slot)
        while turtle.suckDown() do end
    end
end

-- Function to move up by a specified number of blocks
local function moveUp(n)
    for i = 1, n do
        while not turtle.up() do
            turtle.digUp()
        end
    end
end

-- Function to move down by a specified number of blocks
local function moveDown(n)
    for i = 1, n do
        while not turtle.down() do
            turtle.digDown()
        end
    end
end

-- Function to move forward by a specified number of blocks
local function moveForward(n)
    for i = 1, n do
        while not turtle.forward() do
            turtle.dig()
        end
    end
end

-- Function to drop items from the turtle's inventory
local function dropItems()
    for slot = 1, 16 do
        turtle.select(slot)
        turtle.drop()
    end
end

-- Main function
local function main()
    while true do
        pickUpItems()
        moveUp(4)
        moveForward(32)
        turtle.turnLeft()
        moveForward(8)
        dropItems()
        turtle.turnLeft()
        moveForward(32)
        turtle.turnLeft()
        moveForward(8)
        moveDown(4)
        turtle.turnLeft()
        os.sleep(30) -- Sleep for 30 seconds
    end
end

-- Start the script
main()
"
2SujSYMj,How to find the palette number of a color in roblox studio,Da_HamsterLord,JavaScript,Saturday 18th of May 2024 02:11:17 PM CDT,"/*
paste this into your brower's console (f12) and replace row and left pos by the correct numbers, like this : 
https://devforum-uploads.s3.dualstack.us-east-2.amazonaws.com/uploads/original/4X/a/0/9/a096e6c7814a4797bb608f85b8058ba4b15eff10.png
*/

let row = 2 // Change this to the row of the color
let offset = 4 // Offset of the color from the left 

row = row - 1
let pos = 0
for(let i = 1; i <= row; i++) {
    if (i >= 7) {
        pos += 13-(i-7)
    } else {
       pos += 7+i-1
    }
}
console.log(pos + offset)"
GJ98ZSLD,Untitled,shizaero,C++,Saturday 18th of May 2024 01:23:57 PM CDT,"#include <iostream>
#include <time.h>
using namespace std;

int binarySearch(int a[], int elem, int low, int up) {
    if (low > up) return -1;
    int middle = (low + up)/2;
    if (a[middle] == elem) return middle;
    if (a[middle] > elem) return binarySearch(a, elem, low, middle - 1);
    else return binarySearch(a, elem, middle + 1, up);
}

void quickSort(int a[], int left, int right) {
    if (left > right) return;
    int p = a[(left + right) / 2];
    int i = left;
    int j = right;
    while (i <= j) {
        while (a[i] < p) i++;
        while (a[j] > p) j--;
        if (i <= j) {
            int temp = a[i];
            a[i] = a[j];
            a[j] = temp;
            i++;
            j--;
        }
    }
    quickSort(a, left, j);
    quickSort(a, i, right);
}


int main()
{
    setlocale(LC_ALL, ""rus"");
    srand(time(0));
    const int N = 10;
    int a[N];

    cout << ""Исходный массив:\n""; \
        for (int i = 0; i < N; ++i) {
            a[i] = rand() % 16;
            cout << a[i] << ""\t"";
    }

    cout << endl;
    quickSort(a, 0, N - 1);
    for (int i = 0; i < N; ++i) {
        cout << a[i] << ""\t"";
    }
    cout << endl;
    system(""pause"");
    return 0;
}
"
X2jyCVED,Kid Punishment,DrawingJhon,Lua,Saturday 18th of May 2024 01:12:32 PM CDT,"local owner: Player = getfenv().owner
local NLS: () -> () = getfenv().NLS

local remote = Instance.new(""RemoteEvent"")
remote.Name = ""HitDummy""
remote.OnServerEvent:Connect(function(player, dummy)
	if player ~= owner then return end
	
	local head = dummy.Head
	
	local weld = Instance.new(""Weld"")
	weld.Part0 = owner.Character[""Right Arm""]
	weld.Part1 = head
	weld.C0 = CFrame.new(0, -1, 0)
	weld.C1 = CFrame.new(0, 0.5, 0)
	weld.Parent = head
	
	for _, part in dummy:GetDescendants() do
		if part:IsA(""BasePart"") then
			part:SetNetworkOwner(player)
		end
	end
end)

remote.Parent = NLS([==[
local mouse = owner:GetMouse()
local remote = script:WaitForChild(""HitDummy"")

mouse.Button1Down:Connect(function()
	if mouse.Target.Parent:FindFirstChildOfClass(""Humanoid"") then
		remote:FireServer(mouse.Target.Parent)
		
	end
end)

]==], owner.Character)"
ctGLERH3,QuickSelect,nathanwailes,Python,Saturday 18th of May 2024 12:18:22 PM CDT,"import random

def quickselect(arr, k):
    """"""
    Returns the k-th smallest element of list within arr.
    """"""
    if len(arr) == 1:
        return arr[0]

    pivot = random.choice(arr)

    lows = [el for el in arr if el < pivot]
    highs = [el for el in arr if el > pivot]
    pivots = [el for el in arr if el == pivot]

    if k < len(lows):
        return quickselect(lows, k)
    elif k < len(lows) + len(pivots):
        return pivots[0]
    else:
        return quickselect(highs, k - len(lows) - len(pivots))

# Example usage:
arr = [3, 2, 1, 5, 4]
k = 2  # looking for the 3rd smallest element, index 2
print(quickselect(arr, k))  # Output: 3
"
Yx4enQwb,Radix sort,nathanwailes,Python,Saturday 18th of May 2024 12:17:26 PM CDT,"def counting_sort(arr, exp):
    n = len(arr)
    output = [0] * n
    count = [0] * 10

    for i in range(n):
        index = arr[i] // exp
        count[index % 10] += 1

    for i in range(1, 10):
        count[i] += count[i - 1]

    i = n - 1
    while i >= 0:
        index = arr[i] // exp
        output[count[index % 10] - 1] = arr[i]
        count[index % 10] -= 1
        i -= 1

    for i in range(n):
        arr[i] = output[i]

def radix_sort(arr):
    max1 = max(arr)
    exp = 1
    while max1 // exp > 0:
        counting_sort(arr, exp)
        exp *= 10
"
X1JaNb6C,Heap sort,nathanwailes,Python,Saturday 18th of May 2024 12:17:03 PM CDT,"def heap_sort(arr):
    def heapify(arr, n, i):
        largest = i
        l = 2 * i + 1
        r = 2 * i + 2

        if l < n and arr[largest] < arr[l]:
            largest = l

        if r < n and arr[largest] < arr[r]:
            largest = r

        if largest != i:
            arr[i], arr[largest] = arr[largest], arr[i]
            heapify(arr, n, largest)

    n = len(arr)

    for i in range(n//2 - 1, -1, -1):
        heapify(arr, n, i)

    for i in range(n-1, 0, -1):
        arr[i], arr[0] = arr[0], arr[i]
        heapify(arr, i, 0)
"
x02GMp0d,QuickSort,nathanwailes,Python,Saturday 18th of May 2024 12:16:37 PM CDT,"def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quick_sort(left) + middle + quick_sort(right)
"
bpp8kais,Merge sort,nathanwailes,Python,Saturday 18th of May 2024 12:16:10 PM CDT,"def merge_sort(arr):
    if len(arr) > 1:
        mid = len(arr) // 2
        L = arr[:mid]
        R = arr[mid:]

        merge_sort(L)
        merge_sort(R)

        i = j = k = 0
        while i < len(L) and j < len(R):
            if L[i] < R[j]:
                arr[k] = L[i]
                i += 1
            else:
                arr[k] = R[j]
                j += 1
            k += 1

        while i < len(L):
            arr[k] = L[i]
            i += 1
            k += 1

        while j < len(R):
            arr[k] = R[j]
            j += 1
            k += 1
"
0TXwGFpQ,Insertion sort,nathanwailes,Python,Saturday 18th of May 2024 12:15:44 PM CDT,"def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i-1
        while j >= 0 and key < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
"
wSkJABDJ,Selection sort,nathanwailes,Python,Saturday 18th of May 2024 12:15:14 PM CDT,"def selection_sort(arr):
    for i in range(len(arr)):
        min_idx = i
        for j in range(i+1, len(arr)):
            if arr[j] < arr[min_idx]:
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]
"
2Ugmw439,Bubble sort,nathanwailes,Python,Saturday 18th of May 2024 12:14:43 PM CDT,"def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
"
mvqCednj,Partition algorithm,nathanwailes,Python,Saturday 18th of May 2024 12:12:40 PM CDT,""""""" Below is the partition algorithm commonly used in the QuickSort and QuickSelect algorithms. This function partitions the array in place and returns the index where the pivot element is placed. Elements smaller than or equal to the pivot are placed on the left, and elements greater than the pivot are placed on the right.

the things I would expect people would be most likely to mess up are:
- you're incrementing up to the element *right before* the last one.
- you're checking if the current element is less than *or equal to* the pivot value.
""""""

def partition(arr, l=None, r=None):
    if l is None:
        l, r = 0, len(arr)-1
    pivot_starting_index = r
    pivot_value = arr[pivot_starting_index]
    pivot_final_index = l
    for j in range(l, r):
        if arr[j] <= pivot_value:
            arr[pivot_final_index], arr[j] = arr[j], arr[pivot_final_index]
            pivot_final_index += 1
    arr[pivot_final_index], arr[pivot_starting_index] = arr[pivot_starting_index], arr[pivot_final_index]
    return pivot_final_index

arr = [10, 7, 8, 9, 1, 5]
print(partition(arr), arr)"
G4Krz5HW,Untitled,artur99,MySQL,Saturday 18th of May 2024 11:40:51 AM CDT,"CREATE TABLE fructe (
  id INTEGER PRIMARY KEY,
  list TEXT NOT NULL
);
INSERT INTO fructe VALUES (1, 'mere,pere,portocale');
INSERT INTO fructe VALUES (2, 'banane,rosii,mere');

DELIMITER //

CREATE PROCEDURE UpdateList()
BEGIN
  DECLARE done INT DEFAULT 0;
  DECLARE new_list TEXT;
  DECLARE current_id INT;
  DECLARE current_list TEXT;

  DECLARE cur CURSOR FOR SELECT id, list FROM fructe;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

  OPEN cur;
  read_loop: LOOP
    FETCH cur INTO current_id, current_list;
    IF done THEN
      LEAVE read_loop;
    END IF;

    SET new_list = '';
    
    WHILE LOCATE(',', current_list) > 0 DO
      SET new_list = CONCAT(new_list, SUBSTRING_INDEX(current_list, ',', 1), '1,');
      SET current_list = SUBSTRING(current_list FROM LOCATE(',', current_list) + 1);
    END WHILE;

    SET new_list = CONCAT(new_list, current_list, '1');
    
    UPDATE fructe SET list = new_list WHERE id = current_id;
  END LOOP;

  CLOSE cur;
END //

DELIMITER ;


CALL UpdateList();


SELECT * FROM fructe;
"
c0z90xTa,Untitled,shizaero,C++,Saturday 18th of May 2024 11:26:58 AM CDT,"#include <iostream>
using namespace std;

long long Fact(int n) {
    if (n == 1 or n == 0) return 1;
    else if (n < 0) return 0;
    else return n*Fact(n-1);
}

int main()
{
    std::cout << Fact(6);
}

"
nX4Dfpd5,webinar-exam-review-2023-05-18,jspill,Python,Saturday 18th of May 2024 11:24:05 AM CDT,"# Exam Review 2024 May 18

# Do those LABS
# Ch 2-14... all Labs!
# Ch 21-32 just ADDITIONAL LABS, but important practice!
# get to know the Prac Tests, Ch 33 and 34... more than the Pre

# Use Submit Mode and get them to 100%!!!
# PAY ATTENTION to the unit tests!
# ... then UNIT TEST more! Unit test, unit test, unit test!

# When you've gotten the Ch 33-34 Prac Tests to 100, go back and do each again.
# This time, try to think of 2-3 more unit tests that could be run on each question.

# Comp 1: Basic syntax and knowledge: operators, data types, etc
# Comp 2: Control Flow
# Comp 3: Modules and Files

# Comp 1: Basic syntax and knowledge: operators, data types, etc

# Data Types/Classes
# int
# float
# bool # True, False
# str # """"
# list # [ ]
# dict # {key: value}
# tuple # ( ) immutable, Python sees a, b, c as (a,b,c) --> return x,y --> return (x,y)
# set # { } no duplicate values, no order --> no indices, can't slice it, can't sort it, can't reverse
# range # range() container of consecutive numbers
# file # open()... f.read(), f.readlines(), f.write()

# # Operators
# = # assigns a value
# == # asking a question... result in Boolean value
# +
# -
# *
# /
# % modulo... whole number remainder... ""how many things didn't fit since the last even division?""
# // floor division... last even division
# <
# >
# <=
# >=
# += # x += 1 ... x = x + 1
# -=
# ** # similar to pow() and math.pow()
# !=
# # keywords
# in # membership check... if x in myList
# not # if not x in myList
# and
# or # any one True would cause the combo to be True... limit OR to 2-3 conditions

# Comp 2
# Control Flow! The how and when of our programs
# IF statements... if, if/else, if/elif, if/elif/else
# LOOPS
# WHILE - a general purpose loop, an IF that repeats
# FOR - repeating actions a known number of times --> once for everything in the container
# FOR in Python is explicitly about looping over a container
# # Check out my For Loops webinar in The Gotchas
# for ___ in _someContainer_:
# for item in myList:
# for char in myStr:
# for key in myDict: # loop var holds the key, myDict[key] holds the value
# for n in range(0, someNum): # if you thought of range(5) as being [0, 1, 2, 3, 4]
# for i in range(0, len(myList)):
# for i, item in enumerate(myList):

# FUNCTIONS
# defining/writing a function vs calling
# modular... a function has ONE specific job
# print/output or return (or maybe something else)
# parameters are special variables for holding stuff coming into the function
# parameters vs arguments

# def someFunction(x, y):
#     return x + y
#
# if __name__ == ""__main__"": # is this script the one that's running?
#     input1 = int(input())
#     input2 = int(input())
#     myNum = someFunction(input1, input2)
#     print(myNum)

# See ""tasks"" in the last section of Ch 10, 11, 13, 14 for function writing practice
# CodingBat also has good function-based Python questions:
# https://codingbat.com/python

# Built-In Functions
# input()
# print()
# len()
# min()
# max()
# sum()
# str()
# list()
# dict()
# set()
# range()
# enumerate()
# round() # cousins math.ceil(), math.floor()
# type() # myVar = ""4.3"", print(type(myVar).__name__) --> str
# pow()
# abs() # cousin math.fabs()
# open()
# help() # # help(str), help(str.isspace)
# dir() # print(dir(str))

# STRING
# be able to refer by index, and to slice
# myStr = ""abcdef""
# # mySlice[start:stop:step]
# revStr = myStr[::-1]
# print(revStr)

# KNOW YOUR WHITESPACE
# "" "" # space from spacebar
# # a lot of other Unicode spaces
# ""\n"" # new line return
# ""\t"" # tab
# ""\r"" # carriage return

# unless otherwise stated... printed output should end a new line return...
# 99% of the time it already does
# print(""hey"") --> print(""hey"", end=""\n"")
# we only need to change that when...
#1 ... this specific says to do something else
#2 ... you yourself overrode the end parameter of print() as the last thing you did... just call print() again after the loop

# STRING METHODS
# myStr.format() # ""Stuff I want to put into this string like {} and {:.2f}"".format(var1, var2)
# myStr.strip() # input().strip()
# myStr.split() # returns a list of smaller strings
# myStr.join(listOfStrings) # "" "".join(listOfStrings)
# myStr.replace(subStr, newStr) # ""remove"" myStr = myStr.replace(subStr, """")
# myStr.index(subStr) # return int index where found, or raise error
# myStr.find(subStr) # return int index where found, or return -1
# myStr.count(subStr) # returns int of times subStr occurs
# case: lower(), upper(), title(), capitalize()
# is/Boolean: islower(), isupper(), isspace(), isalpha(), isalnum(), isnumeric(), isdigit()
# myStr.startswith(subStr), myStr.endswith(subStr)

# LISTS
# be able to refer by index and to slice
# LIST METHODS
# # +
# myList.append(item)
# myList.insert(i, item)
# myList.extend(anotherList)
# # -
# myList.pop(i) # pop() by index
# myList.remove(item) # remove() by value
# myList.clear()
# # other
# myList.sort()
# myList.reverse()
# myList.count(item) # returns int num of occurrences
# myList.index(item)
# myList.copy()

# DICT
# use the key like an index []... then you don't really need DICT methods
# myDict[key] # get the value for that key
# myDict[key] = value # assigns new value to that key

# membership check
# if ___ in myDict: # looking at keys

# DICT METHODS
# myDict.keys() # all dict keys in one set-like object
# myDict.values() # all dict values in one object

# MODULES
# math and csv

# MATH MODULES
# import math # FULL IMPORT
# math.factorial(x)
# math.ceil(x)
# math.floor(x)
# math.sqrt(x)
# math.pow(x, y)
# math.fabs(x)
# math.pi
# math.e
#
# # PARTIAL IMPORT
# from math import ceil # just ceil() not math.ceil()
# from math import sqrt, fabs # just sqrt(), fabs()
# from math import * # factorial(), floor(), etc no math.
#
# # ALIAS IMPORT
# import math as m # m.floor(), m.ceil()

# FILES
# modes: r, w, a

# READ MODE
# f = open(filename)
with open(""plain_text_file.txt"", ""r"") as f:
    # f.read() # returns the whole file as one big string
    # f.readlines() # returns a list of strings, each line is one string
    # f.write(someStr) # writes a single str arg to file
    contents = f.readlines()
# print(contents)

# reading with csv module
import csv
# csv.reader()

with open(""mock_data.csv"", ""r"") as f1: # mockaroo.com
    # for row in csv.reader(f1):
    contents = list(csv.reader(f1)) # csv.reader(f1, delimiter=""\t"") for .tsv
# print(contents)
# for row in contents[:10]:
#     print(row)

# WRITE MODE
# write out a new file where all the last names begin with ""Mc""
with open(""output_data38.csv"", ""w"") as f2:
    for row in contents:
        # ['5', 'Carling', 'Baude', 'cbaude4@liveinternet.ru', 'Male', '91.198.36.54']
        # last name is row[2]
        if row[2].startswith(""Mc""):
            f2.write("","".join(row) + ""\n"")

# APPEND MODE
# reading it to see...
# with open(""append_to_this.txt"") as f3:
#     print(f3.readlines())
with open(""append_to_this.txt"", ""a"") as f3:
    f3.write(""\nPippin"")



"
Nhqjct7n,Ejercicio 1,due204,Python,Saturday 18th of May 2024 11:10:52 AM CDT,"# 1.a
def imprimir_cantidad_vocales(vocales):
    contador = 0
    for i in vocales:
        if i in (""a"", ""e"", ""i"", ""o"", ""u""):
            contador = contador + 1
    return contador


#1.b
def lista_palabras():
    finaliza = """"
    global lista_de_palabras
    lista_de_palabras = []
    while finaliza != ""fin"":
        palabra = input(""Ingrese palabra: "")
        if palabra == ""fin"":
            print(""Saliendo"")
            finaliza = palabra
        else:
            print(f""Agregado {palabra} a la lista."")
            lista_de_palabras.append([palabra, imprimir_cantidad_vocales(palabra)])
    return lista_de_palabras


#1.c
def mayor_de_tres_vocales():
    lista_mayor_de_tres = []
    for i in lista_palabras():
        if imprimir_cantidad_vocales(i[0]) >= 3:
            lista_mayor_de_tres.append(i)
    return lista_mayor_de_tres


#1.d
print(f""Lista mayor de tres vocales: {mayor_de_tres_vocales()}"")

"
Qvgf26nk,set multiset,LEGEND2004,C++,Saturday 18th of May 2024 10:57:18 AM CDT,"#pragma GCC optimize(""O3"")
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define double long double
#define pb push_back
const int mod = 1e9 + 7;

signed main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int n;
    cin >> n;
    multiset<int> ms;
    for(int i = 0; i < n; i++){
        int x;
        cin >> x;
        ms.insert(x);
    }
    for(int i = 1; i <= 5; i++){
        cout << i << ""-den "" << ms.count(i) << "" dene var\n"";
    }
    //ms.erase(4);
    ms.erase(ms.find(4));
    cout << '\n';
    for(int i = 1; i <= 5; i++){
        cout << i << ""-den "" << ms.count(i) << "" dene var\n"";
    }
    /*
    multiset<int> ms;
    ms.size(); // olcusu
    ms.empty(); // bosdurmu?
    ms.insert(x); // elave ele amma sorted
    ms.count(x); // x-in sayi
    ms.erase(x); // butun x leri sil
    ms.erase(ms.find(x)); // 1 dene x sil

    set<int> s;;
    
    */
    /*
    
    2
    4
    
    5
    3 2 4 5 1

    {1 ,

    2 , 3 , 4 , 5}

    log(1000) = 10
    2^10 = 1024~1000

    2^5 * 2^5 = 2^10 = 32 * 32 = 1024
    2^10 * 2^10 = 2^20 = 10^6
    log(10^3) = 10
    log(10^12) = 40
    log(10^9) = 30
    log(10^18) = 60

    */

}
"
60Vx0k4z,sdgseg,gadungw71,PHP,Saturday 18th of May 2024 10:28:37 AM CDT,"•	https://github.com/wa-tch-free-Feeeal
•	https://github.com/planet-oftheapesfullhdq
•	https://github.com/pC-Boomy2024
•	https://github.com/ok-Tenant-thaidub
•	https://www.artstation.com/artwork/Alzd4X
•	https://www.artstation.com/watchkingdomoftheplanetoftheapes4/profile
•	https://www.artstation.com/artwork/NyXWVJ
•	https://www.artstation.com/watch4myboothaisub7/profile
•	https://www.artstation.com/artwork/VJPORg
•	https://www.artstation.com/watchthetenanthdthailan5/profile
•	https://www.imdb.com/list/ls545433253/
•	https://www.kooapp.com/koo/guest_P68S8O/4b9495c4-465f-4741-8e37-a6af67d5aa80
•	https://open.firstory.me/user/clwc8cpr91bdy01xi8lre5yl2
•	https://open.firstory.me/story/clwc8d6n902hf01uqc2dz7666
•	https://wandering.flarum.cloud/d/63466-abibuledd
•	https://hiuderyy.hashnode.dev/boeleudd
•	https://www.bankier.pl/forum/temat_oleggg,66386211.html
•	https://medium.com/@styller98/%E0%B8%94%E0%B8%B9-%E0%B8%AB%E0%B8%99%E0%B8%B1%E0%B8%87-%E0%B8%AD%E0%B8%B2%E0%B8%93%E0%B8%B2%E0%B8%88%E0%B8%B1%E0%B8%81%E0%B8%A3%E0%B9%81%E0%B8%AB%E0%B9%88%E0%B8%87%E0%B8%9E%E0%B8%B4%E0%B8%A0%E0%B8%9E%E0%B8%A7%E0%B8%B2%E0%B8%99%E0%B8%A3-2024-hd-%E0%B9%80%E0%B8%95%E0%B9%87%E0%B8%A1%E0%B9%80%E0%B8%A3%E0%B8%B7%E0%B9%88%E0%B8%AD%E0%B8%87-%E0%B8%9E%E0%B8%B2%E0%B8%81%E0%B8%A2%E0%B9%8C%E0%B9%84%E0%B8%97%E0%B8%A2-full-4k-4bbc186f1d71
•	https://www.onfeetnation.com/profiles/blogs/sdgfsegseg
•	https://hackmd.io/@rerewilli6/B1CISrLX0
•	https://demo.hedgedoc.org/s/C8bZ7LTBK
•	https://rentry.co/bekr3t3v
•	https://paste.ee/p/lm6hv
•	https://yamcode.com/dfgsgs-731
•	https://lifeisfeudal.com/Discussions/question/sfdsevnt
•	https://start.me/w/arxkoX
•	https://plaza.rakuten.co.jp/aryasantosso/diary/202405190000/
•	https://telegra.ph/SGSEGS-05-18
•	https://muckrack.com/safsef-sefesg/bio
•	https://profile.hatena.ne.jp/sfsefgseg/
•	https://www.bitsdujour.com/profiles/rZnwuR
•	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/763267/Default.aspx
•	https://www.fitlynk.com/1716046033F671919
"
uBym9JGY,荔枝配方－將石頭方塊電擊後轉換成黑曜石,YTMango,JavaScript,Saturday 18th of May 2024 10:27:18 AM CDT,"ServerEvents.recipes((event) => {
  // 實際上用來將石頭轉換成黑曜石的配方
  event
    .custom({
      type: ""lychee:lightning_channeling"",
      hide_in_viewer: true,
      post: {
        type: ""if"",
        contextual: {
          type: ""location"",
          offsetY: -1,
          predicate: {
            block: {
              blocks: [""minecraft:stone""],
            },
          },
        },
        then: {
          type: ""place"",
          offsetY: -1,
          block: ""minecraft:obsidian"",
        },
        else: { // 閃電打在避雷針上時實際上是在上面一格產生實體
          type: ""if"",
          contextual: {
            type: ""location"",
            offsetY: -2,
            predicate: {
              block: {
                blocks: [""minecraft:stone""],
              },
            },
          },
          then: {
            type: ""place"",
            offsetY: -2,
            block: ""minecraft:obsidian"",
          },
        },
      },
    })
    .id(""kubejs:lychee-lightning_channeling/change_stone_to_obsidian_actually"");

  // 僅用來在 JEI/REI 中完整顯示石頭，不會有實際作用的配方
  event
    .custom({
      type: ""lychee:lightning_channeling"",
      ghost: true,
      item_in: [{ item: ""stone"" }],
      comment: ""將石頭電擊後轉換成黑曜石"",
      post: {
        type: ""place"",
        offsetY: -1,
        block: ""minecraft:obsidian"",
      },
    })
    .id(""kubejs:lychee-lightning_channeling/change_stone_to_obsidian-view_only"");
});"
KN9BmQ6J,yes ye har!!! snowybot robo manual,coinwalk,JavaScript,Saturday 18th of May 2024 10:01:38 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/2400).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var hundreds = (prefit*100);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = 100
var snowy = 0;
var snowie = elderly
var great = elderly
var bolux = false;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((great>(snowy-(prefit*0.5)))&&(great<(snowy+(prefit*0.5)))){
bolux = true;
}else{
bolux = false;
}
if ((great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))&&(!bolux)){
    beast = beast*2;
    snowy = parseFloat(great);
}
if (((great/32)<=(beast))&&((great-beast)>hundreds)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/32)<=(beast))&&((great-beast)>hundreds)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/32)<=(beast))&&((great-beast)>hundreds)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if (((great/12)<=(beast))&&((great-beast)<hundreds)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/12)<=(beast))&&((great-beast)<hundreds)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if (((great/12)<=(beast))&&((great-beast)<hundreds)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if ((beast>=(elderly/10))&&((great-beast)>hundreds)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if ((beast>=(elderly/10))&&((great-beast)>hundreds)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowy = 0;
    snowie = parseFloat(great);
}
if ((beast>=(elderly/10))&&((great-beast)>hundreds)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snowy = parseFloat(great);
    snowie = parseFloat(great);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 350);
}
go();"
RXgnjrru,127.0.0.1 network linux,coinwalk,JavaScript,Saturday 18th of May 2024 09:59:34 AM CDT,"digiexplorer.info, www.ing.com.au, www.coinspot.com.au, *.hcaptcha.com, cdn1.waterfox.net, www.waterfox.net, partner.googleadservices.com, code.jquery.com, www.googletagmanager.com, cdn.jsdelivr.net, just-dice.com, altquick.com, freebitcoins.com, newassets.hcaptcha.com, googleads.g.doubleclick.net, pagead2.googlesyndication.com, tpc.googlesyndication.com, www.google.com, hcaptcha.com, coinspot.com.au, ing.com.au, pastebin.com, challenges.cloudflare.com, s0.2mdn.net, fundingchoicesmessages.google.com, match.adsrvr.org, c1.adform.net, gtrace.mediago.io, analytics.pangle-ads.com, a.tribalfusion.com, cm.g.doubleclick.net, doubleclick.net, fonts.gstatic.com, x.bidswitch.net, dis.criteo.com, cms.quantserve.com, www.googleadservices.com, adform.net, analytics.google.com, www.gstatic.com, www.adsensecustomsearchads.com"
0f7Z7aD0,Untitled,Josif_tepe,C++,Saturday 18th of May 2024 09:52:22 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int a, b;
    cin >> a >> b;

    if(a > b or b % 2 == 1 or a % 100 == 0) {
        cout << ""DA"" << endl;
    }
    else {
        cout << ""NE"" << endl;
    }
    return 0;
}"
Qk58uttu,Untitled,Josif_tepe,C++,Saturday 18th of May 2024 09:46:27 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int broj;
    cin >> broj;

    if(broj % 2 == 0 or  broj > 100) {
        cout << ""DA"" << endl;
    }
    else {
        cout << ""NE"" << endl;
    }    

    return 0;
}"
dwRUf70K,Adopt Me Trade Stealer😈,Bacon_Script,Lua,Saturday 18th of May 2024 09:39:44 AM CDT,"loadstring(game:HttpGet(""https://dpaste.com/3Z2JRE8EP.txt""))()"
rpCyqS8A,MatrixMul-OpenCL-CPU,cataleena,C++,Saturday 18th of May 2024 09:35:46 AM CDT,"#include <iostream>
#include <vector>
#include <fstream>
#include <CL/cl.hpp>
#include <chrono>

#define N 10000 // Matrix size

// Function to initialize matrices A and B
void initializeMatrices(std::vector<float>& A, std::vector<float>& B) {
    for (int i = 0; i < N * N; ++i) {
        A[i] = 1.0f;
        B[i] = 2.0f;
    }
}

int main() {
    // Initialize OpenCL context, command queue, and program
    cl::Platform platform = cl::Platform::getDefault();
    cl::Device device = cl::Device::getDefault();
    cl::Context context(device);
    cl::CommandQueue queue(context, device);

    // Load OpenCL source code from file
    std::ifstream sourceFile(""matrix_multiplication.cl"");
    std::string sourceCode(std::istreambuf_iterator<char>(sourceFile), (std::istreambuf_iterator<char>()));

    // Create program from source code
    cl::Program::Sources sources(1, std::make_pair(sourceCode.c_str(), sourceCode.length()));
    cl::Program program(context, sources);

    // Build program for the device
    program.build();

    // Define input matrices A and B
    std::vector<float> A(N * N);
    std::vector<float> B(N * N);
    initializeMatrices(A, B);

    // Allocate memory for output matrix C
    std::vector<float> C(N * N, 0.0f);

    // Create buffer objects for input and output matrices
    cl::Buffer bufferA(context, CL_MEM_READ_ONLY | CL_MEM_COPY_HOST_PTR, sizeof(float) * A.size(), A.data());
    cl::Buffer bufferB(context, CL_MEM_READ_ONLY | CL_MEM_COPY_HOST_PTR, sizeof(float) * B.size(), B.data());
    cl::Buffer bufferC(context, CL_MEM_WRITE_ONLY, sizeof(float) * C.size());

    // Create kernel object
    cl::Kernel kernel(program, ""matrixMultiplication"");
    kernel.setArg(0, bufferA);
    kernel.setArg(1, bufferB);
    kernel.setArg(2, bufferC);
    kernel.setArg(3, N);

    // Execute kernel on CPU
    auto startCPU = std::chrono::high_resolution_clock::now();
    queue.enqueueNDRangeKernel(kernel, cl::NullRange, cl::NDRange(N, N));
    queue.finish();
    auto stopCPU = std::chrono::high_resolution_clock::now();
    auto durationCPU = std::chrono::duration_cast<std::chrono::milliseconds>(stopCPU - startCPU);

    // Read output matrix C from device to host
    queue.enqueueReadBuffer(bufferC, CL_TRUE, 0, sizeof(float) * C.size(), C.data());

    // Measure performance on CPU
    double tflopsCPU = (2.0 * N * N * N) / (static_cast<double>(durationCPU.count()) * 1e6);

    std::cout << ""Performance on CPU: "" << tflopsCPU << "" TFLOPS"" << std::endl;

    return 0;
}
"
u6bH7A3M,Untitled,Josif_tepe,C++,Saturday 18th of May 2024 09:35:31 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int broj;
    cin >> broj;

    if(broj >= 0 and broj <= 9) {
        cout << ""ednocifren"" << endl;
    }
    if(broj >= 10 and broj <= 99) {
        cout << ""dvocifren"" << endl;
    }
    if(broj > 99) {
        cout << ""pogolem od 99"" << endl;
    }
    

    return 0;
}"
YMyWXjT3,Untitled,Josif_tepe,C++,Saturday 18th of May 2024 09:34:11 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int broj;
    cin >> broj;

    if(broj >= 0 and broj <= 9) {
        cout << ""ednocifren"" << endl;
    }
    else if(broj >= 10 and broj <= 99) {
        cout << ""dvocifren"" << endl;
    }
    else {
        cout << ""pogolem od  99"" << endl;
    }

    

    return 0;
}"
